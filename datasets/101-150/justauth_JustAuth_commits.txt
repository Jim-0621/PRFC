File: src/main/java/me/zhyd/oauth/request/AbstractAuthDingtalkRequest.java
Patch:
@@ -34,12 +34,12 @@ public AbstractAuthDingtalkRequest(AuthConfig config, AuthSource source, AuthSta
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return AuthToken.builder().accessCode(authCallback.getCode()).build();
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String code = authToken.getAccessCode();
         JSONObject param = new JSONObject();
         param.put("tmp_auth_code", code);

File: src/main/java/me/zhyd/oauth/request/AbstractAuthMicrosoftRequest.java
Patch:
@@ -39,7 +39,7 @@ public AbstractAuthMicrosoftRequest(AuthConfig config, AuthSource source, AuthSt
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return getToken(accessTokenUrl(authCallback.getCode()));
     }
 
@@ -80,7 +80,7 @@ private void checkResponse(JSONObject object) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String token = authToken.getAccessToken();
         String tokenType = authToken.getTokenType();
         String jwt = tokenType + " " + token;

File: src/main/java/me/zhyd/oauth/request/AbstractAuthWeChatEnterpriseRequest.java
Patch:
@@ -34,7 +34,7 @@ public AbstractAuthWeChatEnterpriseRequest(AuthConfig config, AuthSource source,
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doGetAuthorizationCode(accessTokenUrl(null));
 
         JSONObject object = this.checkResponse(response);
@@ -47,7 +47,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject object = this.checkResponse(response);
 

File: src/main/java/me/zhyd/oauth/request/AuthAfDianRequest.java
Patch:
@@ -30,7 +30,7 @@ public AuthAfDianRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> params = new HashMap<>();
         params.put("grant_type", "authorization_code");
         params.put("client_id", config.getClientId());
@@ -44,7 +44,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         return AuthUser.builder()
             .uuid(authToken.getUserId())
             .gender(AuthUserGender.UNKNOWN)

File: src/main/java/me/zhyd/oauth/request/AuthAlipayRequest.java
Patch:
@@ -147,7 +147,7 @@ protected void checkCode(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         AlipaySystemOauthTokenRequest request = new AlipaySystemOauthTokenRequest();
         request.setGrantType("authorization_code");
         request.setCode(authCallback.getAuth_code());
@@ -200,7 +200,7 @@ public AuthResponse<AuthToken> refresh(AuthToken authToken) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         AlipayUserInfoShareRequest request = new AlipayUserInfoShareRequest();
         AlipayUserInfoShareResponse response = null;

File: src/main/java/me/zhyd/oauth/request/AuthAliyunRequest.java
Patch:
@@ -26,7 +26,7 @@ public AuthAliyunRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         return AuthToken.builder()
@@ -39,7 +39,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfo = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(userInfo);
         return AuthUser.builder()

File: src/main/java/me/zhyd/oauth/request/AuthAmazonRequest.java
Patch:
@@ -77,7 +77,7 @@ public String authorize(String state) {
      * @return access token
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> form = new HashMap<>(9);
         form.put("grant_type", "authorization_code");
         form.put("code", authCallback.getCode());
@@ -140,7 +140,7 @@ private void checkResponse(JSONObject jsonObject) {
      * @return AuthUser
      */
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         this.checkToken(accessToken);
 

File: src/main/java/me/zhyd/oauth/request/AuthAppleRequest.java
Patch:
@@ -50,7 +50,7 @@ public String authorize(String state) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         if (!StringUtils.isEmpty(authCallback.getError())) {
             throw new AuthException(authCallback.getError());
         }
@@ -76,7 +76,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         Base64.Decoder urlDecoder = Base64.getUrlDecoder();
         String[] idToken = authToken.getIdToken().split("\\.");
         String payload = new String(urlDecoder.decode(idToken[1]));

File: src/main/java/me/zhyd/oauth/request/AuthBaiduRequest.java
Patch:
@@ -34,7 +34,7 @@ public AuthBaiduRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         return getAuthToken(response);
     }
@@ -48,7 +48,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
      * @return AuthUser
      */
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfo = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(userInfo);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthCodingRequest.java
Patch:
@@ -30,7 +30,7 @@ public AuthCodingRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doGetAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
@@ -42,7 +42,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(response);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthCsdnRequest.java
Patch:
@@ -28,15 +28,15 @@ public AuthCsdnRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
         return AuthToken.builder().accessToken(accessTokenObject.getString("access_token")).build();
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(response);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthDouyinRequest.java
Patch:
@@ -34,12 +34,12 @@ public AuthDouyinRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return this.getToken(accessTokenUrl(authCallback.getCode()));
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject userInfoObject = JSONObject.parseObject(response);
         this.checkResponse(userInfoObject);

File: src/main/java/me/zhyd/oauth/request/AuthElemeRequest.java
Patch:
@@ -44,7 +44,7 @@ public AuthElemeRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> form = new HashMap<>(7);
         form.put("client_id", config.getClientId());
         form.put("redirect_uri", config.getRedirectUri());
@@ -66,7 +66,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         Map<String, Object> parameters = new HashMap<>(4);
         // 获取商户账号信息的API接口名称
         String action = "eleme.user.getUser";

File: src/main/java/me/zhyd/oauth/request/AuthFacebookRequest.java
Patch:
@@ -32,7 +32,7 @@ public AuthFacebookRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
@@ -44,7 +44,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfo = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(userInfo);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthFeishuRequest.java
Patch:
@@ -66,7 +66,7 @@ private String getAppAccessToken() {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         JSONObject requestObject = new JSONObject();
         requestObject.put("app_access_token", this.getAppAccessToken());
         requestObject.put("grant_type", "authorization_code");
@@ -76,7 +76,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         String response = new HttpUtils(config.getHttpConfig()).get(source.userInfo(), null, new HttpHeader()
             .add("Content-Type", "application/json")

File: src/main/java/me/zhyd/oauth/request/AuthFigmaRequest.java
Patch:
@@ -36,7 +36,7 @@ public String authorize(String state) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         HttpHeader header = new HttpHeader()
             .add("content-type", "application/x-www-form-urlencoded")
             .add("Authorization", "Basic " + Base64Utils.encode(config.getClientId().concat(":").concat(config.getClientSecret())));
@@ -86,7 +86,7 @@ protected String refreshTokenUrl(String refreshToken) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         HttpHeader header = new HttpHeader().add("Authorization", "Bearer " + authToken.getAccessToken());
         String response = new HttpUtils(config.getHttpConfig()).get(super.userInfoUrl(authToken), null, header, false).getBody();
         JSONObject dataObj = JSONObject.parseObject(response);

File: src/main/java/me/zhyd/oauth/request/AuthGiteeRequest.java
Patch:
@@ -30,7 +30,7 @@ public AuthGiteeRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
@@ -44,7 +44,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfo = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(userInfo);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthGithubRequest.java
Patch:
@@ -35,7 +35,7 @@ public AuthGithubRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         Map<String, String> res = GlobalAuthUtils.parseStringToMap(response);
 
@@ -49,7 +49,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         HttpHeader header = new HttpHeader();
         header.add("Authorization", "token " + authToken.getAccessToken());
         String response = new HttpUtils(config.getHttpConfig()).get(UrlBuilder.fromBaseUrl(source.userInfo()).build(), null, header, false).getBody();

File: src/main/java/me/zhyd/oauth/request/AuthGitlabRequest.java
Patch:
@@ -30,7 +30,7 @@ public AuthGitlabRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject object = JSONObject.parseObject(response);
 
@@ -46,7 +46,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(response);
 

File: src/main/java/me/zhyd/oauth/request/AuthGoogleRequest.java
Patch:
@@ -33,7 +33,7 @@ public AuthGoogleRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
@@ -47,7 +47,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         HttpHeader httpHeader = new HttpHeader();
         httpHeader.add("Authorization", "Bearer " + authToken.getAccessToken());
         String userInfo = new HttpUtils(config.getHttpConfig()).post(userInfoUrl(authToken), null, httpHeader).getBody();

File: src/main/java/me/zhyd/oauth/request/AuthHuaweiRequest.java
Patch:
@@ -46,7 +46,7 @@ public AuthHuaweiRequest(AuthConfig config, AuthStateCache authStateCache) {
      * @see AuthDefaultRequest#authorize(String)
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> form = new HashMap<>(8);
         form.put("grant_type", "authorization_code");
         form.put("code", authCallback.getAuthorization_code());
@@ -66,7 +66,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
      * @see AuthDefaultRequest#getAccessToken(AuthCallback)
      */
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         Map<String, String> form = new HashMap<>(7);
         form.put("nsp_ts", System.currentTimeMillis() + "");
         form.put("access_token", authToken.getAccessToken());

File: src/main/java/me/zhyd/oauth/request/AuthJdRequest.java
Patch:
@@ -39,7 +39,7 @@ public AuthJdRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
 
         Map<String, String> params = new HashMap<>(7);
         params.put("app_key", config.getClientId());
@@ -61,7 +61,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         UrlBuilder urlBuilder = UrlBuilder.fromBaseUrl(source.userInfo())
             .queryParam("access_token", authToken.getAccessToken())
             .queryParam("app_key", config.getClientId())

File: src/main/java/me/zhyd/oauth/request/AuthLineRequest.java
Patch:
@@ -36,7 +36,7 @@ public AuthLineRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> params = new HashMap<>();
         params.put("grant_type", "authorization_code");
         params.put("code", authCallback.getCode());
@@ -56,7 +56,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfo = new HttpUtils(config.getHttpConfig()).get(source.userInfo(), null, new HttpHeader()
             .add("Content-Type", "application/x-www-form-urlencoded")
             .add("Authorization", "Bearer ".concat(authToken.getAccessToken())), false).getBody();

File: src/main/java/me/zhyd/oauth/request/AuthLinkedinRequest.java
Patch:
@@ -36,12 +36,12 @@ public AuthLinkedinRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return this.getToken(accessTokenUrl(authCallback.getCode()));
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         HttpHeader httpHeader = new HttpHeader();
         httpHeader.add("Host", "api.linkedin.com");

File: src/main/java/me/zhyd/oauth/request/AuthMeituanRequest.java
Patch:
@@ -34,7 +34,7 @@ public AuthMeituanRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> form = new HashMap<>(7);
         form.put("app_id", config.getClientId());
         form.put("secret", config.getClientSecret());
@@ -54,7 +54,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         Map<String, String> form = new HashMap<>(5);
         form.put("app_id", config.getClientId());
         form.put("secret", config.getClientSecret());

File: src/main/java/me/zhyd/oauth/request/AuthMiRequest.java
Patch:
@@ -38,7 +38,7 @@ public AuthMiRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return getToken(accessTokenUrl(authCallback.getCode()));
     }
 
@@ -64,7 +64,7 @@ private AuthToken getToken(String accessTokenUrl) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         // 获取用户信息
         String userResponse = doGetUserInfo(authToken);
 

File: src/main/java/me/zhyd/oauth/request/AuthOktaRequest.java
Patch:
@@ -40,7 +40,7 @@ public AuthOktaRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String tokenUrl = accessTokenUrl(authCallback.getCode());
         return getAuthToken(tokenUrl);
     }
@@ -79,7 +79,7 @@ public AuthResponse<AuthToken> refresh(AuthToken authToken) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         HttpHeader header = new HttpHeader()
             .add("Authorization", "Bearer " + authToken.getAccessToken());
         String response = new HttpUtils(config.getHttpConfig()).post(userInfoUrl(authToken), null, header, false).getBody();

File: src/main/java/me/zhyd/oauth/request/AuthOschinaRequest.java
Patch:
@@ -28,7 +28,7 @@ public AuthOschinaRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
@@ -41,7 +41,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(response);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthPinterestRequest.java
Patch:
@@ -36,7 +36,7 @@ public AuthPinterestRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         this.checkResponse(accessTokenObject);
@@ -47,7 +47,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userinfoUrl = userInfoUrl(authToken);
         // TODO: 是否需要 .setFollowRedirects(true)
         String response = new HttpUtils(config.getHttpConfig()).get(userinfoUrl).getBody();

File: src/main/java/me/zhyd/oauth/request/AuthProginnRequest.java
Patch:
@@ -34,7 +34,7 @@ public AuthProginnRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> params = new HashMap<>();
         params.put("code", authCallback.getCode());
         params.put("client_id", config.getClientId());
@@ -54,7 +54,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfo = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(userInfo);
         this.checkResponse(object);

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -33,7 +33,7 @@ public AuthQqRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doGetAuthorizationCode(authCallback.getCode());
         return getAuthToken(response);
     }
@@ -45,7 +45,7 @@ public AuthResponse<AuthToken> refresh(AuthToken authToken) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String openId = this.getOpenId(authToken);
         String response = doGetUserInfo(authToken);
         JSONObject object = JSONObject.parseObject(response);

File: src/main/java/me/zhyd/oauth/request/AuthRenrenRequest.java
Patch:
@@ -38,12 +38,12 @@ public AuthRenrenRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return this.getToken(accessTokenUrl(authCallback.getCode()));
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doGetUserInfo(authToken);
         JSONObject userObj = JSONObject.parseObject(response).getJSONObject("response");
 

File: src/main/java/me/zhyd/oauth/request/AuthSlackRequest.java
Patch:
@@ -35,7 +35,7 @@ public AuthSlackRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         HttpHeader header = new HttpHeader()
             .add("Content-Type", "application/x-www-form-urlencoded");
         String response = new HttpUtils(config.getHttpConfig())
@@ -51,7 +51,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         HttpHeader header = new HttpHeader()
             .add("Content-Type", "application/x-www-form-urlencoded")
             .add("Authorization", "Bearer ".concat(authToken.getAccessToken()));

File: src/main/java/me/zhyd/oauth/request/AuthStackOverflowRequest.java
Patch:
@@ -37,7 +37,7 @@ public AuthStackOverflowRequest(AuthConfig config, AuthStateCache authStateCache
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String accessTokenUrl = accessTokenUrl(authCallback.getCode());
         Map<String, String> form = MapUtil.parseStringToMap(accessTokenUrl, false);
         HttpHeader httpHeader = new HttpHeader();
@@ -54,7 +54,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userInfoUrl = UrlBuilder.fromBaseUrl(this.source.userInfo())
             .queryParam("access_token", authToken.getAccessToken())
             .queryParam("site", "stackoverflow")

File: src/main/java/me/zhyd/oauth/request/AuthTaobaoRequest.java
Patch:
@@ -33,7 +33,7 @@ public AuthTaobaoRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return AuthToken.builder().accessCode(authCallback.getCode()).build();
     }
 
@@ -58,7 +58,7 @@ private void checkResponse(JSONObject object) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String response = doPostAuthorizationCode(authToken.getAccessCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         if (accessTokenObject.containsKey("error")) {

File: src/main/java/me/zhyd/oauth/request/AuthTeambitionRequest.java
Patch:
@@ -38,7 +38,7 @@ public AuthTeambitionRequest(AuthConfig config, AuthStateCache authStateCache) {
      * @return 所有信息
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> form = new HashMap<>(7);
         form.put("client_id", config.getClientId());
         form.put("client_secret", config.getClientSecret());
@@ -57,7 +57,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
 
         HttpHeader httpHeader = new HttpHeader();

File: src/main/java/me/zhyd/oauth/request/AuthToutiaoRequest.java
Patch:
@@ -29,7 +29,7 @@ public AuthToutiaoRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doGetAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
 
@@ -43,7 +43,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String userResponse = doGetUserInfo(authToken);
 
         JSONObject userProfile = JSONObject.parseObject(userResponse);

File: src/main/java/me/zhyd/oauth/request/AuthTwitterRequest.java
Patch:
@@ -88,7 +88,7 @@ public AuthToken getRequestToken() {
      * @return access token
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> oauthParams = buildOauthParams();
         oauthParams.put("oauth_token", authCallback.getOauth_token());
         oauthParams.put("oauth_verifier", authCallback.getOauth_verifier());
@@ -115,7 +115,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         Map<String, String> queryParams = new HashMap<>(5);
         queryParams.put("include_entities", Boolean.toString(true));
         queryParams.put("include_email", Boolean.toString(true));

File: src/main/java/me/zhyd/oauth/request/AuthWeChatEnterpriseThirdQrcodeRequest.java
Patch:
@@ -56,7 +56,7 @@ public AuthResponse<AuthUser> login(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         try {
             String response = doGetAuthorizationCode(accessTokenUrl());
             JSONObject object = this.checkResponse(response);
@@ -89,7 +89,7 @@ protected String accessTokenUrl() {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         JSONObject response = this.checkResponse(doGetUserInfo(authToken));
         return AuthUser.builder()
             .rawUserInfo(response)

File: src/main/java/me/zhyd/oauth/request/AuthWeChatMpRequest.java
Patch:
@@ -36,12 +36,12 @@ public AuthWeChatMpRequest(AuthConfig config, AuthStateCache authStateCache) {
      * @return 所有信息
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return this.getToken(accessTokenUrl(authCallback.getCode()));
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String openId = authToken.getOpenId();
 
         String scope = authToken.getScope();

File: src/main/java/me/zhyd/oauth/request/AuthWeChatOpenRequest.java
Patch:
@@ -36,12 +36,12 @@ public AuthWeChatOpenRequest(AuthConfig config, AuthStateCache authStateCache) {
      * @return 所有信息
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return this.getToken(accessTokenUrl(authCallback.getCode()));
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String openId = authToken.getOpenId();
 
         String response = doGetUserInfo(authToken);

File: src/main/java/me/zhyd/oauth/request/AuthWeiboRequest.java
Patch:
@@ -33,7 +33,7 @@ public AuthWeiboRequest(AuthConfig config, AuthStateCache authStateCache) {
     }
 
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         String response = doPostAuthorizationCode(authCallback.getCode());
         JSONObject accessTokenObject = JSONObject.parseObject(response);
         if (accessTokenObject.containsKey("error")) {
@@ -48,7 +48,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         String uid = authToken.getUid();
         String oauthParam = String.format("uid=%s&access_token=%s", uid, accessToken);

File: src/main/java/me/zhyd/oauth/request/AuthXmlyRequest.java
Patch:
@@ -42,7 +42,7 @@ public AuthXmlyRequest(AuthConfig config, AuthStateCache authStateCache) {
      * @see AuthDefaultRequest#authorize(String)
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         Map<String, String> map = new HashMap<>(9);
         map.put("code", authCallback.getCode());
         map.put("client_id", config.getClientId());

File: src/test/java/me/zhyd/oauth/request/AuthExtendRequest.java
Patch:
@@ -36,7 +36,7 @@ public AuthExtendRequest(AuthConfig config, AuthStateCache authStateCache) {
      * @see AuthDefaultRequest#authorize(String)
      */
     @Override
-    protected AuthToken getAccessToken(AuthCallback authCallback) {
+    public AuthToken getAccessToken(AuthCallback authCallback) {
         return AuthToken.builder()
             .openId("openId")
             .expireIn(1000)
@@ -56,7 +56,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
      * @see AuthDefaultRequest#getAccessToken(AuthCallback)
      */
     @Override
-    protected AuthUser getUserInfo(AuthToken authToken) {
+    public AuthUser getUserInfo(AuthToken authToken) {
         return AuthUser.builder()
             .username("test")
             .nickname("test")

File: src/main/java/me/zhyd/oauth/request/AbstractAuthMicrosoftRequest.java
Patch:
@@ -111,8 +111,8 @@ protected AuthUser getUserInfo(AuthToken authToken) {
      * @return AuthResponse
      */
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(getToken(refreshTokenUrl(authToken.getRefreshToken())))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthAlipayRequest.java
Patch:
@@ -175,7 +175,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
      * @return AuthResponse
      */
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         AlipaySystemOauthTokenRequest request = new AlipaySystemOauthTokenRequest();
         request.setGrantType("refresh_token");
         request.setRefreshToken(authToken.getRefreshToken());
@@ -188,7 +188,7 @@ public AuthResponse refresh(AuthToken authToken) {
         if (!response.isSuccess()) {
             throw new AuthException(response.getSubMsg());
         }
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .accessToken(response.getAccessToken())

File: src/main/java/me/zhyd/oauth/request/AuthAmazonRequest.java
Patch:
@@ -94,13 +94,13 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         Map<String, String> form = new HashMap<>(7);
         form.put("grant_type", "refresh_token");
         form.put("refresh_token", authToken.getRefreshToken());
         form.put("client_id", config.getClientId());
         form.put("client_secret", config.getClientSecret());
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(getToken(form, this.source.refresh()))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthBaiduRequest.java
Patch:
@@ -81,15 +81,15 @@ public AuthResponse revoke(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         String refreshUrl = UrlBuilder.fromBaseUrl(this.source.refresh())
             .queryParam("grant_type", "refresh_token")
             .queryParam("refresh_token", authToken.getRefreshToken())
             .queryParam("client_id", this.config.getClientId())
             .queryParam("client_secret", this.config.getClientSecret())
             .build();
         String response = new HttpUtils(config.getHttpConfig()).get(refreshUrl).getBody();
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(this.getAuthToken(response))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthDouyinRequest.java
Patch:
@@ -59,8 +59,8 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(getToken(refreshTokenUrl(oldToken.getRefreshToken())))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthElemeRequest.java
Patch:
@@ -117,7 +117,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
         Map<String, String> form = new HashMap<>(4);
         form.put("refresh_token", oldToken.getRefreshToken());
         form.put("grant_type", "refresh_token");
@@ -129,7 +129,7 @@ public AuthResponse refresh(AuthToken oldToken) {
 
         this.checkResponse(object);
 
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .accessToken(object.getString("access_token"))

File: src/main/java/me/zhyd/oauth/request/AuthFeishuRequest.java
Patch:
@@ -98,12 +98,12 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         JSONObject requestObject = new JSONObject();
         requestObject.put("app_access_token", this.getAppAccessToken());
         requestObject.put("grant_type", "refresh_token");
         requestObject.put("refresh_token", authToken.getRefreshToken());
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(getToken(requestObject, this.source.refresh()))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthHuaweiRequest.java
Patch:
@@ -99,15 +99,15 @@ protected AuthUser getUserInfo(AuthToken authToken) {
      * @return AuthResponse
      */
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         Map<String, String> form = new HashMap<>(7);
         form.put("client_id", config.getClientId());
         form.put("client_secret", config.getClientSecret());
         form.put("refresh_token", authToken.getRefreshToken());
         form.put("grant_type", "refresh_token");
 
         String response = new HttpUtils(config.getHttpConfig()).post(source.refresh(), form, false).getBody();
-        return AuthResponse.builder().code(SUCCESS.getCode()).data(getAuthToken(response)).build();
+        return AuthResponse.<AuthToken>builder().code(SUCCESS.getCode()).data(getAuthToken(response)).build();
     }
 
     private AuthToken getAuthToken(String response) {

File: src/main/java/me/zhyd/oauth/request/AuthJdRequest.java
Patch:
@@ -103,7 +103,7 @@ private JSONObject getUserDataJsonObject(JSONObject object) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
         Map<String, String> params = new HashMap<>(7);
         params.put("app_key", config.getClientId());
         params.put("app_secret", config.getClientSecret());
@@ -114,7 +114,7 @@ public AuthResponse refresh(AuthToken oldToken) {
 
         this.checkResponse(object);
 
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .accessToken(object.getString("access_token"))

File: src/main/java/me/zhyd/oauth/request/AuthKujialeRequest.java
Patch:
@@ -109,8 +109,8 @@ private String getOpenId(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         String response = new HttpUtils(config.getHttpConfig()).post(refreshTokenUrl(authToken.getRefreshToken())).getBody();
-        return AuthResponse.builder().code(AuthResponseStatus.SUCCESS.getCode()).data(getAuthToken(response)).build();
+        return AuthResponse.<AuthToken>builder().code(AuthResponseStatus.SUCCESS.getCode()).data(getAuthToken(response)).build();
     }
 }

File: src/main/java/me/zhyd/oauth/request/AuthLineRequest.java
Patch:
@@ -88,15 +88,15 @@ public AuthResponse revoke(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
         Map<String, String> params = new HashMap<>();
         params.put("grant_type", "refresh_token");
         params.put("refresh_token", oldToken.getRefreshToken());
         params.put("client_id", config.getClientId());
         params.put("client_secret", config.getClientSecret());
         String response = new HttpUtils(config.getHttpConfig()).post(source.accessToken(), params, false).getBody();
         JSONObject accessTokenObject = JSONObject.parseObject(response);
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .accessToken(accessTokenObject.getString("access_token"))

File: src/main/java/me/zhyd/oauth/request/AuthMeituanRequest.java
Patch:
@@ -78,7 +78,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
         Map<String, String> form = new HashMap<>(7);
         form.put("app_id", config.getClientId());
         form.put("secret", config.getClientSecret());
@@ -90,7 +90,7 @@ public AuthResponse refresh(AuthToken oldToken) {
 
         this.checkResponse(object);
 
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .accessToken(object.getString("access_token"))

File: src/main/java/me/zhyd/oauth/request/AuthMiRequest.java
Patch:
@@ -110,8 +110,8 @@ protected AuthUser getUserInfo(AuthToken authToken) {
      * @return AuthResponse
      */
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(getToken(refreshTokenUrl(authToken.getRefreshToken())))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthOktaRequest.java
Patch:
@@ -64,15 +64,15 @@ private AuthToken getAuthToken(String tokenUrl) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         if (null == authToken.getRefreshToken()) {
-            return AuthResponse.builder()
+            return AuthResponse.<AuthToken>builder()
                 .code(AuthResponseStatus.ILLEGAL_TOKEN.getCode())
                 .msg(AuthResponseStatus.ILLEGAL_TOKEN.getMsg())
                 .build();
         }
         String refreshUrl = refreshTokenUrl(authToken.getRefreshToken());
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(this.getAuthToken(refreshUrl))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -39,9 +39,9 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
         String response = new HttpUtils(config.getHttpConfig()).get(refreshTokenUrl(authToken.getRefreshToken())).getBody();
-        return AuthResponse.builder().code(AuthResponseStatus.SUCCESS.getCode()).data(getAuthToken(response)).build();
+        return AuthResponse.<AuthToken>builder().code(AuthResponseStatus.SUCCESS.getCode()).data(getAuthToken(response)).build();
     }
 
     @Override

File: src/main/java/me/zhyd/oauth/request/AuthRenrenRequest.java
Patch:
@@ -60,8 +60,8 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(SUCCESS.getCode())
             .data(getToken(this.refreshTokenUrl(authToken.getRefreshToken())))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthRequest.java
Patch:
@@ -5,6 +5,7 @@
 import me.zhyd.oauth.model.AuthCallback;
 import me.zhyd.oauth.model.AuthResponse;
 import me.zhyd.oauth.model.AuthToken;
+import me.zhyd.oauth.model.AuthUser;
 
 /**
  * JustAuth {@code Request}公共接口，所有平台的{@code Request}都需要实现该接口
@@ -49,7 +50,7 @@ default String authorize(String state) {
      * @param authCallback 用于接收回调参数的实体
      * @return 返回登录成功后的用户信息
      */
-    default AuthResponse login(AuthCallback authCallback) {
+    default AuthResponse<AuthUser> login(AuthCallback authCallback) {
         throw new AuthException(AuthResponseStatus.NOT_IMPLEMENTED);
     }
 
@@ -69,7 +70,7 @@ default AuthResponse revoke(AuthToken authToken) {
      * @param authToken 登录成功后返回的Token信息
      * @return AuthResponse
      */
-    default AuthResponse refresh(AuthToken authToken) {
+    default AuthResponse<AuthToken> refresh(AuthToken authToken) {
         throw new AuthException(AuthResponseStatus.NOT_IMPLEMENTED);
     }
 }

File: src/main/java/me/zhyd/oauth/request/AuthTaobaoRequest.java
Patch:
@@ -79,11 +79,11 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
         String tokenUrl = refreshTokenUrl(oldToken.getRefreshToken());
         String response = new HttpUtils(config.getHttpConfig()).post(tokenUrl).getBody();
         JSONObject accessTokenObject = JSONObject.parseObject(response);
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(this.getAuthToken(accessTokenObject))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthTeambitionRequest.java
Patch:
@@ -87,7 +87,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
         String uid = oldToken.getUid();
         String refreshToken = oldToken.getRefreshToken();
 
@@ -99,7 +99,7 @@ public AuthResponse refresh(AuthToken oldToken) {
 
         this.checkResponse(refreshTokenObject);
 
-        return AuthResponse.builder()
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .accessToken(refreshTokenObject.getString("access_token"))

File: src/main/java/me/zhyd/oauth/request/AuthWeChatEnterpriseThirdQrcodeRequest.java
Patch:
@@ -41,14 +41,14 @@ public String authorize(String state) {
     }
 
     @Override
-    public AuthResponse login(AuthCallback authCallback) {
+    public AuthResponse<AuthUser> login(AuthCallback authCallback) {
         try {
             if (!config.isIgnoreCheckState()) {
                 AuthChecker.checkState(authCallback.getState(), source, authStateCache);
             }
             AuthToken authToken = this.getAccessToken(authCallback);
             AuthUser user = this.getUserInfo(authToken);
-            return AuthResponse.builder().code(AuthResponseStatus.SUCCESS.getCode()).data(user).build();
+            return AuthResponse.<AuthUser>builder().code(AuthResponseStatus.SUCCESS.getCode()).data(user).build();
         } catch (Exception e) {
             Log.error("Failed to login with oauth authorization.", e);
             return this.responseError(e);

File: src/main/java/me/zhyd/oauth/request/AuthWeChatMpRequest.java
Patch:
@@ -79,8 +79,8 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(this.getToken(refreshTokenUrl(oldToken.getRefreshToken())))
             .build();

File: src/main/java/me/zhyd/oauth/request/AuthWeChatOpenRequest.java
Patch:
@@ -69,8 +69,8 @@ protected AuthUser getUserInfo(AuthToken authToken) {
     }
 
     @Override
-    public AuthResponse refresh(AuthToken oldToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken oldToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(this.getToken(refreshTokenUrl(oldToken.getRefreshToken())))
             .build();

File: src/test/java/me/zhyd/oauth/request/AuthExtendRequest.java
Patch:
@@ -87,8 +87,8 @@ public AuthResponse revoke(AuthToken authToken) {
      * @return AuthResponse
      */
     @Override
-    public AuthResponse refresh(AuthToken authToken) {
-        return AuthResponse.builder()
+    public AuthResponse<AuthToken> refresh(AuthToken authToken) {
+        return AuthResponse.<AuthToken>builder()
             .code(AuthResponseStatus.SUCCESS.getCode())
             .data(AuthToken.builder()
                 .openId("openId")

File: src/test/java/me/zhyd/oauth/request/AuthExtendRequestTest.java
Patch:
@@ -45,10 +45,10 @@ public void login() {
             .code("code")
             .state(state)
             .build();
-        AuthResponse response = request.login(callback);
+        AuthResponse<AuthUser> response = request.login(callback);
         Assert.assertNotNull(response);
 
-        AuthUser user = (AuthUser) response.getData();
+        AuthUser user = response.getData();
         Assert.assertNotNull(user);
         System.out.println(JSON.toJSONString(user));
     }
@@ -74,7 +74,7 @@ public void refresh() {
             .redirectUri("http://redirectUri")
             .build());
 
-        AuthResponse response = request.refresh(AuthToken.builder().build());
+        AuthResponse<AuthToken> response = request.refresh(AuthToken.builder().build());
         Assert.assertNotNull(response);
         System.out.println(JSON.toJSONString(response.getData()));
 

File: src/main/java/me/zhyd/oauth/request/AuthAppleRequest.java
Patch:
@@ -51,7 +51,7 @@ public String authorize(String state) {
 
     @Override
     protected AuthToken getAccessToken(AuthCallback authCallback) {
-        if (authCallback.getError() != null) {
+        if (!StringUtils.isEmpty(authCallback.getError())) {
             throw new AuthException(authCallback.getError());
         }
         this.config.setClientSecret(this.getToken());
@@ -67,7 +67,7 @@ protected AuthToken getAccessToken(AuthCallback authCallback) {
             .idToken(accessTokenObject.getString("id_token"));
         if (!StringUtils.isEmpty(authCallback.getUser())) {
             try {
-                AppleUserInfo userInfo = JSONObject.parseObject(response, AppleUserInfo.class);
+                AppleUserInfo userInfo = JSONObject.parseObject(authCallback.getUser(), AppleUserInfo.class);
                 builder.username(userInfo.getName().getFirstName() + " " + userInfo.getName().getLastName());
             } catch (Exception ignored) {
             }

File: src/main/java/me/zhyd/oauth/request/AuthTwitterRequest.java
Patch:
@@ -69,9 +69,7 @@ public AuthToken getRequestToken() {
 
         HttpHeader httpHeader = new HttpHeader();
         httpHeader.add("Authorization", header);
-        httpHeader.add("User-Agent", "themattharris' HTTP Client");
-        httpHeader.add("Host", "api.twitter.com");
-        httpHeader.add("Accept", "*/*");
+        httpHeader.add("User-Agent", "'JustAuth' HTTP Client Simple-Http");
         String requestToken = new HttpUtils(config.getHttpConfig()).post(baseUrl, null, httpHeader).getBody();
 
         Map<String, String> res = MapUtil.parseStringToMap(requestToken, false);

File: src/main/java/me/zhyd/oauth/utils/GlobalAuthUtils.java
Patch:
@@ -149,7 +149,7 @@ public static boolean isHttpProtocol(String url) {
         if (StringUtils.isEmpty(url)) {
             return false;
         }
-        return url.startsWith("http://");
+        return url.startsWith("http://") || url.startsWith("http%3A%2F%2F");
     }
 
     /**
@@ -162,7 +162,7 @@ public static boolean isHttpsProtocol(String url) {
         if (StringUtils.isEmpty(url)) {
             return false;
         }
-        return url.startsWith("https://");
+        return url.startsWith("https://") || url.startsWith("https%3A%2F%2F");
     }
 
     /**

File: src/main/java/me/zhyd/oauth/request/AuthCodingRequest.java
Patch:
@@ -85,7 +85,7 @@ private void checkResponse(JSONObject object) {
      */
     @Override
     public String authorize(String state) {
-        return UrlBuilder.fromBaseUrl(String.format(source.authorize(), config.getCodingGroupName()))
+        return UrlBuilder.fromBaseUrl(String.format(source.authorize(), config.getDomainPrefix()))
             .queryParam("response_type", "code")
             .queryParam("client_id", config.getClientId())
             .queryParam("redirect_uri", config.getRedirectUri())
@@ -102,7 +102,7 @@ public String authorize(String state) {
      */
     @Override
     public String accessTokenUrl(String code) {
-        return UrlBuilder.fromBaseUrl(String.format(source.accessToken(), config.getCodingGroupName()))
+        return UrlBuilder.fromBaseUrl(String.format(source.accessToken(), config.getDomainPrefix()))
             .queryParam("code", code)
             .queryParam("client_id", config.getClientId())
             .queryParam("client_secret", config.getClientSecret())
@@ -119,7 +119,7 @@ public String accessTokenUrl(String code) {
      */
     @Override
     public String userInfoUrl(AuthToken authToken) {
-        return UrlBuilder.fromBaseUrl(String.format(source.userInfo(), config.getCodingGroupName()))
+        return UrlBuilder.fromBaseUrl(String.format(source.userInfo(), config.getDomainPrefix()))
             .queryParam("access_token", authToken.getAccessToken())
             .build();
     }

File: src/main/java/me/zhyd/oauth/utils/AuthChecker.java
Patch:
@@ -35,8 +35,8 @@ public static boolean isSupportedAuth(AuthConfig config, AuthSource source) {
         if (isSupported && AuthDefaultSource.WECHAT_ENTERPRISE == source) {
             isSupported = StringUtils.isNotEmpty(config.getAgentId());
         }
-        if (isSupported && AuthDefaultSource.CODING == source) {
-            isSupported = StringUtils.isNotEmpty(config.getCodingGroupName());
+        if (isSupported && (AuthDefaultSource.CODING == source || AuthDefaultSource.OKTA == source)) {
+            isSupported = StringUtils.isNotEmpty(config.getDomainPrefix());
         }
         if (isSupported && AuthDefaultSource.XMLY == source) {
             isSupported = StringUtils.isNotEmpty(config.getDeviceId()) && null != config.getClientOsType();

File: src/main/java/me/zhyd/oauth/request/AuthWeChatMpRequest.java
Patch:
@@ -124,8 +124,8 @@ public String authorize(String state) {
             .queryParam("appid", config.getClientId())
             .queryParam("redirect_uri", GlobalAuthUtils.urlEncode(config.getRedirectUri()))
             .queryParam("response_type", "code")
-            .queryParam("state", getRealState(state).concat("#wechat_redirect"))
             .queryParam("scope", this.getScopes(",", false, AuthScopeUtils.getDefaultScopes(AuthWechatMpScope.values())))
+            .queryParam("state", getRealState(state).concat("#wechat_redirect"))
             .build();
     }
 

File: src/main/java/me/zhyd/oauth/request/AuthDouyinRequest.java
Patch:
@@ -50,7 +50,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
             .avatar(object.getString("avatar"))
             .remark(object.getString("description"))
             .gender(AuthUserGender.getRealGender(object.getString("gender")))
-            .location(String.format("%s %s %s", object.getString("country"), object.getString("object"), object.getString("city")))
+            .location(String.format("%s %s %s", object.getString("country"), object.getString("province"), object.getString("city")))
             .token(authToken)
             .source(source.toString())
             .build();

File: src/main/java/me/zhyd/oauth/model/AuthCallback.java
Patch:
@@ -48,12 +48,13 @@ public class AuthCallback implements Serializable {
      *
      * @since 1.13.0
      */
-    private String oauthToken;
+    private String oauth_token;
 
     /**
      * Twitter回调后返回的oauth_verifier
      *
      * @since 1.13.0
      */
-    private String oauthVerifier;
+    private String oauth_verifier;
+
 }

File: src/main/java/me/zhyd/oauth/model/AuthResponse.java
Patch:
@@ -14,6 +14,8 @@
 @Getter
 @Setter
 @Builder
+@NoArgsConstructor
+@AllArgsConstructor
 public class AuthResponse<T> implements Serializable {
     /**
      * 授权响应状态码

File: src/main/java/me/zhyd/oauth/model/AuthToken.java
Patch:
@@ -1,8 +1,6 @@
 package me.zhyd.oauth.model;
 
-import lombok.Builder;
-import lombok.Getter;
-import lombok.Setter;
+import lombok.*;
 
 import java.io.Serializable;
 
@@ -15,6 +13,8 @@
 @Getter
 @Setter
 @Builder
+@NoArgsConstructor
+@AllArgsConstructor
 public class AuthToken implements Serializable {
     private String accessToken;
     private int expireIn;

File: src/main/java/me/zhyd/oauth/request/AuthLinkedinRequest.java
Patch:
@@ -128,7 +128,7 @@ private String getUserEmail(String accessToken) {
         httpHeader.add("Connection", "Keep-Alive");
         httpHeader.add("Authorization", "Bearer " + accessToken);
 
-        String emailResponse = HttpUtil.get("https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))");
+        String emailResponse = HttpUtil.get("https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))", null, httpHeader, false);
         JSONObject emailObj = JSONObject.parseObject(emailResponse);
 
         this.checkResponse(emailObj);

File: src/main/java/me/zhyd/oauth/config/AuthDefaultSource.java
Patch:
@@ -755,7 +755,7 @@ public String refresh() {
     /**
      * 京东
      *
-     * @since 1.15.0-alpha
+     * @since 1.15.0
      */
     JD {
         @Override

File: src/main/java/me/zhyd/oauth/utils/GlobalAuthUtils.java
Patch:
@@ -284,7 +284,7 @@ public static String md5(String str) {
      * @param appSecret 京东应用密钥
      * @param params    签名参数
      * @return 签名后的字符串
-     * @since 1.15.0-alpha
+     * @since 1.15.0
      */
     public static String generateJdSignature(String appSecret, Map<String, Object> params) {
         Map<String, Object> treeMap = new TreeMap<>(params);

File: src/main/java/me/zhyd/oauth/utils/UrlBuilder.java
Patch:
@@ -40,7 +40,7 @@ public static UrlBuilder fromBaseUrl(String baseUrl) {
      * 只读的参数Map
      *
      * @return unmodifiable Map
-     * @since 1.15.0-alpha
+     * @since 1.15.0
      */
     public Map<String, Object> getReadOnlyParams() {
         return Collections.unmodifiableMap(params);

File: src/main/java/me/zhyd/oauth/model/AuthUserGender.java
Patch:
@@ -10,7 +10,7 @@
  * @since 1.8
  */
 public enum AuthUserGender {
-    MALE(1, "男"), FEMALE(0, "女"), UNKNOW(-1, "未知");
+    MALE(1, "男"), FEMALE(0, "女"), UNKNOWN(-1, "未知");
     private int code;
     private String desc;
 
@@ -21,7 +21,7 @@ public enum AuthUserGender {
 
     public static AuthUserGender getRealGender(String code) {
         if (code == null) {
-            return UNKNOW;
+            return UNKNOWN;
         }
         String[] males = {"m", "男", "1", "male"};
         if (Arrays.asList(males).contains(code.toLowerCase())) {
@@ -31,7 +31,7 @@ public static AuthUserGender getRealGender(String code) {
         if (Arrays.asList(females).contains(code.toLowerCase())) {
             return FEMALE;
         }
-        return UNKNOW;
+        return UNKNOWN;
     }
 
     public int getCode() {

File: src/main/java/me/zhyd/oauth/request/AuthCsdnRequest.java
Patch:
@@ -53,7 +53,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .username(object.getString("username"))
                 .remark(object.getString("description"))
                 .blog(object.getString("website"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.CSDN)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthDingTalkRequest.java
Patch:
@@ -63,7 +63,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .uuid(object.getString("unionid"))
                 .nickname(object.getString("nick"))
                 .username(object.getString("nick"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .source(AuthSource.DINGTALK)
                 .token(token)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthDouyinRequest.java
Patch:
@@ -49,7 +49,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .nickname(userInfoObject.getString("nickname"))
                 .avatar(userInfoObject.getString("avatar"))
                 .remark(userInfoObject.getString("description"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.DOUYIN)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthGiteeRequest.java
Patch:
@@ -55,7 +55,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .location(object.getString("address"))
                 .email(object.getString("email"))
                 .remark(object.getString("bio"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.GITEE)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthGithubRequest.java
Patch:
@@ -58,7 +58,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .location(object.getString("location"))
                 .email(object.getString("email"))
                 .remark(object.getString("bio"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.GITHUB)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthGoogleRequest.java
Patch:
@@ -61,7 +61,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .nickname(object.getString("name"))
                 .location(object.getString("locale"))
                 .email(object.getString("email"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.GOOGLE)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthLinkedinRequest.java
Patch:
@@ -81,7 +81,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .avatar(avatar)
                 .email(email)
                 .token(authToken)
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .source(AuthSource.LINKEDIN)
                 .build();
     }

File: src/main/java/me/zhyd/oauth/request/AuthMiRequest.java
Patch:
@@ -78,7 +78,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .nickname(user.getString("miliaoNick"))
                 .avatar(user.getString("miliaoIcon"))
                 .email(user.getString("mail"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.MI)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthMicrosoftRequest.java
Patch:
@@ -83,7 +83,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .nickname(object.getString("displayName"))
                 .location(object.getString("officeLocation"))
                 .email(object.getString("mail"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.MICROSOFT)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthRenrenRequest.java
Patch:
@@ -77,7 +77,7 @@ private String getAvatarUrl(JSONObject userObj) {
     private AuthUserGender getGender(JSONObject userObj) {
         JSONObject basicInformation = userObj.getJSONObject("basicInformation");
         if (Objects.isNull(basicInformation)) {
-            return AuthUserGender.UNKNOW;
+            return AuthUserGender.UNKNOWN;
         }
         return AuthUserGender.getRealGender(basicInformation.getString("sex"));
     }

File: src/main/java/me/zhyd/oauth/request/AuthTaobaoRequest.java
Patch:
@@ -47,7 +47,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .uuid(accessTokenObject.getString("taobao_user_id"))
                 .username(nick)
                 .nickname(nick)
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.TAOBAO)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthTeambitionRequest.java
Patch:
@@ -66,7 +66,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .blog(object.getString("website"))
                 .location(object.getString("location"))
                 .email(object.getString("email"))
-                .gender(AuthUserGender.UNKNOW)
+                .gender(AuthUserGender.UNKNOWN)
                 .token(authToken)
                 .source(AuthSource.TEAMBITION)
                 .build();

File: src/main/java/me/zhyd/oauth/model/AuthUserGender.java
Patch:
@@ -23,12 +23,12 @@ public static AuthUserGender getRealGender(String code) {
         if (code == null) {
             return UNKNOW;
         }
-        String[] males = {"m", "男", "1", "male", "F"};
-        if (Arrays.asList(males).contains(code)) {
+        String[] males = {"m", "男", "1", "male"};
+        if (Arrays.asList(males).contains(code.toLowerCase())) {
             return MALE;
         }
         String[] females = {"f", "女", "0", "female"};
-        if (Arrays.asList(females).contains(code)) {
+        if (Arrays.asList(females).contains(code.toLowerCase())) {
             return FEMALE;
         }
         return UNKNOW;

File: src/main/java/me/zhyd/oauth/utils/UrlBuilder.java
Patch:
@@ -87,7 +87,7 @@ public class UrlBuilder {
     private static final String MICROSOFT_USER_INFO_PATTERN = "{0}";
     private static final String MICROSOFT_REFRESH_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&scope=user.read%20mail.read&redirect_uri={3}&refresh_token={4}&grant_type=refresh_token";
 
-    private static final String MI_AUTHORIZE_PATTERN = "{0}?client_id={1}&redirect_uri={2}&response_type=code&scope=1%203%204%206&state={3}&skip_confirm=false";
+    private static final String MI_AUTHORIZE_PATTERN = "{0}?client_id={1}&redirect_uri={2}&response_type=code&scope=user/profile%20user/openIdV2%20user/phoneAndEmail&state={3}&skip_confirm=false";
     private static final String MI_ACCESS_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&redirect_uri={3}&code={4}&grant_type=authorization_code";
     private static final String MI_USER_INFO_PATTERN = "{0}?clientId={1}&token={2}";
     private static final String MI_REFRESH_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&redirect_uri={3}&refresh_token={4}&grant_type=refresh_token";

File: src/main/java/me/zhyd/oauth/utils/UrlBuilder.java
Patch:
@@ -87,7 +87,7 @@ public class UrlBuilder {
     private static final String MICROSOFT_USER_INFO_PATTERN = "{0}";
     private static final String MICROSOFT_REFRESH_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&scope=user.read%20mail.read&redirect_uri={3}&refresh_token={4}&grant_type=refresh_token";
 
-    private static final String MI_AUTHORIZE_PATTERN = "{0}?client_id={1}&redirect_uri={2}&response_type=code&scope=user/profile%20user/openIdV2%20user/phoneAndEmail&state={3}&skip_confirm=false";
+    private static final String MI_AUTHORIZE_PATTERN = "{0}?client_id={1}&redirect_uri={2}&response_type=code&scope=1%203%204%206&state={3}&skip_confirm=false";
     private static final String MI_ACCESS_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&redirect_uri={3}&code={4}&grant_type=authorization_code";
     private static final String MI_USER_INFO_PATTERN = "{0}?clientId={1}&token={2}";
     private static final String MI_REFRESH_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&redirect_uri={3}&refresh_token={4}&grant_type=refresh_token";

File: src/main/java/me/zhyd/oauth/utils/UrlBuilder.java
Patch:
@@ -58,7 +58,7 @@ public class UrlBuilder {
     private static final String QQ_ACCESS_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&grant_type=authorization_code&code={3}&redirect_uri={4}";
     private static final String QQ_USER_INFO_PATTERN = "{0}?oauth_consumer_key={1}&access_token={2}&openid={3}";
     private static final String QQ_AUTHORIZE_PATTERN = "{0}?client_id={1}&response_type=code&redirect_uri={2}&state={3}";
-    private static final String QQ_OPENID_PATTERN = "{0}?access_token={1}";
+    private static final String QQ_OPENID_PATTERN = "{0}?access_token={1}&unionid=1";
 
     private static final String WECHAT_AUTHORIZE_PATTERN = "{0}?appid={1}&redirect_uri={2}&response_type=code&scope=snsapi_login&state={3}#wechat_redirect";
     private static final String WECHAT_ACCESS_TOKEN_PATTERN = "{0}?appid={1}&secret={2}&code={3}&grant_type=authorization_code";

File: src/main/java/me/zhyd/oauth/authorization/AuthorizationFactory.java
Patch:
@@ -10,7 +10,7 @@
 /**
  * 授权工厂类，负责创建指定平台的授权类获取授权地址
  * <p>
- * 使用策略模式 + 工厂模式 避免大量的if else（swatch）操作
+ * 使用策略模式 + 工厂模式 避免大量的if else（switch）操作
  *
  * @author yadong.zhang (yadong.zhang0415(a)gmail.com)
  * @version 1.0

File: src/main/java/me/zhyd/oauth/request/BaseAuthRequest.java
Patch:
@@ -23,9 +23,11 @@ public abstract class BaseAuthRequest implements AuthRequest {
     public BaseAuthRequest(AuthConfig config, AuthSource source) {
         this.config = config;
         this.source = source;
-        if (!AuthConfigChecker.isSupportedAuth(config)) {
+        if (!AuthConfigChecker.isSupportedAuth(config, source)) {
             throw new AuthException(ResponseStatus.PARAMETER_INCOMPLETE);
         }
+        // 校验配置合法性
+        AuthConfigChecker.check(config, source);
     }
 
     protected abstract AuthToken getAccessToken(String code);

File: src/main/java/me/zhyd/oauth/request/ResponseStatus.java
Patch:
@@ -13,6 +13,7 @@ public enum ResponseStatus {
     UNSUPPORTED(5003, "Unsupported operation"),
     NO_AUTH_SOURCE(5004, "AuthSource cannot be null"),
     UNIDENTIFIED_PLATFORM(5005, "Unidentified platform"),
+    ILLEGAL_REDIRECT_URI(5006, "Illegal redirect uri"),
     ;
 
     private int code;

File: src/main/java/me/zhyd/oauth/utils/UrlBuilder.java
Patch:
@@ -58,7 +58,7 @@ public class UrlBuilder {
     private static final String QQ_ACCESS_TOKEN_PATTERN = "{0}?client_id={1}&client_secret={2}&grant_type=authorization_code&code={3}&redirect_uri={4}";
     private static final String QQ_USER_INFO_PATTERN = "{0}?oauth_consumer_key={1}&access_token={2}&openid={3}";
     private static final String QQ_AUTHORIZE_PATTERN = "{0}?client_id={1}&response_type=code&redirect_uri={2}&state={3}";
-    private static final String QQ_OPENID_PATTERN = "{0}?access_token={1}";
+    private static final String QQ_OPENID_PATTERN = "{0}?access_token={1}&unionid=1";
 
     private static final String WECHAT_AUTHORIZE_PATTERN = "{0}?appid={1}&redirect_uri={2}&response_type=code&scope=snsapi_login&state={3}#wechat_redirect";
     private static final String WECHAT_ACCESS_TOKEN_PATTERN = "{0}?appid={1}&secret={2}&code={3}&grant_type=authorization_code";

File: src/main/java/me/zhyd/oauth/request/AuthDingTalkRequest.java
Patch:
@@ -50,6 +50,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
         object = object.getJSONObject("user_info");
         AuthToken token = AuthToken.builder()
                 .openId(object.getString("openid"))
+                .unionId(object.getString("unionid"))
                 .build();
         return AuthUser.builder()
                 .uuid(object.getString("unionid"))

File: src/main/java/me/zhyd/oauth/request/AuthCodingRequest.java
Patch:
@@ -45,6 +45,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
         if (object.getIntValue("code") != 0) {
             throw new AuthException(object.getString("msg"));
         }
+
         object = object.getJSONObject("data");
         return AuthUser.builder()
                 .uuid(object.getString("id"))

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -59,11 +59,13 @@ protected AuthUser getUserInfo(AuthToken authToken) {
         if (StringUtils.isEmpty(avatar)) {
             avatar = object.getString("figureurl_qq_1");
         }
+
+        String location = String.format("%s-%s", object.getString("province"), object.getString("city"));
         return AuthUser.builder()
                 .username(object.getString("nickname"))
                 .nickname(object.getString("nickname"))
                 .avatar(avatar)
-                .location(object.getString("province") + "-" + object.getString("city"))
+                .location(location)
                 .uuid(openId)
                 .gender(AuthUserGender.getRealGender(object.getString("gender")))
                 .token(authToken)

File: src/main/java/me/zhyd/oauth/request/AuthWeChatRequest.java
Patch:
@@ -42,11 +42,12 @@ protected AuthUser getUserInfo(AuthToken authToken) {
 
         this.checkResponse(object);
 
+        String location = String.format("%s-%s-%s", object.getString("country"), object.getString("province"), object.getString("city"));
         return AuthUser.builder()
                 .username(object.getString("nickname"))
                 .nickname(object.getString("nickname"))
                 .avatar(object.getString("headimgurl"))
-                .location(object.getString("country") + "-" + object.getString("province") + "-" + object.getString("city"))
+                .location(location)
                 .uuid(openId)
                 .gender(AuthUserGender.getRealGender(object.getString("sex")))
                 .token(authToken)
@@ -73,6 +74,7 @@ private void checkResponse(JSONObject object) {
             throw new AuthException(object.getIntValue("errcode"), object.getString("errmsg"));
         }
     }
+
     /**
      * 获取token，适用于获取access_token和刷新token
      *

File: src/main/java/me/zhyd/oauth/model/AuthUserGender.java
Patch:
@@ -10,7 +10,7 @@
  * @since 1.8
  */
 public enum AuthUserGender {
-    MALE(1, "男"), FEMALE(0, "女"), UNKNOW(-1, "");
+    MALE(1, "男"), FEMALE(0, "女"), UNKNOW(-1, "未知");
     private int code;
     private String desc;
 

File: src/main/java/me/zhyd/oauth/request/AuthCsdnRequest.java
Patch:
@@ -8,6 +8,7 @@
 import me.zhyd.oauth.model.AuthSource;
 import me.zhyd.oauth.model.AuthToken;
 import me.zhyd.oauth.model.AuthUser;
+import me.zhyd.oauth.model.AuthUserGender;
 import me.zhyd.oauth.utils.UrlBuilder;
 
 /**
@@ -49,6 +50,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .username(object.getString("username"))
                 .remark(object.getString("description"))
                 .blog(object.getString("website"))
+                .gender(AuthUserGender.UNKNOW)
                 .token(authToken)
                 .source(AuthSource.CSDN)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthGiteeRequest.java
Patch:
@@ -8,6 +8,7 @@
 import me.zhyd.oauth.model.AuthSource;
 import me.zhyd.oauth.model.AuthToken;
 import me.zhyd.oauth.model.AuthUser;
+import me.zhyd.oauth.model.AuthUserGender;
 import me.zhyd.oauth.utils.UrlBuilder;
 
 /**
@@ -52,6 +53,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .location(object.getString("address"))
                 .email(object.getString("email"))
                 .remark(object.getString("bio"))
+                .gender(AuthUserGender.UNKNOW)
                 .token(authToken)
                 .source(AuthSource.GITEE)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthGithubRequest.java
Patch:
@@ -8,6 +8,7 @@
 import me.zhyd.oauth.model.AuthSource;
 import me.zhyd.oauth.model.AuthToken;
 import me.zhyd.oauth.model.AuthUser;
+import me.zhyd.oauth.model.AuthUserGender;
 import me.zhyd.oauth.utils.GlobalAuthUtil;
 import me.zhyd.oauth.utils.UrlBuilder;
 
@@ -55,6 +56,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .location(object.getString("location"))
                 .email(object.getString("email"))
                 .remark(object.getString("bio"))
+                .gender(AuthUserGender.UNKNOW)
                 .token(authToken)
                 .source(AuthSource.GITHUB)
                 .build();

File: src/main/java/me/zhyd/oauth/request/AuthGoogleRequest.java
Patch:
@@ -8,6 +8,7 @@
 import me.zhyd.oauth.model.AuthSource;
 import me.zhyd.oauth.model.AuthToken;
 import me.zhyd.oauth.model.AuthUser;
+import me.zhyd.oauth.model.AuthUserGender;
 import me.zhyd.oauth.utils.UrlBuilder;
 
 /**
@@ -57,6 +58,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .nickname(object.getString("name"))
                 .location(object.getString("locale"))
                 .email(object.getString("email"))
+                .gender(AuthUserGender.UNKNOW)
                 .token(authToken)
                 .source(AuthSource.GOOGLE)
                 .build();

File: src/main/java/me/zhyd/oauth/request/BaseAuthRequest.java
Patch:
@@ -36,9 +36,9 @@ public BaseAuthRequest(AuthConfig config, AuthSource source) {
     public AuthResponse login(String code) {
         try {
             AuthUser user = this.getUserInfo(this.getAccessToken(code));
-            return AuthResponse.builder().data(user).build();
+            return AuthResponse.builder().code(ResponseStatus.SUCCESS.getCode()).data(user).build();
         } catch (Exception e) {
-            return AuthResponse.builder().code(500).msg(e.getMessage()).build();
+            return AuthResponse.builder().code(ResponseStatus.FAILURE.getCode()).msg(e.getMessage()).build();
         }
     }
 

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -20,6 +20,7 @@
  * qq登录
  *
  * @author yadong.zhang (yadong.zhang0415(a)gmail.com)
+ * @author yangkai.shen (https://xkcoding.com)
  * @version 1.0
  * @since 1.8
  */
@@ -62,6 +63,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .username(object.getString("nickname"))
                 .nickname(object.getString("nickname"))
                 .avatar(avatar)
+                .location(object.getString("province") + "-" + object.getString("city"))
                 .gender(AuthUserGender.getRealGender(object.getString("gender")))
                 .token(authToken)
                 .source(AuthSource.QQ)

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -20,6 +20,7 @@
  * qq登录
  *
  * @author yadong.zhang (yadong.zhang0415(a)gmail.com)
+ * @author yangkai.shen (https://xkcoding.com)
  * @version 1.0
  * @since 1.8
  */
@@ -62,6 +63,7 @@ protected AuthUser getUserInfo(AuthToken authToken) {
                 .username(object.getString("nickname"))
                 .nickname(object.getString("nickname"))
                 .avatar(avatar)
+                .location(object.getString("province") + "-" + object.getString("city"))
                 .gender(AuthUserGender.getRealGender(object.getString("gender")))
                 .token(authToken)
                 .source(AuthSource.QQ)

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -48,7 +48,8 @@ protected AuthToken getAccessToken(String code) {
     protected AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         String openId = this.getOpenId(accessToken);
-        HttpResponse response = HttpRequest.get(UrlBuilder.getQqUserInfoUrl(accessToken, openId)).execute();
+        HttpResponse response = HttpRequest.get(UrlBuilder.getQqUserInfoUrl(config.getClientId(), accessToken, openId))
+                .execute();
         JSONObject object = JSONObject.parseObject(response.body());
         if (object.getIntValue("ret") != 0) {
             throw new AuthException(object.getString("msg"));

File: src/main/java/me/zhyd/oauth/request/AuthQqRequest.java
Patch:
@@ -48,7 +48,8 @@ protected AuthToken getAccessToken(String code) {
     protected AuthUser getUserInfo(AuthToken authToken) {
         String accessToken = authToken.getAccessToken();
         String openId = this.getOpenId(accessToken);
-        HttpResponse response = HttpRequest.get(UrlBuilder.getQqUserInfoUrl(accessToken, openId)).execute();
+        HttpResponse response = HttpRequest.get(UrlBuilder.getQqUserInfoUrl(config.getClientId(), accessToken, openId))
+                .execute();
         JSONObject object = JSONObject.parseObject(response.body());
         if (object.getIntValue("ret") != 0) {
             throw new AuthException(object.getString("msg"));

File: src/main/java/me/zhyd/oauth/consts/ApiUrl.java
Patch:
@@ -336,7 +336,7 @@ public String refresh() {
     WECHAT {
         @Override
         public String authorize() {
-            return "https://open.weixin.qq.com/connect/oauth2/authorize";
+            return "https://open.weixin.qq.com/connect/qrconnect";
         }
 
         @Override

File: src/main/java/me/zhyd/oauth/utils/UrlBuilder.java
Patch:
@@ -56,7 +56,7 @@ public class UrlBuilder {
     private static final String QQ_AUTHORIZE_PATTERN = "{0}?client_id={1}&response_type=code&redirect_uri={2}&state={3}";
     private static final String QQ_OPENID_PATTERN = "{0}?access_token={1}";
 
-    private static final String WECHAT_AUTHORIZE_PATTERN = "{0}?appid={1}&redirect_uri={2}&response_type=code&scope=snsapi_userinfo#wechat_redirect";
+    private static final String WECHAT_AUTHORIZE_PATTERN = "{0}?appid={1}&redirect_uri={2}&response_type=code&scope=snsapi_login&state={3}#wechat_redirect";
     private static final String WECHAT_ACCESS_TOKEN_PATTERN = "{0}?appid={1}&secret={2}&code={3}&grant_type=authorization_code";
     private static final String WECHAT_REFRESH_TOKEN_PATTERN = "{0}?appid={1}&grant_type=refresh_token&refresh_token={2}";
     private static final String WECHAT_USER_INFO_PATTERN = "{0}?access_token={1}&openid={2}&lang=zh_CN";
@@ -429,7 +429,7 @@ public static String getAlipayAuthorizeUrl(String clientId, String redirectUrl)
      * @return full url
      */
     public static String getWeChatAuthorizeUrl(String clientId, String redirectUrl) {
-        return MessageFormat.format(WECHAT_AUTHORIZE_PATTERN, ApiUrl.WECHAT.authorize(), clientId, redirectUrl);
+        return MessageFormat.format(WECHAT_AUTHORIZE_PATTERN, ApiUrl.WECHAT.authorize(), clientId, redirectUrl, System.currentTimeMillis());
     }
 
     /**

