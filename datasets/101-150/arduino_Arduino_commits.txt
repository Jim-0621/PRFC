File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -52,7 +52,6 @@
  * know if name is proper Java package syntax.)
  */
 public class Platform {
-  // DO NOT USE log4j here otherwise the root path of the logs will no be initialize correctly
   /**
    * Set the default L & F. While I enjoy the bounty of the sixteen possible
    * exception types that this UIManager method might throw, I feel that in

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -52,7 +52,6 @@
  * know if name is proper Java package syntax.)
  */
 public class Platform {
-  // DO NOT USE log4j here otherwise the root path of the logs will no be initialize correctly
   /**
    * Set the default L & F. While I enjoy the bounty of the sixteen possible
    * exception types that this UIManager method might throw, I feel that in

File: arduino-core/src/processing/app/SerialPortList.java
Patch:
@@ -74,7 +74,7 @@ public class SerialPortList {
         }
     }
 
-    //since 2.1.0 -> Fully rewrited port name comparator
+    //since 2.1.0 -> Fully rewritten port name comparator
     private static final Comparator<String> PORTNAMES_COMPARATOR = new Comparator<String>() {
 
         @Override

File: arduino-core/src/processing/app/SerialPortList.java
Patch:
@@ -74,7 +74,7 @@ public class SerialPortList {
         }
     }
 
-    //since 2.1.0 -> Fully rewrited port name comparator
+    //since 2.1.0 -> Fully rewritten port name comparator
     private static final Comparator<String> PORTNAMES_COMPARATOR = new Comparator<String>() {
 
         @Override

File: app/src/processing/app/EditorTab.java
Patch:
@@ -247,7 +247,7 @@ public void actionPerformed(ActionEvent e) {
     menu.add(item);
 
     final JMenuItem referenceItem = new JMenuItem(tr("Find in Reference"));
-    referenceItem.addActionListener(editor::handleFindReference);
+    referenceItem.addActionListener(ev -> editor.handleFindReference(getCurrentKeyword()));
     menu.add(referenceItem);  
 
     final JMenuItem openURLItem = new JMenuItem(tr("Open URL"));

File: app/src/processing/app/Editor.java
Patch:
@@ -1452,6 +1452,7 @@ public void selectTab(final int index) {
       codePanel.removeAll();
       codePanel.add(tabs.get(index), BorderLayout.CENTER);
       tabs.get(index).requestFocusInWindow(); // get the caret blinking
+      tabs.get(index).applyPreferences();
       // For some reason, these are needed. Revalidate says it should be
       // automatically called when components are added or removed, but without
       // it, the component switched to is not displayed. repaint() is needed to

File: app/src/processing/app/Base.java
Patch:
@@ -1473,6 +1473,7 @@ public void actionPerformed(ActionEvent actionevent) {
           customMenu.putClientProperty("platform", getPlatformUniqueId(targetPlatform));
           customMenu.putClientProperty("removeOnWindowDeactivation", true);
           boardsCustomMenus.add(customMenu);
+          MenuScroller.setScrollerFor(customMenu);
         }
       }
     }

File: app/src/processing/app/tools/MenuScroller.java
Patch:
@@ -16,6 +16,7 @@
 import java.awt.event.MouseWheelEvent;
 import java.awt.event.MouseWheelListener;
 import java.awt.event.KeyEvent;
+import java.util.Arrays;
 
 /**
  * A class that provides scrolling capabilities to a long menu dropdown or
@@ -539,7 +540,7 @@ public void popupMenuCanceled(PopupMenuEvent e) {
     }
 
     private void setMenuItems() {
-      menuItems = menu.getComponents();
+      menuItems = Arrays.stream(menu.getComponents()).filter(x -> x.isVisible()).toArray(Component[]::new);
       if (keepVisibleIndex >= topFixedCount
         && keepVisibleIndex <= menuItems.length - bottomFixedCount
         && (keepVisibleIndex > firstIndex + scrollCount

File: app/src/processing/app/Editor.java
Patch:
@@ -1163,7 +1163,7 @@ private JMenu buildHelpMenu() {
     menu.add(item);
 
     item = new JMenuItem(tr("Visit Arduino.cc"));
-    item.addActionListener(event -> Base.openURL(tr("http://www.arduino.cc/")));
+    item.addActionListener(event -> Base.openURL("https://www.arduino.cc/"));
     menu.add(item);
 
     // macosx already has its own about menu

File: app/src/processing/app/UpdateCheck.java
Patch:
@@ -51,7 +51,7 @@
  */
 public class UpdateCheck implements Runnable {
   Base base;
-  String downloadURL = tr("https://www.arduino.cc/latest.txt");
+  String downloadURL = "https://www.arduino.cc/latest.txt";
 
   static final long ONE_DAY = 24 * 60 * 60 * 1000;
 
@@ -116,7 +116,7 @@ public void run() {
                                                     options,
                                                     options[0]);
           if (result == JOptionPane.YES_OPTION) {
-            Base.openURL(tr("https://www.arduino.cc/en/Main/Software"));
+            Base.openURL("https://www.arduino.cc/en/software");
           }
         }
       }

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -101,8 +101,8 @@ public class Compiler implements MessageConsumer {
     tr("Couldn't determine program size: {0}");
     tr("Global variables use {0} bytes ({2}%%) of dynamic memory, leaving {3} bytes for local variables. Maximum is {1} bytes.");
     tr("Global variables use {0} bytes of dynamic memory.");
-    tr("Sketch too big; see http://www.arduino.cc/en/Guide/Troubleshooting#size for tips on reducing it.");
-    tr("Not enough memory; see http://www.arduino.cc/en/Guide/Troubleshooting#size for tips on reducing your footprint.");
+    tr("Sketch too big; see https://support.arduino.cc/hc/en-us/articles/360013825179 for tips on reducing it.");
+    tr("Not enough memory; see https://support.arduino.cc/hc/en-us/articles/360013825179 for tips on reducing your footprint.");
     tr("Low memory available, stability problems may occur.");
     tr("An error occurred while verifying the sketch");
     tr("An error occurred while verifying/uploading the sketch");

File: arduino-core/src/cc/arduino/packages/Uploader.java
Patch:
@@ -176,7 +176,7 @@ public void message(String s) {
       return;
     }
     if (StringUtils.containsAny(s, AVRDUDE_PROBLEMS)) {
-      error = tr("Problem uploading to board.  See http://www.arduino.cc/en/Guide/Troubleshooting#upload for suggestions.");
+      error = tr("Problem uploading to board.  See https://support.arduino.cc/hc/en-us/sections/360003198300 for suggestions.");
       return;
     }
     if (s.contains("Expected signature")) {

File: app/test/processing/app/CommandLineTest.java
Patch:
@@ -105,7 +105,7 @@ public Process runArduino(boolean output, boolean success, File wd, String[] ext
 
   @Test
   public void testCommandLineBuildWithRelativePath() throws Exception {
-    File wd = new File(buildPath, "build/shared/examples/01.Basics/Blink/");
+    File wd = new File(buildPath, "app/testdata/sketches/Blink/");
     runArduino(true, true, wd, new String[] {
         "--board", "arduino:avr:uno",
         "--verify", "Blink.ino",

File: app/src/processing/app/Base.java
Patch:
@@ -1706,7 +1706,7 @@ public void rebuildProgrammerMenu() {
     TargetPlatform corePlatform = null;
 
     String core = board.getPreferences().get("build.core");
-    if (core.contains(":")) {
+    if (core != null && core.contains(":")) {
       String[] split = core.split(":", 2);
       corePlatform = BaseNoGui.getCurrentTargetPlatformFromPackage(split[0]);
     }

File: app/src/cc/arduino/contributions/ui/InstallerJDialog.java
Patch:
@@ -71,7 +71,6 @@
 
 import cc.arduino.contributions.ui.listeners.AbstractKeyListener;
 import processing.app.Base;
-import processing.app.Theme;
 
 public abstract class InstallerJDialog<T> extends JDialog {
 
@@ -82,6 +81,7 @@ public abstract class InstallerJDialog<T> extends JDialog {
   protected final FilterJTextField filterField;
   protected final JPanel filtersContainer;
   // Currently selected category and filters
+  protected Predicate<T> extraFilter = x -> true;
   protected Predicate<T> categoryFilter;
   protected String[] filters;
   protected final String noConnectionErrorMessage;
@@ -329,7 +329,6 @@ private void setErrorMessageVisible(boolean visible) {
   }
 
   protected final ActionListener categoryChooserActionListener = new ActionListener() {
-
     @Override
     public void actionPerformed(ActionEvent event) {
       DropdownItem<T> selected = (DropdownItem<T>) categoryChooser.getSelectedItem();
@@ -339,7 +338,7 @@ public void actionPerformed(ActionEvent event) {
         if (contribTable.getCellEditor() != null) {
           contribTable.getCellEditor().stopCellEditing();
         }
-        updateIndexFilter(filters, categoryFilter);
+        updateIndexFilter(filters, categoryFilter.and(extraFilter));
       }
     }
   };

File: app/src/cc/arduino/contributions/ui/InstallerJDialog.java
Patch:
@@ -81,6 +81,7 @@ public abstract class InstallerJDialog<T> extends JDialog {
   protected final FilterJTextField filterField;
   protected final JPanel filtersContainer;
   // Currently selected category and filters
+  protected Predicate<T> extraFilter = x -> true;
   protected Predicate<T> categoryFilter;
   protected String[] filters;
   protected final String noConnectionErrorMessage;
@@ -337,7 +338,7 @@ public void actionPerformed(ActionEvent event) {
         if (contribTable.getCellEditor() != null) {
           contribTable.getCellEditor().stopCellEditing();
         }
-        updateIndexFilter(filters, categoryFilter);
+        updateIndexFilter(filters, categoryFilter.and(extraFilter));
       }
     }
   };

File: app/src/processing/app/EditorHeader.java
Patch:
@@ -73,6 +73,7 @@ public class EditorHeader extends JComponent {
 
   static final int PIECE_WIDTH = scale(4);
   static final int PIECE_HEIGHT = scale(33);
+  static final int TAB_HEIGHT = scale(27);
 
   // value for the size bars, buttons, etc
   // TODO: Should be a Theme value?
@@ -270,8 +271,8 @@ public void paintComponent(Graphics screen) {
       int textLeft = contentLeft + (pieceWidth - textWidth) / 2;
 
       g.setColor(textColor[state]);
-      int baseline = (sizeH + fontAscent) / 2;
-      //g.drawString(sketch.code[i].name, textLeft, baseline);
+      int tabMarginTop = sizeH - TAB_HEIGHT;
+      int baseline = tabMarginTop + ((TAB_HEIGHT + fontAscent) / 2) ; 
       g.drawString(text, textLeft, baseline);
 
       g.drawImage(pieces[state][RIGHT], x, 0, null);

File: app/test/processing/app/AbstractGUITest.java
Patch:
@@ -60,7 +60,7 @@ public void startUpTheIDE() throws Exception {
     window = GuiActionRunner.execute(new GuiQuery<ArduinoFrameFixture>() {
       @Override
       protected ArduinoFrameFixture executeInEDT() throws Throwable {
-        return new ArduinoFrameFixture(new Base(new String[0]).editors.get(0));
+        return new ArduinoFrameFixture(createBase().editors.get(0));
       }
     });
   }

File: app/test/processing/app/DefaultTargetTest.java
Patch:
@@ -57,7 +57,7 @@ public void testDefaultTarget() throws Exception {
     PreferencesData.set("board", "unreal_board");
 
     // should not raise an exception
-    new Base(new String[0]);
+    createBase();
 
     // skip test if no target platforms are available
     Assume.assumeNotNull(BaseNoGui.getTargetPlatform());

File: arduino-core/src/processing/app/debug/LegacyTargetPlatform.java
Patch:
@@ -248,6 +248,6 @@ public String toString() {
 
   @Override
   public boolean isInSketchbook() {
-	return getFolder().getAbsolutePath().startsWith(BaseNoGui.getDefaultSketchbookFolder().getAbsolutePath());
+	return getFolder().getAbsolutePath().startsWith(BaseNoGui.getSketchbookHardwareFolder().getAbsolutePath());
   }
 }

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -202,8 +202,9 @@ public synchronized Map<String, Object> resolveDeviceByVendorIdProductId(String
                 }
                 Map<String, Object> boardData = new HashMap<>();
                 boardData.put("board", board);
-                boardData.put("vid", vids.get(i));
-                boardData.put("pid", pids.get(i));
+                // remove 0x from VID / PID to keep them as reported by liblistserial
+                boardData.put("vid", vids.get(i).replaceAll("0x", ""));
+                boardData.put("pid", pids.get(i).replaceAll("0x", ""));
                 String extrafields = vid_pid_iSerial.substring(vidPid.length() + 1);
                 String[] parts = extrafields.split("_");
                 boardData.put("iserial", parts[0]);

File: arduino-core/src/cc/arduino/net/CustomProxySelector.java
Patch:
@@ -75,7 +75,7 @@ public Proxy getProxyFor(URI uri) throws IOException, ScriptException, NoSuchMet
   }
 
   private Proxy pacProxy(String pac, URI uri) throws IOException, ScriptException, NoSuchMethodException {
-    setAuthenticator(preferences.get(Constants.PREF_PROXY_AUTO_USERNAME), preferences.get(Constants.PREF_PROXY_AUTO_PASSWORD));
+    setAuthenticator(preferences.get(Constants.PREF_PROXY_USERNAME), preferences.get(Constants.PREF_PROXY_PASSWORD));
 
     URLConnection urlConnection = new URL(pac).openConnection();
     urlConnection.connect();
@@ -141,7 +141,7 @@ private URL toUrl(URI uri) {
   }
 
   private Proxy manualProxy() {
-    setAuthenticator(preferences.get(Constants.PREF_PROXY_MANUAL_USERNAME), preferences.get(Constants.PREF_PROXY_MANUAL_PASSWORD));
+    setAuthenticator(preferences.get(Constants.PREF_PROXY_USERNAME), preferences.get(Constants.PREF_PROXY_PASSWORD));
     Proxy.Type type = Proxy.Type.valueOf(preferences.get(Constants.PREF_PROXY_MANUAL_TYPE));
     return new Proxy(type, new InetSocketAddress(preferences.get(Constants.PREF_PROXY_MANUAL_HOSTNAME), Integer.valueOf(preferences.get(Constants.PREF_PROXY_MANUAL_PORT))));
   }

File: arduino-core/src/cc/arduino/net/CustomProxySelector.java
Patch:
@@ -75,7 +75,7 @@ public Proxy getProxyFor(URI uri) throws IOException, ScriptException, NoSuchMet
   }
 
   private Proxy pacProxy(String pac, URI uri) throws IOException, ScriptException, NoSuchMethodException {
-    setAuthenticator(preferences.get(Constants.PREF_PROXY_AUTO_USERNAME), preferences.get(Constants.PREF_PROXY_AUTO_PASSWORD));
+    setAuthenticator(preferences.get(Constants.PREF_PROXY_USERNAME), preferences.get(Constants.PREF_PROXY_PASSWORD));
 
     URLConnection urlConnection = new URL(pac).openConnection();
     urlConnection.connect();
@@ -141,7 +141,7 @@ private URL toUrl(URI uri) {
   }
 
   private Proxy manualProxy() {
-    setAuthenticator(preferences.get(Constants.PREF_PROXY_MANUAL_USERNAME), preferences.get(Constants.PREF_PROXY_MANUAL_PASSWORD));
+    setAuthenticator(preferences.get(Constants.PREF_PROXY_USERNAME), preferences.get(Constants.PREF_PROXY_PASSWORD));
     Proxy.Type type = Proxy.Type.valueOf(preferences.get(Constants.PREF_PROXY_MANUAL_TYPE));
     return new Proxy(type, new InetSocketAddress(preferences.get(Constants.PREF_PROXY_MANUAL_HOSTNAME), Integer.valueOf(preferences.get(Constants.PREF_PROXY_MANUAL_PORT))));
   }

File: app/test/cc/arduino/contributions/GzippedJsonDownloaderTest.java
Patch:
@@ -4,7 +4,6 @@
 import cc.arduino.utils.MultiStepProgress;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.module.mrbean.MrBeanModule;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -47,7 +46,6 @@ public void testJsonDownload() throws Exception {
 
     InputStream indexIn = new FileInputStream(tempFile);
     ObjectMapper mapper = new ObjectMapper();
-    mapper.registerModule(new MrBeanModule());
     mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
     mapper.configure(DeserializationFeature.EAGER_DESERIALIZER_FETCH, true);
     mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

File: app/test/cc/arduino/contributions/JsonDownloaderTest.java
Patch:
@@ -4,7 +4,6 @@
 import cc.arduino.utils.MultiStepProgress;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.module.mrbean.MrBeanModule;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -46,7 +45,6 @@ public void testJsonDownload() throws Exception {
 
     InputStream indexIn = new FileInputStream(tempFile);
     ObjectMapper mapper = new ObjectMapper();
-    mapper.registerModule(new MrBeanModule());
     mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
     mapper.configure(DeserializationFeature.EAGER_DESERIALIZER_FETCH, true);
     mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -36,7 +36,6 @@
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.JsonMappingException;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.module.mrbean.MrBeanModule;
 import org.apache.commons.compress.utils.IOUtils;
 import processing.app.BaseNoGui;
 import processing.app.I18n;
@@ -76,7 +75,7 @@ public LibrariesIndexer(File preferencesFolder) {
   }
 
   public void parseIndex() throws IOException {
-    index = new EmptyLibrariesIndex(); // Fallback
+    index = new LibrariesIndex(); // Fallback
 
     if (!indexFile.exists()) {
       return;
@@ -92,7 +91,6 @@ private void parseIndex(File file) throws IOException {
     try {
       indexIn = new FileInputStream(file);
       ObjectMapper mapper = new ObjectMapper();
-      mapper.registerModule(new MrBeanModule());
       mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
       mapper.configure(DeserializationFeature.EAGER_DESERIALIZER_FETCH, true);
       mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

File: arduino-core/src/cc/arduino/contributions/packages/ContributedBoard.java
Patch:
@@ -29,8 +29,9 @@
 
 package cc.arduino.contributions.packages;
 
-public interface ContributedBoard {
+public class ContributedBoard {
 
-  String getName();
+  private String name;
+  public String getName() { return name; }
 
 }

File: arduino-core/src/cc/arduino/contributions/packages/ContributedHelp.java
Patch:
@@ -29,8 +29,9 @@
 
 package cc.arduino.contributions.packages;
 
-public abstract class ContributedHelp {
+public class ContributedHelp {
 
-  public abstract String getOnline();
+  private String online;
+  public String getOnline() { return online; }
 
 }

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndex.java
Patch:
@@ -38,9 +38,10 @@
 import java.util.List;
 import java.util.stream.Collectors;
 
-public abstract class ContributionsIndex {
+public class ContributionsIndex {
 
-  public abstract List<ContributedPackage> getPackages();
+  private ArrayList<ContributedPackage> packages = new ArrayList<ContributedPackage>();
+  public List<ContributedPackage> getPackages() { return packages; }
 
   public ContributedPackage findPackage(String packageName) {
     for (ContributedPackage pack : getPackages()) {

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -35,7 +35,6 @@
 import com.fasterxml.jackson.core.JsonProcessingException;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.module.mrbean.MrBeanModule;
 import org.apache.commons.compress.utils.IOUtils;
 
 import processing.app.BaseNoGui;
@@ -73,7 +72,7 @@ public ContributionsIndexer(File preferencesFolder, File builtInHardwareFolder,
     this.builtInHardwareFolder = builtInHardwareFolder;
     this.platform = platform;
     this.signatureVerifier = signatureVerifier;
-    index = new EmptyContributionIndex();
+    index = new ContributionsIndex();
     packagesFolder = new File(preferencesFolder, "packages");
     stagingFolder = new File(preferencesFolder, "staging" + File.separator + "packages");
   }
@@ -208,7 +207,6 @@ private ContributionsIndex parseIndex(File indexFile) throws IOException {
     try {
       inputStream = new FileInputStream(indexFile);
       ObjectMapper mapper = new ObjectMapper();
-      mapper.registerModule(new MrBeanModule());
       mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);
       mapper.configure(DeserializationFeature.EAGER_DESERIALIZER_FETCH, true);
       mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);

File: app/src/processing/app/AbstractTextMonitor.java
Patch:
@@ -172,8 +172,6 @@ public void windowGainedFocus(WindowEvent e) {
 
   @Override
   protected void onEnableWindow(boolean enable) {
-    Thread.dumpStack();
-    System.out.println("onEnableWindow " + enable);
     // never actually disable textArea, so people can
     // still select & copy text, even when the port
     // is closed or disconnected

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -142,7 +142,6 @@ public void close() throws Exception {
       int[] location = getPlacement();
       String locationStr = PApplet.join(PApplet.str(location), ",");
       PreferencesData.set("last.serial.location", locationStr);
-      textArea.setText("");
       serial.dispose();
       serial = null;
     }

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -1,7 +1,6 @@
 package processing.app;
 
 import cc.arduino.packages.BoardPort;
-import cc.arduino.packages.DiscoveryManager;
 import processing.app.legacy.PApplet;
 
 import javax.swing.*;
@@ -10,7 +9,6 @@
 import java.awt.event.ActionListener;
 import java.awt.event.WindowAdapter;
 import java.awt.event.WindowEvent;
-import java.util.List;
 
 @SuppressWarnings("serial")
 public abstract class AbstractMonitor extends JFrame implements ActionListener {
@@ -85,7 +83,7 @@ public void actionPerformed(ActionEvent ae) {
               suspend();
             }
           } else {
-            if (closed && (Editor.isUploading() == false)) {
+            if (closed && !Editor.isUploading()) {
               resume(boardPort);
             }
           }

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -23,7 +23,6 @@
 
 import java.awt.Color;
 import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
 import java.awt.event.KeyAdapter;
 import java.awt.event.KeyEvent;
 

File: app/test/cc/arduino/contributions/GzippedJsonDownloaderTest.java
Patch:
@@ -8,6 +8,8 @@
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
+
+import processing.app.BaseNoGui;
 import processing.app.helpers.FileUtils;
 
 import java.io.File;
@@ -38,6 +40,7 @@ public void tearDown() throws Exception {
 
   @Test
   public void testJsonDownload() throws Exception {
+    BaseNoGui.initPlatform();
     new GZippedJsonDownloader(downloader, new URL("http://downloads.arduino.cc/libraries/library_index.json"),
       new URL("http://downloads.arduino.cc/libraries/library_index.json.gz"))
       .download(tempFile, new MultiStepProgress(1), "", new NoopProgressListener(), true);

File: app/test/cc/arduino/contributions/JsonDownloaderTest.java
Patch:
@@ -8,6 +8,8 @@
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
+
+import processing.app.BaseNoGui;
 import processing.app.helpers.FileUtils;
 
 import java.io.File;
@@ -38,6 +40,7 @@ public void tearDown() throws Exception {
 
   @Test
   public void testJsonDownload() throws Exception {
+    BaseNoGui.initPlatform();
     new JsonDownloader(downloader, new URL("http://downloads.arduino.cc/libraries/library_index.json"))
       .download(tempFile, new MultiStepProgress(1), "", new NoopProgressListener(), true);
 

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -509,7 +509,7 @@ static public void initPackages() throws Exception {
     }
   }
 
-  static protected void initPlatform() {
+  static public void initPlatform() {
     try {
       Class<?> platformClass = Class.forName("processing.app.Platform");
       if (OSUtils.isMacOS()) {

File: app/src/processing/app/EditorTab.java
Patch:
@@ -442,6 +442,9 @@ public void setText(String what) {
     } finally {
       caret.setUpdatePolicy(policy);
     }
+    // A trick to force textarea to recalculate the bracket matching rectangle.
+    // In the worst case scenario, this should be ineffective.
+    textarea.setLineWrap(textarea.getLineWrap());
   }
 
   /**

File: app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCellEditor.java
Patch:
@@ -125,6 +125,7 @@ public Component getTableCellEditorComponent(JTable table, Object value,
     editorCell.versionToInstallChooser
         .setVisible(!mayInstalled.isPresent() && notInstalled.size() > 1);
 
+    editorCell.setForeground(Color.BLACK);
     editorCell.setBackground(new Color(218, 227, 227)); // #dae3e3
     return editorCell;
   }

File: app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCellRenderer.java
Patch:
@@ -46,6 +46,7 @@ public Component getTableCellRendererComponent(JTable table, Object value,
         value, isSelected);
     cell.setButtonsVisible(false);
 
+    cell.setForeground(Color.BLACK);
     if (row % 2 == 0) {
       cell.setBackground(new Color(236, 241, 241)); // #ecf1f1
     } else {

File: app/src/cc/arduino/contributions/packages/ui/ContributedPlatformTableCellEditor.java
Patch:
@@ -130,6 +130,7 @@ public Component getTableCellEditorComponent(JTable table, Object _value,
         .setVisible(installed == null && uninstalledReleases.size() > 1);
 
     cell.update(table, _value, !installedBuiltIn.isEmpty());
+    cell.setForeground(Color.BLACK);
     cell.setBackground(new Color(218, 227, 227)); // #dae3e3
     return cell;
   }

File: app/src/cc/arduino/contributions/packages/ui/ContributedPlatformTableCellRenderer.java
Patch:
@@ -46,6 +46,7 @@ public Component getTableCellRendererComponent(JTable table, Object value,
     cell.setButtonsVisible(false);
     cell.update(table, value, false);
 
+    cell.setForeground(Color.BLACK);
     if (row % 2 == 0) {
       cell.setBackground(new Color(236, 241, 241)); // #ecf1f1
     } else {

File: app/src/cc/arduino/contributions/packages/ui/ContributedPlatformTableCellEditor.java
Patch:
@@ -129,7 +129,7 @@ public Component getTableCellEditorComponent(JTable table, Object _value,
     cell.versionToInstallChooser
         .setVisible(installed == null && uninstalledReleases.size() > 1);
 
-    cell.update(table, _value, true, !installedBuiltIn.isEmpty());
+    cell.update(table, _value, !installedBuiltIn.isEmpty());
     cell.setBackground(new Color(218, 227, 227)); // #dae3e3
     return cell;
   }

File: app/src/cc/arduino/contributions/packages/ui/ContributedPlatformTableCellRenderer.java
Patch:
@@ -44,7 +44,7 @@ public Component getTableCellRendererComponent(JTable table, Object value,
                                                  int column) {
     ContributedPlatformTableCellJPanel cell = new ContributedPlatformTableCellJPanel();
     cell.setButtonsVisible(false);
-    cell.update(table, value, isSelected, false);
+    cell.update(table, value, false);
 
     if (row % 2 == 0) {
       cell.setBackground(new Color(236, 241, 241)); // #ecf1f1

File: app/src/cc/arduino/contributions/ui/InstallerJDialog.java
Patch:
@@ -180,7 +180,6 @@ public void windowOpened(WindowEvent e) {
     contribTable.setDragEnabled(false);
     contribTable.setIntercellSpacing(new Dimension(0, 1));
     contribTable.setShowVerticalLines(false);
-    contribTable.setSelectionBackground(Theme.getColor("status.notice.bgcolor"));
     contribTable.addKeyListener(new AbstractKeyListener() {
 
       @Override

File: app/src/cc/arduino/contributions/ContributionsSelfCheck.java
Patch:
@@ -117,7 +117,7 @@ public void run() {
     } else if (!updatableLibraries && updatablePlatforms) {
       text = I18n.format(tr("Updates available for some of your {0}boards{1}"), openAnchorBoards, closeAnchorBoards);
     } else {
-      text = I18n.format(tr("Updates available for some of your {0}libraries{1} and {2}libraries{3}"), openAnchorBoards, closeAnchorBoards, openAnchorLibraries, closeAnchorLibraries);
+      text = I18n.format(tr("Updates available for some of your {0}boards{1} and {2}libraries{3}"), openAnchorBoards, closeAnchorBoards, openAnchorLibraries, closeAnchorLibraries);
     }
 
     if (cancelled) {

File: app/src/processing/app/Editor.java
Patch:
@@ -80,6 +80,8 @@
 import javax.swing.event.MenuEvent;
 import javax.swing.event.MenuListener;
 import javax.swing.text.BadLocationException;
+import javax.swing.text.Document;
+import javax.swing.text.Element;
 
 import org.fife.ui.rsyntaxtextarea.folding.FoldManager;
 

File: arduino-core/src/cc/arduino/packages/ssh/SSHConfigFileSetup.java
Patch:
@@ -46,7 +46,6 @@ public SSHConfigFileSetup(SSHClientSetupChainRing nextChainRing) {
   @Override
   public Session setup(BoardPort port, JSch jSch) throws JSchException, IOException {
     String ipAddress = port.getAddress();
-    String hostname = port.getBoardName().contains(".local") ? port.getBoardName() : port.getBoardName() + ".local";
 
     File sshFolder = new File(System.getProperty("user.home"), ".ssh");
     File sshConfig = new File(sshFolder, "config");
@@ -62,7 +61,7 @@ public Session setup(BoardPort port, JSch jSch) throws JSchException, IOExceptio
 
     jSch.setConfigRepository(new OpenSSHConfigWrapper(configRepository, ipAddress));
 
-    return jSch.getSession(hostname);
+    return jSch.getSession(ipAddress);
   }
 
   public static class OpenSSHConfigWrapper implements ConfigRepository {

File: arduino-core/src/cc/arduino/utils/network/FileDownloader.java
Patch:
@@ -171,6 +171,7 @@ private void downloadFile(boolean noResume) throws InterruptedException {
         final Optional<File> fileFromCache = getFileCached(fileCached);
         if (fileCached.isNotChange() && fileFromCache.isPresent()) {
           // Copy the cached file in the destination file
+          log.info("The file will be taken from the cache {}", fileFromCache);
           FileUtils.copyFile(fileFromCache.get(), outputFile);
         } else {
           openConnectionAndFillTheFile(noResume);

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -85,7 +85,7 @@ public void actionPerformed(ActionEvent ae) {
               suspend();
             }
           } else {
-            if (closed && (Editor.avoidMultipleOperations == false)) {
+            if (closed && (Editor.isUploading() == false)) {
               resume(boardPort);
             }
           }

File: app/test/processing/app/UpdateTextAreaActionTest.java
Patch:
@@ -14,7 +14,7 @@ public class UpdateTextAreaActionTest {
 
   class DummyTextMonitor extends AbstractTextMonitor {
     public DummyTextMonitor(BoardPort boardPort) {
-      super(Base.INSTANCE, boardPort);
+      super(boardPort);
     }
   }
 

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -80,7 +80,7 @@ public void actionPerformed(ActionEvent event) {
       @Override
       public void actionPerformed(ActionEvent ae) {
         try {
-          if (!Base.getDiscoveryManager().discovery().contains(boardPort)) {
+          if (Base.getDiscoveryManager().find(boardPort.getAddress()) == null) {
             if (!closed) {
               suspend();
             }

File: app/test/cc/arduino/contributions/GzippedJsonDownloaderTest.java
Patch:
@@ -38,7 +38,9 @@ public void tearDown() throws Exception {
 
   @Test
   public void testJsonDownload() throws Exception {
-    new GZippedJsonDownloader(downloader, new URL("http://downloads.arduino.cc/libraries/library_index.json"), new URL("http://downloads.arduino.cc/libraries/library_index.json.gz")).download(tempFile, new MultiStepProgress(1), "", new NoopProgressListener());
+    new GZippedJsonDownloader(downloader, new URL("http://downloads.arduino.cc/libraries/library_index.json"),
+      new URL("http://downloads.arduino.cc/libraries/library_index.json.gz"))
+      .download(tempFile, new MultiStepProgress(1), "", new NoopProgressListener(), true);
 
     InputStream indexIn = new FileInputStream(tempFile);
     ObjectMapper mapper = new ObjectMapper();

File: app/test/cc/arduino/contributions/JsonDownloaderTest.java
Patch:
@@ -38,7 +38,8 @@ public void tearDown() throws Exception {
 
   @Test
   public void testJsonDownload() throws Exception {
-    new JsonDownloader(downloader, new URL("http://downloads.arduino.cc/libraries/library_index.json")).download(tempFile, new MultiStepProgress(1), "", new NoopProgressListener());
+    new JsonDownloader(downloader, new URL("http://downloads.arduino.cc/libraries/library_index.json"))
+      .download(tempFile, new MultiStepProgress(1), "", new NoopProgressListener(), true);
 
     InputStream indexIn = new FileInputStream(tempFile);
     ObjectMapper mapper = new ObjectMapper();

File: app/src/processing/app/AbstractTextMonitor.java
Patch:
@@ -136,7 +136,7 @@ public void windowGainedFocus(WindowEvent e) {
     minimumSize.setSize(minimumSize.getWidth() / 3, minimumSize.getHeight());
     noLineEndingAlert.setMinimumSize(minimumSize);
 
-    lineEndings = new JComboBox<String>(new String[]{tr("No line ending"), tr("Newline"), tr("Carriage return"), tr("Both NL & CR")});
+    lineEndings = new JComboBox<>(new String[]{tr("No line ending"), tr("Newline"), tr("Carriage return"), tr("Both NL & CR")});
     lineEndings.addActionListener((ActionEvent event) -> {
       PreferencesData.setInteger("serial.line_ending", lineEndings.getSelectedIndex());
       noLineEndingAlert.setForeground(pane.getBackground());
@@ -146,7 +146,7 @@ public void windowGainedFocus(WindowEvent e) {
 
     lineEndings.setMaximumSize(lineEndings.getMinimumSize());
 
-    serialRates = new JComboBox<String>();
+    serialRates = new JComboBox<>();
     for (String rate : serialRateStrings) {
       serialRates.addItem(rate + " " + tr("baud"));
     }

File: app/src/processing/app/Editor.java
Patch:
@@ -2212,7 +2212,7 @@ public void handleSerial() {
       return;
     }
 
-    serialMonitor = new MonitorFactory().newMonitor(base, port);
+    serialMonitor = new MonitorFactory().newMonitor(port);
 
     if (serialMonitor == null) {
       String board = port.getPrefs().get("board");
@@ -2221,6 +2221,7 @@ public void handleSerial() {
       return;
     }
 
+    base.addEditorFontResizeListeners(serialMonitor);
     Base.setIcon(serialMonitor);
 
     // If currently uploading, disable the monitor (it will be later

File: app/src/processing/app/EditorTab.java
Patch:
@@ -30,8 +30,6 @@
 import java.awt.Font;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
-import java.awt.event.MouseWheelListener;
-import java.awt.event.MouseWheelEvent;
 
 import java.io.IOException;
 

File: app/src/processing/app/NetworkMonitor.java
Patch:
@@ -31,8 +31,8 @@ public class NetworkMonitor extends AbstractTextMonitor implements MessageConsum
   private Channel channel;
   private int connectionAttempts;
 
-  public NetworkMonitor(Base base, BoardPort port) {
-    super(base, port);
+  public NetworkMonitor(BoardPort port) {
+    super(port);
 
     onSendCommand(new ActionListener() {
       public void actionPerformed(ActionEvent event) {

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -32,8 +32,8 @@ public class SerialMonitor extends AbstractTextMonitor {
   private Serial serial;
   private int serialRate;
 
-  public SerialMonitor(Base base, BoardPort port) {
-    super(base, port);
+  public SerialMonitor(BoardPort port) {
+    super(port);
 
     serialRate = PreferencesData.getInteger("serial.debug_rate");
     serialRates.setSelectedItem(serialRate + " " + tr("baud"));

File: app/src/cc/arduino/contributions/libraries/ui/MultiLibraryInstallDialog.java
Patch:
@@ -62,7 +62,7 @@ enum Result {
     ALL, NONE, CANCEL
   }
 
-  Result result = Result.CANCEL;
+  private Result result = Result.CANCEL;
 
   public MultiLibraryInstallDialog(Window parent, ContributedLibrary lib,
                                    List<ContributedLibrary> dependencies) {

File: arduino-core/src/cc/arduino/contributions/libraries/UnavailableContributedLibrary.java
Patch:
@@ -73,6 +73,7 @@ public String getCategory() {
 
   @Override
   public void setCategory(String category) {
+    // Empty
   }
 
   @Override

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -257,11 +257,9 @@ public synchronized Map<String, Object> resolveDeviceByVendorIdProductId(String
   }
 
   public static class BoardCloudAPIid {
-    public BoardCloudAPIid() {
-    }
 
-    private String name;
     private String fqbn;
+    private String name;
     private String architecture;
     private String id;
 

File: arduino-core/src/cc/arduino/contributions/DownloadableContributionsDownloader.java
Patch:
@@ -170,6 +170,7 @@ public void downloadIndexAndSignature(MultiStepProgress progress, URL packageInd
         log.info("The domain is not selected to verify the signature. will be copied into this path {}, packageIndex url: {}", packageIndex, packageIndexUrl);
       }
     } catch (Exception e) {
+      log.error("Cannot download the package index from {} the package will be discard", packageIndexUrl, e);
       throw e;
     } finally {
       // Delete useless temp file

File: arduino-core/src/cc/arduino/contributions/libraries/LibraryInstaller.java
Patch:
@@ -48,8 +48,6 @@
 import java.net.URL;
 import java.nio.file.Files;
 import java.nio.file.StandardCopyOption;
-import java.util.LinkedList;
-import java.util.List;
 import java.util.Optional;
 
 import static processing.app.I18n.tr;

File: arduino-core/src/cc/arduino/contributions/DownloadableContributionsDownloader.java
Patch:
@@ -170,6 +170,8 @@ public void downloadIndexAndSignature(MultiStepProgress progress, List<String> d
           downloadedFilesAccumulator.remove(packageIndex.getName());
         }
       } else {
+        // Move the package index to the destination when the signature is not necessary
+        Files.move(packageIndexTemp.toPath(), packageIndex.toPath(), StandardCopyOption.REPLACE_EXISTING);
         log.info("The domain is not selected to verify the signature. packageIndex: {}", packageIndexUrl);
       }
     } catch (Exception e) {

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -26,8 +26,6 @@
 import cc.arduino.utils.network.HttpConnectionManager;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 import processing.app.debug.TargetBoard;
 import processing.app.debug.TargetPackage;
 import processing.app.debug.TargetPlatform;
@@ -60,7 +58,6 @@
  * know if name is proper Java package syntax.)
  */
 public class Platform {
-  private static Logger log = LoggerFactory.getLogger(Platform.class);
 
   /**
    * Set the default L & F. While I enjoy the bounty of the sixteen possible

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -215,7 +215,7 @@ public void syncWithFilesystem() throws IOException {
   }
 
   private void syncBuiltInHardware() throws IOException {
-    if (index == null) {
+    if (index == null || builtInHardwareFolder == null) {
       return;
     }
     for (File folder : builtInHardwareFolder.listFiles(ONLY_DIRS)) {

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -676,7 +676,9 @@ static public void onBoardOrPortChange() {
     // Libraries located in the latest folders on the list can override
     // other libraries with the same name.
     librariesIndexer.setLibrariesFolders(librariesFolders);
-    librariesIndexer.setArchitecturePriority(getTargetPlatform().getId());
+    if (getTargetPlatform() != null) {
+      librariesIndexer.setArchitecturePriority(getTargetPlatform().getId());
+    }
     librariesIndexer.rescanLibraries();
 
     populateImportToLibraryTable();

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -215,7 +215,7 @@ public void syncWithFilesystem() throws IOException {
   }
 
   private void syncBuiltInHardware() throws IOException {
-    if (index == null) {
+    if (index == null || builtInHardwareFolder == null) {
       return;
     }
     for (File folder : builtInHardwareFolder.listFiles(ONLY_DIRS)) {

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -676,7 +676,9 @@ static public void onBoardOrPortChange() {
     // Libraries located in the latest folders on the list can override
     // other libraries with the same name.
     librariesIndexer.setLibrariesFolders(librariesFolders);
-    librariesIndexer.setArchitecturePriority(getTargetPlatform().getId());
+    if (getTargetPlatform() != null) {
+      librariesIndexer.setArchitecturePriority(getTargetPlatform().getId());
+    }
     librariesIndexer.rescanLibraries();
 
     populateImportToLibraryTable();

File: app/test/processing/app/UpdateTextAreaActionTest.java
Patch:
@@ -14,7 +14,7 @@ public class UpdateTextAreaActionTest {
 
   class DummyTextMonitor extends AbstractTextMonitor {
     public DummyTextMonitor(BoardPort boardPort) {
-      super(boardPort);
+      super(Base.INSTANCE, boardPort);
     }
   }
 

File: app/src/cc/arduino/view/preferences/Preferences.java
Patch:
@@ -322,7 +322,7 @@ public void itemStateChanged(java.awt.event.ItemEvent evt) {
         .addContainerGap()
         .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel1Layout.createSequentialGroup()
-            .addComponent(sketchbookLocationField, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
+            .addComponent(sketchbookLocationField, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
             .addComponent(browseButton))
           .addComponent(checkboxesContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
@@ -631,13 +631,13 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
     getContentPane().setLayout(layout);
     layout.setHorizontalGroup(
       layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-      .addGap(0, 691, Short.MAX_VALUE)
+      .addGap(0, 800, Short.MAX_VALUE)
       .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
     );
     layout.setVerticalGroup(
       layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
-      .addGap(0, 580, Short.MAX_VALUE)
+      .addGap(0, 400, Short.MAX_VALUE)
       .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
     );

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -893,7 +893,7 @@ static public void saveFile(String str, File file) throws IOException {
     PApplet.saveStrings(temp, strArray);
 
     try {
-      file = file.getCanonicalFile();
+      file = file.toPath().toRealPath().toFile().getCanonicalFile();
     } catch (IOException e) {
     }
 

File: app/src/processing/app/Editor.java
Patch:
@@ -315,7 +315,7 @@ public void windowDeactivated(WindowEvent e) {
     status = new EditorStatus(this);
     consolePanel.add(status, BorderLayout.NORTH);
 
-    console = new EditorConsole();
+    console = new EditorConsole(base);
     console.setName("console");
     // windows puts an ugly border on this guy
     console.setBorder(null);

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -27,6 +27,7 @@ public AbstractMonitor(BoardPort boardPort) {
     this.boardPort = boardPort;
 
     addWindowListener(new WindowAdapter() {
+      @Override
       public void windowClosing(WindowEvent event) {
         try {
           closed = true;
@@ -41,6 +42,7 @@ public void windowClosing(WindowEvent event) {
     KeyStroke wc = Editor.WINDOW_CLOSE_KEYSTROKE;
     getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(wc, "close");
     getRootPane().getActionMap().put("close", (new AbstractAction() {
+      @Override
       public void actionPerformed(ActionEvent event) {
         try {
           close();
@@ -165,6 +167,7 @@ private synchronized String consumeUpdateBuffer() {
     return s;
   }
 
+  @Override
   public void actionPerformed(ActionEvent e) {
     String s = consumeUpdateBuffer();
     if (s.isEmpty()) {

File: app/src/processing/app/EditorTab.java
Patch:
@@ -110,7 +110,7 @@ public EditorTab(Editor editor, SketchFile file, String contents)
     file.setStorage(this);
     applyPreferences();
     add(scrollPane, BorderLayout.CENTER);
-	textarea.addMouseWheelListener(this);
+    textarea.addMouseWheelListener(this);
   }
 
   private RSyntaxDocument createDocument(String contents) {

File: app/src/processing/app/NetworkMonitor.java
Patch:
@@ -31,8 +31,8 @@ public class NetworkMonitor extends AbstractTextMonitor implements MessageConsum
   private Channel channel;
   private int connectionAttempts;
 
-  public NetworkMonitor(BoardPort port) {
-    super(port);
+  public NetworkMonitor(Base base, BoardPort port) {
+    super(base, port);
 
     onSendCommand(new ActionListener() {
       public void actionPerformed(ActionEvent event) {

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -33,8 +33,8 @@ public class SerialMonitor extends AbstractTextMonitor {
   private Serial serial;
   private int serialRate;
 
-  public SerialMonitor(BoardPort port) {
-    super(port);
+  public SerialMonitor(Base base, BoardPort port) {
+    super(base, port);
 
     serialRate = PreferencesData.getInteger("serial.debug_rate");
     serialRates.setSelectedItem(serialRate + " " + tr("baud"));

File: app/src/processing/app/SketchController.java
Patch:
@@ -674,7 +674,7 @@ private File saveSketchInTempFolder() throws IOException {
     FileUtils.copy(sketch.getFolder(), tempFolder);
 
     for (SketchFile file : Stream.of(sketch.getFiles()).filter(SketchFile::isModified).collect(Collectors.toList())) {
-      Files.write(Paths.get(tempFolder.getAbsolutePath(), file.getFileName()), file.getProgram().getBytes());
+      Files.write(Paths.get(tempFolder.getAbsolutePath(), file.getFileName()), file.getProgram().getBytes("UTF-8"));
     }
 
     return Paths.get(tempFolder.getAbsolutePath(), sketch.getPrimaryFile().getFileName()).toFile();

File: app/src/cc/arduino/contributions/ui/InstallerJDialog.java
Patch:
@@ -320,6 +320,7 @@ public void setFilterText(String filterText) {
       listener.focusGained(new FocusEvent(filterField, FocusEvent.FOCUS_GAINED));
     }
     filterField.setText(filterText);
+    filterField.applyFilter();
   }
 
   public void selectDropdownItemByClassName(String dropdownItem) {

File: app/src/processing/app/Base.java
Patch:
@@ -928,7 +928,9 @@ public void actionPerformed(ActionEvent actionEvent) {
   public boolean handleClose(Editor editor) {
 
     if (editors.size() == 1) {
-      handleQuit();
+      if (!handleQuit()) {
+        return false;
+      }
       // Everything called after handleQuit will only affect OSX
       editor.setVisible(false);
       editors.remove(editor);

File: app/src/processing/app/Base.java
Patch:
@@ -267,6 +267,8 @@ public Base(String[] args) throws Exception {
     splash.splashText(tr("Initializing packages..."));
     BaseNoGui.initPackages();
 
+    parser.getUploadPort().ifPresent(BaseNoGui::selectSerialPort);
+
     splash.splashText(tr("Preparing boards..."));
 
     if (!isCommandLine()) {

File: arduino-core/src/cc/arduino/packages/discoverers/PluggableDiscovery.java
Patch:
@@ -156,7 +156,7 @@ private void processJsonNode(ObjectMapper mapper, JsonNode node) {
 
     case "add":
       try {
-        BoardPort port = mapper.treeToValue(node, BoardPort.class);
+        BoardPort port = mapper.treeToValue(node.get("port"), BoardPort.class);
         port.searchMatchingBoard();
         addOrUpdate(port);
       } catch (JsonProcessingException e) {
@@ -167,7 +167,7 @@ private void processJsonNode(ObjectMapper mapper, JsonNode node) {
 
     case "remove":
       try {
-        BoardPort port = mapper.treeToValue(node, BoardPort.class);
+        BoardPort port = mapper.treeToValue(node.get("port"), BoardPort.class);
         remove(port);
       } catch (JsonProcessingException e) {
         System.err.println(format("{0}: Invalid BoardPort message", discoveryName));

File: arduino-core/src/cc/arduino/packages/discoverers/NetworkDiscovery.java
Patch:
@@ -162,7 +162,7 @@ public void stop() {
 
   @Override
   public List<BoardPort> listDiscoveredBoards() {
-      synchronized (reachableBoardPorts) {
+    synchronized (reachableBoardPorts) {
       return getBoardPortsDiscoveredWithJmDNS();
     }
   }
@@ -176,8 +176,8 @@ public List<BoardPort> listDiscoveredBoards(boolean complete) {
 
   public void setReachableBoardPorts(List<BoardPort> newReachableBoardPorts) {
     synchronized (reachableBoardPorts) {
-      this.reachableBoardPorts.clear();
-      this.reachableBoardPorts.addAll(newReachableBoardPorts);
+      reachableBoardPorts.clear();
+      reachableBoardPorts.addAll(newReachableBoardPorts);
     }
   }
 

File: app/src/processing/app/Editor.java
Patch:
@@ -2392,9 +2392,9 @@ private void handleBoardInfo() {
     for (BoardPort port : ports) {
       if (port.getAddress().equals(selectedPort)) {
         label = port.getBoardName();
-        vid = port.getVID();
-        pid = port.getPID();
-        iserial = port.getISerial();
+        vid = port.getPrefs().get("vid");
+        pid = port.getPrefs().get("pid");
+        iserial = port.getPrefs().get("iserial");
         protocol = port.getProtocol();
         found = true;
         break;

File: arduino-core/src/cc/arduino/packages/discoverers/PluggableDiscovery.java
Patch:
@@ -78,7 +78,7 @@ public void run() {
       while (program != null && program.isAlive()) {
         PluggableDiscoveryMessage msg = mapper.readValue(parser, PluggableDiscoveryMessage.class);
         if (msg != null) {
-          System.out.println(discoveryName + ": received json: vid=" + msg.getVID() + ", pid=" + msg.getPID() + ", sernum=" + msg.getISerial());
+          System.out.println(discoveryName + ": received json: " + msg.getPrefs());
           String event = msg.getEventType();
           if (event != null) {
             if (event.equals("Error: START_SYNC not supported")) {

File: arduino-core/src/cc/arduino/packages/discoverers/PluggableDiscovery.java
Patch:
@@ -74,7 +74,7 @@ public void run() {
       while (program != null && program.isAlive()) {
         PluggableDiscoveryMessage msg = mapper.readValue(parser, PluggableDiscoveryMessage.class);
         if (msg != null) {
-          System.out.println(discoveryName + ": received json");
+          System.out.println(discoveryName + ": received json: vid=" + msg.getVID() + ", pid=" + msg.getPID() + ", sernum=" + msg.getISerial());
           String event = msg.getEventType();
           if (event != null) {
             if (event.equals("Error: START_SYNC not supported")) {

File: arduino-core/src/processing/app/helpers/FileUtils.java
Patch:
@@ -344,6 +344,9 @@ public static List<File> listFiles(File folder, boolean recursive,
   public static List<File> listFiles(File folder, boolean recursive,
                                      List<String> extensions) {
     List<File> result = new ArrayList<>();
+    if (!folder.exists()) {
+      return result;
+    }
 
     for (File file : folder.listFiles()) {
       if (isSCCSOrHiddenFile(file))

File: app/src/processing/app/Base.java
Patch:
@@ -932,9 +932,10 @@ public boolean handleClose(Editor editor) {
     }
 
     if (editors.size() == 1) {
+      handleQuit();
+      // Everything called after handleQuit will only affect OSX
       editor.setVisible(false);
       editors.remove(editor);
-      handleQuit();
     } else {
       // More than one editor window open,
       // proceed with closing the current window.

File: app/src/processing/app/Base.java
Patch:
@@ -932,9 +932,10 @@ public boolean handleClose(Editor editor) {
     }
 
     if (editors.size() == 1) {
+      handleQuit();
+      // Everything called after handleQuit will only affect OSX
       editor.setVisible(false);
       editors.remove(editor);
-      handleQuit();
     } else {
       // More than one editor window open,
       // proceed with closing the current window.

File: arduino-core/src/processing/app/helpers/OSUtils.java
Patch:
@@ -27,6 +27,6 @@ static public boolean isMacOS() {
   }
 
   static public boolean hasMacOSStyleMenus() {
-    return OSUtils.isMacOS() && System.getProperty("apple.laf.useScreenMenuBar").equals("true");
+    return OSUtils.isMacOS() && "true".equals(System.getProperty("apple.laf.useScreenMenuBar"));
   }
 }

File: app/test/processing/app/CommandLineTest.java
Patch:
@@ -142,7 +142,7 @@ public void testCommandLineVersion() throws Exception {
       .as("Process will finish with exit code 0 in --version")
       .isEqualTo(0);
     Assertions.assertThat(new String(IOUtils.toByteArray(pr.getInputStream())))
-      .matches("Arduino: \\d+\\.\\d+\\.\\d+.*");
+      .matches("Arduino: \\d+\\.\\d+\\.\\d+.*\n");
   }
 
   @Test

File: app/src/processing/app/Editor.java
Patch:
@@ -1060,7 +1060,8 @@ private void populatePortMenu() {
     Collections.sort(ports, new Comparator<BoardPort>() {
       @Override
       public int compare(BoardPort o1, BoardPort o2) {
-        return BOARD_PROTOCOLS_ORDER.indexOf(o1.getProtocol()) - BOARD_PROTOCOLS_ORDER.indexOf(o2.getProtocol());
+        return (BOARD_PROTOCOLS_ORDER.indexOf(o1.getProtocol()) - BOARD_PROTOCOLS_ORDER.indexOf(o2.getProtocol())) * 10 +
+               o1.getAddress().compareTo(o2.getAddress());
       }
     });
 

File: app/src/processing/app/Editor.java
Patch:
@@ -2345,6 +2345,8 @@ private void handleBurnBootloader() {
           SwingUtilities.invokeLater(() -> statusError(tr("Error while burning bootloader.")));
           // error message will already be visible
         }
+      } catch (SerialNotFoundException e) {
+        SwingUtilities.invokeLater(() -> statusError(tr("Error while burning bootloader: please select a serial port.")));
       } catch (PreferencesMapException e) {
         SwingUtilities.invokeLater(() -> {
           statusError(I18n.format(

File: arduino-core/src/cc/arduino/UploaderUtils.java
Patch:
@@ -48,9 +48,6 @@ public Uploader getUploaderByPreferences(boolean noUploadPort) {
     BoardPort boardPort = null;
     if (!noUploadPort) {
       String port = PreferencesData.get("serial.port");
-      if (port == null || port.isEmpty()) {
-        return null;
-      }
       boardPort = BaseNoGui.getDiscoveryManager().find(port);
     }
 

File: arduino-core/src/cc/arduino/packages/Uploader.java
Patch:
@@ -106,7 +106,7 @@ public String getAuthorizationKey() {
   }
 
   // static field for last executed programmer process ID
-  static protected Process programmerPid;
+  static public Process programmerPid;
 
   protected boolean executeUploadCommand(Collection<String> command) throws Exception {
     return executeUploadCommand(command.toArray(new String[command.size()]));

File: arduino-core/src/processing/app/linux/Platform.java
Patch:
@@ -39,6 +39,8 @@ public class Platform extends processing.app.Platform {
 
   @Override
   public void setLookAndFeel() throws Exception {
+    // Override desktop check
+    System.setProperty("sun.desktop", "gnome");
     super.setLookAndFeel();
     GTKLookAndFeelFixer.installGtkPopupBugWorkaround();
   }

File: arduino-core/src/processing/app/linux/Platform.java
Patch:
@@ -37,10 +37,9 @@
  */
 public class Platform extends processing.app.Platform {
 
-  // TODO Need to be smarter here since KDE people ain't gonna like that GTK.
-  //      It may even throw a weird exception at 'em for their trouble.
   @Override
   public void setLookAndFeel() throws Exception {
+    super.setLookAndFeel();
     GTKLookAndFeelFixer.installGtkPopupBugWorkaround();
   }
 

File: arduino-core/src/cc/arduino/contributions/packages/ContributedPlatform.java
Patch:
@@ -87,7 +87,7 @@ public void setBuiltIn(boolean builtIn) {
   public static final Comparator<ContributedPlatform> BUILTIN_AS_LAST = (x, y) -> {
     int px = x.isBuiltIn() ? 1 : -1;
     int py = y.isBuiltIn() ? 1 : -1;
-    return py - px;
+    return px - py;
   };
 
   private Map<ContributedToolReference, ContributedTool> resolvedToolReferences;

File: app/src/processing/app/Base.java
Patch:
@@ -1432,7 +1432,7 @@ public void actionPerformed(ActionEvent actionevent) {
     boardMenu.add(new JSeparator());
 
     // Generate custom menus for all platforms
-    Set<String> customMenusTitles = new HashSet<>();
+    Set<String> customMenusTitles = new LinkedHashSet<>();
     for (TargetPackage targetPackage : BaseNoGui.packages.values()) {
       for (TargetPlatform targetPlatform : targetPackage.platforms()) {
         customMenusTitles.addAll(targetPlatform.getCustomMenus().values());

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -54,6 +54,7 @@
 import java.util.List;
 import java.util.Optional;
 
+import static processing.app.I18n.format;
 import static processing.app.I18n.tr;
 
 public class LibrariesIndexer {
@@ -203,7 +204,7 @@ private void scanLibrary(UserLibraryFolder folderDesc) throws IOException {
       LegacyUserLibrary lib = LegacyUserLibrary.create(folderDesc);
       String[] headers = BaseNoGui.headerListFromIncludePath(lib.getSrcFolder());
       if (headers.length == 0) {
-        throw new IOException(lib.getSrcFolder().getAbsolutePath());
+        throw new IOException(format(tr("no headers files (.h) found in {0}"), lib.getSrcFolder()));
       }
       addToInstalledLibraries(lib);
       return;
@@ -213,7 +214,7 @@ private void scanLibrary(UserLibraryFolder folderDesc) throws IOException {
     UserLibrary lib = UserLibrary.create(folderDesc);
     String[] headers = BaseNoGui.headerListFromIncludePath(lib.getSrcFolder());
     if (headers.length == 0) {
-      throw new IOException(lib.getSrcFolder().getAbsolutePath());
+      throw new IOException(format(tr("no headers files (.h) found in {0}"), lib.getSrcFolder()));
     }
     addToInstalledLibraries(lib);
 

File: app/src/processing/app/Editor.java
Patch:
@@ -508,7 +508,7 @@ public void menuSelected(MenuEvent e) {
         if (!components.contains(sketchbookMenu)) {
           fileMenu.insert(sketchbookMenu, 3);
         }
-        if (!components.contains(sketchbookMenu)) {
+        if (!components.contains(examplesMenu)) {
           fileMenu.insert(examplesMenu, 4);
         }
         fileMenu.revalidate();

File: arduino-core/src/processing/app/PreferencesData.java
Patch:
@@ -114,6 +114,9 @@ static protected void save() {
     if (!doSave)
       return;
 
+    if (getBoolean("preferences.readonly"))
+      return;
+
     // on startup, don't worry about it
     // this is trying to update the prefs for who is open
     // before Preferences.init() has been called.

File: arduino-core/src/processing/app/helpers/CommandlineParser.java
Patch:
@@ -265,7 +265,7 @@ private void processBoardArgument(String selectBoard) {
         if (!targetBoard.hasMenu(key))
           BaseNoGui.showError(null, I18n.format(tr("{0}: Invalid option for board \"{1}\""), key, targetBoard.getId()), 3);
         if (targetBoard.getMenuLabel(key, value) == null)
-          BaseNoGui.showError(null, I18n.format(tr("{0}: Invalid option for \"{1}\" option for board \"{2}\""), value, key, targetBoard.getId()), 3);
+          BaseNoGui.showError(null, I18n.format(tr("{0}: Invalid value for option \"{1}\" for board \"{2}\""), value, key, targetBoard.getId()), 3);
 
         PreferencesData.set("custom_" + key, targetBoard.getId() + "_" + value);
       }

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -181,7 +181,7 @@ private void scanInstalledLibraries(UserLibraryFolder folderDesc) {
               + "Library folder names must start with a letter or number, followed by letters,\n"
               + "numbers, dashes, dots and underscores. Maximum length is 63 characters."),
               subfolderName);
-          BaseNoGui.showMessage(tr("Ignoring bad library name"), mess);
+          BaseNoGui.showMessage(tr("Ignoring library with bad name"), mess);
         }
         continue;
       }

File: app/src/processing/app/SketchController.java
Patch:
@@ -846,8 +846,9 @@ private static String checkName(String origName) {
 
     if (!newName.equals(origName)) {
       String msg =
-        tr("The sketch name had to be modified. Sketch names can only consist\n" +
-          "of ASCII characters and numbers and be less than 64 characters long.");
+        tr("The sketch name had to be modified.\n" +
+          "Sketch names must start with a letter or number, followed by letters,\n" +
+          "numbers, dashes, dots and underscores. Maximum length is 63 characters.");
       System.out.println(msg);
     }
     return newName;

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -178,8 +178,8 @@ private void scanInstalledLibraries(UserLibraryFolder folderDesc) {
           badLibNotified.add(subfolderName);
 
           String mess = I18n.format(tr("The library \"{0}\" cannot be used.\n"
-              + "Library names must contain only basic letters and numbers.\n"
-              + "(ASCII only and no spaces, and it cannot start with a number)"),
+              + "Library folder names must start with a letter or number, followed by letters,\n"
+              + "numbers, dashes, dots and underscores. Maximum length is 63 characters."),
               subfolderName);
           BaseNoGui.showMessage(tr("Ignoring bad library name"), mess);
         }

File: app/src/processing/app/Editor.java
Patch:
@@ -1970,7 +1970,7 @@ protected boolean handleOpenInternal(File sketchFile) {
     return true;
   }
 
-  private void updateTitle() {
+  public void updateTitle() {
     if (sketchController == null) {
       return;
     }

File: app/src/processing/app/SketchController.java
Patch:
@@ -438,7 +438,7 @@ protected boolean saveAs() throws IOException {
     //editor.sketchbook.rebuildMenusAsync();
     editor.base.rebuildSketchbookMenus();
     editor.header.rebuild();
-
+    editor.updateTitle();
     // Make sure that it's not an untitled sketch
     setUntitled(false);
 

File: arduino-core/src/processing/app/packages/UserLibrary.java
Patch:
@@ -141,7 +141,7 @@ public static UserLibrary create(UserLibraryFolder libFolderDesc) throws IOExcep
     }
 
     List<String> includes = null;
-    if (properties.containsKey("includes")) {
+    if (properties.containsKey("includes") && !properties.get("includes").trim().isEmpty()) {
       includes = new ArrayList<>();
       for (String i : properties.get("includes").split(","))
         includes.add(i.trim());

File: app/src/processing/app/Base.java
Patch:
@@ -487,6 +487,9 @@ public Base(String[] args) throws Exception {
       System.exit(0);
     } else if (parser.isGetPrefMode()) {
       BaseNoGui.dumpPrefs(parser);
+    } else if (parser.isVersionMode()) {
+      System.out.print("Arduino: " + BaseNoGui.VERSION_NAME_LONG);
+      System.exit(0);
     }
   }
 

File: arduino-core/src/cc/arduino/contributions/libraries/ContributedLibrary.java
Patch:
@@ -65,6 +65,8 @@ public abstract class ContributedLibrary extends DownloadableContribution {
 
   public abstract List<ContributedLibraryReference> getRequires();
 
+  public abstract List<String> getProvidesIncludes();
+
   public static final Comparator<ContributedLibrary> CASE_INSENSITIVE_ORDER = (o1, o2) -> o1.getName().compareToIgnoreCase(o2.getName());
 
   private Optional<UserLibrary> installedLib = Optional.empty();

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -134,7 +134,7 @@ enum BuilderAction {
     }
   }
 
-  private static final Pattern ERROR_FORMAT = Pattern.compile("(.+\\.\\w+):(\\d+)(:\\d+)*:\\s*error:\\s*(.*)\\s*", Pattern.MULTILINE | Pattern.DOTALL);
+  private static final Pattern ERROR_FORMAT = Pattern.compile("(.+\\.\\w+):(\\d+)(:\\d+)*:\\s*(fatal)?\\s*error:\\s*(.*)\\s*", Pattern.MULTILINE | Pattern.DOTALL);
 
   private final File pathToSketch;
   private final Sketch sketch;

File: app/src/processing/app/Base.java
Patch:
@@ -339,6 +339,7 @@ public Base(String[] args) throws Exception {
       LibrariesIndexer indexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder());
       indexer.parseIndex();
       indexer.setLibrariesFolders(BaseNoGui.getLibrariesFolders());
+      indexer.rescanLibraries();
 
       for (String library : parser.getLibraryToInstall().split(",")) {
         String[] libraryToInstallParts = library.split(":");

File: app/test/cc/arduino/contributions/UpdatableLibraryTest.java
Patch:
@@ -37,6 +37,7 @@ public void testUpdatableLibrary() throws Exception {
     BaseNoGui.librariesIndexer = indexer;
     indexer.parseIndex();
     indexer.setLibrariesFolders(folders);
+    indexer.rescanLibraries();
 
     ContributedLibrary sdLib = indexer.getIndex().getInstalled("SD").get();
     assertTrue("SD lib is installed", sdLib.isLibraryInstalled());
@@ -63,6 +64,7 @@ public void testUpdatableLibraryWithBundled() throws Exception {
     BaseNoGui.librariesIndexer = indexer;
     indexer.parseIndex();
     indexer.setLibrariesFolders(folders);
+    indexer.rescanLibraries();
 
     ContributedLibrary l = indexer.getIndex().getInstalled("Bridge").get();
     assertTrue("Bridge lib is installed", l.isLibraryInstalled());

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -675,6 +675,8 @@ static public void onBoardOrPortChange() {
     // Libraries located in the latest folders on the list can override
     // other libraries with the same name.
     librariesIndexer.setLibrariesFolders(librariesFolders);
+    librariesIndexer.setArchitecturePriority(getTargetPlatform().getId());
+    librariesIndexer.rescanLibraries();
 
     populateImportToLibraryTable();
   }

File: arduino-core/src/cc/arduino/i18n/Language.java
Patch:
@@ -41,6 +41,7 @@ public Language(String name, String originalName, String isoCode) {
     this.isoCode = isoCode;
   }
 
+  @Override
   public String toString() {
     if (originalName.length() == 0) {
       return name;

File: app/src/cc/arduino/i18n/Languages.java
Patch:
@@ -63,7 +63,6 @@ public class Languages {
       new Language(tr("English"), "English", "en"),
       new Language(tr("English (United Kingdom)"), "English (United Kingdom)", "en_GB"),
       new Language(tr("Estonian"), "Eesti", "et"),
-      new Language(tr("Estonian (Estonia)"), "Eesti keel", "et_EE"),
       new Language(tr("Filipino"), "Pilipino", "fil"),
       new Language(tr("Finnish"), "Suomi", "fi"),
       new Language(tr("French"), "Français", "fr"),

File: app/src/cc/arduino/contributions/libraries/LibraryOfSameTypeComparator.java
Patch:
@@ -47,7 +47,7 @@ public int compare(UserLibrary o1, UserLibrary o2) {
       return -1;
     }
     if (!o1.getTypes().get(0).equals(o2.getTypes().get(0))) {
-      return 0;
+      return o1.getTypes().get(0).compareTo(o2.getTypes().get(0));
     }
     return o1.getName().compareTo(o2.getName());
   }

File: app/src/processing/app/Base.java
Patch:
@@ -359,7 +359,7 @@ public Base(String[] args) throws Exception {
         }
 
         Optional<ContributedLibrary> mayInstalled = indexer.getIndex().getInstalled(libraryToInstallParts[0]);
-        if (mayInstalled.isPresent() && mayInstalled.get().isIDEBuiltIn()) {
+        if (mayInstalled.isPresent() && selected.isIDEBuiltIn()) {
           libraryInstaller.remove(mayInstalled.get(), progressListener);
         } else {
           libraryInstaller.install(selected, mayInstalled, progressListener);

File: app/src/processing/app/Base.java
Patch:
@@ -1061,7 +1061,6 @@ protected void rebuildSketchbookMenu(JMenu menu) {
 
   private LibraryList getSortedLibraries() {
     LibraryList installedLibraries = BaseNoGui.librariesIndexer.getInstalledLibraries();
-    Collections.sort(installedLibraries, new LibraryByTypeComparator());
     Collections.sort(installedLibraries, new LibraryOfSameTypeComparator());
     return installedLibraries;
   }

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -30,7 +30,6 @@
 package cc.arduino.contributions.libraries;
 
 import cc.arduino.Constants;
-import cc.arduino.contributions.libraries.filters.TypePredicate;
 import cc.arduino.contributions.packages.ContributedPlatform;
 import com.fasterxml.jackson.databind.DeserializationFeature;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -130,7 +129,7 @@ public void rescanLibraries() {
     }
 
     installedLibraries.stream() //
-        .filter(new TypePredicate("Contributed")) //
+        .filter(l -> l.getTypes().contains("Contributed")) //
         .filter(l -> l.getLocation() == Location.CORE || l.getLocation() == Location.REFERENCED_CORE) //
         .forEach(l -> {
           ContributedPlatform platform = BaseNoGui.indexer.getPlatformByFolder(l.getInstalledFolder());

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -204,11 +204,11 @@ private void scanLibrary(UserLibraryFolder folderDesc) throws IOException {
       }
     }
 
-    if (lib.getTypes() == null && folderDesc.location == Location.SKETCHBOOK) {
+    if (lib.getTypes().isEmpty() && loc == Location.SKETCHBOOK) {
       lib.setTypes(lib.getDeclaredTypes());
     }
 
-    if (lib.getTypes() == null) {
+    if (lib.getTypes().isEmpty()) {
       lib.setTypes(Collections.singletonList("Contributed"));
     }
   }

File: arduino-core/src/cc/arduino/contributions/libraries/filters/TypePredicate.java
Patch:
@@ -43,7 +43,7 @@ public TypePredicate(String type) {
 
   @Override
   public boolean test(UserLibrary input) {
-    return input.getTypes() != null && input.getTypes().contains(type);
+    return input.getTypes().contains(type);
   }
 
 }

File: arduino-core/src/processing/app/packages/UserLibrary.java
Patch:
@@ -56,7 +56,7 @@ public class UserLibrary {
   private String category;
   private String license;
   private List<String> architectures;
-  private List<String> types;
+  private List<String> types = new ArrayList<>();
   private List<String> declaredTypes;
   private boolean onGoingDevelopment;
   private List<String> includes;

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndex.java
Patch:
@@ -91,14 +91,14 @@ public List<String> getTypes() {
     return types;
   }
 
-  public ContributedLibrary getInstalled(String name) {
+  public Optional<ContributedLibrary> getInstalled(String name) {
     List<ContributedLibrary> installedReleases = find(name).stream().filter(new InstalledPredicate()).collect(Collectors.toList());
     Collections.sort(installedReleases, new DownloadableContributionBuiltInAtTheBottomComparator());
 
     if (installedReleases.isEmpty()) {
-      return null;
+      return Optional.empty();
     }
 
-    return installedReleases.get(0);
+    return Optional.of(installedReleases.get(0));
   }
 }

File: arduino-core/src/processing/app/windows/Platform.java
Patch:
@@ -44,15 +44,14 @@
 public class Platform extends processing.app.Platform {
 
   private File settingsFolder;
-  private File defaultSketchbookFolder;
+  private File defaultSketchbookFolder = null;
 
   @Override
   public void init() throws Exception {
     super.init();
 
     checkPath();
     recoverSettingsFolderPath();
-    recoverDefaultSketchbookFolder();
   }
 
   private void recoverSettingsFolderPath() throws Exception {
@@ -119,6 +118,7 @@ public File getSettingsFolder() {
 
   @Override
   public File getDefaultSketchbookFolder() throws Exception {
+    recoverDefaultSketchbookFolder();
     return defaultSketchbookFolder;
   }
 

File: app/src/processing/app/Base.java
Patch:
@@ -1084,6 +1084,7 @@ public void rebuildImportMenu(JMenu importMenu) {
     addLibraryMenuItem.addActionListener(new ActionListener() {
       public void actionPerformed(ActionEvent e) {
         Base.this.handleAddLibrary();
+        BaseNoGui.librariesIndexer.rescanLibraries();
         Base.this.onBoardOrPortChange();
         Base.this.rebuildImportMenu(Editor.importMenu);
         Base.this.rebuildExamplesMenu(Editor.examplesMenu);

File: app/src/processing/app/Editor.java
Patch:
@@ -458,8 +458,10 @@ public void applyPreferences() {
     boolean external = PreferencesData.getBoolean("editor.external");
     saveMenuItem.setEnabled(!external);
     saveAsMenuItem.setEnabled(!external);
-    for (EditorTab tab: tabs)
+    for (EditorTab tab: tabs) {
       tab.applyPreferences();
+    }
+    console.applyPreferences();
   }
 
 

File: arduino-core/src/processing/app/windows/Platform.java
Patch:
@@ -289,7 +289,6 @@ public static int detectSystemDPI() {
       return ExtUser32.INSTANCE.GetDpiForSystem();
     } catch (Throwable e) {
       // DPI detection failed, fall back with default
-      System.out.println("DPI detection failed, fallback to 96 dpi");
       return -1;
     }
   }

File: arduino-core/src/cc/arduino/contributions/packages/ContributionInstaller.java
Patch:
@@ -329,7 +329,8 @@ private File download(MultiStepProgress progress, String packageIndexUrl, Progre
     File outputFile = BaseNoGui.indexer.getIndexFile(urlPathParts[urlPathParts.length - 1]);
     File tmpFile = new File(outputFile.getAbsolutePath() + ".tmp");
     DownloadableContributionsDownloader downloader = new DownloadableContributionsDownloader(BaseNoGui.indexer.getStagingFolder());
-    downloader.download(url, tmpFile, progress, statusText, progressListener);
+    boolean noResume = true;
+    downloader.download(url, tmpFile, progress, statusText, progressListener, noResume);
 
     Files.deleteIfExists(outputFile.toPath());
     Files.move(tmpFile.toPath(), outputFile.toPath());

File: arduino-core/src/cc/arduino/packages/Discovery.java
Patch:
@@ -31,7 +31,7 @@
 
 import java.util.List;
 
-public interface Discovery {
+public interface Discovery extends Runnable {
 
   /**
    * Start discovery service

File: arduino-core/src/cc/arduino/packages/DiscoveryManager.java
Patch:
@@ -51,7 +51,7 @@ public DiscoveryManager() {
     // Start all discoverers
     for (Discovery d : discoverers) {
       try {
-        d.start();
+        new Thread(d).start();
       } catch (Exception e) {
         System.err.println(tr("Error starting discovery method: ") + d.getClass());
         e.printStackTrace();

File: app/src/processing/app/Editor.java
Patch:
@@ -72,6 +72,8 @@
 import static processing.app.I18n.tr;
 import static processing.app.Theme.scale;
 
+import processing.app.helpers.FileUtils;
+
 /**
  * Main editor panel for the Processing Development Environment.
  */
@@ -1935,7 +1937,7 @@ protected boolean handleOpenInternal(File sketchFile) {
         // copy the sketch inside
         File properPdeFile = new File(properFolder, sketchFile.getName());
         try {
-          Base.copyFile(sketchFile, properPdeFile);
+          FileUtils.copy(new File(sketchFile.getParent()), properFolder);
         } catch (IOException e) {
           Base.showWarning(tr("Error"), tr("Could not copy to a proper location."), e);
           return false;

File: app/src/processing/app/syntax/PdeKeywords.java
Patch:
@@ -115,7 +115,7 @@ private void parseKeywordsTxt(File input) throws Exception {
           continue;
         }
 
-        String pieces[] = line.split("\\s+", 4);
+        String pieces[] = line.split("\t");
 
         String keyword = pieces[0].trim();
         if (keyword.startsWith("\\#")) {

File: arduino-core/src/cc/arduino/contributions/packages/ContributionInstaller.java
Patch:
@@ -235,7 +235,6 @@ private void executeScripts(File folder, Collection<File> postInstallScripts, bo
   }
 
   public synchronized List<String> remove(ContributedPlatform contributedPlatform) {
-    BaseNoGui.indexer.getPackages().stream().flatMap(p -> p.getPlatforms().stream()).filter(new InstalledPredicate()).collect(Collectors.toList());
     if (contributedPlatform == null || contributedPlatform.isReadOnly()) {
       return new LinkedList<>();
     }

File: app/src/processing/app/helpers/Keys.java
Patch:
@@ -220,7 +220,7 @@ public static KeyStroke ctrlShift(int keyCode) {
   }
 
   /**
-   * Creates a KeyCode for the "menu shortcut" + shift + the key passed in. By
+   * Creates a KeyCode for the "menu shortcut" + alt + the key passed in. By
    * default, the menu shortcut is the ctrl key (hence the method name), but
    * platforms might use a different key (like the Apple key on OSX).
    *

File: app/src/processing/app/syntax/PdeKeywords.java
Patch:
@@ -116,7 +116,7 @@ private void parseKeywordsTxt(File input) throws Exception {
           continue;
         }
 
-        String pieces[] = PApplet.split(line, '\t');
+        String pieces[] = line.split("\\s+", 4);
 
         String keyword = pieces[0].trim();
         if (keyword.startsWith("\\#")) {

File: app/src/processing/app/Base.java
Patch:
@@ -1103,7 +1103,7 @@ public void actionPerformed(ActionEvent e) {
             importMenu.addSeparator();
           }
           lastLibType = lib.getTypes().get(0);
-          JMenuItem platformItem = new JMenuItem(I18n.format(tr("{0} libraries"), lastLibType));
+          JMenuItem platformItem = new JMenuItem(I18n.format(tr("{0} libraries"), tr(lastLibType)));
           platformItem.setEnabled(false);
           importMenu.add(platformItem);
         }

File: app/src/processing/app/Editor.java
Patch:
@@ -619,7 +619,7 @@ public void actionPerformed(ActionEvent e) {
     fileMenu.add(item);
 
     // macosx already has its own preferences and quit menu
-    if (!OSUtils.isMacOS()) {
+    if (!OSUtils.isMacOS() || System.getProperty("apple.laf.useScreenMenuBar") == "false") {
       fileMenu.addSeparator();
 
       item = newJMenuItem(tr("Preferences"), ',');
@@ -1252,7 +1252,7 @@ public void actionPerformed(ActionEvent e) {
     menu.add(item);
 
     // macosx already has its own about menu
-    if (!OSUtils.isMacOS()) {
+    if (!OSUtils.isMacOS() || System.getProperty("apple.laf.useScreenMenuBar") == "false") {
       menu.addSeparator();
       item = new JMenuItem(tr("About Arduino"));
       item.addActionListener(new ActionListener() {
@@ -1812,7 +1812,7 @@ protected boolean checkModified() {
     String prompt = I18n.format(tr("Save changes to \"{0}\"?  "),
                                 sketch.getName());
 
-    if (!OSUtils.isMacOS()) {
+    if (!OSUtils.isMacOS() || System.getProperty("apple.laf.useScreenMenuBar") == "false") {
       int result =
         JOptionPane.showConfirmDialog(this, prompt, tr("Close"),
                                       JOptionPane.YES_NO_CANCEL_OPTION,

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -62,9 +62,6 @@ public Platform() {
   @Override
   public void init() throws Exception {
     super.init();
-
-    System.setProperty("apple.laf.useScreenMenuBar", "true");
-
     discoverRealOsArch();
   }
 

File: arduino-core/src/processing/app/helpers/PreferencesHelper.java
Patch:
@@ -94,6 +94,8 @@ public static Font getFont(PreferencesMap prefs, String key) {
     try {
       // ParseDouble handle numbers with decimals too
       size = (int) Double.parseDouble(split[2]);
+      if (size < 1) // Do not allow negative or zero size
+        throw new NumberFormatException();
     } catch (NumberFormatException e) {
       // for wrong formatted size pick the default
       size = 12;

File: app/src/processing/app/SketchController.java
Patch:
@@ -826,8 +826,7 @@ private static String checkName(String origName) {
     if (!newName.equals(origName)) {
       String msg =
         tr("The sketch name had to be modified. Sketch names can only consist\n" +
-          "of ASCII characters and numbers (but cannot start with a number).\n" +
-          "They should also be less than 64 characters long.");
+          "of ASCII characters and numbers and be less than 64 characters long.");
       System.out.println(msg);
     }
     return newName;

File: arduino-core/src/processing/app/SketchFile.java
Patch:
@@ -177,7 +177,7 @@ private boolean deleteCompiledFilesFrom(Path tempBuildFolder) throws IOException
   public void renameTo(String newName) throws IOException {
     File newFile = new File(file.getParentFile(), newName);
     sketch.checkNewFilename(newFile);
-    if (file.renameTo(newFile)) {
+    if (!file.exists() || file.renameTo(newFile)) {
       renamedTo(newFile);
     } else {
       String msg = I18n.format(tr("Failed to rename \"{0}\" to \"{1}\""), file.getName(), newName);

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -41,9 +41,9 @@
 public class BaseNoGui {
 
   /** Version string to be used for build */
-  public static final int REVISION = 10803;
+  public static final int REVISION = 10804;
   /** Extended version string displayed on GUI */
-  public static final String VERSION_NAME = "1.8.3";
+  public static final String VERSION_NAME = "1.8.4";
   public static final String VERSION_NAME_LONG;
 
   // Current directory to use for relative paths specified on the

File: app/src/processing/app/EditorHeader.java
Patch:
@@ -351,7 +351,7 @@ public Dimension getMinimumSize() {
 
 
   public Dimension getMaximumSize() {
-    Dimension size = scale(new Dimension(3000, GRID_SIZE));
+    Dimension size = scale(new Dimension(30000, GRID_SIZE));
     if (OSUtils.isMacOS())
       size.height--;
     return size;

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -450,7 +450,7 @@ public Dimension getMinimumSize() {
 
 
   public Dimension getMaximumSize() {
-    return new Dimension(scale(3000), BUTTON_HEIGHT);
+    return new Dimension(scale(30000), BUTTON_HEIGHT);
   }
 
   public boolean dispatchKeyEvent(final KeyEvent e) {

File: arduino-core/src/cc/arduino/Constants.java
Patch:
@@ -80,10 +80,11 @@ public class Constants {
     String externalLibraryIndexUrl = System.getProperty("LIBRARY_INDEX_URL");
     if (externalLibraryIndexUrl != null && !"".equals(externalLibraryIndexUrl)) {
       LIBRARY_INDEX_URL = externalLibraryIndexUrl;
-      LIBRARY_INDEX_URL_GZ = "";
       String externalLibraryIndexUrlGz = System.getProperty("LIBRARY_INDEX_URL_GZ");
       if (externalLibraryIndexUrlGz != null && !"".equals(externalLibraryIndexUrlGz)) {
         LIBRARY_INDEX_URL_GZ = externalLibraryIndexUrlGz;
+      } else {
+        LIBRARY_INDEX_URL_GZ = "";
       }
     } else {
       LIBRARY_INDEX_URL = "http://downloads.arduino.cc/libraries/library_index.json";

File: app/src/processing/app/Editor.java
Patch:
@@ -1108,6 +1108,9 @@ public int compare(BoardPort o1, BoardPort o2) {
     }
 
     portMenu.setEnabled(portMenu.getMenuComponentCount() > 0);
+    if (portMenu.getMenuComponentCount() > 0) {
+      MenuScroller.setScrollerFor(portMenu);
+    }
   }
 
 

File: arduino-core/src/processing/app/SketchFile.java
Patch:
@@ -177,7 +177,7 @@ private boolean deleteCompiledFilesFrom(Path tempBuildFolder) throws IOException
   public void renameTo(String newName) throws IOException {
     File newFile = new File(file.getParentFile(), newName);
     sketch.checkNewFilename(newFile);
-    if (file.renameTo(newFile)) {
+    if (!file.exists() || file.renameTo(newFile)) {
       renamedTo(newFile);
     } else {
       String msg = I18n.format(tr("Failed to rename \"{0}\" to \"{1}\""), file.getName(), newName);

File: app/src/processing/app/EditorTab.java
Patch:
@@ -148,7 +148,7 @@ private SketchTextArea createTextArea(RSyntaxDocument document)
     textArea.setMarginLineEnabled(false);
     textArea.setCodeFoldingEnabled(PreferencesData.getBoolean("editor.code_folding"));
     textArea.setAutoIndentEnabled(PreferencesData.getBoolean("editor.indent"));
-    textArea.setCloseCurlyBraces(PreferencesData.getBoolean("editor.autocomplete"));
+    textArea.setCloseCurlyBraces(PreferencesData.getBoolean("editor.auto_close_braces", true));
     textArea.setAntiAliasingEnabled(PreferencesData.getBoolean("editor.antialias"));
     textArea.setTabsEmulated(PreferencesData.getBoolean("editor.tabs.expand"));
     textArea.setTabSize(PreferencesData.getInteger("editor.tabs.size"));

File: app/test/processing/app/CommandLineTest.java
Patch:
@@ -59,7 +59,7 @@ public void findBuildPaths() throws Exception {
       arduinoPath = new File(buildPath, "build/linux/work/arduino");
     }
     if (OSUtils.isWindows()) {
-      arduinoPath = new File(buildPath, "build/windows/work/arduino");
+      arduinoPath = new File(buildPath, "build/windows/work/arduino.exe");
     }
     if (OSUtils.isMacOS()) {
       arduinoPath = new File(buildPath,

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -103,9 +103,8 @@ public EditorConsole() {
     FontMetrics metrics = getFontMetrics(actualFont);
     int height = metrics.getAscent() + metrics.getDescent();
     int lines = PreferencesData.getInteger("console.lines");
-    int sizeFudge = 6; //10; // unclear why this is necessary, but it is
-    setPreferredSize(new Dimension(100, (height * lines) + sizeFudge));
-    setMinimumSize(new Dimension(100, (height * 5) + sizeFudge));
+    setPreferredSize(new Dimension(100, (height * lines)));
+    setMinimumSize(new Dimension(100, (height * lines)));
 
     EditorConsole.init(stdOutStyle, System.out, stdErrStyle, System.err);
   }

File: app/src/processing/app/Base.java
Patch:
@@ -277,7 +277,9 @@ public Base(String[] args) throws Exception {
     // Save the preferences. For GUI mode, this happens in the quit
     // handler, but for other modes we should also make sure to save
     // them.
-    PreferencesData.save();
+    if (parser.isForceSavePrefs()) {
+      PreferencesData.save();
+    }
 
     if (parser.isInstallBoard()) {
       ContributionsIndexer indexer = new ContributionsIndexer(

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -98,7 +98,7 @@ public EditorStatus(Editor editor) {
     this.message = NO_MESSAGE;
     this.mode = NOTICE;
     this.font = Theme.getFont("status.font");
-    this.compilerProgressListeners = new ArrayList<CompilerProgressListener>();
+    this.compilerProgressListeners = new ArrayList<>();
     this.compilerProgressListeners.add(this::progressUpdate);
     initialize();
   }

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -382,6 +382,9 @@ public void mousePressed(MouseEvent e) {
       case SERIAL:
         editor.handleSerial();
         break;
+
+      default:
+        break;
     }
   }
 

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -76,6 +76,8 @@ private void send(String s) {
         case 3:
           s += "\r\n";
           break;
+        default:
+          break;
       }
       if ("".equals(s) && lineEndings.getSelectedIndex() == 0 && !PreferencesData.has("runtime.line.ending.alert.notified")) {
         noLineEndingAlert.setForeground(Color.RED);

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -153,7 +153,7 @@ public Compiler(File pathToSketch, Sketch sketch) {
   }
 
   public String build(CompilerProgressListener progListener, boolean exportHex) throws RunnerException, PreferencesMapException, IOException {
-    ArrayList<CompilerProgressListener> listeners = new ArrayList<CompilerProgressListener>();
+    ArrayList<CompilerProgressListener> listeners = new ArrayList<>();
     listeners.add(progListener);
     return this.build(listeners, exportHex);
   }

File: arduino-core/src/cc/arduino/packages/discoverers/NetworkDiscovery.java
Patch:
@@ -34,16 +34,13 @@
 import processing.app.BaseNoGui;
 
 import javax.jmdns.*;
-import java.io.IOException;
 import java.net.InetAddress;
 import java.util.*;
 
 import cc.arduino.packages.discoverers.network.BoardReachabilityFilter;
 
 public class NetworkDiscovery implements Discovery, ServiceListener {
 
-  private static final int MAX_TIME_AWAITING_FOR_PACKAGES = 5000;
-
   private final List<BoardPort> reachableBoardPorts = new LinkedList<>();
   private final List<BoardPort> boardPortsDiscoveredWithJmDNS = new LinkedList<>();
   private Timer reachabilityTimer;

File: arduino-core/src/processing/app/packages/LibraryList.java
Patch:
@@ -33,6 +33,7 @@
 import java.util.LinkedList;
 import java.util.List;
 
+import cc.arduino.contributions.libraries.ContributedLibrary;
 import processing.app.helpers.FileUtils;
 
 @SuppressWarnings("serial")
@@ -79,7 +80,7 @@ public synchronized void remove(UserLibrary lib, boolean archAware) {
   }
 
   public synchronized void sort() {
-    Collections.sort(this, UserLibrary.CASE_INSENSITIVE_ORDER);
+    Collections.sort(this, ContributedLibrary.CASE_INSENSITIVE_ORDER);
   }
 
   public synchronized LibraryList filterLibrariesInSubfolder(File subFolder) {

File: app/src/processing/app/Editor.java
Patch:
@@ -2168,6 +2168,8 @@ synchronized public void handleExport(final boolean usingProgrammer) {
     console.clear();
     status.progress(tr("Uploading to I/O Board..."));
 
+    avoidMultipleOperations = true;
+
     new Thread(timeoutUploadHandler).start();
     new Thread(usingProgrammer ? exportAppHandler : exportHandler).start();
   }

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -376,7 +376,6 @@ public void mousePressed(MouseEvent e) {
         // launch a timeout timer which can reenable to upload button functionality an
         if (!editor.avoidMultipleOperations) {
           editor.handleExport(e.isShiftDown());
-          editor.avoidMultipleOperations = true;
         }
         break;
 

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -81,10 +81,10 @@ public void parseIndex() throws IOException {
     // TODO: resolve libraries inner references
   }
 
-  private void parseIndex(File indexFile) throws IOException {
+  private void parseIndex(File file) throws IOException {
     InputStream indexIn = null;
     try {
-      indexIn = new FileInputStream(indexFile);
+      indexIn = new FileInputStream(file);
       ObjectMapper mapper = new ObjectMapper();
       mapper.registerModule(new MrBeanModule());
       mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);

File: arduino-core/src/processing/app/debug/LegacyTargetPlatform.java
Patch:
@@ -96,8 +96,8 @@ public LegacyTargetPlatform(String _name, File _folder, TargetPackage parent)
       // Create boards
       Set<String> boardIds = boardsPreferences.keySet();
       for (String boardId : boardIds) {
-        PreferencesMap preferences = boardsPreferences.get(boardId);
-        TargetBoard board = new LegacyTargetBoard(boardId, preferences, this);
+        PreferencesMap prefs = boardsPreferences.get(boardId);
+        TargetBoard board = new LegacyTargetBoard(boardId, prefs, this);
         boards.put(boardId, board);
 
         // Pick the first board as default

File: app/src/processing/app/Base.java
Patch:
@@ -376,7 +376,7 @@ public Base(String[] args) throws Exception {
         // Build
         splash.splashText(tr("Verifying..."));
 
-        File sketchFile = new File(parser.getFilenames().get(0));
+        File sketchFile = BaseNoGui.absoluteFile(parser.getFilenames().get(0));
         sketch = new Sketch(sketchFile);
 
         outputFile = new Compiler(sketch).build(progress -> {}, false);

File: arduino-core/src/processing/app/zeroconf/jmdns/ArduinoDNSTaskStarter.java
Patch:
@@ -5,6 +5,7 @@
 import javax.jmdns.impl.JmDNSImpl;
 import javax.jmdns.impl.ServiceInfoImpl;
 import javax.jmdns.impl.tasks.RecordReaper;
+import java.net.InetAddress;
 import java.util.Timer;
 
 public class ArduinoDNSTaskStarter implements DNSTaskStarter.Factory.ClassDelegate {
@@ -86,8 +87,8 @@ public void startServiceResolver(String type) {
       }
 
       @Override
-      public void startResponder(DNSIncoming in, int port) {
-        delegate.startResponder(in, port);
+      public void startResponder(DNSIncoming in, InetAddress addr, int port) {
+        delegate.startResponder(in, addr, port);
       }
     };
   }

File: arduino-core/src/cc/arduino/packages/Uploader.java
Patch:
@@ -132,8 +132,8 @@ protected boolean executeUploadCommand(String command[]) throws Exception {
       new MessageSiphon(process.getErrorStream(), this, 100);
 
       // wait for the process to finish, but not forever
-      // kill the flasher process after 2 minutes to avoid 100% cpu spinning
-      if (!process.waitFor(2, TimeUnit.MINUTES)) {
+      // kill the flasher process after 5 minutes to avoid 100% cpu spinning
+      if (!process.waitFor(5, TimeUnit.MINUTES)) {
         process.destroyForcibly();
       }
       if (!process.isAlive()) {

File: app/src/processing/app/Editor.java
Patch:
@@ -1306,15 +1306,15 @@ public void actionPerformed(ActionEvent e) {
     JMenuItem copyForumItem = newJMenuItemShift(tr("Copy for Forum"), 'C');
     copyForumItem.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
-          getCurrentTab().handleHTMLCopy();
+          getCurrentTab().handleDiscourseCopy();
         }
       });
     menu.add(copyForumItem);
 
     JMenuItem copyHTMLItem = newJMenuItemAlt(tr("Copy as HTML"), 'C');
     copyHTMLItem.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
-          getCurrentTab().handleDiscourseCopy();
+          getCurrentTab().handleHTMLCopy();
         }
       });
     menu.add(copyHTMLItem);

File: arduino-core/src/processing/app/SketchFile.java
Patch:
@@ -298,5 +298,6 @@ public void saveAs(File newFile) throws IOException {
 
     BaseNoGui.saveFile(storage.getText(), newFile);
     renamedTo(newFile);
+    storage.clearModified();
   }
 }

File: app/src/processing/app/Editor.java
Patch:
@@ -2106,6 +2106,7 @@ public boolean handleSaveAs() {
 
       // Update editor window title in case of "Save as..."
       updateTitle();
+      header.rebuild();
     }
 
     return true;

File: app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCellJPanel.java
Patch:
@@ -221,6 +221,7 @@ private JTextPane makeNewDescription() {
       StyleSheet s = html.getStyleSheet();
       s.addRule("body { margin: 0; padding: 0;"
                 + "font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;"
+                + "color: black;"
                 + "font-size: " + 10 * Theme.getScale() / 100 + "; }");
     }
     description.setOpaque(false);

File: app/src/processing/app/SketchController.java
Patch:
@@ -260,6 +260,8 @@ public void handleDeleteCode() throws IOException {
           return;
         }
 
+        editor.removeTab(current);
+
         // just set current tab to the main tab
         editor.selectTab(0);
 

File: arduino-core/src/processing/app/Sketch.java
Patch:
@@ -31,7 +31,7 @@ public class Sketch {
 
   private File buildPath;
 
-  private static final Comparator<SketchFile> CODE_DOCS_COMPARATOR = new Comparator<SketchFile>() {
+  public static final Comparator<SketchFile> CODE_DOCS_COMPARATOR = new Comparator<SketchFile>() {
     @Override
     public int compare(SketchFile x, SketchFile y) {
       if (x.isPrimary() && !y.isPrimary())

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -169,6 +169,9 @@ static public PreferencesMap getBoardPreferences() {
         ContributedPlatform referencedPlatform = indexer.getContributedPlaform(referenced);
         if (referencedPlatform != null)
           requiredTools.addAll(referencedPlatform.getResolvedTools());
+      } else {
+        String msg = tr("The current selected board needs the core '{0}' that is not installed.");
+        System.out.println(I18n.format(msg, core));
       }
     }
 

File: app/src/processing/app/EditorHeader.java
Patch:
@@ -323,6 +323,7 @@ public void rebuildMenu() {
     if (sketch != null) {
       menu.addSeparator();
 
+      editor.reorderTabs();
       int i = 0;
       for (EditorTab tab : editor.getTabs()) {
         SketchFile file = tab.getSketchFile();

File: arduino-core/src/processing/app/Sketch.java
Patch:
@@ -106,7 +106,7 @@ public boolean reload() throws IOException {
   private List<SketchFile> listSketchFiles(boolean showWarnings) throws IOException {
     Set<SketchFile> result = new TreeSet<>(CODE_DOCS_COMPARATOR);
     for (File file : FileUtils.listFiles(folder, false, EXTENSIONS)) {
-      if (BaseNoGui.isSanitaryName(file.getName())) {
+      if (BaseNoGui.isSanitaryName(FileUtils.splitFilename(file).basename)) {
         result.add(new SketchFile(this, file));
       } else if (showWarnings) {
         System.err.println(I18n.format(tr("File name {0} is invalid: ignored"), file.getName()));

File: app/src/processing/app/SerialPlotter.java
Patch:
@@ -241,7 +241,7 @@ public void message(final String s) {
       for(int i = 0; i < parts.length; ++i) {
         try {          
           double value = Double.valueOf(parts[i]);
-          if(i >= graphs.size()) {
+          if(validParts >= graphs.size()) {
             graphs.add(new Graph(validParts));
           }
           graphs.get(validParts).buffer.add(value);

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -101,7 +101,7 @@ public class Compiler implements MessageConsumer {
   enum BuilderAction {
     COMPILE("-compile"), DUMP_PREFS("-dump-prefs");
 
-    private final String value;
+    final String value;
 
     BuilderAction(String value) {
       this.value = value;

File: arduino-core/src/processing/app/helpers/CommandlineParser.java
Patch:
@@ -18,7 +18,7 @@ public class CommandlineParser {
   private enum ACTION {
     GUI, NOOP, VERIFY("--verify"), UPLOAD("--upload"), GET_PREF("--get-pref"), INSTALL_BOARD("--install-boards"), INSTALL_LIBRARY("--install-library");
 
-    private final String value;
+    final String value;
 
     ACTION() {
       this.value = null;

File: app/src/cc/arduino/view/Event.java
Patch:
@@ -39,7 +39,7 @@ public class Event extends ActionEvent {
 
   public Event(Object source, int id, String command) {
     super(source, id, command);
-    this.payload = new HashMap<String, Object>();
+    this.payload = new HashMap<>();
   }
 
   public Map<String, Object> getPayload() {

File: app/src/processing/app/Editor.java
Patch:
@@ -230,7 +230,7 @@ public void windowActivated(WindowEvent e) {
         public void windowDeactivated(WindowEvent e) {
           fileMenu.remove(sketchbookMenu);
           fileMenu.remove(examplesMenu);
-          List<Component> toolsMenuItemsToRemove = new LinkedList<Component>();
+          List<Component> toolsMenuItemsToRemove = new LinkedList<>();
           for (Component menuItem : toolsMenu.getMenuComponents()) {
             if (menuItem instanceof JComponent) {
               Object removeOnWindowDeactivation = ((JComponent) menuItem).getClientProperty("removeOnWindowDeactivation");
@@ -816,7 +816,7 @@ private void addTools(JMenu menu, File sourceFolder) {
     if (sourceFolder == null)
       return;
 
-    Map<String, JMenuItem> toolItems = new HashMap<String, JMenuItem>();
+    Map<String, JMenuItem> toolItems = new HashMap<>();
 
     File[] folders = sourceFolder.listFiles(new FileFilter() {
       public boolean accept(File folder) {
@@ -906,7 +906,7 @@ public void actionPerformed(ActionEvent e) {
         e.printStackTrace();
       }
     }
-    ArrayList<String> toolList = new ArrayList<String>(toolItems.keySet());
+    ArrayList<String> toolList = new ArrayList<>(toolItems.keySet());
     if (toolList.size() == 0) return;
 
     menu.addSeparator();

File: app/src/processing/app/PresentMode.java
Patch:
@@ -59,7 +59,7 @@ public class PresentMode {
     devices = environment.getScreenDevices();
     GraphicsDevice defaultDevice = environment.getDefaultScreenDevice();
 
-    Vector<String> names = new Vector<String>();
+    Vector<String> names = new Vector<>();
     for (int i = 0; i < devices.length; i++) {
       String name = String.valueOf(i + 1);
       if (devices[i] == defaultDevice) {

File: app/src/processing/app/SerialPlotter.java
Patch:
@@ -185,7 +185,7 @@ public SerialPlotter(BoardPort port) {
     });
 
     messageBuffer = new StringBuffer();
-    graphs = new ArrayList<Graph>();
+    graphs = new ArrayList<>();
   }
 
   protected void onCreateWindow(Container mainPane) {

File: app/src/processing/app/Theme.java
Patch:
@@ -228,12 +228,12 @@ public static Map<String, Object> getStyledFont(String what, Font font) {
     Font styledFont = new Font(font.getFamily(),
         (bold ? Font.BOLD : 0) | (italic ? Font.ITALIC : 0), font.getSize());
     if (underlined) {
-      Map<TextAttribute, Object> attr = new Hashtable<TextAttribute, Object>();
+      Map<TextAttribute, Object> attr = new Hashtable<>();
       attr.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
       styledFont = styledFont.deriveFont(attr);
     }
 
-    Map<String, Object> result = new HashMap<String, Object>();
+    Map<String, Object> result = new HashMap<>();
     result.put("color", color);
     result.put("font", styledFont);
 

File: arduino-core/src/cc/arduino/UploaderUtils.java
Patch:
@@ -70,7 +70,7 @@ public boolean upload(Sketch data, Uploader uploader, String suggestedClassName,
 
     boolean useNewWarningsAccumulator = false;
     if (warningsAccumulator == null) {
-      warningsAccumulator = new LinkedList<String>();
+      warningsAccumulator = new LinkedList<>();
       useNewWarningsAccumulator = true;
     }
 

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndex.java
Patch:
@@ -66,7 +66,7 @@ public String toString() {
   }
 
   public List<String> getCategories() {
-    List<String> categories = new LinkedList<String>();
+    List<String> categories = new LinkedList<>();
     for (ContributedLibrary lib : getLibraries()) {
       if (lib.getCategory() != null && !categories.contains(lib.getCategory())) {
         categories.add(lib.getCategory());
@@ -78,14 +78,14 @@ public List<String> getCategories() {
   }
 
   public List<String> getTypes() {
-    Collection<String> typesAccumulator = new HashSet<String>();
+    Collection<String> typesAccumulator = new HashSet<>();
     for (ContributedLibrary lib : getLibraries()) {
       if (lib.getTypes() != null) {
         typesAccumulator.addAll(lib.getTypes());
       }
     }
 
-    List<String> types = new LinkedList<String>(typesAccumulator);
+    List<String> types = new LinkedList<>(typesAccumulator);
     Collections.sort(types);
 
     return types;

File: arduino-core/src/cc/arduino/contributions/packages/ContributedTargetPackage.java
Patch:
@@ -43,7 +43,7 @@ public class ContributedTargetPackage implements TargetPackage {
 
   public ContributedTargetPackage(String _id) {
     id = _id;
-    platforms = new HashMap<String, TargetPlatform>();
+    platforms = new HashMap<>();
   }
 
   void addPlatform(TargetPlatform p) {

File: arduino-core/src/cc/arduino/files/DeleteFilesOnShutdown.java
Patch:
@@ -48,7 +48,7 @@ public static void add(File file) {
   private final List<File> files;
 
   public DeleteFilesOnShutdown() {
-    this.files = new LinkedList<File>();
+    this.files = new LinkedList<>();
   }
 
   public synchronized void addFile(File file) {
@@ -63,7 +63,7 @@ public void run() {
     }
     List<File> copyOfFiles;
     synchronized (this) {
-      copyOfFiles = new LinkedList<File>(files);
+      copyOfFiles = new LinkedList<>(files);
     }
     Collections.reverse(copyOfFiles);
     for (File file : copyOfFiles) {

File: arduino-core/src/cc/arduino/packages/DiscoveryManager.java
Patch:
@@ -44,7 +44,7 @@ public class DiscoveryManager {
   private final NetworkDiscovery networkDiscoverer = new NetworkDiscovery();
 
   public DiscoveryManager() {
-    discoverers = new ArrayList<Discovery>();
+    discoverers = new ArrayList<>();
     discoverers.add(serialDiscoverer);
     discoverers.add(networkDiscoverer);
 
@@ -76,15 +76,15 @@ public SerialDiscovery getSerialDiscoverer() {
   }
 
   public List<BoardPort> discovery() {
-    List<BoardPort> res = new ArrayList<BoardPort>();
+    List<BoardPort> res = new ArrayList<>();
     for (Discovery d : discoverers) {
       res.addAll(d.listDiscoveredBoards());
     }
     return res;
   }
 
   public List<BoardPort> discovery(boolean complete) {
-    List<BoardPort> res = new ArrayList<BoardPort>();
+    List<BoardPort> res = new ArrayList<>();
     for (Discovery d : discoverers) {
       res.addAll(d.listDiscoveredBoards(complete));
     }

File: arduino-core/src/edazdarevic/commons/net/CIDRUtils.java
Patch:
@@ -100,7 +100,7 @@ private void calculate() throws UnknownHostException {
 
     private byte[] toBytes(byte[] array, int targetSize) {
         int counter = 0;
-        List<Byte> newArr = new ArrayList<Byte>();
+        List<Byte> newArr = new ArrayList<>();
         while (counter < targetSize && (array.length - 1 - counter >= 0)) {
             newArr.add(0, array[array.length - 1 - counter]);
             counter++;

File: arduino-core/src/processing/app/SerialPortList.java
Patch:
@@ -310,7 +310,7 @@ private static String[] getWindowsPortNames(Pattern pattern, Comparator<String>
         if(portNames == null){
             return new String[]{};
         }
-        TreeSet<String> ports = new TreeSet<String>(comparator);
+        TreeSet<String> ports = new TreeSet<>(comparator);
         for(String portName : portNames){
             if(pattern.matcher(portName).find()){
                 ports.add(portName);
@@ -329,7 +329,7 @@ private static String[] getUnixBasedPortNames(String searchPath, Pattern pattern
         if(dir.exists() && dir.isDirectory()){
             File[] files = dir.listFiles();
             if(files.length > 0){
-                TreeSet<String> portsTree = new TreeSet<String>(comparator);
+                TreeSet<String> portsTree = new TreeSet<>(comparator);
                 for(File file : files){
                     String fileName = file.getName();
                     if(!file.isDirectory() && !file.isFile() && pattern.matcher(fileName).find()){

File: arduino-core/src/processing/app/Sketch.java
Patch:
@@ -27,7 +27,7 @@ public class Sketch {
    */
   private File folder;
 
-  private List<SketchFile> files = new ArrayList<SketchFile>();
+  private List<SketchFile> files = new ArrayList<>();
 
   private File buildPath;
 

File: arduino-core/src/processing/app/helpers/FileUtils.java
Patch:
@@ -210,7 +210,7 @@ public static String readFileToString(File file, String encoding) throws IOExcep
   }
 
   public static List<String> readFileToListOfStrings(File file) throws IOException {
-    List<String> strings = new LinkedList<String>();
+    List<String> strings = new LinkedList<>();
     BufferedReader reader = null;
     try {
       reader = new BufferedReader(new FileReader(file));
@@ -343,7 +343,7 @@ public static List<File> listFiles(File folder, boolean recursive,
 
   public static List<File> listFiles(File folder, boolean recursive,
                                      List<String> extensions) {
-    List<File> result = new ArrayList<File>();
+    List<File> result = new ArrayList<>();
 
     for (File file : folder.listFiles()) {
       if (isSCCSOrHiddenFile(file))

File: arduino-core/src/processing/app/helpers/PreferencesMap.java
Patch:
@@ -182,7 +182,7 @@ public PreferencesMap topLevelMap() {
    * @return
    */
   public Map<String, PreferencesMap> firstLevelMap() {
-    Map<String, PreferencesMap> res = new LinkedHashMap<String, PreferencesMap>();
+    Map<String, PreferencesMap> res = new LinkedHashMap<>();
     for (String key : keySet()) {
       int dot = key.indexOf('.');
       if (dot == -1)
@@ -246,7 +246,7 @@ public PreferencesMap subTree(String parent, int sublevels) {
 
   public String toString(String indent) {
     String res = indent + "{\n";
-    SortedSet<String> treeSet = new TreeSet<String>(keySet());
+    SortedSet<String> treeSet = new TreeSet<>(keySet());
     for (String k : treeSet)
       res += indent + k + " = " + get(k) + "\n";
     return res;

File: arduino-core/src/processing/app/helpers/StringReplacer.java
Patch:
@@ -49,7 +49,7 @@ public static String[] formatAndSplit(String src, Map<String, String> dict,
   public static String[] quotedSplit(String src, String quoteChars,
                                      boolean acceptEmptyArguments)
       throws Exception {
-    List<String> res = new ArrayList<String>();
+    List<String> res = new ArrayList<>();
     String escapedArg = null;
     String escapingChar = null;
     for (String i : src.split(" ")) {

File: arduino-core/src/processing/app/legacy/PApplet.java
Patch:
@@ -466,7 +466,7 @@ static public String[] concat(String a[], String b[]) {
   static public String[][] matchAll(String what, String regexp) {
     Pattern p = Pattern.compile(regexp, Pattern.MULTILINE | Pattern.DOTALL);
     Matcher m = p.matcher(what);
-    ArrayList<String[]> results = new ArrayList<String[]>();
+    ArrayList<String[]> results = new ArrayList<>();
     int count = m.groupCount() + 1;
     while (m.find()) {
       String[] groups = new String[count];

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -168,7 +168,7 @@ public java.util.List<BoardPort> filterPorts(java.util.List<BoardPort> ports, bo
       return super.filterPorts(ports, true);
     }
 
-    List<BoardPort> filteredPorts = new LinkedList<BoardPort>();
+    List<BoardPort> filteredPorts = new LinkedList<>();
     for (BoardPort port : ports) {
       if (!port.getAddress().startsWith("/dev/tty.")) {
         filteredPorts.add(port);

File: app/src/processing/app/EditorLineStatus.java
Patch:
@@ -92,7 +92,7 @@ public void set(int newStart, int newStop) {
 
   public void paintComponent(Graphics graphics) {
     Graphics2D g = Theme.setupGraphics2D(graphics);
-    if (name == "" && serialport == "") {
+    if (name.isEmpty() && serialport.isEmpty()) {
       PreferencesMap boardPreferences = BaseNoGui.getBoardPreferences();
       if (boardPreferences != null)
         setBoardName(boardPreferences.get("name"));

File: arduino-core/src/processing/app/Sketch.java
Patch:
@@ -250,7 +250,7 @@ protected File checkNewFoldername(File newFolder) throws IOException {
     // If the folder is actually renamed (as opposed to moved somewhere
     // else), check for conflicts using the new filename, but the
     // existing folder name.
-    if(newFolder.getName() != folder.getName())
+    if (!newFolder.getName().equals(folder.getName()))
       checkNewFilename(new File(folder, newPrimary));
 
     return new File(newFolder, newPrimary);

File: app/src/processing/app/SketchController.java
Patch:
@@ -150,7 +150,7 @@ protected void nameCode(String newName) {
     if (split.extension.equals(""))
       split.extension = Sketch.DEFAULT_SKETCH_EXTENSION;
 
-    if (!Sketch.EXTENSIONS.contains(split.extension)) {
+    if (!Sketch.EXTENSIONS.contains(split.extension.toLowerCase())) {
       String msg = I18n.format(tr("\".{0}\" is not a valid extension."),
                                split.extension);
       Base.showWarning(tr("Problem with rename"), msg, null);

File: app/src/processing/app/Editor.java
Patch:
@@ -2090,6 +2090,9 @@ public boolean handleSaveAs() {
     } finally {
       // make sure the toolbar button deactivates
       toolbar.deactivateSave();
+
+      // Update editor window title in case of "Save as..."
+      updateTitle();
     }
 
     return true;

File: app/src/processing/app/EditorTab.java
Patch:
@@ -175,7 +175,6 @@ private SketchTextArea createTextArea(RSyntaxDocument document)
 
       editor.lineStatus.set(lineStart, lineEnd);
     });
-
     ToolTipManager.sharedInstance().registerComponent(textArea);
 
     configurePopupMenu(textArea);

File: app/src/processing/app/EditorTab.java
Patch:
@@ -175,7 +175,6 @@ private SketchTextArea createTextArea(RSyntaxDocument document)
 
       editor.lineStatus.set(lineStart, lineEnd);
     });
-
     ToolTipManager.sharedInstance().registerComponent(textArea);
 
     configurePopupMenu(textArea);

File: app/src/cc/arduino/view/findreplace/FindReplace.java
Patch:
@@ -345,12 +345,12 @@ private boolean find(boolean wrap, boolean backwards, boolean searchTabs, int or
             }
 
             if (backwards) {
-              editor.selectNextTab();
+              editor.selectPrevTab();
               this.setVisible(true);
               int l = editor.getCurrentTab().getText().length() - 1;
               editor.getCurrentTab().setSelection(l, l);
             } else {
-              editor.selectPrevTab();
+              editor.selectNextTab();
               this.setVisible(true);
               editor.getCurrentTab().setSelection(0, 0);
             }

File: arduino-core/src/cc/arduino/packages/discoverers/serial/SerialBoardsLister.java
Patch:
@@ -157,7 +157,7 @@ public synchronized void retriggerDiscovery(boolean polled) {
           boardPort.setBoardName(boardName);
         }
       } else {
-        if (parts[1] != "0000") {
+        if (!parts[1].equals("0000")) {
           boardPort.setVIDPID(parts[1], parts[2]);
           // ask Cloud API to match the board with known VID/PID pair
           platform.getBoardWithMatchingVidPidFromCloud(parts[1], parts[2]);

File: app/src/cc/arduino/view/findreplace/FindReplace.java
Patch:
@@ -323,6 +323,8 @@ private boolean find(boolean wrap, boolean backwards, boolean searchTabs, int or
       }
     }
 
+    editor.getCurrentTab().getTextArea().getFoldManager().ensureOffsetNotInClosedFold(nextIndex);
+
     if (nextIndex == -1) {
       // Nothing found on this tab: Search other tabs if required
       if (searchTabs) {

File: app/src/processing/app/Editor.java
Patch:
@@ -1425,7 +1425,7 @@ public void actionPerformed(ActionEvent e) {
     menu.addMenuListener(new MenuListener() {
       @Override
       public void menuSelected(MenuEvent e) {
-        boolean enabled = textarea.getSelectedText() != null;
+        boolean enabled = getCurrentTab().getSelectedText() != null;
         cutItem.setEnabled(enabled);
         copyItem.setEnabled(enabled);
       }

File: app/src/processing/app/SketchController.java
Patch:
@@ -42,6 +42,7 @@
 import java.nio.file.Files;
 import java.nio.file.Paths;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Optional;

File: app/src/processing/app/EditorTab.java
Patch:
@@ -334,7 +334,7 @@ public void activated() {
   /**
    * Reload the contents of our file.
    */
-  private void reload() {
+  public void reload() {
     String text;
     try {
       text = file.load();

File: arduino-core/src/processing/app/Sketch.java
Patch:
@@ -15,7 +15,8 @@
  */
 public class Sketch {
 
-  public static final List<String> SKETCH_EXTENSIONS = Arrays.asList("ino", "pde");
+  public static final String DEFAULT_SKETCH_EXTENSION = "ino";
+  public static final List<String> SKETCH_EXTENSIONS = Arrays.asList(DEFAULT_SKETCH_EXTENSION, "pde");
   public static final List<String> OTHER_ALLOWED_EXTENSIONS = Arrays.asList("c", "cpp", "h", "hh", "hpp", "s");
   public static final List<String> EXTENSIONS = Stream.concat(SKETCH_EXTENSIONS.stream(), OTHER_ALLOWED_EXTENSIONS.stream()).collect(Collectors.toList());
 

File: app/src/processing/app/Base.java
Patch:
@@ -614,7 +614,7 @@ protected void handleActivated(Editor whichEditor) {
           activeEditor.getCurrentTab().getTextArea().setCaretPosition(previousCaretPosition);
         }
       } catch (IOException e) {
-        // noop
+        System.err.println(e);
       }
     }
 

File: app/src/cc/arduino/packages/formatter/AStyle.java
Patch:
@@ -78,22 +78,22 @@ public void init(Editor editor) {
 
   @Override
   public void run() {
-    String originalText = editor.getText();
+    String originalText = editor.getCurrentTab().getText();
     String formattedText = aStyleInterface.AStyleMain(originalText, formatterConfiguration);
 
     if (formattedText.equals(originalText)) {
       editor.statusNotice(tr("No changes necessary for Auto Format."));
       return;
     }
 
-    SketchTextArea textArea = editor.getTextArea();
+    SketchTextArea textArea = editor.getCurrentTab().getTextArea();
 
     int line = getLineOfOffset(textArea);
     int lineOffset = getLineOffset(textArea, line);
 
     textArea.getUndoManager().beginInternalAtomicEdit();
     editor.removeAllLineHighlights();
-    editor.setText(formattedText);
+    editor.getCurrentTab().setText(formattedText);
     editor.getSketch().setModified(true);
     textArea.getUndoManager().endInternalAtomicEdit();
 

File: app/src/cc/arduino/view/GoToLineNumber.java
Patch:
@@ -127,7 +127,7 @@ public void actionPerformed(java.awt.event.ActionEvent evt) {
   private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
     try {
       int line = Integer.parseInt(lineNumber.getText());
-      editor.goToLine(line);
+      editor.getCurrentTab().goToLine(line);
       cancelActionPerformed(evt);
     } catch (Exception e) {
       // ignore

File: app/src/processing/app/Base.java
Patch:
@@ -608,10 +608,10 @@ protected void handleActivated(Editor whichEditor) {
     activeEditor.rebuildRecentSketchesMenu();
     if (PreferencesData.getBoolean("editor.external")) {
       try {
-        int previousCaretPosition = activeEditor.getTextArea().getCaretPosition();
+        int previousCaretPosition = activeEditor.getCurrentTab().getTextArea().getCaretPosition();
         activeEditor.getSketch().load(true);
-        if (previousCaretPosition < activeEditor.getText().length()) {
-          activeEditor.getTextArea().setCaretPosition(previousCaretPosition);
+        if (previousCaretPosition < activeEditor.getCurrentTab().getText().length()) {
+          activeEditor.getCurrentTab().getTextArea().setCaretPosition(previousCaretPosition);
         }
       } catch (IOException e) {
         // noop

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -456,7 +456,7 @@ public boolean dispatchKeyEvent(final KeyEvent e) {
       shiftPressed = !shiftPressed;
       repaint();
     }
-    // Return false to continue processing this keyEvent  
+    // Return false to continue processing this keyEvent
     return false;
   }
 }

File: app/src/processing/app/tools/DiscourseFormat.java
Patch:
@@ -25,6 +25,7 @@
 
 import org.fife.ui.rsyntaxtextarea.Token;
 import processing.app.Editor;
+import processing.app.EditorTab;
 import processing.app.syntax.SketchTextArea;
 
 import javax.swing.text.BadLocationException;
@@ -65,9 +66,9 @@ public class DiscourseFormat {
    * from the actual Processing Tab ready to send to the processing discourse
    * web (copy & paste)
    */
-  public DiscourseFormat(Editor editor, boolean html) {
+  public DiscourseFormat(Editor editor, EditorTab tab, boolean html) {
     this.editor = editor;
-    this.textarea = editor.getTextArea();
+    this.textarea = tab.getTextArea();
     this.html = html;
   }
 

File: app/src/processing/app/tools/FixEncoding.java
Patch:
@@ -69,10 +69,8 @@ public void run() {
         SketchCode code = sketch.getCode(i);
         code.setProgram(loadWithLocalEncoding(code.getFile()));
         code.setModified(true);  // yes, because we want them to save this
+        editor.findTab(code).setText(code.getProgram());
       }
-      // Update the currently visible program with its code
-      editor.setText(sketch.getCurrentCode().getProgram());
-      
     } catch (IOException e) {
       String msg = 
         tr("An error occurred while trying to fix the file encoding.\nDo not attempt to save this sketch as it may overwrite\nthe old version. Use Open to re-open the sketch and try again.\n") +

File: app/test/processing/app/BlockCommentGeneratesOneUndoActionTest.java
Patch:
@@ -55,7 +55,7 @@ public void shouldUndoAndRedo() throws Exception {
     GuiActionRunner.execute(new GuiQuery<Frame>() {
 
       protected Frame executeInEDT() {
-        window.getEditor().handleCommentUncomment();
+        window.getEditor().getCurrentTab().handleCommentUncomment();
         return window.getEditor();
       }
 

File: app/src/processing/app/Base.java
Patch:
@@ -62,7 +62,6 @@
 import java.util.*;
 import java.util.List;
 import java.util.Timer;
-import java.util.function.Predicate;
 import java.util.logging.Handler;
 import java.util.logging.Level;
 import java.util.logging.Logger;

File: app/src/processing/app/Editor.java
Patch:
@@ -2592,7 +2592,7 @@ public void handleSerial() {
     }
 
     serialMonitor = new MonitorFactory().newMonitor(port);
-    base.setIcon(serialMonitor);
+    Base.setIcon(serialMonitor);
 
     // If currently uploading, disable the monitor (it will be later
     // enabled when done uploading)
@@ -2690,7 +2690,7 @@ public void handlePlotter() {
     }
 
     serialPlotter = new SerialPlotter(port);
-    base.setIcon(serialPlotter);
+    Base.setIcon(serialPlotter);
 
     // If currently uploading, disable the plotter (it will be later
     // enabled when done uploading)

File: arduino-core/src/cc/arduino/packages/Uploader.java
Patch:
@@ -36,7 +36,6 @@
 import processing.app.PreferencesData;
 import processing.app.debug.MessageConsumer;
 import processing.app.debug.MessageSiphon;
-import processing.app.debug.RunnerException;
 import processing.app.helpers.ProcessUtils;
 import processing.app.helpers.StringUtils;
 

File: arduino-core/src/cc/arduino/packages/discoverers/serial/SerialBoardsLister.java
Patch:
@@ -31,7 +31,6 @@
 
 import cc.arduino.packages.BoardPort;
 import cc.arduino.packages.discoverers.SerialDiscovery;
-import cc.arduino.packages.uploaders.SerialUploader;
 import processing.app.BaseNoGui;
 import processing.app.Platform;
 import processing.app.debug.TargetBoard;

File: arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -40,12 +40,9 @@
 import cc.arduino.packages.BoardPort;
 import processing.app.debug.RunnerException;
 import processing.app.debug.TargetPlatform;
-import processing.app.helpers.OSUtils;
 import processing.app.helpers.PreferencesMap;
 import processing.app.helpers.StringReplacer;
 
-import cc.arduino.packages.discoverers.SerialDiscovery;
-
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -27,7 +27,6 @@
 import processing.app.packages.UserLibrary;
 
 import java.io.File;
-import java.io.FileOutputStream;
 import java.io.FileWriter;
 import java.io.IOException;
 import java.nio.file.Files;

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -169,13 +169,13 @@ public String preListAllCandidateDevices() {
     return null;
   }
 
-  public  List<String> listSerials(){
-    return new  ArrayList(Arrays.asList(this.listSerialsNative()));
+  public List<String> listSerials() {
+    return new ArrayList<String>(Arrays.asList(listSerialsNative()));
   }
 
   public  List<String> listSerialsNames(){
     List<String> list = new LinkedList<>();
-    for (String port : this.listSerialsNative()) {
+    for (String port : listSerialsNative()) {
       list.add(port.split("_")[0]);
     }
     return list;

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -374,7 +374,7 @@ public boolean isContributedToolUsed(ContributedPlatform platformToIgnore, Contr
         if (platformToIgnore.equals(platform)) {
           continue;
         }
-        if (!platform.isInstalled()) {
+        if (!platform.isInstalled() || platform.isReadOnly()) {
           continue;
         }
         for (ContributedTool requiredTool : platform.getResolvedTools()) {

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -184,6 +184,9 @@ static public PreferencesMap getBoardPreferences() {
     String prefix = "runtime.tools.";
     for (ContributedTool tool : requiredTools) {
       File folder = tool.getDownloadableContribution(getPlatform()).getInstalledFolder();
+      if (folder == null) {
+        continue;
+      }
       String toolPath = folder.getAbsolutePath();
       prefs.put(prefix + tool.getName() + ".path", toolPath);
       PreferencesData.set(prefix + tool.getName() + ".path", toolPath);

File: app/src/processing/app/Base.java
Patch:
@@ -82,6 +82,7 @@ public class Base {
 
   public static final Predicate<UserLibrary> CONTRIBUTED = library -> library.getTypes() == null || library.getTypes().isEmpty() || library.getTypes().contains("Contributed");
   public static final Predicate<UserLibrary> RETIRED = library -> library.getTypes() != null && library.getTypes().contains("Retired");
+  public static final Predicate<UserLibrary> COMPATIBLE = library -> library.getArchitectures() != null && (library.getArchitectures().contains("*") || library.getArchitectures().contains(BaseNoGui.getTargetPlatform().getId()));
 
   private static final int RECENT_SKETCHES_MAX_SIZE = 10;
 
@@ -1104,6 +1105,7 @@ public LibraryList getIDELibs() {
     List<UserLibrary> libs = installedLibraries.stream()
       .filter(CONTRIBUTED.negate())
       .filter(RETIRED.negate())
+      .filter(COMPATIBLE)
       .collect(Collectors.toList());
     return new LibraryList(libs);
   }

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -187,11 +187,11 @@ private void scanLibrary(File folder, boolean isSketchbook) throws IOException {
     if (headers.length == 0) {
       throw new IOException(lib.getSrcFolder().getAbsolutePath());
     }
-    installedLibraries.addOrReplace(lib);
+    installedLibraries.addOrReplaceArchAware(lib);
     if (isSketchbook) {
       installedLibrariesWithDuplicates.add(lib);
     } else {
-      installedLibrariesWithDuplicates.addOrReplace(lib);
+      installedLibrariesWithDuplicates.addOrReplaceArchAware(lib);
     }
 
     // Check if we can find the same library in the index

File: app/src/processing/app/NetworkMonitor.java
Patch:
@@ -68,6 +68,7 @@ public void open() throws Exception {
     SSHClientSetupChainRing sshClientSetupChain = new SSHConfigFileSetup(new SSHPwdSetup());
     session = sshClientSetupChain.setup(getBoardPort(), jSch);
 
+    session.setConfig("PreferredAuthentications", "publickey,keyboard-interactive,password");
     session.setUserInfo(new NoInteractionUserInfo(PreferencesData.get(getAuthorizationKey())));
     session.connect(30000);
 

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -228,7 +228,7 @@ private void callArduinoBuilder(TargetBoard board, TargetPlatform platform, Targ
     commandLine.addArgument("-warnings=" + PreferencesData.get("compiler.warning_level"), false);
 
     PreferencesData.getMap()
-      .subTree("build_properties_custom")
+      .subTree("runtime.build_properties_custom")
       .entrySet()
       .stream()
       .forEach(kv -> commandLine.addArgument("-prefs=\"" + kv.getKey() + "=" + kv.getValue() + "\"", false));

File: arduino-core/src/processing/app/helpers/CommandlineParser.java
Patch:
@@ -277,7 +277,7 @@ private void processPrefArgument(String arg) {
       BaseNoGui.showError(null, I18n.format(tr("{0}: Invalid argument to --pref, should be of the form \"pref=value\""), arg), 3);
 
     PreferencesData.set(split[0], split[1]);
-    PreferencesData.set("build_properties_custom." + split[0], split[1]);
+    PreferencesData.set("runtime.build_properties_custom." + split[0], split[1]);
   }
 
   public boolean isDoVerboseBuild() {

File: app/src/processing/app/syntax/SketchTextAreaDefaultInputMap.java
Patch:
@@ -72,8 +72,6 @@ public SketchTextAreaDefaultInputMap() {
       put(KeyStroke.getKeyStroke(KeyEvent.VK_B, ctrl), DefaultEditorKit.backwardAction);
       put(KeyStroke.getKeyStroke(KeyEvent.VK_F, ctrl), DefaultEditorKit.forwardAction);
       put(KeyStroke.getKeyStroke(KeyEvent.VK_D, ctrl), DefaultEditorKit.deleteNextCharAction);
-      put(KeyStroke.getKeyStroke(KeyEvent.VK_Y, ctrl), DefaultEditorKit.pasteAction);
-      put(KeyStroke.getKeyStroke(KeyEvent.VK_W, ctrl), DefaultEditorKit.cutAction);
     }
 
     // VK_DIVIDE is the keypad; should this be added to VK_SLASH as well?

File: app/src/processing/app/Base.java
Patch:
@@ -127,8 +127,6 @@ static public void main(String args[]) throws Exception {
     System.setProperty("swing.aatext", "true");
     System.setProperty("java.net.useSystemProxies", "true");
 
-    splashScreenHelper.splashText(tr("Loading configuration..."));
-
     if (OSUtils.isMacOS()) {
       ThinkDifferent.init();
     }
@@ -158,6 +156,8 @@ static public void guardedMain(String args[]) throws Exception {
 
     BaseNoGui.initParameters(args);
 
+    splashScreenHelper.splashText(tr("Loading configuration..."));
+
     BaseNoGui.initVersion();
 
 //    if (System.getProperty("mrj.version") != null) {

File: arduino-core/src/cc/arduino/Constants.java
Patch:
@@ -44,7 +44,7 @@ public class Constants {
   public static final String LIBRARY_DEVELOPMENT_FLAG_FILE = ".development";
 
   public static final long BOARDS_LIBS_UPDATABLE_CHECK_START_PERIOD = 60000;
-  public static final int NOTIFICATION_POPUP_AUTOCLOSE_DELAY = 10000;
+  public static final long NOTIFICATION_POPUP_AUTOCLOSE_DELAY = 10000;
 
   public static final String PROXY_TYPE_NONE = "none";
   public static final String PROXY_TYPE_AUTO = "auto";

File: app/src/cc/arduino/UpdatableBoardsLibsFakeURLsHandler.java
Patch:
@@ -66,8 +66,6 @@ public void openBoardLibManager(URL url) {
       return;
     }
 
-    System.out.println(url.getRef() + " " + url.getHost() + " " + url.getPath());
-
     if (LIBRARYMANAGER.equals(url.getHost())) {
       base.openLibraryManager(url.getRef() == null ? "": url.getRef() , url.getPath() == null ? "" : url.getPath().replace("/", ""));
       return;

File: app/src/cc/arduino/contributions/ContributionsSelfCheck.java
Patch:
@@ -87,7 +87,7 @@ public void run() {
     } else if (updatableLibraries <= 0 && updatablePlatforms > 0) {
       text = I18n.format(tr("Updates available for some of your {0}boards{1}"), "<a href=\"http://boardsmanager/DropdownUpdatableCoresItem\">", "</a>");
     } else {
-      text = I18n.format(tr("Updates available for some of your {0}boards{1} and {2}libraries{3}"), "<a href=\"http://boardsmanager\">", "</a>", "<a href=\"http://librarymanager\">", "</a>");
+      text = I18n.format(tr("Updates available for some of your {0}boards{1} and {2}libraries{3}"), "<a href=\"http://boardsmanager/DropdownUpdatableCoresItem\">", "</a>", "<a href=\"http://librarymanager/DropdownUpdatableLibrariesItem\">", "</a>");
     }
 
     if (cancelled) {

File: arduino-core/src/processing/app/helpers/StringReplacer.java
Patch:
@@ -94,7 +94,9 @@ public static String replaceFromMapping(String src, Map<String, String> map,
                                           String rightDelimiter) {
     for (Map.Entry<String, String> entry : map.entrySet()) {
       String keyword = leftDelimiter + entry.getKey() + rightDelimiter;
-      src = src.replace(keyword, entry.getValue());
+      if (entry.getValue() != null && keyword != null) {
+          src = src.replace(keyword, entry.getValue());
+      }
     }
     return src;
   }

File: arduino-core/src/cc/arduino/packages/Uploader.java
Patch:
@@ -85,7 +85,7 @@ protected Uploader(boolean nup) {
   }
 
   private void init(boolean nup) {
-    this.error = null;
+    this.error = "";
     this.notFoundError = false;
     this.noUploadPort = nup;
   }

File: arduino-core/src/cc/arduino/packages/uploaders/SSHUploader.java
Patch:
@@ -135,7 +135,7 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
       return runUploadTool(ssh, prefs);
     } catch (JSchException e) {
       String message = e.getMessage();
-      if ("Auth cancel".equals(message) || "Auth fail".equals(message)) {
+      if (message.contains("Auth cancel") || message.contains("Auth fail") || message.contains("authentication fail")) {
         return false;
       }
       if (e.getMessage().contains("Connection refused")) {

File: arduino-core/src/cc/arduino/packages/discoverers/serial/SerialBoardsLister.java
Patch:
@@ -54,7 +54,7 @@ public void start(Timer timer) {
     timer.schedule(this, 0, 1000);
   }
 
-  public void retriggerDiscovery() {
+  public synchronized void retriggerDiscovery() {
     while (BaseNoGui.packages == null) {
       try {
         Thread.sleep(1000);

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -181,7 +181,7 @@ public  List<String> listSerialsNames(){
     return list;
   }
 
-  public Map<String, Object> resolveDeviceByVendorIdProductId(String serial, Map<String, TargetPackage> packages) {
+  public synchronized Map<String, Object> resolveDeviceByVendorIdProductId(String serial, Map<String, TargetPackage> packages) {
     String vid_pid_iSerial = resolveDeviceAttachedToNative(serial);
     for (TargetPackage targetPackage : packages.values()) {
       for (TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {

File: arduino-core/src/cc/arduino/packages/Discovery.java
Patch:
@@ -51,5 +51,6 @@ public interface Discovery {
    * @return
    */
   List<BoardPort> listDiscoveredBoards();
+  List<BoardPort> listDiscoveredBoards(boolean complete);
 
 }

File: arduino-core/src/processing/app/helpers/StringReplacer.java
Patch:
@@ -94,7 +94,9 @@ public static String replaceFromMapping(String src, Map<String, String> map,
                                           String rightDelimiter) {
     for (Map.Entry<String, String> entry : map.entrySet()) {
       String keyword = leftDelimiter + entry.getKey() + rightDelimiter;
-      src = src.replace(keyword, entry.getValue());
+      if (entry.getValue() != null && keyword != null) {
+          src = src.replace(keyword, entry.getValue());
+      }
     }
     return src;
   }

File: app/src/processing/app/Editor.java
Patch:
@@ -2547,7 +2547,7 @@ public void handleSerial() {
     }
 
     serialMonitor = new MonitorFactory().newMonitor(port);
-    serialMonitor.setIconImage(getIconImage());
+    base.setIcon(serialMonitor);
 
     // If currently uploading, disable the monitor (it will be later
     // enabled when done uploading)
@@ -2643,7 +2643,7 @@ public void handlePlotter() {
     }
 
     serialPlotter = new SerialPlotter(port);
-    serialPlotter.setIconImage(getIconImage());
+    base.setIcon(serialPlotter);
 
     // If currently uploading, disable the plotter (it will be later
     // enabled when done uploading)

File: app/src/cc/arduino/view/NotificationPopup.java
Patch:
@@ -61,7 +61,6 @@ public NotificationPopup(Frame parent, HyperlinkListener hyperlinkListener,
     super(parent, false);
     setLayout(new FlowLayout());
     setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
-    setAlwaysOnTop(true);
     setUndecorated(true);
     setResizable(false);
 

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -269,7 +269,7 @@ private void callArduinoBuilder(TargetBoard board, TargetPlatform platform, Targ
     }
 
     if (result != 0) {
-      RunnerException re = new RunnerException(tr("Error compiling."));
+      RunnerException re = new RunnerException(I18n.format(tr("Error compiling for board {0}."), board.getName()));
       re.hideStackTrace();
       throw re;
     }

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -104,8 +104,8 @@ public EditorConsole() {
     int height = metrics.getAscent() + metrics.getDescent();
     int lines = PreferencesData.getInteger("console.lines");
     int sizeFudge = 6; //10; // unclear why this is necessary, but it is
-    setPreferredSize(new Dimension(1024, (height * lines) + sizeFudge));
-    setMinimumSize(new Dimension(1024, (height * 5) + sizeFudge));
+    setPreferredSize(new Dimension(100, (height * lines) + sizeFudge));
+    setMinimumSize(new Dimension(100, (height * 5) + sizeFudge));
 
     EditorConsole.init(stdOutStyle, System.out, stdErrStyle, System.err);
   }

File: app/src/cc/arduino/view/SplashScreenHelper.java
Patch:
@@ -35,6 +35,8 @@
 import java.awt.geom.Rectangle2D;
 import java.util.Map;
 
+import processing.app.Theme;
+
 public class SplashScreenHelper {
 
   private static final int X_OFFSET = 0;
@@ -96,7 +98,7 @@ private void eraseLastStatusText() {
   private void prepareTextAreaAndGraphics() {
     splashTextArea = new Rectangle2D.Double(X_OFFSET, Y_OFFSET, TEXTAREA_WIDTH, TEXTAREA_HEIGHT);
 
-    splashGraphics = splash.createGraphics();
+    splashGraphics = Theme.setupGraphics2D(splash.createGraphics());
 
     if (desktopHints != null) {
       splashGraphics.addRenderingHints(desktopHints);

File: app/src/processing/app/EditorLineStatus.java
Patch:
@@ -89,7 +89,8 @@ public void set(int newStart, int newStop) {
     repaint();
   }
 
-  public void paintComponent(Graphics g) {
+  public void paintComponent(Graphics graphics) {
+    Graphics2D g = Theme.setupGraphics2D(graphics);
     if (name == "" && serialport == "") {
       PreferencesMap boardPreferences = BaseNoGui.getBoardPreferences();
       if (boardPreferences != null)

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -197,7 +197,7 @@ public void paintComponent(Graphics screen) {
       x1[SERIAL] = width - BUTTON_WIDTH - 14;
       x2[SERIAL] = width - 14;
     }
-    Graphics g = offscreen.getGraphics();
+    Graphics2D g = Theme.setupGraphics2D(offscreen.getGraphics());
     g.setColor(bgcolor); //getBackground());
     g.fillRect(0, 0, width, height);
 

File: app/src/processing/app/Base.java
Patch:
@@ -1752,11 +1752,10 @@ public void paint(Graphics g) {
         g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,
                 RenderingHints.VALUE_TEXT_ANTIALIAS_OFF);
 
-        int scale = Theme.getInteger("gui.scalePercent");
-        Font f = new Font("SansSerif", Font.PLAIN, 11 * scale / 100);
+        Font f = new Font("SansSerif", Font.PLAIN, Theme.scale(11));
         g.setFont(f);
         g.setColor(Color.white);
-        g.drawString(BaseNoGui.VERSION_NAME_LONG, 33 * scale / 100, 20 * scale / 100);
+        g.drawString(BaseNoGui.VERSION_NAME_LONG, Theme.scale(33), Theme.scale(20));
       }
     };
     window.addMouseListener(new MouseAdapter() {

File: app/src/processing/app/EditorHeader.java
Patch:
@@ -74,7 +74,7 @@ public class EditorHeader extends JComponent {
   static final int PIECE_WIDTH = 4;
 
   // value for the size bars, buttons, etc
-  static final int GRID_SIZE = 33 * Theme.getInteger("gui.scalePercent") / 100;
+  static final int GRID_SIZE = Theme.scale(33);
 
   static Image[][] pieces;
 

File: app/src/processing/app/EditorLineStatus.java
Patch:
@@ -55,7 +55,7 @@ public EditorLineStatus() {
     background = Theme.getColor("linestatus.bgcolor");
     font = Theme.getFont("linestatus.font");
     foreground = Theme.getColor("linestatus.color");
-    high = Theme.getInteger("linestatus.height") * Theme.getInteger("gui.scalePercent") / 100;
+    high = Theme.scale(Theme.getInteger("linestatus.height"));
 
     if (OSUtils.isMacOS()) {
       resize = Theme.getThemeImage("resize.png", this);

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -68,7 +68,7 @@ public class EditorStatus extends JPanel {
   }
 
   // value for the size bars, buttons, etc
-  static final int GRID_SIZE = 33 * Theme.getInteger("gui.scalePercent") / 100;
+  static final int GRID_SIZE = Theme.scale(33);
 
   private final Editor editor;
   private final Font font;

File: arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -155,7 +155,7 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
 
     BoardPort boardPort = BaseNoGui.getDiscoveryManager().find(PreferencesData.get("serial.port"));
     try {
-      prefs.put("serial.port.iserial", boardPort.getPrefs().get("iserial"));
+      prefs.put("serial.port.iserial", boardPort.getPrefs().getOrExcept("iserial"));
     } catch (Exception e) {
       // if serial port does not contain an iserial field
     }

File: app/src/processing/app/Base.java
Patch:
@@ -957,14 +957,15 @@ public boolean handleClose(Editor editor) {
     editor.internalCloseRunner();
 
     if (editors.size() == 1) {
+      storeSketches();
+
       // This will store the sketch count as zero
       editors.remove(editor);
       try {
         Editor.serialMonitor.close();
       } catch (Exception e) {
         //ignore
       }
-      storeSketches();
       rebuildRecentSketchesMenuItems();
 
       // Save out the current prefs state

File: arduino-core/src/cc/arduino/utils/network/FileDownloader.java
Patch:
@@ -207,8 +207,10 @@ private void downloadFile() throws InterruptedException {
         file.write(buffer, 0, read);
         setDownloaded(getDownloaded() + read);
 
-        if (Thread.interrupted())
+        if (Thread.interrupted()) {
+          file.close();
           throw new InterruptedException();
+        }
       }
 
       if (getDownloadSize() != null) {

File: arduino-core/src/cc/arduino/packages/uploaders/SSHUploader.java
Patch:
@@ -139,7 +139,7 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
         return false;
       }
       if (e.getMessage().contains("Connection refused")) {
-        throw new RunnerException(I18n.format("Unable to connect to {0}", port.getAddress()));
+        throw new RunnerException(I18n.format(tr("Unable to connect to {0}"), port.getAddress()));
       }
       throw new RunnerException(e);
     } catch (Exception e) {

File: arduino-core/src/processing/app/SketchData.java
Patch:
@@ -136,7 +136,7 @@ protected void load() throws IOException {
           if (BaseNoGui.isSanitaryName(base)) {
             addCode(new SketchCode(new File(folder, filename)));
           } else {
-            System.err.println(I18n.format("File name {0} is invalid: ignored", filename));
+            System.err.println(I18n.format(tr("File name {0} is invalid: ignored"), filename));
           }
         }
       }

File: app/src/processing/app/Sketch.java
Patch:
@@ -1119,7 +1119,7 @@ private String build(String buildPath, boolean verbose, boolean save) throws Run
   }
 
   private String saveSketchInTempFolder() throws IOException {
-    File tempFolder = FileUtils.createTempFolder("arduino_", DigestUtils.md5Hex(data.getMainFilePath()));
+    File tempFolder = FileUtils.createTempFolder("arduino_modified_sketch_");
     FileUtils.copy(getFolder(), tempFolder);
 
     for (SketchCode sc : Stream.of(data.getCodes()).filter(SketchCode::isModified).collect(Collectors.toList())) {

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -63,6 +63,7 @@ public EditorConsole() {
     consoleTextPane.setEditable(false);
     DefaultCaret caret = (DefaultCaret) consoleTextPane.getCaret();
     caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
+    consoleTextPane.setFocusTraversalKeysEnabled(false);
 
     Color backgroundColour = Theme.getColor("console.color");
     consoleTextPane.setBackground(backgroundColour);

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -39,9 +39,9 @@
 public class BaseNoGui {
 
   /** Version string to be used for build */
-  public static final int REVISION = 10607;
+  public static final int REVISION = 10608;
   /** Extended version string displayed on GUI */
-  public static final String VERSION_NAME = "1.6.7";
+  public static final String VERSION_NAME = "1.6.8";
   public static final String VERSION_NAME_LONG;
 
   // Current directory to use for relative paths specified on the

File: app/src/processing/app/syntax/SketchTextAreaDefaultInputMap.java
Patch:
@@ -54,8 +54,8 @@ public SketchTextAreaDefaultInputMap() {
 
       remove(KeyStroke.getKeyStroke(KeyEvent.VK_J, defaultModifier));
 
-      put(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, defaultModifier), DefaultEditorKit.insertTabAction);
-      put(KeyStroke.getKeyStroke(KeyEvent.VK_CLOSE_BRACKET, defaultModifier), RSyntaxTextAreaEditorKit.rstaDecreaseIndentAction);
+      put(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, defaultModifier), RSyntaxTextAreaEditorKit.rstaDecreaseIndentAction);
+      put(KeyStroke.getKeyStroke(KeyEvent.VK_CLOSE_BRACKET, defaultModifier), SketchTextAreaEditorKit.rtaIncreaseIndentAction);
 
       put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, defaultModifier | shift), DefaultEditorKit.selectionBeginAction);
       put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, defaultModifier | shift), DefaultEditorKit.selectionEndAction);

File: app/src/processing/app/syntax/SketchTextAreaDefaultInputMap.java
Patch:
@@ -45,8 +45,8 @@ public SketchTextAreaDefaultInputMap() {
 
       remove(KeyStroke.getKeyStroke(KeyEvent.VK_J, defaultModifier));
 
-      put(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, defaultModifier), DefaultEditorKit.insertTabAction);
-      put(KeyStroke.getKeyStroke(KeyEvent.VK_CLOSE_BRACKET, defaultModifier), RSyntaxTextAreaEditorKit.rstaDecreaseIndentAction);
+      put(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, defaultModifier), RSyntaxTextAreaEditorKit.rstaDecreaseIndentAction);
+      put(KeyStroke.getKeyStroke(KeyEvent.VK_CLOSE_BRACKET, defaultModifier), SketchTextAreaEditorKit.rtaIncreaseIndentAction);
 
       put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, defaultModifier | shift), DefaultEditorKit.selectionBeginAction);
       put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, defaultModifier | shift), DefaultEditorKit.selectionEndAction);

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -63,6 +63,7 @@ public EditorConsole() {
     consoleTextPane.setEditable(false);
     DefaultCaret caret = (DefaultCaret) consoleTextPane.getCaret();
     caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
+    consoleTextPane.setFocusTraversalKeysEnabled(false);
 
     Color backgroundColour = Theme.getColor("console.color");
     consoleTextPane.setBackground(backgroundColour);

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -137,7 +137,7 @@ public String build(CompilerProgressListener progListener, boolean exportHex) th
 
     PreferencesMap prefs = loadPreferences(board, platform, aPackage, vidpid);
 
-    MessageConsumerOutputStream out = new MessageConsumerOutputStream(new ProgressAwareMessageConsumer(new I18NAwareMessageConsumer(System.out), progListener), "\n");
+    MessageConsumerOutputStream out = new MessageConsumerOutputStream(new ProgressAwareMessageConsumer(new I18NAwareMessageConsumer(System.out, System.err), progListener), "\n");
     MessageConsumerOutputStream err = new MessageConsumerOutputStream(new I18NAwareMessageConsumer(System.err, Compiler.this), "\n");
 
     callArduinoBuilder(board, platform, aPackage, vidpid, BuilderAction.COMPILE, new PumpStreamHandler(out, err));

File: arduino-core/src/cc/arduino/ProgressAwareMessageConsumer.java
Patch:
@@ -48,7 +48,7 @@ public ProgressAwareMessageConsumer(MessageConsumer parent, CompilerProgressList
 
   @Override
   public void message(String s) {
-    if (s.startsWith("===Progress")) {
+    if (s.startsWith("===info ||| Progress") || s.startsWith("===Progress")) {
       Map<String, Object> parsedMessage = parser.parse(s);
       Object[] args = (Object[]) parsedMessage.get("args");
       progressListener.progress(Double.valueOf(args[0].toString()).intValue());

File: arduino-core/src/cc/arduino/contributions/packages/ContributionInstaller.java
Patch:
@@ -236,7 +236,7 @@ private void executeScripts(File folder, Collection<File> postInstallScripts, bo
   }
 
   public synchronized List<String> remove(ContributedPlatform contributedPlatform) {
-    BaseNoGui.indexer.getPackages().stream().flatMap(p -> p.getPlatforms().stream()).filter(new InstalledPredicate()).peek(pl -> System.out.println(pl.getName() + " " + pl.getVersion())).collect(Collectors.toList());
+    BaseNoGui.indexer.getPackages().stream().flatMap(p -> p.getPlatforms().stream()).filter(new InstalledPredicate()).collect(Collectors.toList());
     if (contributedPlatform == null || contributedPlatform.isReadOnly()) {
       return new LinkedList<>();
     }

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -973,7 +973,7 @@ static public void populateImportToLibraryTable() {
     }
   }
 
-  static public void initParameters(String args[]) throws IOException {
+  static public void initParameters(String args[]) throws Exception {
     String preferencesFile = null;
 
     // Do a first pass over the commandline arguments, the rest of them

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -252,7 +252,7 @@ public void chmod(File file, int mode) throws IOException, InterruptedException
     process.waitFor();
   }
 
-  public void fixSettingsLocation() throws IOException {
+  public void fixSettingsLocation() throws Exception {
     //noop
   }
 }

File: arduino-core/src/processing/app/PreferencesData.java
Patch:
@@ -31,7 +31,7 @@ public class PreferencesData {
   static boolean doSave = true;
 
 
-  static public void init(File file) throws IOException {
+  static public void init(File file) throws Exception {
     if (file == null) {
       BaseNoGui.getPlatform().fixSettingsLocation();
     }

File: app/src/processing/app/Sketch.java
Patch:
@@ -463,7 +463,7 @@ public void handleDeleteCode() throws IOException {
 
       } else {
         // delete the file
-        if (!current.getCode().deleteFile(BaseNoGui.getBuildFolder(data))) {
+        if (!current.getCode().deleteFile(BaseNoGui.getBuildFolder(data).toPath(), Paths.get(System.getProperty("java.io.tmpdir"), "arduino_" + DigestUtils.md5Hex(getMainFilePath())))) {
           Base.showMessage(tr("Couldn't do it"),
                            I18n.format(tr("Could not delete \"{0}\"."), current.getCode().getFileName()));
           return;

File: arduino-core/src/processing/app/SketchCode.java
Patch:
@@ -91,12 +91,12 @@ protected boolean fileReadOnly() {
   }
 
 
-  protected boolean deleteFile(File tempBuildFolder) throws IOException {
+  protected boolean deleteFile(Path tempBuildFolder, Path tempUnsavedSketchPath) throws IOException {
     if (!file.delete()) {
       return false;
     }
 
-    List<Path> tempBuildFolders = Stream.of(tempBuildFolder.toPath(), Paths.get(tempBuildFolder.getAbsolutePath(), "sketch"))
+    List<Path> tempBuildFolders = Stream.of(tempBuildFolder, tempBuildFolder.resolve("sketch"), tempUnsavedSketchPath)
       .filter(path -> Files.exists(path))
       .collect(Collectors.toList());
 

File: arduino-core/src/cc/arduino/contributions/DownloadableContributionsDownloader.java
Patch:
@@ -40,8 +40,8 @@
 import java.nio.file.Path;
 import java.nio.file.Paths;
 
-import static processing.app.I18n.tr;
 import static processing.app.I18n.format;
+import static processing.app.I18n.tr;
 
 public class DownloadableContributionsDownloader {
 

File: arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -34,9 +34,9 @@
 
 package cc.arduino.packages.uploaders;
 
+import cc.arduino.LoadVIDPIDSpecificPreferences;
 import cc.arduino.packages.Uploader;
 import processing.app.*;
-import cc.arduino.LoadVIDPIDSpecificPreferences;
 import processing.app.debug.RunnerException;
 import processing.app.debug.TargetPlatform;
 import processing.app.helpers.OSUtils;

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -608,7 +608,7 @@ static public void initPackages() throws Exception {
     loadHardware(getSketchbookHardwareFolder());
     createToolPreferences(indexer.getInstalledTools(), true);
 
-    librariesIndexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder(), indexer);
+    librariesIndexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder());
     File librariesIndexFile = librariesIndexer.getIndexFile();
     copyStockLibraryIndexIfUpstreamIsMissing(librariesIndexFile);
     try {

File: app/src/cc/arduino/contributions/libraries/ui/LibrariesIndexTableModel.java
Patch:
@@ -204,7 +204,7 @@ private void updateContributions() {
     contributions.clear();
     indexer.getIndex().getLibraries().forEach(this::applyFilterToLibrary);
     indexer.getInstalledLibraries().forEach(this::applyFilterToLibrary);
-    Collections.sort(contributions, new ContributedLibraryReleasesComparator());
+    Collections.sort(contributions, new ContributedLibraryReleasesComparator("Arduino"));
   }
 
 }

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -92,7 +92,9 @@ public void parseIndex() throws Exception {
     }
 
     List<ContributedPackage> packages = index.getPackages();
-    Collection<ContributedPackage> packagesWithTools = packages.stream().filter(input -> input.getTools() != null).collect(Collectors.toList());
+    Collection<ContributedPackage> packagesWithTools = packages.stream()
+      .filter(input -> input.getTools() != null && !input.getTools().isEmpty())
+      .collect(Collectors.toList());
 
     for (ContributedPackage pack : packages) {
       for (ContributedPlatform platform : pack.getPlatforms()) {

File: arduino-core/src/cc/arduino/contributions/packages/ContributedPackage.java
Patch:
@@ -61,6 +61,9 @@ public ContributedPlatform findPlatform(String architecture, String version) {
   }
 
   public ContributedTool findTool(String name, String version) {
+    if (getTools() == null) {
+      return null;
+    }
     for (ContributedTool tool : getTools()) {
       if (tool.getName().equals(name) && tool.getVersion().equals(version))
         return tool;

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -74,7 +74,7 @@ public void setLookAndFeel() throws Exception {
   }
 
 
-  public void init() throws IOException {
+  public void init() throws Exception {
   }
 
 

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -60,7 +60,7 @@ public Platform() {
     Toolkit.getDefaultToolkit();
   }
 
-  public void init() throws IOException {
+  public void init() throws Exception {
     super.init();
 
     System.setProperty("apple.laf.useScreenMenuBar", "true");

File: app/src/cc/arduino/contributions/libraries/ui/DropdownLibraryOfCategoryItem.java
Patch:
@@ -35,6 +35,8 @@
 
 import java.util.function.Predicate;
 
+import static processing.app.I18n.tr;
+
 public class DropdownLibraryOfCategoryItem implements DropdownItem<ContributedLibrary> {
 
   private final String category;
@@ -44,7 +46,7 @@ public DropdownLibraryOfCategoryItem(String category) {
   }
 
   public String toString() {
-    return category;
+    return tr(category);
   }
 
   @Override

File: app/src/cc/arduino/contributions/libraries/ui/DropdownLibraryOfTypeItem.java
Patch:
@@ -35,6 +35,8 @@
 
 import java.util.function.Predicate;
 
+import static processing.app.I18n.tr;
+
 public class DropdownLibraryOfTypeItem implements DropdownItem<ContributedLibrary> {
 
   private final String type;
@@ -44,7 +46,7 @@ public DropdownLibraryOfTypeItem(String type) {
   }
 
   public String toString() {
-    return type;
+    return tr(type);
   }
 
   @Override

File: app/src/cc/arduino/contributions/packages/ui/DropdownCoreOfCategoryItem.java
Patch:
@@ -35,6 +35,8 @@
 
 import java.util.function.Predicate;
 
+import static processing.app.I18n.tr;
+
 public class DropdownCoreOfCategoryItem implements DropdownItem<ContributedPlatform> {
 
   private final String category;
@@ -44,7 +46,7 @@ public DropdownCoreOfCategoryItem(String category) {
   }
 
   public String toString() {
-    return category;
+    return tr(category);
   }
 
   @Override

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -70,7 +70,7 @@ public class Compiler implements MessageConsumer {
     tr("Multiple libraries were found for \"{0}\"");
     tr(" Not used: {0}");
     tr(" Used: {0}");
-    tr("Library can't use both 'src' and 'utility' folders. Double ckeck {0}");
+    tr("Library can't use both 'src' and 'utility' folders. Double check {0}");
     tr("WARNING: library {0} claims to run on {1} architecture(s) and may be incompatible with your current board which runs on {2} architecture(s).");
     tr("Looking for recipes like {0}*{1}");
     tr("Board {0}:{1}:{2} doesn''t define a ''build.board'' preference. Auto-set to: {3}");

File: app/src/cc/arduino/contributions/packages/ui/ContributionManagerUI.java
Patch:
@@ -35,6 +35,7 @@
 import cc.arduino.contributions.packages.ContributionsIndexer;
 import cc.arduino.contributions.ui.*;
 import cc.arduino.utils.Progress;
+import processing.app.BaseNoGui;
 import processing.app.I18n;
 
 import javax.swing.*;
@@ -48,7 +49,6 @@
 @SuppressWarnings("serial")
 public class ContributionManagerUI extends InstallerJDialog {
 
-  private final ContributionsIndexer indexer;
   private final ContributionInstaller installer;
 
   @Override
@@ -84,9 +84,8 @@ protected void onRemove(ContributedPlatform installedPlatform) {
     };
   }
 
-  public ContributionManagerUI(Frame parent, ContributionsIndexer indexer, ContributionInstaller installer) {
+  public ContributionManagerUI(Frame parent, ContributionInstaller installer) {
     super(parent, tr("Boards Manager"), Dialog.ModalityType.APPLICATION_MODAL, tr("Unable to reach Arduino.cc due to possible network issues."));
-    this.indexer = indexer;
     this.installer = installer;
   }
 
@@ -95,6 +94,7 @@ public void updateUI() {
 
     categoryChooser.removeActionListener(categoryChooserActionListener);
 
+    ContributionsIndexer indexer = BaseNoGui.indexer;
     getContribModel().setIndexer(indexer);
 
     categoryFilter = null;

File: app/src/processing/app/Base.java
Patch:
@@ -1280,7 +1280,7 @@ public void openLibraryManager(String dropdownItem) {
       contributionsSelfCheck.cancel();
     }
     @SuppressWarnings("serial")
-    LibraryManagerUI managerUI = new LibraryManagerUI(activeEditor, BaseNoGui.librariesIndexer, libraryInstaller) {
+    LibraryManagerUI managerUI = new LibraryManagerUI(activeEditor, libraryInstaller) {
       @Override
       protected void onIndexesUpdated() throws Exception {
         BaseNoGui.initPackages();
@@ -1309,7 +1309,7 @@ public void openBoardsManager(final String filterText, String dropdownItem) thro
       contributionsSelfCheck.cancel();
     }
     @SuppressWarnings("serial")
-    ContributionManagerUI managerUI = new ContributionManagerUI(activeEditor, BaseNoGui.indexer, contributionInstaller) {
+    ContributionManagerUI managerUI = new ContributionManagerUI(activeEditor, contributionInstaller) {
       @Override
       protected void onIndexesUpdated() throws Exception {
         BaseNoGui.initPackages();

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -84,7 +84,7 @@ public class BaseNoGui {
   static final String portableSketchbookFolder = "sketchbook";
 
   public static ContributionsIndexer indexer;
-  static LibrariesIndexer librariesIndexer;
+  public static LibrariesIndexer librariesIndexer;
 
   // Returns a File object for the given pathname. If the pathname
   // is not absolute, it is interpreted relative to the current

File: app/src/processing/app/Base.java
Patch:
@@ -81,7 +81,7 @@ public class Base {
   public static final Predicate<UserLibrary> CONTRIBUTED = library -> library.getTypes() == null || library.getTypes().isEmpty() || library.getTypes().contains("Contributed");
   public static final Predicate<UserLibrary> RETIRED = library -> library.getTypes() != null && library.getTypes().contains("Retired");
 
-  private static final int RECENT_SKETCHES_MAX_SIZE = 5;
+  private static final int RECENT_SKETCHES_MAX_SIZE = 10;
 
   private static boolean commandLine;
   public static volatile Base INSTANCE;

File: arduino-core/src/cc/arduino/packages/discoverers/network/BoardReachabilityFilter.java
Patch:
@@ -69,7 +69,7 @@ public void run() {
           ports.add(0, 22);
         }
 
-        boolean reachable = NetUtils.isReachable(inetAddress, ports);
+        boolean reachable = board.getPrefs().get("tcp_check").contentEquals("no") || NetUtils.isReachable(inetAddress, ports);
         if (!reachable) {
           boardPortIterator.remove();
         }

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -152,7 +152,7 @@ public String build(CompilerProgressListener progListener, boolean exportHex) th
 
     size(prefs);
 
-    return sketch.getName() + ".ino";
+    return sketch.getPrimaryFile().getName();
   }
 
   private String VIDPID() {

File: arduino-core/src/processing/app/helpers/FileUtils.java
Patch:
@@ -58,12 +58,12 @@ public static void copyFile(File source, File dest) throws IOException {
   public static void copy(File sourceFolder, File destFolder) throws IOException {
     for (File file : sourceFolder.listFiles()) {
       File destFile = new File(destFolder, file.getName());
-      if (file.isDirectory()) {
-        if (!destFile.mkdir()) {
+      if (file.isDirectory() && !SOURCE_CONTROL_FOLDERS.contains(file.getName())) {
+        if (!destFile.exists() && !destFile.mkdir()) {
           throw new IOException("Unable to create folder: " + destFile);
         }
         copy(file, destFile);
-      } else {
+      } else if (!file.isDirectory()) {
         copyFile(file, destFile);
       }
     }

File: app/src/cc/arduino/contributions/libraries/LibraryTypeComparator.java
Patch:
@@ -38,7 +38,7 @@ public class LibraryTypeComparator implements Comparator<String> {
   private final List<String> types;
 
   public LibraryTypeComparator() {
-    this("Arduino", "Recommended", "Contributed");
+    this("Arduino", "Partner", "Recommended", "Contributed");
   }
 
   public LibraryTypeComparator(String... types) {

File: arduino-core/src/processing/app/Serial.java
Patch:
@@ -114,7 +114,7 @@ private Serial(String iname, int irate, char iparity, int idatabits, float istop
       port.openPort();
       boolean res = port.setParams(irate, idatabits, stopbits, parity, true, true);
       if (!res) {
-        System.err.println(format(_("Error while setting serial port parameters: {0} {1} {2} {3}"),
+        System.err.println(format(tr("Error while setting serial port parameters: {0} {1} {2} {3}"),
                                   irate, iparity, idatabits, istopbits));
       }
       port.addEventListener(this);

File: app/src/processing/app/Sketch.java
Patch:
@@ -652,7 +652,7 @@ protected boolean saveAs() throws IOException {
     // make sure there doesn't exist a .cpp file with that name already
     // but ignore this situation for the first tab, since it's probably being
     // resaved (with the same name) to another location/folder.
-    for (int i = 0; i < data.getCodeCount(); i++) {
+    for (int i = 1; i < data.getCodeCount(); i++) {
       SketchCode code = data.getCode(i);
       if (newName.equalsIgnoreCase(code.getPrettyName())) {
         Base.showMessage(tr("Error"),

File: app/src/cc/arduino/packages/formatter/AStyle.java
Patch:
@@ -91,10 +91,11 @@ public void run() {
     int line = getLineOfOffset(textArea);
     int lineOffset = getLineOffset(textArea, line);
 
-    editor.getTextArea().getUndoManager().beginInternalAtomicEdit();
+    textArea.getUndoManager().beginInternalAtomicEdit();
+    editor.removeAllLineHighlights();
     editor.setText(formattedText);
     editor.getSketch().setModified(true);
-    editor.getTextArea().getUndoManager().endInternalAtomicEdit();
+    textArea.getUndoManager().endInternalAtomicEdit();
 
     if (line != -1 && lineOffset != -1) {
       try {

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -355,6 +355,7 @@ private void saveHex(String compiledSketch, String copyOfCompiledSketch, Prefere
     try {
       compiledSketch = StringReplacer.replaceFromMapping(compiledSketch, prefs);
       copyOfCompiledSketch = StringReplacer.replaceFromMapping(copyOfCompiledSketch, prefs);
+      copyOfCompiledSketch = copyOfCompiledSketch.replaceAll(":", "_");
 
       Path compiledSketchPath;
       Path compiledSketchPathInSubfolder = Paths.get(prefs.get("build.path"), "sketch", compiledSketch);

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -549,12 +549,12 @@ public void message(String s) {
       }
 
       if (error.trim().equals("'Mouse' was not declared in this scope")) {
-        error = tr("'Mouse' only supported on the Arduino Leonardo");
+        error = tr("'Mouse' not found. Does your sketch include the line '#include <Mouse.h>'?");
         //msg = _("\nThe 'Mouse' class is only supported on the Arduino Leonardo.\n\n");
       }
 
       if (error.trim().equals("'Keyboard' was not declared in this scope")) {
-        error = tr("'Keyboard' only supported on the Arduino Leonardo");
+        error = tr("'Keyboard' not found. Does your sketch include the line '#include <Keyboard.h>'?");
         //msg = _("\nThe 'Keyboard' class is only supported on the Arduino Leonardo.\n\n");
       }
 

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -172,7 +172,7 @@ public Map<String, Object> resolveDeviceAttachedTo(String serial, Map<String, Ta
     }
 
     try {
-      String vidPid = new SystemProfilerParser().extractVIDAndPID(devicesListOutput, serial);
+      String vidPid = SystemProfilerParser.extractVIDAndPID(devicesListOutput, serial);
 
       if (vidPid == null) {
         return super.resolveDeviceAttachedTo(serial, packages, devicesListOutput);

File: arduino-core/src/processing/app/macosx/SystemProfilerParser.java
Patch:
@@ -73,7 +73,7 @@ public synchronized static String extractVIDAndPID(String output, String serial)
           String computedDevicePath = device.get(DEVICE_PATH);
           String computedDevicePathMinusChar = computedDevicePath.substring(0, computedDevicePath.length() - 1);
           String serialMinusChar = serial.substring(0, serial.length() - 1);
-          if (computedDevicePath.equals(serial) || computedDevicePathMinusChar.equals(serialMinusChar)) {
+          if (computedDevicePath.equalsIgnoreCase(serial) || computedDevicePathMinusChar.equalsIgnoreCase(serialMinusChar)) {
             return (device.get(VID) + "_" + device.get(PID)).toUpperCase();
           }
         }

File: arduino-core/src/cc/arduino/utils/ArchiveExtractor.java
Patch:
@@ -164,7 +164,7 @@ public void extract(File archiveFile, File destFolder, int stripPath, boolean ov
           while (stripPath > 0) {
             slash = name.indexOf("/", slash);
             if (slash == -1) {
-              throw new IOException("Invalid archive: it must contains a single root folder");
+              throw new IOException("Invalid archive: it must contain a single root folder");
             }
             slash++;
             stripPath--;
@@ -174,7 +174,7 @@ public void extract(File archiveFile, File destFolder, int stripPath, boolean ov
 
         // Strip the common path prefix when requested
         if (!name.startsWith(pathPrefix)) {
-          throw new IOException("Invalid archive: it must contains a single root folder while file " + name + " is outside " + pathPrefix);
+          throw new IOException("Invalid archive: it must contain a single root folder while file " + name + " is outside " + pathPrefix);
         }
         name = name.substring(pathPrefix.length());
         if (name.isEmpty()) {
@@ -185,7 +185,7 @@ public void extract(File archiveFile, File destFolder, int stripPath, boolean ov
         File outputLinkedFile = null;
         if (isLink) {
           if (!linkName.startsWith(pathPrefix)) {
-            throw new IOException("Invalid archive: it must contains a single root folder while file " + linkName + " is outside " + pathPrefix);
+            throw new IOException("Invalid archive: it must contain a single root folder while file " + linkName + " is outside " + pathPrefix);
           }
           linkName = linkName.substring(pathPrefix.length());
           outputLinkedFile = new File(destFolder, linkName);

File: arduino-core/src/cc/arduino/Compiler.java
Patch:
@@ -361,8 +361,10 @@ private void saveHex(String compiledSketch, String copyOfCompiledSketch, Prefere
       Path compiledSketchPathInBuildPath = Paths.get(prefs.get("build.path"), compiledSketch);
       if (Files.exists(compiledSketchPathInSubfolder)) {
         compiledSketchPath = compiledSketchPathInSubfolder;
-      } else {
+      } else if (Files.exists(compiledSketchPathInBuildPath)) {
         compiledSketchPath = compiledSketchPathInBuildPath;
+      } else {
+        return;
       }
 
       Path copyOfCompiledSketchFilePath = Paths.get(this.sketch.getFolder().getAbsolutePath(), copyOfCompiledSketch);

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -702,6 +702,7 @@ static protected void loadHardware(File folder) {
         targetPackage = packages.get(target);
       } else {
         targetPackage = new LegacyTargetPackage(target);
+        packages.put(target, targetPackage);
       }
       try {
         loadTargetPackage(targetPackage, subfolder);

File: app/src/processing/app/Sketch.java
Patch:
@@ -525,6 +525,7 @@ private void calcModified() {
       // http://developer.apple.com/qa/qa2001/qa1146.html
       Object modifiedParam = modified ? Boolean.TRUE : Boolean.FALSE;
       editor.getRootPane().putClientProperty("windowModified", modifiedParam);
+      editor.getRootPane().putClientProperty("Window.documentModified", modifiedParam);
     }
   }
 

File: arduino-core/src/cc/arduino/Constants.java
Patch:
@@ -65,6 +65,9 @@ public class Constants {
   public static final String LIBRARY_INDEX_URL;
   public static final String LIBRARY_INDEX_URL_GZ;
 
+  public static final List<String> LIBRARY_CATEGORIES = Arrays.asList("Display", "Communication", "Signal Input/Output", "Sensors", "Device Control", "Timing", "Data Storage", "Data Processing", "Other", "Uncategorized");
+  public static final List<String> LIBRARY_MANDATORY_PROPERTIES = Arrays.asList("name", "version", "author", "maintainer", "sentence", "paragraph", "url");
+
   static {
     String extenalPackageIndexUrl = System.getProperty("PACKAGE_INDEX_URL");
     if (extenalPackageIndexUrl != null && !"".equals(extenalPackageIndexUrl)) {

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -29,6 +29,7 @@
 
 package cc.arduino.contributions.libraries;
 
+import cc.arduino.Constants;
 import cc.arduino.contributions.libraries.filters.LibraryInstalledInsideCore;
 import cc.arduino.contributions.libraries.filters.TypePredicate;
 import cc.arduino.contributions.packages.ContributedPlatform;
@@ -92,7 +93,7 @@ private void parseIndex(File indexFile) throws IOException {
 
       index.getLibraries()
         .stream()
-        .filter(library -> library.getCategory() == null || "".equals(library.getCategory()))
+        .filter(library -> library.getCategory() == null || "".equals(library.getCategory()) || !Constants.LIBRARY_CATEGORIES.contains(library.getCategory()))
         .forEach(library -> library.setCategory("Uncategorized"));
     } finally {
       IOUtils.closeQuietly(indexIn);

File: app/src/processing/app/syntax/SketchTextAreaDefaultInputMap.java
Patch:
@@ -50,7 +50,7 @@ public SketchTextAreaDefaultInputMap() {
       put(KeyStroke.getKeyStroke(KeyEvent.VK_UP, defaultModifier | shift), DefaultEditorKit.selectionBeginAction);
       put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, defaultModifier | shift), DefaultEditorKit.selectionEndAction);
 
-      if (PreferencesData.getBoolean("editor.keys.home_and_end_to_start_end_of_doc")) {
+      if (!PreferencesData.getBoolean("editor.keys.home_and_end_beginning_end_of_doc")) {
         put(KeyStroke.getKeyStroke(KeyEvent.VK_HOME, 0), DefaultEditorKit.beginLineAction);
         put(KeyStroke.getKeyStroke(KeyEvent.VK_END, 0), DefaultEditorKit.endLineAction);
       }

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -93,8 +93,9 @@ public EditorStatus(Editor editor) {
     initialize();
   }
 
-  private void clearState() {
+  public void clearState() {
     changeState(NOTICE);
+    repaint();
   }
 
   private void changeState(int newMode) {

File: app/src/processing/app/Sketch.java
Patch:
@@ -131,6 +131,7 @@ protected void load(boolean forceUpdate) throws IOException {
    * Handler for the New Code menu option.
    */
   public void handleNewCode() {
+    editor.status.clearState();
     // make sure the user didn't hide the sketch folder
     ensureExistence();
 
@@ -153,6 +154,7 @@ public void handleNewCode() {
    * Handler for the Rename Code menu option.
    */
   public void handleRenameCode() {
+    editor.status.clearState();
     // make sure the user didn't hide the sketch folder
     ensureExistence();
 
@@ -430,6 +432,7 @@ protected void nameCode(String newName) {
    * Remove a piece of code from the sketch and from the disk.
    */
   public void handleDeleteCode() {
+    editor.status.clearState();
     // make sure the user didn't hide the sketch folder
     ensureExistence();
 
@@ -1223,8 +1226,6 @@ private void ensureExistence() {
    * Returns true if this is a read-only sketch. Used for the
    * examples directory, or when sketches are loaded from read-only
    * volumes or folders without appropriate permissions.
-   * @param librariesPaths
-   * @param examplesPath
    */
   public boolean isReadOnly(LibraryList libraries, String examplesPath) {
     String apath = data.getFolder().getAbsolutePath();

File: app/src/processing/app/Editor.java
Patch:
@@ -722,7 +722,7 @@ public void rebuildRecentSketchesMenu() {
   private void buildSketchMenu(JMenu sketchMenu) {
     sketchMenu.removeAll();
 
-    JMenuItem item = newJMenuItem(tr("Verify / Compile"), 'R');
+    JMenuItem item = newJMenuItem(tr("Verify/Compile"), 'R');
     item.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
           handleRun(false, Editor.this.presentHandler, Editor.this.runHandler);

File: app/src/processing/app/Base.java
Patch:
@@ -456,9 +456,9 @@ protected void onProgress(Progress progress) {
       }
 
       // Error during build or upload
-      int res = editor.status.mode;
-      if (res == EditorStatus.ERR)
+      if (editor.status.isErr()) {
         System.exit(1);
+      }
 
       // No errors exit gracefully
       System.exit(0);

File: arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -242,7 +242,7 @@ private String waitForUploadPort(String uploadPort, List<String> before) throws
     }
 
     // Something happened while detecting port
-    throw new RunnerException(_("Couldn't find a Board on the selected port. Check that you have the correct port selected.  If it is correct, try pressing the board's reset button after initiating the upload."));
+    throw new RunnerException(_("Couldn't find a Board on the selected port. Check that you have the correct port selected.  If it is correct, try pressing the board's reset button after initiating the upload."), false);
   }
 
   private boolean uploadUsingProgrammer(String buildPath, String className) throws Exception {

File: arduino-core/src/processing/app/SketchData.java
Patch:
@@ -11,7 +11,7 @@
 public class SketchData {
 
   public static final List<String> SKETCH_EXTENSIONS = Arrays.asList("ino", "pde");
-  public static final List<String> OTHER_ALLOWED_EXTENSIONS = Arrays.asList("c", "cpp", "h", "s");
+  public static final List<String> OTHER_ALLOWED_EXTENSIONS = Arrays.asList("c", "cpp", "h", "hh", "hpp", "s");
   public static final List<String> EXTENSIONS = new LinkedList<String>(FluentIterable.from(SKETCH_EXTENSIONS).append(OTHER_ALLOWED_EXTENSIONS).toList());
 
   /** main pde file for this sketch. */

File: app/src/processing/app/syntax/SketchTextArea.java
Patch:
@@ -125,6 +125,7 @@ private void setTheme(String name) throws IOException {
     setSyntaxTheme(TokenTypes.LITERAL_BOOLEAN, "literal_boolean");
     setSyntaxTheme(TokenTypes.LITERAL_CHAR, "literal_char");
     setSyntaxTheme(TokenTypes.LITERAL_STRING_DOUBLE_QUOTE, "literal_string_double_quote");
+    setSyntaxTheme(TokenTypes.PREPROCESSOR, "preprocessor");
 
     Style style = getSyntaxScheme().getStyle(TokenTypes.IDENTIFIER);
     style.foreground = processing.app.Theme.getColor("editor.fgcolor");

File: app/src/processing/app/Editor.java
Patch:
@@ -504,7 +504,7 @@ public void applyPreferences() {
 
     } else {
       textarea.setBackground(Theme.getColor("editor.bgcolor"));
-      textarea.setHighlightCurrentLine(PreferencesData.getBoolean("editor.linehighlight"));
+      textarea.setHighlightCurrentLine(Theme.getBoolean("editor.linehighlight"));
       textarea.setEditable(true);
     }
 

File: app/src/cc/arduino/contributions/packages/ui/ContributedPlatformTableCell.java
Patch:
@@ -368,7 +368,9 @@ private Component getUpdatedCellComponent(Object value, boolean isSelected, int
     for (ContributedBoard board : selected.getBoards()) {
       desc += board.getName() + ", ";
     }
-    desc = desc.substring(0, desc.lastIndexOf(',')) + ".<br />";
+    if (desc.lastIndexOf(',') != -1) {
+      desc = desc.substring(0, desc.lastIndexOf(',')) + ".<br />";
+    }
 
     ContributedHelp help = null;
     if (selected.getHelp() != null) {

File: arduino-core/src/processing/app/debug/Compiler.java
Patch:
@@ -29,6 +29,7 @@
 import java.nio.file.Files;
 import java.nio.file.Path;
 import java.nio.file.Paths;
+import java.nio.file.StandardCopyOption;
 import java.util.*;
 import java.util.stream.Stream;
 
@@ -1416,11 +1417,10 @@ private void copyAdditionalFilesToBuildFolderSavingOriginalFolderStructure(Sketc
       throw new RunnerException(e);
     }
     otherFilesStream.map((path) -> new Pair<>(path, Paths.get(buildPath, sketchPath.relativize(path).toString())))
-      .filter((pair) -> !Files.exists(pair.value))
       .forEach((pair) -> {
         try {
           Files.createDirectories(pair.value.getParent());
-          Files.copy(pair.key, pair.value);
+          Files.copy(pair.key, pair.value, StandardCopyOption.REPLACE_EXISTING);
         } catch (IOException e) {
           e.printStackTrace();
           throw new RuntimeException(I18n.format(_("Problem moving {0} to the build folder"), sketchPath.relativize(pair.key).toString()));

File: app/src/processing/app/Base.java
Patch:
@@ -1924,8 +1924,7 @@ static public void setIcon(Frame frame) {
     
     // don't use the low-res icon on Linux
     if (OSUtils.isLinux()){
-      String current = System.getProperty("user.dir");
-      Image image = Toolkit.getDefaultToolkit().createImage(current + "/lib/arduino.png");
+      Image image = Toolkit.getDefaultToolkit().createImage(BaseNoGui.getContentFile("/lib/arduino.png").getAbsolutePath());
       frame.setIconImage(image);
       return;
     }

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -40,6 +40,8 @@ public abstract class AbstractMonitor extends JFrame implements ActionListener {
   private Timer updateTimer;
 
   private BoardPort boardPort;
+  
+  protected String[] serialRateStrings = {"300", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "74880", "115200", "230400", "250000"};
 
   public AbstractMonitor(BoardPort boardPort) {
     super(boardPort.getLabel());

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -962,7 +962,7 @@ static public void populateImportToLibraryTable() {
     }
   }
 
-  static public void initParameters(String args[]) {
+  static public void initParameters(String args[]) throws IOException {
     String preferencesFile = null;
 
     // Do a first pass over the commandline arguments, the rest of them

File: arduino-core/src/processing/app/helpers/CommandlineParser.java
Patch:
@@ -244,7 +244,7 @@ private void processBoardArgument(String selectBoard) {
     }
 
     TargetBoard targetBoard = targetPlatform.getBoard(split[2]);
-    if (targetBoard == null) {
+    if (targetBoard == null || !targetBoard.getId().equals(split[2])) {
       BaseNoGui.showError(null, I18n.format(_("{0}: Unknown board"), split[2]), 3);
     }
 

File: arduino-core/src/processing/app/windows/Platform.java
Patch:
@@ -126,7 +126,7 @@ public void openURL(String url) throws Exception {
       // open dos prompt, give it 'start' command, which will
       // open the url properly. start by itself won't work since
       // it appears to need cmd
-      Runtime.getRuntime().exec("cmd /c start " + url);
+      Runtime.getRuntime().exec("cmd /c start \"\" \"" + url + "\"");
     } else {
       // just launching the .html file via the shell works
       // but make sure to chmod +x the .html files first

File: app/src/processing/app/Editor.java
Patch:
@@ -137,7 +137,7 @@ public boolean apply(Sketch sketch) {
 
   private static JMenu portMenu;
 
-  static AbstractMonitor serialMonitor;
+  static volatile AbstractMonitor serialMonitor;
 
   final EditorHeader header;
   EditorStatus status;
@@ -2487,6 +2487,7 @@ public void handleSerial() {
       // The serial monitor already exists
 
       if (serialMonitor.isClosed()) {
+        serialMonitor.dispose();
         // If it's closed, clear the refrence to the existing
         // monitor and create a new one
         serialMonitor = null;

File: app/src/processing/app/syntax/SketchTextArea.java
Patch:
@@ -125,6 +125,7 @@ private void setTheme(String name) throws IOException {
     setSyntaxTheme(TokenTypes.COMMENT_EOL, "comment1");
     setSyntaxTheme(TokenTypes.COMMENT_KEYWORD, "comment1");
     setSyntaxTheme(TokenTypes.COMMENT_MARKUP, "comment1");
+    setSyntaxTheme(TokenTypes.COMMENT_MULTILINE, "comment2");
     setSyntaxTheme(TokenTypes.LITERAL_BOOLEAN, "literal_boolean");
     setSyntaxTheme(TokenTypes.LITERAL_CHAR, "literal_char");
     setSyntaxTheme(TokenTypes.LITERAL_STRING_DOUBLE_QUOTE, "literal_string_double_quote");

File: app/src/processing/app/Sketch.java
Patch:
@@ -204,7 +204,7 @@ protected void nameCode(String newName) {
     // (osx is case insensitive but preserving, windows insensitive,
     // *nix is sensitive and preserving.. argh)
     if (renamingCode) {
-      if (newName.equalsIgnoreCase(current.getCode().getFileName())) {
+      if (newName.equalsIgnoreCase(current.getCode().getFileName()) && OSUtils.isWindows()) {
         // exit quietly for the 'rename' case.
         // if it's a 'new' then an error will occur down below
         return;
@@ -256,7 +256,7 @@ protected void nameCode(String newName) {
     // extensions, so compare the full names (including extensions).  This
     // might cause problems: http://dev.processing.org/bugs/show_bug.cgi?id=543
     for (SketchCode c : data.getCodes()) {
-      if (newName.equalsIgnoreCase(c.getFileName())) {
+      if (newName.equalsIgnoreCase(c.getFileName()) && OSUtils.isWindows()) {
         Base.showMessage(_("Nope"),
                          I18n.format(
 			   _("A file named \"{0}\" already exists in \"{1}\""),

File: arduino-core/src/processing/app/debug/Compiler.java
Patch:
@@ -1203,7 +1203,7 @@ private File mergeSketchWithBootloaderIfAppropriate(String className, Preference
       bootloaderNoBlink = prefs.get("bootloader.file");
     }
 
-    File bootloader = new File(new File(prefs.get("build.platform.path"), "bootloaders"), bootloaderNoBlink);
+    File bootloader = new File(new File(prefs.get("runtime.platform.path"), "bootloaders"), bootloaderNoBlink);
     if (!bootloader.exists()) {
       System.err.println(I18n.format(_("Bootloader file specified but missing: {0}"), bootloader));
       return null;

File: arduino-core/src/processing/app/windows/Platform.java
Patch:
@@ -134,7 +134,7 @@ public void openURL(String url) throws Exception {
       // open dos prompt, give it 'start' command, which will
       // open the url properly. start by itself won't work since
       // it appears to need cmd
-      Runtime.getRuntime().exec("cmd /c start " + url);
+      Runtime.getRuntime().exec("cmd /c start \"\" \"" + url + "\"");
     } else {
       // just launching the .html file via the shell works
       // but make sure to chmod +x the .html files first

File: app/src/processing/app/Sketch.java
Patch:
@@ -944,6 +944,9 @@ public void importLibrary(File jarPath) throws IOException {
     ensureExistence();
 
     String list[] = Base.headerListFromIncludePath(jarPath);
+    if (list == null || list.length == 0) {
+      return;
+    }
 
     // import statements into the main sketch file (code[0])
     // if the current code is a .java file, insert into current

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -140,7 +140,7 @@ public void actionPerformed(ActionEvent event) {
     }
     lineEndings.setMaximumSize(lineEndings.getMinimumSize());
 
-    String[] serialRateStrings = {"300", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200", "230400", "250000"};
+    String[] serialRateStrings = {"300", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "74880", "115200", "230400", "250000"};
 
     serialRates = new JComboBox();
     for (String rate : serialRateStrings) {

File: app/src/cc/arduino/contributions/libraries/ui/LibraryManagerUI.java
Patch:
@@ -259,7 +259,7 @@ public void onRemovePressed(final ContributedLibrary lib) {
     boolean managedByIndex = indexer.getIndex().getLibraries().contains(lib);
 
     if (!managedByIndex) {
-      int chosenOption = JOptionPane.showConfirmDialog(this, _("This library is not listed on Library Manager. You won't be able to resinstall it from here.\nAre you sure you want to delete it?"), _("Please confirm library deletion"), JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
+      int chosenOption = JOptionPane.showConfirmDialog(this, _("This library is not listed on Library Manager. You won't be able to reinstall it from here.\nAre you sure you want to delete it?"), _("Please confirm library deletion"), JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
       if (chosenOption != JOptionPane.YES_OPTION) {
         return;
       }

File: app/src/processing/app/syntax/SketchTextArea.java
Patch:
@@ -126,6 +126,7 @@ public void setTheme(String name) throws IOException {
     setSyntaxTheme(TokenTypes.COMMENT_EOL, "comment1");
     setSyntaxTheme(TokenTypes.COMMENT_KEYWORD, "comment1");
     setSyntaxTheme(TokenTypes.COMMENT_MARKUP, "comment1");
+    setSyntaxTheme(TokenTypes.LITERAL_BOOLEAN, "literal_boolean");
     setSyntaxTheme(TokenTypes.LITERAL_CHAR, "literal_char");
     setSyntaxTheme(TokenTypes.LITERAL_STRING_DOUBLE_QUOTE, "literal_string_double_quote");
   }

File: arduino-core/src/cc/arduino/utils/network/FileDownloader.java
Patch:
@@ -157,7 +157,7 @@ public void download() throws InterruptedException {
       }
 
       if (resp < 200 || resp >= 300) {
-        throw new IOException("Recevied invalid http status code from server: " + resp);
+        throw new IOException("Received invalid http status code from server: " + resp);
       }
 
       // Check for valid content length.

File: arduino-core/src/processing/app/debug/Compiler.java
Patch:
@@ -152,7 +152,7 @@ static public boolean upload(SketchData data, Uploader uploader, String buildPat
 
     if (uploader.requiresAuthorization() && !PreferencesData.has(uploader.getAuthorizationKey())) {
       BaseNoGui.showError(_("Authorization required"),
-                          _("No athorization data found"), null);
+                          _("No authorization data found"), null);
     }
 
     boolean useNewWarningsAccumulator = false;

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -826,7 +826,7 @@ static public void onBoardOrPortChange() {
     populateImportToLibraryTable();
   }
 
-  static protected void loadContributedHardware(ContributionsIndexer indexer) throws TargetPlatformException {
+  static protected void loadContributedHardware(ContributionsIndexer indexer) {
     for (TargetPackage pack : indexer.createTargetPackages()) {
       packages.put(pack.getId(), pack);
     }

File: app/src/processing/app/Editor.java
Patch:
@@ -1006,7 +1006,7 @@ private SketchTextArea createTextArea() throws IOException {
       @Override
       public void hyperlinkUpdate(HyperlinkEvent hyperlinkEvent) {
         try {
-          platform.openURL(hyperlinkEvent.getURL().toExternalForm());
+          platform.openURL(sketch.getFolder(), hyperlinkEvent.getURL().toExternalForm());
         } catch (Exception e) {
           Base.showWarning(e.getMessage(), e.getMessage(), e);
         }

File: arduino-core/src/processing/app/windows/Platform.java
Patch:
@@ -130,7 +130,7 @@ public void openURL(String url) throws Exception {
     // "Access is denied" in both cygwin and the "dos" prompt.
     //Runtime.getRuntime().exec("cmd /c " + currentDir + "\\reference\\" +
     //                    referenceFile + ".html");
-    if (url.startsWith("http")) {
+    if (url.startsWith("http") || url.startsWith("file:")) {
       // open dos prompt, give it 'start' command, which will
       // open the url properly. start by itself won't work since
       // it appears to need cmd

File: app/src/processing/app/Base.java
Patch:
@@ -92,6 +92,7 @@ public boolean apply(UserLibrary library) {
   public static volatile Base INSTANCE;
 
   public static SplashScreenHelper splashScreenHelper = new SplashScreenHelper(SplashScreen.getSplashScreen());
+  public static Map<String, Object> FIND_DIALOG_STATE = new HashMap<String, Object>();
 
   // set to true after the first time the menu is built.
   // so that the errors while building don't show up again.

File: app/src/processing/app/Editor.java
Patch:
@@ -25,6 +25,7 @@
 import cc.arduino.packages.MonitorFactory;
 
 import cc.arduino.view.StubMenuListener;
+import cc.arduino.view.findreplace.FindReplace;
 import com.google.common.base.Predicate;
 import com.jcraft.jsch.JSchException;
 import jssc.SerialPortException;
@@ -1446,7 +1447,7 @@ public void actionPerformed(ActionEvent e) {
     findItem.addActionListener(new ActionListener() {
       public void actionPerformed(ActionEvent e) {
         if (find == null) {
-          find = new FindReplace(Editor.this);
+          find = new FindReplace(Editor.this, Base.FIND_DIALOG_STATE);
         }
         if (!OSUtils.isMacOS()) {
           find.setFindText(getSelectedText());
@@ -1482,7 +1483,7 @@ public void actionPerformed(ActionEvent e) {
       useSelectionForFindItem.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
           if (find == null) {
-            find = new FindReplace(Editor.this);
+            find = new FindReplace(Editor.this, Base.FIND_DIALOG_STATE);
           }
           find.setFindText(getSelectedText());
         }

File: arduino-core/src/processing/app/windows/RegQueryParser.java
Patch:
@@ -15,16 +15,16 @@ public RegQueryParser(String regQueryOutput) {
   }
 
   private void parse(String regQueryOutput) {
-    List<String> rows = Arrays.asList(regQueryOutput.replace("\r", "\n").replace("\n\n", "\n").split("\n"));
+    List<String> rows = Arrays.asList(regQueryOutput.replace("    ", "\t").replace("\r", "\n").replace("\n\n", "\n").split("\n"));
 
     String row = Iterables.find(rows, new Predicate<String>() {
       @Override
       public boolean apply(String input) {
-        return input.startsWith("    ");
+        return input.startsWith("\t");
       }
     });
 
-    String[] cols = row.split("    ");
+    String[] cols = row.split("\t");
     assert cols.length == 4;
     this.valueOfKey = cols[3];
   }

File: app/src/processing/app/Editor.java
Patch:
@@ -2455,6 +2455,8 @@ public boolean handleSaveAs() {
     statusNotice(_("Saving..."));
     try {
       if (sketch.saveAs()) {
+        base.storeRecentSketches(sketch);
+        base.rebuildRecentSketchesMenuItems();
         statusNotice(_("Done Saving."));
         // Disabling this for 0125, instead rebuild the menu inside
         // the Save As method of the Sketch object, since that's the

File: app/src/processing/app/Base.java
Patch:
@@ -274,6 +274,8 @@ public Base(String[] args) throws Exception {
     BaseNoGui.notifier = new GUIUserNotifier(this);
     this.recentSketchesMenuItems = new LinkedList<JMenuItem>();
 
+    BaseNoGui.checkInstallationFolder();
+
     String sketchbookPath = BaseNoGui.getSketchbookPath();
 
     // If no path is set, get the default sketchbook folder for this platform

File: app/src/processing/app/helpers/GUIUserNotifier.java
Patch:
@@ -48,7 +48,7 @@ public void showMessage(String title, String message) {
   public void showWarning(String title, String message, Exception e) {
     if (title == null) title = _("Warning");
 
-    JOptionPane.showMessageDialog(new Frame(), message, title,
+    JOptionPane.showMessageDialog(base.getActiveEditor(), message, title,
                                   JOptionPane.WARNING_MESSAGE);
 
     if (e != null) e.printStackTrace();

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -99,8 +99,8 @@ protected void message(char buff[], int n) {
   }
 
   public void close() throws Exception {
+    super.close();
     if (serial != null) {
-      super.close();
       int[] location = getPlacement();
       String locationStr = PApplet.join(PApplet.str(location), ",");
       PreferencesData.set("last.serial.location", locationStr);

File: app/src/processing/app/Base.java
Patch:
@@ -1173,8 +1173,9 @@ public void onBoardOrPortChange() {
     BaseNoGui.onBoardOrPortChange();
 
     // Update editors status bar
-    for (Editor editor : editors)
+    for (Editor editor : editors) {
       editor.onBoardOrPortChange();
+    }
   }
 
   private void openManageLibrariesDialog() {

File: app/src/processing/app/Editor.java
Patch:
@@ -2519,6 +2519,7 @@ class DefaultExportHandler implements Runnable {
     public void run() {
 
       try {
+        textarea.removeAllLineHighlights();
         if (serialMonitor != null) {
           serialMonitor.suspend();
         }

File: app/src/cc/arduino/view/SplashScreenHelper.java
Patch:
@@ -90,7 +90,7 @@ public void close() {
   }
 
   private void printText(String str) {
-    System.out.println(str);
+    System.err.println(str);
   }
 
 }

File: arduino-core/src/processing/app/debug/LegacyTargetBoard.java
Patch:
@@ -58,7 +58,7 @@ public LegacyTargetBoard(String _id, PreferencesMap _prefs,
       String board = containerPlatform.getId() + "_" + id;
       board = board.toUpperCase();
       prefs.put("build.board", board);
-      System.out
+      System.err
           .println(format(_("Board {0}:{1}:{2} doesn''t define a ''build.board'' preference. Auto-set to: {3}"),
                           containerPlatform.getContainerPackage().getId(),
                           containerPlatform.getId(), id, board));

File: arduino-core/src/processing/app/debug/LegacyTargetPackage.java
Patch:
@@ -51,7 +51,7 @@ public LegacyTargetPackage(String _id, File _folder) throws TargetPlatformExcept
         TargetPlatform platform = new LegacyTargetPlatform(arch, subFolder, this);
         platforms.put(arch, platform);
       } catch (TargetPlatformException e) {
-        System.out.println(e.getMessage());
+        System.err.println(e.getMessage());
       }
     }
 

File: arduino-core/src/processing/app/helpers/CommandlineParser.java
Patch:
@@ -73,10 +73,9 @@ private void parseArguments(String[] args) {
         }
         if (a == ACTION.GET_PREF) {
           i++;
-          if (i >= args.length) {
-            BaseNoGui.showError(null, I18n.format(_("Argument required for {0}"), a.value), 3);
+          if (i < args.length) {
+            getPref = args[i];
           }
-          getPref = args[i];
         }
         if (a == ACTION.INSTALL_BOARD) {
           i++;

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -621,10 +621,10 @@ static public void initPackages() throws Exception {
     }
     indexer.syncWithFilesystem(getHardwareFolder());
 
-    packages = new HashMap<String, TargetPackage>();
+    packages = new LinkedHashMap<String, TargetPackage>();
     loadHardware(getHardwareFolder());
-    loadHardware(getSketchbookHardwareFolder());
     loadContributedHardware(indexer);
+    loadHardware(getSketchbookHardwareFolder());
     createToolPreferences(indexer);
 
     librariesIndexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder(), indexer);

File: arduino-core/src/cc/arduino/contributions/packages/ContributedPlatform.java
Patch:
@@ -93,6 +93,6 @@ public void setParentPackage(ContributedPackage parentPackage) {
 
   @Override
   public String toString() {
-    return getParsedVersion();
+    return getName() + " " + getParsedVersion();
   }
 }

File: arduino-core/src/cc/arduino/contributions/packages/ContributedToolReference.java
Patch:
@@ -40,6 +40,7 @@ public abstract class ContributedToolReference {
 
   public ContributedTool resolve(Collection<ContributedPackage> packages) {
     for (ContributedPackage pack : packages) {
+      assert pack.getTools() != null;
       for (ContributedTool tool : pack.getTools())
         if (tool.getName().equals(getName()) &&
             tool.getVersion().equals(getVersion()) &&
@@ -54,4 +55,4 @@ public String toString() {
     return "name=" + getName() + " version=" + getVersion() + " packager=" +
         getPackager();
   }
-}
\ No newline at end of file
+}

File: app/src/processing/app/syntax/SketchTextAreaDefaultInputMap.java
Patch:
@@ -39,6 +39,9 @@ public SketchTextAreaDefaultInputMap() {
       put(KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, defaultModifier), DefaultEditorKit.endAction);
 
       remove(KeyStroke.getKeyStroke(KeyEvent.VK_J, defaultModifier));
+
+      put(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, defaultModifier), DefaultEditorKit.insertTabAction);
+      put(KeyStroke.getKeyStroke(KeyEvent.VK_CLOSE_BRACKET, defaultModifier), RSyntaxTextAreaEditorKit.rstaDecreaseIndentAction);
     }
 
     put(KeyStroke.getKeyStroke(KeyEvent.VK_DIVIDE, defaultModifier), RSyntaxTextAreaEditorKit.rstaToggleCommentAction);

File: app/src/processing/app/syntax/SketchTextAreaDefaultInputMap.java
Patch:
@@ -1,6 +1,7 @@
 package processing.app.syntax;
 
 import org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaDefaultInputMap;
+import org.fife.ui.rsyntaxtextarea.RSyntaxTextAreaEditorKit;
 import org.fife.ui.rtextarea.RTextArea;
 import org.fife.ui.rtextarea.RTextAreaEditorKit;
 import processing.app.PreferencesData;
@@ -39,5 +40,7 @@ public SketchTextAreaDefaultInputMap() {
 
       remove(KeyStroke.getKeyStroke(KeyEvent.VK_J, defaultModifier));
     }
+
+    put(KeyStroke.getKeyStroke(KeyEvent.VK_DIVIDE, defaultModifier), RSyntaxTextAreaEditorKit.rstaToggleCommentAction);
   }
 }

File: app/src/processing/app/Sketch.java
Patch:
@@ -836,7 +836,7 @@ public boolean addFile(File sourceFile) {
       destFile = new File(data.getCodeFolder(), filename);
 
     } else {
-      for (String extension : data.getExtensions()) {
+      for (String extension : SketchData.EXTENSIONS) {
         String lower = filename.toLowerCase();
         if (lower.endsWith("." + extension)) {
           destFile = new File(data.getFolder(), filename);
@@ -1345,7 +1345,7 @@ public boolean isDefaultExtension(String what) {
    * extensions.
    */
   public boolean validExtension(String what) {
-    return data.getExtensions().contains(what);
+    return SketchData.EXTENSIONS.contains(what);
   }
 
 

File: arduino-core/src/processing/app/debug/Compiler.java
Patch:
@@ -1201,7 +1201,7 @@ public void preprocess(String buildPath, PdePreprocessor preprocessor) throws Ru
     StringBuffer bigCode = new StringBuffer();
     int bigCount = 0;
     for (SketchCode sc : sketch.getCodes()) {
-      if (sc.isExtension("ino") || sc.isExtension("pde")) {
+      if (sc.isExtension(SketchData.SKETCH_EXTENSIONS)) {
         sc.setPreprocOffset(bigCount);
         // These #line directives help the compiler report errors with
         // correct the filename and line number (issue 281 & 907)
@@ -1272,7 +1272,7 @@ public void preprocess(String buildPath, PdePreprocessor preprocessor) throws Ru
     // 3. then loop over the code[] and save each .java file
 
     for (SketchCode sc : sketch.getCodes()) {
-      if (sc.isExtension("c") || sc.isExtension("cpp") || sc.isExtension("h")) {
+      if (sc.isExtension(SketchData.OTHER_ALLOWED_EXTENSIONS)) {
         // no pre-processing services necessary for java files
         // just write the the contents of 'program' to a .java file
         // into the build directory. uses byte stream and reader/writer

File: app/src/processing/app/macosx/ThinkDifferent.java
Patch:
@@ -83,7 +83,7 @@ public void openFiles(final AppEvent.OpenFilesEvent openFilesEvent) {
       @Override
       public void handleQuitRequestWith(AppEvent.QuitEvent quitEvent, QuitResponse quitResponse) {
         if (waitForBase()) {
-          if (Base.INSTANCE.handleClose(Base.INSTANCE.getActiveEditor())) {
+          if (Base.INSTANCE.handleQuit()) {
             quitResponse.performQuit();
           } else {
             quitResponse.cancelQuit();
@@ -113,4 +113,4 @@ private static void sleep(int millis) {
     }
   }
 
-}
\ No newline at end of file
+}

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -138,7 +138,7 @@ public void actionPerformed(ActionEvent event) {
 
     String[] serialRateStrings = {
             "300", "1200", "2400", "4800", "9600",
-            "19200", "38400", "57600", "115200"
+            "19200", "38400", "57600", "115200", "230400", "250000"
     };
 
     serialRates = new JComboBox();

File: app/src/processing/app/UpdateCheck.java
Patch:
@@ -22,6 +22,7 @@
 
 package processing.app;
 
+import org.apache.commons.compress.utils.IOUtils;
 import processing.app.legacy.PApplet;
 
 import javax.swing.*;
@@ -133,9 +134,7 @@ protected int readInt(String filename) throws IOException {
       reader = new BufferedReader(new InputStreamReader(url.openStream()));
       return Integer.parseInt(reader.readLine());
     } finally {
-      if (reader != null) {
-        reader.close();
-      }
+      IOUtils.closeQuietly(reader);
     }
   }
 }

File: app/src/processing/app/syntax/PdeKeywords.java
Patch:
@@ -25,6 +25,7 @@
 package processing.app.syntax;
 
 import cc.arduino.contributions.libraries.ContributedLibrary;
+import org.apache.commons.compress.utils.IOUtils;
 import org.fife.ui.rsyntaxtextarea.TokenMap;
 import org.fife.ui.rsyntaxtextarea.TokenTypes;
 import processing.app.Base;
@@ -126,9 +127,7 @@ private void parseKeywordsTxt(File input) throws Exception {
 
       fillMissingTokenType();
     } finally {
-      if (reader != null) {
-        reader.close();
-      }
+      IOUtils.closeQuietly(reader);
     }
 
   }

File: app/src/processing/app/syntax/SketchTextArea.java
Patch:
@@ -30,6 +30,7 @@
 
 package processing.app.syntax;
 
+import org.apache.commons.compress.utils.IOUtils;
 import org.fife.ui.rsyntaxtextarea.*;
 import org.fife.ui.rsyntaxtextarea.Theme;
 import org.fife.ui.rsyntaxtextarea.Token;
@@ -102,9 +103,7 @@ public void setTheme(String name) throws IOException {
       Theme theme = Theme.load(defaultXmlInputStream);
       theme.apply(this);
     } finally {
-      if (defaultXmlInputStream != null) {
-        defaultXmlInputStream.close();
-      }
+      IOUtils.closeQuietly(defaultXmlInputStream);
     }
 
     setForeground(processing.app.Theme.getColor("editor.fgcolor"));

File: app/test/processing/app/I18NTest.java
Patch:
@@ -29,6 +29,7 @@
 
 package processing.app;
 
+import org.apache.commons.compress.utils.IOUtils;
 import org.junit.Ignore;
 import org.junit.Test;
 
@@ -63,9 +64,7 @@ private Properties loadProperties(File file) throws IOException {
       is = new FileInputStream(file);
       properties.load(is);
     } finally {
-      if (is != null) {
-        is.close();
-      }
+      IOUtils.closeQuietly(is);
     }
     return properties;
   }

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndexer.java
Patch:
@@ -37,6 +37,7 @@
 import com.fasterxml.jackson.module.mrbean.MrBeanModule;
 import com.google.common.base.Function;
 import com.google.common.collect.FluentIterable;
+import org.apache.commons.compress.utils.IOUtils;
 import processing.app.BaseNoGui;
 import processing.app.I18n;
 import processing.app.helpers.FileUtils;
@@ -96,9 +97,7 @@ private void parseIndex(File indexFile) throws IOException {
         }
       }
     } finally {
-      if (indexIn != null) {
-        indexIn.close();
-      }
+      IOUtils.closeQuietly(indexIn);
     }
   }
 

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -44,6 +44,7 @@
 import com.google.common.collect.ImmutableListMultimap;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Multimaps;
+import org.apache.commons.compress.utils.IOUtils;
 import processing.app.BaseNoGui;
 import processing.app.debug.TargetPackage;
 import processing.app.debug.TargetPlatform;
@@ -172,9 +173,7 @@ private ContributionsIndex parseIndex(File indexFile) throws IOException {
       mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
       return mapper.readValue(inputStream, ContributionsIndex.class);
     } finally {
-      if (inputStream != null) {
-        inputStream.close();
-      }
+      IOUtils.closeQuietly(inputStream);
     }
   }
 

File: arduino-core/src/cc/arduino/utils/FileHash.java
Patch:
@@ -28,6 +28,8 @@
  */
 package cc.arduino.utils;
 
+import org.apache.commons.compress.utils.IOUtils;
+
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.IOException;
@@ -68,9 +70,7 @@ public static String hash(File file, String algorithm) throws IOException, NoSuc
       }
       return algorithm + ":" + res;
     } finally {
-      if (in != null) {
-        in.close();
-      }
+      IOUtils.closeQuietly(in);
     }
   }
 }

File: arduino-core/src/processing/app/PreferencesData.java
Patch:
@@ -13,6 +13,7 @@
 import java.util.Iterator;
 import java.util.MissingResourceException;
 
+import org.apache.commons.compress.utils.IOUtils;
 import processing.app.helpers.PreferencesHelper;
 import processing.app.helpers.PreferencesMap;
 import processing.app.legacy.PApplet;
@@ -124,9 +125,7 @@ static protected void save() {
 
       writer.flush();
     } finally {
-      if (writer != null) {
-        writer.close();
-      }
+      IOUtils.closeQuietly(writer);
     }
 
     try {

File: arduino-core/src/processing/app/helpers/PreferencesMap.java
Patch:
@@ -21,6 +21,7 @@
  */
 package processing.app.helpers;
 
+import org.apache.commons.compress.utils.IOUtils;
 import processing.app.legacy.PApplet;
 
 import java.io.*;
@@ -72,9 +73,7 @@ public void load(File file) throws IOException {
       fileInputStream = new FileInputStream(file);
       load(fileInputStream);
     } finally {
-      if (fileInputStream != null) {
-        fileInputStream.close();
-      }
+      IOUtils.closeQuietly(fileInputStream);
     }
   }
 

File: app/src/processing/app/Editor.java
Patch:
@@ -1286,7 +1286,7 @@ public void actionPerformed(ActionEvent e) {
     item = new JMenuItem(_("Visit Arduino.cc"));
     item.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
-          Base.openURL(_("http://arduino.cc/"));
+          Base.openURL(_("http://www.arduino.cc/"));
         }
       });
     menu.add(item);

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -320,7 +320,7 @@ static public File getSketchbookLibrariesFolder() {
         File readme = new File(libdir, "readme.txt");
         FileWriter freadme = new FileWriter(readme);
         freadme.write(_("For information on installing libraries, see: " +
-                        "http://arduino.cc/en/Guide/Libraries\n"));
+                        "http://www.arduino.cc/en/Guide/Libraries\n"));
         freadme.close();
       } catch (Exception e) {
       }

File: app/src/processing/app/Base.java
Patch:
@@ -146,6 +146,8 @@ static public void guardedMain(String args[]) throws Exception {
 
     initPlatform();
 
+    getPlatform().init();
+
     BaseNoGui.initPortableFolder();
 
     BaseNoGui.initParameters(args);
@@ -284,8 +286,6 @@ static public File absoluteFile(String path) {
   }
 
   public Base(String[] args) throws Exception {
-    getPlatform().init();
-
     String sketchbookPath = BaseNoGui.getSketchbookPath();
 
     // If no path is set, get the default sketchbook folder for this platform

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -425,8 +425,6 @@ static public String[] headerListFromIncludePath(File path) throws IOException {
   }
 
   static public void init(String[] args) throws Exception {
-    getPlatform().init();
-  
     String sketchbookPath = getSketchbookPath();
   
     // If no path is set, get the default sketchbook folder for this platform
@@ -740,7 +738,9 @@ static public void main(String args[]) throws Exception {
     Runtime.getRuntime().addShutdownHook(new Thread(DeleteFilesOnShutdown.INSTANCE));
 
     initPlatform();
-    
+
+    getPlatform().init();
+
     initPortableFolder();
     
     initParameters(args);

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -57,6 +57,8 @@ public Platform() {
   }
 
   public void init() throws IOException {
+    super.init();
+
     System.setProperty("apple.laf.useScreenMenuBar", "true");
 
     discoverRealOsArch();

File: app/src/processing/app/tools/Archiver.java
Patch:
@@ -150,6 +150,9 @@ public void run() {
   public void buildZip(File dir, String sofar,
                        ZipOutputStream zos) throws IOException {
     String files[] = dir.list();
+    if (files == null) {
+      throw new IOException("Unable to list files from " + dir);
+    }
     for (int i = 0; i < files.length; i++) {
       if (files[i].equals(".") ||
           files[i].equals("..")) continue;

File: arduino-core/src/processing/app/SketchData.java
Patch:
@@ -95,6 +95,9 @@ protected void load() throws IOException {
 
     // get list of files in the sketch folder
     String list[] = folder.list();
+    if (list == null) {
+      throw new IOException("Unable to list files from " + folder);
+    }
 
     // reset these because load() may be called after an
     // external editor event. (fix for 0099)

File: app/src/processing/app/Editor.java
Patch:
@@ -801,7 +801,7 @@ public void menuSelected(MenuEvent e) {
             if (sel == null) {
               if (!name.equals(basename)) menu.setText(basename);
             } else {
-              if (sel.length() > 17) sel = sel.substring(0, 16) + "...";
+              if (sel.length() > 50) sel = sel.substring(0, 50) + "...";
               String newname = basename + ": \"" + sel + "\"";
               if (!name.equals(newname)) menu.setText(newname);
             }

File: app/src/processing/app/Base.java
Patch:
@@ -397,7 +397,7 @@ protected void onProgress(Progress progress) {
       System.exit(0);
 
     } else if (parser.isInstallLibrary()) {
-      LibrariesIndexer indexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder());
+      LibrariesIndexer indexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder(), new ContributionsIndexer(BaseNoGui.getSettingsFolder()));
       LibraryInstaller installer = new LibraryInstaller(indexer) {
         private String lastStatus = "";
 

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -630,7 +630,7 @@ static public void initPackages() throws Exception {
     loadContributedHardware(indexer);
     createToolPreferences(indexer);
 
-    librariesIndexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder());
+    librariesIndexer = new LibrariesIndexer(BaseNoGui.getSettingsFolder(), indexer);
     File librariesIndexFile = librariesIndexer.getIndexFile();
     if (!librariesIndexFile.isFile()) {
       File defaultLibraryJsonFile = new File(getContentFile("dist"), "library_index.json");

File: app/src/cc/arduino/view/SplashScreenHelper.java
Patch:
@@ -89,7 +89,7 @@ public void close() {
     splash.close();
   }
 
-  public void printText(String str) {
+  private void printText(String str) {
     System.out.println(str);
   }
 

File: app/src/cc/arduino/view/preferences/AdditionalBoardsManagerURLTextArea.java
Patch:
@@ -35,6 +35,7 @@
 import com.google.common.collect.FluentIterable;
 import processing.app.Base;
 
+import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.WindowEvent;
@@ -47,7 +48,7 @@ public class AdditionalBoardsManagerURLTextArea extends javax.swing.JDialog {
 
   private ActionListener onOkListener;
 
-  public AdditionalBoardsManagerURLTextArea(java.awt.Frame parent) {
+  public AdditionalBoardsManagerURLTextArea(Window parent) {
     super(parent);
     initComponents();
     setLocationRelativeTo(parent);

File: app/src/processing/app/Editor.java
Patch:
@@ -443,7 +443,7 @@ protected int[] getPlacement() {
    * the app is just starting up, or the user just finished messing
    * with things in the Preferences window.
    */
-  protected void applyPreferences() {
+  public void applyPreferences() {
 
     // apply the setting for 'use external editor'
     boolean external = PreferencesData.getBoolean("editor.external");

File: arduino-core/src/processing/app/packages/UserLibrary.java
Patch:
@@ -131,9 +131,9 @@ public static UserLibrary create(File libFolder) throws IOException {
     if (category == null)
       category = "Uncategorized";
     if (!CATEGORIES.contains(category)) {
-      category = "Uncategorized";
       System.out.println("WARNING: Category '" + category + "' in library " +
               properties.get("name") + " is not valid. Setting to 'Uncategorized'");
+      category = "Uncategorized";
     }
 
     String license = properties.get("license");

File: arduino-core/src/processing/app/packages/UserLibrary.java
Patch:
@@ -131,9 +131,9 @@ public static UserLibrary create(File libFolder) throws IOException {
     if (category == null)
       category = "Uncategorized";
     if (!CATEGORIES.contains(category)) {
-      category = "Uncategorized";
       System.out.println("WARNING: Category '" + category + "' in library " +
               properties.get("name") + " is not valid. Setting to 'Uncategorized'");
+      category = "Uncategorized";
     }
 
     String license = properties.get("license");

File: app/src/processing/app/Editor.java
Patch:
@@ -959,7 +959,7 @@ protected String findClassInZipFile(String base, File file) {
   protected SketchTextArea createTextArea() throws IOException {
     SketchTextArea textArea = new SketchTextArea(base.getPdeKeywords());
     textArea.requestFocusInWindow();
-    textArea.setMarkOccurrences(true);
+    textArea.setMarkOccurrences(PreferencesData.getBoolean("editor.advanced"));
     textArea.setMarginLineEnabled(false);
     textArea.setCodeFoldingEnabled(PreferencesData.getBoolean("editor.code_folding"));
     textArea.setAntiAliasingEnabled(PreferencesData.getBoolean("editor.antialias"));

File: app/test/processing/app/AbstractWithPreferencesTest.java
Patch:
@@ -38,6 +38,7 @@ public abstract class AbstractWithPreferencesTest {
   public void init() throws Exception {
     Runtime.getRuntime().addShutdownHook(new Thread(DeleteFilesOnShutdown.INSTANCE));
     Base.initPlatform();
+    Base.getPlatform().init();
     Preferences.init(null);
     Theme.init();
 

File: arduino-core/src/cc/arduino/contributions/packages/HostDependentDownloadableContribution.java
Patch:
@@ -41,7 +41,9 @@ public String toString() {
 
   public boolean isCompatible(Platform platform) {
     String osName = platform.getOsName();
+    assert osName != null;
     String osArch = platform.getOsArch();
+    assert osArch != null;
 
     String host = getHost();
 

File: app/src/processing/app/Editor.java
Patch:
@@ -1119,7 +1119,9 @@ public int compare(BoardPort o1, BoardPort o2) {
         } else {
           lastProtocolTranslated = port.getProtocol();
         }
-        serialMenu.add(new JMenuItem(_(lastProtocolTranslated)));
+        JMenuItem lastProtocolMenuItem = new JMenuItem(_(lastProtocolTranslated));
+        lastProtocolMenuItem.setEnabled(false);
+        serialMenu.add(lastProtocolMenuItem);
       }
       String address = port.getAddress();
       String label = port.getLabel();

File: app/src/processing/app/Editor.java
Patch:
@@ -961,7 +961,7 @@ protected SketchTextArea createTextArea() throws IOException {
     textArea.requestFocusInWindow();
     textArea.setMarkOccurrences(true);
     textArea.setMarginLineEnabled(false);
-    textArea.setCodeFoldingEnabled(PreferencesData.getBoolean("editor.codefolding"));
+    textArea.setCodeFoldingEnabled(PreferencesData.getBoolean("editor.code_folding"));
     textArea.setAntiAliasingEnabled(PreferencesData.getBoolean("editor.antialias"));
     textArea.setTabsEmulated(PreferencesData.getBoolean("editor.tabs.expand"));
     textArea.setTabSize(PreferencesData.getInteger("editor.tabs.size"));

File: app/src/processing/app/Editor.java
Patch:
@@ -452,9 +452,8 @@ protected void applyPreferences() {
     saveMenuItem.setEnabled(!external);
     saveAsMenuItem.setEnabled(!external);
 
-    scrollPane.setLineNumbersEnabled(PreferencesData.getBoolean("editor.linenumbers"));
-
     textarea.setCodeFoldingEnabled(PreferencesData.getBoolean("editor.code_folding"));
+    scrollPane.setLineNumbersEnabled(PreferencesData.getBoolean("editor.linenumbers"));
 
     if (external) {
       // disable line highlight and turn off the caret when disabling

File: app/src/cc/arduino/packages/formatter/AStyle.java
Patch:
@@ -92,8 +92,10 @@ public void run() {
     int line = getLineOfOffset(textArea);
     int lineOffset = getLineOffset(textArea, line);
 
+    editor.getTextArea().getUndoManager().beginInternalAtomicEdit();
     editor.setText(formattedText);
     editor.getSketch().setModified(true);
+    editor.getTextArea().getUndoManager().endInternalAtomicEdit();
 
     if (line != -1 && lineOffset != -1) {
       setCaretPosition(textArea, line, lineOffset);

File: app/test/processing/app/AbstractWithPreferencesTest.java
Patch:
@@ -41,6 +41,8 @@ public void init() throws Exception {
     Preferences.init(null);
     Theme.init();
 
+    BaseNoGui.initPackages();
+
     Base.untitledFolder = Base.createTempFolder("untitled");
     DeleteFilesOnShutdown.add(Base.untitledFolder);
   }

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -119,7 +119,7 @@ public void openURL(String url) throws Exception {
 
         // for Java 1.6, replacing with java.awt.Desktop.browse() 
         // and java.awt.Desktop.open()
-        if (url.startsWith("http://")) {  // browse to a location
+        if (url.startsWith("http")) {  // browse to a location
           Method browseMethod =
             desktopClass.getMethod("browse", new Class[] { URI.class });
           browseMethod.invoke(desktop, new Object[] { new URI(url) });

File: app/format/src/AutoFormat.java
Patch:
@@ -45,7 +45,7 @@ public AutoFormat(Editor editor) {
 
   public void show() {
     String originalText = editor.textarea.getText();
-    int indentSize = Preferences.getInteger("editor.tabs.size");
+    int indentSize = PreferencesData.getInteger("editor.tabs.size");
 
     //
 

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -68,7 +68,7 @@ public class EditorConsole extends JScrollPane {
   public EditorConsole(Editor _editor) {
     editor = _editor;
 
-    int maxLineCount = Preferences.getInteger("console.length");
+    int maxLineCount = PreferencesData.getInteger("console.length");
 
     consoleDoc = new BufferedStyledDocument(4000, maxLineCount);
     consoleTextPane = new JTextPane(consoleDoc);
@@ -84,7 +84,7 @@ public EditorConsole(Editor _editor) {
     Color fgColorOut = Theme.getColor("console.output.color");
     Color fgColorErr = Theme.getColor("console.error.color");
     Font consoleFont = Theme.getFont("console.font");
-    Font editorFont = Preferences.getFont("editor.font");
+    Font editorFont = PreferencesData.getFont("editor.font");
     Font font = new Font(consoleFont.getName(), consoleFont.getStyle(), editorFont.getSize());
 
     stdStyle = new SimpleAttributeSet();
@@ -112,7 +112,7 @@ public EditorConsole(Editor _editor) {
     // and size window accordingly
     FontMetrics metrics = getFontMetrics(font);
     int height = metrics.getAscent() + metrics.getDescent();
-    int lines = Preferences.getInteger("console.lines");
+    int lines = PreferencesData.getInteger("console.lines");
     int sizeFudge = 6; //10; // unclear why this is necessary, but it is
     setPreferredSize(new Dimension(1024, (height * lines) + sizeFudge));
     setMinimumSize(new Dimension(1024, (height * 4) + sizeFudge));

File: app/src/processing/app/EditorConsoleStream.java
Patch:
@@ -37,14 +37,14 @@ public static void init() {
       tempFolder = Base.createTempFolder("console");
       DeleteFilesOnShutdown.add(tempFolder);
       try {
-        String outFileName = Preferences.get("console.output.file");
+        String outFileName = PreferencesData.get("console.output.file");
         if (outFileName != null) {
           outFile = new File(tempFolder, outFileName);
           DeleteFilesOnShutdown.add(outFile);
           stdoutFile = new FileOutputStream(outFile);
         }
 
-        String errFileName = Preferences.get("console.error.file");
+        String errFileName = PreferencesData.get("console.error.file");
         if (errFileName != null) {
           errFile = new File(tempFolder, errFileName);
           DeleteFilesOnShutdown.add(errFile);
@@ -58,7 +58,7 @@ public static void init() {
       consoleOut = new PrintStream(new EditorConsoleStream(false));
       consoleErr = new PrintStream(new EditorConsoleStream(true));
 
-      if (Preferences.getBoolean("console")) {
+      if (PreferencesData.getBoolean("console")) {
         try {
           System.setOut(consoleOut);
           System.setErr(consoleErr);

File: app/src/processing/app/EditorLineStatus.java
Patch:
@@ -101,7 +101,7 @@ public void paintComponent(Graphics g) {
         setBoardName(boardPreferences.get("name"));
       else
         setBoardName("-");
-      setSerialPort(Preferences.get("serial.port"));
+      setSerialPort(PreferencesData.get("serial.port"));
     }
     g.setColor(background);
     Dimension size = getSize();

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -219,7 +219,7 @@ public void progressNotice(String message) {
   
   public void unprogress()
   {
-    if (Preferences.getBoolean("editor.beep.compile")) {
+    if (PreferencesData.getBoolean("editor.beep.compile")) {
       Toolkit.getDefaultToolkit().beep();
     }
     if (progressBar == null) return;
@@ -467,7 +467,7 @@ public void actionPerformed(ActionEvent e) {
           message += _("Arduino: ") + BaseNoGui.VERSION_NAME + " (" + System.getProperty("os.name") + "), ";
           message += _("Board: ") + "\"" + Base.getBoardPreferences().get("name") + "\"\n\n";
           message += editor.console.consoleTextPane.getText().trim();
-          if ((Preferences.getBoolean("build.verbose")) == false) {
+          if ((PreferencesData.getBoolean("build.verbose")) == false) {
             message += "\n\n";
             message += "  " + _("This report would have more information with") + "\n";
             message += "  \"" + _("Show verbose output during compilation") + "\"\n";

File: app/src/processing/app/PresentMode.java
Patch:
@@ -74,14 +74,14 @@ public class PresentMode {
         public void actionPerformed(ActionEvent e) {
           int index = selector.getSelectedIndex();
           //device = devices[index];
-          Preferences.setInteger("run.present.display", index + 1);
+          PreferencesData.setInteger("run.present.display", index + 1);
         }
       });
   }
 
 
   static public JComboBox getSelector() {
-    int deviceIndex = Preferences.getInteger("run.present.display") - 1;
+    int deviceIndex = PreferencesData.getInteger("run.present.display") - 1;
     selector.setSelectedIndex(deviceIndex);
     return selector;
   }

File: app/src/processing/app/syntax/TextAreaPainter.java
Patch:
@@ -60,7 +60,7 @@ public TextAreaPainter(JEditTextArea textArea, TextAreaDefaults defaults)
     setForeground(defaults.fgcolor);
     setBackground(defaults.bgcolor);
 
-    antialias = Preferences.getBoolean("editor.antialias");
+    antialias = PreferencesData.getBoolean("editor.antialias");
 
     blockCaret = defaults.blockCaret;
     styles = defaults.styles;

File: app/src/processing/app/tools/AutoFormat.java
Patch:
@@ -440,7 +440,7 @@ public void run() {
     // Adding an additional newline as a hack around other errors
     String originalText = editor.getText() + "\n";
     strOut = new StringBuffer();
-    indentValue = Preferences.getInteger("editor.tabs.size");
+    indentValue = PreferencesData.getInteger("editor.tabs.size");
     indentChar = new String(" ");
 
     lineNumber = 0;

File: app/src/cc/arduino/contributions/packages/ui/ContributionManagerUI.java
Patch:
@@ -148,7 +148,6 @@ public void onUpdatePressed() {
       public void run() {
         try {
           setProgressVisible(true, "");
-          installer.updateIndex();
           List<String> downloadedPackageIndexFiles = installer.updateIndex();
           installer.deleteUnknownFiles(downloadedPackageIndexFiles);
           onIndexesUpdated();

File: app/src/processing/app/Preferences.java
Patch:
@@ -379,7 +379,7 @@ public void actionPerformed(ActionEvent e) {
     box.add(label);
     WarningItem[] warningItems = new WarningItem[]{new WarningItem("none", _("None")), new WarningItem("default", _("Default")), new WarningItem("more", _("More")), new WarningItem("all", _("All")), };
     comboWarnings = new JComboBox(warningItems);
-    String currentWarningLevel = PreferencesData.get("compiler.warning_flags", "none");
+    String currentWarningLevel = PreferencesData.get("compiler.warning_level", "none");
     for (WarningItem item : warningItems) {
       if (currentWarningLevel.equals(item.getValue())) {
         comboWarnings.setSelectedItem(item);
@@ -771,7 +771,7 @@ protected void applyFrame() {
     PreferencesData.set("editor.languages.current", newLanguage.isoCode);
 
     WarningItem warningItem = (WarningItem) comboWarnings.getSelectedItem();
-    PreferencesData.set("compiler.warning_flags", warningItem.getValue());
+    PreferencesData.set("compiler.warning_level", warningItem.getValue());
 
     Preferences.set("proxy.http.server", proxyHTTPServer.getText());
     try {

File: arduino-core/src/processing/app/debug/Compiler.java
Patch:
@@ -903,8 +903,8 @@ private String[] getCommandCompilerByRecipe(List<File> includeFolders, File sour
   }
 
   private void setupWarningFlags(PreferencesMap dict) {
-    if (dict.containsKey("compiler.warning_flags")) {
-      String key = "compiler.warning_flags." + dict.get("compiler.warning_flags");
+    if (dict.containsKey("compiler.warning_level")) {
+      String key = "compiler.warning_flags." + dict.get("compiler.warning_level");
       dict.put("compiler.warning_flags", dict.get(key));
     } else {
       dict.put("compiler.warning_flags", dict.get("compiler.warning_flags.none"));

File: app/test/processing/app/AbstractGUITest.java
Patch:
@@ -1,12 +1,12 @@
 package processing.app;
 
+import cc.arduino.files.DeleteFilesOnShutdown;
 import org.fest.swing.edt.FailOnThreadViolationRepaintManager;
 import org.fest.swing.edt.GuiActionRunner;
 import org.fest.swing.edt.GuiQuery;
 import org.junit.After;
 import org.junit.Before;
 import processing.app.helpers.ArduinoFrameFixture;
-import processing.app.helpers.FileUtils;
 
 import javax.swing.*;
 
@@ -17,6 +17,7 @@ public abstract class AbstractGUITest {
   @Before
   public void startUpTheIDE() throws Exception {
     System.setProperty("mrj.version", "whynot"); //makes sense only on osx. See https://github.com/alexruiz/fest-swing-1.x/issues/2#issuecomment-86532042
+    Runtime.getRuntime().addShutdownHook(new Thread(DeleteFilesOnShutdown.INSTANCE));
 
     FailOnThreadViolationRepaintManager.install();
 
@@ -26,6 +27,7 @@ public void startUpTheIDE() throws Exception {
     Theme.init();
     Base.getPlatform().setLookAndFeel();
     Base.untitledFolder = Base.createTempFolder("untitled");
+    DeleteFilesOnShutdown.add(Base.untitledFolder);
 
     window = GuiActionRunner.execute(new GuiQuery<ArduinoFrameFixture>() {
       @Override
@@ -38,7 +40,6 @@ protected ArduinoFrameFixture executeInEDT() throws Throwable {
   @After
   public void stopTheIDE() {
     window.cleanUp();
-    FileUtils.recursiveDelete(Base.untitledFolder);
   }
 
 }

File: app/test/processing/app/AbstractGUITest.java
Patch:
@@ -6,6 +6,7 @@
 import org.junit.After;
 import org.junit.Before;
 import processing.app.helpers.ArduinoFrameFixture;
+import processing.app.helpers.FileUtils;
 
 import javax.swing.*;
 
@@ -25,7 +26,6 @@ public void startUpTheIDE() throws Exception {
     Theme.init();
     Base.getPlatform().setLookAndFeel();
     Base.untitledFolder = Base.createTempFolder("untitled");
-    Base.untitledFolder.deleteOnExit();
 
     window = GuiActionRunner.execute(new GuiQuery<ArduinoFrameFixture>() {
       @Override
@@ -38,6 +38,7 @@ protected ArduinoFrameFixture executeInEDT() throws Throwable {
   @After
   public void stopTheIDE() {
     window.cleanUp();
+    FileUtils.recursiveDelete(Base.untitledFolder);
   }
 
 }

File: arduino-core/src/processing/app/linux/Platform.java
Patch:
@@ -122,6 +122,7 @@ public String getName() {
 
   @Override
   public Map<String, Object> resolveDeviceAttachedTo(String serial, Map<String, TargetPackage> packages, String devicesListOutput) {
+    assert packages != null;
     ByteArrayOutputStream baos = new ByteArrayOutputStream();
     Executor executor = new CollectStdOutExecutor(baos);
 

File: arduino-core/src/processing/app/macosx/Platform.java
Patch:
@@ -191,6 +191,7 @@ public String getName() {
 
   @Override
   public Map<String, Object> resolveDeviceAttachedTo(String serial, Map<String, TargetPackage> packages, String devicesListOutput) {
+    assert packages != null;
     if (devicesListOutput == null) {
       return super.resolveDeviceAttachedTo(serial, packages, devicesListOutput);
     }

File: arduino-core/src/processing/app/windows/Platform.java
Patch:
@@ -286,6 +286,7 @@ public String getName() {
 
   @Override
   public Map<String, Object> resolveDeviceAttachedTo(String serial, Map<String, TargetPackage> packages, String devicesListOutput) {
+    assert packages != null;
     if (devicesListOutput == null) {
       return super.resolveDeviceAttachedTo(serial, packages, devicesListOutput);
     }

File: arduino-core/src/cc/arduino/packages/discoverers/NetworkDiscovery.java
Patch:
@@ -137,7 +137,7 @@ public void serviceResolved(ServiceEvent serviceEvent) {
       }
 
       String label = name + " at " + address;
-      if (board != null) {
+      if (board != null && BaseNoGui.packages != null) {
         String boardName = BaseNoGui.getPlatform().resolveDeviceByBoardID(BaseNoGui.packages, board);
         if (boardName != null) {
           label += " (" + boardName + ")";

File: arduino-core/src/processing/app/Platform.java
Patch:
@@ -164,6 +164,8 @@ protected Map<String, Object> resolveDeviceByVendorIdProductId(Map<String, Targe
   }
 
   public String resolveDeviceByBoardID(Map<String, TargetPackage> packages, String boardId) {
+    assert packages != null;
+    assert boardId != null;
     for (TargetPackage targetPackage : packages.values()) {
       for (TargetPlatform targetPlatform : targetPackage.getPlatforms().values()) {
         for (TargetBoard board : targetPlatform.getBoards().values()) {

File: arduino-core/src/processing/app/helpers/PreferencesMap.java
Patch:
@@ -311,7 +311,7 @@ public File getFile(String key, String subFolder) {
    *         insensitive compared), <b>false</b> in any other case
    */
   public boolean getBoolean(String key) {
-    return new Boolean(get(key));
+    return Boolean.valueOf(get(key));
   }
 
   /**

File: arduino-core/src/cc/arduino/contributions/packages/DownloadableContributionsDownloader.java
Patch:
@@ -67,7 +67,7 @@ public File download(DownloadableContribution contribution,
     onProgress(progress);
     String checksum = contribution.getChecksum();
     String algo = checksum.split(":")[0];
-    if (!FileHash.hash(outputFile, algo).equals(checksum)) {
+    if (!FileHash.hash(outputFile, algo).equalsIgnoreCase(checksum)) {
       throw new Exception(_("CRC doesn't match. File is corrupted."));
     }
 

File: arduino-core/src/cc/arduino/contributions/libraries/LibraryInstaller.java
Patch:
@@ -100,7 +100,7 @@ public void updateIndex() throws Exception {
 
   public void install(ContributedLibrary lib, ContributedLibrary replacedLib) throws Exception {
     if (lib.isInstalled()) {
-      System.out.println(I18n.format(_("Library is already installed: {0}"), lib.getName() + _(" version ") + lib.getParsedVersion()));
+      System.out.println(I18n.format(_("Library is already installed: {0} version {1}"), lib.getName(), lib.getParsedVersion()));
       return;
     }
 

File: app/src/cc/arduino/contributions/packages/ui/InstallerJDialogUncaughtExceptionHandler.java
Patch:
@@ -47,7 +47,7 @@ public InstallerJDialogUncaughtExceptionHandler(InstallerJDialog parent, String
 
   @Override
   public void uncaughtException(Thread t, final Throwable e) {
-    String errorMessage = _(e.getMessage().substring(e.getMessage().indexOf(":") + 2));
+    String errorMessage = _(e.getMessage().substring(e.getMessage().indexOf(":") + 1));
     if (errorMessage.startsWith("Error downloading")) {
       errorMessage = connectionErrorMessage;
     }

File: arduino-core/src/cc/arduino/contributions/libraries/ContributedLibrary.java
Patch:
@@ -141,7 +141,7 @@ public boolean equals(Object obj) {
     String thisVersion = getParsedVersion();
     String otherVersion = ((ContributedLibrary) obj).getParsedVersion();
 
-    boolean versionEquals = thisVersion == null || otherVersion == null || thisVersion.equals(otherVersion);
+    boolean versionEquals = thisVersion == otherVersion || (thisVersion != null && otherVersion != null && thisVersion.equals(otherVersion));
 
     String thisName = getName();
     String otherName = ((ContributedLibrary) obj).getName();

File: arduino-core/src/cc/arduino/contributions/libraries/LibrariesIndex.java
Patch:
@@ -48,6 +48,9 @@ public boolean apply(ContributedLibrary contributedLibrary) {
   }
 
   public ContributedLibrary find(String name, String version) {
+    if (name == null || version == null) {
+      return null;
+    }
     for (ContributedLibrary lib : find(name)) {
       if (version.equals(lib.getParsedVersion())) {
         return lib;

File: arduino-core/src/cc/arduino/contributions/packages/ContributedPackage.java
Patch:
@@ -47,6 +47,9 @@ public abstract class ContributedPackage {
   public abstract List<ContributedTool> getTools();
 
   public ContributedPlatform findPlatform(String architecture, String version) {
+    if (architecture == null || version == null) {
+      return null;
+    }
     for (ContributedPlatform platform : getPlatforms()) {
       if (platform.getArchitecture().equals(architecture) && version.equals(platform.getParsedVersion()))
         return platform;

File: app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCell.java
Patch:
@@ -344,9 +344,9 @@ private Component getUpdatedCellComponent(Object value, boolean isSelected, int
     String desc = "<html><body>";
 
     // Library name...
-    desc += format("<b>{0}</b> ", name);
+    desc += format("<b>{0}</b>", name);
     if (installed != null && installed.isReadOnly()) {
-      desc += "Built-In ";
+      desc += " Built-In ";
     }
 
     // ...author...

File: app/src/cc/arduino/contributions/libraries/ui/LibraryManagerUI.java
Patch:
@@ -61,12 +61,12 @@ private LibrariesIndexTableModel getContribModel() {
 
   @Override
   protected InstallerTableCell createCellRenderer() {
-    return new ContributedLibraryTableCell(this);
+    return new ContributedLibraryTableCell();
   }
 
   @Override
   protected InstallerTableCell createCellEditor() {
-    return new ContributedLibraryTableCell(this) {
+    return new ContributedLibraryTableCell() {
       @Override
       protected void onInstall(ContributedLibrary selectedLibrary, ContributedLibrary installedLibrary) {
         if (selectedLibrary.isReadOnly()) {

File: arduino-core/src/cc/arduino/contributions/packages/ContributedPlatform.java
Patch:
@@ -37,8 +37,6 @@ public abstract class ContributedPlatform extends DownloadableContribution {
 
   public abstract String getName();
 
-  public abstract String getVersion();
-
   public abstract String getCategory();
 
   public abstract String getArchitecture();

File: app/src/cc/arduino/contributions/libraries/ui/LibraryInstaller.java
Patch:
@@ -48,9 +48,9 @@ public class LibraryInstaller {
   private static final String LIBRARY_INDEX_URL;
 
   static {
-    String extenalLibraryIndexUrl = System.getProperty("LIBRARY_INDEX_URL");
-    if (extenalLibraryIndexUrl != null && !"".equals(extenalLibraryIndexUrl)) {
-      LIBRARY_INDEX_URL = extenalLibraryIndexUrl;
+    String externalLibraryIndexUrl = System.getProperty("LIBRARY_INDEX_URL");
+    if (externalLibraryIndexUrl != null && !"".equals(externalLibraryIndexUrl)) {
+      LIBRARY_INDEX_URL = externalLibraryIndexUrl;
     } else {
       LIBRARY_INDEX_URL = "http://arduino.cc/download.php?f=/libraries/library_index.json";
     }

File: app/src/cc/arduino/contributions/libraries/ui/LibraryInstaller.java
Patch:
@@ -34,6 +34,7 @@
 import java.io.IOException;
 import java.net.URL;
 
+import processing.app.BaseNoGui;
 import processing.app.helpers.FileUtils;
 import cc.arduino.contributions.libraries.ContributedLibrary;
 import cc.arduino.contributions.libraries.LibrariesIndexer;
@@ -122,7 +123,7 @@ public void install(ContributedLibrary lib, ContributedLibrary replacedLib) thro
     File libsFolder = indexer.getSketchbookLibrariesFolder();
     File tmpFolder = FileUtils.createTempFolderIn(libsFolder);
     try {
-      ArchiveExtractor.extract(lib.getDownloadedFile(), tmpFolder, 1);
+      new ArchiveExtractor(BaseNoGui.getPlatform()).extract(lib.getDownloadedFile(), tmpFolder, 1);
     } catch (Exception e) {
       if (tmpFolder.exists())
         FileUtils.recursiveDelete(tmpFolder);

File: arduino-core/src/cc/arduino/contributions/packages/ContributionInstaller.java
Patch:
@@ -139,7 +139,7 @@ public void install(ContributedPlatform platform) throws Exception {
 
       destFolder.mkdirs();
       assert toolContrib.getDownloadedFile() != null;
-      ArchiveExtractor.extract(toolContrib.getDownloadedFile(), destFolder, 1);
+      new ArchiveExtractor(BaseNoGui.getPlatform()).extract(toolContrib.getDownloadedFile(), destFolder, 1);
       executePostInstallScriptIfAny(destFolder);
       toolContrib.setInstalled(true);
       toolContrib.setInstalledFolder(destFolder);
@@ -152,7 +152,7 @@ public void install(ContributedPlatform platform) throws Exception {
     File platformFolder = new File(packageFolder, "hardware" + File.separator + platform.getArchitecture());
     File destFolder = new File(platformFolder, platform.getVersion());
     destFolder.mkdirs();
-    ArchiveExtractor.extract(platform.getDownloadedFile(), destFolder, 1);
+    new ArchiveExtractor(BaseNoGui.getPlatform()).extract(platform.getDownloadedFile(), destFolder, 1);
     platform.setInstalled(true);
     platform.setInstalledFolder(destFolder);
     progress.stepDone();

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -582,7 +582,7 @@ static public void initPackages() throws Exception {
     if (!indexFile.isFile() || !(avrCoreFolder.exists() && avrCoreFolder.isDirectory())) {
       File distFile = findDefaultPackageFile();
       if (distFile != null) {
-        ArchiveExtractor.extract(distFile, BaseNoGui.getSettingsFolder(), 0, true);
+        new ArchiveExtractor(getPlatform()).extract(distFile, BaseNoGui.getSettingsFolder(), 0, true);
       } else if (!indexFile.isFile()) {
         // Otherwise create an empty packages index
         FileOutputStream out = null;

File: app/src/cc/arduino/contributions/ui/InstallerJDialog.java
Patch:
@@ -111,7 +111,7 @@ protected void onFilter(String[] _filters) {
       filtersContainer = new JPanel();
       filtersContainer.setLayout(new BoxLayout(filtersContainer, BoxLayout.X_AXIS));
       filtersContainer.add(Box.createHorizontalStrut(5));
-      filtersContainer.add(new JLabel(_("Type:")));
+      filtersContainer.add(new JLabel(_("Type")));
       filtersContainer.add(Box.createHorizontalStrut(5));
       filtersContainer.add(categoryChooser);
       filtersContainer.add(Box.createHorizontalStrut(5));

File: app/src/cc/arduino/contributions/libraries/ui/LibrariesIndexTableModel.java
Patch:
@@ -34,6 +34,7 @@
 import cc.arduino.contributions.VersionComparator;
 import cc.arduino.contributions.ui.FilteredAbstractTableModel;
 import com.google.common.base.Predicate;
+import com.google.common.base.Predicates;
 import com.google.common.collect.Collections2;
 
 import java.util.*;
@@ -137,8 +138,8 @@ public void setIndexer(LibrariesIndexer _index) {
   Predicate<ContributedLibrary> selectedCategoryFilter = null;
   String selectedFilters[] = null;
 
-  public void updateIndexFilter(Predicate<ContributedLibrary> categoryFilter, String filters[]) {
-    selectedCategoryFilter = categoryFilter;
+  public void updateIndexFilter(String filters[], Predicate<ContributedLibrary>... additionalFilters) {
+    selectedCategoryFilter = Predicates.and(additionalFilters);
     selectedFilters = filters;
     update();
   }

File: app/src/cc/arduino/contributions/ui/FilteredAbstractTableModel.java
Patch:
@@ -34,6 +34,6 @@
 
 public abstract class FilteredAbstractTableModel<T> extends AbstractTableModel {
 
-  abstract public void updateIndexFilter(Predicate<T> categoryFilter, String[] filters);
+  abstract public void updateIndexFilter(String[] filters, Predicate<T>... additionalFilters);
 
 }

File: arduino-core/src/cc/arduino/contributions/libraries/ContributedLibrary.java
Patch:
@@ -62,6 +62,8 @@ public abstract class ContributedLibrary extends DownloadableContribution {
 
   public abstract List<String> getArchitectures();
 
+  public abstract List<String> getTypes();
+
   public abstract List<ContributedLibraryReference> getRequires();
 
   private boolean readOnly;

File: app/src/cc/arduino/contributions/libraries/ui/ContributedLibraryTableCell.java
Patch:
@@ -353,7 +353,7 @@ private Component getUpdatedCellComponent(Object value, boolean isSelected, int
     String sentence = selected.getSentence();
     String paragraph = selected.getParagraph();
     // String availableVer = selectedLib.getVersion();
-    String url = selected.getUrl();
+    // String url = selected.getUrl();
 
     String midcolor = isSelected ? "#000000" : "#888888";
 
@@ -379,8 +379,6 @@ private Component getUpdatedCellComponent(Object value, boolean isSelected, int
       } else {
         desc += " " + format(_("Version <b>{0}</b>"), installedVer);
       }
-    } else {
-      // not installed...
     }
     desc += "</font>";
 

File: app/src/cc/arduino/contributions/packages/ui/ContributionIndexTableModel.java
Patch:
@@ -61,9 +61,7 @@ public ContributedPlatformReleases(ContributedPlatform platform) {
     public boolean shouldContain(ContributedPlatform platform) {
       if (platform.getParentPackage() != packager)
         return false;
-      if (!platform.getArchitecture().equals(arch))
-        return false;
-      return true;
+      return platform.getArchitecture().equals(arch);
     }
 
     public void add(ContributedPlatform platform) {

File: app/src/cc/arduino/contributions/ui/DropdownAllItem.java
Patch:
@@ -1,6 +1,5 @@
 package cc.arduino.contributions.ui;
 
-import cc.arduino.contributions.libraries.ContributedLibrary;
 import cc.arduino.contributions.filters.NoopPredicate;
 import cc.arduino.contributions.packages.DownloadableContribution;
 import cc.arduino.contributions.ui.DropdownItem;

File: app/src/cc/arduino/contributions/ui/FilterJTextField.java
Patch:
@@ -40,7 +40,7 @@
 
 @SuppressWarnings("serial")
 public class FilterJTextField extends JTextField {
-  private String filterHint;
+  private final String filterHint;
 
   private boolean showingHint;
 

File: app/src/cc/arduino/packages/formatter/AStyle.java
Patch:
@@ -42,7 +42,7 @@
 
 public class AStyle implements Tool {
 
-  private static String FORMATTER_CONF = "formatter.conf";
+  private static final String FORMATTER_CONF = "formatter.conf";
 
   private final AStyleInterface aStyleInterface;
   private final String formatterConfiguration;

File: app/src/cc/arduino/view/SplashScreenHelper.java
Patch:
@@ -38,7 +38,7 @@
 public class SplashScreenHelper {
 
   private final Map desktopHints;
-  private SplashScreen splash;
+  private final SplashScreen splash;
   private Rectangle2D.Double splashTextArea;
   private Graphics2D splashGraphics;
 

File: arduino-core/src/cc/arduino/contributions/libraries/ContributedLibrary.java
Patch:
@@ -154,12 +154,12 @@ public boolean equals(Object obj) {
     String thisVersion = getVersion();
     String otherVersion = ((ContributedLibrary) obj).getVersion();
 
-    boolean versionEquals = thisVersion == null || otherVersion == null || thisVersion == otherVersion || thisVersion.equals(otherVersion);
+    boolean versionEquals = thisVersion == null || otherVersion == null || thisVersion.equals(otherVersion);
 
     String thisName = getName();
     String otherName = ((ContributedLibrary) obj).getName();
 
-    boolean nameEquals = thisName == null || otherName == null || thisName == otherName || thisName.equals(otherName);
+    boolean nameEquals = thisName == null || otherName == null || thisName.equals(otherName);
 
     return versionEquals && nameEquals;
   }

File: arduino-core/src/cc/arduino/contributions/packages/ContributedPackage.java
Patch:
@@ -94,7 +94,7 @@ public String toString() {
       for (ContributedPlatform plat : getPlatforms()) {
         res += "\n        Plaform   : name         : " + plat.getName();
         if (plat.isInstalled()) {
-          res += "\n                    " + ((DownloadableContribution) plat);
+          res += "\n                    " + plat;
         }
         res += "\n                    category     : " + plat.getCategory();
         res += "\n                    architecture : " +

File: arduino-core/src/cc/arduino/contributions/packages/ContributedTargetPackage.java
Patch:
@@ -37,8 +37,8 @@
 
 public class ContributedTargetPackage implements TargetPackage {
 
-  private String id;
-  private Map<String, TargetPlatform> platforms;
+  private final String id;
+  private final Map<String, TargetPlatform> platforms;
 
   public ContributedTargetPackage(String _id) {
     id = _id;

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndex.java
Patch:
@@ -51,7 +51,7 @@ public ContributedTool findTool(String packageName, String name,
     return pack.findTool(name, version);
   }
 
-  private List<String> categories = new ArrayList<String>();
+  private final List<String> categories = new ArrayList<String>();
 
   public List<String> getCategories() {
     return categories;

File: arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java
Patch:
@@ -150,7 +150,6 @@ private void syncToolWithFilesystem(ContributedPackage pack, File toolFolder,
     }
     contrib.setInstalled(true);
     contrib.setInstalledFolder(versionFolder);
-    return;
   }
 
   private void syncHardwareWithFilesystem(ContributedPackage pack,

File: arduino-core/src/cc/arduino/contributions/packages/DownloadableContributionsDownloader.java
Patch:
@@ -42,7 +42,7 @@
 
 public class DownloadableContributionsDownloader {
 
-  private File stagingFolder;
+  private final File stagingFolder;
 
   public DownloadableContributionsDownloader(File _stagingFolder) {
     stagingFolder = _stagingFolder;

File: arduino-core/src/cc/arduino/contributions/packages/HostDependentDownloadableContribution.java
Patch:
@@ -28,7 +28,6 @@
  */
 package cc.arduino.contributions.packages;
 
-import processing.app.BaseNoGui;
 import processing.app.Platform;
 
 public abstract class HostDependentDownloadableContribution extends DownloadableContribution {

File: arduino-core/src/cc/arduino/os/linux/LinuxFileNativeUtils.java
Patch:
@@ -33,7 +33,7 @@
 
 public class LinuxFileNativeUtils {
 
-  public static LibCNative libc = LibCNative.libc;
+  public static final LibCNative libc = LibCNative.libc;
 
   public static void chmod(File file, int mode) throws IOException {
     int res = libc.chmod(file.getAbsolutePath(), mode);

File: arduino-core/src/cc/arduino/os/windows/WindowsFileNativeUtils.java
Patch:
@@ -29,11 +29,10 @@
 package cc.arduino.os.windows;
 
 import java.io.File;
-import java.io.IOException;
 
 public class WindowsFileNativeUtils {
 
-  public static void chmod(File file, int mode) throws IOException {
+  public static void chmod(File file, int mode) {
     // Empty
   }
 

File: arduino-core/src/cc/arduino/packages/UploaderFactory.java
Patch:
@@ -36,8 +36,9 @@
 public class UploaderFactory {
 
   public Uploader newUploader(TargetBoard board, BoardPort port, boolean noUploadPort) {
-    if (noUploadPort)
-      return new SerialUploader(noUploadPort);
+    if (noUploadPort) {
+      return new SerialUploader(true);
+    }
 
     if ("true".equals(board.getPreferences().get("upload.via_ssh")) && port != null && "network".equals(port.getProtocol())) {
       return new SSHUploader(port);

File: arduino-core/src/cc/arduino/packages/security/ClearSignedVerifier.java
Patch:
@@ -58,8 +58,7 @@ public static class VerifyResult {
    * @throws FileNotFoundException
    */
   public static VerifyResult verify(File signedTextFile,
-                                    PGPPublicKeyRingCollection pubKeyRing)
-          throws FileNotFoundException {
+                                    PGPPublicKeyRingCollection pubKeyRing) {
     // Create the result object
     VerifyResult result = new VerifyResult();
     result.clearText = null;

File: arduino-core/src/cc/arduino/utils/MultiStepProgress.java
Patch:
@@ -30,10 +30,10 @@
 
 public class MultiStepProgress implements Progress {
 
-  double steps;
+  private final double steps;
 
-  double step;
-  double stepProgress;
+  private double step;
+  private double stepProgress;
 
   String status;
 

File: arduino-core/src/cc/arduino/utils/Progress.java
Patch:
@@ -30,11 +30,11 @@
 
 public interface Progress {
 
-  public void setProgress(double progress);
+  void setProgress(double progress);
 
   double getProgress();
 
-  public void setStatus(String _status);
+  void setStatus(String _status);
 
   String getStatus();
 

File: arduino-core/src/cc/arduino/contributions/packages/DownloadableContributionsDownloader.java
Patch:
@@ -85,8 +85,8 @@ public void update(Observable o, Object arg) {
         FileDownloader me = (FileDownloader) o;
         String msg = "";
         if (me.getDownloadSize() != null) {
-          long downloaded = me.getInitialSize() + me.getDownloaded() / 1000;
-          long total = me.getInitialSize() + me.getDownloadSize() / 1000;
+          long downloaded = (me.getInitialSize() + me.getDownloaded()) / 1000;
+          long total = (me.getInitialSize() + me.getDownloadSize()) / 1000;
           msg = format(_("Downloaded {0}kb of {1}kb."), downloaded, total);
         }
         progress.setStatus(statusText + " " + msg);

File: arduino-core/src/cc/arduino/utils/network/FileDownloader.java
Patch:
@@ -181,8 +181,9 @@ public void download() throws InterruptedException {
 
       // Check for valid content length.
       long len = connection.getContentLength();
-      if (len >= 0)
+      if (len >= 0) {
         setDownloadSize(len);
+      }
       setStatus(Status.DOWNLOADING);
 
       synchronized (this) {

File: app/src/cc/arduino/contributions/packages/ui/ContributionManagerUI.java
Patch:
@@ -76,7 +76,7 @@ protected void onRemove(ContributedPlatform installedPlatform) {
   }
 
   public ContributionManagerUI(Frame parent) {
-    super(parent, "Boards Manager", Dialog.ModalityType.APPLICATION_MODAL);
+    super(parent, _("Boards Manager"), Dialog.ModalityType.APPLICATION_MODAL);
   }
 
   public void setIndexer(ContributionsIndexer indexer) {

File: arduino-core/src/cc/arduino/contributions/packages/HostDependentDownloadableContribution.java
Patch:
@@ -45,8 +45,6 @@ public boolean isCompatible() {
     Properties prop = System.getProperties();
     String osName = prop.getProperty("os.name");
     String osArch = prop.getProperty("os.arch");
-    // for (Object k : properties.keySet())
-    // System.out.println(k + " = " + properties.get(k));
 
     String host = getHost();
 

File: app/src/cc/arduino/contributions/libraries/ui/LibraryManagerUI.java
Patch:
@@ -84,7 +84,6 @@ public LibraryManagerUI(Frame parent) {
 
   public void setIndexer(LibrariesIndexer indexer) {
     this.indexer = indexer;
-    getContribModel().removeTableModelListener(tableModelListener);
     categoryChooser.removeActionListener(categoryChooserActionListener);
 
     // TODO: Remove setIndexer and make getContribModel 
@@ -94,7 +93,6 @@ public void setIndexer(LibrariesIndexer indexer) {
     categoryFilter = null;
     categoryChooser.removeAllItems();
 
-    getContribModel().addTableModelListener(tableModelListener);
     categoryChooser.addActionListener(categoryChooserActionListener);
 
     // Load categories

File: app/src/cc/arduino/contributions/packages/ui/ContributionManagerUI.java
Patch:
@@ -80,7 +80,6 @@ public ContributionManagerUI(Frame parent) {
   }
 
   public void setIndexer(ContributionsIndexer indexer) {
-    getContribModel().removeTableModelListener(tableModelListener);
     categoryChooser.removeActionListener(categoryChooserActionListener);
 
     getContribModel().setIndex(indexer.getIndex());
@@ -90,7 +89,6 @@ public void setIndexer(ContributionsIndexer indexer) {
 
     filterField.setEnabled(getContribModel().getRowCount() > 0);
 
-    getContribModel().addTableModelListener(tableModelListener);
     categoryChooser.addActionListener(categoryChooserActionListener);
 
     // Enable categories combo only if there are two or more choices

File: arduino-core/src/cc/arduino/os/linux/LinuxFileNativeUtils.java
Patch:
@@ -44,7 +44,7 @@ public static void chmod(File file, int mode) throws IOException {
   public static void link(File file, File link) throws IOException {
     int res = libc.link(file.getAbsolutePath(), link.getAbsolutePath());
     if (res == -1)
-      throw new IOException("Could not create hard link: " + strerror());
+      throw new IOException("Could not create hard link to " + file + " from " + link + ": " + strerror());
   }
 
   public static void symlink(File file, File link) throws IOException {

File: app/src/cc/arduino/libraries/contributions/ui/ContributedLibraryTableCell.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/libraries/contributions/ui/LibrariesIndexTableModel.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/libraries/contributions/ui/LibraryInstaller.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/libraries/contributions/ui/LibraryManagerUI.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/packages/contributions/ui/ContributedPlatformTableCell.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/packages/contributions/ui/ContributionIndexTableModel.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/packages/contributions/ui/ContributionManagerUI.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/ui/FilterJTextField.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/ui/FilteredAbstractTableModel.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/ui/InstallerJDialog.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/ui/InstallerTableCell.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/ui/ProgressJProgressBar.java
Patch:
@@ -1,7 +1,7 @@
 /*
  * This file is part of Arduino.
  *
- * Copyright 2014 Arduino LLC (http://www.arduino.cc/)
+ * Copyright 2015 Arduino LLC (http://www.arduino.cc/)
  *
  * Arduino is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by

File: app/src/cc/arduino/packages/contributions/ui/ContributionIndexTableModel.java
Patch:
@@ -142,7 +142,7 @@ public void updateIndexFilter(String category, String filters[]) {
     for (ContributedPackage pack : index.getPackages()) {
       for (ContributedPlatform platform : pack.getPlatforms()) {
         if (category != null) {
-          if (!platform.getCategory().equals(category))
+          if (!category.equals(platform.getCategory()))
             continue;
         }
         if (!stringContainsAll(platform.getName(), filters))

File: arduino-core/src/cc/arduino/packages/contributions/ContributedBoard.java
Patch:
@@ -30,6 +30,6 @@
 
 public interface ContributedBoard {
 
-  public String getName();
+  String getName();
 
 }

File: app/src/cc/arduino/packages/contributions/ui/InstallerJDialogUncaughtExceptionHandler.java
Patch:
@@ -19,6 +19,7 @@ public void uncaughtException(Thread t, final Throwable e) {
     SwingUtilities.invokeLater(new Runnable() {
       @Override
       public void run() {
+        System.err.println(_(e.getMessage().substring(e.getMessage().indexOf(":") + 2)));
         e.printStackTrace();
       }
     });

File: app/src/cc/arduino/packages/formatter/AStyle.java
Patch:
@@ -64,7 +64,7 @@ public AStyle() {
     try {
       formatterConfiguration = FileUtils.readFileToString(formatterConf);
     } catch (IOException e) {
-      // noop
+      // ignored
     }
     this.formatterConfiguration = formatterConfiguration;
   }

File: arduino-core/src/cc/arduino/packages/contributions/ContributionInstaller.java
Patch:
@@ -162,7 +162,7 @@ public void remove(ContributedPlatform platform) {
       try {
         destFolder.getParentFile().delete();
       } catch (SecurityException e) {
-        // Do nothing
+        // ignore
       }
     }
   }

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -719,6 +719,8 @@ static public void main(String args[]) throws Exception {
     initParameters(args);
     
     init(args);
+
+    Thread.setDefaultUncaughtExceptionHandler(new DefaultUncaughtExceptionHandler());
   }
 
   static public void onBoardOrPortChange() {
@@ -765,7 +767,7 @@ static public void onBoardOrPortChange() {
     populateImportToLibraryTable();
   }
 
-  static protected void loadContributedHardware(ContributionsIndexer indexer) {
+  static protected void loadContributedHardware(ContributionsIndexer indexer) throws TargetPlatformException {
     for (TargetPackage pack : indexer.createTargetPackages()) {
       packages.put(pack.getId(), pack);
     }

File: app/src/cc/arduino/packages/contributions/ui/ContributionIndexTableModel.java
Patch:
@@ -121,7 +121,6 @@ public void select(ContributedPlatform value) {
 
   public void setIndex(ContributionsIndex _index) {
     index = _index;
-    updateIndexFilter(null, null);
   }
 
   public void updateIndexFilter(String category, String filters[]) {

File: arduino-core/src/cc/arduino/packages/DiscoveryManager.java
Patch:
@@ -63,7 +63,7 @@ public void run() {
           try {
             d.stop();
           } catch (Exception e) {
-            e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
+            e.printStackTrace(); //just printing as the JVM is terminating
           }
         }
       }
@@ -74,7 +74,7 @@ public void run() {
   public List<BoardPort> discovery() {
     List<BoardPort> res = new ArrayList<BoardPort>();
     for (Discovery d : discoverers) {
-      res.addAll(d.discovery());
+      res.addAll(d.listDiscoveredBoards());
     }
     return res;
   }

File: arduino-core/src/processing/app/helpers/NetUtils.java
Patch:
@@ -11,7 +11,7 @@ public abstract class NetUtils {
 
   private static boolean isReachableByEcho(InetAddress address) {
     try {
-      return address.isReachable(100);
+      return address.isReachable(300);
     } catch (IOException e) {
       return false;
     }
@@ -38,7 +38,7 @@ private static boolean isPortOpen(InetAddress address, int port) {
     Socket socket = null;
     try {
       socket = new Socket();
-      socket.connect(new InetSocketAddress(address, port), 300);
+      socket.connect(new InetSocketAddress(address, port), 1000);
       return true;
     } catch (IOException e) {
       return false;

File: arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -116,7 +116,7 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
           if (verbose)
             System.out.println(
               I18n.format(_("Forcing reset using 1200bps open/close on port {0}"), uploadPort));
-          Serial.touchPort(uploadPort, 1200);
+          Serial.touchForCDCReset(uploadPort);
         }
         Thread.sleep(400);
         if (waitForUploadPort) {

File: arduino-core/src/processing/app/Serial.java
Patch:
@@ -80,11 +80,12 @@ public Serial(String iname) throws SerialException {
             new Float(PreferencesData.get("serial.stopbits")).floatValue());
   }
 
-  public static boolean touchPort(String iname, int irate) throws SerialException {
+  public static boolean touchForCDCReset(String iname) throws SerialException {
     SerialPort serialPort = new SerialPort(iname);
     try {
       serialPort.openPort();
-      serialPort.setParams(irate, 8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
+      serialPort.setParams(1200, 8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
+      serialPort.setDTR(false);
       serialPort.closePort();
       return true;
     } catch (SerialPortException e) {

File: app/src/processing/app/Base.java
Patch:
@@ -57,7 +57,7 @@
 public class Base {
 
   static private boolean commandLine;
-  public static SplashScreenHelper splashScreenHelper;
+  public static SplashScreenHelper splashScreenHelper = new SplashScreenHelper(SplashScreen.getSplashScreen());
 
   // A single instance of the preferences window
   Preferences preferencesFrame;
@@ -89,8 +89,6 @@ static public void main(String args[]) throws Exception {
     System.setProperty("awt.useSystemAAFontSettings", "on");
     System.setProperty("swing.aatext", "true");
 
-    splashScreenHelper = new SplashScreenHelper(SplashScreen.getSplashScreen());
-
     BaseNoGui.initLogger();
     
     BaseNoGui.notifier = new GUIUserNotifier();

File: app/src/processing/app/Editor.java
Patch:
@@ -1286,6 +1286,7 @@ public void actionPerformed(ActionEvent e) {
           }
           if (getSelectedText()!= null) find.setFindText( getSelectedText() );
           //new FindReplace(Editor.this).show();
+          find.setLocationRelativeTo(Editor.this);
           find.setVisible(true);
           //find.setVisible(true);
         }
@@ -1320,6 +1321,7 @@ public void actionPerformed(ActionEvent e) {
           if (find == null) {
             find = new FindReplace(Editor.this);
           }
+          find.setLocationRelativeTo(Editor.this);
           find.setFindText( getSelectedText() );
         }
       });

File: app/src/processing/app/Editor.java
Patch:
@@ -2212,7 +2212,7 @@ protected boolean handleOpenInternal(File sketchFile) {
           // copy the sketch inside
           File properPdeFile = new File(properFolder, sketchFile.getName());
           try {
-            Base.copyFile(file, properPdeFile);
+            Base.copyFile(sketchFile, properPdeFile);
           } catch (IOException e) {
             Base.showWarning(_("Error"), _("Could not copy to a proper location."), e);
             return false;

File: arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -116,7 +116,7 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
           if (verbose)
             System.out.println(
               I18n.format(_("Forcing reset using 1200bps open/close on port {0}"), uploadPort));
-          Serial.touchPort(uploadPort, 1200);
+          Serial.touchForCDCReset(uploadPort);
         }
         Thread.sleep(400);
         if (waitForUploadPort) {

File: arduino-core/src/processing/app/Serial.java
Patch:
@@ -80,11 +80,12 @@ public Serial(String iname) throws SerialException {
             new Float(PreferencesData.get("serial.stopbits")).floatValue());
   }
 
-  public static boolean touchPort(String iname, int irate) throws SerialException {
+  public static boolean touchForCDCReset(String iname) throws SerialException {
     SerialPort serialPort = new SerialPort(iname);
     try {
       serialPort.openPort();
-      serialPort.setParams(irate, 8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
+      serialPort.setParams(1200, 8, SerialPort.STOPBITS_1, SerialPort.PARITY_NONE);
+      serialPort.setDTR(false);
       serialPort.closePort();
       return true;
     } catch (SerialPortException e) {

File: app/src/processing/app/Editor.java
Patch:
@@ -2212,7 +2212,7 @@ protected boolean handleOpenInternal(File sketchFile) {
           // copy the sketch inside
           File properPdeFile = new File(properFolder, sketchFile.getName());
           try {
-            Base.copyFile(file, properPdeFile);
+            Base.copyFile(sketchFile, properPdeFile);
           } catch (IOException e) {
             Base.showWarning(_("Error"), _("Could not copy to a proper location."), e);
             return false;

File: app/src/processing/app/FindReplace.java
Patch:
@@ -421,8 +421,9 @@ public void replaceAndFindNext() {
   public void replaceAll() {
     if (findField.getText().length() == 0)
       return;
-    // move to the beginning
-    editor.setSelection(0, 0);
+    
+    editor.getSketch().setCurrentCode(0); // select the first tab
+    editor.setSelection(0, 0); // move to the beginning
 
     boolean foundAtLeastOne = false;
     while (true) {

File: arduino-core/src/processing/app/BaseNoGui.java
Patch:
@@ -688,7 +688,7 @@ static public void onBoardOrPortChange() {
     // Add library folder for the current selected platform
     TargetPlatform targetPlatform = getTargetPlatform();
     if (targetPlatform != null) {
-      String core = getBoardPreferences().get("build.core");
+      String core = getBoardPreferences().get("build.core", "arduino");
       if (core.contains(":")) {
         String referencedCore = core.split(":")[0];
         TargetPlatform referencedPlatform = getTargetPlatform(referencedCore, targetPlatform.getId());

File: arduino-core/src/processing/app/debug/Compiler.java
Patch:
@@ -426,7 +426,7 @@ private PreferencesMap createBuildPreferences(String _buildPath,
     TargetPlatform targetPlatform = BaseNoGui.getTargetPlatform();
     TargetPlatform corePlatform = null;
     PreferencesMap boardPreferences = BaseNoGui.getBoardPreferences();
-    String core = boardPreferences.get("build.core");
+    String core = boardPreferences.get("build.core", "arduino");
     if (core.contains(":")) {
       String[] split = core.split(":");
       core = split[1];

File: app/test/processing/app/DefaultTargetTest.java
Patch:
@@ -29,7 +29,7 @@ public void testDefaultTarget() throws Exception {
     // should not raise an exception
     new Base(new String[0]);
 
-    TargetBoard targetBoard = Base.getTargetBoard();
+    TargetBoard targetBoard = BaseNoGui.getTargetBoard();
     assertNotEquals("unreal_board", targetBoard.getId());
   }
 }

File: app/src/processing/app/syntax/SyntaxUtilities.java
Patch:
@@ -131,7 +131,6 @@ public static int paintSyntaxLine(Segment line, Token tokens,
     Font defaultFont = gfx.getFont();
     Color defaultColor = gfx.getColor();
 
-    int offset = 0;
     for(;;)
       {
         byte id = tokens.id;
@@ -155,7 +154,6 @@ public static int paintSyntaxLine(Segment line, Token tokens,
         else
           x = Utilities.drawTabbedText(line, x, y, gfx, expander, 0);        
         line.offset += length;
-        offset += length;
 
         tokens = tokens.next;
       }

File: app/src/processing/app/tools/AutoFormat.java
Patch:
@@ -639,7 +639,6 @@ public void run() {
         case '\'':
           string[j++] = c;
           cc = getchr();
-          int count = 0;
           while(cc != c && EOF == 0)
           {
             // max. length of line should be 256

File: app/src/processing/app/tools/MenuScroller.java
Patch:
@@ -3,7 +3,6 @@
  */
 package processing.app.tools;
 
-import java.awt.BorderLayout;
 import java.awt.Color;
 import java.awt.Component;
 import java.awt.Dimension;

File: app/test/processing/app/ReplacingTextGeneratesTwoUndoActionsTest.java
Patch:
@@ -3,7 +3,6 @@
 import org.fest.swing.fixture.JMenuItemFixture;
 import org.junit.Test;
 import processing.app.helpers.JEditTextAreaFixture;
-import processing.app.syntax.JEditTextArea;
 
 import static org.junit.Assert.assertEquals;
 

File: arduino-core/src/processing/app/windows/Options.java
Patch:
@@ -18,6 +18,7 @@
  * @author TB
  */
 public interface Options {
+  @SuppressWarnings("serial")
   Map<String, Object> UNICODE_OPTIONS = new HashMap<String, Object>() {
     {
       put(OPTION_TYPE_MAPPER, W32APITypeMapper.UNICODE);

File: app/src/processing/app/FindReplace.java
Patch:
@@ -122,7 +122,7 @@ public void actionPerformed(ActionEvent e) {
     searchAllFilesBox.setSelected(searchAllFiles);
 
     JPanel checkboxPanel = new JPanel();
-    checkboxPanel.setLayout(new BoxLayout(checkboxPanel, BoxLayout.LINE_AXIS));
+    checkboxPanel.setLayout(new BoxLayout(checkboxPanel, BoxLayout.PAGE_AXIS));
     checkboxPanel.add(ignoreCaseBox);
     checkboxPanel.add(Box.createRigidArea(new Dimension(8, 0)));
     checkboxPanel.add(wrapAroundBox);

File: app/src/processing/app/debug/TextAreaFIFO.java
Patch:
@@ -68,7 +68,7 @@ public void trimDocument() {
     len = getDocument().getLength();
     if (len > maxChars) {
       int n = len - maxChars;
-      System.out.println("trimDocument: remove " + n + " chars");
+      //System.out.println("trimDocument: remove " + n + " chars");
       try {
         getDocument().remove(0, n);
       } catch (BadLocationException ble) {

File: app/src/processing/app/AbstractMonitor.java
Patch:
@@ -111,7 +111,7 @@ public void actionPerformed(ActionEvent event) {
 
     String[] serialRateStrings = {
             "300", "1200", "2400", "4800", "9600",
-            "19200", "57600", "115200"
+            "19200", "38400", "57600", "115200"
     };
 
     serialRates = new JComboBox();

File: arduino-core/src/processing/app/PreferencesData.java
Patch:
@@ -80,7 +80,7 @@ static public void init(File file) {
 
   private static void fixPreferences() {
     String baud = get("serial.debug_rate");
-    if ("14400".equals(baud) || "28800".equals(baud) || "38400".equals(baud)) {
+    if ("14400".equals(baud) || "28800".equals(baud)) {
       set("serial.debug_rate", "9600");
     }
   }

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -206,7 +206,7 @@ public synchronized void appendString(String text, AttributeSet a) {
       char c = chars[stop];
       stop++;
       currentLineLength++;
-      if (c == '\n' || currentLineLength > maxLineLength) {
+      if (c == '\n' || c == '\r' || currentLineLength > maxLineLength) {
         elements.add(new ElementSpec(a, ElementSpec.ContentType, chars, start,
             stop - start));
         elements.add(new ElementSpec(a, ElementSpec.EndTagType));

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -33,6 +33,7 @@
 import javax.swing.JScrollPane;
 import javax.swing.JTextPane;
 import javax.swing.SwingUtilities;
+import javax.swing.Timer;
 import javax.swing.text.AttributeSet;
 import javax.swing.text.BadLocationException;
 import javax.swing.text.DefaultStyledDocument;
@@ -126,7 +127,7 @@ public EditorConsole(Editor _editor) {
 
     // periodically post buffered messages to the console
     // should the interval come from the preferences file?
-    new javax.swing.Timer(250, new ActionListener() {
+    new Timer(250, new ActionListener() {
       public void actionPerformed(ActionEvent evt) {
         SwingUtilities.invokeLater(new Runnable() {
           @Override

File: app/src/processing/app/Editor.java
Patch:
@@ -2573,7 +2573,8 @@ public void run() {
           statusError(I18n.format(
                       _("Error while burning bootloader: missing '{0}' configuration parameter"),
                       e.getMessage()));
-          //statusError(e);
+        } catch (RunnerException e) {
+          statusError(e.getMessage());
         } catch (Exception e) {
           statusError(_("Error while burning bootloader."));
           e.printStackTrace();

File: app/src/processing/app/Preferences.java
Patch:
@@ -578,7 +578,7 @@ protected void applyFrame() {
     String newPath = sketchbookLocationField.getText();
     if (newPath.isEmpty()) {
       if (Base.getPortableFolder() == null)
-        newPath = editor.base.getDefaultSketchbookFolder().toString();
+        newPath = editor.base.getDefaultSketchbookFolderOrPromptForIt().toString();
       else
         newPath = Base.getPortableSketchbookFolder();
     }

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -83,7 +83,7 @@ public interface ProgressListener {
   private ProgressListener progressListener;
 
   static public String build(SketchData data, String buildPath, File tempBuildFolder, ProgressListener progListener, boolean verbose) throws RunnerException {
-    if (!SketchData.checkSketchFile(data.getPrimaryFile()))
+    if (SketchData.checkSketchFile(data.getPrimaryFile()) == null)
       BaseNoGui.showError(_("Bad file selected"),
                           _("Bad sketch primary file or bad sketck directory structure"), null);
 

File: app/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -86,15 +86,13 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
             System.out.println(_("Forcing reset using 1200bps open/close on port ") + uploadPort);
           Serial.touchPort(uploadPort, 1200);
         }
+        Thread.sleep(400);
         if (waitForUploadPort) {
           // Scanning for available ports seems to open the port or
           // otherwise assert DTR, which would cancel the WDT reset if
           // it happened within 250 ms. So we wait until the reset should
           // have already occured before we start scanning.
-          Thread.sleep(300);
           uploadPort = waitForUploadPort(uploadPort, before);
-        } else {
-          Thread.sleep(400);
         }
       } catch (SerialException e) {
         throw new RunnerException(e);

File: app/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -86,15 +86,13 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
             System.out.println(_("Forcing reset using 1200bps open/close on port ") + uploadPort);
           Serial.touchPort(uploadPort, 1200);
         }
+        Thread.sleep(400);
         if (waitForUploadPort) {
           // Scanning for available ports seems to open the port or
           // otherwise assert DTR, which would cancel the WDT reset if
           // it happened within 250 ms. So we wait until the reset should
           // have already occured before we start scanning.
-          Thread.sleep(300);
           uploadPort = waitForUploadPort(uploadPort, before);
-        } else {
-          Thread.sleep(400);
         }
       } catch (SerialException e) {
         throw new RunnerException(e);

File: app/src/processing/app/Preferences.java
Patch:
@@ -492,7 +492,7 @@ public void actionPerformed(ActionEvent e) {
     final JLabel clickable = label;
     label.addMouseListener(new MouseAdapter() {
         public void mousePressed(MouseEvent e) {
-          Base.openFolder(Base.getSettingsFolder());
+          Base.openFolder(preferencesFile.getParentFile());
         }
 
         public void mouseEntered(MouseEvent e) {

File: app/src/processing/app/Base.java
Patch:
@@ -2089,6 +2089,8 @@ static public File getBuildFolder() {
       String buildPath = Preferences.get("build.path");
       if (buildPath != null) {
         buildFolder = Base.absoluteFile(buildPath);
+        if (!buildFolder.exists())
+          buildFolder.mkdirs();
       } else {
         //File folder = new File(getTempFolder(), "build");
         //if (!folder.exists()) folder.mkdirs();

File: app/src/processing/app/Editor.java
Patch:
@@ -2638,6 +2638,7 @@ public void handlePrint() {
    * Show an error int the status bar.
    */
   public void statusError(String what) {
+    System.err.println(what);
     status.error(what);
     //new Exception("deactivating RUN").printStackTrace();
     toolbar.deactivate(EditorToolbar.RUN);

File: app/src/processing/app/Editor.java
Patch:
@@ -2120,7 +2120,7 @@ protected boolean handleOpenInternal(File file) {
     String pdeName = parentName + ".pde";
     File altPdeFile = new File(parent, pdeName);
     String inoName = parentName + ".ino";
-    File altInoFile = new File(parent, pdeName);
+    File altInoFile = new File(parent, inoName);
 
     if (pdeName.equals(fileName) || inoName.equals(fileName)) {
       // no beef with this guy

File: app/src/processing/app/Base.java
Patch:
@@ -401,6 +401,9 @@ public Base(String[] args) throws Exception {
     if ((action == ACTION.UPLOAD || action == ACTION.VERIFY) && filenames.size() != 1)
       showError(null, _("Must specify exactly one sketch file"), 3);
 
+    if ((action != ACTION.UPLOAD && action != ACTION.VERIFY) && (doVerboseBuild || doVerboseUpload))
+      showError(null, _("--verbose, --verbose-upload and --verbose-build can only be used together with --verify or --upload"), 3);
+
     for (String path: filenames) {
       // Fix a problem with systems that use a non-ASCII languages. Paths are
       // being passed in with 8.3 syntax, which makes the sketch loader code

File: app/src/processing/app/Base.java
Patch:
@@ -419,7 +419,8 @@ public Base(String[] args) throws Exception {
         path = new File(currentDirectory, path).getAbsolutePath();
       }
 
-      if (handleOpen(path, nextEditorLocation(), !(action == ACTION.UPLOAD || action == ACTION.VERIFY)) == null) {
+      boolean showEditor = (action == ACTION.GUI);
+      if (handleOpen(path, nextEditorLocation(), showEditor) == null) {
         String mess = I18n.format(_("Failed to open sketch: \"{0}\""), path);
         // Open failure is fatal in upload/verify mode
         if (action == ACTION.VERIFY || action == ACTION.UPLOAD)

File: app/src/processing/app/Editor.java
Patch:
@@ -1236,6 +1236,7 @@ public void actionPerformed(ActionEvent e) {
           if (find == null) {
             find = new FindReplace(Editor.this);
           }
+          if (getSelectedText()!= null) find.setFindText( getSelectedText() );
           //new FindReplace(Editor.this).show();
           find.setVisible(true);
           //find.setVisible(true);

File: app/src/processing/app/windows/Platform.java
Patch:
@@ -334,8 +334,6 @@ public String resolveDeviceAttachedTo(String serial, Map<String, TargetPackage>
     }
   }
 
-  /*
-  Temporarly disabled due to https://github.com/arduino/Arduino/issues/1573
   @Override
   public String preListAllCandidateDevices() {
     ByteArrayOutputStream baos = new ByteArrayOutputStream();
@@ -351,5 +349,4 @@ public String preListAllCandidateDevices() {
       return super.preListAllCandidateDevices();
     }
   }
-  */
 }

File: app/src/processing/app/debug/TargetPlatform.java
Patch:
@@ -71,7 +71,7 @@ public TargetPlatform(String _name, File _folder, TargetPackage parent)
     if (!boardsFile.exists() || !boardsFile.canRead())
       throw new TargetPlatformException(
           format(_("Could not find boards.txt in {0}. Is it pre-1.5?"),
-                 boardsFile.getAbsolutePath()));
+                 folder.getAbsolutePath()));
 
     // Load boards
     try {

File: app/src/cc/arduino/packages/UploaderAndMonitorFactory.java
Patch:
@@ -40,7 +40,7 @@
 public class UploaderAndMonitorFactory {
 
   public Uploader newUploader(TargetBoard board, BoardPort port) {
-    if ("true".equals(board.getPreferences().get("upload.via_ssh")) && "network".equals(port.getProtocol())) {
+    if ("true".equals(board.getPreferences().get("upload.via_ssh")) && port != null && "network".equals(port.getProtocol())) {
       return new SSHUploader(port);
     }
 

File: app/src/cc/arduino/packages/UploaderAndMonitorFactory.java
Patch:
@@ -40,7 +40,7 @@
 public class UploaderAndMonitorFactory {
 
   public Uploader newUploader(TargetBoard board, BoardPort port) {
-    if ("true".equals(board.getPreferences().get("upload.via_ssh")) && "network".equals(port.getProtocol())) {
+    if ("true".equals(board.getPreferences().get("upload.via_ssh")) && port != null && "network".equals(port.getProtocol())) {
       return new SSHUploader(port);
     }
 

File: app/src/processing/app/helpers/PreferencesMap.java
Patch:
@@ -109,7 +109,7 @@ public void load(InputStream input) throws IOException {
 
         key = processPlatformSuffix(key, ".linux", Base.isLinux());
         key = processPlatformSuffix(key, ".windows", Base.isWindows());
-        key = processPlatformSuffix(key, ".macos", Base.isMacOS());
+        key = processPlatformSuffix(key, ".macosx", Base.isMacOS());
 
         if (key != null)
           put(key, value);

File: app/src/processing/app/Sketch.java
Patch:
@@ -2066,9 +2066,10 @@ static public String sanitizeName(String origName) {
     for (int i = 0; i < c.length; i++) {
       if (((c[i] >= '0') && (c[i] <= '9')) ||
           ((c[i] >= 'a') && (c[i] <= 'z')) ||
-          ((c[i] >= 'A') && (c[i] <= 'Z'))) {
+          ((c[i] >= 'A') && (c[i] <= 'Z')) ||
+          ((i > 0) && (c[i] == '-')) ||
+          ((i > 0) && (c[i] == '.'))) {
         buffer.append(c[i]);
-
       } else {
         buffer.append('_');
       }

File: app/src/processing/app/SketchCode.java
Patch:
@@ -87,7 +87,7 @@ public SketchCode(File file, String extension) {
 
   protected void makePrettyName() {
     prettyName = file.getName();
-    int dot = prettyName.indexOf('.');
+    int dot = prettyName.lastIndexOf('.');
     prettyName = prettyName.substring(0, dot);
   }
 

File: app/src/cc/arduino/packages/Uploader.java
Patch:
@@ -20,8 +20,6 @@
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-  
-  $Id$
 */
 
 package cc.arduino.packages;

File: app/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -22,8 +22,6 @@
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-  
-  $Id$
 */
 
 package cc.arduino.packages.uploaders;

File: app/src/processing/app/Serial.java
Patch:
@@ -175,7 +175,7 @@ public void addListener(MessageConsumer consumer) {
   public synchronized void serialEvent(SerialPortEvent serialEvent) {
     if (serialEvent.isRXCHAR()) {
       try {
-        byte[] buf = port.readBytes();
+        byte[] buf = port.readBytes(serialEvent.getEventValue());
         if (buf.length > 0) {
           if (bufferLast == buffer.length) {
             byte temp[] = new byte[bufferLast << 1];

File: app/src/processing/app/debug/Sizer.java
Patch:
@@ -20,8 +20,6 @@
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-  
-  $Id$
 */
 
 package processing.app.debug;

File: app/src/processing/app/debug/TargetPackage.java
Patch:
@@ -18,8 +18,6 @@
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
- $Id$
  */
 package processing.app.debug;
 

File: app/src/processing/app/debug/TargetPlatform.java
Patch:
@@ -18,8 +18,6 @@
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
- $Id$
  */
 package processing.app.debug;
 

File: app/src/processing/app/helpers/PreferencesMap.java
Patch:
@@ -18,8 +18,6 @@
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
- $Id$
  */
 package processing.app.helpers;
 

File: app/src/processing/app/helpers/StringReplacer.java
Patch:
@@ -18,8 +18,6 @@
  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software Foundation,
  Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
- $Id$
  */
 package processing.app.helpers;
 

File: app/src/processing/app/syntax/CTokenMarker.java
Patch:
@@ -15,7 +15,6 @@
  * C token marker.
  *
  * @author Slava Pestov
- * @version $Id: CTokenMarker.java 1268 2005-04-09 02:30:37Z benfry $
  */
 public class CTokenMarker extends TokenMarker
 {

File: app/src/processing/app/syntax/DefaultInputHandler.java
Patch:
@@ -19,7 +19,6 @@
  * The default input handler. It maps sequences of keystrokes into actions
  * and inserts key typed events into the text area.
  * @author Slava Pestov
- * @version $Id: DefaultInputHandler.java 1438 2005-05-11 08:34:16Z benfry $
  */
 public class DefaultInputHandler extends InputHandler
 {

File: app/src/processing/app/syntax/InputHandler.java
Patch:
@@ -24,7 +24,6 @@
  * to the implementations of this class to do so.
  *
  * @author Slava Pestov
- * @version $Id: InputHandler.java 6126 2010-02-16 23:43:53Z fry $
  */
 public abstract class InputHandler extends KeyAdapter
 {

File: app/src/processing/app/syntax/JEditTextArea.java
Patch:
@@ -55,7 +55,6 @@
  *     + "}");</pre>
  *
  * @author Slava Pestov
- * @version $Id: JEditTextArea.java 6123 2010-02-16 21:43:44Z fry $
  */
 public class JEditTextArea extends JComponent
 {

File: app/src/processing/app/syntax/KeywordMap.java
Patch:
@@ -20,7 +20,6 @@
  * This class is used by <code>CTokenMarker</code> to map keywords to ids.
  *
  * @author Slava Pestov, Mike Dillon
- * @version $Id: KeywordMap.java 2050 2006-03-11 00:50:01Z fry $
  */
 public class KeywordMap
 {

File: app/src/processing/app/syntax/SyntaxDocument.java
Patch:
@@ -18,7 +18,6 @@
  * system.
  *
  * @author Slava Pestov
- * @version $Id: SyntaxDocument.java 1268 2005-04-09 02:30:37Z benfry $
  */
 public class SyntaxDocument extends PlainDocument
 {

File: app/src/processing/app/syntax/SyntaxStyle.java
Patch:
@@ -21,7 +21,6 @@
  * A simple text style class. It can specify the color, italic flag,
  * and bold flag of a run of text.
  * @author Slava Pestov
- * @version $Id: SyntaxStyle.java 4824 2008-10-11 23:41:40Z fry $
  */
 public class SyntaxStyle
 {

File: app/src/processing/app/syntax/SyntaxUtilities.java
Patch:
@@ -20,7 +20,6 @@
  * subsystem.
  *
  * @author Slava Pestov
- * @version $Id: SyntaxUtilities.java 1268 2005-04-09 02:30:37Z benfry $
  */
 public class SyntaxUtilities
 {

File: app/src/processing/app/syntax/TextUtilities.java
Patch:
@@ -14,7 +14,6 @@
 /**
  * Class with several utility functions used by the text area component.
  * @author Slava Pestov
- * @version $Id: TextUtilities.java 1268 2005-04-09 02:30:37Z benfry $
  */
 public class TextUtilities
 {

File: app/src/processing/app/syntax/Token.java
Patch:
@@ -17,7 +17,6 @@
  * token in the text, and a pointer to the next token in the list.
  *
  * @author Slava Pestov
- * @version $Id: Token.java 1268 2005-04-09 02:30:37Z benfry $
  */
 public class Token
 {

File: app/src/processing/app/Serial.java
Patch:
@@ -175,7 +175,7 @@ public void addListener(MessageConsumer consumer) {
   public synchronized void serialEvent(SerialPortEvent serialEvent) {
     if (serialEvent.isRXCHAR()) {
       try {
-        byte[] buf = port.readBytes();
+        byte[] buf = port.readBytes(serialEvent.getEventValue());
         if (buf.length > 0) {
           if (bufferLast == buffer.length) {
             byte temp[] = new byte[bufferLast << 1];

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -547,7 +547,7 @@ static private List getCommandCompilerS(String avrBasePath, List includePaths,
       avrBasePath + "avr-gcc",
       "-c", // compile, don't link
       "-g", // include debugging info (so errors include line numbers)
-      "-assembler-with-cpp",
+      "-x","assembler-with-cpp",
       "-mmcu=" + boardPreferences.get("build.mcu"),
       "-DF_CPU=" + boardPreferences.get("build.f_cpu"),      
       "-DARDUINO=" + Base.REVISION,

File: app/src/processing/app/Preferences.java
Patch:
@@ -231,7 +231,6 @@ static protected void init(String commandLinePrefs) {
 
     // set some runtime constants (not saved on preferences file)
     File hardwareFolder = Base.getHardwareFolder();
-    table.put("runtime.hardware.path", hardwareFolder.getAbsolutePath());
     table.put("runtime.ide.path", hardwareFolder.getParentFile().getAbsolutePath());
     table.put("runtime.ide.version", "" + Base.REVISION);
     

File: app/src/processing/app/Preferences.java
Patch:
@@ -231,7 +231,6 @@ static protected void init(String commandLinePrefs) {
 
     // set some runtime constants (not saved on preferences file)
     File hardwareFolder = Base.getHardwareFolder();
-    table.put("runtime.hardware.path", hardwareFolder.getAbsolutePath());
     table.put("runtime.ide.path", hardwareFolder.getParentFile().getAbsolutePath());
     table.put("runtime.ide.version", "" + Base.REVISION);
     

File: app/src/processing/app/Base.java
Patch:
@@ -1454,7 +1454,6 @@ public void actionPerformed(ActionEvent actionevent) {
           Action subAction = new AbstractAction(_(boardCustomMenu.get(customMenuOption))) {
             public void actionPerformed(ActionEvent e) {
               Preferences.set("custom_" + menuId, ((TargetBoard)getValue("board")).getId() + "_" + getValue("custom_menu_option"));
-              Sketch.buildSettingChanged();
             }
           };
           subAction.putValue("board", board);
@@ -1568,7 +1567,6 @@ private void selectBoard(TargetBoard targetBoard) {
     filterVisibilityOfSubsequentBoardMenus(targetBoard, 1);
 
     onBoardOrPortChange();
-    Sketch.buildSettingChanged();
     rebuildImportMenu(Editor.importMenu);
     rebuildExamplesMenu(Editor.examplesMenu);
   }

File: app/src/processing/app/Editor.java
Patch:
@@ -2007,8 +2007,6 @@ public void internalCloseRunner() {
     try {
       stopHandler.run();
     } catch (Exception e) { }
-
-    sketch.cleanup();
   }
 
 

File: app/src/processing/app/Base.java
Patch:
@@ -357,6 +357,9 @@ public Base(String[] args) throws Exception {
           currentDirectory = args[i];
         continue;
       }
+      if (args[i].startsWith("--"))
+        showError(null, I18n.format(_("unknown option: {0}"), args[i]), null);
+
       String path = args[i];
       // Fix a problem with systems that use a non-ASCII languages. Paths are
       // being passed in with 8.3 syntax, which makes the sketch loader code

File: app/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -89,9 +89,7 @@ public boolean uploadUsingPreferences(File sourcePath, String buildPath, String
           // otherwise assert DTR, which would cancel the WDT reset if
           // it happened within 250 ms. So we wait until the reset should
           // have already occured before we start scanning.
-          if (!Base.isMacOS())
-            Thread.sleep(300);
-
+          Thread.sleep(300);
           uploadPort = waitForUploadPort(uploadPort, before);
         } else {
           Thread.sleep(400);

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -452,7 +452,7 @@ public void keyTyped(KeyEvent event) {
       add(progressBar);
       progressBar.setVisible(false);
       
-      copyErrorButton = new JButton(_("Copy error"));
+      copyErrorButton = new JButton(_("Copy error messages"));
       add(copyErrorButton);
       copyErrorButton.setVisible(false);
       copyErrorButton.addActionListener(new ActionListener() {

File: app/test/processing/app/macosx/SystemProfilerParserTest.java
Patch:
@@ -43,5 +43,7 @@ public void shouldCorrectlyParse() throws Exception {
 
     assertEquals("0X2341_0X8036", new SystemProfilerParser().extractVIDAndPID(output, "/dev/cu.usbmodem24131"));
     assertEquals("0X2341_0X8036", new SystemProfilerParser().extractVIDAndPID(output, "/dev/tty.usbmodem24131"));
+    assertEquals("0X0403_0X6015", new SystemProfilerParser().extractVIDAndPID(output, "/dev/cu.usbserial-DN0031EV"));
+    assertEquals("0X0403_0X6015", new SystemProfilerParser().extractVIDAndPID(output, "/dev/tty.usbserial-DN0031EV"));
   }
 }

File: app/src/processing/app/Editor.java
Patch:
@@ -452,7 +452,6 @@ protected void applyPreferences() {
     // apply changes to the font size for the editor
     //TextAreaPainter painter = textarea.getPainter();
     painter.setFont(Preferences.getFont("editor.font"));
-    textarea.setLineNumbersFont(Preferences.getFont("editor.font"));
     //Font font = painter.getFont();
     //textarea.getPainter().setFont(new Font("Courier", Font.PLAIN, 36));
 

File: app/src/processing/app/Sketch.java
Patch:
@@ -187,6 +187,8 @@ protected void load() {
           if (Sketch.isSanitaryName(base)) {
             code[codeCount++] =
               new SketchCode(new File(folder, filename), extension);
+          } else {
+            editor.console.message(I18n.format("File name {0} is invalid: ignored", filename), true, false);
           }
         }
       }

File: app/src/processing/app/Sketch.java
Patch:
@@ -1424,10 +1424,7 @@ public String preprocess(String buildPath, PdePreprocessor preprocessor) throws
 
     importedLibraries = new LibraryList();
     for (String item : preprocessor.getExtraImports()) {
-
       Library lib = Base.importToLibraryTable.get(item);
-      //If needed can Debug libraryPath here
-
       if (lib != null && !importedLibraries.contains(lib)) {
         importedLibraries.add(lib);
       }

File: app/src/processing/app/macosx/Platform.java
Patch:
@@ -232,7 +232,7 @@ public String preListAllCandidateDevices() {
       CommandLine toDevicePath = CommandLine.parse("/usr/sbin/system_profiler SPUSBDataType");
       executor.execute(toDevicePath);
       return new String(baos.toByteArray());
-    } catch (IOException e) {
+    } catch (Throwable e) {
       return super.preListAllCandidateDevices();
     }
   }

File: app/src/processing/app/windows/Platform.java
Patch:
@@ -345,7 +345,7 @@ public String preListAllCandidateDevices() {
       CommandLine toDevicePath = CommandLine.parse(listComPorts);
       executor.execute(toDevicePath);
       return new String(baos.toByteArray());
-    } catch (IOException e) {
+    } catch (Throwable e) {
       return super.preListAllCandidateDevices();
     }
   }

File: app/src/processing/app/NetworkMonitor.java
Patch:
@@ -127,7 +127,7 @@ public synchronized void message(String s) {
         }
       }
       if (connectionAttempts < MAX_CONNECTION_ATTEMPTS) {
-        s = "\n" + _("Unable to connect: retrying (" + connectionAttempts + ")... ");
+        s = "\n" + _("Unable to connect: retrying") + " (" + connectionAttempts + ")... ";
 
         SwingUtilities.invokeLater(new Runnable() {
           @Override

File: app/src/processing/app/Preferences.java
Patch:
@@ -270,8 +270,8 @@ static protected void init(String commandLinePrefs) {
     try {
       I18n.init(Preferences.get("editor.languages.current"));
     } catch (MissingResourceException e) {
-      I18n.init("");
-      Preferences.set("editor.languages.current", "");
+      I18n.init("en");
+      Preferences.set("editor.languages.current", "en");
     }
 
     // set some other runtime constants (not saved on preferences file)

File: app/src/processing/app/Preferences.java
Patch:
@@ -270,8 +270,8 @@ static protected void init(String commandLinePrefs) {
     try {
       I18n.init(Preferences.get("editor.languages.current"));
     } catch (MissingResourceException e) {
-      I18n.init("");
-      Preferences.set("editor.languages.current", "");
+      I18n.init("en");
+      Preferences.set("editor.languages.current", "en");
     }
 
     // set some other runtime constants (not saved on preferences file)

File: app/src/cc/arduino/packages/Uploader.java
Patch:
@@ -31,6 +31,7 @@
 import processing.app.debug.MessageConsumer;
 import processing.app.debug.MessageSiphon;
 import processing.app.debug.RunnerException;
+import processing.app.helpers.ProcessUtils;
 import processing.app.helpers.StringUtils;
 
 import java.io.File;
@@ -98,7 +99,7 @@ protected boolean executeUploadCommand(String command[]) throws Exception {
           System.out.print(c + " ");
         System.out.println();
       }
-      Process process = Runtime.getRuntime().exec(command);
+      Process process = ProcessUtils.exec(command);
       new MessageSiphon(process.getInputStream(), this);
       new MessageSiphon(process.getErrorStream(), this);
 

File: app/src/cc/arduino/packages/uploaders/SerialUploader.java
Patch:
@@ -33,7 +33,6 @@
 import processing.app.debug.RunnerException;
 import processing.app.debug.TargetPlatform;
 import processing.app.helpers.PreferencesMap;
-import processing.app.helpers.PreferencesMapException;
 import processing.app.helpers.StringReplacer;
 
 import java.io.File;

File: app/src/processing/app/Editor.java
Patch:
@@ -650,6 +650,7 @@ public void actionPerformed(ActionEvent e) {
 
     if (importMenu == null) {
       importMenu = new JMenu(_("Import Library..."));
+      MenuScroller.setScrollerFor(importMenu);
       base.rebuildImportMenu(importMenu, this);
     }
     sketchMenu.add(importMenu);

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -39,6 +39,7 @@
 import processing.app.Sketch;
 import processing.app.SketchCode;
 import processing.app.helpers.PreferencesMap;
+import processing.app.helpers.ProcessUtils;
 import processing.app.helpers.StringReplacer;
 import processing.app.helpers.filefilters.OnlyDirs;
 import processing.app.packages.Library;
@@ -343,9 +344,8 @@ private void execAsynchronously(String[] command) throws RunnerException {
     secondErrorFound = false;
 
     Process process;
-    
     try {
-      process = Runtime.getRuntime().exec(command);
+      process = ProcessUtils.exec(command);
     } catch (IOException e) {
       RunnerException re = new RunnerException(e.getMessage());
       re.hideStackTrace();

File: app/src/processing/app/debug/Sizer.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.regex.Pattern;
 
 import processing.app.helpers.PreferencesMap;
+import processing.app.helpers.ProcessUtils;
 import processing.app.helpers.StringReplacer;
 
 public class Sizer implements MessageConsumer {
@@ -67,7 +68,7 @@ public long[] computeSize() throws RunnerException {
       textSize = -1;
       dataSize = -1;
       eepromSize = -1;
-      Process process = Runtime.getRuntime().exec(cmd);
+      Process process = ProcessUtils.exec(cmd);
       MessageSiphon in = new MessageSiphon(process.getInputStream(), this);
       MessageSiphon err = new MessageSiphon(process.getErrorStream(), this);
 

File: app/src/processing/app/linux/Platform.java
Patch:
@@ -108,9 +108,9 @@ public boolean openFolderAvailable() {
 
   public void openFolder(File file) throws Exception {
     if (openFolderAvailable()) {
-      String lunch = Preferences.get("launcher");
+      String launcher = Preferences.get("launcher");
       try {
-        String[] params = new String[] { lunch, file.getAbsolutePath() };
+        String[] params = new String[] { launcher, file.getAbsolutePath() };
         //processing.core.PApplet.println(params);
         /*Process p =*/ Runtime.getRuntime().exec(params);
         /*int result =*/ //p.waitFor();

File: app/src/processing/app/Editor.java
Patch:
@@ -646,6 +646,7 @@ public void actionPerformed(ActionEvent e) {
 
     if (importMenu == null) {
       importMenu = new JMenu(_("Import Library..."));
+      MenuScroller.setScrollerFor(importMenu);
       base.rebuildImportMenu(importMenu, this);
     }
     sketchMenu.add(importMenu);

File: app/src/processing/app/linux/Platform.java
Patch:
@@ -105,9 +105,9 @@ public boolean openFolderAvailable() {
 
   public void openFolder(File file) throws Exception {
     if (openFolderAvailable()) {
-      String lunch = Preferences.get("launcher");
+      String launcher = Preferences.get("launcher");
       try {
-        String[] params = new String[] { lunch, file.getAbsolutePath() };
+        String[] params = new String[] { launcher, file.getAbsolutePath() };
         //processing.core.PApplet.println(params);
         /*Process p =*/ Runtime.getRuntime().exec(params);
         /*int result =*/ //p.waitFor();

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -39,6 +39,7 @@
 import processing.app.Sketch;
 import processing.app.SketchCode;
 import processing.app.helpers.PreferencesMap;
+import processing.app.helpers.ProcessUtils;
 import processing.app.helpers.StringReplacer;
 import processing.app.helpers.filefilters.OnlyDirs;
 import processing.app.packages.Library;
@@ -343,9 +344,8 @@ private void execAsynchronously(String[] command) throws RunnerException {
     secondErrorFound = false;
 
     Process process;
-    
     try {
-      process = Runtime.getRuntime().exec(command);
+      process = ProcessUtils.exec(command);
     } catch (IOException e) {
       RunnerException re = new RunnerException(e.getMessage());
       re.hideStackTrace();

File: app/src/processing/app/debug/Sizer.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.regex.Pattern;
 
 import processing.app.helpers.PreferencesMap;
+import processing.app.helpers.ProcessUtils;
 import processing.app.helpers.StringReplacer;
 
 public class Sizer implements MessageConsumer {
@@ -67,7 +68,7 @@ public long[] computeSize() throws RunnerException {
       textSize = -1;
       dataSize = -1;
       eepromSize = -1;
-      Process process = Runtime.getRuntime().exec(cmd);
+      Process process = ProcessUtils.exec(cmd);
       MessageSiphon in = new MessageSiphon(process.getInputStream(), this);
       MessageSiphon err = new MessageSiphon(process.getErrorStream(), this);
 

File: app/src/processing/app/debug/Uploader.java
Patch:
@@ -36,6 +36,7 @@
 import processing.app.Preferences;
 import processing.app.Serial;
 import processing.app.SerialNotFoundException;
+import processing.app.helpers.ProcessUtils;
 
 public abstract class Uploader implements MessageConsumer  {
   static final String BUGS_URL =
@@ -107,7 +108,7 @@ protected boolean executeUploadCommand(String commandArray[])
         }
         System.out.println();
       }
-      Process process = Runtime.getRuntime().exec(commandArray);
+      Process process = ProcessUtils.exec(commandArray);
       new MessageSiphon(process.getInputStream(), this);
       new MessageSiphon(process.getErrorStream(), this);
 

File: app/src/processing/app/Sketch.java
Patch:
@@ -24,7 +24,6 @@
 package processing.app;
 
 import cc.arduino.packages.UploaderAndMonitorFactory;
-import org.apache.commons.codec.digest.DigestUtils;
 
 import cc.arduino.packages.Uploader;
 import processing.app.debug.*;
@@ -1583,7 +1582,7 @@ protected boolean exportApplet(boolean usingProgrammer) throws Exception {
    * Handle export to applet.
    */
   public boolean exportApplet(String appletPath, boolean usingProgrammer)
-    throws RunnerException, IOException {
+    throws Exception {
 
     prepare();
 
@@ -1661,7 +1660,7 @@ protected void size(PreferencesMap prefs) throws RunnerException {
 	  System.out.println(_("Low memory available, stability problems may occur"));
   }
 
-  protected boolean upload(String buildPath, String suggestedClassName, boolean usingProgrammer) throws RunnerException {
+  protected boolean upload(String buildPath, String suggestedClassName, boolean usingProgrammer) throws Exception {
 
     TargetPlatform target = Base.getTargetPlatform();
     String board = Preferences.get("board");

File: app/src/processing/app/debug/BasicUploader.java
Patch:
@@ -51,7 +51,7 @@ public boolean uploadUsingPreferences(String buildPath, String className,
     TargetPlatform targetPlatform = Base.getTargetPlatform();
     PreferencesMap prefs = Preferences.getMap();
     prefs.putAll(Base.getBoardPreferences());
-    prefs.putAll(targetPlatform.getTool(prefs.get("upload.tool")));
+    prefs.putAll(targetPlatform.getTool(prefs.getOrExcept("upload.tool")));
 
     // if no protocol is specified for this board, assume it lacks a 
     // bootloader and upload using the selected programmer.

File: app/src/processing/app/Sketch.java
Patch:
@@ -1581,7 +1581,7 @@ protected boolean exportApplet(boolean usingProgrammer) throws Exception {
    * Handle export to applet.
    */
   public boolean exportApplet(String appletPath, boolean usingProgrammer)
-    throws RunnerException, IOException, SerialException {
+    throws Exception {
 
     prepare();
       
@@ -1660,7 +1660,7 @@ protected void size(PreferencesMap prefs) throws RunnerException {
   }
 
   protected String upload(String buildPath, String suggestedClassName, boolean usingProgrammer)
-    throws RunnerException, SerialException {
+    throws Exception {
 
     Uploader uploader;
 

File: app/src/processing/app/Sketch.java
Patch:
@@ -1634,12 +1634,12 @@ protected void size(PreferencesMap prefs) throws RunnerException {
     long textSize = sizes[0];
     long dataSize = sizes[1];
     System.out.println(I18n
-                       .format(_("Binary sketch size: {0} bytes (of a {1} byte maximum) - {2}% used"),
+                       .format(_("Binary sketch size: {0} bytes (of a {1} byte maximum) - {2}%% used"),
                                textSize, maxTextSize, textSize * 100 / maxTextSize));
     if (dataSize >= 0) {
       if (maxDataSize > 0) {
         System.out.println(I18n.format(
-                        _("Minimum Memory usage: {0} bytes (of a {1} byte maximum) - {2}% used"),
+                        _("Minimum Memory usage: {0} bytes (of a {1} byte maximum) - {2}%% used"),
                         dataSize, maxDataSize, dataSize * 100 / maxDataSize));
       } else {
         System.out.println(I18n.format(_("Minimum Memory usage: {0} bytes"), dataSize));

File: app/src/processing/app/Sketch.java
Patch:
@@ -1677,7 +1677,7 @@ protected boolean upload(String buildPath, String suggestedClassName, boolean us
           return false;
         }
 
-        Preferences.set(uploader.getAuthorizationKey(), DigestUtils.sha512Hex(dialog.getPassword()));
+        Preferences.set(uploader.getAuthorizationKey(), DigestUtils.sha256Hex(dialog.getPassword()));
       }
 
       success = uploader.uploadUsingPreferences(buildPath, suggestedClassName, usingProgrammer);

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -125,7 +125,7 @@ public void unnotice(String unmessage) {
   public void error(String message) {
     mode = ERR;
     this.message = message;
-//    copyErrorButton.setVisible(true);
+    copyErrorButton.setVisible(true);
     repaint();
   }
 
@@ -196,7 +196,7 @@ public void progressIndeterminate(String message)
     progressBar.setIndeterminate(true);
     progressBar.setValue(50);
     progressBar.setVisible(true);
-//    copyErrorButton.setVisible(false);
+    copyErrorButton.setVisible(false);
     setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
     repaint();
   }

File: app/src/processing/app/debug/AvrdudeUploader.java
Patch:
@@ -183,6 +183,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
     // bootloader port.
     if (true == avrdudeResult && boardPreferences.get("bootloader.path") != null &&
         (boardPreferences.get("bootloader.path").equals("caterina") ||
+         boardPreferences.get("bootloader.path").equals("caterina-Arduino_Robot") ||
          boardPreferences.get("bootloader.path").equals("caterina-LilyPadUSB"))) {
       try {
         Thread.sleep(500);

File: app/src/processing/app/debug/AvrdudeUploader.java
Patch:
@@ -87,6 +87,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
     // sketch.
     if (boardPreferences.get("bootloader.path") != null &&
         (boardPreferences.get("bootloader.path").equals("caterina") ||
+         boardPreferences.get("bootloader.path").equals("caterina-Arduino_Robot") ||
          boardPreferences.get("bootloader.path").equals("caterina-LilyPadUSB"))) {
       String caterinaUploadPort = null;
       try {

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -125,7 +125,7 @@ public void unnotice(String unmessage) {
   public void error(String message) {
     mode = ERR;
     this.message = message;
-    copyErrorButton.setVisible(true);
+//    copyErrorButton.setVisible(true);
     repaint();
   }
 
@@ -196,7 +196,7 @@ public void progressIndeterminate(String message)
     progressBar.setIndeterminate(true);
     progressBar.setValue(50);
     progressBar.setVisible(true);
-    copyErrorButton.setVisible(false);
+//    copyErrorButton.setVisible(false);
     setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
     repaint();
   }

File: app/src/processing/app/EditorListener.java
Patch:
@@ -131,8 +131,7 @@ public boolean keyPressed(KeyEvent event) {
 
       // The char is not control code when CTRL key pressed? It should be a shortcut.
       if (!Character.isISOControl(c)) {
-        event.consume();
-        return true;
+        return false;
       }
     }
 

File: app/src/processing/app/Editor.java
Patch:
@@ -177,7 +177,7 @@ public void windowActivated(WindowEvent e) {
           // re-add the sub-menus that are shared by all windows
           fileMenu.insert(sketchbookMenu, 2);
           fileMenu.insert(examplesMenu, 3);
-          //sketchMenu.insert(importMenu, 4);
+          sketchMenu.insert(importMenu, 4);
           toolsMenu.insert(boardsMenu, numTools);
           toolsMenu.insert(serialMenu, numTools + 1);
         }
@@ -188,7 +188,7 @@ public void windowDeactivated(WindowEvent e) {
 //          System.err.println("deactivate");  // not coming through
           fileMenu.remove(sketchbookMenu);
           fileMenu.remove(examplesMenu);
-          //sketchMenu.remove(importMenu);
+          sketchMenu.remove(importMenu);
           toolsMenu.remove(boardsMenu);
           toolsMenu.remove(serialMenu);
         }

File: app/src/processing/app/Base.java
Patch:
@@ -28,6 +28,7 @@
 import java.util.*;
 
 import javax.swing.*;
+import javax.swing.filechooser.FileNameExtensionFilter;
 
 import processing.app.debug.Compiler;
 import processing.app.debug.Target;
@@ -2380,6 +2381,7 @@ public void handleAddLibrary(Editor editor) {
     JFileChooser fileChooser = new JFileChooser(System.getProperty("user.home"));
     fileChooser.setDialogTitle(_("Select a zip file or a folder containing the library you'd like to add"));
     fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
+    fileChooser.setFileFilter(new FileNameExtensionFilter("ZIP files or folders", "zip"));
 
     Dimension preferredSize = fileChooser.getPreferredSize();
     fileChooser.setPreferredSize(new Dimension(preferredSize.width + 200, preferredSize.height + 200));
@@ -2426,7 +2428,7 @@ public void handleAddLibrary(Editor editor) {
       // copy folder
       File destinationFolder = new File(getSketchbookLibrariesFolder(), sourceFile.getName());
       if (!destinationFolder.mkdir()) {
-        editor.statusError("Can't create folder: " + sourceFile.getName() + " into libraries folder");
+        editor.statusError("A library named " + sourceFile.getName() + " already exists");
         return;
       }
       try {

File: app/src/processing/app/debug/UploaderFactory.java
Patch:
@@ -9,7 +9,7 @@ public class UploaderFactory {
 
   public Uploader newUploader(Map<String, String> preferences, String port) {
     if ("true".equals(preferences.get("upload.via_http")) && IPV4_ADDRESS.matcher(port).find()) {
-      return new HttpUploader();
+      return new HttpUploader(port);
     }
 
     return new BasicUploader();

File: app/src/processing/app/Sketch.java
Patch:
@@ -734,7 +734,7 @@ public boolean accept(File dir, String name) {
           int result = JOptionPane.showOptionDialog(editor,
                                                     _("In Arduino 1.0, the default file extension has changed\n" +
                                                       "from .pde to .ino.  New sketches (including those created\n" +
-                                                      "by \"Save-As\" will use the new extension.  The extension\n" +
+                                                      "by \"Save-As\") will use the new extension.  The extension\n" +
                                                       "of existing sketches will be updated on save, but you can\n" +
                                                       "disable this in the Preferences dialog.\n" +
                                                       "\n" +

File: app/test/processing/app/I18NTest.java
Patch:
@@ -9,7 +9,7 @@ public class I18NTest {
 
   private Set<String> loadReferenceI18NKeys() throws IOException {
     Properties properties = new Properties();
-    properties.putAll(loadProperties(new File(I18NTest.class.getResource("./Resources_en.properties").getFile())));
+    properties.putAll(loadProperties(new File(I18NTest.class.getResource("./i18n/Resources_en.properties").getFile())));
     Set<String> keys = new HashSet<String>();
     for (Object key : properties.keySet()) {
       keys.add(key.toString());

File: app/src/processing/app/Base.java
Patch:
@@ -1278,9 +1278,10 @@ public void rebuildBoardsMenu(JMenu toolsMenu, Editor editor) throws Exception {
               continue;
             boolean firstRefBoardBlock = true;
             for (TargetBoard board : platf.getBoards().values()) {
-              if (board.getReferencedPackageId() == null)
+              String ref = board.getReferencedPackageId();
+              if (ref == null || !ref.equals(targetPackage.getId()))
                 continue;
-
+              
               // Add a separator from the previous platform
               if (firstRefBoardBlock)
                 boardsMenu.add(new JSeparator());

File: app/src/processing/app/syntax/PdeKeywords.java
Patch:
@@ -98,7 +98,7 @@ static private void getKeywords(InputStream input) throws Exception {
         //String htmlFilename = second.substring(tab + 1).trim();
         String coloring = pieces[1].trim();
 
-        if (coloring.length() > 0) {
+        if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {
           // text will be KEYWORD or LITERAL
           boolean isKey = (coloring.charAt(0) == 'K');
           // KEYWORD1 -> 0, KEYWORD2 -> 1, etc

File: app/src/processing/app/Sketch.java
Patch:
@@ -1124,7 +1124,7 @@ public boolean addFile(File sourceFile) {
    * Add import statements to the current tab for all of packages inside
    * the specified jar file.
    */
-  public void importLibrary(String jarPath) {
+  public void importLibrary(String jarPath) throws IOException {
     // make sure the user didn't hide the sketch folder
     ensureExistence();
 

File: app/src/processing/app/Sketch.java
Patch:
@@ -1128,7 +1128,7 @@ public boolean addFile(File sourceFile) {
    * Add import statements to the current tab for all of packages inside
    * the specified jar file.
    */
-  public void importLibrary(String jarPath) {
+  public void importLibrary(String jarPath) throws IOException {
     // make sure the user didn't hide the sketch folder
     ensureExistence();
 

File: app/src/processing/app/debug/TargetPlatform.java
Patch:
@@ -41,7 +41,6 @@ public class TargetPlatform {
   private MapWithSubkeys customMenus;
 
   public TargetPlatform(String _name, File _folder) {
-    System.out.println("TargetPlatform: constructor start, name: " + _name);
     name = _name;
     folder = _folder;
     boards = new HashMap<String, PreferencesMap>();

File: app/src/processing/app/Preferences.java
Patch:
@@ -213,7 +213,6 @@ static protected void init(String commandLinePrefs) {
     }
 
     // set some runtime constants (not saved on preferences file)
-    table.put("runtime.os", PConstants.platformNames[PApplet.platform]);
     File hardwareFolder = Base.getHardwareFolder();
     table.put("runtime.hardware.path", hardwareFolder.getAbsolutePath());
     table.put("runtime.ide.path", hardwareFolder.getParentFile().getAbsolutePath());
@@ -277,6 +276,9 @@ static protected void init(String commandLinePrefs) {
     // load the I18n module for internationalization
     I18n.init(Preferences.get("editor.languages.current"));
 
+    // set some other runtime constants (not saved on preferences file)
+    table.put("runtime.os", PConstants.platformNames[PApplet.platform]);
+
     // other things that have to be set explicitly for the defaults
     setColor("run.window.bgcolor", SystemColor.control);
   }

File: app/src/processing/app/EditorStatus.java
Patch:
@@ -290,8 +290,8 @@ public void paintComponent(Graphics screen) {
 
   protected void setup() {
     if (okButton == null) {
-      cancelButton = new JButton(Preferences.PROMPT_CANCEL);
-      okButton = new JButton(Preferences.PROMPT_OK);
+      cancelButton = new JButton(I18n.PROMPT_CANCEL);
+      okButton = new JButton(I18n.PROMPT_OK);
 
       cancelButton.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {

File: app/src/processing/app/Sketch.java
Patch:
@@ -612,7 +612,7 @@ public void handleDeleteCode() {
 
       } else {
         // delete the file
-        if (!current.deleteFile()) {
+        if (!current.deleteFile(tempBuildFolder)) {
           Base.showMessage(_("Couldn't do it"),
                            I18n.format(_("Could not delete \"{0}\"."), current.getFileName()));
           return;

File: app/src/processing/app/Base.java
Patch:
@@ -1052,7 +1052,7 @@ public void rebuildExamplesMenu(JMenu menu) {
         File folder = ideLibs.get(name);
         addSketchesSubmenu(menu, name, folder, false);
         // Allows "fat" libraries to have examples in the root folder
-        if (folder.getName().equals(Base.getTargetPlatform()))
+        if (folder.getName().equals(Base.getTargetPlatform().getName()))
           addSketchesSubmenu(menu, name, folder.getParentFile(), false);
       }
 

File: app/src/processing/app/Base.java
Patch:
@@ -1232,7 +1232,7 @@ public void actionPerformed(ActionEvent actionevent) {
                 for (final String customMenuOption : boardCustomMenu.getKeys()) {
                   @SuppressWarnings("serial")
                   Action subAction = new AbstractAction(_(boardCustomMenu.getValueOf(customMenuOption))) {
-                    @Override
+
                     public void actionPerformed(ActionEvent e) {
                       Preferences.set("target_package", (String) getValue("package"));
                       Preferences.set("target_platform", (String) getValue("platform"));

File: app/format/src/AutoFormat.java
Patch:
@@ -34,7 +34,7 @@
  * <A HREF="http://jalopy.sourceforge.net/">Jalopy</A>. This is to replace
  * the buggy code formatter found in previous releases.
  */
-public class AutoFormat {
+  public class AutoFormat {
   Editor editor;
 
 

File: app/src/processing/app/helpers/filefilters/OnlyDirs.java
Patch:
@@ -32,7 +32,6 @@
  */
 public class OnlyDirs implements FilenameFilter {
 
-	@Override
 	public boolean accept(File dir, String name) {
 		if (name.charAt(0) == '.')
 			return false;

File: app/src/processing/app/helpers/filefilters/OnlyFilesWithExtension.java
Patch:
@@ -32,7 +32,6 @@ public OnlyFilesWithExtension(String... ext) {
     extensions = ext;
   }
 
-  @Override
   public boolean accept(File dir, String name) {
     for (String ext : extensions)
       if (name.endsWith(ext))

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -38,7 +38,7 @@
 
 public class Compiler implements MessageConsumer {
   static final String BUGS_URL =
-    _("http://code.google.com/p/arduino/issues/list");
+    _("http://github.com/arduino/Arduino/issues");
   static final String SUPER_BADNESS =
     I18n.format(_("Compiler error, please submit this code to {0}"), BUGS_URL);
 

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -44,7 +44,7 @@
 
 public class Compiler implements MessageConsumer {
   static final String BUGS_URL =
-    _("http://code.google.com/p/arduino/issues/list");
+    _("http://github.com/arduino/Arduino/issues");
   static final String SUPER_BADNESS =
     I18n.format(_("Compiler error, please submit this code to {0}"), BUGS_URL);
 

File: app/src/processing/app/debug/Uploader.java
Patch:
@@ -102,11 +102,11 @@ protected boolean executeUploadCommand(String commandArray[])
     int result=0; // pre-initialized to quiet a bogus warning from jikes
     
     try {
+      if (verbose || Preferences.getBoolean("upload.verbose")) {
         for(int i = 0; i < commandArray.length; i++) {
           System.out.print(commandArray[i] + " ");
         }
         System.out.println();
-        if (verbose || Preferences.getBoolean("upload.verbose")) {
       }
       Process process = Runtime.getRuntime().exec(commandArray);
       new MessageSiphon(process.getInputStream(), this);

File: app/src/processing/app/Base.java
Patch:
@@ -1146,7 +1146,7 @@ public void rebuildBoardsMenu(JMenu toolsMenu, final Editor editor) {
         String platformName = targetPlatform.getName();
         Map<String, PreferencesMap> boards = targetPlatform.getBoards();
 
-        if (targetPlatform.getPreferences().get("name") == null || targetPlatform.getOrderedBoards().isEmpty()) {
+        if (targetPlatform.getPreferences().get("name") == null || targetPlatform.getBoards().isEmpty()) {
           continue;
         }
         
@@ -1161,7 +1161,7 @@ public void rebuildBoardsMenu(JMenu toolsMenu, final Editor editor) {
         boardsMenu.add(separator);
         
         // For every platform cycle through all boards
-        for (final String boardID : targetPlatform.getOrderedBoards()) {
+        for (final String boardID : targetPlatform.getBoards().keySet()) {
           
           PreferencesMap boardAttributes = boards.get(boardID);
 

File: app/src/processing/app/Base.java
Patch:
@@ -29,6 +29,7 @@
 import java.util.List;
 
 import javax.swing.*;
+import javax.swing.filechooser.FileNameExtensionFilter;
 
 import processing.app.debug.TargetPackage;
 import processing.app.debug.TargetPlatform;
@@ -2611,6 +2612,7 @@ public void handleAddLibrary(Editor editor) {
     JFileChooser fileChooser = new JFileChooser(System.getProperty("user.home"));
     fileChooser.setDialogTitle(_("Select a zip file or a folder containing the library you'd like to add"));
     fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
+    fileChooser.setFileFilter(new FileNameExtensionFilter("ZIP files or folders", "zip"));
 
     Dimension preferredSize = fileChooser.getPreferredSize();
     fileChooser.setPreferredSize(new Dimension(preferredSize.width + 200, preferredSize.height + 200));
@@ -2657,7 +2659,7 @@ public void handleAddLibrary(Editor editor) {
       // copy folder
       File destinationFolder = new File(getSketchbookLibrariesFolder(), sourceFile.getName());
       if (!destinationFolder.mkdir()) {
-        editor.statusError("Can't create folder: " + sourceFile.getName() + " into libraries folder");
+        editor.statusError("A library named " + sourceFile.getName() + " already exists");
         return;
       }
       try {

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -654,8 +654,8 @@ void compileLink(List<String> includePaths)
     objectFileList = objectFileList.substring(1);
 
     PreferencesMap dict = new PreferencesMap(prefs);
-    dict.put("compiler.c.elf.flags", dict
-        .get("compiler.c.elf.flags" + optRelax));
+    String flags = dict.get("compiler.c.elf.flags") + optRelax;
+    dict.put("compiler.c.elf.flags", flags);
     dict.put("archive_file", "core.a");
     dict.put("object_files", objectFileList);
     dict.put("ide_version", "" + Base.REVISION);

File: app/src/processing/app/Editor.java
Patch:
@@ -693,7 +693,7 @@ public void actionPerformed(ActionEvent e) {
     
     if (boardsMenu == null) {
       boardsMenu = new JMenu(_("Board"));
-      cpuTypeMenu = new JMenu(_("CPUType"));
+      cpuTypeMenu = new JMenu(_("Processor"));
       base.rebuildBoardsMenu(boardsMenu, cpuTypeMenu);
       //Debug: rebuild imports
       importMenu.removeAll();

File: app/src/processing/app/preproc/PdePreprocessor.java
Patch:
@@ -205,7 +205,8 @@ protected void writeProgram(PrintStream out, String program, List<String> protot
     for (int i = 0; i < prototypes.size(); i++) {
       out.print(prototypes.get(i) + "\n");
     }
-    out.println("#line 1");
+    String[] lines = program.substring(0, prototypeInsertionPoint).split("\n", -1);
+    out.println("#line " + (lines.length - 1));
     out.print(program.substring(prototypeInsertionPoint));
   }
 

File: app/src/processing/app/debug/BasicUploader.java
Patch:
@@ -198,7 +198,7 @@ private String waitForUploadPort(String uploadPort, List<String> before)
     
     // Something happened while detecting port
     throw new RunnerException(
-        _("Couldn’t find a Leonardo on the selected port. Check that you have the correct port selected.  If it is correct, try pressing the board's reset button after initiating the upload."));
+        _("Couldn't find a Board on the selected port. Check that you have the correct port selected.  If it is correct, try pressing the board's reset button after initiating the upload."));
   }
 
   public boolean uploadUsingProgrammer(String buildPath, String className)

File: app/src/processing/app/tools/AutoFormat.java
Patch:
@@ -642,9 +642,6 @@ public void run() {
           int count = 0;
           while(cc != c && EOF == 0)
           {
-            if (++count % 100000 == 0) {
-              System.err.println("Stuck: " + count);
-            }
             // max. length of line should be 256
             string[j++] = cc;
 

File: app/src/processing/app/preproc/PdePreprocessor.java
Patch:
@@ -110,7 +110,7 @@ public int writePrefix(String program, String buildPath,
     }
 
     //String importRegexp = "(?:^|\\s|;)(import\\s+)(\\S+)(\\s*;)";
-    String importRegexp = "^\\s*#include\\s+[<\"](\\S+)[\">]";
+    String importRegexp = "^\\s*#include\\s*[<\"](\\S+)[\">]";
     programImports = new ArrayList<String>();
 
     String[][] pieces = PApplet.matchAll(program, importRegexp);

File: app/src/processing/app/tools/AutoFormat.java
Patch:
@@ -241,7 +241,7 @@ public void putcoms()
   public void cpp_comment() throws IOException
   {
     c = getchr();
-    while(c != '\n' && c != '\r' && j<133)
+    while(c != '\n' && c != '\r')
     {
       string[j++] = c;
       c = getchr();

File: app/src/processing/app/SerialMonitor.java
Patch:
@@ -127,10 +127,10 @@ public void actionPerformed(ActionEvent event) {
     
     serialRates = new JComboBox();
     for (int i = 0; i < serialRateStrings.length; i++)
-      serialRates.addItem(serialRateStrings[i] + _(" baud"));
+      serialRates.addItem(serialRateStrings[i] + " " + _("baud"));
 
     serialRate = Preferences.getInteger("serial.debug_rate");
-    serialRates.setSelectedItem(serialRate + _(" baud"));
+    serialRates.setSelectedItem(serialRate + " " + _("baud"));
     serialRates.addActionListener(new ActionListener() {
       public void actionPerformed(ActionEvent event) {
         String wholeString = (String) serialRates.getSelectedItem();

File: app/src/processing/app/debug/AvrdudeUploader.java
Patch:
@@ -85,7 +85,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
     // this wait a moment for the bootloader to enumerate. On Windows, also must
     // deal with the fact that the COM port number changes from bootloader to
     // sketch.
-    if (boardPreferences.get("bootloader.path").equals("caterina")) {
+    if (boardPreferences.get("bootloader.path") != null && boardPreferences.get("bootloader.path").equals("caterina")) {
       String caterinaUploadPort = null;
       try {
         // Toggle 1200 bps on selected serial port to force board reset.
@@ -178,7 +178,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
 	// port reconnects (or timeout after a few seconds if the sketch port never comes back).
 	// Doing this saves users from accidentally opening Serial Monitor on the soon-to-be-orphaned
 	// bootloader port.
-    if (true == avrdudeResult && boardPreferences.get("bootloader.path").equals("caterina")) {
+    if (true == avrdudeResult && boardPreferences.get("bootloader.path") != null && boardPreferences.get("bootloader.path").equals("caterina")) {
     	try {
     		Thread.sleep(500);
     	} catch (InterruptedException ex) { } 

File: app/src/processing/app/debug/AvrdudeUploader.java
Patch:
@@ -85,7 +85,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
     // this wait a moment for the bootloader to enumerate. On Windows, also must
     // deal with the fact that the COM port number changes from bootloader to
     // sketch.
-    if (boardPreferences.get("bootloader.path").equals("caterina")) {
+    if (boardPreferences.get("bootloader.path") != null && boardPreferences.get("bootloader.path").equals("caterina")) {
       String caterinaUploadPort = null;
       try {
         // Toggle 1200 bps on selected serial port to force board reset.
@@ -178,7 +178,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
 	// port reconnects (or timeout after a few seconds if the sketch port never comes back).
 	// Doing this saves users from accidentally opening Serial Monitor on the soon-to-be-orphaned
 	// bootloader port.
-    if (true == avrdudeResult && boardPreferences.get("bootloader.path").equals("caterina")) {
+    if (true == avrdudeResult && boardPreferences.get("bootloader.path") != null && boardPreferences.get("bootloader.path").equals("caterina")) {
     	try {
     		Thread.sleep(500);
     	} catch (InterruptedException ex) { } 

File: app/src/processing/app/tools/Archiver.java
Patch:
@@ -56,7 +56,7 @@ public void init(Editor editor) {
     numberFormat.setGroupingUsed(false); // no commas
     numberFormat.setMinimumIntegerDigits(digits);
 
-    dateFormat = new SimpleDateFormat(_("yyMMdd"));
+    dateFormat = new SimpleDateFormat("yyMMdd");
   }
 
 

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -491,7 +491,7 @@ public void message(String s) {
       if (pieces[3].trim().equals("'Udp' was not declared in this scope")) {
         error = _("The Udp class has been renamed EthernetUdp.");
         msg = _("\nAs of Arduino 1.0, the Udp class in the Ethernet library " +
-              "has been renamed to EthernetClient.\n\n");
+              "has been renamed to EthernetUdp.\n\n");
       }
       
       if (pieces[3].trim().equals("'class TwoWire' has no member named 'send'")) {

File: app/src/processing/app/preproc/PdePreprocessor.java
Patch:
@@ -205,7 +205,7 @@ protected void writeProgram(PrintStream out, String program, List<String> protot
     for (int i = 0; i < prototypes.size(); i++) {
       out.print(prototypes.get(i) + "\n");
     }
-    
+    out.println("#line 1");
     out.print(program.substring(prototypeInsertionPoint));
   }
 

File: app/src/processing/app/Preferences.java
Patch:
@@ -86,7 +86,6 @@ public class Preferences {
                         "Català" + " (" + _("Catalan") + ")",
                         "简体中文" + " (" + _("Chinese Simplified") + ")",
                         "繁體中文" + " (" + _("Chinese Traditional") + ")",
-                        "Hrvatski Jezik" + " (" + _("Croatian") + ")",
                         "Dansk" + " (" + _("Danish") + ")",
                         "Nederlands" + " (" + _("Dutch") + ")",
                         "English" + " (" + _("English") + ")",
@@ -121,7 +120,6 @@ public class Preferences {
                         "ca",
                         "zh_cn",
                         "zh_tw",
-                        "hr",
                         "da",
                         "nl",
                         "en",

File: app/src/processing/app/Preferences.java
Patch:
@@ -99,7 +99,7 @@ public class Preferences {
                         "فارسی" + " (" + _("Persian") + ")",
                         "Português" + " (" + _("Portuguese") + ")",
                         "Română" + " (" + _("Romanian") + ")",
-                        "русский" + " (" + _("Russian") + ")",
+                        "Русский" + " (" + _("Russian") + ")",
                         "Español" + " (" + _("Spanish") + ")"};
   String[] languagesISO = {
                         "",

File: app/src/processing/app/I18n.java
Patch:
@@ -25,7 +25,8 @@ public class I18n {
   static protected void init (String language) {
     // there might be a null pointer exception ... most likely will never happen but the jvm gets mad
     try {
-      locale = new Locale(language);
+      if (language == null || language.trim().isEmpty()) locale = Locale.getDefault();
+      else locale = new Locale(language);
       i18n = ResourceBundle.getBundle("processing.app.Resources", locale);
     } catch (java.lang.NullPointerException e) {
     }

File: app/src/processing/app/Preferences.java
Patch:
@@ -112,6 +112,7 @@ public class Preferences {
 
   // language related arrays, please read notes later, where the language combo box is introduced
   String[] languages = {
+                        _("System Default"),
                         _("Catalan"),
                         _("Chinese Simplified"),
                         _("Chinese Taiwan"),
@@ -133,6 +134,7 @@ public class Preferences {
                         _("Russian"),
                         _("Spanish")};
   String[] languagesISO = {
+                        "",
                         "ca",
                         "zh_cn",
                         "zh_tw",

File: app/src/processing/app/debug/AvrdudeUploader.java
Patch:
@@ -81,6 +81,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
     commandDownloader.add(
       "-b" + Integer.parseInt(boardPreferences.get("upload.speed")));
     commandDownloader.add("-D"); // don't erase
+    if (!Preferences.getBoolean("upload.verify")) commandDownloader.add("-V"); // disable verify
     commandDownloader.add("-Uflash:w:" + buildPath + File.separator + className + ".hex:i");
 
     if (boardPreferences.get("upload.disable_flushing") == null ||

File: app/src/processing/app/Editor.java
Patch:
@@ -264,7 +264,9 @@ public void windowDeactivated(WindowEvent e) {
       splitPane.setDividerSize(dividerSize);
     }
 
-    splitPane.setMinimumSize(new Dimension(600, 400));
+    // the following changed from 600, 400 for netbooks
+    // http://code.google.com/p/arduino/issues/detail?id=52
+    splitPane.setMinimumSize(new Dimension(600, 100));
     box.add(splitPane);
 
     // hopefully these are no longer needed w/ swing

File: app/src/processing/app/debug/AvrdudeUploader.java
Patch:
@@ -46,7 +46,7 @@ public boolean uploadUsingPreferences(String buildPath, String className, boolea
     // bootloader and upload using the selected programmer.
     if (usingProgrammer || boardPreferences.get("upload.protocol") == null) {
       String programmer = Preferences.get("programmer");
-      TargetPlatform targetPlatform = Base.getTarget();
+      TargetPlatform targetPlatform = Base.getTargetPlatform();
 
       if (programmer.contains(":")) {
         String[] split = programmer.split(":", 2);
@@ -90,7 +90,7 @@ private boolean uploadViaBootloader(String buildPath, String className)
   
   public boolean burnBootloader() throws RunnerException {
     String programmer = Preferences.get("programmer");
-    TargetPlatform targetPlatform = Base.getTarget();
+    TargetPlatform targetPlatform = Base.getTargetPlatform();
     if (programmer.contains(":")) {
       String[] split = programmer.split(":", 2);
       targetPlatform = Base.getTargetPlatform(split[0], Preferences
@@ -152,7 +152,7 @@ protected boolean burnBootloader(Collection<String> params)
       TargetPlatform targetPlatform;
       if (bootloaderPath.contains(":")) {
         // the current target (associated with the board)
-        targetPlatform = Base.getTarget();
+        targetPlatform = Base.getTargetPlatform();
       } else {
         String[] split = bootloaderPath.split(":", 2);
         targetPlatform = Base.getTargetPlatform(split[0], Preferences

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -133,16 +133,19 @@ public EditorConsole(Editor editor) {
       // The files and folders are not deleted on exit because they may be 
       // needed for debugging or bug reporting.
       tempFolder = Base.createTempFolder("console");
+      tempFolder.deleteOnExit();
       try {
         String outFileName = Preferences.get("console.output.file");
         if (outFileName != null) {
           outFile = new File(tempFolder, outFileName);
+          outFile.deleteOnExit();
           stdoutFile = new FileOutputStream(outFile);
         }
 
         String errFileName = Preferences.get("console.error.file");
         if (errFileName != null) {
           errFile = new File(tempFolder, errFileName);
+          errFile.deleteOnExit();
           stderrFile = new FileOutputStream(errFile);
         }
       } catch (IOException e) {

File: app/src/processing/app/Editor.java
Patch:
@@ -689,6 +689,9 @@ public void actionPerformed(ActionEvent e) {
     if (boardsMenu == null) {
       boardsMenu = new JMenu(_("Board"));
       base.rebuildBoardsMenu(boardsMenu);
+      //Debug: rebuild imports
+      importMenu.removeAll();
+      base.rebuildImportMenu(importMenu);
     }
     menu.add(boardsMenu);
     

File: app/src/processing/app/Base.java
Patch:
@@ -1010,6 +1010,7 @@ public void actionPerformed(ActionEvent actionevent) {
               Preferences.set("target", (String) getValue("target"));
               Preferences.set("board", (String) getValue("board"));
               onBoardOrPortChange();
+              Sketch.buildSettingChanged();
             }
           };
         action.putValue("target", target.getName());

File: app/src/processing/app/EditorConsole.java
Patch:
@@ -88,7 +88,9 @@ public EditorConsole(Editor editor) {
     Color bgColor    = Theme.getColor("console.color");
     Color fgColorOut = Theme.getColor("console.output.color");
     Color fgColorErr = Theme.getColor("console.error.color");
-    Font font        = Theme.getFont("console.font");
+    Font consoleFont = Theme.getFont("console.font");
+    Font editorFont = Preferences.getFont("editor.font");
+    Font font = new Font(consoleFont.getName(), consoleFont.getStyle(), editorFont.getSize());
 
     stdStyle = new SimpleAttributeSet();
     StyleConstants.setForeground(stdStyle, fgColorOut);

File: app/src/processing/app/Preferences.java
Patch:
@@ -340,7 +340,7 @@ public void actionPerformed(ActionEvent e) {
 
     if (Base.isWindows()) {
       autoAssociateBox =
-        new JCheckBox("Automatically associate .pde files with Arduino");
+        new JCheckBox("Automatically associate .ino files with Arduino");
       pain.add(autoAssociateBox);
       d = autoAssociateBox.getPreferredSize();
       autoAssociateBox.setBounds(left, top, d.width + 10, d.height);

File: app/src/processing/app/debug/BossaCUploader.java
Patch:
@@ -47,8 +47,8 @@ public boolean uploadUsingPreferences(String buildPath, String className,
                           + port);
     commandDownloader.add("-e");
     commandDownloader.add("-w");
-    commandDownloader.add("-v");
-    commandDownloader.add("-b");
+    commandDownloader.add("-s");
+    commandDownloader.add("-l");
     commandDownloader.add(buildPath + File.separator + className + ".bin");
 
     return bossac(commandDownloader);

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -476,7 +476,7 @@ static private List getCommandCompilerC(String avrBasePath, List includePaths,
       "-c", // compile, don't link
       "-g", // include debugging info (so errors include line numbers)
       "-Os", // optimize for size
-      "-w", // surpress all warnings
+      Preferences.getBoolean("build.verbose") ? "-Wall" : "-w", // show warnings if verbose
       "-ffunction-sections", // place each function in its own section
       "-fdata-sections",
       "-mmcu=" + boardPreferences.get("build.mcu"),
@@ -504,7 +504,7 @@ static private List getCommandCompilerCPP(String avrBasePath,
       "-c", // compile, don't link
       "-g", // include debugging info (so errors include line numbers)
       "-Os", // optimize for size
-      "-w", // surpress all warnings
+      Preferences.getBoolean("build.verbose") ? "-Wall" : "-w", // show warnings if verbose
       "-fno-exceptions",
       "-ffunction-sections", // place each function in its own section
       "-fdata-sections",

File: app/src/processing/app/Editor.java
Patch:
@@ -2655,7 +2655,6 @@ class TextAreaPopup extends JPopupMenu {
     public TextAreaPopup() {
       openURLItem = new JMenuItem("Open URL");
       openURLItem.addActionListener(new ActionListener() {
-        @Override
         public void actionPerformed(ActionEvent e) {
           Base.openURL(clickedURL);
         }

File: app/src/processing/app/syntax/SyntaxUtilities.java
Patch:
@@ -211,15 +211,15 @@ private static int drawTabbedCommentsText(Segment line, int x, int y,
     Segment tag = stringToSegment(parse[1]);
     Segment post = stringToSegment(parse[2]);
 
-    if (pre.length()>0)
+    if (pre.count>0)
       x = Utilities.drawTabbedText(pre, x, y, gfx, expander, 0);
 
     Font f = gfx.getFont();
     styles[Token.URL].setGraphicsFlags(gfx, f);
     x = Utilities.drawTabbedText(tag, x, y, gfx, expander, 0);
 
     commentStyle.setGraphicsFlags(gfx, f);
-    if (post.length()>0)
+    if (post.count>0)
       x = Utilities.drawTabbedText(post, x, y, gfx, expander, 0);
     return x;
   }

File: app/src/processing/app/Editor.java
Patch:
@@ -196,8 +196,10 @@ public void windowDeactivated(WindowEvent e) {
     //PdeKeywords keywords = new PdeKeywords();
     //sketchbook = new Sketchbook(this);
 
-    if (serialMonitor == null)
+    if (serialMonitor == null) {
       serialMonitor = new SerialMonitor(Preferences.get("serial.port"));
+      serialMonitor.setIconImage(getIconImage());
+    }
     
     buildMenuBar();
 

File: app/src/processing/app/EditorLineStatus.java
Patch:
@@ -109,7 +109,7 @@ public void paintComponent(Graphics g) {
     g.drawString(text, 6, baseline);
 
     g.setColor(messageForeground);
-    String tmp = "board: " + name + " on " + serialport;
+    String tmp = name + " on " + serialport;
     
     Rectangle2D bounds = g.getFontMetrics().getStringBounds(tmp, null);
     

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -219,7 +219,7 @@ public boolean compile(Sketch sketch,
    // collecting them into the core.a library file.
    System.out.println("3. compileCore");
    System.out.println("corePath: " + corePath);
-    compileCore(avrBasePath, buildPath, corePath, pins, pinsPath, configPreferences);
+    compileCore(avrBasePath, buildPath, corePath, systemPath, pins, pinsPath, configPreferences);
 
    
 /*
@@ -762,13 +762,14 @@ void compileLibraries (String avrBasePath, String buildPath, ArrayList<String> i
 	
 	// 3. compile the core, outputting .o files to <buildPath> and then
 	// collecting them into the core.a library file.
-	void compileCore (String avrBasePath, String buildPath, String corePath, String pins, String pinsPath, HashMap<String, String> configPreferences) 
+	void compileCore (String avrBasePath, String buildPath, String corePath, String systemPath, String pins, String pinsPath, HashMap<String, String> configPreferences) 
 		throws RunnerException 
 	{
 		System.out.println("compileCore(...) start");
 
 		ArrayList<String>  includePaths =  new ArrayList();
 	    includePaths.add(corePath); //include core path only
+            includePaths.add(systemPath);
         if (pinsPath != null) includePaths.add(pinsPath);
         
          //debug  includePaths

File: app/src/processing/app/debug/Target.java
Patch:
@@ -82,7 +82,7 @@ public Target(String name, File folder) {
     } catch (Exception e) {
       System.err.println("Error loading platforms from " + 
                          platformsFile + ": " + e);                        
-     System.exit(0);	
+     //System.exit(0);	
     
     }    
    

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -900,6 +900,7 @@ void compileLink(String avrBasePath, String buildPath, String corePath, ArrayLis
 				corePath,	
 				configPreferences.get("ldscript"),	
 			};
+			commandString = compileFormat.format(  Args );
 		    String[] commandArray = commandString.split(",");	
 		 System.out.println("commandString: " + commandString); 
 		for (int ii = 0; ii < commandArray.length; ii++)

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -159,7 +159,7 @@ public boolean compile(Sketch sketch,
       }
     }
 
-    List<File> objectFiles = new ArrayList<File>();
+    objectFiles = new ArrayList<File>();
 
    // 0. include paths for core + all libraries
 
@@ -966,7 +966,7 @@ private static String preparePaths(ArrayList<String> includePaths) {
 		String includes = "";
 		for (int i = 0; i < includePaths.size(); i++) 
 		{
-			includes = includes + (" -I" + (String) includePaths.get(i)) + ",";
+			includes = includes + (i > 0 ? "," : "") + ("-I" + (String) includePaths.get(i));
 		}
 		//logger.debug("Paths prepared: " + includes);
 		return includes;

File: app/src/processing/app/Sketch.java
Patch:
@@ -1331,10 +1331,9 @@ public String preprocess(String buildPath, PdePreprocessor preprocessor) throws
     //Remember to clear library path before building it.
     libraryPath = "";
     for (String item : preprocessor.getExtraImports()) {
-      File libFolder = (File) Base.importToLibraryTable.get(item);
 
         File libFolder = (File) Base.importToLibraryTable.get(item);
-        //Debug libraryPath
+        //If needed can Debug libraryPath here
 
       if (libFolder != null && !importedLibraries.contains(libFolder)) {
         importedLibraries.add(libFolder);

File: app/src/processing/app/debug/Target.java
Patch:
@@ -39,6 +39,7 @@ public class Target {
   private Map platforms;
 
   public Target(String name, File folder) {
+	System.out.println("Target: constructor start, name: " + name); 
     this.name = name;
     this.folder = folder;
     this.boards = new LinkedHashMap();
@@ -61,6 +62,7 @@ public Target(String name, File folder) {
       }
     } catch (Exception e) {
       System.err.println("Error loading boards from " + boardsFile + ": " + e);
+
     }
 
    File platformsFile = new File(folder,"platforms.txt");
@@ -80,7 +82,7 @@ public Target(String name, File folder) {
     } catch (Exception e) {
       System.err.println("Error loading platforms from " + 
                          platformsFile + ": " + e);                        
-     // System.exit(0);	
+     System.exit(0);	
     
     }    
    

File: app/src/processing/app/Base.java
Patch:
@@ -41,9 +41,9 @@
  * files and images, etc) that comes from that.
  */
 public class Base {
-  public static final int REVISION = 22;
+  public static final int REVISION = 100;
   /** This might be replaced by main() if there's a lib/version.txt file. */
-  static String VERSION_NAME = "0022";
+  static String VERSION_NAME = "0100";
   /** Set true if this a proper release rather than a numbered revision. */
   static public boolean RELEASE = false;
 

File: app/src/processing/app/debug/Uploader.java
Patch:
@@ -64,10 +64,10 @@ public abstract class Uploader implements MessageConsumer  {
   public Uploader() {
   }
 
-  public abstract boolean uploadUsingPreferences(String buildPath, String className, boolean usingProgrammer)
+  public abstract boolean uploadUsingPreferences(String buildPath, String className, boolean verbose)
     throws RunnerException, SerialException;
   
-  public abstract boolean burnBootloader() throws RunnerException;
+  public abstract boolean burnBootloader(String target, String programmer) throws RunnerException;
   
   protected void flushSerialBuffer() throws RunnerException, SerialException {
     // Cleanup the serial buffer

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -364,9 +364,9 @@ public void message(String s) {
       }
       
       if (pieces[3].trim().equals("SPI.h: No such file or directory")) {
-        e = new RunnerException("Import the SPI library from the Sketch menu.");
+        e = new RunnerException("Please import the SPI library from the Sketch > Import Library menu.");
         s += "\nAs of Arduino 0019, the Ethernet library depends on the SPI library." +
-             "\nPlease import it from the Sketch > Import Library menu.";
+             "\nYou appear to be using it or another library that depends on the SPI library.";
       }        
       
       if (exception == null && e != null) {

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -486,7 +486,7 @@ static public ArrayList<File> findFilesInFolder(File folder, String extension,
     if (folder.listFiles() == null) return files;
     
     for (File file : folder.listFiles()) {
-      if (file.getName().equals(".") || file.getName().equals("..")) continue;
+      if (file.getName().startsWith(".")) continue; // skip hidden files
       
       if (file.getName().endsWith("." + extension))
         files.add(file);

File: app/src/processing/app/Sketch.java
Patch:
@@ -1574,7 +1574,9 @@ public boolean exportApplet(String appletPath, boolean verbose)
   protected void size(String buildPath, String suggestedClassName)
     throws RunnerException {
     long size = 0;
-    long maxsize = Integer.parseInt(Base.getBoardPreferences().get("upload.maximum_size"));
+    String maxsizeString = Base.getBoardPreferences().get("upload.maximum_size");
+    if (maxsizeString == null) return;
+    long maxsize = Integer.parseInt(maxsizeString);
     Sizer sizer = new Sizer(buildPath, suggestedClassName);
       try {
       size = sizer.computeSize();

File: app/src/processing/app/EditorHeader.java
Patch:
@@ -359,7 +359,9 @@ public void actionPerformed(ActionEvent e) {
           }
         };
       for (SketchCode code : sketch.getCode()) {
-        item = new JMenuItem(code.getPrettyName());
+        item = new JMenuItem(code.isExtension(sketch.getDefaultExtension()) ? 
+                             code.getPrettyName() : code.getFileName());
+        item.setActionCommand(code.getFileName());
         item.addActionListener(jumpListener);
         menu.add(item);
       }

File: app/src/processing/app/Sketch.java
Patch:
@@ -1442,7 +1442,7 @@ public RunnerException placeException(String message,
     // first check to see if it's a .java file
     for (int i = 0; i < getCodeCount(); i++) {
       SketchCode code = getCode(i);
-      if (code.isExtension("java")) {
+      if (!code.isExtension(getDefaultExtension())) {
         if (dotJavaFilename.equals(code.getFileName())) {
           codeIndex = i;
           codeLine = dotJavaLine;
@@ -1452,7 +1452,7 @@ public RunnerException placeException(String message,
     }
 
     // If not the preprocessed file at this point, then need to get out
-    if (!dotJavaFilename.equals(name + ".java")) {
+    if (!dotJavaFilename.equals(name + ".cpp")) {
       return null;
     }
 
@@ -1462,7 +1462,7 @@ public RunnerException placeException(String message,
     for (int i = 0; i < getCodeCount(); i++) {
       SketchCode code = getCode(i);
 
-      if (code.isExtension("pde")) {
+      if (code.isExtension(getDefaultExtension())) {
 //        System.out.println("preproc offset is " + code.getPreprocOffset());
 //        System.out.println("looking for line " + dotJavaLine);
         if (code.getPreprocOffset() <= dotJavaLine) {

File: app/src/processing/app/debug/RunnerListener.java
Patch:
@@ -28,4 +28,6 @@ public interface RunnerListener {
   public void statusError(String message);
 
   public void statusError(Exception exception);
+  
+  public void statusNotice(String message);
 }
\ No newline at end of file

File: app/src/processing/app/macosx/ThinkDifferent.java
Patch:
@@ -50,7 +50,8 @@ public class ThinkDifferent implements ApplicationListener {
   
   static protected void init(Base base) {    
     if (application == null) {
-      application = new com.apple.eawt.Application();
+      //application = new com.apple.eawt.Application();
+      application = com.apple.eawt.Application.getApplication();
     }
     if (adapter == null) {
       adapter = new ThinkDifferent(base);

File: core/src/processing/core/PPolygon.java
Patch:
@@ -419,7 +419,7 @@ private void scanline(int y, float l[], float r[]) {
     int tr, tg, tb, ta;
 
 //    System.out.println("P2D interp uv " + interpUV + " " + 
-//                       vertices[2][U] + " " + vertices[2][V]);    
+//                       vertices[2][U] + " " + vertices[2][V]);
     for (int x = lx; x <= rx; x++) {
       // map texture based on U, V coords in sp[U] and sp[V]
       if (interpUV) {

File: core/src/processing/core/PVector.java
Patch:
@@ -428,8 +428,8 @@ public float dot(PVector v) {
   public float dot(float x, float y, float z) {
     return this.x*x + this.y*y + this.z*z;
   }
-
-
+  
+  
   static public float dot(PVector v1, PVector v2) {
       return v1.x*v2.x + v1.y*v2.y + v1.z*v2.z;
   }

File: app/src/processing/app/Base.java
Patch:
@@ -584,7 +584,7 @@ public void handleNew() {
    * Replace the sketch in the current window with a new untitled document.
    */
   public void handleNewReplace() {
-    if (!activeEditor.checkModified(false)) {
+    if (!activeEditor.checkModified(true)) {
       return;  // sketch was modified, and user canceled
     }
     // Close the running window, avoid window boogers with multiple sketches
@@ -616,7 +616,7 @@ protected void handleNewReplaceImpl() {
    * @param path Location of the primary pde file for the sketch.
    */
   public void handleOpenReplace(String path) {
-    if (!activeEditor.checkModified(false)) {
+    if (!activeEditor.checkModified(true)) {
       return;  // sketch was modified, and user canceled
     }
     // Close the running window, avoid window boogers with multiple sketches

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -53,7 +53,7 @@ public class EditorToolbar extends JComponent implements MouseInputListener {
   static final int OPEN     = 3;
   static final int SAVE     = 4;
   static final int EXPORT   = 5;
-  
+
   static final int SERIAL   = 6;
 
   static final int INACTIVE = 0;

File: app/src/processing/app/PresentMode.java
Patch:
@@ -3,7 +3,7 @@
 /*
   Part of the Processing project - http://processing.org
 
-  Copyright (c) 2005-06 Ben Fry and Casey Reas
+  Copyright (c) 2005-09 Ben Fry and Casey Reas
 
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
@@ -59,7 +59,7 @@ public class PresentMode {
     devices = environment.getScreenDevices();
     GraphicsDevice defaultDevice = environment.getDefaultScreenDevice();
 
-    Vector names = new Vector();
+    Vector<String> names = new Vector<String>();
     for (int i = 0; i < devices.length; i++) {
       String name = String.valueOf(i + 1);
       if (devices[i] == defaultDevice) {

File: app/src/processing/app/macosx/ThinkDifferent.java
Patch:
@@ -86,13 +86,14 @@ public void handlePreferences(ApplicationEvent ae) {
       throw new IllegalStateException("handlePreferences: Base instance detached from listener");
     }
   }
-  
-  
+
+
   public void handleOpenApplication(ApplicationEvent ae) {
   }
 
 
   public void handleOpenFile(ApplicationEvent ae) {
+//    System.out.println("got open file event " + ae.getFilename());
     String filename = ae.getFilename();
     base.handleOpen(filename);
     ae.setHandled(true);

File: app/src/processing/app/Editor.java
Patch:
@@ -145,7 +145,7 @@ public Editor(Base ibase, String path, int[] location) {
     super("Arduino");
     this.base = ibase;
 
-    Base.setIcon(this);
+    //Base.setIcon(this);
 
     // add listener to handle window close box hit event
     addWindowListener(new WindowAdapter() {

File: app/src/processing/app/macosx/Platform.java
Patch:
@@ -92,7 +92,7 @@ public File getDefaultSketchbookFolder() throws Exception {
       Class clazz = Class.forName("processing.app.BaseMacOS");
       Method m = clazz.getMethod("getDocumentsFolder", new Class[] { });
       String documentsPath = (String) m.invoke(null, new Object[] { });
-      sketchbookFolder = new File(documentsPath, "Processing");
+      sketchbookFolder = new File(documentsPath, "Arduino");
 
     } catch (Exception e) {
       sketchbookFolder = promptSketchbookLocation();
@@ -181,4 +181,4 @@ protected String getLibraryFolder() throws FileNotFoundException {
   protected String getDocumentsFolder() throws FileNotFoundException {
     return FileManager.findFolder(kUserDomain, kDocumentsFolderType);
   }
-}
\ No newline at end of file
+}

File: app/src/processing/app/windows/Platform.java
Patch:
@@ -184,7 +184,7 @@ public File getSettingsFolder() throws Exception {
     String appDataPath =
       Registry.getStringValue(REGISTRY_ROOT_KEY.CURRENT_USER, keyPath, "AppData");
 
-    File dataFolder = new File(appDataPath, "Processing");
+    File dataFolder = new File(appDataPath, "Arduino");
     return dataFolder;
   }
 
@@ -213,7 +213,7 @@ public File getDefaultSketchbookFolder() throws Exception {
     String personalPath =
       Registry.getStringValue(REGISTRY_ROOT_KEY.CURRENT_USER, keyPath, "Personal");
 
-    return new File(personalPath, "Processing");
+    return new File(personalPath, "Arduino");
   }
 
 

File: app/src/processing/app/Sketch.java
Patch:
@@ -1723,7 +1723,8 @@ protected void ensureExistence() {
   public boolean isReadOnly() {
     String apath = folder.getAbsolutePath();
     if (apath.startsWith(Base.getExamplesPath()) ||
-        apath.startsWith(Base.getLibrariesPath())) {
+        apath.startsWith(Base.getLibrariesPath()) ||
+        apath.startsWith(Base.getSketchbookLibrariesPath())) {
       return true;
 
       // canWrite() doesn't work on directories

File: app/src/processing/app/debug/Compiler.java
Patch:
@@ -482,6 +482,7 @@ static private List getCommandCompilerCPP(String avrBasePath,
   /////////////////////////////////////////////////////////////////////////////
 
   static private void createFolder(File folder) throws RunnerException {
+    if (folder.isDirectory()) return;
     if (!folder.mkdir())
       throw new RunnerException("Couldn't create: " + folder);
   }

File: app/src/processing/app/Editor.java
Patch:
@@ -2146,7 +2146,7 @@ public boolean handleSaveAs() {
    * hitting export twice, quickly, and horking things up.
    */
   synchronized public void handleExport() {
-    if (!handleExportCheckModified()) return;
+    //if (!handleExportCheckModified()) return;
     toolbar.activate(EditorToolbar.EXPORT);
 
     console.clear();

File: app/src/processing/app/Sketch.java
Patch:
@@ -1392,8 +1392,11 @@ public boolean exportApplet(String appletPath, Target target)
     // Make sure the user didn't hide the sketch folder
     ensureExistence();
 
+    current.setProgram(editor.getText());
+
     // Reload the code when an external editor is being used
     if (Preferences.getBoolean("editor.external")) {
+      current = null;
       // nuke previous files and settings
       load();
     }

File: app/src/processing/app/EditorToolbar.java
Patch:
@@ -35,7 +35,7 @@
 public class EditorToolbar extends JComponent implements MouseInputListener {
 
   static final String title[] = {
-    "Run", "Stop", "New", "Open", "Save", "Export"
+    "Verify", "Stop", "New", "Open", "Save", "Upload"
   };
 
   static final int BUTTON_COUNT  = title.length;

File: app/src/processing/app/Sketch.java
Patch:
@@ -1315,7 +1315,7 @@ public String preprocess(String buildPath, Target target) throws RunnerException
     for (String item : preprocessor.getExtraImports()) {
       File libFolder = (File) Base.importToLibraryTable.get(item);
 
-      if (libFolder != null) {
+      if (libFolder != null && !importedLibraries.contains(libFolder)) {
         importedLibraries.add(libFolder);
         classPath += Compiler.contentsToClassPath(libFolder);
         libraryPath += File.pathSeparator + libFolder.getAbsolutePath();

File: app/src/processing/app/Sketch.java
Patch:
@@ -1275,7 +1275,7 @@ public String preprocess(String buildPath, Target target) throws RunnerException
                                             name,
 					    codeFolderPackages,
 					    target);
-      headerOffset = preprocessor.headerCount;
+      headerOffset = preprocessor.headerCount + preprocessor.prototypeCount;
 
       if (className == null) {
         throw new RunnerException("Could not find main class");

File: app/src/processing/app/preproc/PdePreprocessor.java
Patch:
@@ -72,7 +72,8 @@ public class PdePreprocessor {
   public int prototypeCount = 0;
 
   // stores number of included library headers written
-  public int headerCount = 0;
+  // we always write one header: WProgram.h
+  public int headerCount = 1;
 
   /**
    * These may change in-between (if the prefs panel adds this option)

File: app/src/processing/app/Platform.java
Patch:
@@ -71,7 +71,7 @@ public void init(Base base) {
   public File getSettingsFolder() throws Exception {
     // otherwise make a .processing directory int the user's home dir
     File home = new File(System.getProperty("user.home"));
-    File dataFolder = new File(home, ".processing");
+    File dataFolder = new File(home, ".arduino");
     return dataFolder;
 
     /*

File: app/src/processing/app/debug/MessageSiphon.java
Patch:
@@ -44,7 +44,7 @@ public MessageSiphon(InputStream stream, MessageConsumer consumer) {
     // bubble up in time (i.e. compile errors have a weird delay)
     //thread.setPriority(Thread.MIN_PRIORITY);
     thread.setPriority(Thread.MAX_PRIORITY-1);
-    //thread.start();
+    thread.start();
   }
 
 

File: app/src/processing/app/macosx/Platform.java
Patch:
@@ -80,12 +80,12 @@ public void init(Base base) {
 
 
   public File getSettingsFolder() throws Exception {
-    return new File(getLibraryFolder(), "Processing");
+    return new File(getLibraryFolder(), "Arduino");
   }
 
 
   public File getDefaultSketchbookFolder() throws Exception {
-    return new File(getDocumentsFolder(), "Processing");
+    return new File(getDocumentsFolder(), "Arduino");
     /*
     // looking for /Users/blah/Documents/Processing
     try {

File: app/Base.java
Patch:
@@ -53,8 +53,8 @@
  * files and images, etc) that comes from that.
  */
 public class Base {
-  static final int VERSION = 13;
-  static final String VERSION_NAME = "0013 Alpha";
+  static final int VERSION = 14;
+  static final String VERSION_NAME = "0014";
 
   /**
    * Path of filename opened on the command line,

File: app/Editor.java
Patch:
@@ -747,7 +747,7 @@ else if (jalopy.getState() == Jalopy.State.ERROR)
       });
     menu.add(item);
 
-    item = new JMenuItem("Copy for Discourse");
+    item = new JMenuItem("Copy for Forum");
     item.addActionListener(new ActionListener() {
         public void actionPerformed(ActionEvent e) {
           SwingUtilities.invokeLater(new Runnable() {

File: app/AvrdudeUploader.java
Patch:
@@ -42,7 +42,7 @@ public boolean uploadUsingPreferences(String buildPath, String className)
       
     // avrdude doesn't want to read device signatures (it always gets
     // 0x000000); force it to continue uploading anyway
-    commandDownloader.add("-F");
+    //commandDownloader.add("-F");
 
     String protocol = Preferences.get("boards." + Preferences.get("board") + ".upload.protocol");
     

File: app/AvrdudeUploader.java
Patch:
@@ -54,7 +54,7 @@ public boolean uploadUsingPreferences(String buildPath, String className)
       // avrdude doesn't need to be told the address of the parallel port
       //commandDownloader.add("-dlpt=" + Preferences.get("parallel.port"));
     } else {
-      commandDownloader.add("-P" + Preferences.get("serial.port"));
+      commandDownloader.add("-P" + (Base.isWindows() ? "\\\\.\\" : "") + Preferences.get("serial.port"));
       commandDownloader.add(
         "-b" + Preferences.getInteger("boards." + Preferences.get("board") + ".upload.speed"));
     }

File: app/LibraryManager.java
Patch:
@@ -49,7 +49,8 @@ public LibraryManager() throws IOException
       "libraries");
     target = new Target(
       System.getProperty("user.dir") + File.separator + "hardware" +
-      File.separator + "cores", Preferences.get("build.target"));
+      File.separator + "cores",
+      Preferences.get("boards." + Preferences.get("board") + ".build.core"));
     refreshLibraries();
   }
   

File: app/tools/ExportFolder.java
Patch:
@@ -78,7 +78,8 @@ public void show() {
         // success may not be that useful, usually an ex is thrown
         success = editor.sketch.exportApplet(new Target(
                 System.getProperty("user.dir") + File.separator + "hardware" +
-                File.separator + "cores", Preferences.get("build.target")));
+                File.separator + "cores",
+                Preferences.get("boards." + Preferences.get("board") + ".build.core")));
         if (!success) break;
         //System.out.println("success was " + success);
       }

File: app/Compiler.java
Patch:
@@ -242,13 +242,14 @@ else if(Base.isLinux()) {
     int sketchCount = 0;
     for (int i = 0; i < sketch.codeCount; i++) {
       if (sketch.code[i].preprocName != null) {
-        sketchObjectNames[sketchCount++] = buildPath + File.separator + sketch.code[i].preprocName + ".o";
         if (sketch.code[i].preprocName.endsWith(".c")) {
           sourceNames[fileCount] = buildPath + File.separator + sketch.code[i].preprocName;
           objectNames[fileCount++] = buildPath + File.separator + sketch.code[i].preprocName + ".o";
+          sketchObjectNames[sketchCount++] = buildPath + File.separator + sketch.code[i].preprocName + ".o";
         } else if (sketch.code[i].preprocName.endsWith(".cpp")) {
           sourceNamesCPP[fileCountCPP] = buildPath + File.separator + sketch.code[i].preprocName;
           objectNamesCPP[fileCountCPP++] = buildPath + File.separator + sketch.code[i].preprocName + ".o";
+          sketchObjectNames[sketchCount++] = buildPath + File.separator + sketch.code[i].preprocName + ".o";
         } 
       }
     }

File: app/RunnerException.java
Patch:
@@ -66,6 +66,8 @@ public RunnerException(String message, int file, int line, int column) {
    * in each of the constructors above.
    */
   static public final String massage(String msg) {
+    if (msg == null)
+      return "";
     if (msg.indexOf("java.lang.") == 0) {
       //int dot = msg.lastIndexOf('.');
       msg = msg.substring("java.lang.".length());

File: app/Base.java
Patch:
@@ -53,7 +53,7 @@
  */
 public class Base {
   static final int VERSION = 3;
-  static final String VERSION_NAME = "0004 Alpha";
+  static final String VERSION_NAME = "0005 Alpha";
   
   // platform IDs for PApplet.platform
 

File: app/Sketch.java
Patch:
@@ -1736,6 +1736,8 @@ public boolean exportApplet(Target target) throws RunnerException {
     // make sure the user didn't hide the sketch folder
     ensureExistence();
 
+    current.program = editor.getText();
+
     zipFileContents = new Hashtable();
 
     // nuke the old applet folder because it can cause trouble

File: app/Sketch.java
Patch:
@@ -1407,7 +1407,7 @@ protected String build(Target target, String buildPath, String suggestedClassNam
         }
       }
       errorLine -= code[errorFile].preprocOffset;
-      //errorLine -= preprocessor.prototypeCount;
+      errorLine -= preprocessor.prototypeCount;
 
       throw new RunnerException(re.getMessage(), errorFile,
                              errorLine, re.getColumn());
@@ -1448,7 +1448,7 @@ protected String build(Target target, String buildPath, String suggestedClassNam
           }
         }
         errorLine -= code[errorFile].preprocOffset;
-        //errorLine -= preprocessor.prototypeCount;
+        errorLine -= preprocessor.prototypeCount;
 
         throw new RunnerException(tsre.getMessage(),
                                errorFile, errorLine, errorColumn);
@@ -1538,7 +1538,7 @@ protected String build(Target target, String buildPath, String suggestedClassNam
     } catch (RunnerException re) {
       throw new RunnerException(re.getMessage(),
                                 re.file,
-                                re.line,// - preprocessor.prototypeCount,
+                                re.line - preprocessor.prototypeCount,
                                 re.column);
     } catch (Exception ex) {
       // TODO better method for handling this?

