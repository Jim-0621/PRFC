File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -314,7 +314,8 @@ private void initializeSizeAnimation() {
   }
 
   private SpringForce createSpringForce() {
-    return MotionUtils.resolveThemeSpringForce(getContext(), R.attr.motionSpringFastSpatial);
+    return MotionUtils.resolveThemeSpringForce(getContext(), R.attr.motionSpringFastSpatial,
+        R.style.Motion_Material3_Spring_Standard_Fast_Spatial);
   }
 
   @NonNull

File: lib/java/com/google/android/material/navigation/NavigationBarItemView.java
Patch:
@@ -1175,7 +1175,7 @@ public void setActiveIndicatorExpandedHeight(int height) {
    *
    * @param availableWidth The total width of this item layout.
    */
-  private void updateActiveIndicatorLayoutParams(int availableWidth) {
+  public void updateActiveIndicatorLayoutParams(int availableWidth) {
     // Set width to the min of either the desired indicator width or the available width minus
     // a horizontal margin.
     if (availableWidth <= 0 && getVisibility() == VISIBLE) {

File: lib/java/com/google/android/material/navigation/NavigationBarView.java
Patch:
@@ -859,7 +859,7 @@ public void setItemActiveIndicatorMarginHorizontal(@Px int horizontalMargin) {
    * @see #getItemGravity()
    */
   public void setItemGravity(@ItemGravity int itemGravity) {
-    if (menuView.getItemIconGravity() != itemGravity) {
+    if (menuView.getItemGravity() != itemGravity) {
       menuView.setItemGravity(itemGravity);
       presenter.updateMenuView(false);
     }

File: lib/java/com/google/android/material/navigationrail/NavigationRailView.java
Patch:
@@ -741,7 +741,7 @@ public boolean shouldAddMenuView() {
   @Override
   public boolean onTouchEvent(@NonNull MotionEvent event) {
     super.onTouchEvent(event);
-    // Consume all events to avoid views under the BottomNavigationView from receiving touch events.
+    // Consume all events to avoid views under the NavigationRailView from receiving touch events.
     return true;
   }
 }

File: lib/java/com/google/android/material/timepicker/TimePickerClockPresenter.java
Patch:
@@ -242,6 +242,7 @@ private void updateTime() {
   /** Update values with the correct number format */
   private void updateValues() {
     updateValues(HOUR_CLOCK_VALUES, TimeModel.NUMBER_FORMAT);
+    updateValues(HOUR_CLOCK_24_VALUES, TimeModel.NUMBER_FORMAT);
     updateValues(MINUTE_CLOCK_VALUES, TimeModel.ZERO_LEADING_NUMBER_FORMAT);
   }
 

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -2917,7 +2917,7 @@ private void drawThumbDrawable(
       @NonNull Canvas canvas, int width, int top, float value, @NonNull Drawable thumbDrawable) {
     canvas.save();
     if (isVertical()) {
-      canvas.setMatrix(rotationMatrix);
+      canvas.concat(rotationMatrix);
     }
     canvas.translate(
         trackSidePadding

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -985,6 +985,8 @@ protected void getVisibleVirtualViews(@NonNull List<Integer> virtualViewIds) {
     protected void onVirtualViewKeyboardFocusChanged(int virtualViewId, boolean hasFocus) {
       if (virtualViewId == CLOSE_ICON_VIRTUAL_ID) {
         closeIconFocused = hasFocus;
+      }
+      if (chipDrawable.refreshCloseIconFocus(closeIconFocused)) {
         refreshDrawableState();
       }
     }

File: catalog/java/io/material/catalog/musicplayer/MusicPlayerLibraryDemoFragment.java
Patch:
@@ -130,7 +130,7 @@ public boolean onMenuItemClick(MenuItem menuItem) {
       return true;
     }
 
-    // Use a shared axis Y transition to sort the list, showing a spacial relationship between
+    // Use a shared axis Y transition to sort the list, showing a spatial relationship between
     // the outgoing and incoming view.
     MaterialSharedAxis sharedAxis = new MaterialSharedAxis(MaterialSharedAxis.Y, true);
     setList(listTypeGrid, !listSorted, sharedAxis);

File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -314,7 +314,7 @@ private void initializeSizeAnimation() {
   }
 
   private SpringForce createSpringForce() {
-    return MotionUtils.resolveThemeSpringForce(getContext(), R.attr.motionSpringFastSpacial);
+    return MotionUtils.resolveThemeSpringForce(getContext(), R.attr.motionSpringFastSpatial);
   }
 
   @NonNull

File: lib/javatests/com/google/android/material/motion/MotionUtilsTest.java
Patch:
@@ -64,7 +64,7 @@ public void testResolvesThemeSpring() {
     float expectedDampingRatio = ResourcesCompat.getFloat(
         context.getResources(), R.dimen.m3_sys_motion_standard_spring_fast_spatial_damping);
     SpringForce spring =
-        MotionUtils.resolveThemeSpringForce(context, R.attr.motionSpringFastSpacial);
+        MotionUtils.resolveThemeSpringForce(context, R.attr.motionSpringFastSpatial);
 
     assertThat(spring.getStiffness()).isEqualTo(expectedStiffness);
     assertThat(spring.getDampingRatio()).isEqualTo(expectedDampingRatio);
@@ -77,7 +77,7 @@ public void testPartialSpring_shouldThrow() {
 
     IllegalArgumentException thrown = assertThrows(
         IllegalArgumentException.class,
-        () -> MotionUtils.resolveThemeSpringForce(context, R.attr.motionSpringFastSpacial)
+        () -> MotionUtils.resolveThemeSpringForce(context, R.attr.motionSpringFastSpatial)
     );
     assertThat(thrown).hasMessageThat().contains("must have a damping");
   }

File: lib/javatests/com/google/android/material/theme/ThemeTest.java
Patch:
@@ -365,11 +365,11 @@ public class ThemeTest {
 
   private static final ImmutableList<Integer> M3_ACTIVE_MOTION_ATTRIBUTES =
       ImmutableList.of(
-          R.attr.motionSpringFastSpacial,
+          R.attr.motionSpringFastSpatial,
           R.attr.motionSpringFastEffects,
-          R.attr.motionSpringDefaultSpacial,
+          R.attr.motionSpringDefaultSpatial,
           R.attr.motionSpringDefaultEffects,
-          R.attr.motionSpringSlowSpacial,
+          R.attr.motionSpringSlowSpatial,
           R.attr.motionSpringSlowEffects,
           R.attr.motionEasingStandardInterpolator,
           R.attr.motionEasingStandardAccelerateInterpolator,

File: lib/java/com/google/android/material/navigation/NavigationBarMenuView.java
Patch:
@@ -184,7 +184,7 @@ public void setCheckedItem(@NonNull MenuItem checkedItem) {
       return;
     }
     // Unset the previous checked item
-    if (this.checkedItem != null) {
+    if (this.checkedItem != null && this.checkedItem.isChecked()) {
       this.checkedItem.setChecked(false);
     }
     checkedItem.setChecked(true);

File: catalog/java/io/material/catalog/search/SearchRecyclerDemoActivity.java
Patch:
@@ -315,7 +315,7 @@ private interface OnItemSelectedStateChangedListener {
     void onItemSelectedStateChanged(Item item);
   }
 
-  /** The Dagger module for {@link SearchBarRecyclerDemoActivity} dependencies. */
+  /** The Dagger module for {@link SearchRecyclerDemoActivity} dependencies. */
   @dagger.Module
   public abstract static class Module {
 

File: lib/java/com/google/android/material/bottomsheet/BottomSheetDialog.java
Patch:
@@ -215,8 +215,8 @@ public void onDetachedFromWindow() {
    * or calling `dismiss()` from a `BottomSheetDialogFragment`, tapping outside a dialog, etc...
    *
    * <p>The default animation to dismiss this dialog is a fade-out transition through a
-   * windowAnimation. Call {@link #setDismissWithAnimation(true)} if you want to utilize the
-   * BottomSheet animation instead.
+   * windowAnimation. Call {@link #setDismissWithAnimation(boolean)} with `true`
+   * if you want to utilize the BottomSheet animation instead.
    *
    * <p>If this function is called from a swipe down interaction, or dismissWithAnimation is false,
    * then keep the default behavior.

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -1547,8 +1547,8 @@ public void setChipIconSize(float chipIconSize) {
   /**
    * Returns whether this chip's close icon is visible.
    *
-   * @see id #setCloseIconVisible(boolean)
    * @attr ref com.google.android.material.R.styleable#Chip_chipIconSize
+   * @see #setCloseIconVisible(boolean)
    */
   public boolean isCloseIconVisible() {
     return chipDrawable != null && chipDrawable.isCloseIconVisible();
@@ -1575,6 +1575,7 @@ public void setCloseIconVisible(@BoolRes int id) {
    *
    * @param closeIconVisible This chip's close icon visibility.
    * @attr ref com.google.android.material.R.styleable#Chip_closeIconVisible
+   * @see #isCloseIconVisible()
    */
   public void setCloseIconVisible(boolean closeIconVisible) {
     if (chipDrawable != null) {

File: lib/java/com/google/android/material/datepicker/CalendarItemStyle.java
Patch:
@@ -44,8 +44,8 @@ final class CalendarItemStyle {
    * the selection marker.
    *
    * <p>The selection marker's size is defined by the {@link
-   * R.styleable.MaterialCalendarItem#itemShapeAppearance} and {@link
-   * R.styleable.MaterialCalendarItem#itemShapeAppearanceOverlay}.
+   * R.styleable#MaterialCalendarItem_itemShapeAppearance} and {@link
+   * R.styleable#MaterialCalendarItem_itemShapeAppearanceOverlay}.
    */
   @NonNull private final Rect insets;
 

File: lib/java/com/google/android/material/ripple/RippleDrawableCompat.java
Patch:
@@ -185,8 +185,7 @@ public int getOpacity() {
   }
 
   /**
-   * A {@link ConstantState} for {@link Ripple}
-   *
+   * A {@link ConstantState} for {@link RippleDrawableCompat}
    */
   static final class RippleDrawableCompatState extends ConstantState {
 

File: lib/java/com/google/android/material/navigationrail/NavigationRailMenuView.java
Patch:
@@ -175,8 +175,8 @@ private int measureSharedChildHeights(
   }
 
   private int measureChildHeight(View child, int widthMeasureSpec, int heightMeasureSpec) {
+    child.measure(widthMeasureSpec, heightMeasureSpec);
     if (child.getVisibility() != GONE) {
-      child.measure(widthMeasureSpec, heightMeasureSpec);
       return child.getMeasuredHeight();
     }
 

File: lib/java/com/google/android/material/shape/MaterialShapes.java
Patch:
@@ -258,9 +258,7 @@ private static RoundedPolygon getClamShell() {
   private static RoundedPolygon getPentagon() {
     List<VertexAndRounding> points = new ArrayList<>();
     points.add(new VertexAndRounding(new PointF(0.500f, -0.009f), new CornerRounding(0.172f, 0f)));
-    points.add(new VertexAndRounding(new PointF(1.030f, 0.365f), new CornerRounding(0.164f, 0f)));
-    points.add(new VertexAndRounding(new PointF(0.828f, 0.970f), new CornerRounding(0.169f, 0f)));
-    return customPolygon(points, 1, 0.5f, 0.5f, true);
+    return customPolygon(points, 5, 0.5f, 0.5f, false);
   }
 
   @NonNull

File: lib/java/com/google/android/material/loadingindicator/LoadingIndicator.java
Patch:
@@ -137,7 +137,8 @@ protected void onVisibilityChanged(@NonNull View changedView, int visibility) {
   @Override
   protected void onWindowVisibilityChanged(int visibility) {
     super.onWindowVisibilityChanged(visibility);
-    drawable.setVisible(visibleToUser(), /* restart= */ false, /* animate= */ false);
+    drawable.setVisible(
+        visibleToUser(), /* restart= */ false, /* animate= */ visibility == VISIBLE);
   }
 
   @Override

File: lib/java/com/google/android/material/loadingindicator/LoadingIndicator.java
Patch:
@@ -130,13 +130,14 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {
   @Override
   protected void onVisibilityChanged(@NonNull View changedView, int visibility) {
     super.onVisibilityChanged(changedView, visibility);
-    drawable.setVisible(visibleToUser(), /* restart= */ true);
+    drawable.setVisible(
+        visibleToUser(), /* restart= */ false, /* animate= */ visibility == VISIBLE);
   }
 
   @Override
   protected void onWindowVisibilityChanged(int visibility) {
     super.onWindowVisibilityChanged(visibility);
-    drawable.setVisible(visibleToUser(), /* restart= */ true);
+    drawable.setVisible(visibleToUser(), /* restart= */ false, /* animate= */ false);
   }
 
   @Override

File: lib/java/com/google/android/material/progressindicator/DrawableWithAnimatedVisibilityChange.java
Patch:
@@ -241,7 +241,6 @@ public boolean setVisible(boolean visible, boolean restart) {
    * @param animate Whether to change the visibility with animation.
    * @return {@code true}, if the visibility changes or will change after the animation; {@code
    *     false}, otherwise.
-   * @see #setVisible(boolean, boolean, boolean)
    */
   public boolean setVisible(boolean visible, boolean restart, boolean animate) {
     float systemAnimatorDurationScale =

File: lib/javatests/com/google/android/material/slider/RangeSliderConfigTest.java
Patch:
@@ -21,7 +21,6 @@
 import static com.google.android.material.slider.BaseSlider.UNIT_PX;
 import static com.google.android.material.slider.BaseSlider.UNIT_VALUE;
 import static org.robolectric.Shadows.shadowOf;
-import static org.robolectric.annotation.LooperMode.Mode.PAUSED;
 
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.test.core.app.ApplicationProvider;
@@ -36,10 +35,8 @@
 import org.robolectric.ParameterizedRobolectricTestRunner.Parameter;
 import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;
 import org.robolectric.Robolectric;
-import org.robolectric.annotation.LooperMode;
 
 /** Tests for {@link com.google.android.material.slider.RangeSlider}. */
-@LooperMode(PAUSED)
 @RunWith(ParameterizedRobolectricTestRunner.class)
 public class RangeSliderConfigTest {
 

File: catalog/java/io/material/catalog/menu/MenuMainDemoFragment.java
Patch:
@@ -181,6 +181,7 @@ private ListPopupWindow initializeListPopupMenu(View v) {
             getResources().getStringArray(R.array.cat_list_popup_window_content));
     listPopupWindow.setAdapter(adapter);
     listPopupWindow.setAnchorView(v);
+    listPopupWindow.setModal(true);
     listPopupWindow.setOnItemClickListener(
         (parent, view, position, id) -> {
           Snackbar.make(

File: catalog/java/io/material/catalog/bottomsheet/BottomSheetScrollableContentDemoFragment.java
Patch:
@@ -50,7 +50,7 @@ public View onCreateDemoView(
 
   @LayoutRes
   protected int getDemoContent() {
-    return R.layout.cat_bottomsheet_scrollable_content_fragment;
+    return R.layout.cat_bottomsheet_additional_demo_fragment;
   }
 
   /** A custom bottom sheet dialog fragment. */

File: catalog/java/io/material/catalog/topappbar/TopAppBarToolbarDemoFragment.java
Patch:
@@ -84,6 +84,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem menuItem) {
 
   private void initToolbar(View view, MaterialToolbar toolbar) {
     toolbar.setNavigationIcon(NAVIGATION_ICON_RES_ID);
+    toolbar.setNavigationContentDescription(R.string.cat_topappbar_close_button);
     toolbar.setNavigationOnClickListener(
         v -> showSnackbar(view, toolbar.getSubtitle() + " " + toolbar.getTitle()));
     toolbar.inflateMenu(MENU_RES_ID);

File: lib/javatests/com/google/android/material/datepicker/RangeDateSelectorTest.java
Patch:
@@ -58,7 +58,7 @@ public class RangeDateSelectorTest {
 
   @Before
   public void setupMonthAdapters() {
-    ApplicationProvider.getApplicationContext().setTheme(R.style.Theme_MaterialComponents_Light);
+    ApplicationProvider.getApplicationContext().setTheme(R.style.Theme_Material3_Light);
     activity = Robolectric.buildActivity(AppCompatActivity.class).setup().get();
     context = activity.getApplicationContext();
     res = context.getResources();

File: lib/javatests/com/google/android/material/datepicker/SingleDateSelectorTest.java
Patch:
@@ -56,7 +56,7 @@ public class SingleDateSelectorTest {
 
   @Before
   public void setupMonthAdapters() {
-    ApplicationProvider.getApplicationContext().setTheme(R.style.Theme_MaterialComponents_Light);
+    ApplicationProvider.getApplicationContext().setTheme(R.style.Theme_Material3_Light);
     activity = Robolectric.buildActivity(AppCompatActivity.class).setup().get();
     context = activity.getApplicationContext();
     res = context.getResources();

File: catalog/java/io/material/catalog/slider/SliderScrollContainerDemoFragment.java
Patch:
@@ -41,8 +41,10 @@ public View onCreateDemoView(
             R.layout.cat_slider_demo_scroll, viewGroup, false /* attachToRoot */);
     LinearLayout sliderContainer = view.findViewById(R.id.sliderContainer);
     for (int i = 0; i < 50; i++) {
+      Slider slider = new Slider(layoutInflater.getContext());
+      slider.setValueTo(11f);
       sliderContainer.addView(
-          new Slider(layoutInflater.getContext()),
+          slider,
           ViewGroup.LayoutParams.MATCH_PARENT,
           ViewGroup.LayoutParams.WRAP_CONTENT);
     }

File: lib/java/com/google/android/material/textfield/EndCompoundLayout.java
Patch:
@@ -231,6 +231,7 @@ private void initErrorIconView(TintTypedArray a) {
     errorIconView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO);
     errorIconView.setClickable(false);
     errorIconView.setPressable(false);
+    errorIconView.setCheckable(false);
     errorIconView.setFocusable(false);
   }
 

File: tests/javatests/com/google/android/material/snackbar/SnackbarTest.java
Patch:
@@ -405,6 +405,7 @@ public void testAccessibilityPaneTitle() throws Throwable {
     final Snackbar snackbar =
         Snackbar.make(coordinatorLayout, MESSAGE_TEXT, Snackbar.LENGTH_INDEFINITE)
             .setAction(ACTION_TEXT, mock(View.OnClickListener.class));
+    SnackbarUtils.showTransientBottomBarAndWaitUntilFullyShown(snackbar);
     assertEquals(
         snackbar.getContext().getString(R.string.snackbar_accessibility_pane_title),
         ViewCompat.getAccessibilityPaneTitle(snackbar.getView()).toString());

File: lib/java/com/google/android/material/shape/StateListCornerSize.java
Patch:
@@ -140,7 +140,7 @@ public CornerSize getCornerSizeForState(@NonNull int[] stateSet) {
     if (idx < 0) {
       idx = indexOfStateSet(StateSet.WILD_CARD);
     }
-    return cornerSizes[idx];
+    return idx < 0 ? defaultCornerSize : cornerSizes[idx];
   }
 
   private int indexOfStateSet(int[] stateSet) {

File: lib/java/com/google/android/material/resources/MaterialResources.java
Patch:
@@ -273,7 +273,7 @@ private static int getComplexUnit(TypedValue tv) {
    * contain values, the first given index takes precedence and is returned.
    */
   @StyleableRes
-  public static int getIndexWithValue(
+  static int getIndexWithValue(
       @NonNull TypedArray attributes, @StyleableRes int a, @StyleableRes int b) {
     if (attributes.hasValue(a)) {
       return a;

File: lib/java/com/google/android/material/resources/TextAppearance.java
Patch:
@@ -364,8 +364,6 @@ public void updateTextPaintMeasureState(
     textPaint.setTextSize(textSize);
 
     if (VERSION.SDK_INT >= VERSION_CODES.O) {
-      // TODO(b/264321145): Remove once variation settings in text appearances are fixed.
-      textPaint.setFontVariationSettings("");
       textPaint.setFontVariationSettings(fontVariationSettings);
     }
 

File: lib/java/com/google/android/material/shape/StateListCornerSize.java
Patch:
@@ -77,12 +77,11 @@ public static StateListCornerSize create(
       @NonNull CornerSize defaultCornerSize) {
     int resourceId = attributes.getResourceId(index, 0);
     if (resourceId == ID_NULL) {
-      return create(defaultCornerSize);
+      return create(ShapeAppearanceModel.getCornerSize(attributes, index, defaultCornerSize));
     }
     String typeName = context.getResources().getResourceTypeName(resourceId);
     if (!typeName.equals("xml")) {
-      return StateListCornerSize.create(
-          ShapeAppearanceModel.getCornerSize(attributes, index, defaultCornerSize));
+      return create(ShapeAppearanceModel.getCornerSize(attributes, index, defaultCornerSize));
     }
     try (XmlResourceParser parser = context.getResources().getXml(resourceId)) {
       StateListCornerSize stateListCornerSize = new StateListCornerSize();

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java
Patch:
@@ -44,7 +44,7 @@
 
 /**
  * Represents a standard bottom navigation bar for application. It is an implementation of <a
- * href="https://material.google.com/components/bottom-navigation.html">material design bottom
+ * href="https://m3.material.io/components/navigation-bar/overview">material design bottom
  * navigation</a>.
  *
  * <p>Bottom navigation bars make it easy for users to explore and switch between top-level views in

File: lib/java/com/google/android/material/progressindicator/BaseProgressIndicator.java
Patch:
@@ -645,7 +645,7 @@ public int getTrackCornerRadius() {
    */
   public void setTrackCornerRadius(@Px int trackCornerRadius) {
     if (spec.trackCornerRadius != trackCornerRadius) {
-      spec.trackCornerRadius = min(trackCornerRadius, spec.trackThickness / 2);
+      spec.trackCornerRadius = Math.round(min(trackCornerRadius, spec.trackThickness / 2f));
       invalidate();
     }
   }

File: lib/java/com/google/android/material/progressindicator/BaseProgressIndicatorSpec.java
Patch:
@@ -111,7 +111,7 @@ protected BaseProgressIndicatorSpec(
         min(
             getDimensionPixelSize(
                 context, a, R.styleable.BaseProgressIndicator_trackCornerRadius, 0),
-            trackThickness / 2);
+            Math.round(trackThickness / 2f));
     showAnimationBehavior =
         a.getInt(
             R.styleable.BaseProgressIndicator_showAnimationBehavior,

File: lib/java/com/google/android/material/progressindicator/CircularDrawingDelegate.java
Patch:
@@ -135,10 +135,10 @@ void adjustCanvas(
         -outerRadiusWithInset, -outerRadiusWithInset, outerRadiusWithInset, outerRadiusWithInset);
 
     // These are used when drawing the indicator and track.
-    useStrokeCap = spec.trackThickness / 2 <= spec.trackCornerRadius;
+    useStrokeCap = spec.trackThickness / 2f <= spec.trackCornerRadius;
     displayedTrackThickness = spec.trackThickness * trackThicknessFraction;
     displayedCornerRadius =
-        min(spec.trackThickness / 2, spec.trackCornerRadius) * trackThicknessFraction;
+        min(spec.trackThickness / 2f, spec.trackCornerRadius) * trackThicknessFraction;
     displayedAmplitude = spec.waveAmplitude * trackThicknessFraction;
 
     // Further adjusts the radius for animated visibility change.

File: lib/java/com/google/android/material/progressindicator/LinearDrawingDelegate.java
Patch:
@@ -119,10 +119,10 @@ void adjustCanvas(
     canvas.clipRect(-halfTrackLength, -halfTrackSize, halfTrackLength, halfTrackSize);
 
     // These are set for the drawing the indicator and track.
-    useStrokeCap = spec.trackThickness / 2 == spec.trackCornerRadius;
+    useStrokeCap = spec.trackThickness / 2f <= spec.trackCornerRadius;
     displayedTrackThickness = spec.trackThickness * trackThicknessFraction;
     displayedCornerRadius =
-        min(spec.trackThickness / 2, spec.trackCornerRadius) * trackThicknessFraction;
+        min(spec.trackThickness / 2f, spec.trackCornerRadius) * trackThicknessFraction;
     displayedAmplitude = spec.waveAmplitude * trackThicknessFraction;
 
     // Further adjusts the canvas for animated visibility change.

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -1750,7 +1750,6 @@ public void setTrackActiveTintList(@NonNull ColorStateList trackColor) {
     }
     trackColorActive = trackColor;
     activeTrackPaint.setColor(getColorForState(trackColorActive));
-    stopIndicatorPaint.setColor(getColorForState(trackColorActive));
     invalidate();
   }
 
@@ -2838,7 +2837,7 @@ protected void drawableStateChanged() {
     activeTrackPaint.setColor(getColorForState(trackColorActive));
     inactiveTicksPaint.setColor(getColorForState(tickColorInactive));
     activeTicksPaint.setColor(getColorForState(tickColorActive));
-    stopIndicatorPaint.setColor(getColorForState(trackColorActive));
+    stopIndicatorPaint.setColor(getColorForState(tickColorInactive));
     for (TooltipDrawable label : labels) {
       if (label.isStateful()) {
         label.setState(getDrawableState());

File: lib/java/com/google/android/material/textview/MaterialTextView.java
Patch:
@@ -123,7 +123,7 @@ public void setTextAppearance(@NonNull Context context, int resId) {
     if (canApplyLineHeight) {
       applyLineHeightFromViewAppearance(appearance);
     }
-    if (canForceRefreshFontVariationSettings) {
+    if (VERSION.SDK_INT >= VERSION_CODES.O) {
       maybeForceApplyFontVariationSettingsFromViewAppearance(appearance);
     }
     appearance.recycle();
@@ -150,7 +150,7 @@ private void initialize(@Nullable AttributeSet attrs, int defStyleAttr, int defS
     if (canApplyLineHeight) {
       applyLineHeightFromViewAppearance(appearance);
     }
-    if (canForceRefreshFontVariationSettings) {
+    if (VERSION.SDK_INT >= VERSION_CODES.O) {
       maybeForceApplyFontVariationSettingsFromViewAppearance(appearance);
     }
     appearance.recycle();

File: lib/java/com/google/android/material/resources/MaterialResources.java
Patch:
@@ -273,7 +273,7 @@ private static int getComplexUnit(TypedValue tv) {
    * contain values, the first given index takes precedence and is returned.
    */
   @StyleableRes
-  static int getIndexWithValue(
+  public static int getIndexWithValue(
       @NonNull TypedArray attributes, @StyleableRes int a, @StyleableRes int b) {
     if (attributes.hasValue(a)) {
       return a;

File: lib/java/com/google/android/material/resources/TextAppearance.java
Patch:
@@ -364,6 +364,8 @@ public void updateTextPaintMeasureState(
     textPaint.setTextSize(textSize);
 
     if (VERSION.SDK_INT >= VERSION_CODES.O) {
+      // TODO(b/264321145): Remove once variation settings in text appearances are fixed.
+      textPaint.setFontVariationSettings("");
       textPaint.setFontVariationSettings(fontVariationSettings);
     }
 

File: lib/java/com/google/android/material/progressindicator/DeterminateDrawable.java
Patch:
@@ -297,9 +297,9 @@ private void maybeStartAmplitudeAnimator(int level) {
     if (!baseSpec.hasWavyEffect()) {
       return;
     }
+    maybeInitializeAmplitudeAnimator();
     float newAmplitudeFraction = getAmplitudeFractionFromLevel(level);
     if (newAmplitudeFraction != targetAmplitudeFraction) {
-      maybeInitializeAmplitudeAnimator();
       if (amplitudeAnimator.isRunning()) {
         amplitudeAnimator.cancel();
       }
@@ -311,6 +311,8 @@ private void maybeStartAmplitudeAnimator(int level) {
         amplitudeInterpolator = amplitudeOffInterpolator;
         amplitudeAnimator.reverse();
       }
+    } else if (!amplitudeAnimator.isRunning()) {
+      setAmplitudeFraction(newAmplitudeFraction);
     }
   }
 

File: lib/java/com/google/android/material/internal/NavigationMenuItemView.java
Patch:
@@ -102,7 +102,6 @@ public NavigationMenuItemView(
     LayoutInflater.from(context).inflate(R.layout.design_navigation_menu_item, this, true);
     setIconSize(context.getResources().getDimensionPixelSize(R.dimen.design_navigation_icon_size));
     textView = findViewById(R.id.design_menu_item_text);
-    textView.setDuplicateParentStateEnabled(true);
     ViewCompat.setAccessibilityDelegate(textView, accessibilityDelegate);
   }
 

File: lib/java/com/google/android/material/internal/NavigationMenuPresenter.java
Patch:
@@ -729,8 +729,8 @@ private void prepareMenuItems() {
                 if (subMenuItem.isCheckable()) {
                   subMenuItem.setExclusiveCheckable(false);
                 }
-                if (item.isChecked()) {
-                  setCheckedItem(item);
+                if (subMenuItem.isChecked()) {
+                  setCheckedItem(subMenuItem);
                 }
                 items.add(new NavigationMenuTextItem(subMenuItem));
               }

File: lib/java/com/google/android/material/appbar/CollapsingToolbarLayout.java
Patch:
@@ -599,13 +599,15 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
       updateTextBounds(0, 0, getMeasuredWidth(), getMeasuredHeight(), /* forceRecalculate= */ true);
 
       int lineCount = collapsingTextHelper.getExpandedLineCount();
-      if (lineCount > 1) {
+      if (lineCount > 1 && collapsingTextHelper.getExpansionFraction() == 0f) {
         // Add extra height based on the amount of height beyond the first line of title text.
         int expandedTextHeight = Math.round(collapsingTextHelper.getExpandedTextFullHeight());
         extraMultilineHeight = expandedTextHeight * (lineCount - 1);
         int newHeight = getMeasuredHeight() + extraMultilineHeight;
         heightMeasureSpec = MeasureSpec.makeMeasureSpec(newHeight, MeasureSpec.EXACTLY);
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+      } else {
+        extraMultilineHeight = 0;
       }
     }
 

File: lib/java/com/google/android/material/internal/NavigationMenuPresenter.java
Patch:
@@ -619,7 +619,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
             NavigationMenuTextItem item = (NavigationMenuTextItem) items.get(position);
             subHeader.setText(item.getMenuItem().getTitle());
             TextViewCompat.setTextAppearance(subHeader, subheaderTextAppearance);
-            subHeader.setPadding(
+            subHeader.setPaddingRelative(
                 subheaderInsetStart,
                 subHeader.getPaddingTop(),
                 subheaderInsetEnd,
@@ -634,7 +634,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
         case VIEW_TYPE_SEPARATOR:
           {
             NavigationMenuSeparatorItem item = (NavigationMenuSeparatorItem) items.get(position);
-            holder.itemView.setPadding(
+            holder.itemView.setPaddingRelative(
                 dividerInsetStart,
                 item.getPaddingTop(),
                 dividerInsetEnd,

File: lib/java/com/google/android/material/motion/MaterialBackOrchestrator.java
Patch:
@@ -186,6 +186,9 @@ public void startListeningForBackCallbacks(
     @DoNotInline
     @Override
     public void stopListeningForBackCallbacks(@NonNull View view) {
+      if (onBackInvokedCallback == null) {
+        return;
+      }
       OnBackInvokedDispatcher onBackInvokedDispatcher = view.findOnBackInvokedDispatcher();
       if (onBackInvokedDispatcher == null) {
         return;

File: lib/java/com/google/android/material/navigation/NavigationView.java
Patch:
@@ -476,6 +476,8 @@ protected void onDetachedFromWindow() {
       DrawerLayout drawerLayout = (DrawerLayout) parent;
       drawerLayout.removeDrawerListener(backDrawerListener);
     }
+
+    backOrchestrator.stopListeningForBackCallbacks();
   }
 
   @Override

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -2721,6 +2721,9 @@ public void onMeasure(final int origWidthMeasureSpec, final int origHeightMeasur
       // We need to switch the text size based on whether the text is spanning 2 lines or not
       if (textView != null) {
         float textSize = tabTextSize;
+        if (isSelected() && selectedTabTextAppearance != -1) {
+          textSize = selectedTabTextSize;
+        }
         int maxLines = defaultMaxLines;
 
         if (iconView != null && iconView.getVisibility() == VISIBLE) {

File: lib/java/com/google/android/material/button/MaterialButtonToggleGroup.java
Patch:
@@ -569,13 +569,13 @@ private void adjustChildMarginsAndUpdateLayout() {
 
       LayoutParams params = buildLayoutParams(currentButton);
       if (getOrientation() == HORIZONTAL) {
-        MarginLayoutParamsCompat.setMarginEnd(params, 0);
-        MarginLayoutParamsCompat.setMarginStart(params, spacing - smallestStrokeWidth);
+        params.setMarginEnd(0);
+        params.setMarginStart(spacing - smallestStrokeWidth);
         params.topMargin = 0;
       } else {
         params.bottomMargin = 0;
         params.topMargin = spacing - smallestStrokeWidth;
-        MarginLayoutParamsCompat.setMarginEnd(params, 0);
+        params.setMarginStart(0);
       }
 
       currentButton.setLayoutParams(params);

File: lib/java/com/google/android/material/transition/TransitionUtils.java
Patch:
@@ -295,9 +295,9 @@ static Rect getRelativeBoundsRect(View view) {
     return new Rect(view.getLeft(), view.getTop(), view.getRight(), view.getBottom());
   }
 
-  static RectF getLocationOnScreen(View view) {
+  static RectF getLocationInWindow(View view) {
     int[] location = new int[2];
-    view.getLocationOnScreen(location);
+    view.getLocationInWindow(location);
     int left = location[0];
     int top = location[1];
     int right = left + view.getWidth();

File: lib/java/com/google/android/material/transition/platform/TransitionUtils.java
Patch:
@@ -300,9 +300,9 @@ static Rect getRelativeBoundsRect(View view) {
     return new Rect(view.getLeft(), view.getTop(), view.getRight(), view.getBottom());
   }
 
-  static RectF getLocationOnScreen(View view) {
+  static RectF getLocationInWindow(View view) {
     int[] location = new int[2];
-    view.getLocationOnScreen(location);
+    view.getLocationInWindow(location);
     int left = location[0];
     int top = location[1];
     int right = left + view.getWidth();

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -250,6 +250,7 @@ public void draw(@NonNull Canvas canvas) {
         indicatorIndex < animatorDelegate.activeIndicators.size();
         indicatorIndex++) {
       ActiveIndicator curIndicator = animatorDelegate.activeIndicators.get(indicatorIndex);
+      curIndicator.phaseFraction = getPhaseFraction();
       // Draws indicators.
       drawingDelegate.fillIndicator(canvas, paint, curIndicator, getAlpha());
 

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -250,6 +250,7 @@ public void draw(@NonNull Canvas canvas) {
         indicatorIndex < animatorDelegate.activeIndicators.size();
         indicatorIndex++) {
       ActiveIndicator curIndicator = animatorDelegate.activeIndicators.get(indicatorIndex);
+      curIndicator.phaseFraction = getPhaseFraction();
       // Draws indicators.
       drawingDelegate.fillIndicator(canvas, paint, curIndicator, getAlpha());
 

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -2579,16 +2579,16 @@ public void onOffsetChanged(
         // invisible. Otherwise, on API <= 24 a ghost rect that is outside of the drawing rect will
         // be ignored and the child would be drawn with no clipping.
         if (offsetY >= ghostRect.height()) {
-          child.setVisibility(INVISIBLE);
+          child.setAlpha(0f);
         } else {
-          child.setVisibility(VISIBLE);
+          child.setAlpha(1f);
         }
         ViewCompat.setClipBounds(child, ghostRect);
       } else {
         // Reset both the clip bounds and translationY of this view
         ViewCompat.setClipBounds(child, null);
         child.setTranslationY(0);
-        child.setVisibility(VISIBLE);
+        child.setAlpha(1f);
       }
     }
   }

File: lib/java/com/google/android/material/progressindicator/BaseProgressIndicator.java
Patch:
@@ -548,6 +548,7 @@ public int getTrackThickness() {
   public void setTrackThickness(@Px int trackThickness) {
     if (spec.trackThickness != trackThickness) {
       spec.trackThickness = trackThickness;
+      spec.trackCornerRadius = min(spec.trackCornerRadius, spec.trackThickness / 2);
       requestLayout();
     }
   }
@@ -634,7 +635,6 @@ public int getTrackCornerRadius() {
   public void setTrackCornerRadius(@Px int trackCornerRadius) {
     if (spec.trackCornerRadius != trackCornerRadius) {
       spec.trackCornerRadius = min(trackCornerRadius, spec.trackThickness / 2);
-      spec.validateSpec();
       invalidate();
     }
   }

File: catalog/java/io/material/catalog/transition/ContainerTransformConfigurationHelper.java
Patch:
@@ -19,7 +19,6 @@
 import io.material.catalog.R;
 
 import android.annotation.SuppressLint;
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.DialogInterface.OnDismissListener;
 import android.os.Build.VERSION_CODES;
@@ -54,7 +53,6 @@
  * A helper class which manages all configuration UI presented in {@link
  * TransitionContainerTransformDemoFragment}.
  */
-@TargetApi(VERSION_CODES.ICE_CREAM_SANDWICH)
 public class ContainerTransformConfigurationHelper {
 
   private static final String CUBIC_CONTROL_FORMAT = "%.3f";

File: lib/java/com/google/android/material/badge/BadgeDrawable.java
Patch:
@@ -41,6 +41,7 @@
 import androidx.annotation.IntDef;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.annotation.OptIn;
 import androidx.annotation.PluralsRes;
 import androidx.annotation.Px;
 import androidx.annotation.RestrictTo;
@@ -129,6 +130,7 @@
  * developer guidance</a> and <a href="https://material.io/components/badges/overview">design
  * guidelines</a>.
  */
+@OptIn(markerClass = com.google.android.material.badge.ExperimentalBadgeUtils.class)
 public class BadgeDrawable extends Drawable implements TextDrawableDelegate {
 
   private static final String TAG = "Badge";

File: lib/java/com/google/android/material/datepicker/DateFormatTextWatcher.java
Patch:
@@ -123,7 +123,7 @@ public void afterTextChanged(@NonNull Editable s) {
     }
 
     char nextCharHint = formatHint.charAt(s.length());
-    if (!Character.isDigit(nextCharHint)) {
+    if (!Character.isLetterOrDigit(nextCharHint)) {
       s.append(nextCharHint);
     }
   }

File: lib/java/com/google/android/material/carousel/UncontainedCarouselStrategy.java
Patch:
@@ -156,6 +156,7 @@ private KeylineState createCenterAlignedKeylineState(
       float mediumSize,
       float xSmallSize,
       float remainingSpace) {
+    xSmallSize = min(xSmallSize, largeSize);
 
     float extraSmallMask = getChildMaskPercentage(xSmallSize, largeSize, childMargins);
     float mediumMask = getChildMaskPercentage(mediumSize, largeSize, childMargins);
@@ -195,6 +196,7 @@ private KeylineState createLeftAlignedKeylineState(
       float mediumSize,
       int mediumCount,
       float xSmallSize) {
+    xSmallSize = min(xSmallSize, largeSize);
 
     // Make the left anchor size half the cut off item size to make the motion at the left closer
     // to the right where the cut off is.

File: lib/java/com/google/android/material/carousel/CarouselLayoutManager.java
Patch:
@@ -254,7 +254,7 @@ public void onDetachedFromWindow(RecyclerView view, Recycler recycler) {
 
   @Override
   public void onLayoutChildren(Recycler recycler, State state) {
-    if (state.getItemCount() <= 0) {
+    if (state.getItemCount() <= 0 || getContainerSize() <= 0f) {
       removeAndRecycleAllViews(recycler);
       currentFillStartPosition = 0;
       return;

File: lib/java/com/google/android/material/internal/CollapsingTextHelper.java
Patch:
@@ -1026,9 +1026,11 @@ private void calculateUsingTextSize(final float fraction, boolean forceRecalcula
       // collapsed text size
       float scaledDownWidth = expandedWidth * textSizeRatio;
 
-      if (forceRecalculate) {
+      if (forceRecalculate || fadeModeEnabled) {
         // If we're forcing a recalculate during a measure pass, use the expanded width since the
         // collapsed width might not be ready yet
+        // Or if the fade mode is enabled, we can also just use the expanded width because when
+        // fading out/in there is not a continuous scale transition between expanded/collapsed text
         availableWidth = expandedWidth;
       } else {
         // If the scaled down size is larger than the actual collapsed width, we need to

File: lib/java/com/google/android/material/carousel/Carousel.java
Patch:
@@ -32,4 +32,7 @@ interface Carousel {
 
   /** Gets the alignment of the carousel.  */
   @Alignment int getCarouselAlignment();
+
+  /** Gets the number of items in the carousel. */
+  int getItemCount();
 }

File: catalog/java/io/material/catalog/bottomappbar/BottomAppBarMainDemoFragment.java
Patch:
@@ -236,9 +236,9 @@ private void updateBackHandlingEnabled(int state) {
     switch (state) {
       case BottomSheetBehavior.STATE_EXPANDED:
       case BottomSheetBehavior.STATE_HALF_EXPANDED:
+      case BottomSheetBehavior.STATE_COLLAPSED:
         bottomDrawerOnBackPressedCallback.setEnabled(true);
         break;
-      case BottomSheetBehavior.STATE_COLLAPSED:
       case BottomSheetBehavior.STATE_HIDDEN:
         bottomDrawerOnBackPressedCallback.setEnabled(false);
         break;

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -375,6 +375,7 @@ public void setClickable(boolean clickable) {
   protected void onAttachedToWindow() {
     super.onAttachedToWindow();
 
+    cardViewHelper.updateClickable();
     MaterialShapeUtils.setParentAbsoluteElevation(this, cardViewHelper.getBackground());
   }
 

File: catalog/java/io/material/catalog/topappbar/TopAppBarCompressEffectFragment.java
Patch:
@@ -31,7 +31,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import com.google.android.material.appbar.AppBarLayout;
-import com.google.android.material.shape.MaterialShapeDrawable;
+import com.google.android.material.color.MaterialColors;
 import com.google.android.material.tabs.TabLayout;
 import io.material.catalog.feature.DemoFragment;
 import io.material.catalog.feature.DemoUtils;
@@ -59,8 +59,8 @@ public View onCreateDemoView(
     activity.setSupportActionBar(toolbar);
 
     AppBarLayout appBarLayout = view.findViewById(R.id.appbarlayout);
-    appBarLayout.setStatusBarForeground(
-        MaterialShapeDrawable.createWithElevationOverlay(requireContext()));
+    appBarLayout.setStatusBarForegroundColor(
+        MaterialColors.getColor(appBarLayout, R.attr.colorSurface));
 
     TabLayout tabs = view.findViewById(R.id.tabs);
     ToggleButton showHideTabsButton = view.findViewById(R.id.show_hide_tabs_button);

File: catalog/java/io/material/catalog/topappbar/TopAppBarScrollingDemoFragment.java
Patch:
@@ -29,7 +29,7 @@
 import android.view.ViewGroup;
 import androidx.annotation.Nullable;
 import com.google.android.material.appbar.AppBarLayout;
-import com.google.android.material.shape.MaterialShapeDrawable;
+import com.google.android.material.color.MaterialColors;
 import io.material.catalog.feature.DemoFragment;
 import io.material.catalog.feature.DemoUtils;
 
@@ -52,8 +52,8 @@ public View onCreateDemoView(
     activity.setSupportActionBar(toolbar);
 
     AppBarLayout appBarLayout = view.findViewById(R.id.appbarlayout);
-    appBarLayout.setStatusBarForeground(
-        MaterialShapeDrawable.createWithElevationOverlay(requireContext()));
+    appBarLayout.setStatusBarForegroundColor(
+        MaterialColors.getColor(appBarLayout, R.attr.colorSurface));
 
     return view;
   }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -4429,7 +4429,7 @@ private void updateCursorColor() {
       return;
     }
 
-    Drawable cursorDrawable = editText.getTextCursorDrawable();
+    Drawable cursorDrawable = DrawableCompat.wrap(editText.getTextCursorDrawable()).mutate();
     if (isOnError() && cursorErrorColor != null) {
       color = cursorErrorColor;
     }

File: catalog/java/io/material/catalog/topappbar/BaseTopAppBarActionBarDemoActivity.java
Patch:
@@ -31,6 +31,7 @@
 import androidx.annotation.StringRes;
 import io.material.catalog.feature.DemoActivity;
 import io.material.catalog.feature.DemoUtils;
+import io.material.catalog.windowpreferences.WindowPreferencesManager;
 
 /** A base activity for the Top App Bar Action Bar demos for the Catalog app. */
 public abstract class BaseTopAppBarActionBarDemoActivity extends DemoActivity {
@@ -44,6 +45,8 @@ protected void onCreate(@Nullable Bundle bundle) {
 
     getSupportActionBar().setDisplayHomeAsUpEnabled(true);
     getSupportActionBar().setSubtitle(R.string.cat_topappbar_action_bar_subtitle);
+
+    new WindowPreferencesManager(this).applyEdgeToEdgePreference(getWindow());
   }
 
   @Override

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -1448,8 +1448,8 @@ private void updateDrawableForTargetState(@State int state, boolean animate) {
       if (interpolatorAnimator.isRunning()) {
         interpolatorAnimator.reverse();
       } else {
+        float from = materialShapeDrawable.getInterpolation();
         float to = removeCorners ? calculateInterpolationWithCornersRemoved() : 1f;
-        float from = 1f - to;
         interpolatorAnimator.setFloatValues(from, to);
         interpolatorAnimator.start();
       }

File: lib/java/com/google/android/material/carousel/MaskableFrameLayout.java
Patch:
@@ -167,9 +167,6 @@ public void setOnMaskChangedListener(@Nullable OnMaskChangedListener onMaskChang
   }
 
   private void onMaskChanged() {
-    if (getWidth() == 0) {
-      return;
-    }
     shapeableDelegate.onMaskChanged(this, maskRect);
     if (onMaskChangedListener != null) {
       onMaskChangedListener.onMaskChanged(maskRect);

File: lib/javatests/com/google/android/material/carousel/CarouselLayoutManagerRtlTest.java
Patch:
@@ -114,7 +114,7 @@ KeylineState onFirstChildMeasuredWithMargins(
   public void testSingleItem_shouldBeInFocalRange() throws Throwable {
     setAdapterItems(recyclerView, layoutManager, adapter, CarouselHelper.createDataSetWithSize(1));
 
-    assertThat(((Maskable) recyclerView.getChildAt(0)).getMaskXPercentage()).isEqualTo(0F);
+    assertThat(recyclerView.getChildAt(0).getWidth()).isEqualTo(DEFAULT_ITEM_WIDTH);
   }
 
   @Test

File: lib/javatests/com/google/android/material/carousel/CarouselLayoutManagerTest.java
Patch:
@@ -255,7 +255,7 @@ public void testEmptyAdapter_shouldClearAllViewsFromRecyclerView() throws Throwa
   public void testSingleItem_shouldBeInFocalRange() throws Throwable {
     setAdapterItems(recyclerView, layoutManager, adapter, createDataSetWithSize(1));
 
-    assertThat(((Maskable) recyclerView.getChildAt(0)).getMaskXPercentage()).isEqualTo(0F);
+    assertThat(recyclerView.getChildAt(0).getWidth()).isEqualTo(DEFAULT_ITEM_WIDTH);
   }
 
   @Test

File: lib/java/com/google/android/material/search/SearchBar.java
Patch:
@@ -211,6 +211,9 @@ public SearchBar(@NonNull Context context, @Nullable AttributeSet attrs, int def
     accessibilityManager =
         (AccessibilityManager) getContext().getSystemService(Context.ACCESSIBILITY_SERVICE);
     setupTouchExplorationStateChangeListener();
+    if (getContentDescription() == null) {
+      setContentDescription(getResources().getText(R.string.searchbar_default_content_description));
+    }
   }
 
   private void setupTouchExplorationStateChangeListener() {

File: lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java
Patch:
@@ -845,7 +845,7 @@ private void showViewImpl() {
 
   private int getViewAbsoluteBottom() {
     int[] absoluteLocation = new int[2];
-    view.getLocationOnScreen(absoluteLocation);
+    view.getLocationInWindow(absoluteLocation);
     return absoluteLocation[1] + view.getHeight();
   }
 

File: tests/javatests/com/google/android/material/testutils/NavigationViewActions.java
Patch:
@@ -36,7 +36,7 @@
 
 public class NavigationViewActions {
   /** Sets item text appearance on the content of the navigation view. */
-  public static ViewAction setItemTextAppearance(final @StyleRes int resId) {
+  public static ViewAction setItemTextAppearance(@StyleRes final int resId, boolean isActiveBold) {
     return new ViewAction() {
       @Override
       public Matcher<View> getConstraints() {
@@ -54,6 +54,7 @@ public void perform(UiController uiController, View view) {
 
         NavigationView navigationView = (NavigationView) view;
         navigationView.setItemTextAppearance(resId);
+        navigationView.setItemTextAppearanceActiveBoldEnabled(isActiveBold);
 
         uiController.loopMainThreadUntilIdle();
       }

File: catalog/java/io/material/catalog/color/ColorGrid.java
Patch:
@@ -76,10 +76,9 @@ private ColorGrid(
     this.materialColorSpecOnAccentContainer = materialColorSpecOnAccentContainer;
   }
 
-  View renderView(Context context, ViewGroup container) {
+  View renderView(LayoutInflater layoutInflater, ViewGroup container) {
     View catalogColorsGrid =
-        LayoutInflater.from(context)
-            .inflate(R.layout.cat_colors_grid, container, /* attachToRoot= */ false);
+        layoutInflater.inflate(R.layout.cat_colors_grid, container, /* attachToRoot= */ false);
 
     bindColorSpecItem(catalogColorsGrid, R.id.cat_color_accent, materialColorSpecAccent);
     bindColorSpecItem(catalogColorsGrid, R.id.cat_color_on_accent, materialColorSpecOnAccent);

File: catalog/java/io/material/catalog/color/ColorHarmonizationDemoActivity.java
Patch:
@@ -148,7 +148,7 @@ private void createColorGridAndPopulateLayout(
       @IdRes int layoutId) {
     ColorGrid colorGrid = createColorGrid(context, colorHarmonizationGridRowData);
     LinearLayout layout = demoView.findViewById(layoutId);
-    layout.addView(colorGrid.renderView(context, layout));
+    layout.addView(colorGrid.renderView(getLayoutInflater(), layout));
   }
 
   private ColorGrid createColorGrid(

File: lib/java/com/google/android/material/carousel/Arrangement.java
Patch:
@@ -235,7 +235,7 @@ private float cost(float targetLargeSize) {
    * @return the arrangement that is considered the most desirable and has been adjusted to fit
    *     within the available space
    */
-    static Arrangement findLowestCostArrangement(
+  static Arrangement findLowestCostArrangement(
       float availableSpace,
       float targetSmallSize,
       float minSmallSize,

File: lib/java/com/google/android/material/timepicker/TimePickerTextInputPresenter.java
Patch:
@@ -236,7 +236,7 @@ public void show() {
   public void hide() {
     View currentFocus = timePickerView.getFocusedChild();
     if (currentFocus != null) {
-      ViewUtils.hideKeyboard(currentFocus);
+      ViewUtils.hideKeyboard(currentFocus, /* useWindowInsetsController= */ false);
     }
 
     timePickerView.setVisibility(GONE);

File: lib/javatests/com/google/android/material/carousel/MaskableFrameLayoutTest.java
Patch:
@@ -67,6 +67,7 @@ public void testShapeAppearanceWithAbsoluteCornerSizes_shouldBeClamped() {
     ShapeAppearanceModel model =
         new ShapeAppearanceModel.Builder().setAllCornerSizes(new AbsoluteCornerSize(200F)).build();
     maskableFrameLayout.setShapeAppearanceModel(model);
+    maskableFrameLayout.setMaskRectF(new RectF(0F, 0F, 50F, 50F));
     CornerSize topRightCornerSize =
         maskableFrameLayout.getShapeAppearanceModel().getTopRightCornerSize();
 
@@ -80,6 +81,7 @@ public void testShapeAppearanceWithAbsoluteCornerSizes_shouldBeClamped() {
   public void testForceCompatClipping_shouldNotUseViewOutlineProvider() {
     MaskableFrameLayout maskableFrameLayout = createMaskableFrameLayoutWithSize(50, 50);
     ShapeAppearanceModel model = new ShapeAppearanceModel.Builder().setAllCornerSizes(10F).build();
+    maskableFrameLayout.setMaskRectF(new RectF(0F, 0F, 50F, 50F));
     maskableFrameLayout.setShapeAppearanceModel(model);
 
     assertThat(maskableFrameLayout.getClipToOutline()).isTrue();
@@ -94,6 +96,7 @@ public void testRoundedCornersApi22_usesViewOutlineProvider() {
     MaskableFrameLayout maskableFrameLayout = createMaskableFrameLayoutWithSize(50, 50);
     ShapeAppearanceModel model = new ShapeAppearanceModel.Builder().setAllCornerSizes(10F).build();
     maskableFrameLayout.setShapeAppearanceModel(model);
+    maskableFrameLayout.setMaskRectF(new RectF(0F, 0F, 50F, 50F));
 
     assertThat(maskableFrameLayout.getClipToOutline()).isTrue();
   }

File: lib/java/com/google/android/material/shadow/ShadowDrawableWrapper.java
Patch:
@@ -29,7 +29,7 @@
 import android.graphics.RectF;
 import android.graphics.Shader;
 import android.graphics.drawable.Drawable;
-import androidx.appcompat.graphics.drawable.DrawableWrapper;
+import androidx.appcompat.graphics.drawable.DrawableWrapperCompat;
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
@@ -40,7 +40,7 @@
  * @deprecated Use {@link com.google.android.material.shape.MaterialShapeDrawable} instead.
  */
 @Deprecated
-public class ShadowDrawableWrapper extends DrawableWrapper {
+public class ShadowDrawableWrapper extends DrawableWrapperCompat {
   // used to calculate content padding
   static final double COS_45 = Math.cos(Math.toRadians(45));
 
@@ -365,7 +365,7 @@ private void buildComponents(@NonNull Rect bounds) {
         bounds.right - rawMaxShadowSize,
         bounds.bottom - verticalOffset);
 
-    getWrappedDrawable()
+    getDrawable()
         .setBounds(
             (int) contentBounds.left,
             (int) contentBounds.top,

File: lib/java/com/google/android/material/search/SearchViewAnimationHelper.java
Patch:
@@ -339,7 +339,7 @@ private Animator getRootViewAnimator(boolean show) {
     Rect toClipBounds =
         initialHideToClipBounds != null
             ? initialHideToClipBounds
-            : ViewUtils.calculateRectFromBounds(rootView);
+            : ViewUtils.calculateRectFromBounds(searchView);
     Rect fromClipBounds =
         initialHideFromClipBounds != null
             ? initialHideFromClipBounds

File: lib/java/com/google/android/material/datepicker/DateSelector.java
Patch:
@@ -139,7 +139,7 @@ static void showKeyboardWithAutoHideBehavior(@NonNull EditText... editTexts) {
               return;
             }
           }
-          ViewUtils.hideKeyboard(view);
+          ViewUtils.hideKeyboard(view, /* useWindowInsetsController= */ false);
         };
 
     for (EditText editText : editTexts) {

File: lib/java/com/google/android/material/color/DynamicColors.java
Patch:
@@ -492,6 +492,7 @@ private static boolean maybeApplyThemeOverlayWithUpdatedNeutralChroma(
    * @return True, if Android version is S or T and preUDynamicNeutralChromaUpdateEnabled is true in
    *     current context.
    */
+  @ChecksSdkIntAtLeast(api = VERSION_CODES.S)
   private static boolean shouldOverrideNeutralChroma(@NonNull Context context) {
     // TODO(b/272585197) Remove after tonal surface migration is complete.
     boolean shouldUpdateNeutralChroma =

File: lib/java/com/google/android/material/sidesheet/RightSheetDelegate.java
Patch:
@@ -63,13 +63,13 @@ int getExpandedOffset() {
   boolean isReleasedCloseToOriginEdge(@NonNull View releasedChild) {
     // To be considered released close to the origin (right) edge, the released child's left must
     // be at least halfway to the origin (right) edge of the screen.
-    return releasedChild.getLeft() > (getHiddenOffset() - getExpandedOffset()) / 2;
+    return releasedChild.getLeft() > (getHiddenOffset() + getExpandedOffset()) / 2;
   }
 
   @Override
   boolean isSwipeSignificant(float xVelocity, float yVelocity) {
     return SheetUtils.isSwipeMostlyHorizontal(xVelocity, yVelocity)
-        && yVelocity > sheetBehavior.getSignificantVelocityThreshold();
+        && Math.abs(xVelocity) > sheetBehavior.getSignificantVelocityThreshold();
   }
 
   @Override

File: lib/java/com/google/android/material/datepicker/RangeDateSelector.java
Patch:
@@ -35,7 +35,6 @@
 import androidx.annotation.RestrictTo.Scope;
 import androidx.core.util.Pair;
 import androidx.core.util.Preconditions;
-import androidx.core.view.ViewCompat;
 import com.google.android.material.internal.ManufacturerUtils;
 import com.google.android.material.resources.MaterialAttributes;
 import com.google.android.material.textfield.TextInputLayout;
@@ -212,8 +211,6 @@ public View onCreateTextInputView(
     final TextInputLayout startTextInput =
         root.findViewById(R.id.mtrl_picker_text_input_range_start);
     final TextInputLayout endTextInput = root.findViewById(R.id.mtrl_picker_text_input_range_end);
-    startTextInput.setErrorAccessibilityLiveRegion(ViewCompat.ACCESSIBILITY_LIVE_REGION_NONE);
-    endTextInput.setErrorAccessibilityLiveRegion(ViewCompat.ACCESSIBILITY_LIVE_REGION_NONE);
     EditText startEditText = startTextInput.getEditText();
     EditText endEditText = endTextInput.getEditText();
     if (ManufacturerUtils.isDateInputKeyboardMissingSeparatorCharacters()) {

File: lib/java/com/google/android/material/datepicker/SingleDateSelector.java
Patch:
@@ -33,7 +33,6 @@
 import androidx.annotation.RestrictTo;
 import androidx.annotation.RestrictTo.Scope;
 import androidx.core.util.Pair;
-import androidx.core.view.ViewCompat;
 import com.google.android.material.internal.ManufacturerUtils;
 import com.google.android.material.resources.MaterialAttributes;
 import com.google.android.material.textfield.TextInputLayout;
@@ -113,7 +112,6 @@ public View onCreateTextInputView(
     View root = layoutInflater.inflate(R.layout.mtrl_picker_text_input_date, viewGroup, false);
 
     TextInputLayout dateTextInput = root.findViewById(R.id.mtrl_picker_text_input_date);
-    dateTextInput.setErrorAccessibilityLiveRegion(ViewCompat.ACCESSIBILITY_LIVE_REGION_NONE);
     EditText dateEditText = dateTextInput.getEditText();
     if (ManufacturerUtils.isDateInputKeyboardMissingSeparatorCharacters()) {
       // Using the URI variation places the '/' and '.' in more prominent positions

File: lib/java/com/google/android/material/badge/BadgeDrawable.java
Patch:
@@ -158,7 +158,7 @@ public class BadgeDrawable extends Drawable implements TextDrawableDelegate {
    * If the badge string exceeds the maximum allowed number of characters, append this suffix to the
    * truncated badge text and display it as the badge text instead.
    */
-  static final String DEFAULT_EXCEED_MAX_BADGE_TEXT_SUFFIX = "…";
+  static final String DEFAULT_EXCEED_MAX_BADGE_TEXT_SUFFIX = "\u2026";
 
   /**
    * The badge offset begins at the edge of the anchor.

File: lib/javatests/com/google/android/material/badge/BadgeDrawableTest.java
Patch:
@@ -93,6 +93,8 @@ public void testSavedState() {
     badgeDrawable.setBackgroundColor(testBackgroundColor);
     badgeDrawable.setBadgeTextColor(testBadgeTextColor);
     badgeDrawable.setVisible(false);
+    badgeDrawable.setMaxNumber(999);
+    badgeDrawable.setMaxCharacterCount(4);
     badgeDrawable.setBadgeNumberLocale(TEST_BADGE_NUMBER_LOCALE);
 
     Parcel parcel = Parcel.obtain();
@@ -109,6 +111,7 @@ public void testSavedState() {
     // Values based on the default badge style.
     assertThat(restoredBadgeDrawable.getAlpha()).isEqualTo(255);
     assertThat(restoredBadgeDrawable.getMaxCharacterCount()).isEqualTo(4);
+    assertThat(restoredBadgeDrawable.getMaxNumber()).isEqualTo(999);
     assertThat(restoredBadgeDrawable.getBadgeGravity()).isEqualTo(BadgeDrawable.TOP_START);
     // badge padding
     assertThat(restoredBadgeDrawable.getHorizontalPadding()).isEqualTo(TEST_BADGE_HORIZONTAL_PADDING);

File: tests/javatests/com/google/android/material/bottomnavigation/BottomNavigationViewTest.java
Patch:
@@ -695,7 +695,7 @@ public void testSavedState() throws Throwable {
 
           assertTrue(testView.getBadge(R.id.destination_home).isVisible());
           assertEquals(75, testView.getBadge(R.id.destination_home).getNumber());
-          assertEquals(4, testView.getBadge(R.id.destination_home).getMaxCharacterCount());
+          assertEquals(999, testView.getBadge(R.id.destination_home).getMaxNumber());
         });
   }
 

File: lib/java/com/google/android/material/motion/MaterialBottomContainerBackHelper.java
Patch:
@@ -44,7 +44,7 @@
  * @hide
  */
 @RestrictTo(LIBRARY_GROUP)
-public class MaterialBottomContainerBackHelper extends MaterialBackAnimationHelper {
+public class MaterialBottomContainerBackHelper extends MaterialBackAnimationHelper<View> {
 
   private final float maxScaleXDistance;
   private final float maxScaleYDistance;

File: lib/java/com/google/android/material/motion/MaterialMainContainerBackHelper.java
Patch:
@@ -51,7 +51,7 @@
  * @hide
  */
 @RestrictTo(LIBRARY_GROUP)
-public class MaterialMainContainerBackHelper extends MaterialBackAnimationHelper {
+public class MaterialMainContainerBackHelper extends MaterialBackAnimationHelper<View> {
 
   private static final float MIN_SCALE = 0.9f;
 

File: lib/java/com/google/android/material/motion/MaterialSideContainerBackHelper.java
Patch:
@@ -49,7 +49,7 @@
  * @hide
  */
 @RestrictTo(LIBRARY_GROUP)
-public class MaterialSideContainerBackHelper extends MaterialBackAnimationHelper {
+public class MaterialSideContainerBackHelper extends MaterialBackAnimationHelper<View> {
 
   private final float maxScaleXDistanceShrink;
   private final float maxScaleXDistanceGrow;

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -2043,7 +2043,7 @@ void onFlingFinished(@NonNull CoordinatorLayout parent, @NonNull T layout) {
 
     @Override
     int getMaxDragOffset(@NonNull T view) {
-      return -view.getDownNestedScrollRange();
+      return -view.getDownNestedScrollRange() + view.getTopInset();
     }
 
     @Override

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -1597,6 +1597,9 @@ public void handleBackInvoked() {
             public void onAnimationEnd(Animator animation) {
               // Hide immediately following the built-in predictive back slide down animation.
               setStateInternal(STATE_HIDDEN);
+              if (viewRef != null && viewRef.get() != null) {
+                viewRef.get().requestLayout();
+              }
             }
           });
     } else {

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -280,8 +280,8 @@ public AppBarLayout(@NonNull Context context, @Nullable AttributeSet attrs, int
     if (a.hasValue(R.styleable.AppBarLayout_expanded)) {
       setExpanded(
           a.getBoolean(R.styleable.AppBarLayout_expanded, false),
-          false, /* animate */
-          false /* force */);
+          /* animate */ false,
+          /* force */ false);
     }
 
     if (Build.VERSION.SDK_INT >= 21 && a.hasValue(R.styleable.AppBarLayout_elevation)) {

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -968,7 +968,7 @@ public PointerIcon onResolvePointerIcon(@NonNull MotionEvent event, int pointerI
     if (getCloseIconTouchBounds().contains(event.getX(), event.getY()) && isEnabled()) {
       return PointerIcon.getSystemIcon(getContext(), PointerIcon.TYPE_HAND);
     }
-    return null;
+    return super.onResolvePointerIcon(event, pointerIndex);
   }
 
   /** @hide */

File: catalog/java/io/material/catalog/carousel/MultiBrowseDemoFragment.java
Patch:
@@ -68,7 +68,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle bundle) {
     RecyclerView multiBrowseStartRecyclerView =
         view.findViewById(R.id.multi_browse_start_carousel_recycler_view);
     CarouselLayoutManager multiBrowseStartCarouselLayoutManager = new CarouselLayoutManager();
-    multiBrowseStartCarouselLayoutManager.setDrawDebugEnabled(
+    multiBrowseStartCarouselLayoutManager.setDebuggingEnabled(
         multiBrowseStartRecyclerView, debugSwitch.isChecked());
     multiBrowseStartRecyclerView.setLayoutManager(multiBrowseStartCarouselLayoutManager);
     multiBrowseStartRecyclerView.setNestedScrollingEnabled(false);
@@ -77,7 +77,7 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle bundle) {
         (buttonView, isChecked) -> {
           multiBrowseStartRecyclerView.setBackgroundResource(
               isChecked ? R.drawable.dashed_outline_rectangle : 0);
-          multiBrowseStartCarouselLayoutManager.setDrawDebugEnabled(
+          multiBrowseStartCarouselLayoutManager.setDebuggingEnabled(
               multiBrowseStartRecyclerView, isChecked);
         });
 

File: lib/java/com/google/android/material/floatingactionbutton/FloatingActionButtonImpl.java
Patch:
@@ -372,6 +372,9 @@ void setShadowPaddingEnabled(boolean shadowPaddingEnabled) {
 
   void onElevationsChanged(
       float elevation, float hoveredFocusedTranslationZ, float pressedTranslationZ) {
+    // If there is currently a state animation, we want to end the animation by jumping
+    // the drawable to the current state before changing the elevation.
+    jumpDrawableToCurrentState();
     updatePadding();
     updateShapeElevation(elevation);
   }

File: catalog/java/io/material/catalog/transition/TransitionContainerTransformStartDemoActivity.java
Patch:
@@ -46,9 +46,8 @@ public class TransitionContainerTransformStartDemoActivity extends DemoActivity
   protected void onCreate(@Nullable Bundle bundle) {
     getWindow().requestFeature(Window.FEATURE_ACTIVITY_TRANSITIONS);
 
-    // Set up shared element transition and disable overlay so views don't show above system bars
+    // Set up shared element transition
     setExitSharedElementCallback(new MaterialContainerTransformSharedElementCallback());
-    getWindow().setSharedElementsUseOverlay(false);
 
     super.onCreate(bundle);
 

File: lib/java/com/google/android/material/timepicker/ChipTextInputComboView.java
Patch:
@@ -108,7 +108,7 @@ public void setChecked(boolean checked) {
     // Instead, the text in chip should be hidden.
     chip.setVisibility(checked ? GONE : VISIBLE);
     if (isChecked()) {
-      ViewUtils.requestFocusAndShowKeyboard(editText);
+      ViewUtils.requestFocusAndShowKeyboard(editText, /* useWindowInsetsController= */ false);
     }
   }
 

File: catalog/java/io/material/catalog/preferences/ThemeOverlayUtils.java
Patch:
@@ -20,6 +20,7 @@
 import android.util.SparseIntArray;
 import androidx.annotation.IdRes;
 import androidx.annotation.StyleRes;
+import com.google.android.material.color.ThemeUtils;
 
 /** Utils for theme themeOverlays. */
 public class ThemeOverlayUtils {
@@ -51,9 +52,10 @@ public static int getThemeOverlay(@IdRes int id) {
     return themeOverlays.get(id);
   }
 
+  @SuppressWarnings("RestrictTo")
   public static void applyThemeOverlays(Activity activity) {
     for (int i = 0; i < themeOverlays.size(); ++i) {
-      activity.setTheme(themeOverlays.valueAt(i));
+      ThemeUtils.applyThemeOverlay(activity, themeOverlays.valueAt(i));
     }
   }
 }

File: lib/java/com/google/android/material/carousel/MaskableFrameLayout.java
Patch:
@@ -74,7 +74,7 @@ protected void onSizeChanged(int w, int h, int oldw, int oldh) {
   }
 
   /**
-   * Sets the percentage by which this view should mask itself along the x axis.
+   * Sets the percentage by which this {@link View} masks by along the x axis.
    *
    * @param percentage 0 when this view is fully unmasked. 1 when this view is fully masked.
    */
@@ -88,7 +88,7 @@ public void setMaskXPercentage(float percentage) {
   }
 
   /**
-   * Gets the percentage by which this {@link View} should mask itself along the x axis.
+   * Gets the percentage by which this {@link View} is masked by along the x axis.
    *
    * @return a float between 0 and 1 where 0 is fully unmasked and 1 is fully masked.
    */
@@ -97,7 +97,7 @@ public float getMaskXPercentage() {
     return maskXPercentage;
   }
 
-  /** Gets a {@link RectF} that this {@link View} is masking itself by. */
+  /** Gets a {@link RectF} that this {@link View} is masked itself by. */
   @NonNull
   @Override
   public RectF getMaskRectF() {

File: lib/java/com/google/android/material/carousel/OnMaskChangedListener.java
Patch:
@@ -25,7 +25,7 @@
 public interface OnMaskChangedListener {
 
   /**
-   * Called when changes in a mask's {@link RectF} changes.
+   * Called when changes in a mask's {@link RectF} occur.
    *
    * @param maskRect the bounds of the mask relative to the drawing bounds of the View
    */

File: lib/java/com/google/android/material/carousel/MultiBrowseCarouselStrategy.java
Patch:
@@ -81,7 +81,7 @@ private float getSmallSize(@NonNull Context context) {
 
   @Override
   @NonNull
-  protected KeylineState onFirstChildMeasuredWithMargins(
+  KeylineState onFirstChildMeasuredWithMargins(
       @NonNull Carousel carousel, @NonNull View child) {
     LayoutParams childLayoutParams = (LayoutParams) child.getLayoutParams();
     float childHorizontalMargins = childLayoutParams.leftMargin + childLayoutParams.rightMargin;

File: lib/javatests/com/google/android/material/carousel/CarouselLayoutManagerRtlTest.java
Patch:
@@ -73,7 +73,7 @@ public void testFirstAdapterItem_isDrawnAtRightOfContainer() throws Throwable {
     layoutManager.setCarouselStrategy(
         new CarouselStrategy() {
           @Override
-          protected KeylineState onFirstChildMeasuredWithMargins(
+          KeylineState onFirstChildMeasuredWithMargins(
               @NonNull Carousel carousel, @NonNull View child) {
             return getTestCenteredKeylineState();
           }
@@ -92,7 +92,7 @@ public void testScrollBeyondMaxHorizontalScroll_shouldLimitToMaxScrollOffset() t
     layoutManager.setCarouselStrategy(
         new CarouselStrategy() {
           @Override
-          protected KeylineState onFirstChildMeasuredWithMargins(
+          KeylineState onFirstChildMeasuredWithMargins(
               @NonNull Carousel carousel, @NonNull View child) {
             return keylineState;
           }

File: lib/java/com/google/android/material/carousel/CarouselConfiguration.java
Patch:
@@ -31,7 +31,7 @@ public abstract class CarouselConfiguration {
    *
    * <p>This method is called when {@link Carousel} measures the first item to be added to its
    * scroll container. This method then must create a {@link KeylineState} which tells {@link
-   * Carousel} how to fill the scroll container with items — how many are visible at once, what
+   * Carousel} how to fill the scroll container with items - how many are visible at once, what
    * their sizes are, and where they're placed.
    *
    * <p>For example, take a simple arrangement that fills the scroll container with two large items

File: lib/java/com/google/android/material/tabs/TabLayoutMediator.java
Patch:
@@ -230,7 +230,7 @@ public void onPageScrolled(int position, float positionOffset, int positionOffse
         boolean updateIndicator =
             !(scrollState == SCROLL_STATE_SETTLING && previousScrollState == SCROLL_STATE_IDLE);
         tabLayout.setScrollPosition(
-            position, positionOffset, updateSelectedTabView, updateIndicator);
+            position, positionOffset, updateSelectedTabView, updateIndicator, false);
       }
     }
 

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -529,6 +529,7 @@ public boolean onLayoutChild(
       peekHeightMin =
           parent.getResources().getDimensionPixelSize(R.dimen.design_bottom_sheet_peek_height_min);
       setWindowInsetsListener(child);
+      ViewCompat.setWindowInsetsAnimationCallback(child, new InsetsAnimationCallback(child));
       viewRef = new WeakReference<>(child);
       // Only set MaterialShapeDrawable as background if shapeTheming is enabled, otherwise will
       // default to android:background declared in styles or layout.

File: lib/java/com/google/android/material/datepicker/MaterialDatePicker.java
Patch:
@@ -182,8 +182,9 @@ public final void onSaveInstanceState(@NonNull Bundle bundle) {
 
     CalendarConstraints.Builder constraintsBuilder =
         new CalendarConstraints.Builder(calendarConstraints);
-    if (calendar.getCurrentMonth() != null) {
-      constraintsBuilder.setOpenAt(calendar.getCurrentMonth().timeInMillis);
+    Month currentMonth = calendar == null ? null : calendar.getCurrentMonth();
+    if (currentMonth != null) {
+      constraintsBuilder.setOpenAt(currentMonth.timeInMillis);
     }
     bundle.putParcelable(CALENDAR_CONSTRAINTS_KEY, constraintsBuilder.build());
     bundle.putParcelable(DAY_VIEW_DECORATOR_KEY, dayViewDecorator);

File: lib/java/com/google/android/material/timepicker/TimeModel.java
Patch:
@@ -66,7 +66,7 @@ public TimeModel(int hour, int minute, @ActiveSelection int selection, @TimeForm
     this.format = format;
     period = getPeriod(hour);
     minuteInputValidator = new MaxInputValidator(59);
-    hourInputValidator = new MaxInputValidator(format == CLOCK_24H ? 24 : 12);
+    hourInputValidator = new MaxInputValidator(format == CLOCK_24H ? 23 : 12);
   }
 
   protected TimeModel(Parcel in) {

File: lib/javatests/com/google/android/material/timepicker/TimeModelTest.java
Patch:
@@ -43,7 +43,7 @@ public void with12HFormat_hasCorrectValidators() {
   public void with24HFormat_hasCorrectValidators() {
     TimeModel timeModel = new TimeModel(CLOCK_24H);
 
-    assertThat(timeModel.getHourInputValidator().getMax()).isEqualTo(24);
+    assertThat(timeModel.getHourInputValidator().getMax()).isEqualTo(23);
     assertThat(timeModel.getMinuteInputValidator().getMax()).isEqualTo(59);
   }
 

File: lib/java/com/google/android/material/datepicker/DateSelector.java
Patch:
@@ -100,6 +100,9 @@ public interface DateSelector<S> extends Parcelable {
   @NonNull
   String getSelectionContentDescription(@NonNull Context context);
 
+  @Nullable
+  String getError();
+
   @StringRes
   int getDefaultTitleResId();
 

File: catalog/java/io/material/catalog/datepicker/DatePickerMainDemoFragment.java
Patch:
@@ -68,7 +68,7 @@ private void initSettings() {
     today = MaterialDatePicker.todayInUtcMilliseconds();
     Calendar calendar = getClearedUtc();
     calendar.setTimeInMillis(today);
-    calendar.roll(Calendar.MONTH, 1);
+    calendar.add(Calendar.MONTH, 1);
     nextMonth = calendar.getTimeInMillis();
 
     calendar.setTimeInMillis(today);
@@ -79,7 +79,7 @@ private void initSettings() {
     decThisYear = calendar.getTimeInMillis();
 
     calendar.setTimeInMillis(today);
-    calendar.roll(Calendar.YEAR, 1);
+    calendar.add(Calendar.YEAR, 1);
     oneYearForward = calendar.getTimeInMillis();
 
     todayPair = new Pair<>(today, today);

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -2420,12 +2420,13 @@ public boolean onRequestChildRectangleOnScreen(
       final AppBarLayout header = findFirstDependency(parent.getDependencies(child));
       if (header != null) {
         // Offset the rect by the child's left/top
-        rectangle.offset(child.getLeft(), child.getTop());
+        Rect offsetRect = new Rect(rectangle);
+        offsetRect.offset(child.getLeft(), child.getTop());
 
         final Rect parentRect = tempRect1;
         parentRect.set(0, 0, parent.getWidth(), parent.getHeight());
 
-        if (!parentRect.contains(rectangle)) {
+        if (!parentRect.contains(offsetRect)) {
           // If the rectangle can not be fully seen the visible bounds, collapse
           // the AppBarLayout
           header.setExpanded(false, !immediate);

File: lib/java/com/google/android/material/search/SearchBar.java
Patch:
@@ -108,7 +108,7 @@ public SearchBar(@NonNull Context context) {
   }
 
   public SearchBar(@NonNull Context context, @Nullable AttributeSet attrs) {
-    this(context, attrs, R.attr.searchBarStyle);
+    this(context, attrs, R.attr.materialSearchBarStyle);
   }
 
   public SearchBar(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {

File: lib/java/com/google/android/material/search/SearchView.java
Patch:
@@ -116,7 +116,7 @@ public SearchView(@NonNull Context context) {
   }
 
   public SearchView(@NonNull Context context, @Nullable AttributeSet attrs) {
-    this(context, attrs, R.attr.searchViewStyle);
+    this(context, attrs, R.attr.materialSearchViewStyle);
   }
 
   public SearchView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {

File: lib/javatests/com/google/android/material/theme/ThemeTest.java
Patch:
@@ -384,8 +384,8 @@ public class ThemeTest {
           R.attr.materialCardViewElevatedStyle,
           R.attr.materialSwitchStyle,
           R.attr.radioButtonStyle,
-          R.attr.searchBarStyle,
-          R.attr.searchViewStyle,
+          R.attr.materialSearchBarStyle,
+          R.attr.materialSearchViewStyle,
           R.attr.sliderStyle,
           R.attr.snackbarStyle,
           R.attr.snackbarButtonStyle,

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -573,7 +573,7 @@ public TabLayout(@NonNull Context context, @Nullable AttributeSet attrs, int def
         a.getDimensionPixelSize(R.styleable.TabLayout_tabPaddingBottom, tabPaddingBottom);
 
     if (ThemeEnforcement.isMaterial3Theme(context)) {
-      defaultTabTextAppearance = R.attr.textAppearanceLabelLarge;
+      defaultTabTextAppearance = R.attr.textAppearanceTitleSmall;
     } else {
       defaultTabTextAppearance = R.attr.textAppearanceButton;
     }

File: lib/java/com/google/android/material/internal/NavigationMenuItemView.java
Patch:
@@ -23,6 +23,7 @@
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.graphics.Color;
+import android.graphics.Typeface;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.StateListDrawable;
@@ -208,6 +209,8 @@ public void setCheckable(boolean checkable) {
   public void setChecked(boolean checked) {
     refreshDrawableState();
     textView.setChecked(checked);
+    // TODO(b/246765947): Use component tokens to control font weight
+    textView.setTypeface(textView.getTypeface(), checked ? Typeface.BOLD : Typeface.NORMAL);
   }
 
   @Override

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -3280,7 +3280,9 @@ private void tweenIndicatorPosition(View startTitle, View endTitle, float fracti
      * @param duration The duration over which the animation should take place.
      */
     void animateIndicatorToPosition(final int position, int duration) {
-      if (indicatorAnimator != null && indicatorAnimator.isRunning()) {
+      if (indicatorAnimator != null
+          && indicatorAnimator.isRunning()
+          && indicatorPosition != position) {
         indicatorAnimator.cancel();
       }
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -785,7 +785,7 @@ private void assignBoxBackgroundByMode() {
         break;
       case BOX_BACKGROUND_OUTLINE:
         if (hintEnabled && !(boxBackground instanceof CutoutDrawable)) {
-          boxBackground = new CutoutDrawable(shapeAppearanceModel);
+          boxBackground = CutoutDrawable.create(shapeAppearanceModel);
         } else {
           boxBackground = new MaterialShapeDrawable(shapeAppearanceModel);
         }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -2259,7 +2259,7 @@ public void setCounterOverflowTextColor(@Nullable ColorStateList counterOverflow
    */
   @Nullable
   public ColorStateList getCounterOverflowTextColor() {
-    return counterTextColor;
+    return counterOverflowTextColor;
   }
 
   /**

File: lib/java/com/google/android/material/navigation/NavigationBarItemView.java
Patch:
@@ -26,6 +26,7 @@
 import android.animation.ValueAnimator.AnimatorUpdateListener;
 import android.content.Context;
 import android.content.res.ColorStateList;
+import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.GradientDrawable;
 import android.graphics.drawable.RippleDrawable;
@@ -636,6 +637,8 @@ public void setTextAppearanceInactive(@StyleRes int inactiveTextAppearance) {
   public void setTextAppearanceActive(@StyleRes int activeTextAppearance) {
     setTextAppearanceWithoutFontScaling(largeLabel, activeTextAppearance);
     calculateTextScaleFactors(smallLabel.getTextSize(), largeLabel.getTextSize());
+    // TODO(b/246765947): Use component tokens to control font weight
+    largeLabel.setTypeface(largeLabel.getTypeface(), Typeface.BOLD);
   }
 
   /**

File: lib/java/com/google/android/material/navigation/NavigationView.java
Patch:
@@ -911,7 +911,7 @@ public int getSubheaderInsetEnd() {
    * Set the distance between the end of a menu subheader and the end of the NavigationView.
    */
   public void setSubheaderInsetEnd(@Px int subheaderInsetEnd) {
-    presenter.setSubheaderInsetStart(subheaderInsetEnd);
+    presenter.setSubheaderInsetEnd(subheaderInsetEnd);
   }
 
   private MenuInflater getMenuInflater() {

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java
Patch:
@@ -88,7 +88,7 @@
  * </pre>
  */
 public class BottomNavigationView extends NavigationBarView {
-  static final int MAX_ITEM_COUNT = 5;
+  private static final int MAX_ITEM_COUNT = 5;
 
   public BottomNavigationView(@NonNull Context context) {
     this(context, null);

File: lib/java/com/google/android/material/drawable/DrawableUtils.java
Patch:
@@ -157,14 +157,14 @@ public static Drawable createTintableDrawableIfNeeded(
    * 21, it'll still mutate the drawable.
    *
    * <p>Use this method instead of the above if the passed in drawable will be a child of a {@link
-   * LayerDrawable} in APIs < 21, its tintList may be null, and it may be mutated, in order to
+   * LayerDrawable} in APIs < 23, its tintList may be null, and it may be mutated, in order to
    * prevent issue where the drawable may not have its constant state set up properly.
    */
   @Nullable
   public static Drawable createTintableMutatedDrawableIfNeeded(
       @Nullable Drawable drawable, @Nullable ColorStateList tintList, @Nullable Mode tintMode) {
     return createTintableMutatedDrawableIfNeeded(
-        drawable, tintList, tintMode, VERSION.SDK_INT < VERSION_CODES.LOLLIPOP);
+        drawable, tintList, tintMode, VERSION.SDK_INT < VERSION_CODES.M);
   }
 
   @Nullable

File: lib/java/com/google/android/material/datepicker/CalendarConstraints.java
Patch:
@@ -96,13 +96,13 @@ public DateValidator getDateValidator() {
 
   /** Returns the earliest month allowed by this set of bounds. */
   @NonNull
-  Month getStart() {
+  public Month getStart() {
     return start;
   }
 
   /** Returns the latest month allowed by this set of bounds. */
   @NonNull
-  Month getEnd() {
+  public Month getEnd() {
     return end;
   }
 

File: lib/java/com/google/android/material/shape/ShapeAppearancePathProvider.java
Patch:
@@ -322,7 +322,7 @@ private void getCoordinatesOfCorner(int index, @NonNull RectF bounds, @NonNull P
   }
 
   private float angleOfEdge(int index) {
-    return 90 * (index + 1 % 4);
+    return 90 * ((index + 1) % 4);
   }
 
   void setEdgeIntersectionCheckEnable(boolean enable) {

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -1933,6 +1933,7 @@ public boolean onTouchEvent(@NonNull MotionEvent event) {
         invalidate();
         break;
       case MotionEvent.ACTION_UP:
+      case MotionEvent.ACTION_CANCEL:
         thumbIsPressed = false;
         // We need to handle a tap if the last event was down at the same point.
         if (lastEvent != null

File: catalog/java/io/material/catalog/feature/DemoLandingFragment.java
Patch:
@@ -177,6 +177,7 @@ private void addDemoView(
     View demoView = layoutInflater.inflate(R.layout.cat_demo_landing_row, demoContainer, false);
 
     View rootView = demoView.findViewById(R.id.cat_demo_landing_row_root);
+    View titlesView = demoView.findViewById(R.id.cat_demo_landing_row_titles);
     TextView titleTextView = demoView.findViewById(R.id.cat_demo_landing_row_title);
     TextView subtitleTextView = demoView.findViewById(R.id.cat_demo_landing_row_subtitle);
     MaterialButton favoriteButton = demoView.findViewById(R.id.cat_demo_landing_row_favorite);
@@ -199,8 +200,7 @@ private void addDemoView(
         });
 
     if (isAdditional) {
-      setMarginStart(titleTextView, R.dimen.cat_list_text_margin_from_icon_large);
-      setMarginStart(subtitleTextView, R.dimen.cat_list_text_margin_from_icon_large);
+      setMarginStart(titlesView, R.dimen.cat_list_text_margin_from_icon_large);
     }
 
     demoContainer.addView(demoView);

File: lib/java/com/google/android/material/resources/TypefaceUtils.java
Patch:
@@ -51,7 +51,8 @@ public static Typeface maybeCopyWithFontWeightAdjustment(
       @NonNull Configuration configuration, @NonNull Typeface typeface) {
     if (VERSION.SDK_INT >= VERSION_CODES.S
         && configuration.fontWeightAdjustment != Configuration.FONT_WEIGHT_ADJUSTMENT_UNDEFINED
-        && configuration.fontWeightAdjustment != 0) {
+        && configuration.fontWeightAdjustment != 0
+        && typeface != null) {
       int adjustedWeight =
           MathUtils.clamp(
               typeface.getWeight() + configuration.fontWeightAdjustment,

File: catalog/java/io/material/catalog/bottomappbar/BottomAppBarMainDemoFragment.java
Patch:
@@ -71,7 +71,7 @@ public void onCreate(@Nullable Bundle bundle) {
 
   @Override
   public void onCreateOptionsMenu(Menu menu, MenuInflater menuInflater) {
-    menuInflater.inflate(R.menu.demo_primary, menu);
+    menuInflater.inflate(R.menu.demo_primary_alternate, menu);
   }
 
   @Override

File: lib/java/com/google/android/material/timepicker/TimePickerView.java
Patch:
@@ -32,6 +32,7 @@
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
+import android.view.accessibility.AccessibilityEvent;
 import android.widget.Checkable;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -257,6 +258,7 @@ protected void onVisibilityChanged(@NonNull View changedView, int visibility) {
     super.onVisibilityChanged(changedView, visibility);
     if (changedView == this && visibility == VISIBLE) {
       updateToggleConstraints();
+      hourView.sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_FOCUSED);
     }
   }
 

File: lib/java/com/google/android/material/checkbox/MaterialCheckBox.java
Patch:
@@ -541,10 +541,10 @@ public boolean isCenterIfNoTextEnabled() {
 
   private void refreshButtonDrawable() {
     buttonDrawable =
-        DrawableUtils.createTintableDrawableIfNeeded(
+        DrawableUtils.createTintableMutatedDrawableIfNeeded(
             buttonDrawable, buttonTintList, CompoundButtonCompat.getButtonTintMode(this));
     buttonIconDrawable =
-        DrawableUtils.createTintableDrawableIfNeeded(
+        DrawableUtils.createTintableMutatedDrawableIfNeeded(
             buttonIconDrawable, buttonIconTintList, buttonIconTintMode);
 
     setUpDefaultButtonDrawableAnimationIfNeeded();

File: lib/java/com/google/android/material/timepicker/TimeModel.java
Patch:
@@ -47,7 +47,6 @@ class TimeModel implements Parcelable {
   @ActiveSelection int selection;
   @ClockPeriod int period;
 
-
   public TimeModel() {
     this(CLOCK_12H);
   }

File: catalog/java/io/material/catalog/datepicker/DatePickerMainDemoFragment.java
Patch:
@@ -142,6 +142,8 @@ public View onCreateDemoView(
             builder.setNegativeButtonText(R.string.cat_picker_negative_button_text);
           }
 
+          builder.setDayViewDecorator(new CircleIndicatorDecorator());
+
           try {
             builder.setCalendarConstraints(constraintsBuilder.build());
             MaterialDatePicker<?> picker = builder.build();

File: lib/javatests/com/google/android/material/datepicker/RangeDateSelectorTest.java
Patch:
@@ -60,7 +60,8 @@ public void setupMonthAdapters() {
         new MonthAdapter(
             Month.create(2016, Calendar.FEBRUARY),
             rangeDateSelector,
-            new CalendarConstraints.Builder().build());
+            new CalendarConstraints.Builder().build(),
+            /* dayViewDecorator= */ null);
     gridView.setAdapter(adapter);
   }
 

File: lib/javatests/com/google/android/material/datepicker/SingleDateSelectorTest.java
Patch:
@@ -52,7 +52,8 @@ public void setupMonthAdapters() {
         new MonthAdapter(
             Month.create(2016, Calendar.FEBRUARY),
             singleDateSelector,
-            new CalendarConstraints.Builder().build());
+            new CalendarConstraints.Builder().build(),
+            /* dayViewDecorator= */ null);
     gridView.setAdapter(adapter);
   }
 

File: lib/java/com/google/android/material/badge/BadgeState.java
Patch:
@@ -163,7 +163,7 @@ public final class BadgeState {
             : storedState.horizontalOffsetWithoutText;
 
     currentState.verticalOffsetWithoutText =
-        storedState.horizontalOffsetWithoutText == null
+        storedState.verticalOffsetWithoutText == null
             ? a.getDimensionPixelOffset(R.styleable.Badge_verticalOffset, 0)
             : storedState.verticalOffsetWithoutText;
 

File: lib/java/com/google/android/material/appbar/HeaderScrollingViewBehavior.java
Patch:
@@ -86,6 +86,7 @@ public boolean onMeasureChild(
         if (shouldHeaderOverlapScrollingChild()) {
           child.setTranslationY(-headerHeight);
         } else {
+          child.setTranslationY(0);
           height -= headerHeight;
         }
         final int heightMeasureSpec =

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -599,6 +599,7 @@ public void setCompoundDrawablesWithIntrinsicBounds(
     super.setCompoundDrawablesWithIntrinsicBounds(left, top, right, bottom);
   }
 
+  @RequiresApi(17)
   @Override
   public void setCompoundDrawablesRelative(
       @Nullable Drawable start,

File: lib/java/com/google/android/material/internal/ForegroundLinearLayout.java
Patch:
@@ -124,7 +124,6 @@ protected boolean verifyDrawable(Drawable who) {
     return super.verifyDrawable(who) || (who == foreground);
   }
 
-  @RequiresApi(11)
   @Override
   public void jumpDrawablesToCurrentState() {
     super.jumpDrawablesToCurrentState();
@@ -157,6 +156,7 @@ public void setForeground(@Nullable Drawable drawable) {
       }
 
       foreground = drawable;
+      foregroundBoundsChanged = true;
 
       if (drawable != null) {
         setWillNotDraw(false);

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -1424,6 +1424,9 @@ boolean shouldHide(@NonNull View child, float yvel) {
   @Nullable
   @VisibleForTesting
   View findScrollingChild(View view) {
+    if (view.getVisibility() != View.VISIBLE) {
+      return null;
+    }
     if (ViewCompat.isNestedScrollingEnabled(view)) {
       return view;
     }

File: lib/java/com/google/android/material/progressindicator/DeterminateDrawable.java
Patch:
@@ -195,7 +195,7 @@ public void draw(@NonNull Canvas canvas) {
     }
 
     canvas.save();
-    drawingDelegate.validateSpecAndAdjustCanvas(canvas, getGrowFraction());
+    drawingDelegate.validateSpecAndAdjustCanvas(canvas, getBounds(), getGrowFraction());
 
     // Draws the track.
     drawingDelegate.fillTrack(canvas, paint);

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -138,7 +138,7 @@ public void draw(@NonNull Canvas canvas) {
     }
 
     canvas.save();
-    drawingDelegate.validateSpecAndAdjustCanvas(canvas, getGrowFraction());
+    drawingDelegate.validateSpecAndAdjustCanvas(canvas, getBounds(), getGrowFraction());
 
     // Draws the track.
     drawingDelegate.fillTrack(canvas, paint);

File: lib/javatests/com/google/android/material/theme/ThemeTest.java
Patch:
@@ -380,6 +380,7 @@ public class ThemeTest {
           R.attr.materialCardViewOutlinedStyle,
           R.attr.materialCardViewFilledStyle,
           R.attr.materialCardViewElevatedStyle,
+          R.attr.materialSwitchStyle,
           R.attr.radioButtonStyle,
           R.attr.sliderStyle,
           R.attr.snackbarStyle,

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -1243,6 +1243,7 @@ public LayoutParams(@NonNull LayoutParams source) {
       // The copy constructor called here only exists on API 19+.
       super(source);
       scrollFlags = source.scrollFlags;
+      scrollEffect = source.scrollEffect;
       scrollInterpolator = source.scrollInterpolator;
     }
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3954,6 +3954,9 @@ private void openCutout() {
     final RectF cutoutBounds = tmpRectF;
     collapsingTextHelper.getCollapsedTextActualBounds(
         cutoutBounds, editText.getWidth(), editText.getGravity());
+    if (cutoutBounds.width() <= 0 || cutoutBounds.height() <= 0) {
+      return;
+    }
     applyCutoutPadding(cutoutBounds);
 
     // Offset the cutout bounds by the TextInputLayout's paddings, half of the cutout height, and

File: lib/javatests/com/google/android/material/appbar/MaterialToolbarTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.appbar;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/badge/BadgeDrawableTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.badge;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/badge/BadgeUtilsTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.badge;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/bottomnavigation/BottomNavigationViewTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.bottomnavigation;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/bottomsheet/BottomSheetBehaviorTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.bottomsheet;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/button/MaterialButtonTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.button;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/button/MaterialButtonToggleGroupTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.button;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.view.View.GONE;
 import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;

File: lib/javatests/com/google/android/material/checkbox/MaterialCheckBoxTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.checkbox;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/chip/ChipTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.chip;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.android.material.internal.ViewUtils.dpToPx;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/color/DynamicColorsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.color;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static androidx.test.core.app.ApplicationProvider.getApplicationContext;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/color/MaterialColorsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.color;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/CalendarStyleTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/datepicker/CompositeDateValidatorAnyTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/CompositeDateValidatorTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/DateValidatorPointBackwardTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/DateValidatorPointForwardTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/MonthAdapterTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertEquals;

File: lib/javatests/com/google/android/material/datepicker/MonthsPagerAdapterTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/datepicker/RangeDateSelectorTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/SingleDateSelectorTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.hamcrest.core.Is.is;
 import static org.hamcrest.core.IsNull.nullValue;

File: lib/javatests/com/google/android/material/datepicker/UtcDatesTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/divider/MaterialDividerItemDecorationTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.divider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/elevation/ElevationOverlayProviderTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.elevation;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/floatingactionbutton/ExtendedFloatingActionButtonTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.floatingactionbutton;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/floatingactionbutton/FabTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.floatingactionbutton;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static com.google.android.material.floatingactionbutton.FloatingActionButton.SIZE_MINI;

File: lib/javatests/com/google/android/material/internal/ContextUtilsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import android.app.Activity;
 import android.content.ContextWrapper;

File: lib/javatests/com/google/android/material/internal/ParcelableSparseArrayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import android.os.Bundle;
 import android.os.Parcel;

File: lib/javatests/com/google/android/material/internal/ParcelableSparseBooleanArrayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import android.os.Parcel;
 import org.junit.Assert;

File: lib/javatests/com/google/android/material/internal/ParcelableSparseIntArrayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import android.os.Parcel;
 import org.junit.Assert;

File: lib/javatests/com/google/android/material/motion/MotionUtilsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.motion;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/navigation/NavigationBarItemViewTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.navigation;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Build.VERSION_CODES.O;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/radiobutton/MaterialRadioButtonTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.radiobutton;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/resources/MaterialResourcesTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.resources;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.content.Context.WINDOW_SERVICE;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/resources/ResourceLoadTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.resources;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/shape/MaterialShapeDrawableTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.shape;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/shape/ShapeAppearanceModelTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.shape;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/slider/RangeSliderConfigTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Looper.getMainLooper;
 import static com.google.android.material.slider.BaseSlider.UNIT_PX;

File: lib/javatests/com/google/android/material/slider/SliderConfigTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.robolectric.annotation.LooperMode.Mode.LEGACY;
 

File: lib/javatests/com/google/android/material/slider/SliderEventTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.android.material.slider.SliderHelper.dragSliderBetweenValues;
 import static com.google.android.material.slider.SliderHelper.touchSliderAtValue;

File: lib/javatests/com/google/android/material/slider/SliderKeyTestCommon.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.android.material.slider.SliderHelper.clickDpadCenter;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/slider/SliderRoundingErrorTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.android.material.slider.SliderHelper.touchSliderAtValue;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/slider/SliderStateTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/slider/SliderTouchTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.android.material.slider.SliderHelper.calculateXPositionFromValue;
 import static com.google.android.material.slider.SliderHelper.dragSliderBetweenValues;

File: lib/javatests/com/google/android/material/snackbar/SnackbarTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.snackbar;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/textfield/ExposedDropdownMenuAccessibilityTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.textfield;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static org.hamcrest.MatcherAssert.assertThat;
 import static org.hamcrest.core.Is.is;

File: lib/javatests/com/google/android/material/textfield/TextInputLayoutAccessibilityTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.textfield;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.android.material.textfield.TextInputLayout.END_ICON_CUSTOM;
 import static org.hamcrest.MatcherAssert.assertThat;

File: lib/javatests/com/google/android/material/textview/MaterialTextViewTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.textview;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/theme/MaterialThemeOverlayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.theme;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/theme/ThemeTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.theme;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static androidx.test.core.app.ApplicationProvider.getApplicationContext;

File: lib/javatests/com/google/android/material/timepicker/ClockHandViewTouchTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.timepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Looper.getMainLooper;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/timepicker/TimePickerTextInputKeyControllerTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.timepicker;
 
-import com.google.android.material.test.R;
+import com.google.android.material.R;
 
 import static android.os.Looper.getMainLooper;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/appbar/MaterialToolbarTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.appbar;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/badge/BadgeDrawableTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.badge;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/badge/BadgeUtilsTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.badge;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/bottomnavigation/BottomNavigationViewTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.bottomnavigation;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/bottomsheet/BottomSheetBehaviorTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.bottomsheet;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/button/MaterialButtonTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.button;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/button/MaterialButtonToggleGroupTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.button;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.view.View.GONE;
 import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;

File: lib/javatests/com/google/android/material/checkbox/MaterialCheckBoxTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.checkbox;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/chip/ChipGroupTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.chip;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertEquals;

File: lib/javatests/com/google/android/material/chip/ChipTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.chip;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.android.material.internal.ViewUtils.dpToPx;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/color/DynamicColorsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.color;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static androidx.test.core.app.ApplicationProvider.getApplicationContext;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/color/MaterialColorsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.color;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/CalendarStyleTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/datepicker/CompositeDateValidatorAnyTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/CompositeDateValidatorTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/DateValidatorPointBackwardTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/DateValidatorPointForwardTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/MonthAdapterTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 import static org.junit.Assert.assertEquals;

File: lib/javatests/com/google/android/material/datepicker/MonthsPagerAdapterTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/datepicker/RangeDateSelectorTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/datepicker/SingleDateSelectorTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.hamcrest.core.Is.is;
 import static org.hamcrest.core.IsNull.nullValue;

File: lib/javatests/com/google/android/material/datepicker/UtcDatesTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.datepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/divider/MaterialDividerItemDecorationTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.divider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/elevation/ElevationOverlayProviderTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.elevation;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/floatingactionbutton/ExtendedFloatingActionButtonTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.floatingactionbutton;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/floatingactionbutton/FabTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.floatingactionbutton;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static com.google.android.material.floatingactionbutton.FloatingActionButton.SIZE_MINI;

File: lib/javatests/com/google/android/material/internal/ContextUtilsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import android.app.Activity;
 import android.content.ContextWrapper;

File: lib/javatests/com/google/android/material/internal/ParcelableSparseArrayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import android.os.Bundle;
 import android.os.Parcel;

File: lib/javatests/com/google/android/material/internal/ParcelableSparseBooleanArrayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import android.os.Parcel;
 import org.junit.Assert;

File: lib/javatests/com/google/android/material/internal/ParcelableSparseIntArrayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.internal;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import android.os.Parcel;
 import org.junit.Assert;

File: lib/javatests/com/google/android/material/motion/MotionUtilsTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.motion;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/navigation/NavigationBarItemViewTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.navigation;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Build.VERSION_CODES.O;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/radiobutton/MaterialRadioButtonTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.radiobutton;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/resources/MaterialResourcesTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.resources;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.content.Context.WINDOW_SERVICE;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/resources/ResourceLoadTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.resources;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.junit.Assert.assertEquals;
 

File: lib/javatests/com/google/android/material/shape/MaterialShapeDrawableTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.shape;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/shape/ShapeAppearanceModelTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.shape;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/slider/RangeSliderConfigTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Looper.getMainLooper;
 import static com.google.android.material.slider.BaseSlider.UNIT_PX;

File: lib/javatests/com/google/android/material/slider/SliderConfigTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.robolectric.annotation.LooperMode.Mode.LEGACY;
 

File: lib/javatests/com/google/android/material/slider/SliderEventTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.android.material.slider.SliderHelper.dragSliderBetweenValues;
 import static com.google.android.material.slider.SliderHelper.touchSliderAtValue;

File: lib/javatests/com/google/android/material/slider/SliderKeyTestCommon.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.android.material.slider.SliderHelper.clickDpadCenter;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/slider/SliderRoundingErrorTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.android.material.slider.SliderHelper.touchSliderAtValue;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/slider/SliderStateTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/slider/SliderTouchTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.slider;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.android.material.slider.SliderHelper.calculateXPositionFromValue;
 import static com.google.android.material.slider.SliderHelper.dragSliderBetweenValues;

File: lib/javatests/com/google/android/material/snackbar/SnackbarTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.snackbar;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/textfield/ExposedDropdownMenuAccessibilityTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.textfield;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static org.hamcrest.MatcherAssert.assertThat;
 import static org.hamcrest.core.Is.is;

File: lib/javatests/com/google/android/material/textfield/TextInputLayoutAccessibilityTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.textfield;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.android.material.textfield.TextInputLayout.END_ICON_CUSTOM;
 import static org.hamcrest.MatcherAssert.assertThat;

File: lib/javatests/com/google/android/material/textview/MaterialTextViewTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.textview;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static com.google.common.truth.Truth.assertThat;
 

File: lib/javatests/com/google/android/material/theme/MaterialThemeOverlayTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.theme;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/theme/ThemeTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.theme;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static androidx.test.core.app.ApplicationProvider.getApplicationContext;

File: lib/javatests/com/google/android/material/timepicker/ClockHandViewTouchTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.timepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Looper.getMainLooper;
 import static com.google.common.truth.Truth.assertThat;

File: lib/javatests/com/google/android/material/timepicker/TimePickerTextInputKeyControllerTest.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.google.android.material.timepicker;
 
-import com.google.android.material.R;
+import com.google.android.material.test.R;
 
 import static android.os.Looper.getMainLooper;
 import static com.google.common.truth.Truth.assertThat;

File: catalog/java/io/material/catalog/menu/MenuMainDemoFragment.java
Patch:
@@ -149,7 +149,7 @@ public int getIntrinsicWidth() {
   public void onCreateContextMenu(ContextMenu menu, View v, ContextMenuInfo menuInfo) {
     TextView contextMenuTextView = (TextView) v;
     Context context = getContext();
-    menu.add(android.R.string.copy)
+    menu.add(R.string.context_menu_copy)
         .setOnMenuItemClickListener(
             item -> {
               ClipboardManager clipboard =

File: lib/java/com/google/android/material/datepicker/RangeDateSelector.java
Patch:
@@ -35,7 +35,6 @@
 import androidx.core.util.Pair;
 import androidx.core.util.Preconditions;
 import com.google.android.material.internal.ManufacturerUtils;
-import com.google.android.material.internal.ViewUtils;
 import com.google.android.material.resources.MaterialAttributes;
 import com.google.android.material.textfield.TextInputLayout;
 import java.text.SimpleDateFormat;
@@ -232,7 +231,7 @@ void onInvalidDate() {
           }
         });
 
-    ViewUtils.requestFocusAndShowKeyboard(startEditText);
+    DateSelector.showKeyboardWithAutoHideBehavior(startEditText, endEditText);
 
     return root;
   }

File: lib/java/com/google/android/material/datepicker/SingleDateSelector.java
Patch:
@@ -33,7 +33,6 @@
 import androidx.annotation.RestrictTo.Scope;
 import androidx.core.util.Pair;
 import com.google.android.material.internal.ManufacturerUtils;
-import com.google.android.material.internal.ViewUtils;
 import com.google.android.material.resources.MaterialAttributes;
 import com.google.android.material.textfield.TextInputLayout;
 import java.text.SimpleDateFormat;
@@ -133,7 +132,7 @@ void onInvalidDate() {
           }
         });
 
-    ViewUtils.requestFocusAndShowKeyboard(dateEditText);
+    DateSelector.showKeyboardWithAutoHideBehavior(dateEditText);
 
     return root;
   }

File: catalog/java/io/material/catalog/datepicker/DateValidatorWeekdays.java
Patch:
@@ -21,11 +21,9 @@
 import java.util.Calendar;
 import java.util.TimeZone;
 
-/** A {@link DateValidator} that only allows dates from a given point onward to be clicked. */
+/** A {@link DateValidator} that enables all days of the week, except Saturday and Sunday. */
 public class DateValidatorWeekdays implements DateValidator {
 
-  DateValidatorWeekdays() {}
-
   private Calendar utc = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
 
   public static final Creator<DateValidatorWeekdays> CREATOR =

File: catalog/java/io/material/catalog/datepicker/DatePickerMainDemoFragment.java
Patch:
@@ -214,7 +214,7 @@ private CalendarConstraints.Builder setupConstraintsBuilder(
 
       List<CalendarConstraints.DateValidator> validators = new ArrayList<>();
       validators.add(DateValidatorPointForward.from(lowerBound));
-      validators.add(new DateValidatorWeekdays());
+      validators.add(DateValidatorPointBackward.now());
 
       constraintsBuilder.setValidator(CompositeDateValidator.allOf(validators));
     } else if ((validationChoice == R.id.cat_picker_validation_multiple_range)) {

File: lib/java/com/google/android/material/textfield/EndCompoundLayout.java
Patch:
@@ -20,6 +20,7 @@
 
 import static com.google.android.material.textfield.IconHelper.applyIconTint;
 import static com.google.android.material.textfield.IconHelper.refreshIconDrawableState;
+import static com.google.android.material.textfield.IconHelper.setCompatRippleBackgroundIfNeeded;
 import static com.google.android.material.textfield.IconHelper.setIconOnClickListener;
 import static com.google.android.material.textfield.IconHelper.setIconOnLongClickListener;
 import static com.google.android.material.textfield.TextInputLayout.END_ICON_CLEAR_TEXT;
@@ -177,6 +178,7 @@ private CheckableImageButton createIconView(
         (CheckableImageButton) inflater.inflate(
             R.layout.design_text_input_end_icon, root, false);
     iconView.setId(id);
+    setCompatRippleBackgroundIfNeeded(iconView);
     if (MaterialResources.isFontScaleAtLeast1_3(getContext())) {
       ViewGroup.MarginLayoutParams lp =
           (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();

File: lib/java/com/google/android/material/textfield/StartCompoundLayout.java
Patch:
@@ -20,6 +20,7 @@
 
 import static com.google.android.material.textfield.IconHelper.applyIconTint;
 import static com.google.android.material.textfield.IconHelper.refreshIconDrawableState;
+import static com.google.android.material.textfield.IconHelper.setCompatRippleBackgroundIfNeeded;
 import static com.google.android.material.textfield.IconHelper.setIconOnClickListener;
 import static com.google.android.material.textfield.IconHelper.setIconOnLongClickListener;
 
@@ -84,6 +85,7 @@ class StartCompoundLayout extends LinearLayout {
     startIconView =
         (CheckableImageButton)
             layoutInflater.inflate(R.layout.design_text_input_start_icon, this, false);
+    setCompatRippleBackgroundIfNeeded(startIconView);
 
     prefixTextView = new AppCompatTextView(getContext());
 

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -107,7 +107,8 @@ boolean setVisibleInternal(boolean visible, boolean restart, boolean animate) {
         animatorDurationScaleProvider.getSystemAnimatorDurationScale(context.getContentResolver());
     if (visible
         && (animate
-            || (VERSION.SDK_INT <= VERSION_CODES.LOLLIPOP && systemAnimatorDurationScale > 0))) {
+            || (VERSION.SDK_INT <= VERSION_CODES.LOLLIPOP_MR1
+                && systemAnimatorDurationScale > 0))) {
       animatorDelegate.startAnimator();
     }
 

File: lib/java/com/google/android/material/textfield/MaterialAutoCompleteTextView.java
Patch:
@@ -167,7 +167,7 @@ public <T extends ListAdapter & Filterable> void setAdapter(@Nullable T adapter)
   @Override
   public void setRawInputType(int type) {
     super.setRawInputType(type);
-    updateDropdownMenuBackground();
+    onInputTypeChanged();
   }
 
   /**
@@ -295,10 +295,10 @@ private int measureContentWidth() {
     return width;
   }
 
-  private void updateDropdownMenuBackground() {
+  private void onInputTypeChanged() {
     TextInputLayout textInputLayout = findTextInputLayoutAncestor();
     if (textInputLayout != null) {
-      textInputLayout.updateDropdownMenuBackground();
+      textInputLayout.updateEditTextBoxBackgroundIfNeeded();
     }
   }
 

File: lib/java/com/google/android/material/transition/MaterialContainerTransform.java
Patch:
@@ -1010,7 +1010,7 @@ private void maybeApplyThemeValues(Context context, boolean entering) {
         R.attr.motionEasingEmphasizedInterpolator,
         AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
     TransitionUtils.maybeApplyThemeDuration(
-        this, context, entering ? R.attr.motionDurationExtraLong2 : R.attr.motionDurationMedium4);
+        this, context, entering ? R.attr.motionDurationLong2 : R.attr.motionDurationMedium4);
     if (!pathMotionCustom) {
       TransitionUtils.maybeApplyThemePath(this, context, R.attr.motionPath);
     }

File: lib/java/com/google/android/material/transition/platform/MaterialContainerTransform.java
Patch:
@@ -1015,7 +1015,7 @@ private void maybeApplyThemeValues(Context context, boolean entering) {
         R.attr.motionEasingEmphasizedInterpolator,
         AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
     TransitionUtils.maybeApplyThemeDuration(
-        this, context, entering ? R.attr.motionDurationExtraLong2 : R.attr.motionDurationMedium4);
+        this, context, entering ? R.attr.motionDurationLong2 : R.attr.motionDurationMedium4);
     if (!pathMotionCustom) {
       TransitionUtils.maybeApplyThemePath(this, context, R.attr.motionPath);
     }

File: lib/java/com/google/android/material/textfield/EndCompoundLayout.java
Patch:
@@ -20,6 +20,7 @@
 
 import static com.google.android.material.textfield.IconHelper.applyIconTint;
 import static com.google.android.material.textfield.IconHelper.refreshIconDrawableState;
+import static com.google.android.material.textfield.IconHelper.setCompatRippleBackgroundIfNeeded;
 import static com.google.android.material.textfield.IconHelper.setIconOnClickListener;
 import static com.google.android.material.textfield.IconHelper.setIconOnLongClickListener;
 import static com.google.android.material.textfield.TextInputLayout.END_ICON_CLEAR_TEXT;
@@ -177,6 +178,7 @@ private CheckableImageButton createIconView(
         (CheckableImageButton) inflater.inflate(
             R.layout.design_text_input_end_icon, root, false);
     iconView.setId(id);
+    setCompatRippleBackgroundIfNeeded(iconView);
     if (MaterialResources.isFontScaleAtLeast1_3(getContext())) {
       ViewGroup.MarginLayoutParams lp =
           (ViewGroup.MarginLayoutParams) iconView.getLayoutParams();

File: lib/java/com/google/android/material/textfield/StartCompoundLayout.java
Patch:
@@ -20,6 +20,7 @@
 
 import static com.google.android.material.textfield.IconHelper.applyIconTint;
 import static com.google.android.material.textfield.IconHelper.refreshIconDrawableState;
+import static com.google.android.material.textfield.IconHelper.setCompatRippleBackgroundIfNeeded;
 import static com.google.android.material.textfield.IconHelper.setIconOnClickListener;
 import static com.google.android.material.textfield.IconHelper.setIconOnLongClickListener;
 
@@ -84,6 +85,7 @@ class StartCompoundLayout extends LinearLayout {
     startIconView =
         (CheckableImageButton)
             layoutInflater.inflate(R.layout.design_text_input_start_icon, this, false);
+    setCompatRippleBackgroundIfNeeded(startIconView);
 
     prefixTextView = new AppCompatTextView(getContext());
 

File: catalog/java/io/material/catalog/datepicker/DatePickerDemoLandingFragment.java
Patch:
@@ -62,7 +62,7 @@ public abstract static class Module {
     @Provides
     @ActivityScope
     static FeatureDemo provideFeatureDemo() {
-      return new FeatureDemo(R.string.cat_picker_demo_title, R.drawable.ic_dialog) {
+      return new FeatureDemo(R.string.cat_picker_demo_title, R.drawable.ic_placeholder) {
         @Override
         public Fragment createFragment() {
           return new DatePickerDemoLandingFragment();

File: lib/java/com/google/android/material/timepicker/TimePickerTextInputPresenter.java
Patch:
@@ -230,6 +230,7 @@ public void onSelectionChanged(int selection) {
   @Override
   public void show() {
     timePickerView.setVisibility(View.VISIBLE);
+    onSelectionChanged(time.selection);
   }
 
   @Override

File: lib/java/com/google/android/material/timepicker/ChipTextInputComboView.java
Patch:
@@ -80,6 +80,8 @@ public ChipTextInputComboView(
     addView(chip);
     addView(textInputLayout);
     label = findViewById(R.id.material_label);
+    editText.setId(ViewCompat.generateViewId());
+    ViewCompat.setLabelFor(label, editText.getId());
     editText.setSaveEnabled(false);
     editText.setLongClickable(false);
   }

File: lib/java/com/google/android/material/animation/ArgbEvaluatorCompat.java
Patch:
@@ -33,7 +33,7 @@ public class ArgbEvaluatorCompat implements TypeEvaluator<Integer> {
    * android.animation.ValueAnimator#setEvaluator(TypeEvaluator)}. The same instance may be used in
    * multiple <code>Animator</code>s because it holds no state.
    *
-   * @return An instance of <code>ArgbEvalutor</code>.
+   * @return An instance of <code>ArgbEvaluator</code>.
    */
   @NonNull
   public static ArgbEvaluatorCompat getInstance() {

File: lib/java/com/google/android/material/badge/BadgeUtils.java
Patch:
@@ -281,8 +281,8 @@ public static ParcelableSparseArray createParcelableBadgeStates(
    * @param context Current context
    * @param badgeStates A parcelable {@link SparseArray} that contains a map of int keys (e.g.
    *     menuItemId) to {@link BadgeState.State states}.
-   * @return A {@link SparseArray} that contains a map of int keys (e.g. menuItemId) to {@code
-   *     BadgeDrawable BadgeDrawbles}.
+   * @return A {@link SparseArray} that contains a map of int keys (e.g. menuItemId)
+   * to {@link BadgeDrawable BadgeDrawables}.
    */
   @NonNull
   public static SparseArray<BadgeDrawable> createBadgeDrawablesFromSavedStates(

File: lib/java/com/google/android/material/behavior/SwipeDismissBehavior.java
Patch:
@@ -162,7 +162,7 @@ public void setEndAlphaSwipeDistance(float fraction) {
 
   /**
    * Set the sensitivity used for detecting the start of a swipe. This only takes effect if no touch
-   * handling has occured yet.
+   * handling has occurred yet.
    *
    * @param sensitivity Multiplier for how sensitive we should be about detecting the start of a
    *     drag. Larger values are more sensitive. 1.0f is normal.

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -294,7 +294,7 @@ public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo inf
   }
 
   // TODO(b/80452017): Due to a11y bug, avoid setting custom ExploreByTouchHelper as delegate
-  // unless there's a close/trailing icon. Re-evaulate this once bug is fixed.
+  // unless there's a close/trailing icon. Re-evaluate this once bug is fixed.
   private void updateAccessibilityDelegate() {
     if (hasCloseIcon() && isCloseIconVisible() && onCloseIconClickListener != null) {
       ViewCompat.setAccessibilityDelegate(this, touchHelper);
@@ -1102,7 +1102,7 @@ public float getChipMinHeight() {
   /**
    * Sets this chip's minimum height using a resource id.
    *
-   * @param id The resource id of this chip's mininum height.
+   * @param id The resource id of this chip's minimum height.
    * @attr ref com.google.android.material.R.styleable#Chip_chipMinHeight
    */
   public void setChipMinHeightResource(@DimenRes int id) {

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1458,7 +1458,7 @@ public float getChipMinHeight() {
   /**
    * Sets this chip's minimum height using a resource id.
    *
-   * @param id The resource id of this chip's mininum height.
+   * @param id The resource id of this chip's minimum height.
    * @attr ref com.google.android.material.R.styleable#Chip_chipMinHeight
    */
   public void setChipMinHeightResource(@DimenRes int id) {
@@ -1468,7 +1468,7 @@ public void setChipMinHeightResource(@DimenRes int id) {
   /**
    * Sets this chip's minimum height.
    *
-   * @param chipMinHeight This chip's mininum height.
+   * @param chipMinHeight This chip's minimum height.
    * @attr ref com.google.android.material.R.styleable#Chip_chipMinHeight
    */
   public void setChipMinHeight(float chipMinHeight) {
@@ -1777,7 +1777,7 @@ public void setChipIconTint(@Nullable ColorStateList chipIconTint) {
 
   /**
    * Returns this chip's icon size. If a non-positive value is returned, the icon drawable's width
-   * and height (up to 24dp) will be used to measure its bounds intead.
+   * and height (up to 24dp) will be used to measure its bounds instead.
    *
    * @see #setChipIconSize(float)
    * @attr ref com.google.android.material.R.styleable#Chip_chipIconTint

File: lib/java/com/google/android/material/floatingactionbutton/ExtendedFloatingActionButton.java
Patch:
@@ -904,7 +904,7 @@ public boolean isAutoShrinkEnabled() {
 
     @Override
     @SuppressWarnings("unchecked")
-    // TODO: remove this stub method. Adding now to mantain compatibility since the override is
+    // TODO: remove this stub method. Adding now to maintain compatibility since the override is
     // not correct.
     public boolean getInsetDodgeRect(
         @NonNull CoordinatorLayout parent,

File: lib/java/com/google/android/material/internal/CollapsingTextHelper.java
Patch:
@@ -891,7 +891,7 @@ private void drawMultilineTransition(@NonNull Canvas canvas, float currentExpand
 
     // Collapsed text
     textPaint.setAlpha((int) (collapsedTextBlend * originalAlpha));
-    // Workaround for API 31(+). Applying the shadow color for collapsed texct.
+    // Workaround for API 31(+). Applying the shadow color for collapsed text.
     if (VERSION.SDK_INT >= VERSION_CODES.S) {
       textPaint.setShadowLayer(
           currentShadowRadius,

File: lib/java/com/google/android/material/navigation/NavigationBarItemView.java
Patch:
@@ -205,7 +205,7 @@ public void initialize(@NonNull MenuItemImpl itemData, int menuType) {
             ? itemData.getTooltipText()
             : itemData.getTitle();
 
-    // Avoid calling tooltip for L and M devices because long pressing twuice may freeze devices.
+    // Avoid calling tooltip for L and M devices because long pressing twice may freeze devices.
     if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP || VERSION.SDK_INT > VERSION_CODES.M) {
       TooltipCompat.setTooltipText(this, tooltipText);
     }
@@ -281,7 +281,7 @@ public void setTitle(@Nullable CharSequence title) {
         itemData == null || TextUtils.isEmpty(itemData.getTooltipText())
             ? title
             : itemData.getTooltipText();
-    // Avoid calling tooltip for L and M devices because long pressing twuice may freeze devices.
+    // Avoid calling tooltip for L and M devices because long pressing twice may freeze devices.
     if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP || VERSION.SDK_INT > VERSION_CODES.M) {
       TooltipCompat.setTooltipText(this, tooltipText);
     }

File: lib/java/com/google/android/material/ripple/RippleDrawableCompat.java
Patch:
@@ -50,7 +50,7 @@ public class RippleDrawableCompat extends Drawable implements Shapeable, TintAwa
 
   /**
    * Creates a {@link RippleDrawableCompat} with the given shape that will only draw when enabled
-   * and at leaste one of: presssed, focused, or hovered.
+   * and at least one of: pressed, focused, or hovered.
    *
    * @param shapeAppearanceModel The shape for the ripple.
    */

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -997,7 +997,7 @@ private void maybeDrawCompatShadow(@NonNull Canvas canvas) {
     }
 
     // The extra height is the amount that the path draws outside of the bounds of the shape. This
-    // happens for some shapes like TriangleEdgeTreament when it draws a triangle outside.
+    // happens for some shapes like TriangleEdgeTreatment when it draws a triangle outside.
     int pathExtraWidth = (int) (pathBounds.width() - getBounds().width());
     int pathExtraHeight = (int) (pathBounds.height() - getBounds().height());
 

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -2648,7 +2648,7 @@ public void writeToParcel(@NonNull Parcel dest, int flags) {
     }
   }
 
-  void updateBoundsForVirturalViewId(int virtualViewId, Rect virtualViewBounds) {
+  void updateBoundsForVirtualViewId(int virtualViewId, Rect virtualViewBounds) {
     int x = trackSidePadding + (int) (normalizeValue(getValues().get(virtualViewId)) * trackWidth);
     int y = calculateTrackCenter();
 
@@ -2668,7 +2668,7 @@ private static class AccessibilityHelper extends ExploreByTouchHelper {
     @Override
     protected int getVirtualViewAt(float x, float y) {
       for (int i = 0; i < slider.getValues().size(); i++) {
-        slider.updateBoundsForVirturalViewId(i, virtualViewBounds);
+        slider.updateBoundsForVirtualViewId(i, virtualViewBounds);
         if (virtualViewBounds.contains((int) x, (int) y)) {
           return i;
         }
@@ -2718,7 +2718,7 @@ protected void onPopulateNodeForVirtualView(
       }
       info.setContentDescription(contentDescription.toString());
 
-      slider.updateBoundsForVirturalViewId(virtualViewId, virtualViewBounds);
+      slider.updateBoundsForVirtualViewId(virtualViewId, virtualViewBounds);
       info.setBoundsInParent(virtualViewBounds);
     }
 

File: lib/java/com/google/android/material/tabs/TabIndicatorInterpolator.java
Patch:
@@ -105,7 +105,7 @@ static RectF calculateIndicatorWidthForTab(TabLayout tabLayout, @Nullable View t
       return new RectF();
     }
 
-    // If the indicator should fit to the tab's content, calculate the content's widtd
+    // If the indicator should fit to the tab's content, calculate the content's width
     if (!tabLayout.isTabIndicatorFullWidth() && tab instanceof TabView) {
       return calculateTabViewContentBounds((TabView) tab, MIN_INDICATOR_WIDTH);
     }

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -635,7 +635,7 @@ public TabLayout(@NonNull Context context, @Nullable AttributeSet attrs, int def
    * <p>If the tab indicator color is not {@code Color.TRANSPARENT}, the indicator will be wrapped
    * and tinted right before it is drawn by {@link SlidingTabIndicator#draw(Canvas)}. If you'd like
    * the inherent color or the tinted color of a custom drawable to be used, make sure this color is
-   * set to {@code Color.TRANSPARENT} to avoid your color/tint being overriden.
+   * set to {@code Color.TRANSPARENT} to avoid your color/tint being overridden.
    *
    * @param color color to use for the indicator
    * @attr ref com.google.android.material.R.styleable#TabLayout_tabIndicatorColor
@@ -2925,7 +2925,7 @@ private void updateTextAndIcon(
       }
 
       final CharSequence contentDesc = tab != null ? tab.contentDesc : null;
-      // Avoid calling tooltip for L and M devices because long pressing twuice may freeze devices.
+      // Avoid calling tooltip for L and M devices because long pressing twice may freeze devices.
       if (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP || VERSION.SDK_INT > VERSION_CODES.M) {
         TooltipCompat.setTooltipText(this, hasText ? text : contentDesc);
       }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1830,11 +1830,11 @@ public int getHelperTextCurrentTextColor() {
    * screen readers or other accessibility systems are not able to read, so that they announce the
    * content description instead.
    *
-   * @param errorContentDecription Content description to set, or null to clear it
+   * @param errorContentDescription Content description to set, or null to clear it
    * @attr ref com.google.android.material.R.styleable#TextInputLayout_errorContentDescription
    */
-  public void setErrorContentDescription(@Nullable final CharSequence errorContentDecription) {
-    indicatorViewController.setErrorContentDescription(errorContentDecription);
+  public void setErrorContentDescription(@Nullable final CharSequence errorContentDescription) {
+    indicatorViewController.setErrorContentDescription(errorContentDescription);
   }
 
   /**

File: lib/javatests/com/google/android/material/chip/ChipTest.java
Patch:
@@ -195,8 +195,8 @@ private static float getMinTouchTargetSize() {
     return dpToPx(ApplicationProvider.getApplicationContext(), MIN_SIZE_FOR_ALLY_DP);
   }
 
-  private void setupAndMeasureChip(boolean shouldEnsureMinTouchTargeSize) {
-    chip.setEnsureMinTouchTargetSize(shouldEnsureMinTouchTargeSize);
+  private void setupAndMeasureChip(boolean shouldEnsureMinTouchTargetSize) {
+    chip.setEnsureMinTouchTargetSize(shouldEnsureMinTouchTargetSize);
     int measureSpec =
         MeasureSpec.makeMeasureSpec((int) (getMinTouchTargetSize() * 2), MeasureSpec.AT_MOST);
     chip.measure(measureSpec, measureSpec);

File: lib/javatests/com/google/android/material/datepicker/RangeDateSelectorTest.java
Patch:
@@ -214,7 +214,7 @@ public void textInputHintValidWithPTLocale() {
     ShadowLooper.runUiThreadTasksIncludingDelayedTasks();
 
     // Some JVMs format PT dates as dd-mm-aaaa, and some as dd/mm/aaaa. Derive the expected result
-    // programatically to account for the difference.
+    // programmatically to account for the difference.
     boolean slashDateFormat = new SimpleDateFormat().toLocalizedPattern().startsWith("dd/");
     String expectedDateFormat = slashDateFormat ? "dd/mm/aaaa" : "dd-mm-aaaa";
     assertThat(startTextInput.getPlaceholderText().toString()).isEqualTo(expectedDateFormat);

File: lib/javatests/com/google/android/material/theme/ThemeTest.java
Patch:
@@ -125,7 +125,7 @@ public class ThemeTest {
   /**
    * There are color attributes that all theme overlays should have.
    *
-   * <p>All Light theme overlays shold match {@code Theme.MaterialComponents.Light} and all Dark
+   * <p>All Light theme overlays should match {@code Theme.MaterialComponents.Light} and all Dark
    * theme overlays should match {@code Theme.MaterialComponents}.
    */
   private static final ImmutableList<Integer> MATERIAL_OVERLAY_COLOR_ATTRIBUTES =

File: lib/java/com/google/android/material/color/HarmonizedColorsOptions.java
Patch:
@@ -102,7 +102,7 @@ public Builder setColorResourceIds(@NonNull @ColorRes int[] colorResourceIds) {
      *
      * @param colorAttributes The {@link HarmonizedColorAttributes} that needs to be harmonized.
      */
-    @Nullable
+    @NonNull
     public Builder setColorAttributes(@Nullable HarmonizedColorAttributes colorAttributes) {
       this.colorAttributes = colorAttributes;
       return this;

File: lib/java/com/google/android/material/textfield/DropdownMenuEndIconDelegate.java
Patch:
@@ -331,7 +331,7 @@ private void showHideDropdown(@Nullable AutoCompleteTextView editText) {
   }
 
   private void setPopupBackground(@NonNull AutoCompleteTextView editText) {
-    if (IS_LOLLIPOP) {
+    if (IS_LOLLIPOP && editText.getDropDownBackground() == null) {
       int boxBackgroundMode = textInputLayout.getBoxBackgroundMode();
       if (boxBackgroundMode == TextInputLayout.BOX_BACKGROUND_OUTLINE) {
         editText.setDropDownBackgroundDrawable(outlinedPopupBackground);

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3710,7 +3710,8 @@ boolean updateDummyDrawables() {
   }
 
   private boolean shouldUpdateStartDummyDrawable() {
-    return (getStartIconDrawable() != null || getPrefixText() != null)
+    return (getStartIconDrawable() != null
+            || (getPrefixText() != null && getPrefixTextView().getVisibility() == VISIBLE))
         && (startLayout.getMeasuredWidth() > 0);
   }
 

File: lib/java/com/google/android/material/textfield/DropdownMenuEndIconDelegate.java
Patch:
@@ -37,6 +37,7 @@
 import android.os.Build.VERSION;
 import android.os.Build.VERSION_CODES;
 import android.text.Editable;
+import android.text.InputType;
 import android.text.TextWatcher;
 import android.view.MotionEvent;
 import android.view.View;
@@ -491,7 +492,7 @@ private void updateDropdownPopupDirty() {
   }
 
   private static boolean isEditable(@NonNull EditText editText) {
-    return editText.getKeyListener() != null;
+    return editText.getInputType() != InputType.TYPE_NULL;
   }
 
   private void setEndIconChecked(boolean checked) {

File: lib/java/com/google/android/material/navigationrail/NavigationRailView.java
Patch:
@@ -180,7 +180,8 @@ public WindowInsetsCompat onApplyWindowInsets(
               initialPadding.top += insets.getInsets(WindowInsetsCompat.Type.systemBars()).top;
             }
             if (shouldApplyWindowInsetPadding(paddingBottomSystemWindowInsets)) {
-              initialPadding.top += insets.getInsets(WindowInsetsCompat.Type.systemBars()).bottom;
+              initialPadding.bottom +=
+                  insets.getInsets(WindowInsetsCompat.Type.systemBars()).bottom;
             }
 
             boolean isRtl = ViewCompat.getLayoutDirection(view) == ViewCompat.LAYOUT_DIRECTION_RTL;

File: lib/java/com/google/android/material/slider/LabelFormatter.java
Patch:
@@ -27,6 +27,7 @@ public interface LabelFormatter {
   int LABEL_FLOATING = 0;
   int LABEL_WITHIN_BOUNDS = 1;
   int LABEL_GONE = 2;
+  int LABEL_VISIBLE = 3;
 
   @NonNull
   String getFormattedValue(float value);

File: lib/java/com/google/android/material/timepicker/TimeModel.java
Patch:
@@ -91,7 +91,7 @@ public void setHour(int hour) {
     this.hour = hour % 12 + (period == PM ? 12 : 0);
   }
 
-  public void setMinute(@IntRange(from = 0, to = 60) int minute) {
+  public void setMinute(@IntRange(from = 0, to = 59) int minute) {
     this.minute = minute % 60;
   }
 

File: lib/java/com/google/android/material/timepicker/TimePickerPresenter.java
Patch:
@@ -18,7 +18,7 @@
 
 interface TimePickerPresenter {
 
-  /** Do any final intialization */
+  /** Do any final initialization */
   void initialize();
 
   /** Refresh the data in the view based on the model */

File: lib/java/com/google/android/material/color/DynamicColors.java
Patch:
@@ -315,7 +315,8 @@ private static void applyDynamicColorThemeOverlay(Activity activity, @StyleRes i
   private static Theme getWindowDecorViewTheme(@NonNull Activity activity) {
     Window window = activity.getWindow();
     if (window != null) {
-      View decorView = window.getDecorView();
+      // Use peekDecorView() instead of getDecorView() to avoid locking the Window.
+      View decorView = window.peekDecorView();
       if (decorView != null) {
         Context context = decorView.getContext();
         if (context != null) {

File: lib/java/com/google/android/material/textfield/PasswordToggleEndIconDelegate.java
Patch:
@@ -48,8 +48,6 @@ public void beforeTextChanged(CharSequence s, int start, int count, int after) {
         @Override
         public void onEditTextAttached(@NonNull TextInputLayout textInputLayout) {
           EditText editText = textInputLayout.getEditText();
-          textInputLayout.setEndIconVisible(true);
-          textInputLayout.setEndIconCheckable(true);
           endIconView.setChecked(!hasPasswordTransformation());
           // Make sure there's always only one password toggle text watcher added
           editText.removeTextChangedListener(textWatcher);
@@ -88,6 +86,8 @@ void initialize() {
         customEndIcon == 0 ? R.drawable.design_password_eye : customEndIcon);
     textInputLayout.setEndIconContentDescription(
         textInputLayout.getResources().getText(R.string.password_toggle_content_description));
+    textInputLayout.setEndIconVisible(true);
+    textInputLayout.setEndIconCheckable(true);
     textInputLayout.setEndIconOnClickListener(
         new OnClickListener() {
           @Override

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -1494,7 +1494,8 @@ public WindowInsetsCompat onApplyWindowInsets(
             int rightPadding = view.getPaddingRight();
 
             if (paddingBottomSystemWindowInsets) {
-              insetBottom = systemBarInsets.bottom;
+              Insets imeInsets = insets.getInsets(WindowInsetsCompat.Type.ime());
+              insetBottom = systemBarInsets.bottom + imeInsets.bottom;
               bottomPadding = initialPadding.bottom + insetBottom;
             }
 

File: lib/java/com/google/android/material/navigation/NavigationBarMenuView.java
Patch:
@@ -797,7 +797,7 @@ void restoreBadgeDrawables(SparseArray<BadgeDrawable> badgeDrawables) {
     }
     if (buttons != null) {
       for (NavigationBarItemView itemView : buttons) {
-        itemView.setBadge(badgeDrawables.get(itemView.getId()));
+        itemView.setBadge(this.badgeDrawables.get(itemView.getId()));
       }
     }
   }

File: lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java
Patch:
@@ -181,8 +181,7 @@ public interface ContentViewCallback
 
   /** @hide */
   @RestrictTo(LIBRARY_GROUP)
-  @IntDef({LENGTH_INDEFINITE, LENGTH_SHORT, LENGTH_LONG})
-  @IntRange(from = 1)
+  @IntRange(from = LENGTH_INDEFINITE)
   @Retention(RetentionPolicy.SOURCE)
   public @interface Duration {}
 

File: lib/java/com/google/android/material/color/DynamicColors.java
Patch:
@@ -231,7 +231,8 @@ private static void applyIfAvailable(
       theme = getDefaultThemeOverlay(activity);
     }
     if (theme != 0 && precondition.shouldApplyDynamicColors(activity, theme)) {
-      activity.setTheme(theme);
+      // Use applyStyle() instead of setTheme() due to Force Dark issue.
+      activity.getTheme().applyStyle(theme, /* force= */ true);
     }
   }
 

File: lib/java/com/google/android/material/navigation/NavigationBarPresenter.java
Patch:
@@ -127,7 +127,7 @@ public void onRestoreInstanceState(@NonNull Parcelable state) {
       SparseArray<BadgeDrawable> badgeDrawables =
           BadgeUtils.createBadgeDrawablesFromSavedStates(
               menuView.getContext(), ((SavedState) state).badgeSavedStates);
-      menuView.setBadgeDrawables(badgeDrawables);
+      menuView.restoreBadgeDrawables(badgeDrawables);
     }
   }
 

File: lib/javatests/com/google/android/material/badge/BadgeDrawableTest.java
Patch:
@@ -29,7 +29,6 @@
 import androidx.annotation.XmlRes;
 import androidx.core.content.res.ResourcesCompat;
 import androidx.test.core.app.ApplicationProvider;
-import com.google.android.material.badge.BadgeDrawable.SavedState;
 import com.google.android.material.drawable.DrawableUtils;
 import java.util.Locale;
 import org.junit.Before;
@@ -65,7 +64,7 @@ public void testSavedState() {
     int testBadgeTextColor =
         ResourcesCompat.getColor(context.getResources(), android.R.color.white, context.getTheme());
     BadgeDrawable badgeDrawable = BadgeDrawable.create(context);
-    SavedState drawableState = badgeDrawable.getSavedState();
+    BadgeState.State drawableState = badgeDrawable.getSavedState();
     badgeDrawable.setNumber(TEST_BADGE_NUMBER);
     badgeDrawable.setBadgeGravity(BadgeDrawable.TOP_START);
 
@@ -92,7 +91,7 @@ public void testSavedState() {
     drawableState.writeToParcel(parcel, drawableState.describeContents());
     parcel.setDataPosition(0);
 
-    SavedState createdFromParcel = SavedState.CREATOR.createFromParcel(parcel);
+    BadgeState.State createdFromParcel = BadgeState.State.CREATOR.createFromParcel(parcel);
     BadgeDrawable restoredBadgeDrawable =
         BadgeDrawable.createFromSavedState(context, createdFromParcel);
     assertThat(restoredBadgeDrawable.getNumber()).isEqualTo(TEST_BADGE_NUMBER);

File: lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java
Patch:
@@ -765,10 +765,11 @@ public void run() {
 
       recalculateAndUpdateMargins();
 
+      targetParent.addView(this.view);
+
       // Set view to INVISIBLE so it doesn't flash on the screen before the inset adjustment is
       // handled and the enter animation is started
       view.setVisibility(View.INVISIBLE);
-      targetParent.addView(this.view);
     }
 
     if (ViewCompat.isLaidOut(this.view)) {

File: lib/java/com/google/android/material/datepicker/MaterialCalendar.java
Patch:
@@ -390,7 +390,7 @@ public void onInitializeAccessibilityNodeInfo(
     yearFrame = root.findViewById(R.id.mtrl_calendar_year_selector_frame);
     dayFrame = root.findViewById(R.id.mtrl_calendar_day_selector_frame);
     setSelector(CalendarSelector.DAY);
-    monthDropSelect.setText(current.getLongName(root.getContext()));
+    monthDropSelect.setText(current.getLongName());
     recyclerView.addOnScrollListener(
         new OnScrollListener() {
           @Override

File: lib/java/com/google/android/material/datepicker/Month.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.google.android.material.datepicker;
 
-import android.content.Context;
 import android.os.Parcel;
 import android.os.Parcelable;
 import androidx.annotation.IntDef;
@@ -189,9 +188,9 @@ Month monthsLater(int months) {
 
   /** Returns a localized String representation of the month name and year. */
   @NonNull
-  String getLongName(Context context) {
+  String getLongName() {
     if (longName == null) {
-      longName = DateStrings.getYearMonth(context, firstOfMonth.getTimeInMillis());
+      longName = DateStrings.getYearMonth(firstOfMonth.getTimeInMillis());
     }
     return longName;
   }

File: lib/javatests/com/google/android/material/datepicker/MonthsPagerAdapterTest.java
Patch:
@@ -126,10 +126,10 @@ public void pageTitles() {
                 .build(),
             /* onDayClickListener= */ null);
     assertEquals(
-        feb2016.getLongName(context), monthsAdapter.getPageTitle(/* position= */ 0).toString());
+        feb2016.getLongName(), monthsAdapter.getPageTitle(/* position= */ 0).toString());
     assertEquals(
-        march2016.getLongName(context), monthsAdapter.getPageTitle(/* position= */ 1).toString());
+        march2016.getLongName(), monthsAdapter.getPageTitle(/* position= */ 1).toString());
     assertEquals(
-        april2016.getLongName(context), monthsAdapter.getPageTitle(/* position= */ 2).toString());
+        april2016.getLongName(), monthsAdapter.getPageTitle(/* position= */ 2).toString());
   }
 }

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -204,7 +204,7 @@ public void onInitializeAccessibilityEvent(@NonNull AccessibilityEvent accessibi
   @Override
   protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
     super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-    cardViewHelper.onMeasure(getMeasuredWidth(), getMeasuredHeight());
+    cardViewHelper.recalculateCheckedIconPosition(getMeasuredWidth(), getMeasuredHeight());
   }
 
   /**

File: lib/java/com/google/android/material/textfield/DropdownMenuEndIconDelegate.java
Patch:
@@ -131,7 +131,7 @@ public void onPopulateAccessibilityEvent(View host, @NonNull AccessibilityEvent
           // If dropdown is non editable, layout click is what triggers showing/hiding the popup
           // list. Otherwise, arrow icon alone is what triggers it.
           if (event.getEventType() == TYPE_VIEW_CLICKED
-              && accessibilityManager.isTouchExplorationEnabled()
+              && accessibilityManager.isEnabled()
               && !isEditable(textInputLayout.getEditText())) {
             showHideDropdown(editText);
           }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -2702,9 +2702,9 @@ private int calculateLabelMarginTop() {
     switch (boxBackgroundMode) {
       case BOX_BACKGROUND_OUTLINE:
         return (int) (collapsingTextHelper.getCollapsedTextHeight() / 2);
-      case BOX_BACKGROUND_FILLED:
       case BOX_BACKGROUND_NONE:
         return (int) collapsingTextHelper.getCollapsedTextHeight();
+      case BOX_BACKGROUND_FILLED:
       default:
         return 0;
     }

File: lib/java/com/google/android/material/appbar/MaterialToolbar.java
Patch:
@@ -70,7 +70,7 @@ public class MaterialToolbar extends Toolbar {
 
   private static final int DEF_STYLE_RES = R.style.Widget_MaterialComponents_Toolbar;
 
-  private static final ImageView.ScaleType[] sScaleTypeArray = {
+  private static final ImageView.ScaleType[] LOGO_SCALE_TYPE_ARRAY = {
       ImageView.ScaleType.MATRIX,
       ImageView.ScaleType.FIT_XY,
       ImageView.ScaleType.FIT_START,
@@ -113,8 +113,8 @@ public MaterialToolbar(@NonNull Context context, @Nullable AttributeSet attrs, i
     subtitleCentered = a.getBoolean(R.styleable.MaterialToolbar_subtitleCentered, false);
 
     final int index = a.getInt(R.styleable.MaterialToolbar_logoScaleType, -1);
-    if (index >= 0 && index < sScaleTypeArray.length) {
-      logoScaleType = (sScaleTypeArray[index]);
+    if (index >= 0 && index < LOGO_SCALE_TYPE_ARRAY.length) {
+      logoScaleType = (LOGO_SCALE_TYPE_ARRAY[index]);
     } else {
       logoScaleType = ImageView.ScaleType.FIT_CENTER;
     }

File: lib/java/com/google/android/material/timepicker/ChipTextInputComboView.java
Patch:
@@ -39,6 +39,7 @@
 import androidx.annotation.Nullable;
 import com.google.android.material.chip.Chip;
 import com.google.android.material.internal.TextWatcherAdapter;
+import com.google.android.material.internal.ViewUtils;
 import com.google.android.material.textfield.TextInputLayout;
 import java.util.Arrays;
 
@@ -98,7 +99,7 @@ public void setChecked(boolean checked) {
     editText.setVisibility(checked ? VISIBLE : INVISIBLE);
     chip.setVisibility(checked ? GONE : VISIBLE);
     if (isChecked()) {
-      editText.requestFocus();
+      ViewUtils.requestFocusAndShowKeyboard(editText);
       if (!TextUtils.isEmpty(editText.getText())) {
         editText.setSelection(editText.getText().length());
       }

File: lib/java/com/google/android/material/timepicker/MaterialTimePicker.java
Patch:
@@ -307,8 +307,8 @@ public void onClick(View v) {
   }
 
   @Override
-  public void onStop() {
-    super.onStop();
+  public void onDestroyView() {
+    super.onDestroyView();
     activePresenter = null;
     timePickerClockPresenter = null;
     timePickerTextInputPresenter = null;

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -1559,8 +1559,8 @@ private void snapToChildIfNeeded(CoordinatorLayout coordinatorLayout, @NonNull T
           int snapBottom = -offsetChild.getBottom();
 
           if (offsetChildIndex == abl.getChildCount() - 1) {
-            // If this is the last child, we need to take the top inset into account
-            snapBottom += abl.getTopInset();
+            // If this is the last child, we need to take the top inset and padding into account
+            snapBottom += abl.getTopInset() + abl.getPaddingTop();
           }
 
           if (checkFlag(flags, LayoutParams.SCROLL_FLAG_EXIT_UNTIL_COLLAPSED)) {

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -1343,7 +1343,9 @@ public void setSelectedTabIndicator(@Nullable Drawable tabSelectedIndicator) {
       this.tabSelectedIndicator =
           tabSelectedIndicator != null ? tabSelectedIndicator : new GradientDrawable();
       int indicatorHeight =
-          tabIndicatorHeight != -1 ? tabIndicatorHeight : tabSelectedIndicator.getIntrinsicHeight();
+          tabIndicatorHeight != -1
+              ? tabIndicatorHeight
+              : this.tabSelectedIndicator.getIntrinsicHeight();
       slidingTabIndicator.setSelectedIndicatorHeight(indicatorHeight);
     }
   }

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -2255,7 +2255,8 @@ public boolean isSelected() {
       if (parent == null) {
         throw new IllegalArgumentException("Tab not attached to a TabLayout");
       }
-      return parent.getSelectedTabPosition() == position;
+      int selectedPosition = parent.getSelectedTabPosition();
+      return selectedPosition != INVALID_POSITION && selectedPosition == position;
     }
 
     /**

File: lib/java/com/google/android/material/appbar/ViewUtilsLollipop.java
Patch:
@@ -65,12 +65,12 @@ static void setDefaultAppBarLayoutStateListAnimator(
 
     // Enabled and liftable, but not lifted means not elevated
     sla.addState(
-        new int[] {android.R.attr.enabled, R.attr.state_liftable, -R.attr.state_lifted},
+        new int[] {android.R.attr.state_enabled, R.attr.state_liftable, -R.attr.state_lifted},
         ObjectAnimator.ofFloat(view, "elevation", 0f).setDuration(dur));
 
     // Default enabled state
     sla.addState(
-        new int[] {android.R.attr.enabled},
+        new int[] {android.R.attr.state_enabled},
         ObjectAnimator.ofFloat(view, "elevation", elevation).setDuration(dur));
 
     // Disabled state

File: lib/java/com/google/android/material/navigation/NavigationBarMenuView.java
Patch:
@@ -630,7 +630,7 @@ public void buildMenuView() {
       for (NavigationBarItemView item : buttons) {
         if (item != null) {
           itemPool.release(item);
-          item.removeBadge();
+          item.clear();
         }
       }
     }

File: catalog/java/io/material/catalog/font/FontMainDemoFragment.java
Patch:
@@ -119,11 +119,11 @@ public FontStyleAdapter(Context context) {
 
       TypedValue value = new TypedValue();
       for (int i = 0; i < stylesArray.length(); i++) {
-        // 1. Get the attribute from the array: ?attr/textAppearanceHeadline1
+        // 1. Get the attribute from the array: ?attr/textAppearanceBodyLarge
         stylesArray.getValue(i, value);
         int attribute = value.data;
 
-        // 2. Get the style from the attribute: @style/TextAppearance.MaterialComponents.Headline1
+        // 2. Get the style from the attribute: @style/TextAppearance.MaterialComponents.BodyLarge
         TypedArray a = context.obtainStyledAttributes(new int[] {attribute});
         int style = a.getResourceId(0, 0);
         a.recycle();

File: lib/java/com/google/android/material/appbar/CollapsingToolbarLayout.java
Patch:
@@ -553,7 +553,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
       updateTitleFromToolbarIfNeeded();
       updateTextBounds(0, 0, getMeasuredWidth(), getMeasuredHeight(), /* forceRecalculate= */ true);
 
-      int lineCount = collapsingTextHelper.getLineCount();
+      int lineCount = collapsingTextHelper.getExpandedLineCount();
       if (lineCount > 1) {
         // Add extra height based on the amount of height beyond the first line of title text.
         int expandedTextHeight = Math.round(collapsingTextHelper.getExpandedTextFullHeight());

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -2106,8 +2106,8 @@ public void setCounterTextColor(@Nullable ColorStateList counterTextColor) {
   /**
    * Returns the text color used for the character counter, or null if one has not been set.
    *
-   * @attr ref com.google.android.material.R.styleable#TextInputLayout_counterOverflowTextColor
-   * @see #setCounterTextAppearance(int)
+   * @attr ref com.google.android.material.R.styleable#TextInputLayout_counterTextColor
+   * @see #setCounterTextColor(ColorStateList)
    * @return the text color used for the character counter
    */
   @Nullable

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3011,7 +3011,7 @@ public void setHintAnimationEnabled(boolean enabled) {
    * and not focused.
    *
    * @see #setExpandedHintEnabled(boolean)
-   * @attr ref com.google.android.material.R.styleable#TextInputLayout_hintExpadedEnabled
+   * @attr ref com.google.android.material.R.styleable#TextInputLayout_hintExpandedEnabled
    */
   public boolean isExpandedHintEnabled() {
     return expandedHintEnabled;
@@ -3022,7 +3022,7 @@ public boolean isExpandedHintEnabled() {
    * and not focused.
    *
    * @see #isExpandedHintEnabled()
-   * @attr ref com.google.android.material.R.styleable#TextInputLayout_hintExpadedEnabled
+   * @attr ref com.google.android.material.R.styleable#TextInputLayout_hintExpandedEnabled
    */
   public void setExpandedHintEnabled(boolean enabled) {
     if (expandedHintEnabled != enabled) {

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -236,7 +236,7 @@ public void onTranslationChanged(@NonNull FloatingActionButton fab) {
       };
 
   public BottomAppBar(@NonNull Context context) {
-    this(context, null, 0);
+    this(context, null);
   }
 
   public BottomAppBar(@NonNull Context context, @Nullable AttributeSet attrs) {

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -121,7 +121,7 @@ public abstract static class BottomSheetCallback {
   /** The bottom sheet is hidden. */
   public static final int STATE_HIDDEN = 5;
 
-  /** The bottom sheet is half-expanded (used when mFitToContents is false). */
+  /** The bottom sheet is half-expanded (used when fitToContents is false). */
   public static final int STATE_HALF_EXPANDED = 6;
 
   /** @hide */

File: lib/java/com/google/android/material/slider/RangeSlider.java
Patch:
@@ -138,6 +138,8 @@ public float getMinSeparation() {
    *
    * @see #getMinSeparation()
    * @attr ref com.google.android.material.R.styleable#RangeSlider_minSeparation
+   * @throws IllegalStateException if used in conjunction with {@link #setStepSize(float)}, use
+   *     {@link #setMinSeparationValue(float)} instead.
    */
   public void setMinSeparation(@Dimension float minSeparation) {
     this.minSeparation = minSeparation;

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -429,6 +429,7 @@ public void toggle() {
       checked = !checked;
       refreshDrawableState();
       forceRippleRedrawIfNeeded();
+      cardViewHelper.setChecked(checked);
       if (onCheckedChangeListener != null) {
         onCheckedChangeListener.onCheckedChanged(this, checked);
       }

File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -761,6 +761,7 @@ private void updateIcon(boolean needsIconReset) {
       int width = iconSize != 0 ? iconSize : icon.getIntrinsicWidth();
       int height = iconSize != 0 ? iconSize : icon.getIntrinsicHeight();
       icon.setBounds(iconLeft, iconTop, iconLeft + width, iconTop + height);
+      icon.setVisible(true, needsIconReset);
     }
 
     // Forced icon update

File: lib/java/com/google/android/material/textfield/NoEndIconDelegate.java
Patch:
@@ -23,7 +23,7 @@
  */
 class NoEndIconDelegate extends EndIconDelegate {
   NoEndIconDelegate(@NonNull TextInputLayout textInputLayout) {
-    super(textInputLayout);
+    super(textInputLayout, 0);
   }
 
   @Override

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -2411,7 +2411,6 @@ protected void onRestoreInstanceState(Parcelable state) {
     if (sliderState.hasFocus) {
       requestFocus();
     }
-    dispatchOnChangedProgramatically();
   }
 
   static class SliderState extends BaseSavedState {

File: lib/java/com/google/android/material/internal/CollapsingTextHelper.java
Patch:
@@ -767,8 +767,8 @@ public void draw(@NonNull Canvas canvas) {
     final int saveCount = canvas.save();
     // Compute where to draw textLayout for this frame
     if (textToDraw != null && drawTitle) {
-      final float currentExpandedX =
-          currentDrawX + textLayout.getLineLeft(0) - expandedFirstLineDrawX * 2;
+      float firstLineX = maxLines > 1 ? textLayout.getLineStart(0) : textLayout.getLineLeft(0);
+      final float currentExpandedX = currentDrawX + firstLineX - expandedFirstLineDrawX * 2;
 
       textPaint.setTextSize(currentTextSize);
       float x = currentDrawX;

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -1839,6 +1839,8 @@ private boolean snapActiveThumbToValue(float value) {
   }
 
   private boolean snapThumbToValue(int idx, float value) {
+    focusedThumbIdx = idx;
+
     // Check if the new value equals a value that was already set.
     if (abs(value - values.get(idx)) < THRESHOLD) {
       return false;
@@ -1847,7 +1849,6 @@ private boolean snapThumbToValue(int idx, float value) {
     float newValue = getClampedValue(idx, value);
     // Replace the old value with the new value of the touch position.
     values.set(idx, newValue);
-    focusedThumbIdx = idx;
 
     dispatchOnChangedFromUser(idx);
     return true;

File: lib/java/com/google/android/material/badge/BadgeDrawable.java
Patch:
@@ -689,6 +689,7 @@ public void setNumber(int number) {
   /** Resets any badge number so that a numberless badge will be displayed. */
   public void clearNumber() {
     savedState.number = BADGE_NUMBER_NONE;
+    updateCenterAndBounds();
     invalidateSelf();
   }
 

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1329,12 +1329,12 @@ private void applyChildDrawable(@Nullable Drawable drawable) {
       DrawableCompat.setTintList(drawable, closeIconTint);
       return;
     }
-    if (drawable.isStateful()) {
-      drawable.setState(getState());
-    }
     if (drawable == chipIcon && hasChipIconTint) {
       DrawableCompat.setTintList(chipIcon, chipIconTint);
     }
+    if (drawable.isStateful()) {
+      drawable.setState(getState());
+    }
   }
 
   /**

File: lib/java/com/google/android/material/progressindicator/CircularIndeterminateAnimatorDelegate.java
Patch:
@@ -109,7 +109,9 @@ public void onAnimationRepeat(Animator animation) {
             public void onAnimationEnd(Animator animation) {
               super.onAnimationEnd(animation);
               cancelAnimatorImmediately();
-              animatorCompleteCallback.onAnimationEnd(drawable);
+              if (animatorCompleteCallback != null) {
+                animatorCompleteCallback.onAnimationEnd(drawable);
+              }
             }
           });
     }

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -692,7 +692,7 @@ private void createFabTranslationXAnimation(
   @Nullable
   private Drawable maybeTintNavigationIcon(@Nullable Drawable navigationIcon) {
     if (navigationIcon != null && navigationIconTint != null) {
-      Drawable wrappedNavigationIcon = DrawableCompat.wrap(navigationIcon);
+      Drawable wrappedNavigationIcon = DrawableCompat.wrap(navigationIcon.mutate());
       DrawableCompat.setTint(wrappedNavigationIcon, navigationIconTint);
       return wrappedNavigationIcon;
     } else {

File: lib/java/com/google/android/material/progressindicator/DeterminateDrawable.java
Patch:
@@ -129,7 +129,7 @@ boolean setVisibleInternal(boolean visible, boolean restart, boolean animate) {
   public void jumpToCurrentState() {
     // Set spring target value to the current level (may not be same as the desired level, depends
     // on the completion of progress animator) and end the animator immediately.
-    springAnimator.cancel();
+    springAnimator.skipToEnd();
     setIndicatorFraction((float) getLevel() / MAX_DRAWABLE_LEVEL);
   }
 
@@ -142,7 +142,7 @@ public void jumpToCurrentState() {
   @Override
   protected boolean onLevelChange(int level) {
     if (skipAnimationOnLevelChange) {
-      springAnimator.cancel();
+      springAnimator.skipToEnd();
       setIndicatorFraction((float) level / MAX_DRAWABLE_LEVEL);
     } else {
       springAnimator.setStartValue(getIndicatorFraction() * MAX_DRAWABLE_LEVEL);

File: lib/java/com/google/android/material/internal/CollapsingTextHelper.java
Patch:
@@ -19,6 +19,7 @@
 import static androidx.core.util.Preconditions.checkNotNull;
 import static android.text.Layout.Alignment.ALIGN_NORMAL;
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
+import static java.lang.Math.max;
 import static java.lang.Math.min;
 
 import android.animation.TimeInterpolator;
@@ -548,7 +549,7 @@ private void calculateOffsets(final float fraction) {
       } else {
         textBlendFraction = 1F;
         currentDrawX = collapsedDrawX;
-        currentDrawY = collapsedDrawY - currentOffsetY;
+        currentDrawY = collapsedDrawY - max(0, currentOffsetY);
 
         setInterpolatedTextSize(collapsedTextSize);
       }

File: lib/java/com/google/android/material/appbar/CollapsingToolbarLayout.java
Patch:
@@ -189,6 +189,7 @@ public CollapsingToolbarLayout(@NonNull Context context, @Nullable AttributeSet
 
     collapsingTextHelper = new CollapsingTextHelper(this);
     collapsingTextHelper.setTextSizeInterpolator(AnimationUtils.DECELERATE_INTERPOLATOR);
+    collapsingTextHelper.setRtlTextDirectionHeuristicsEnabled(false);
 
     elevationOverlayProvider = new ElevationOverlayProvider(context);
 

File: lib/javatests/com/google/android/material/ripple/RippleUtilsTest.java
Patch:
@@ -60,15 +60,15 @@ public void testValidateColor_solidColor_returnsSelf_noWarning() {
   public void testValidateColor_transparentDefaultColor_returnsSelf_kitkat_noWarning() {
     ColorStateList rippleColor = createTransparentDefaultColor();
     assertThat(RippleUtils.sanitizeRippleDrawableColor(rippleColor)).isEqualTo(rippleColor);
-    ShadowLog.getLogsForTag(RippleUtils.LOG_TAG).isEmpty();
+    assertThat(ShadowLog.getLogsForTag(RippleUtils.LOG_TAG)).isEmpty();
   }
 
   @Test
   @Config(sdk = VERSION_CODES.LOLLIPOP)
   public void testValidateColor_transparentDefaultColor_returnsSelf_lollipop_noWarning() {
     ColorStateList rippleColor = createTransparentDefaultColor();
     assertThat(RippleUtils.sanitizeRippleDrawableColor(rippleColor)).isEqualTo(rippleColor);
-    ShadowLog.getLogsForTag(RippleUtils.LOG_TAG).isEmpty();
+    assertThat(ShadowLog.getLogsForTag(RippleUtils.LOG_TAG)).isEmpty();
   }
 
   @Test
@@ -94,7 +94,7 @@ public void testValidateColor_transparentDefaultColor_returnsSelf_oreoMr1_logsWa
   public void testValidateColor_transparentDefaultColor_returnsSelf_pie_noWarning() {
     ColorStateList rippleColor = createTransparentDefaultColor();
     assertThat(RippleUtils.sanitizeRippleDrawableColor(rippleColor)).isEqualTo(rippleColor);
-    ShadowLog.getLogsForTag(RippleUtils.LOG_TAG).isEmpty();
+    assertThat(ShadowLog.getLogsForTag(RippleUtils.LOG_TAG)).isEmpty();
   }
 
   private ColorStateList createTransparentDefaultColor() {

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -4077,9 +4077,9 @@ private void openCutout() {
     final RectF cutoutBounds = tmpRectF;
     collapsingTextHelper.getCollapsedTextActualBounds(
         cutoutBounds, editText.getWidth(), editText.getGravity());
-    boxLabelCutoutWidth = boxStrokeWidthPx;
-    cutoutBounds.bottom = cutoutBounds.top + boxLabelCutoutWidth;
     applyCutoutPadding(cutoutBounds);
+    boxLabelCutoutWidth = boxStrokeWidthPx;
+    cutoutBounds.bottom = boxLabelCutoutWidth;
     // Offset the cutout bounds by the TextInputLayout's left and top paddings to ensure that the
     // cutout is inset relative to the TextInputLayout's bounds.
     cutoutBounds.offset(-getPaddingLeft(), -getPaddingTop());
@@ -4102,6 +4102,7 @@ private void closeCutout() {
 
   private void applyCutoutPadding(@NonNull RectF cutoutBounds) {
     cutoutBounds.left -= boxLabelCutoutPaddingPx;
+    cutoutBounds.top -= boxLabelCutoutPaddingPx;
     cutoutBounds.right += boxLabelCutoutPaddingPx;
   }
 

File: lib/java/com/google/android/material/timepicker/MaterialTimePicker.java
Patch:
@@ -27,6 +27,7 @@
 import android.content.res.TypedArray;
 import android.os.Bundle;
 import androidx.fragment.app.DialogFragment;
+import androidx.core.view.ViewCompat;
 import android.text.TextUtils;
 import android.util.Pair;
 import android.util.TypedValue;
@@ -158,9 +159,10 @@ public final Dialog onCreateDialog(@Nullable Bundle bundle) {
 
     a.recycle();
 
+    Window window = dialog.getWindow();
     background.initializeElevationOverlay(context);
     background.setFillColor(ColorStateList.valueOf(surfaceColor));
-    Window window = dialog.getWindow();
+    background.setElevation(ViewCompat.getElevation(window.getDecorView()));
     window.setBackgroundDrawable(background);
     window.requestFeature(Window.FEATURE_NO_TITLE);
     // On some Android APIs the dialog won't wrap content by default. Explicitly update here.

File: lib/java/com/google/android/material/internal/StaticLayoutBuilderCompat.java
Patch:
@@ -210,6 +210,9 @@ public StaticLayout build() throws StaticLayoutBuilderCompatException {
         builder.setEllipsize(ellipsize);
       }
       builder.setMaxLines(maxLines);
+      if (maxLines > 1) {
+        builder.setHyphenationFrequency(StaticLayout.HYPHENATION_FREQUENCY_NORMAL);
+      }
       return builder.build();
     }
 

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -551,7 +551,7 @@ boolean setFabDiameter(@Px int diameter) {
     return false;
   }
 
-  void setFabCornerSize(@Px int radius) {
+  void setFabCornerSize(@Dimension float radius) {
     if (radius != getTopEdgeTreatment().getFabCornerRadius()) {
       getTopEdgeTreatment().setFabCornerSize(radius);
       materialShapeDrawable.invalidateSelf();
@@ -1036,7 +1036,7 @@ public void onLayoutChange(
             child.setFabDiameter(height);
 
             // Assume symmetrical corners
-            int cornerSize = (int) fab.getShapeAppearanceModel().getTopLeftCornerSize()
+            float cornerSize = fab.getShapeAppearanceModel().getTopLeftCornerSize()
                 .getCornerSize(new RectF(fabContentRect));
 
             child.setFabCornerSize(cornerSize);

File: lib/java/com/google/android/material/textfield/ClearTextEndIconDelegate.java
Patch:
@@ -56,7 +56,7 @@ public void afterTextChanged(@NonNull Editable s) {
           if (textInputLayout.getSuffixText() != null) {
             return;
           }
-          animateIcon(hasText(s));
+          animateIcon(textInputLayout.hasFocus() && hasText(s));
         }
       };
   private final OnFocusChangeListener onFocusChangeListener =

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationItemView.java
Patch:
@@ -29,7 +29,7 @@
 
 /** @hide For internal use only. */
 @RestrictTo(LIBRARY_GROUP)
-final class BottomNavigationItemView extends NavigationBarItemView {
+public class BottomNavigationItemView extends NavigationBarItemView {
   public BottomNavigationItemView(@NonNull Context context) {
     super(context);
   }

File: lib/java/com/google/android/material/math/MathUtils.java
Patch:
@@ -31,7 +31,7 @@ public static float dist(float x1, float y1, float x2, float y2) {
   }
 
   /**
-   * Returns the linear interpolation of {@param amount} between {@param start} and {@param stop}.
+   * Returns the linear interpolation of {@code amount} between {@code start} and {@code stop}.
    */
   public static float lerp(float start, float stop, float amount) {
     return (1 - amount) * start + amount * stop;

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -349,8 +349,10 @@ public BottomSheetBehavior(@NonNull Context context, @Nullable AttributeSet attr
         a.getBoolean(R.styleable.BottomSheetBehavior_Layout_paddingLeftSystemWindowInsets, false);
     paddingRightSystemWindowInsets =
         a.getBoolean(R.styleable.BottomSheetBehavior_Layout_paddingRightSystemWindowInsets, false);
+    // Setting this to false will prevent the bottomsheet from going below the status bar. Since
+    // this is a breaking change from the old behavior the default is true.
     paddingTopSystemWindowInsets =
-        a.getBoolean(R.styleable.BottomSheetBehavior_Layout_paddingTopSystemWindowInsets, false);
+        a.getBoolean(R.styleable.BottomSheetBehavior_Layout_paddingTopSystemWindowInsets, true);
 
     a.recycle();
     ViewConfiguration configuration = ViewConfiguration.get(context);

File: lib/java/com/google/android/material/appbar/CollapsingToolbarLayout.java
Patch:
@@ -63,7 +63,7 @@
 import java.lang.annotation.RetentionPolicy;
 
 /**
- * CollapsingToolbarLayout is a wrapper for {@link Toolbar} which implements a collapsing app bar.
+ * CollapsingToolbarLayout is a wrapper for {@code Toolbar} which implements a collapsing app bar.
  * It is designed to be used as a direct child of a {@link AppBarLayout}. CollapsingToolbarLayout
  * contains the following features:
  *
@@ -94,7 +94,7 @@
  * <h4>Pinned position children</h4>
  *
  * Child views can opt to be pinned in space globally. This is useful when implementing a collapsing
- * as it allows the {@link Toolbar} to be fixed in place even though this layout is moving. See
+ * as it allows the {@code Toolbar} to be fixed in place even though this layout is moving. See
  * {@link LayoutParams#COLLAPSE_MODE_PIN}.
  *
  * <p><strong>Do not manually add views to the Toolbar at run time</strong>. We will add a 'dummy

File: lib/java/com/google/android/material/navigationrail/NavigationRailMenuView.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.google.android.material.navigationrail;
 
+import static android.view.ViewGroup.LayoutParams.MATCH_PARENT;
 import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
 import static com.google.android.material.navigationrail.NavigationRailView.DEFAULT_MENU_GRAVITY;
@@ -37,7 +38,7 @@
 public class NavigationRailMenuView extends NavigationBarMenuView {
 
   private final FrameLayout.LayoutParams layoutParams =
-      new FrameLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+      new FrameLayout.LayoutParams(MATCH_PARENT, WRAP_CONTENT);
 
   public NavigationRailMenuView(@NonNull Context context) {
     super(context);

File: lib/java/com/google/android/material/progressindicator/CircularProgressIndicator.java
Patch:
@@ -18,6 +18,8 @@
 
 import com.google.android.material.R;
 
+import static java.lang.Math.max;
+
 import android.content.Context;
 import android.util.AttributeSet;
 import androidx.annotation.AttrRes;
@@ -150,10 +152,9 @@ public int getIndicatorSize() {
    * @see #getIndicatorSize()
    * @attr ref
    *     com.google.android.material.progressindicator.R.stylable#CircularProgressIndicator_indicatorSize
-   * @throws IllegalArgumentException if new indicator radius is less than half of the indicator
-   *     size.
    */
   public void setIndicatorSize(@Px int indicatorSize) {
+    indicatorSize = max(indicatorSize, getTrackThickness() * 2);
     if (spec.indicatorSize != indicatorSize) {
       spec.indicatorSize = indicatorSize;
       spec.validateSpec();

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -124,8 +124,8 @@
  * &lt;/androidx.coordinatorlayout.widget.CoordinatorLayout&gt;
  * </pre>
  *
- * @see <a href="http://www.google.com/design/spec/layout/structure.html#structure-app-bar">
- *     http://www.google.com/design/spec/layout/structure.html#structure-app-bar</a>
+ * @see <a href="https://material.io/components/app-bars-top#anatomy">
+ *     https://material.io/components/app-bars-top#anatomy</a>
  */
 public class AppBarLayout extends LinearLayout implements CoordinatorLayout.AttachedBehavior {
 

File: lib/java/com/google/android/material/progressindicator/BaseProgressIndicator.java
Patch:
@@ -826,9 +826,9 @@ public void onAnimationEnd(Drawable drawable) {
         @Override
         public void onAnimationEnd(Drawable drawable) {
           super.onAnimationEnd(drawable);
-          if (!isIndeterminateModeChangeRequested && visibleToUser()) {
+          if (!isIndeterminateModeChangeRequested) {
             // Don't hide the component if under transition from indeterminate mode to
-            // determinate mode or the component is current not visible to users.
+            // determinate mode.
             setVisibility(visibilityAfterHide);
           }
         }

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -108,7 +108,7 @@ boolean setVisibleInternal(boolean visible, boolean restart, boolean animate) {
         animatorDurationScaleProvider.getSystemAnimatorDurationScale(context.getContentResolver());
     if (visible
         && (animate
-            || (VERSION.SDK_INT < VERSION_CODES.LOLLIPOP && systemAnimatorDurationScale > 0))) {
+            || (VERSION.SDK_INT <= VERSION_CODES.LOLLIPOP && systemAnimatorDurationScale > 0))) {
       animatorDelegate.startAnimator();
     }
 

File: lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java
Patch:
@@ -773,7 +773,9 @@ public void run() {
 
       // Set view to INVISIBLE so it doesn't flash on the screen before the inset adjustment is
       // handled and the enter animation is started
-      view.setVisibility(View.INVISIBLE);
+      if (view.getParent() != null) {
+        view.setVisibility(View.INVISIBLE);
+      }
       targetParent.addView(this.view);
     }
 

File: lib/java/com/google/android/material/datepicker/MonthAdapter.java
Patch:
@@ -27,6 +27,7 @@
 import androidx.annotation.Nullable;
 import java.util.Calendar;
 import java.util.Collection;
+import java.util.Locale;
 
 /**
  * Represents the days of a month with {@link TextView} instances for each day.
@@ -116,7 +117,8 @@ public TextView getView(int position, @Nullable View convertView, @NonNull ViewG
       int dayNumber = offsetPosition + 1;
       // The tag and text uniquely identify the view within the MaterialCalendar for testing
       day.setTag(month);
-      day.setText(String.valueOf(dayNumber));
+      Locale locale = day.getResources().getConfiguration().locale;
+      day.setText(String.format(locale, "%d", dayNumber));
       long dayInMillis = month.getDay(dayNumber);
       if (month.year == Month.current().year) {
         day.setContentDescription(DateStrings.getMonthDayOfWeekDay(dayInMillis));

File: lib/java/com/google/android/material/datepicker/DaysOfWeekAdapter.java
Patch:
@@ -86,8 +86,9 @@ public View getView(int position, @Nullable View convertView, @NonNull ViewGroup
           (TextView) layoutInflater.inflate(R.layout.mtrl_calendar_day_of_week, parent, false);
     }
     calendar.set(Calendar.DAY_OF_WEEK, positionToDayOfWeek(position));
+    Locale locale = dayOfWeek.getResources().getConfiguration().locale;
     dayOfWeek.setText(
-        calendar.getDisplayName(Calendar.DAY_OF_WEEK, CALENDAR_DAY_STYLE, Locale.getDefault()));
+        calendar.getDisplayName(Calendar.DAY_OF_WEEK, CALENDAR_DAY_STYLE, locale));
     dayOfWeek.setContentDescription(
         String.format(
             parent.getContext().getString(R.string.mtrl_picker_day_of_week_column_header),

File: lib/java/com/google/android/material/timepicker/ChipTextInputComboView.java
Patch:
@@ -76,6 +76,7 @@ public ChipTextInputComboView(
     addView(chip);
     addView(textInputLayout);
     label = findViewById(R.id.material_label);
+    editText.setSaveEnabled(false);
   }
 
   private void updateHintLocales() {

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -59,9 +59,9 @@ public static IndeterminateDrawable<LinearProgressIndicatorSpec> createLinearDra
         /*baseSpec=*/ spec,
         new LinearDrawingDelegate(spec),
         spec.indeterminateAnimationType
-                == LinearProgressIndicator.INDETERMINATE_ANIMATION_TYPE_SEAMLESS
-            ? new LinearIndeterminateSeamlessAnimatorDelegate(spec)
-            : new LinearIndeterminateSpacingAnimatorDelegate(context, spec));
+                == LinearProgressIndicator.INDETERMINATE_ANIMATION_TYPE_CONTIGUOUS
+            ? new LinearIndeterminateContiguousAnimatorDelegate(spec)
+            : new LinearIndeterminateDisjointAnimatorDelegate(context, spec));
   }
 
   /**

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -815,6 +815,7 @@ public int getActiveThumbIndex() {
 
   /**
    * Registers a callback to be invoked when the slider changes.
+   * On the RangeSlider implementation, the listener is invoked once for each value.
    *
    * @param listener The callback to run when the slider changes
    */

File: lib/java/com/google/android/material/slider/RangeSlider.java
Patch:
@@ -78,7 +78,9 @@ public RangeSlider(@NonNull Context context, @Nullable AttributeSet attrs, int d
 
   /**
    * Interface definition for a callback invoked when a slider's value is changed. This is called
-   * for all existing values to check all the current values use {@see RangeSlider#getValues()}
+   * for all existing values.
+   *
+   * To check all the current values, use {@see RangeSlider#getValues()}.
    */
   public interface OnChangeListener extends BaseOnChangeListener<RangeSlider> {}
 

File: lib/java/com/google/android/material/progressindicator/CircularProgressIndicator.java
Patch:
@@ -68,7 +68,7 @@ public CircularProgressIndicator(@NonNull Context context, @Nullable AttributeSe
 
   public CircularProgressIndicator(
       @NonNull Context context, @Nullable AttributeSet attrs, @AttrRes final int defStyleAttr) {
-    super(context, attrs, defStyleAttr);
+    super(context, attrs, defStyleAttr, CircularProgressIndicator.DEF_STYLE_RES);
 
     initializeDrawables();
   }

File: lib/java/com/google/android/material/progressindicator/LinearProgressIndicator.java
Patch:
@@ -73,7 +73,7 @@ public LinearProgressIndicator(@NonNull Context context, @Nullable AttributeSet
 
   public LinearProgressIndicator(
       @NonNull Context context, @Nullable AttributeSet attrs, @AttrRes final int defStyleAttr) {
-    super(context, attrs, defStyleAttr);
+    super(context, attrs, defStyleAttr, DEF_STYLE_RES);
 
     initializeDrawables();
   }

File: lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java
Patch:
@@ -1098,6 +1098,9 @@ void onViewHidden(int event) {
 
   /** Returns true if we should animate the Snackbar view in/out. */
   boolean shouldAnimate() {
+    if (accessibilityManager == null) {
+      return true;
+    }
     int feedbackFlags = AccessibilityServiceInfo.FEEDBACK_SPOKEN;
     List<AccessibilityServiceInfo> serviceList =
         accessibilityManager.getEnabledAccessibilityServiceList(feedbackFlags);

File: lib/java/com/google/android/material/progressindicator/CircularProgressIndicator.java
Patch:
@@ -102,7 +102,6 @@ private void initializeDrawables() {
     setProgressDrawable(
         new DeterminateDrawable(
             getContext(), baseSpec, behavior, new CircularDrawingDelegate(spec)));
-    applyNewVisibility();
   }
 
   // **************** Getters and setters ****************

File: lib/java/com/google/android/material/progressindicator/DeterminateDrawable.java
Patch:
@@ -98,8 +98,8 @@ void setLevelByFraction(float fraction) {
    *     false}, otherwise.
    */
   @Override
-  public boolean setVisible(boolean visible, boolean restart, boolean animationDesired) {
-    boolean changed = super.setVisible(visible, restart, animationDesired);
+  protected boolean setVisibleInternal(boolean visible, boolean restart, boolean animationDesired) {
+    boolean changed = super.setVisibleInternal(visible, restart, animationDesired);
 
     float systemAnimatorDurationScale =
         animatorDurationScaleProvider.getSystemAnimatorDurationScale(context.getContentResolver());

File: lib/java/com/google/android/material/progressindicator/LinearProgressIndicator.java
Patch:
@@ -135,7 +135,6 @@ private void initializeDrawables() {
                 : new LinearIndeterminateSpacingAnimatorDelegate(getContext(), spec)));
     setProgressDrawable(
         new DeterminateDrawable(getContext(), baseSpec, behavior, new LinearDrawingDelegate(spec)));
-    applyNewVisibility();
   }
 
   // **************** Getters and setters ****************

File: lib/java/com/google/android/material/badge/BadgeDrawable.java
Patch:
@@ -62,6 +62,7 @@
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.ref.WeakReference;
+import java.text.NumberFormat;
 
 /**
  * {@code BadgeDrawable} contains all the layout and draw logic for a badge.
@@ -948,7 +949,7 @@ private void drawText(Canvas canvas) {
   private String getBadgeText() {
     // If number exceeds max count, show badgeMaxCount+ instead of the number.
     if (getNumber() <= maxBadgeNumber) {
-      return Integer.toString(getNumber());
+      return NumberFormat.getInstance().format(getNumber());
     } else {
       Context context = contextRef.get();
       if (context == null) {

File: catalog/java/io/material/catalog/progressindicator/ProgressIndicatorStandaloneDemoFragment.java
Patch:
@@ -37,6 +37,7 @@
  */
 public class ProgressIndicatorStandaloneDemoFragment extends DemoFragment {
 
+  @SuppressWarnings("RestrictTo")
   @Override
   @NonNull
   public View onCreateDemoView(

File: catalog/java/io/material/catalog/topappbar/TopAppBarCollapsingMultilineDemoFragment.java
Patch:
@@ -82,6 +82,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
 
     CollapsingToolbarLayout collapsingToolbarLayout =
         requireView().findViewById(R.id.collapsingtoolbarlayout);
+    @SuppressWarnings("RestrictTo")
     int maxLines = collapsingToolbarLayout.getMaxLines();
     for (int i = 0; i < linesMap.size(); i++) {
       int value = linesMap.valueAt(i);
@@ -98,6 +99,7 @@ public void onPrepareOptionsMenu(@NonNull Menu menu) {
     }
   }
 
+  @SuppressWarnings("RestrictTo")
   @Override
   public boolean onOptionsItemSelected(MenuItem item) {
     CollapsingToolbarLayout collapsingToolbarLayout =

File: catalog/java/io/material/catalog/progressindicator/ProgressIndicatorMainDemoFragment.java
Patch:
@@ -26,6 +26,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import com.google.android.material.progressindicator.CircularProgressIndicator;
+import com.google.android.material.progressindicator.LinearProgressIndicator;
 import com.google.android.material.progressindicator.ProgressIndicator;
 import io.material.catalog.feature.DemoFragment;
 
@@ -47,7 +48,7 @@ public View onCreateDemoView(
   }
 
   public void initialize(@NonNull View view) {
-    ProgressIndicator linearDeterminate = view.findViewById(R.id.linear_determinate);
+    LinearProgressIndicator linearDeterminate = view.findViewById(R.id.linear_determinate);
     CircularProgressIndicator circularDeterminate = view.findViewById(R.id.circular_determinate);
     EditText progressInput = view.findViewById(R.id.progress_input);
     Button updateButton = view.findViewById(R.id.update_button);

File: lib/java/com/google/android/material/progressindicator/LinearIndeterminateSpacingAnimatorDelegate.java
Patch:
@@ -51,6 +51,7 @@ final class LinearIndeterminateSpacingAnimatorDelegate
   private final Context context;
   // The base spec.
   private final BaseProgressIndicatorSpec baseSpec;
+
   // The animator controls non-seamless linear indeterminate animation.
   private AnimatorSet animatorSet;
 
@@ -66,7 +67,7 @@ final class LinearIndeterminateSpacingAnimatorDelegate
   AnimationCallback animatorCompleteCallback = null;
 
   public LinearIndeterminateSpacingAnimatorDelegate(
-      @NonNull Context context, @NonNull ProgressIndicatorSpec spec) {
+      @NonNull Context context, @NonNull LinearProgressIndicatorSpec spec) {
     super(/*segmentCount=*/ 2);
 
     this.context = context;

File: lib/java/com/google/android/material/progressindicator/CircularProgressIndicatorSpec.java
Patch:
@@ -143,7 +143,7 @@ private void loadAttributes(@NonNull Context context, @Nullable AttributeSet att
     a.recycle();
   }
 
-  private void validateSpec() {
+  protected void validateSpec() {
     if (indicatorRadius < baseSpec.indicatorSize / 2) {
       // Throws an exception if circularRadius is less than half of the indicatorSize, which will
       // result in a part of the inner side of the indicator overshoots the center, and the visual

File: lib/java/com/google/android/material/datepicker/MaterialCalendar.java
Patch:
@@ -28,7 +28,7 @@
 import androidx.core.view.accessibility.AccessibilityNodeInfoCompat;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.LinearSnapHelper;
+import androidx.recyclerview.widget.PagerSnapHelper;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.RecyclerView.ItemDecoration;
 import androidx.recyclerview.widget.RecyclerView.OnScrollListener;
@@ -221,7 +221,7 @@ public void onDayClick(long day) {
     }
 
     if (!MaterialDatePicker.isFullscreen(themedContext)) {
-      new LinearSnapHelper().attachToRecyclerView(recyclerView);
+      new PagerSnapHelper().attachToRecyclerView(recyclerView);
     }
     recyclerView.scrollToPosition(monthsPagerAdapter.getPosition(current));
     return root;

File: tests/javatests/com/google/android/material/tabs/TabLayoutTest.java
Patch:
@@ -438,8 +438,8 @@ public void testIndicatorAnimator_worksAfterReplacingUpdateListener() throws Thr
               int tabTwoLeft = tabs1.getTabAt(/* index= */ 2).view.getLeft();
               int tabTwoRight = tabs1.getTabAt(/* index= */ 2).view.getRight();
 
-              assertEquals(tabs1.slidingTabIndicator.indicatorLeft, tabTwoLeft);
-              assertEquals(tabs1.slidingTabIndicator.indicatorRight, tabTwoRight);
+              assertEquals(tabs1.tabSelectedIndicator.getBounds().left, tabTwoLeft);
+              assertEquals(tabs1.tabSelectedIndicator.getBounds().right, tabTwoRight);
             });
 
     IdlingRegistry.getInstance().unregister(idler);

File: catalog/java/io/material/catalog/progressindicator/ProgressIndicatorMainDemoFragment.java
Patch:
@@ -25,6 +25,7 @@
 import android.widget.EditText;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import com.google.android.material.progressindicator.CircularProgressIndicator;
 import com.google.android.material.progressindicator.ProgressIndicator;
 import io.material.catalog.feature.DemoFragment;
 
@@ -47,7 +48,7 @@ public View onCreateDemoView(
 
   public void initialize(@NonNull View view) {
     ProgressIndicator linearDeterminate = view.findViewById(R.id.linear_determinate);
-    ProgressIndicator circularDeterminate = view.findViewById(R.id.circular_determinate);
+    CircularProgressIndicator circularDeterminate = view.findViewById(R.id.circular_determinate);
     EditText progressInput = view.findViewById(R.id.progress_input);
     Button updateButton = view.findViewById(R.id.update_button);
 

File: lib/java/com/google/android/material/progressindicator/CircularIndeterminateAnimatorDelegate.java
Patch:
@@ -67,7 +67,7 @@ public final class CircularIndeterminateAnimatorDelegate
   boolean animatorCompleteEndRequested = false;
   AnimationCallback animatorCompleteCallback = null;
 
-  public CircularIndeterminateAnimatorDelegate(@NonNull ProgressIndicatorSpec spec) {
+  public CircularIndeterminateAnimatorDelegate(@NonNull CircularProgressIndicatorSpec spec) {
     super(/*segmentCount=*/ 1);
 
     baseSpec = spec.getBaseSpec();

File: tests/javatests/com/google/android/material/tabs/TabLayoutTest.java
Patch:
@@ -438,8 +438,8 @@ public void testIndicatorAnimator_worksAfterReplacingUpdateListener() throws Thr
               int tabTwoLeft = tabs1.getTabAt(/* index= */ 2).view.getLeft();
               int tabTwoRight = tabs1.getTabAt(/* index= */ 2).view.getRight();
 
-              assertEquals(tabs1.slidingTabIndicator.indicatorLeft, tabTwoLeft);
-              assertEquals(tabs1.slidingTabIndicator.indicatorRight, tabTwoRight);
+              assertEquals(tabs1.tabSelectedIndicator.getBounds().left, tabTwoLeft);
+              assertEquals(tabs1.tabSelectedIndicator.getBounds().right, tabTwoRight);
             });
 
     IdlingRegistry.getInstance().unregister(idler);

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1027,6 +1027,7 @@ private boolean onStateChange(@NonNull int[] chipState, @NonNull int[] closeIcon
         chipSurfaceColor != null
             ? chipSurfaceColor.getColorForState(chipState, currentChipSurfaceColor)
             : 0;
+    newChipSurfaceColor = compositeElevationOverlayIfNeeded(newChipSurfaceColor);
     if (currentChipSurfaceColor != newChipSurfaceColor) {
       currentChipSurfaceColor = newChipSurfaceColor;
       invalidate = true;
@@ -1036,6 +1037,7 @@ private boolean onStateChange(@NonNull int[] chipState, @NonNull int[] closeIcon
         chipBackgroundColor != null
             ? chipBackgroundColor.getColorForState(chipState, currentChipBackgroundColor)
             : 0;
+    newChipBackgroundColor = compositeElevationOverlayIfNeeded(newChipBackgroundColor);
     if (currentChipBackgroundColor != newChipBackgroundColor) {
       currentChipBackgroundColor = newChipBackgroundColor;
       invalidate = true;

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -600,8 +600,9 @@ public void initializeElevationOverlay(Context context) {
     updateZ();
   }
 
+  @RestrictTo(LIBRARY_GROUP)
   @ColorInt
-  private int compositeElevationOverlayIfNeeded(@ColorInt int backgroundColor) {
+  protected int compositeElevationOverlayIfNeeded(@ColorInt int backgroundColor) {
     float elevation = getZ() + getParentAbsoluteElevation();
     return drawableState.elevationOverlayProvider != null
         ? drawableState.elevationOverlayProvider.compositeOverlayIfNeeded(
@@ -1193,7 +1194,6 @@ public void getOutline(@NonNull Outline outline) {
         // The change to support concave paths was done late in the release cycle. People
         // using pre-releases of Q would experience a crash here.
       }
-
     }
   }
 

File: catalog/java/io/material/catalog/progressindicator/ProgressIndicatorMainDemoFragment.java
Patch:
@@ -25,6 +25,7 @@
 import android.widget.EditText;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import com.google.android.material.progressindicator.CircularProgressIndicator;
 import com.google.android.material.progressindicator.ProgressIndicator;
 import io.material.catalog.feature.DemoFragment;
 
@@ -47,7 +48,7 @@ public View onCreateDemoView(
 
   public void initialize(@NonNull View view) {
     ProgressIndicator linearDeterminate = view.findViewById(R.id.linear_determinate);
-    ProgressIndicator circularDeterminate = view.findViewById(R.id.circular_determinate);
+    CircularProgressIndicator circularDeterminate = view.findViewById(R.id.circular_determinate);
     EditText progressInput = view.findViewById(R.id.progress_input);
     Button updateButton = view.findViewById(R.id.update_button);
 

File: lib/java/com/google/android/material/progressindicator/CircularIndeterminateAnimatorDelegate.java
Patch:
@@ -67,7 +67,7 @@ public final class CircularIndeterminateAnimatorDelegate
   boolean animatorCompleteEndRequested = false;
   AnimationCallback animatorCompleteCallback = null;
 
-  public CircularIndeterminateAnimatorDelegate(@NonNull ProgressIndicatorSpec spec) {
+  public CircularIndeterminateAnimatorDelegate(@NonNull CircularProgressIndicatorSpec spec) {
     super(/*segmentCount=*/ 1);
 
     baseSpec = spec.getBaseSpec();

File: lib/java/com/google/android/material/textfield/ClearTextEndIconDelegate.java
Patch:
@@ -135,13 +135,13 @@ void onSuffixVisibilityChanged(boolean visible) {
 
   private void animateIcon(boolean show) {
     boolean shouldSkipAnimation = textInputLayout.isEndIconVisible() == show;
-    if (show) {
+    if (show && !iconInAnim.isRunning()) {
       iconOutAnim.cancel();
       iconInAnim.start();
       if (shouldSkipAnimation) {
         iconInAnim.end();
       }
-    } else {
+    } else if (!show) {
       iconInAnim.cancel();
       iconOutAnim.start();
       if (shouldSkipAnimation) {

File: lib/java/com/google/android/material/timepicker/MaterialTimePicker.java
Patch:
@@ -34,6 +34,7 @@
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
 import android.view.Window;
+import android.widget.Button;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import androidx.annotation.IntDef;
@@ -209,7 +210,7 @@ public void onDoubleTap() {
     }
 
     updateInputMode(modeButton);
-    MaterialButton okButton = root.findViewById(R.id.material_timepicker_ok_button);
+    Button okButton = root.findViewById(R.id.material_timepicker_ok_button);
     okButton.setOnClickListener(
         new OnClickListener() {
           @Override
@@ -221,7 +222,7 @@ public void onClick(View v) {
           }
         });
 
-    MaterialButton cancelButton = root.findViewById(R.id.material_timepicker_cancel_button);
+    Button cancelButton = root.findViewById(R.id.material_timepicker_cancel_button);
     cancelButton.setOnClickListener(
         new OnClickListener() {
           @Override

File: lib/java/com/google/android/material/datepicker/MaterialCalendar.java
Patch:
@@ -388,7 +388,7 @@ public void onInitializeAccessibilityNodeInfo(
     yearFrame = root.findViewById(R.id.mtrl_calendar_year_selector_frame);
     dayFrame = root.findViewById(R.id.mtrl_calendar_day_selector_frame);
     setSelector(CalendarSelector.DAY);
-    monthDropSelect.setText(current.getLongName());
+    monthDropSelect.setText(current.getLongName(root.getContext()));
     recyclerView.addOnScrollListener(
         new OnScrollListener() {
           @Override

File: lib/java/com/google/android/material/appbar/CollapsingToolbarLayout.java
Patch:
@@ -150,7 +150,7 @@ public CollapsingToolbarLayout(@NonNull Context context) {
   }
 
   public CollapsingToolbarLayout(@NonNull Context context, @Nullable AttributeSet attrs) {
-    this(context, attrs, 0);
+    this(context, attrs, R.attr.collapsingToolbarLayoutStyle);
   }
 
   public CollapsingToolbarLayout(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {

File: catalog/java/io/material/catalog/transition/TransitionContainerTransformViewDemoFragment.java
Patch:
@@ -43,11 +43,11 @@
 public class TransitionContainerTransformViewDemoFragment extends DemoFragment
     implements OnBackPressedHandler {
 
-  private View startCard;
+  @Nullable private View startCard;
   private View startFab;
 
   private View contactCard;
-  private View endView;
+  @Nullable private View endView;
   private View expandedCard;
 
   private FrameLayout root;
@@ -156,7 +156,7 @@ private MaterialContainerTransform buildContainerTransform(boolean entering) {
 
   @Override
   public boolean onBackPressed() {
-    if (endView.getVisibility() == View.VISIBLE) {
+    if (endView != null && endView.getVisibility() == View.VISIBLE) {
       showStartView(endView);
       return true;
     }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1516,7 +1516,7 @@ private void updateLabelState(boolean animate, boolean force) {
       collapsingTextHelper.setCollapsedTextColor(focusedTextColor);
     } // If none of these states apply, leave the expanded and collapsed colors as they are.
 
-    if (hasText || (isEnabled() && (hasFocus || errorShouldBeShown))) {
+    if (hasText || (isEnabled() && hasFocus)) {
       // We should be showing the label so do so if it isn't already
       if (force || hintExpanded) {
         collapseHint(animate);

File: lib/java/com/google/android/material/transition/FadeThroughProvider.java
Patch:
@@ -42,7 +42,7 @@ public Animator createAppear(@NonNull ViewGroup sceneRoot, @NonNull View view) {
     return createFadeThroughAnimator(
         view,
         /* startValue= */ 0f,
-        /* endValue= */ 1f,
+        /* endValue= */ view.getAlpha(),
         /* startFraction= */ PROGRESS_THRESHOLD,
         /* endFraction= */ 1f);
   }
@@ -52,7 +52,7 @@ public Animator createAppear(@NonNull ViewGroup sceneRoot, @NonNull View view) {
   public Animator createDisappear(@NonNull ViewGroup sceneRoot, @NonNull View view) {
     return createFadeThroughAnimator(
         view,
-        /* startValue= */ 1f,
+        /* startValue= */ view.getAlpha(),
         /* endValue= */ 0f,
         /* startFraction= */ 0f,
         /* endFraction= */ PROGRESS_THRESHOLD);

File: lib/java/com/google/android/material/transition/platform/FadeThroughProvider.java
Patch:
@@ -47,7 +47,7 @@ public Animator createAppear(@NonNull ViewGroup sceneRoot, @NonNull View view) {
     return createFadeThroughAnimator(
         view,
         /* startValue= */ 0f,
-        /* endValue= */ 1f,
+        /* endValue= */ view.getAlpha(),
         /* startFraction= */ PROGRESS_THRESHOLD,
         /* endFraction= */ 1f);
   }
@@ -57,7 +57,7 @@ public Animator createAppear(@NonNull ViewGroup sceneRoot, @NonNull View view) {
   public Animator createDisappear(@NonNull ViewGroup sceneRoot, @NonNull View view) {
     return createFadeThroughAnimator(
         view,
-        /* startValue= */ 1f,
+        /* startValue= */ view.getAlpha(),
         /* endValue= */ 0f,
         /* startFraction= */ 0f,
         /* endFraction= */ PROGRESS_THRESHOLD);

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -595,6 +595,7 @@ public TextInputLayout(@NonNull Context context, @Nullable AttributeSet attrs, i
         (CheckableImageButton)
             LayoutInflater.from(getContext())
                 .inflate(R.layout.design_text_input_end_icon, endLayout, false);
+    errorIconView.setId(R.id.text_input_error_icon);
     errorIconView.setVisibility(GONE);
     if (MaterialResources.isFontScaleAtLeast1_3(context)) {
       ViewGroup.MarginLayoutParams lp =

File: catalog/java/io/material/catalog/progressindicator/ProgressIndicatorStandaloneDemoFragment.java
Patch:
@@ -52,8 +52,9 @@ public View onCreateDemoView(
     ProgressIndicatorSpec progressIndicatorSpec = new ProgressIndicatorSpec();
     progressIndicatorSpec.loadFromAttributes(
         getContext(),
-        null,
-        R.style.Widget_MaterialComponents_ProgressIndicator_Circular_Indeterminate);
+        /*attrs=*/null,
+        /*defStyleAttr=*/0,
+        /*defStyleRes=*/R.style.Widget_MaterialComponents_ProgressIndicator_Circular_Indeterminate);
     progressIndicatorSpec.circularInset = 0; // No inset.
     progressIndicatorSpec.circularRadius =
         (int) ViewUtils.dpToPx(getContext(), 10); // Circular radius is 10 dp.

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -312,7 +312,9 @@ public ColorStateList getCardForegroundColor() {
   @Override
   public void setClickable(boolean clickable) {
     super.setClickable(clickable);
-    cardViewHelper.updateClickable();
+    if (cardViewHelper != null){
+      cardViewHelper.updateClickable();
+    }
   }
 
   @Override

File: lib/java/com/google/android/material/transition/MaterialContainerTransform.java
Patch:
@@ -961,6 +961,7 @@ public void onTransitionStart(@NonNull Transition transition) {
 
           @Override
           public void onTransitionEnd(@NonNull Transition transition) {
+            removeListener(this);
             if (holdAtEndEnabled) {
               // Keep drawable showing and views hidden (useful for Activity return transitions)
               return;

File: lib/java/com/google/android/material/transition/platform/MaterialContainerTransform.java
Patch:
@@ -966,6 +966,7 @@ public void onTransitionStart(@NonNull Transition transition) {
 
           @Override
           public void onTransitionEnd(@NonNull Transition transition) {
+            removeListener(this);
             if (holdAtEndEnabled) {
               // Keep drawable showing and views hidden (useful for Activity return transitions)
               return;

File: lib/java/com/google/android/material/shape/ShapePath.java
Patch:
@@ -253,13 +253,14 @@ public void applyToPath(Matrix transform, Path path) {
   ShadowCompatOperation createShadowCompatOperation(final Matrix transform) {
     // If the shadowCompatOperations don't end on the desired endShadowAngle, add an arc to do so.
     addConnectingShadowIfNecessary(getEndShadowAngle());
+    final Matrix transformCopy = new Matrix(transform);
     final List<ShadowCompatOperation> operations = new ArrayList<>(shadowCompatOperations);
     return new ShadowCompatOperation() {
       @Override
       public void draw(
           Matrix matrix, ShadowRenderer shadowRenderer, int shadowElevation, Canvas canvas) {
         for (ShadowCompatOperation op : operations) {
-          op.draw(transform, shadowRenderer, shadowElevation, canvas);
+          op.draw(transformCopy, shadowRenderer, shadowElevation, canvas);
         }
       }
     };

File: lib/java/com/google/android/material/progressindicator/DeterminateDrawable.java
Patch:
@@ -167,7 +167,7 @@ public void draw(@NonNull Canvas canvas) {
     canvas.save();
     drawingDelegate.adjustCanvas(canvas, spec, getGrowFraction());
 
-    float displayedIndicatorWidth = spec.indicatorWidth * getGrowFraction();
+    float displayedIndicatorSize = spec.indicatorSize * getGrowFraction();
     float displayedRoundedCornerRadius = spec.indicatorCornerRadius * getGrowFraction();
 
     // Draws the track.
@@ -177,7 +177,7 @@ public void draw(@NonNull Canvas canvas) {
         spec.trackColor,
         0f,
         1f,
-        displayedIndicatorWidth,
+        displayedIndicatorSize,
         displayedRoundedCornerRadius);
     // Draws the indicator.
     drawingDelegate.fillTrackWithColor(
@@ -186,7 +186,7 @@ public void draw(@NonNull Canvas canvas) {
         combinedIndicatorColorArray[0],
         0f,
         getIndicatorFraction(),
-        displayedIndicatorWidth,
+        displayedIndicatorSize,
         displayedRoundedCornerRadius);
     canvas.restore();
   }

File: lib/javatests/com/google/android/material/datepicker/DateStringsTest.java
Patch:
@@ -42,7 +42,6 @@ public class DateStringsTest {
   private static Calendar setupLocalizedCalendar(Locale locale, int year, int month, int day) {
     Locale.setDefault(locale);
     Calendar calendar = Calendar.getInstance();
-    calendar.clear();
     calendar.set(Calendar.YEAR, year);
     calendar.set(Calendar.MONTH, month);
     calendar.set(Calendar.DAY_OF_MONTH, day);

File: catalog/java/io/material/catalog/tabs/TabsControllableDemoFragment.java
Patch:
@@ -170,7 +170,7 @@ protected int getTabsContent() {
   }
 
   private void setupViewPager() {
-    pager.setAdapter(new TabsPagerAdapter(getFragmentManager(), getContext(), TAB_COUNT));
+    pager.setAdapter(new TabsPagerAdapter(getChildFragmentManager(), getContext(), TAB_COUNT));
     for (TabLayout tabLayout : tabLayouts) {
       tabLayout.setupWithViewPager(pager);
     }

File: catalog/java/io/material/catalog/themeswitcher/ThemeSwitcherDialogFragment.java
Patch:
@@ -117,7 +117,7 @@ public View onCreateView(
         shapeCornerSizeGroup,
         resourceProvider.getShapeSizes(),
         resourceProvider.getShapeSizesContentDescription(),
-        R.id.theme_feature_corner_family,
+        R.id.theme_feature_corner_size,
         ThemingType.SHAPE_CORNER_SIZE);
 
     View applyButton = view.findViewById(R.id.apply_button);

File: lib/java/com/google/android/material/timepicker/ClockFaceView.java
Patch:
@@ -220,7 +220,7 @@ private void findIntersectingTextView() {
     for (int i = 0; i < textViewPool.size(); ++i) {
       TextView tv = textViewPool.get(i);
       tv.getDrawingRect(textViewRect);
-      textViewRect.offset(tv.getPaddingLeft(), getPaddingTop());
+      textViewRect.offset(tv.getPaddingLeft(), tv.getPaddingTop());
       offsetDescendantRectToMyCoords(tv, textViewRect);
 
       scratch.set(textViewRect);

File: lib/java/com/google/android/material/button/MaterialButtonToggleGroup.java
Patch:
@@ -544,9 +544,11 @@ private void adjustChildMarginsAndUpdateLayout() {
       if (getOrientation() == HORIZONTAL) {
         MarginLayoutParamsCompat.setMarginEnd(params, 0);
         MarginLayoutParamsCompat.setMarginStart(params, -smallestStrokeWidth);
+        params.topMargin = 0;
       } else {
         params.bottomMargin = 0;
         params.topMargin = -smallestStrokeWidth;
+        MarginLayoutParamsCompat.setMarginStart(params, 0);
       }
 
       currentButton.setLayoutParams(params);

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -126,6 +126,7 @@ public void draw(@NonNull Canvas canvas) {
           displayedIndicatorWidth,
           displayedRoundedCornerRadius);
     }
+    canvas.restore();
   }
 
   // ******************* Setter and getter *******************

File: lib/java/com/google/android/material/internal/ViewOverlayApi14.java
Patch:
@@ -95,11 +95,12 @@ static class OverlayViewGroup extends ViewGroup {
 
     static {
       try {
+        //noinspection JavaReflectionMemberAccess
         invalidateChildInParentFastMethod =
             ViewGroup.class.getDeclaredMethod(
                 "invalidateChildInParentFast", int.class, int.class, Rect.class);
-      } catch (NoSuchMethodException e) {
-        throw new RuntimeException(e);
+      } catch (NoSuchMethodException ignored) {
+        // Ignore exception if method does not exist
       }
     }
 

File: catalog/java/io/material/catalog/datepicker/DatePickerMainDemoFragment.java
Patch:
@@ -121,6 +121,8 @@ public View onCreateDemoView(
             builder.setTheme(dialogTheme);
           } else if (themeChoice == R.id.cat_picker_theme_fullscreen) {
             builder.setTheme(fullscreenTheme);
+          } else if (themeChoice == R.id.cat_picker_theme_custom) {
+            builder.setTheme(R.style.ThemeOverlay_Catalog_MaterialCalendar_Custom);
           }
 
           if (titleChoice == R.id.cat_picker_title_custom) {

File: lib/java/com/google/android/material/datepicker/MaterialCalendar.java
Patch:
@@ -45,6 +45,7 @@
 import androidx.annotation.Px;
 import androidx.annotation.RestrictTo;
 import androidx.annotation.RestrictTo.Scope;
+import androidx.annotation.StyleRes;
 import androidx.annotation.VisibleForTesting;
 import com.google.android.material.button.MaterialButton;
 import java.util.Calendar;
@@ -78,7 +79,7 @@ enum CalendarSelector {
 
   @VisibleForTesting static final Object SELECTOR_TOGGLE_TAG = "SELECTOR_TOGGLE_TAG";
 
-  private int themeResId;
+  @StyleRes private int themeResId;
   @Nullable private DateSelector<S> dateSelector;
   @Nullable private CalendarConstraints calendarConstraints;
   @Nullable private Month current;
@@ -92,7 +93,7 @@ enum CalendarSelector {
   @NonNull
   static <T> MaterialCalendar<T> newInstance(
       DateSelector<T> dateSelector,
-      int themeResId,
+      @StyleRes int themeResId,
       @NonNull CalendarConstraints calendarConstraints) {
     MaterialCalendar<T> materialCalendar = new MaterialCalendar<>();
     Bundle args = new Bundle();

File: lib/java/com/google/android/material/progressindicator/ProgressIndicator.java
Patch:
@@ -350,7 +350,7 @@ protected void onAttachedToWindow() {
   protected void onDetachedFromWindow() {
     // Removes the delayedHide runnable from the queue if it has been scheduled.
     removeCallbacks(delayedHide);
-    getCurrentDrawable().setVisible(/*visible=*/ false, /*restart=*/ false);
+    getCurrentDrawable().hideNow();
     unregisterAnimationCallbacks();
     super.onDetachedFromWindow();
   }
@@ -1005,9 +1005,9 @@ public void onAnimationEnd(Drawable drawable) {
         @Override
         public void onAnimationEnd(Drawable drawable) {
           super.onAnimationEnd(drawable);
-          if (!isIndeterminateModeChangeRequested) {
+          if (!isIndeterminateModeChangeRequested && visibleToUser()) {
             // Don't hide the component if under transition from indeterminate mode to
-            // determinate mode.
+            // determinate mode or the component is current not visible to users.
             setVisibility(INVISIBLE);
           }
         }

File: lib/java/com/google/android/material/timepicker/ClockHandView.java
Patch:
@@ -30,6 +30,7 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.RectF;
+import androidx.core.view.ViewCompat;
 import android.util.AttributeSet;
 import android.util.Pair;
 import android.view.MotionEvent;
@@ -107,6 +108,7 @@ public ClockHandView(Context context, @Nullable AttributeSet attrs, int defStyle
     setHandRotation(0);
 
     scaledTouchSlop = ViewConfiguration.get(context).getScaledTouchSlop();
+    ViewCompat.setImportantForAccessibility(this, ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);
     a.recycle();
   }
 
@@ -265,8 +267,8 @@ public void setCircleRadius(@Dimension int circleRadius) {
     invalidate();
   }
 
-  @SuppressLint("ClickableViewAccessibility")
   @Override
+  @SuppressLint("ClickableViewAccessibility")
   public boolean onTouchEvent(MotionEvent event) {
     int action = event.getActionMasked();
     boolean forceSelection = false;

File: lib/java/com/google/android/material/timepicker/TimePickerControls.java
Patch:
@@ -18,6 +18,7 @@
 
 import androidx.annotation.IntDef;
 import androidx.annotation.IntRange;
+import androidx.annotation.StringRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.util.Calendar;
@@ -46,7 +47,7 @@ interface TimePickerControls {
   void setActiveSelection(@ActiveSelection int selection);
 
   /** Set the values in the clock face. */
-  void setValues(String[] clockValues);
+  void setValues(String[] clockValues, @StringRes int contentDescription);
 
   void setHandRotation(float rotation);
 }

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -2085,7 +2085,7 @@ protected void onRestoreInstanceState(Parcelable state) {
 
     valueFrom = sliderState.valueFrom;
     valueTo = sliderState.valueTo;
-    values = sliderState.values;
+    setValuesInternal(sliderState.values);
     stepSize = sliderState.stepSize;
     if (sliderState.hasFocus) {
       requestFocus();

File: lib/java/com/google/android/material/appbar/CollapsingToolbarLayout.java
Patch:
@@ -482,7 +482,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         collapsingTextHelper.setCollapsedBounds(
             tmpRect.left + (isRtl ? toolbar.getTitleMarginEnd() : toolbar.getTitleMarginStart()),
             tmpRect.top + maxOffset + toolbar.getTitleMarginTop(),
-            tmpRect.right + (isRtl ? toolbar.getTitleMarginStart() : toolbar.getTitleMarginEnd()),
+            tmpRect.right - (isRtl ? toolbar.getTitleMarginStart() : toolbar.getTitleMarginEnd()),
             tmpRect.bottom + maxOffset - toolbar.getTitleMarginBottom());
 
         // Update the expanded bounds

File: lib/java/com/google/android/material/progressindicator/ProgressIndicator.java
Patch:
@@ -646,6 +646,7 @@ protected boolean isEffectivelyVisible() {
   private void updateColorsInDrawables() {
     getProgressDrawable().recalculateColors();
     getIndeterminateDrawable().recalculateColors();
+    getIndeterminateDrawable().getAnimatorDelegate().invalidateSpecValues();
   }
 
   /** Returns the animator duration scale from developer options setting. */

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -138,7 +138,6 @@ public void onAnimationEnd(Animator animation) {
               }
             });
     setGrowFraction(1f);
-    animatorDelegate.startAnimator();
   }
 
   @NonNull

File: lib/java/com/google/android/material/progressindicator/LinearIndeterminateNonSeamlessAnimatorDelegate.java
Patch:
@@ -121,7 +121,6 @@ public void onAnimationEnd(Animator animation) {
 
   @Override
   public void startAnimator() {
-    resetPropertiesForNewStart();
     animatorSet.start();
   }
 

File: lib/java/com/google/android/material/progressindicator/LinearIndeterminateSeamlessAnimatorDelegate.java
Patch:
@@ -103,7 +103,6 @@ public void onAnimationRepeat(Animator animation) {
 
   @Override
   public void startAnimator() {
-    resetPropertiesForNewStart();
     animatorSet.start();
   }
 

File: catalog/java/io/material/catalog/tableofcontents/TocModule.java
Patch:
@@ -56,12 +56,12 @@
       CardFragment.Module.class,
       CheckBoxFragment.Module.class,
       ChipFragment.Module.class,
+      DatePickerDemoLandingFragment.Module.class,
       DialogDemoLandingFragment.Module.class,
       ElevationFragment.Module.class,
       FabFragment.Module.class,
       FontFragment.Module.class,
       MenuFragment.Module.class,
-      DatePickerDemoLandingFragment.Module.class,
       ProgressIndicatorFragment.Module.class,
       RadioButtonFragment.Module.class,
       ShapeableImageViewFragment.Module.class,

File: lib/java/com/google/android/material/progressindicator/DrawableWithAnimatedVisibilityChange.java
Patch:
@@ -42,7 +42,7 @@ abstract class DrawableWithAnimatedVisibilityChange extends Drawable implements
   private static final boolean DEFAULT_DRAWABLE_RESTART = false;
 
   // Animation duration for both show and hide animators.
-  private static final long GROW_DURATION = (long) (500 * ProgressIndicator.ANIMATION_SPEED_FACTOR);
+  private static final int GROW_DURATION = 500;
 
   // The component this drawable is serving.
   final ProgressIndicator progressIndicator;

File: lib/java/com/google/android/material/progressindicator/ProgressIndicator.java
Patch:
@@ -55,9 +55,6 @@ public class ProgressIndicator extends ProgressBar {
   private static final int DEF_STYLE_RES =
       R.style.Widget_MaterialComponents_ProgressIndicator_Linear_Determinate;
 
-  // Used for debug purpose to slow down the animations.
-  protected static final float ANIMATION_SPEED_FACTOR = 1f;
-
   // Constants for track shape.
 
   /** The indicator appears as a horizontal bar. */

File: catalog/java/io/material/catalog/tableofcontents/TocModule.java
Patch:
@@ -42,6 +42,7 @@
 import io.material.catalog.textfield.TextFieldFragment;
 import io.material.catalog.themeswitcher.ThemeSwitcherDialogFragment;
 import io.material.catalog.themeswitcher.ThemeSwitcherResourceProvider;
+import io.material.catalog.timepicker.TimePickerDemoLandingFragment;
 import io.material.catalog.topappbar.TopAppBarFragment;
 import io.material.catalog.transition.TransitionFragment;
 
@@ -69,6 +70,7 @@
       SwitchFragment.Module.class,
       TabsFragment.Module.class,
       TextFieldFragment.Module.class,
+      TimePickerDemoLandingFragment.Module.class,
       TopAppBarFragment.Module.class,
       TransitionFragment.Module.class
     })

File: lib/java/com/google/android/material/progressindicator/LinearIndeterminateSeamlessAnimatorDelegate.java
Patch:
@@ -58,7 +58,7 @@ public LinearIndeterminateSeamlessAnimatorDelegate() {
     ObjectAnimator connectPoint1Animator =
         ObjectAnimator.ofFloat(this, LINE_CONNECT_POINT_1_FRACTION, 0f, 1f);
     connectPoint1Animator.setDuration(DURATION_PER_COLOR);
-    connectPoint1Animator.setInterpolator(AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR);
+    connectPoint1Animator.setInterpolator(AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
     connectPoint1Animator.setRepeatCount(ValueAnimator.INFINITE);
     connectPoint1Animator.setRepeatMode(ValueAnimator.RESTART);
     connectPoint1Animator.addListener(
@@ -77,7 +77,7 @@ public void onAnimationRepeat(Animator animation) {
     ObjectAnimator connectPoint2Animator =
         ObjectAnimator.ofFloat(this, LINE_CONNECT_POINT_2_FRACTION, 0f, 1f);
     connectPoint2Animator.setDuration(DURATION_PER_COLOR);
-    connectPoint2Animator.setInterpolator(AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR);
+    connectPoint2Animator.setInterpolator(AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
     connectPoint2Animator.setRepeatCount(ValueAnimator.INFINITE);
     connectPoint2Animator.setRepeatMode(ValueAnimator.RESTART);
     connectPoint2Animator.addListener(

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -229,7 +229,6 @@ public Chip(Context context, AttributeSet attrs, int defStyleAttr) {
     setText(drawable.getText());
     setEllipsize(drawable.getEllipsize());
 
-    setIncludeFontPadding(false);
     updateTextPaintDrawState();
 
     // Chip text should not extend to more than 1 line.

File: lib/java/com/google/android/material/datepicker/MaterialCalendarGridView.java
Patch:
@@ -17,6 +17,8 @@
 
 import com.google.android.material.R;
 
+import static java.lang.Math.min;
+
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Rect;
@@ -151,7 +153,7 @@ protected final void onDraw(@NonNull Canvas canvas) {
       int lastHighlightPosition;
       int rangeHighlightEnd;
       if (endItem > lastOfMonth) {
-        lastHighlightPosition = monthAdapter.lastPositionInMonth();
+        lastHighlightPosition = min(monthAdapter.lastPositionInMonth(), getChildCount() - 1);
         rangeHighlightEnd =
             monthAdapter.isLastInRow(lastHighlightPosition)
                 ? getWidth()

File: lib/java/com/google/android/material/progressindicator/IndeterminateDrawable.java
Patch:
@@ -151,3 +151,4 @@ public DrawingDelegate getDrawingDelegate() {
     return drawingDelegate;
   }
 }
+

File: lib/javatests/com/google/android/material/progressindicator/ProgressIndicatorConfigTest.java
Patch:
@@ -52,9 +52,9 @@ public class ProgressIndicatorConfigTest {
   @Parameters(name = "indicatorType={0},isIndeterminate={1},drawableType={2}")
   public static ImmutableList<Object[]> data() {
     return ImmutableList.of(
-        new Object[] {ProgressIndicator.LINEAR, true, LinearIndeterminateDrawable.class},
+        new Object[] {ProgressIndicator.LINEAR, true, IndeterminateDrawable.class},
         new Object[] {ProgressIndicator.LINEAR, false, DeterminateDrawable.class},
-        new Object[] {ProgressIndicator.CIRCULAR, true, CircularIndeterminateDrawable.class},
+        new Object[] {ProgressIndicator.CIRCULAR, true, IndeterminateDrawable.class},
         new Object[] {ProgressIndicator.CIRCULAR, false, DeterminateDrawable.class});
   }
 

File: lib/java/com/google/android/material/slider/RangeSlider.java
Patch:
@@ -90,7 +90,7 @@ public void setValues(@NonNull List<Float> values) {
     super.setValues(values);
   }
 
-  /** Returns current values of the slider thumbs, sorted in ascending order. */
+  /** Returns current values of the slider thumbs. */
   @NonNull
   @Override
   public List<Float> getValues() {

File: lib/java/com/google/android/material/progressindicator/IndeterminateAnimatorDelegate.java
Patch:
@@ -28,7 +28,7 @@
 public abstract class IndeterminateAnimatorDelegate<T extends Animator> {
 
   // The drawable associated with this delegate.
-  protected Drawable drawable;
+  protected IndeterminateDrawable drawable;
   // A float array of numbers in [0, 1] representing the positions of ends of each segment on the
   // track.
   protected final float[] segmentPositions;
@@ -46,7 +46,7 @@ protected IndeterminateAnimatorDelegate(int segmentCount) {
   }
 
   /** Registers the drawable associated to this delegate. */
-  protected void registerDrawable(@NonNull Drawable drawable) {
+  protected void registerDrawable(@NonNull IndeterminateDrawable drawable) {
     this.drawable = drawable;
   }
 

File: lib/java/com/google/android/material/internal/CollapsingTextHelper.java
Patch:
@@ -713,7 +713,7 @@ private void drawMultinlineTransition(
     // Collapsed text
     textPaint.setAlpha((int) (collapsedTextBlend * originalAlpha));
     canvas.drawText(
-        textToDrawCollapsed, 0, textToDrawCollapsed.length(), 0, -ascent / scale, textPaint);
+        textToDrawCollapsed, 0, textToDrawCollapsed.length(), 0, -ascent, textPaint);
     // Remove ellipsis for Cross-section animation
     String tmp = textToDrawCollapsed.toString().trim();
     if (tmp.endsWith(ELLIPSIS_NORMAL)) {
@@ -722,7 +722,7 @@ private void drawMultinlineTransition(
     // Cross-section between both texts (should stay at original alpha)
     textPaint.setAlpha(originalAlpha);
     canvas.drawText(
-        tmp, 0, Math.min(textLayout.getLineEnd(0), tmp.length()), 0, -ascent / scale, textPaint);
+        tmp, 0, Math.min(textLayout.getLineEnd(0), tmp.length()), 0, -ascent, textPaint);
   }
 
   private boolean calculateIsRtl(@NonNull CharSequence text) {

File: lib/java/com/google/android/material/progressindicator/CircularIndeterminateDrawable.java
Patch:
@@ -256,6 +256,8 @@ public void resetMainAnimatorPropertiesForEnd() {
     setIndicatorTailChangeFraction(0f);
     setIndicatorStartOffset(0f);
     indicatorColorIndex = 0;
+    collapseAnimator.setFloatValues(0f, 1f);
+    indicatorWillFullyCollapsed = false;
     colorFadingAnimator.setIntValues(
         combinedIndicatorColorArray[indicatorColorIndex],
         combinedIndicatorColorArray[getNextIndicatorColorIndex()]);

File: lib/java/com/google/android/material/slider/RangeSlider.java
Patch:
@@ -90,7 +90,7 @@ public void setValues(@NonNull List<Float> values) {
     super.setValues(values);
   }
 
-  /** Returns current values of the slider thumbs. */
+  /** Returns current values of the slider thumbs, sorted in ascending order. */
   @NonNull
   @Override
   public List<Float> getValues() {

File: lib/java/com/google/android/material/transition/MaterialElevationScale.java
Patch:
@@ -25,7 +25,7 @@
  */
 public final class MaterialElevationScale extends MaterialVisibility<ScaleProvider> {
 
-  private static final float DEFAULT_SCALE = 0.92f;
+  private static final float DEFAULT_SCALE = 0.85f;
 
   private final boolean growing;
 

File: lib/java/com/google/android/material/transition/platform/MaterialElevationScale.java
Patch:
@@ -30,7 +30,7 @@
 @androidx.annotation.RequiresApi(android.os.Build.VERSION_CODES.LOLLIPOP)
 public final class MaterialElevationScale extends MaterialVisibility<ScaleProvider> {
 
-  private static final float DEFAULT_SCALE = 0.92f;
+  private static final float DEFAULT_SCALE = 0.85f;
 
   private final boolean growing;
 

File: lib/java/com/google/android/material/slider/BaseSlider.java
Patch:
@@ -1270,7 +1270,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
   @Override
   protected void onSizeChanged(int w, int h, int oldw, int oldh) {
     // Update the visible track width.
-    trackWidth = w - trackSidePadding * 2;
+    trackWidth = Math.max(w - trackSidePadding * 2, 0);
 
     // Update the visible tick coordinates.
     if (stepSize > 0.0f) {

File: lib/java/com/google/android/material/datepicker/UtcDates.java
Patch:
@@ -68,7 +68,8 @@ static Calendar getTodayCalendar() {
     today.set(Calendar.MINUTE, 0);
     today.set(Calendar.SECOND, 0);
     today.set(Calendar.MILLISECOND, 0);
-    return getDayCopy(today);
+    today.setTimeZone(getTimeZone());
+    return today;
   }
 
   /**

File: lib/java/com/google/android/material/textfield/ClearTextEndIconDelegate.java
Patch:
@@ -72,7 +72,7 @@ public void onFocusChange(View v, boolean hasFocus) {
         @Override
         public void onEditTextAttached(@NonNull TextInputLayout textInputLayout) {
           EditText editText = textInputLayout.getEditText();
-          textInputLayout.setEndIconVisible(hasText(editText.getText()));
+          textInputLayout.setEndIconVisible(editText.hasFocus() && hasText(editText.getText()));
           // Make sure there's always only one clear text text watcher added
           textInputLayout.setEndIconCheckable(false);
           editText.setOnFocusChangeListener(onFocusChangeListener);

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3809,7 +3809,7 @@ private void collapseHint(boolean animate) {
     if (cutoutEnabled()) {
       openCutout();
     }
-    showPlaceholderText();
+    updatePlaceholderText();
 
     updatePrefixTextVisibility();
     updateSuffixTextVisibility();

File: lib/javatests/com/google/android/material/slider/SliderHelper.java
Patch:
@@ -116,7 +116,7 @@ static float calculateXPositionFromValue(Slider s, float value) {
     return s.getTrackSidePadding() + x;
   }
 
-  static void activateFocusedThumb(Slider s) {
+  static void clickDpadCenter(Slider s) {
     new KeyEventBuilder(KeyEvent.KEYCODE_DPAD_CENTER).dispatchEvent(s);
   }
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1781,6 +1781,7 @@ public void setError(@Nullable final CharSequence errorText) {
    */
   public void setErrorIconDrawable(@DrawableRes int resId) {
     setErrorIconDrawable(resId != 0 ? AppCompatResources.getDrawable(getContext(), resId) : null);
+    refreshErrorIconDrawableState();
   }
 
   /**
@@ -2834,7 +2835,7 @@ public void setStartIconDrawable(@Nullable Drawable startIconDrawable) {
     startIconView.setImageDrawable(startIconDrawable);
     if (startIconDrawable != null) {
       setStartIconVisible(true);
-      applyStartIconTint();
+      refreshStartIconDrawableState();
     } else {
       setStartIconVisible(false);
       setStartIconOnClickListener(null);
@@ -3187,6 +3188,7 @@ public void setEndIconDrawable(@DrawableRes int resId) {
    */
   public void setEndIconDrawable(@Nullable Drawable endIconDrawable) {
     endIconView.setImageDrawable(endIconDrawable);
+    refreshEndIconDrawableState();
   }
 
   /**

File: lib/java/com/google/android/material/button/MaterialButtonToggleGroup.java
Patch:
@@ -818,7 +818,6 @@ private class PressedStateTracker implements OnPressedChangeListener {
 
     @Override
     public void onPressedChanged(@NonNull MaterialButton button, boolean isPressed) {
-      updateCheckedStates(button.getId(), button.isChecked());
       invalidate();
     }
   }

File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -1085,6 +1085,9 @@ public SavedState(Parcelable superState) {
 
     public SavedState(@NonNull Parcel source, ClassLoader loader) {
       super(source, loader);
+      if (loader == null) {
+        loader = getClass().getClassLoader();
+      }
       readFromParcel(source);
     }
 

File: lib/java/com/google/android/material/datepicker/RangeDateSelector.java
Patch:
@@ -245,6 +245,7 @@ private void updateIfValidTextProposal(
       @NonNull OnSelectionChangedListener<Pair<Long, Long>> listener) {
     if (proposedTextStart == null || proposedTextEnd == null) {
       clearInvalidRange(startTextInput, endTextInput);
+      listener.onIncompleteSelectionChanged();
       return;
     }
     if (isValidRange(proposedTextStart, proposedTextEnd)) {
@@ -253,6 +254,7 @@ private void updateIfValidTextProposal(
       listener.onSelectionChanged(getSelection());
     } else {
       setInvalidRange(startTextInput, endTextInput);
+      listener.onIncompleteSelectionChanged();
     }
   }
 

File: lib/java/com/google/android/material/datepicker/RangeDateSelector.java
Patch:
@@ -180,8 +180,7 @@ public View onCreateTextInputView(
     final TextInputLayout endTextInput = root.findViewById(R.id.mtrl_picker_text_input_range_end);
     EditText startEditText = startTextInput.getEditText();
     EditText endEditText = endTextInput.getEditText();
-    // The date inputType for Samsung and LG does not include any separator characters
-    if (ManufacturerUtils.isLGEDevice() || ManufacturerUtils.isSamsungDevice()) {
+    if (ManufacturerUtils.isDateInputKeyboardMissingSeparatorCharacters()) {
       // Using the URI variation places the '/' and '.' in more prominent positions
       startEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);
       endEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);

File: lib/java/com/google/android/material/datepicker/SingleDateSelector.java
Patch:
@@ -102,8 +102,7 @@ public View onCreateTextInputView(
 
     TextInputLayout dateTextInput = root.findViewById(R.id.mtrl_picker_text_input_date);
     EditText dateEditText = dateTextInput.getEditText();
-    // The date inputType for Samsung and LG does not include any separator characters
-    if (ManufacturerUtils.isLGEDevice() && ManufacturerUtils.isSamsungDevice()) {
+    if (ManufacturerUtils.isDateInputKeyboardMissingSeparatorCharacters()) {
       // Using the URI variation places the '/' and '.' in more prominent positions
       dateEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);
     }

File: lib/java/com/google/android/material/transition/MaterialSharedAxis.java
Patch:
@@ -77,7 +77,7 @@ public final class MaterialSharedAxis extends MaterialVisibility<VisibilityAnima
   private final boolean forward;
 
   public MaterialSharedAxis(@Axis int axis, boolean forward) {
-    super(createPrimaryAnimatorProvider(axis, forward), createtSecondaryAnimatorProvider());
+    super(createPrimaryAnimatorProvider(axis, forward), createSecondaryAnimatorProvider());
     this.axis = axis;
     this.forward = forward;
   }
@@ -87,7 +87,7 @@ public int getAxis() {
     return axis;
   }
 
-  public boolean isEntering() {
+  public boolean isForward() {
     return forward;
   }
 
@@ -105,7 +105,7 @@ private static VisibilityAnimatorProvider createPrimaryAnimatorProvider(
     }
   }
 
-  private static VisibilityAnimatorProvider createtSecondaryAnimatorProvider() {
+  private static VisibilityAnimatorProvider createSecondaryAnimatorProvider() {
     return new FadeThroughProvider();
   }
 }

File: lib/java/com/google/android/material/transition/platform/MaterialSharedAxis.java
Patch:
@@ -82,7 +82,7 @@ public final class MaterialSharedAxis extends MaterialVisibility<VisibilityAnima
   private final boolean forward;
 
   public MaterialSharedAxis(@Axis int axis, boolean forward) {
-    super(createPrimaryAnimatorProvider(axis, forward), createtSecondaryAnimatorProvider());
+    super(createPrimaryAnimatorProvider(axis, forward), createSecondaryAnimatorProvider());
     this.axis = axis;
     this.forward = forward;
   }
@@ -92,7 +92,7 @@ public int getAxis() {
     return axis;
   }
 
-  public boolean isEntering() {
+  public boolean isForward() {
     return forward;
   }
 
@@ -110,7 +110,7 @@ private static VisibilityAnimatorProvider createPrimaryAnimatorProvider(
     }
   }
 
-  private static VisibilityAnimatorProvider createtSecondaryAnimatorProvider() {
+  private static VisibilityAnimatorProvider createSecondaryAnimatorProvider() {
     return new FadeThroughProvider();
   }
 }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1182,7 +1182,8 @@ public void setBoxCornerRadii(
       float boxCornerRadiusTopEnd,
       float boxCornerRadiusBottomStart,
       float boxCornerRadiusBottomEnd) {
-    if (boxBackground.getTopLeftCornerResolvedSize() != boxCornerRadiusTopStart
+    if (boxBackground == null
+        || boxBackground.getTopLeftCornerResolvedSize() != boxCornerRadiusTopStart
         || boxBackground.getTopRightCornerResolvedSize() != boxCornerRadiusTopEnd
         || boxBackground.getBottomRightCornerResolvedSize() != boxCornerRadiusBottomEnd
         || boxBackground.getBottomLeftCornerResolvedSize() != boxCornerRadiusBottomStart) {

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3018,6 +3018,7 @@ public void setStartIconTintMode(@Nullable PorterDuff.Mode startIconTintMode) {
   public void setEndIconMode(@EndIconMode int endIconMode) {
     int previousEndIconMode = this.endIconMode;
     this.endIconMode = endIconMode;
+    dispatchOnEndIconChanged(previousEndIconMode);
     setEndIconVisible(endIconMode != END_ICON_NONE);
     if (getEndIconDelegate().isBoxBackgroundModeSupported(boxBackgroundMode)) {
       getEndIconDelegate().initialize();
@@ -3029,7 +3030,6 @@ public void setEndIconMode(@EndIconMode int endIconMode) {
               + endIconMode);
     }
     applyEndIconTint();
-    dispatchOnEndIconChanged(previousEndIconMode);
   }
 
   /**

File: lib/java/com/google/android/material/slider/Slider.java
Patch:
@@ -390,6 +390,7 @@ public TooltipDrawable createTooltipDrawable() {
     processAttributes(context, attrs, defStyleAttr);
 
     setFocusable(true);
+    setClickable(true);
 
     // Set up the thumb drawable to always show the compat shadow.
     thumbDrawable.setShadowCompatibilityMode(MaterialShapeDrawable.SHADOW_COMPAT_MODE_ALWAYS);

File: lib/java/com/google/android/material/textfield/ClearTextEndIconDelegate.java
Patch:
@@ -99,6 +99,8 @@ public void onClick(View v) {
             if (text != null) {
               text.clear();
             }
+
+            textInputLayout.refreshEndIconDrawableState();
           }
         });
     textInputLayout.addOnEditTextAttachedListener(clearTextOnEditTextAttachedListener);

File: lib/java/com/google/android/material/textfield/PasswordToggleEndIconDelegate.java
Patch:
@@ -103,6 +103,8 @@ public void onClick(View v) {
             if (selection >= 0) {
               editText.setSelection(selection);
             }
+
+            textInputLayout.refreshEndIconDrawableState();
           }
         });
     textInputLayout.addOnEditTextAttachedListener(onEditTextAttachedListener);

File: catalog/java/io/material/catalog/datepicker/DatePickerMainDemoFragment.java
Patch:
@@ -59,7 +59,7 @@ private static Calendar getClearedUtc() {
   }
 
   private void initSettings() {
-    today = MaterialDatePicker.thisMonthInUtcMilliseconds();
+    today = MaterialDatePicker.todayInUtcMilliseconds();
     Calendar calendar = getClearedUtc();
     calendar.setTimeInMillis(today);
     calendar.roll(Calendar.MONTH, 1);

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationItemView.java
Patch:
@@ -300,7 +300,7 @@ public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo inf
       infoCompat.setClickable(false);
       infoCompat.removeAction(AccessibilityActionCompat.ACTION_CLICK);
     }
-    infoCompat.setRoleDescription("Tab");
+    infoCompat.setRoleDescription(getResources().getString(R.string.item_view_role_description));
   }
 
   private void setViewLayoutParams(@NonNull View view, int topMargin, int gravity) {

File: lib/java/com/google/android/material/transition/MaterialContainerTransform.java
Patch:
@@ -98,7 +98,7 @@
  * @see #setStartShapeAppearanceModel(ShapeAppearanceModel)
  * @see #setEndShapeAppearanceModel(ShapeAppearanceModel)
  * @see #setDrawingViewId(int)
- * @see #setScrimColor(int)
+ * @see #setScrimColor(Integer)
  * @see #setFadeMode(int)
  * @see #setFitMode(int)
  * @see #setPathMotion(PathMotion)

File: lib/java/com/google/android/material/transition/platform/MaterialContainerTransform.java
Patch:
@@ -102,7 +102,7 @@
  * @see #setStartShapeAppearanceModel(ShapeAppearanceModel)
  * @see #setEndShapeAppearanceModel(ShapeAppearanceModel)
  * @see #setDrawingViewId(int)
- * @see #setScrimColor(int)
+ * @see #setScrimColor(Integer)
  * @see #setFadeMode(int)
  * @see #setFitMode(int)
  * @see #setPathMotion(PathMotion)

File: catalog/java/io/material/catalog/application/CatalogApplicationComponent.java
Patch:
@@ -21,6 +21,7 @@
 import dagger.android.AndroidInjectionModule;
 import io.material.catalog.application.scope.ApplicationScope;
 import io.material.catalog.main.MainActivity;
+import io.material.catalog.transition.TransitionDemoModule;
 import javax.inject.Singleton;
 
 /** The Application's root component. */
@@ -30,6 +31,8 @@
     modules = {
       AndroidInjectionModule.class,
       MainActivity.Module.class,
+      CatalogDemoModule.class,
+      TransitionDemoModule.class,
     })
 public interface CatalogApplicationComponent {
   void inject(CatalogApplication app);

File: catalog/java/io/material/catalog/feature/FeatureDemoUtils.java
Patch:
@@ -66,7 +66,9 @@ public static void startFragmentInternal(
         && sharedElement != null
         && sharedElementName != null) {
       Fragment currentFragment = getCurrentFragment(activity);
-      currentFragment.setExitTransition(new Hold());
+      Hold hold = new Hold();
+      hold.addTarget(currentFragment.getView());
+      currentFragment.setExitTransition(hold);
 
       MaterialContainerTransform transform = new MaterialContainerTransform();
       transform.setContainerColor(MaterialColors.getColor(sharedElement, R.attr.colorSurface));

File: lib/java/com/google/android/material/transition/MaterialSharedAxis.java
Patch:
@@ -18,7 +18,6 @@
 
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
 
-import android.content.Context;
 import android.os.Build.VERSION_CODES;
 import androidx.annotation.IntDef;
 import androidx.annotation.NonNull;
@@ -42,8 +41,8 @@
  * <p>When configured along the {@link #Z} axis, this transition scales and fades in when the target
  * is appearing and scales and fades out when the target is disappearing.
  *
- * <p>The direction of the slide or scale is determined by the {@link #create(Context, int,
- * boolean)} method's forward property. When true, the target will slide to the left on the X axis,
+ * <p>The direction of the slide or scale is determined by the {@link #create(int, boolean)}
+ * method's forward property. When true, the target will slide to the left on the X axis,
  * up on the Y axis and out in on the Z axis. When false, the target will slide to the right on the
  * X axis, down on the Y axis and in on the Z axis. Note that this is independent of whether or not
  * the target is appearing or disappearing.

File: lib/java/com/google/android/material/dialog/InsetDialogOnTouchListener.java
Patch:
@@ -63,7 +63,9 @@ public boolean onTouch(@NonNull View view, @NonNull MotionEvent event) {
       return false;
     }
     MotionEvent outsideEvent = MotionEvent.obtain(event);
-    outsideEvent.setAction(MotionEvent.ACTION_OUTSIDE);
+    if (event.getAction() == MotionEvent.ACTION_UP) {
+      outsideEvent.setAction(MotionEvent.ACTION_OUTSIDE);
+    }
     // Window.shouldCloseOnTouch does not respect MotionEvent.ACTION_OUTSIDE until Pie, so we fix
     // the coordinates outside the view and use MotionEvent.ACTION_DOWN
     if (VERSION.SDK_INT < VERSION_CODES.P) {

File: lib/java/com/google/android/material/datepicker/MaterialDatePicker.java
Patch:
@@ -392,9 +392,10 @@ private static Drawable createHeaderToggleDrawable(Context context) {
     StateListDrawable toggleDrawable = new StateListDrawable();
     toggleDrawable.addState(
         new int[] {android.R.attr.state_checked},
-        AppCompatResources.getDrawable(context, R.drawable.ic_calendar_black_24dp));
+        AppCompatResources.getDrawable(context, R.drawable.material_ic_calendar_black_24dp));
     toggleDrawable.addState(
-        new int[] {}, AppCompatResources.getDrawable(context, R.drawable.ic_edit_black_24dp));
+        new int[] {},
+        AppCompatResources.getDrawable(context, R.drawable.material_ic_edit_black_24dp));
     return toggleDrawable;
   }
 

File: lib/java/com/google/android/material/datepicker/MaterialDatePicker.java
Patch:
@@ -392,9 +392,9 @@ private static Drawable createHeaderToggleDrawable(Context context) {
     StateListDrawable toggleDrawable = new StateListDrawable();
     toggleDrawable.addState(
         new int[] {android.R.attr.state_checked},
-        AppCompatResources.getDrawable(context, R.drawable.ic_calendar_black_24dp));
+        AppCompatResources.getDrawable(context, R.drawable.mtrl_ic_calendar_black_24dp));
     toggleDrawable.addState(
-        new int[] {}, AppCompatResources.getDrawable(context, R.drawable.ic_edit_black_24dp));
+        new int[] {}, AppCompatResources.getDrawable(context, R.drawable.mtrl_ic_edit_black_24dp));
     return toggleDrawable;
   }
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -2691,8 +2691,7 @@ private void updatePlaceholderMeasurementsBasedOnEditText() {
     if (placeholderTextView != null && editText != null) {
       // Use the EditText's positioning for the placeholder.
       final int editTextGravity = this.editText.getGravity();
-      placeholderTextView.setGravity(
-          Gravity.TOP | (editTextGravity & ~Gravity.VERTICAL_GRAVITY_MASK));
+      placeholderTextView.setGravity(editTextGravity);
 
       placeholderTextView.setPadding(
           editText.getCompoundPaddingLeft(),

File: lib/java/com/google/android/material/textfield/MaterialAutoCompleteTextView.java
Patch:
@@ -88,7 +88,7 @@ public MaterialAutoCompleteTextView(
     // we check it here in case the autoCompleteTextView should be non-editable.
     if (attributes.hasValue(R.styleable.MaterialAutoCompleteTextView_android_inputType)) {
       int inputType =
-          attributes.getResourceId(
+          attributes.getInt(
               R.styleable.MaterialAutoCompleteTextView_android_inputType, InputType.TYPE_NULL);
       if (inputType == InputType.TYPE_NULL) {
         setKeyListener(null);

File: lib/java/com/google/android/material/transition/FadeThrough.java
Patch:
@@ -35,7 +35,7 @@
  * A {@link Visibility} {@link android.transition.Transition} that provides a fade out or in
  * depending on whether or not the target view is appearing or disappearing.
  */
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 public class FadeThrough extends Visibility {
 
   static final float PROGRESS_THRESHOLD = 0.35f;

File: lib/java/com/google/android/material/transition/Hold.java
Patch:
@@ -31,7 +31,7 @@
  * A {@link Visibility} {@link android.transition.Transition} that does nothing to the target views,
  * which can be useful for preserving a scene on screen during a Fragment transition.
  */
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 public class Hold extends Visibility {
 
   @NonNull

File: lib/java/com/google/android/material/transition/MaterialTransitionSet.java
Patch:
@@ -31,7 +31,7 @@
  * A base {@link TransitionSet} that provides primary and secondary {@link Transition} references
  * that can be further configured.
  */
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 abstract class MaterialTransitionSet<T extends Transition> extends TransitionSet {
 
   @NonNull protected Context context;

File: lib/java/com/google/android/material/transition/Scale.java
Patch:
@@ -29,7 +29,7 @@
 import android.view.ViewGroup;
 
 /** A {@link Visibility} {@link android.transition.Transition} that provides a scale. */
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 public class Scale extends Visibility {
 
   private float outgoingStartScale = 1f;

File: lib/java/com/google/android/material/transition/SlideDistance.java
Patch:
@@ -44,7 +44,7 @@
  * A {@link Visibility} {@link android.transition.Transition} that provides a horizontal or vertical
  * slide over a specific distance.
  */
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 public class SlideDistance extends Visibility {
 
   /** @hide */

File: lib/java/com/google/android/material/transition/TransitionListenerAdapter.java
Patch:
@@ -20,7 +20,7 @@
 import androidx.annotation.RequiresApi;
 import android.transition.Transition;
 
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 abstract class TransitionListenerAdapter implements Transition.TransitionListener {
 
   @Override

File: lib/java/com/google/android/material/transition/TransitionUtils.java
Patch:
@@ -39,7 +39,7 @@
 import com.google.android.material.shape.ShapeAppearanceModel;
 import com.google.android.material.shape.ShapeAppearanceModel.CornerSizeUnaryOperator;
 
-@RequiresApi(VERSION_CODES.KITKAT)
+@RequiresApi(VERSION_CODES.LOLLIPOP)
 class TransitionUtils {
 
   private TransitionUtils() {}

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java
Patch:
@@ -446,7 +446,7 @@ public int getItemBackgroundResource() {
    * Set the background of our menu items to the given resource.
    *
    * <p>This will remove any ripple backgrounds created by {@link
-   * setItemRippleColor(ColorStateList)}.
+   * #setItemRippleColor(ColorStateList)}.
    *
    * @param resId The identifier of the resource.
    * @attr ref R.styleable#BottomNavigationView_itemBackground
@@ -471,7 +471,7 @@ public Drawable getItemBackground() {
    * Set the background of our menu items to the given drawable.
    *
    * <p>This will remove any ripple backgrounds created by {@link
-   * setItemRippleColor(ColorStateList)}.
+   * #setItemRippleColor(ColorStateList)}.
    *
    * @param background The drawable for the background.
    * @attr ref R.styleable#BottomNavigationView_itemBackground

File: lib/java/com/google/android/material/bottomsheet/BottomSheetDialog.java
Patch:
@@ -122,7 +122,7 @@ protected void onStart() {
    * or calling `dismiss()` from a `BottomSheetDialogFragment`, tapping outside a dialog, etc...
    *
    * <p>The default animation to dismiss this dialog is a fade-out transition through a
-   * windowAnimation. Call {@link setDismissWithAnimation(true)} if you want to utilize the
+   * windowAnimation. Call {@link #setDismissWithAnimation(true)} if you want to utilize the
    * BottomSheet animation instead.
    *
    * <p>If this function is called from a swipe down interaction, or dismissWithAnimation is false,

File: lib/java/com/google/android/material/slider/Slider.java
Patch:
@@ -102,7 +102,7 @@
  * displays the selected value using letters to indicate magnitude (e.g.: 1.5K, 3M, 12B, etc..).
  *
  * <p>With the default style {@link
- * com.google.android.material.R.style.Widget_MaterialComponents_Slider}, colorPrimary and
+ * com.google.android.material.R.style#Widget_MaterialComponents_Slider}, colorPrimary and
  * colorOnPrimary are used to customize the color of the slider when enabled, and colorOnSurface is
  * used when disabled. The following attributes are used to customize the slider's appearance
  * further:

File: lib/java/com/google/android/material/datepicker/CalendarConstraints.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.Calendar;
 
 /**
- * Used to limit the display range of {@link MaterialCalendar} and set an openAt month.
+ * Used to limit the display range of the calendar and set an openAt month.
  *
  * <p>Implements {@link Parcelable} in order to maintain the {@code CalendarConstraints} across
  * device configuration changes. Parcelable breaks when passed between processes.
@@ -39,7 +39,7 @@ public final class CalendarConstraints implements Parcelable {
   private final int monthSpan;
 
   /**
-   * Used to determine whether {@link MaterialCalendar} days are enabled.
+   * Used to determine whether calendar days are enabled.
    *
    * <p>Extends {@link Parcelable} in order to maintain the {@code DateValidator} across device
    * configuration changes. Parcelable breaks when passed between processes.

File: lib/java/com/google/android/material/floatingactionbutton/FloatingActionButton.java
Patch:
@@ -747,7 +747,7 @@ public boolean isOrWillBeShown() {
    * calculated based on the value set using {@link #setSize(int)} or the {@code fabSize} attribute.
    *
    * @param size preferred size in pixels, or {@link #NO_CUSTOM_SIZE}
-   * @attr ref com.google.android.material.R.styleable.FloatingActionButton_fabCustomSize
+   * @attr ref com.google.android.material.R.styleable#FloatingActionButton_fabCustomSize
    */
   public void setCustomSize(@Px int size) {
     if (size < 0) {

File: lib/java/com/google/android/material/transformation/ExpandableTransformationBehavior.java
Patch:
@@ -58,7 +58,8 @@ public ExpandableTransformationBehavior(Context context, AttributeSet attrs) {
    * <p>If the new {@code expanded} state is false, the {@code dependency} should be shown and the
    * {@code child} should be hidden.
    *
-   * @param dependency the {@link ExpandableWidget} dependency containing the new expanded state.
+   * @param dependency the {@link com.google.android.material.expandable.ExpandableWidget}
+   * dependency containing the new expanded state.
    * @param child the view that should react to the change in expanded state.
    * @param expanded the new expanded state.
    * @param isAnimating whether this state change occurred while a previous state change was still

File: lib/java/com/google/android/material/shape/CornerTreatment.java
Patch:
@@ -43,8 +43,8 @@ public class CornerTreatment {
    *     indicates that the treatment is fully rendered. Animation between these two values can
    *     "heal" or "reveal" a corner treatment.
    * @param shapePath the {@link ShapePath} that this treatment should write to.
-   * @deprecated implement {@link #getCornerPath(float, float, float, ShapePath)} or {@link
-   *     #getCornerPath(float, float, CornerSize, Rect, ShapePath)} instead.
+   * @deprecated implement {@link #getCornerPath(ShapePath, float, float, float)} or {@link
+   *     #getCornerPath(ShapePath, float, float, RectF, CornerSize)} instead.
    */
   @Deprecated
   public void getCornerPath(float angle, float interpolation, @NonNull ShapePath shapePath) {}

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -793,8 +793,8 @@ public void setShadowCompatRotation(int shadowRotation) {
 
   /**
    * Get the shadow radius rendered by the path in pixels. This method should be used only when the
-   * actual size of the shadow is required. Usually {@link getElevation()} should be used instead to
-   * get the actual elevation of this view as it might be different.
+   * actual size of the shadow is required. Usually {@link #getElevation()} should be used instead
+   * to get the actual elevation of this view as it might be different.
    */
   public int getShadowRadius() {
     return drawableState.shadowCompatRadius;
@@ -815,7 +815,7 @@ public void setShadowRadius(int shadowRadius) {
    * Returns true if fake shadows should be drawn. Native elevation shadows can't be drawn on API <
    * 21 or when the shape is concave.
    */
-  private boolean requiresCompatShadow() {
+  public boolean requiresCompatShadow() {
     return VERSION.SDK_INT < VERSION_CODES.LOLLIPOP
         || (!isRoundRect() && !path.isConvex() && Build.VERSION.SDK_INT < Build.VERSION_CODES.Q);
   }

File: lib/java/com/google/android/material/transition/MaterialSharedAxis.java
Patch:
@@ -87,7 +87,7 @@ public class MaterialSharedAxis extends MaterialTransitionSet<Transition> {
   private final boolean forward;
 
   /**
-   * Construct a new instance of MaterialSharedAxis with a given {@link Axis} and direction.
+   * Construct a new instance of MaterialSharedAxis with a given axis and direction.
    *
    * @param axis The axis in which this transition will animate.
    * @param forward True if the animation should move in the forward direction, false if it should

File: lib/java/com/google/android/material/textfield/DropdownMenuEndIconDelegate.java
Patch:
@@ -349,7 +349,6 @@ public boolean onTouch(@NonNull View v, @NonNull MotionEvent event) {
                 dropdownPopupDirty = false;
               }
               showHideDropdown(editText);
-              v.performClick();
             }
             return false;
           }

File: lib/java/com/google/android/material/theme/MaterialComponentsViewInflater.java
Patch:
@@ -34,7 +34,7 @@
 import com.google.android.material.button.MaterialButton;
 import com.google.android.material.checkbox.MaterialCheckBox;
 import com.google.android.material.radiobutton.MaterialRadioButton;
-import com.google.android.material.textview.MaterialAutoCompleteTextView;
+import com.google.android.material.textfield.MaterialAutoCompleteTextView;
 import com.google.android.material.textview.MaterialTextView;
 
 /**

File: tests/javatests/com/google/android/material/theme/MaterialComponentsViewInflaterTest.java
Patch:
@@ -27,7 +27,7 @@
 import com.google.android.material.radiobutton.MaterialRadioButton;
 import com.google.android.material.testapp.theme.MaterialComponentsViewInflaterActivity;
 import com.google.android.material.testapp.theme.R;
-import com.google.android.material.textview.MaterialAutoCompleteTextView;
+import com.google.android.material.textfield.MaterialAutoCompleteTextView;
 import com.google.android.material.textview.MaterialTextView;
 import org.junit.Before;
 import org.junit.Rule;

File: lib/java/com/google/android/material/datepicker/MaterialDatePicker.java
Patch:
@@ -536,7 +536,7 @@ private Builder(DateSelector<S> dateSelector) {
 
     /** Sets the Builder's selection manager to the provided {@link DateSelector}. */
     @NonNull
-    static <S> Builder<S> customDatePicker(DateSelector<S> dateSelector) {
+    public static <S> Builder<S> customDatePicker(@NonNull DateSelector<S> dateSelector) {
       return new Builder<>(dateSelector);
     }
 

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -3163,7 +3163,8 @@ public void draw(@NonNull Canvas canvas) {
         Drawable selectedIndicator;
         selectedIndicator =
             DrawableCompat.wrap(
-                tabSelectedIndicator != null ? tabSelectedIndicator : defaultSelectionIndicator);
+                tabSelectedIndicator != null ? tabSelectedIndicator : defaultSelectionIndicator)
+                .mutate();
         selectedIndicator.setBounds(indicatorLeft, indicatorTop, indicatorRight, indicatorBottom);
         if (selectedIndicatorPaint != null) {
           if (VERSION.SDK_INT == VERSION_CODES.LOLLIPOP) {

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -1162,7 +1162,7 @@ public void setChipMinHeight(float minHeight) {
    * @attr ref com.google.android.material.R.styleable#Chip_chipCornerRadius
    */
   public float getChipCornerRadius() {
-    return chipDrawable != null ? chipDrawable.getChipCornerRadius() : 0;
+    return chipDrawable != null ? Math.max(0, chipDrawable.getChipCornerRadius()) : 0;
   }
 
   /**

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -169,7 +169,7 @@ public class ChipDrawable extends MaterialShapeDrawable
   @Nullable private ColorStateList chipSurfaceColor;
   @Nullable private ColorStateList chipBackgroundColor;
   private float chipMinHeight;
-  private float chipCornerRadius;
+  private float chipCornerRadius = -1;
   @Nullable private ColorStateList chipStrokeColor;
   private float chipStrokeWidth;
   @Nullable private ColorStateList rippleColor;

File: lib/java/com/google/android/material/transition/TransitionUtils.java
Patch:
@@ -190,6 +190,7 @@ static View findDescendantOrAncestorById(View view, @IdRes int viewId) {
   }
 
   static View findAncestorById(View view, @IdRes int ancestorId) {
+    String resourceName = view.getResources().getResourceName(ancestorId);
     while (view != null) {
       if (view.getId() == ancestorId) {
         return view;
@@ -201,7 +202,7 @@ static View findAncestorById(View view, @IdRes int ancestorId) {
         break;
       }
     }
-    throw new IllegalArgumentException(ancestorId + " not a valid ancestor");
+    throw new IllegalArgumentException(resourceName + " is not a valid ancestor");
   }
 
   static RectF getRelativeBounds(View view) {

File: lib/javatests/com/google/android/material/shape/MaterialShapeDrawableTest.java
Patch:
@@ -26,11 +26,9 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
-import org.robolectric.annotation.internal.DoNotInstrument;
 
 /** Tests for {@link MaterialShapeDrawable}. */
 @RunWith(RobolectricTestRunner.class)
-@DoNotInstrument
 public class MaterialShapeDrawableTest {
 
   private static final float ELEVATION = 4;

File: lib/java/com/google/android/material/datepicker/YearGridAdapter.java
Patch:
@@ -84,7 +84,9 @@ private OnClickListener createYearClickListener(final int year) {
     return new OnClickListener() {
       @Override
       public void onClick(View view) {
-        Month moveTo = Month.create(year, materialCalendar.getCurrentMonth().month);
+        Month current = Month.create(year, materialCalendar.getCurrentMonth().month);
+        CalendarConstraints calendarConstraints = materialCalendar.getCalendarConstraints();
+        Month moveTo = calendarConstraints.clamp(current);
         materialCalendar.setCurrentMonth(moveTo);
         materialCalendar.setSelector(CalendarSelector.DAY);
       }

File: catalog/java/io/material/catalog/transition/TransitionFadeThroughDemoFragment.java
Patch:
@@ -35,7 +35,7 @@
 import io.material.catalog.feature.DemoFragment;
 
 /** A fragment that displays the Fade Through Transition demo for the Catalog app. */
-@TargetApi(VERSION_CODES.KITKAT)
+@TargetApi(VERSION_CODES.LOLLIPOP)
 public class TransitionFadeThroughDemoFragment extends DemoFragment {
 
   private static final SparseIntArray LAYOUT_RES_MAP = new SparseIntArray();

File: catalog/java/io/material/catalog/transition/hero/TransitionMusicAlbumDemoFragment.java
Patch:
@@ -123,7 +123,7 @@ private void setUpTransitions() {
   }
 
   /** An adapter to hold an albums list of tracks. */
-  class TrackAdapter extends ListAdapter<Track, TrackViewHolder> {
+  class TrackAdapter extends ListAdapter<Track, TrackAdapter.TrackViewHolder> {
 
     TrackAdapter() {
       super(Track.DIFF_CALLBACK);

File: catalog/java/io/material/catalog/transition/hero/TransitionMusicLibraryDemoFragment.java
Patch:
@@ -94,7 +94,8 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle bundle) {
   public void onAlbumClicked(View view, Album album) {
     TransitionMusicAlbumDemoFragment fragment =
         TransitionMusicAlbumDemoFragment.newInstance(album.id);
-    getParentFragmentManager()
+
+    getFragmentManager()
         .beginTransaction()
         .addSharedElement(view, ViewCompat.getTransitionName(view))
         // Use add to retain TransitionMusicLibraryDemoFragment and have return transitions run

File: lib/java/com/google/android/material/transition/MaterialContainerTransformSharedElementCallback.java
Patch:
@@ -160,7 +160,7 @@ public void setTransparentWindowBackgroundEnabled(boolean transparentWindowBackg
     this.transparentWindowBackgroundEnabled = transparentWindowBackgroundEnabled;
   }
 
-  private void setUpEnterTransform(Window window) {
+  private void setUpEnterTransform(final Window window) {
     Transition transition = window.getSharedElementEnterTransition();
     if (transition instanceof MaterialContainerTransform) {
       MaterialContainerTransform transform = (MaterialContainerTransform) transition;
@@ -185,7 +185,7 @@ public void onTransitionEnd(Transition transition) {
     }
   }
 
-  private void setUpReturnTransform(Activity activity, Window window) {
+  private void setUpReturnTransform(final Activity activity, final Window window) {
     Transition transition = window.getSharedElementReturnTransition();
     if (transition instanceof MaterialContainerTransform) {
       MaterialContainerTransform transform = (MaterialContainerTransform) transition;

File: lib/javatests/com/google/android/material/slider/SliderKeyTest.java
Patch:
@@ -49,12 +49,13 @@ public void createSlider() {
     // Creates slider and adds the listener.
     SliderHelper helper = new SliderHelper(activity);
     slider = helper.getSlider();
+
+    helper.addContentView(activity);
+
     slider.setValueFrom(SLIDER_VALUE_FROM);
     slider.setValueTo(SLIDER_VALUE_TO);
     slider.setValues(values);
     slider.requestFocus();
-
-    helper.addContentView(activity);
   }
 
   @Test

File: lib/javatests/com/google/android/material/floatingactionbutton/ExtendedFloatingActionButtonTest.java
Patch:
@@ -66,7 +66,7 @@ public void sizeAndCallsCorrectListener_forExtend() {
     shadowOf(Looper.getMainLooper()).idle();
 
     verify(onChangedCallback, times(1)).onExtended(fabForTest);
-    assertThat(fabForTest.getLayoutParams().width).isEqualTo(originalWidth);
+    assertThat(fabForTest.getMeasuredWidth()).isEqualTo(originalWidth);
   }
 
   @Test
@@ -111,7 +111,7 @@ public void setExtended_correctSize_whenExtendedTrue() {
     fabForTest.setExtended(false);
     fabForTest.setExtended(true);
 
-    assertThat(fabForTest.getLayoutParams().width).isEqualTo(originalWidth);
+    assertThat(fabForTest.getMeasuredWidth()).isEqualTo(originalWidth);
   }
 
   private ExtendedFloatingActionButton createFabForTest() {

File: lib/java/com/google/android/material/datepicker/RangeDateSelector.java
Patch:
@@ -52,7 +52,7 @@
 public class RangeDateSelector implements DateSelector<Pair<Long, Long>> {
 
   private String invalidRangeStartError;
-  // TODO(b/137381488): "" is not considered an error
+  // "" is not considered an error
   private final String invalidRangeEndError = " ";
   @Nullable private Long selectedStartItem = null;
   @Nullable private Long selectedEndItem = null;

File: lib/java/com/google/android/material/button/MaterialButtonToggleGroup.java
Patch:
@@ -702,6 +702,7 @@ private void updateCheckedStates(int childId, boolean childIsChecked) {
     if (selectionRequired && checkedButtonIds.isEmpty()) {
       // undo deselection
       setCheckedStateForView(childId, true);
+      checkedId = childId;
       return;
     }
 

File: lib/java/com/google/android/material/datepicker/RangeDateSelector.java
Patch:
@@ -180,8 +180,8 @@ public View onCreateTextInputView(
     final TextInputLayout endTextInput = root.findViewById(R.id.mtrl_picker_text_input_range_end);
     EditText startEditText = startTextInput.getEditText();
     EditText endEditText = endTextInput.getEditText();
-    // The date inputType for Samsung does not include any separator characters
-    if (ManufacturerUtils.isSamsungDevice()) {
+    // The date inputType for LG does not include any separator characters
+    if (ManufacturerUtils.isLGDevice()) {
       // Using the URI variation places the '/' and '.' in more prominent positions
       startEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);
       endEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);

File: lib/java/com/google/android/material/datepicker/SingleDateSelector.java
Patch:
@@ -102,8 +102,8 @@ public View onCreateTextInputView(
 
     TextInputLayout dateTextInput = root.findViewById(R.id.mtrl_picker_text_input_date);
     EditText dateEditText = dateTextInput.getEditText();
-    // The date inputType for Samsung does not include any separator characters
-    if (ManufacturerUtils.isSamsungDevice()) {
+    // The date inputType for LG does not include any separator characters
+    if (ManufacturerUtils.isLGDevice()) {
       // Using the URI variation places the '/' and '.' in more prominent positions
       dateEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);
     }

File: lib/java/com/google/android/material/shadow/ShadowRenderer.java
Patch:
@@ -72,22 +72,21 @@ public ShadowRenderer() {
   }
 
   public ShadowRenderer(int color) {
+    shadowPaint = new Paint();
     setShadowColor(color);
 
     transparentPaint.setColor(Color.TRANSPARENT);
     cornerShadowPaint = new Paint(Paint.DITHER_FLAG);
     cornerShadowPaint.setStyle(Paint.Style.FILL);
 
-    shadowPaint = new Paint();
-    shadowPaint.setColor(shadowStartColor);
-
     edgeShadowPaint = new Paint(cornerShadowPaint);
   }
 
   public void setShadowColor(int color) {
     shadowStartColor = ColorUtils.setAlphaComponent(color, COLOR_ALPHA_START);
     shadowMiddleColor = ColorUtils.setAlphaComponent(color, COLOR_ALPHA_MIDDLE);
     shadowEndColor = ColorUtils.setAlphaComponent(color, COLOR_ALPHA_END);
+    shadowPaint.setColor(shadowStartColor);
   }
 
   /** Draws an edge shadow on the canvas in the current bounds with the matrix transform applied. */

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -233,7 +233,7 @@ public abstract static class BottomSheetCallback {
 
   private boolean skipCollapsed;
 
-  private boolean draggable;
+  private boolean draggable = true;
 
   @State int state = STATE_COLLAPSED;
 

File: catalog/java/io/material/catalog/imageview/ShapeableImageViewMainDemoFragment.java
Patch:
@@ -43,7 +43,8 @@ public class ShapeableImageViewMainDemoFragment extends DemoFragment {
   @ExperimentalImageView
   public View onCreateDemoView(
       LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle bundle) {
-    View view = layoutInflater.inflate(R.layout.cat_imageview, viewGroup, false /* attachToRoot */);
+    View view =
+        layoutInflater.inflate(R.layout.catalog_imageview, viewGroup, false /* attachToRoot */);
     MaterialButtonToggleGroup toggleGroup = view.findViewById(R.id.togglegroup);
     ShapeableImageView imageView = view.findViewById(R.id.image_view);
 

File: lib/java/com/google/android/material/textfield/DropdownMenuEndIconDelegate.java
Patch:
@@ -25,6 +25,7 @@
 import android.animation.AnimatorListenerAdapter;
 import android.animation.ValueAnimator;
 import android.animation.ValueAnimator.AnimatorUpdateListener;
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.graphics.Color;
@@ -335,6 +336,8 @@ private void addRippleEffectOnFilledLayout(
     }
   }
 
+  @SuppressLint("ClickableViewAccessibility") // There's an accessibility delegate that handles
+  // interactions with the dropdown menu.
   private void setUpDropdownShowHideBehavior(@NonNull final AutoCompleteTextView editText) {
     // Set whole layout clickable.
     editText.setOnTouchListener(

File: lib/java/com/google/android/material/textfield/IndicatorViewController.java
Patch:
@@ -344,6 +344,7 @@ private TextView getCaptionViewFromDisplayState(@CaptionDisplayState int caption
         return errorView;
       case CAPTION_STATE_HELPER_TEXT:
         return helperTextView;
+      case CAPTION_STATE_NONE:
       default: // No caption displayed, fall out and return null.
     }
     return null;

File: lib/java/com/google/android/material/bottomsheet/BottomSheetDialog.java
Patch:
@@ -204,6 +204,7 @@ private View wrapInBottomSheet(
     }
 
     FrameLayout bottomSheet = (FrameLayout) container.findViewById(R.id.design_bottom_sheet);
+    bottomSheet.removeAllViews();
     if (params == null) {
       bottomSheet.addView(view);
     } else {

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3584,6 +3584,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
       updateBoxUnderlineBounds(rect);
 
       if (hintEnabled) {
+        collapsingTextHelper.setExpandedTextSize(editText.getTextSize());
         final int editTextGravity = this.editText.getGravity();
         collapsingTextHelper.setCollapsedTextGravity(
             Gravity.TOP | (editTextGravity & ~Gravity.VERTICAL_GRAVITY_MASK));

File: lib/java/com/google/android/material/slider/Slider.java
Patch:
@@ -1410,7 +1410,6 @@ static class SliderState extends BaseSavedState {
     float valueTo;
     float thumbPosition;
     float stepSize;
-    float[] ticksCoordinates;
     boolean hasFocus;
 
     public static final Parcelable.Creator<SliderState> CREATOR =
@@ -1439,7 +1438,6 @@ private SliderState(@NonNull Parcel source) {
       valueTo = source.readFloat();
       thumbPosition = source.readFloat();
       stepSize = source.readFloat();
-      source.readFloatArray(ticksCoordinates);
       hasFocus = source.createBooleanArray()[0];
     }
 
@@ -1450,7 +1448,6 @@ public void writeToParcel(@NonNull Parcel dest, int flags) {
       dest.writeFloat(valueTo);
       dest.writeFloat(thumbPosition);
       dest.writeFloat(stepSize);
-      dest.writeFloatArray(ticksCoordinates);
       boolean[] booleans = new boolean[1];
       booleans[0] = hasFocus;
       dest.writeBooleanArray(booleans);

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3662,9 +3662,9 @@ private void openCutout() {
     collapsingTextHelper.getCollapsedTextActualBounds(
         cutoutBounds, editText.getWidth(), editText.getGravity());
     applyCutoutPadding(cutoutBounds);
-    // Offset the cutout bounds by the TextInputLayout's left padding to ensure that the cutout is
-    // inset relative to the TextInputLayout's bounds.
-    cutoutBounds.offset(-getPaddingLeft(), 0);
+    // Offset the cutout bounds by the TextInputLayout's left and top paddings to ensure that the
+    // cutout is inset relative to the TextInputLayout's bounds.
+    cutoutBounds.offset(-getPaddingLeft(), -getPaddingTop());
     ((CutoutDrawable) boxBackground).setCutout(cutoutBounds);
   }
 

File: lib/java/com/google/android/material/textfield/PasswordToggleEndIconDelegate.java
Patch:
@@ -99,7 +99,9 @@ public void onClick(View v) {
               editText.setTransformationMethod(PasswordTransformationMethod.getInstance());
             }
             // And restore the cursor position
-            editText.setSelection(selection);
+            if (selection >= 0) {
+              editText.setSelection(selection);
+            }
           }
         });
     textInputLayout.addOnEditTextAttachedListener(onEditTextAttachedListener);

File: lib/java/com/google/android/material/datepicker/MaterialDatePicker.java
Patch:
@@ -164,7 +164,7 @@ public final Dialog onCreateDialog(@Nullable Bundle bundle) {
     fullscreen = isFullscreen(context);
     int surfaceColor =
         MaterialAttributes.resolveOrThrow(
-            getContext(), R.attr.colorSurface, MaterialDatePicker.class.getCanonicalName());
+            context, R.attr.colorSurface, MaterialDatePicker.class.getCanonicalName());
     background =
         new MaterialShapeDrawable(
             context,

File: catalog/java/io/material/catalog/bottomsheet/BottomSheetFragment.java
Patch:
@@ -57,16 +57,13 @@ public Fragment createFragment() {
   @Override
   public List<Demo> getAdditionalDemos() {
     List<Demo> additionalDemos = new ArrayList<>();
-    // TODO(b/135699723): Enable below once this bug is fixed.
-    if (false) {
     additionalDemos.add(
         new Demo(R.string.cat_bottomsheet_scrollable_content_demo_title) {
           @Override
           public Fragment createFragment() {
             return new BottomSheetScrollableContentDemoFragment();
           }
         });
-    }
     return additionalDemos;
   }
 

File: lib/java/com/google/android/material/theme/MaterialComponentsViewInflater.java
Patch:
@@ -21,7 +21,6 @@
 import android.content.Context;
 import android.os.Build.VERSION;
 import android.os.Build.VERSION_CODES;
-import androidx.annotation.Keep;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.RestrictTo;
@@ -42,7 +41,6 @@
  * An extension of {@link AppCompatViewInflater} that replaces some framework widgets with Material
  * Components ones at inflation time, provided a Material Components theme is in use.
  */
-@Keep // Make proguard keep this class as it's accessed reflectively by AppCompat
 public class MaterialComponentsViewInflater extends AppCompatViewInflater {
 
   // Cached background resource ID used for workaround to not inflate MaterialButton in

File: lib/java/com/google/android/material/tabs/TabLayoutMediator.java
Patch:
@@ -136,7 +136,9 @@ public void attach() {
    * called before {@link #attach()} when a ViewPager2's adapter is changed.
    */
   public void detach() {
-    adapter.unregisterAdapterDataObserver(pagerAdapterObserver);
+    if (adapter != null) {
+      adapter.unregisterAdapterDataObserver(pagerAdapterObserver);
+    }
     tabLayout.removeOnTabSelectedListener(onTabSelectedListener);
     viewPager.unregisterOnPageChangeCallback(onPageChangeCallback);
     pagerAdapterObserver = null;

File: lib/java/com/google/android/material/datepicker/DateStrings.java
Patch:
@@ -111,7 +111,7 @@ static String getDateString(long timeInMillis) {
    */
   static String getDateString(long timeInMillis, @Nullable SimpleDateFormat userDefinedDateFormat) {
     Calendar currentCalendar = UtcDates.getTodayCalendar();
-    Calendar calendarDate = UtcDates.getCalendar();
+    Calendar calendarDate = UtcDates.getUtcCalendar();
     calendarDate.setTimeInMillis(timeInMillis);
 
     if (userDefinedDateFormat != null) {
@@ -154,9 +154,9 @@ static Pair<String, String> getDateRangeString(
     }
 
     Calendar currentCalendar = UtcDates.getTodayCalendar();
-    Calendar startCalendar = UtcDates.getCalendar();
+    Calendar startCalendar = UtcDates.getUtcCalendar();
     startCalendar.setTimeInMillis(start);
-    Calendar endCalendar = UtcDates.getCalendar();
+    Calendar endCalendar = UtcDates.getUtcCalendar();
     endCalendar.setTimeInMillis(end);
 
     if (userDefinedDateFormat != null) {

File: lib/java/com/google/android/material/datepicker/DaysOfWeekAdapter.java
Patch:
@@ -50,7 +50,7 @@ class DaysOfWeekAdapter extends BaseAdapter {
       VERSION.SDK_INT >= VERSION_CODES.O ? NARROW_FORMAT : Calendar.SHORT;
 
   public DaysOfWeekAdapter() {
-    calendar = UtcDates.getCalendar();
+    calendar = UtcDates.getUtcCalendar();
     daysInWeek = calendar.getMaximum(Calendar.DAY_OF_WEEK);
     firstDayOfWeek = calendar.getFirstDayOfWeek();
   }

File: lib/java/com/google/android/material/datepicker/MaterialCalendar.java
Patch:
@@ -230,8 +230,8 @@ public void onDayClick(long day) {
   private ItemDecoration createItemDecoration() {
     return new ItemDecoration() {
 
-      private final Calendar startItem = UtcDates.getCalendar();
-      private final Calendar endItem = UtcDates.getCalendar();
+      private final Calendar startItem = UtcDates.getUtcCalendar();
+      private final Calendar endItem = UtcDates.getUtcCalendar();
 
       @Override
       public void onDraw(

File: lib/java/com/google/android/material/datepicker/MaterialCalendarGridView.java
Patch:
@@ -35,7 +35,7 @@
 
 final class MaterialCalendarGridView extends GridView {
 
-  private final Calendar dayCompute = UtcDates.getCalendar();
+  private final Calendar dayCompute = UtcDates.getUtcCalendar();
 
   public MaterialCalendarGridView(Context context) {
     this(context, null);

File: lib/java/com/google/android/material/datepicker/Month.java
Patch:
@@ -71,7 +71,7 @@ private Month(@NonNull Calendar rawCalendar) {
    */
   @NonNull
   static Month create(long timeInMillis) {
-    Calendar calendar = UtcDates.getCalendar();
+    Calendar calendar = UtcDates.getUtcCalendar();
     calendar.setTimeInMillis(timeInMillis);
     return new Month(calendar);
   }
@@ -86,7 +86,7 @@ static Month create(long timeInMillis) {
    */
   @NonNull
   static Month create(int year, @Months int month) {
-    Calendar calendar = UtcDates.getCalendar();
+    Calendar calendar = UtcDates.getUtcCalendar();
     calendar.set(Calendar.YEAR, year);
     calendar.set(Calendar.MONTH, month);
     return new Month(calendar);

File: lib/java/com/google/android/material/datepicker/MonthAdapter.java
Patch:
@@ -38,7 +38,7 @@ class MonthAdapter extends BaseAdapter {
   /**
    * The maximum number of weeks possible in any month. 6 for {@link java.util.GregorianCalendar}.
    */
-  static final int MAXIMUM_WEEKS = UtcDates.getCalendar().getMaximum(Calendar.WEEK_OF_MONTH);
+  static final int MAXIMUM_WEEKS = UtcDates.getUtcCalendar().getMaximum(Calendar.WEEK_OF_MONTH);
 
   final Month month;
   /**

File: lib/javatests/com/google/android/material/datepicker/MonthAdapterTest.java
Patch:
@@ -254,7 +254,7 @@ public void ilDaysOfPositions() {
 
   private void assertDaysOfPositions(Map<Integer, Integer> localizedDaysOfPositionsInFebruary2019) {
     for (int day : localizedDaysOfPositionsInFebruary2019.keySet()) {
-      Calendar testCalendar = UtcDates.getCalendar();
+      Calendar testCalendar = UtcDates.getUtcCalendar();
       testCalendar.setTimeInMillis(monthFeb2019.getItem(day));
       assertEquals(
           (int) localizedDaysOfPositionsInFebruary2019.get(day),

File: lib/javatests/com/google/android/material/datepicker/SingleDateSelectorTest.java
Patch:
@@ -76,10 +76,10 @@ public void nullDateSelectionFromParcel() {
 
   @Test
   public void setSelectionDirectly() {
-    Calendar setTo = UtcDates.getCalendar();
+    Calendar setTo = UtcDates.getUtcCalendar();
     setTo.set(2004, Calendar.MARCH, 5);
     singleDateSelector.setSelection(setTo.getTimeInMillis());
-    Calendar resultCalendar = UtcDates.getCalendar();
+    Calendar resultCalendar = UtcDates.getUtcCalendar();
 
     resultCalendar.setTimeInMillis(singleDateSelector.getSelection());
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1729,6 +1729,9 @@ public void setCounterEnabled(boolean enabled) {
         }
         counterView.setMaxLines(1);
         indicatorViewController.addIndicator(counterView, COUNTER_INDEX);
+        MarginLayoutParamsCompat.setMarginStart(
+            (MarginLayoutParams) counterView.getLayoutParams(),
+            getResources().getDimensionPixelOffset(R.dimen.mtrl_textinput_counter_margin_start));
         updateCounterTextAppearanceAndColor();
         updateCounter();
       } else {

File: catalog/java/io/material/catalog/datepicker/DatePickerMainDemoFragment.java
Patch:
@@ -56,7 +56,7 @@ private static Calendar getClearedUtc() {
   }
 
   private void initSettings() {
-    today = MaterialDatePicker.todayInUtcMilliseconds();
+    today = MaterialDatePicker.thisMonthInUtcMilliseconds();
     Calendar calendar = getClearedUtc();
     calendar.setTimeInMillis(today);
     calendar.roll(Calendar.MONTH, 1);

File: lib/java/com/google/android/material/datepicker/CalendarConstraints.java
Patch:
@@ -294,7 +294,7 @@ public Builder setValidator(DateValidator validator) {
     @NonNull
     public CalendarConstraints build() {
       if (openAt == null) {
-        long today = MaterialDatePicker.todayInUtcMilliseconds();
+        long today = MaterialDatePicker.thisMonthInUtcMilliseconds();
         openAt = start <= today && today <= end ? today : start;
       }
       Bundle deepCopyBundle = new Bundle();

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3771,7 +3771,6 @@ public void onInitializeAccessibilityNodeInfo(
 
       if (contentInvalid) {
         info.setError(showingError ? errorText : counterOverflowDesc);
-        info.setContentInvalid(true);
       }
     }
   }

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -226,7 +226,8 @@ public Chip(Context context, AttributeSet attrs, int defStyleAttr) {
 
     // Chip text should not extend to more than 1 line.
     if (!chipDrawable.shouldDrawText()) {
-      setSingleLine();
+      setLines(1);
+      setHorizontallyScrolling(true);
     }
     // Chip text should be vertically center aligned and start aligned.
     // Final horizontal text origin is set during the onDraw call via canvas translation.

File: lib/java/com/google/android/material/card/MaterialCardViewHelper.java
Patch:
@@ -141,7 +141,7 @@ public MaterialCardViewHelper(
     setShapeAppearanceModel(shapeAppearanceModelBuilder.build());
 
     Resources resources = card.getResources();
-    // TODO: support custom sizing
+    // TODO(b/145298914): support custom sizing
     checkedIconMargin = resources.getDimensionPixelSize(R.dimen.mtrl_card_checked_icon_margin);
     checkedIconSize = resources.getDimensionPixelSize(R.dimen.mtrl_card_checked_icon_size);
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3744,8 +3744,8 @@ public void onInitializeAccessibilityNodeInfo(
       boolean contentInvalid = showingError || !TextUtils.isEmpty(counterOverflowDesc);
 
       String hint = hasHint ? hintText.toString() : "";
-      hint += (hasHelperText && !TextUtils.isEmpty(hint)) ? ", " : "";
-      hint += hasHelperText ? helperText : "";
+      hint += ((showingError || hasHelperText) && !TextUtils.isEmpty(hint)) ? ", " : "";
+      hint += showingError ? errorText : (hasHelperText ? helperText : "");
 
       if (showingText) {
         info.setText(inputText);

File: lib/java/com/google/android/material/slider/Slider.java
Patch:
@@ -154,6 +154,7 @@ public class Slider extends View {
       "The stepSize must be 0, or a factor of the valueFrom-valueTo range";
 
   private static final int HALO_ALPHA = 63;
+  private static final double THRESHOLD = .0001;
 
   private static final int DEF_STYLE_RES = R.style.Widget_MaterialComponents_Slider;
 
@@ -389,7 +390,7 @@ private void validateStepSize() {
     if (stepSize < 0.0f) {
       Log.e(TAG, EXCEPTION_ILLEGAL_STEP_SIZE);
       throw new IllegalArgumentException(EXCEPTION_ILLEGAL_STEP_SIZE);
-    } else if (stepSize > 0.0f && (valueTo - valueFrom) % stepSize != 0.0f) {
+    } else if (stepSize > 0.0f && ((valueTo - valueFrom) / stepSize) % 1 > THRESHOLD) {
       Log.e(TAG, EXCEPTION_ILLEGAL_STEP_SIZE);
       throw new IllegalArgumentException(EXCEPTION_ILLEGAL_STEP_SIZE);
     }
@@ -468,7 +469,7 @@ private boolean isValueValid(float value) {
       Log.e(TAG, EXCEPTION_ILLEGAL_VALUE);
       return false;
     }
-    if (stepSize > 0.0f && ((valueFrom - value) % stepSize) != 0.0f) {
+    if (stepSize > 0.0f && ((valueFrom - value) / stepSize) % 1 > THRESHOLD) {
       Log.e(TAG, EXCEPTION_ILLEGAL_DISCRETE_VALUE);
       return false;
     }

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -98,7 +98,7 @@ public interface OnCheckedChangeListener {
    * Keep track of when {@link CardView} is done initializing because we don't want to use the
    * {@link Drawable} that it passes to {@link #setBackground(Drawable)}.
    */
-  private final boolean isParentCardViewDoneInitializing;
+  private boolean isParentCardViewDoneInitializing;
 
   private boolean checked = false;
   private boolean dragged = false;

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -526,7 +526,7 @@ public TextInputLayout(@NonNull Context context, @Nullable AttributeSet attrs, i
                 new int[] {android.R.attr.state_focused, android.R.attr.state_enabled}, -1);
         hoveredFilledBackgroundColor =
             filledBackgroundColorStateList.getColorForState(
-                new int[] {android.R.attr.state_hovered}, -1);
+                new int[] {android.R.attr.state_hovered, android.R.attr.state_enabled}, -1);
       } else {
         focusedFilledBackgroundColor = defaultFilledBackgroundColor;
         ColorStateList mtrlFilledBackgroundColorStateList =

File: catalog/java/io/material/catalog/bottomnav/BottomNavigationDemoFragment.java
Patch:
@@ -87,8 +87,9 @@ public View onCreateDemoView(
           return false;
         };
     setBottomNavListeners(navigationItemListener);
-
-    setupBadging();
+    if (bundle == null) {
+      setupBadging();
+    }
     return view;
   }
 

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java
Patch:
@@ -40,6 +40,7 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.RequiresApi;
 import androidx.annotation.StyleRes;
+import androidx.annotation.VisibleForTesting;
 import androidx.core.content.ContextCompat;
 import androidx.core.graphics.drawable.DrawableCompat;
 import androidx.customview.view.AbsSavedState;
@@ -116,7 +117,7 @@ public class BottomNavigationView extends FrameLayout {
   private static final int MENU_PRESENTER_ID = 1;
 
   @NonNull private final MenuBuilder menu;
-  @NonNull private final BottomNavigationMenuView menuView;
+  @NonNull @VisibleForTesting final BottomNavigationMenuView menuView;
   private final BottomNavigationPresenter presenter = new BottomNavigationPresenter();
   @Nullable private ColorStateList itemRippleColor;
   private MenuInflater menuInflater;

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java
Patch:
@@ -757,6 +757,9 @@ public SavedState(Parcelable superState) {
 
     public SavedState(@NonNull Parcel source, ClassLoader loader) {
       super(source, loader);
+      if (loader == null) {
+        loader = getClass().getClassLoader();
+      }
       readFromParcel(source, loader);
     }
 

File: lib/java/com/google/android/material/slider/Slider.java
Patch:
@@ -465,6 +465,7 @@ public void setValue(float value) {
       if (hasOnChangeListener()) {
         listener.onValueChange(this, getValue());
       }
+      invalidate();
     }
   }
 

File: lib/java/com/google/android/material/textfield/IndicatorViewController.java
Patch:
@@ -493,7 +493,7 @@ boolean errorShouldBeShown() {
   private boolean isCaptionStateError(@CaptionDisplayState int captionState) {
     return captionState == CAPTION_STATE_ERROR
         && errorView != null
-        && !TextUtils.isEmpty(errorText);
+        && errorText != null;
   }
 
   boolean helperTextIsDisplayed() {

File: lib/javatests/com/google/android/material/datepicker/RangeDateSelectorTest.java
Patch:
@@ -198,7 +198,6 @@ public void invalidSetThrowsException() {
     Calendar setToStart = UtcDates.getCalendar();
     setToStart.set(2005, Calendar.FEBRUARY, 1);
     Calendar setToEnd = UtcDates.getCalendar();
-    ;
     setToEnd.set(2004, Calendar.MARCH, 5);
 
     // ThrowingRunnable used by assertThrows is not available until gradle 4.13

File: lib/javatests/com/google/android/material/textview/MaterialTextViewTest.java
Patch:
@@ -50,6 +50,7 @@ public void readTestLineHeights() {
 
   @Test
   public void ensureThatViewCanBeCreatedWithoutSettingLineHeightAttribute() {
+    context.setTheme(R.style.Theme_AppCompat);
     inflater.inflate(R.layout.text_view_without_line_height, null, false);
   }
 

File: lib/java/com/google/android/material/appbar/MaterialToolbar.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -69,7 +69,7 @@ public MaterialToolbar(@NonNull Context context, @Nullable AttributeSet attrs) {
   }
 
   public MaterialToolbar(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
 import static com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_ALWAYS;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
@@ -216,7 +216,7 @@ public BottomAppBar(@NonNull Context context, @Nullable AttributeSet attrs) {
   }
 
   public BottomAppBar(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationView.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -134,7 +134,7 @@ public BottomNavigationView(@NonNull Context context, @Nullable AttributeSet att
 
   public BottomNavigationView(
       @NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -19,7 +19,7 @@
 import com.google.android.material.R;
 
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -192,7 +192,7 @@ public MaterialButton(@NonNull Context context, @Nullable AttributeSet attrs) {
   }
 
   public MaterialButton(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -115,7 +115,7 @@ public MaterialCardView(Context context, AttributeSet attrs) {
   }
 
   public MaterialCardView(Context context, AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     isParentCardViewDoneInitializing = true;
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();

File: lib/java/com/google/android/material/checkbox/MaterialCheckBox.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -62,7 +62,7 @@ public MaterialCheckBox(Context context, @Nullable AttributeSet attrs) {
   }
 
   public MaterialCheckBox(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/dialog/MaterialAlertDialogBuilder.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.DialogInterface.OnCancelListener;
@@ -86,7 +86,7 @@ private static int getMaterialAlertDialogThemeOverlay(@NonNull Context context)
 
   private static Context createMaterialAlertDialogThemedContext(@NonNull Context context) {
     int themeOverlayId = getMaterialAlertDialogThemeOverlay(context);
-    Context themedContext = createThemedContext(context, null, DEF_STYLE_ATTR, DEF_STYLE_RES);
+    Context themedContext = wrap(context, null, DEF_STYLE_ATTR, DEF_STYLE_RES);
     if (themeOverlayId == 0) {
       return themedContext;
     }

File: lib/java/com/google/android/material/floatingactionbutton/FloatingActionButton.java
Patch:
@@ -20,7 +20,7 @@
 
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
 import static androidx.core.util.Preconditions.checkNotNull;
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.animation.Animator.AnimatorListener;
 import android.content.Context;
@@ -203,7 +203,7 @@ public FloatingActionButton(@NonNull Context context, @Nullable AttributeSet att
   @SuppressWarnings("initialization")
   public FloatingActionButton(
       @NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/radiobutton/MaterialRadioButton.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -63,7 +63,7 @@ public MaterialRadioButton(@NonNull Context context, @Nullable AttributeSet attr
 
   public MaterialRadioButton(
       @NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/slider/Slider.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -245,7 +245,7 @@ public Slider(@NonNull Context context, @Nullable AttributeSet attrs) {
   }
 
   public Slider(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/snackbar/BaseTransientBottomBar.java
Patch:
@@ -22,7 +22,7 @@
 import static com.google.android.material.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR;
 import static com.google.android.material.animation.AnimationUtils.LINEAR_INTERPOLATOR;
 import static com.google.android.material.animation.AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR;
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.accessibilityservice.AccessibilityServiceInfo;
 import android.animation.Animator;
@@ -1070,7 +1070,7 @@ protected SnackbarBaseLayout(@NonNull Context context) {
     }
 
     protected SnackbarBaseLayout(@NonNull Context context, AttributeSet attrs) {
-      super(createThemedContext(context, attrs, 0, 0), attrs);
+      super(wrap(context, attrs, 0, 0), attrs);
       // Ensure we are using the correctly themed context rather than the context that was passed
       // in.
       context = getContext();

File: lib/java/com/google/android/material/switchmaterial/SwitchMaterial.java
Patch:
@@ -18,7 +18,7 @@
 
 import com.google.android.material.R;
 
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
@@ -67,7 +67,7 @@ public SwitchMaterial(@NonNull Context context, @Nullable AttributeSet attrs) {
   }
 
   public SwitchMaterial(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -19,8 +19,8 @@
 import com.google.android.material.R;
 
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
-import static com.google.android.material.internal.ThemeEnforcement.createThemedContext;
 import static com.google.android.material.textfield.IndicatorViewController.COUNTER_INDEX;
+import static com.google.android.material.theme.overlay.MaterialThemeOverlay.wrap;
 
 import android.animation.ValueAnimator;
 import android.content.Context;
@@ -410,7 +410,7 @@ public TextInputLayout(@NonNull Context context, @Nullable AttributeSet attrs) {
   }
 
   public TextInputLayout(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
-    super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
+    super(wrap(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();
 

File: catalog/java/io/material/catalog/bottomsheet/BottomSheetMainDemoFragment.java
Patch:
@@ -1,4 +1,3 @@
-
 /*
  * Copyright 2018 The Android Open Source Project
  *
@@ -91,6 +90,7 @@ public View onCreateDemoView(
           ViewGroup.LayoutParams params = bottomSheetChildView.getLayoutParams();
           BottomSheetBehavior<View> bottomSheetBehavior =
               BottomSheetBehavior.from(bottomSheetChildView);
+          bottomSheetBehavior.setUpdateImportantForAccessibilityOnSiblings(isChecked);
           View modalBottomSheetChildView = bottomSheetDialog.findViewById(R.id.bottom_drawer_2);
           ViewGroup.LayoutParams layoutParams = modalBottomSheetChildView.getLayoutParams();
           BottomSheetBehavior<FrameLayout> modalBottomSheetBehavior =

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3591,7 +3591,7 @@ private void updateIconColorOnState(
         colorStateList.getColorForState(this.getDrawableState(), colorStateList.getDefaultColor());
 
     icon = DrawableCompat.wrap(icon).mutate();
-    DrawableCompat.setTint(icon, color);
+    DrawableCompat.setTintList(icon, ColorStateList.valueOf(color));
     iconView.setImageDrawable(icon);
   }
 

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -1102,6 +1102,7 @@ protected final void calculatePathForSize(@NonNull RectF bounds, @NonNull Path p
   private void calculateStrokePath() {
     // Adjust corner radius in order to draw the stroke so that the corners of the background are
     // drawn on top of the edges.
+    final float strokeInsetLength = -getStrokeInsetLength();
     strokeShapeAppearance =
         getShapeAppearanceModel()
             .withTransformedCornerSizes(
@@ -1113,7 +1114,7 @@ public CornerSize apply(@NonNull CornerSize cornerSize) {
                     // bounds change.
                     return cornerSize instanceof RelativeCornerSize
                         ? cornerSize
-                        : new AdjustedCornerSize(-getStrokeInsetLength(), cornerSize);
+                        : new AdjustedCornerSize(strokeInsetLength, cornerSize);
                   }
                 });
 

File: lib/java/com/google/android/material/shape/ShapeAppearanceModel.java
Patch:
@@ -774,9 +774,9 @@ public interface CornerSizeUnaryOperator {
   public ShapeAppearanceModel withTransformedCornerSizes(@NonNull CornerSizeUnaryOperator op) {
     return toBuilder()
         .setTopLeftCornerSize(op.apply(getTopLeftCornerSize()))
-        .setTopRightCornerSize(op.apply(getTopLeftCornerSize()))
+        .setTopRightCornerSize(op.apply(getTopRightCornerSize()))
         .setBottomLeftCornerSize(op.apply(getBottomLeftCornerSize()))
-        .setBottomRightCornerSize(op.apply(getBottomLeftCornerSize()))
+        .setBottomRightCornerSize(op.apply(getBottomRightCornerSize()))
         .build();
   }
 

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1406,9 +1406,7 @@ public void setChipMinHeight(float chipMinHeight) {
    * @attr ref com.google.android.material.R.styleable#Chip_chipCornerRadius
    */
   public float getChipCornerRadius() {
-    return isShapeThemingEnabled
-        ? getShapeAppearanceModel().getTopLeftCorner().getCornerSize()
-        : chipCornerRadius;
+    return isShapeThemingEnabled ? getTopLeftCornerResolvedSize() : chipCornerRadius;
   }
 
   /**

File: tests/javatests/com/google/android/material/bottomsheet/BottomSheetDialogTest.java
Patch:
@@ -233,7 +233,7 @@ public String getDescription() {
 
       @Override
       public void perform(UiController uiController, View view) {
-        BottomSheetBehavior behavior = BottomSheetBehavior.from(view);
+        BottomSheetBehavior<?> behavior = BottomSheetBehavior.from(view);
         behavior.setPeekHeight(view.getHeight() + 100);
       }
     };

File: lib/java/com/google/android/material/tabs/TabLayoutMediator.java
Patch:
@@ -157,12 +157,12 @@ void populateTabsFromPagerAdapter() {
         tabConfigurationStrategy.onConfigureTab(tab, i);
         tabLayout.addTab(tab, false);
       }
-
       // Make sure we reflect the currently set ViewPager item
       if (adapterCount > 0) {
-        int currItem = viewPager.getCurrentItem();
+        int lastItem = tabLayout.getTabCount() - 1;
+        int currItem = Math.min(viewPager.getCurrentItem(), lastItem);
         if (currItem != tabLayout.getSelectedTabPosition()) {
-          tabLayout.getTabAt(currItem).select();
+          tabLayout.selectTab(tabLayout.getTabAt(currItem));
         }
       }
     }

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -731,6 +731,8 @@ public boolean performCloseIconClick() {
     return result;
   }
 
+  @SuppressLint("ClickableViewAccessibility") // There's an accessibility delegate that will handle
+  // interactions with the trailing chip icon.
   @Override
   public boolean onTouchEvent(@NonNull MotionEvent event) {
     boolean handled = false;

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -2631,7 +2631,7 @@ private void tryUpdateBadgeAnchor() {
         // TODO(b/123406505): Support badging on custom tab views.
         tryRemoveBadgeFromAnchor();
       } else {
-        if (iconView != null && tab.getIcon() != null) {
+        if (iconView != null && tab != null && tab.getIcon() != null) {
           if (badgeAnchorView != iconView) {
             tryRemoveBadgeFromAnchor();
             // Anchor badge to icon.
@@ -2640,6 +2640,7 @@ private void tryUpdateBadgeAnchor() {
             tryUpdateBadgeDrawableBounds(iconView);
           }
         } else if (textView != null
+            && tab != null
             && tab.getTabLabelVisibility() == TAB_LABEL_VISIBILITY_LABELED) {
           if (badgeAnchorView != textView) {
             tryRemoveBadgeFromAnchor();

File: lib/java/com/google/android/material/bottomsheet/BottomSheetDialogFragment.java
Patch:
@@ -58,7 +58,7 @@ public void dismissAllowingStateLoss() {
     }
   }
 
-  @NonNull
+  @Nullable
   @Override
   public BottomSheetDialog getDialog() {
     return (BottomSheetDialog) super.getDialog();

File: lib/java/com/google/android/material/shape/ShapeAppearancePathProvider.java
Patch:
@@ -25,9 +25,7 @@
 import androidx.annotation.RestrictTo;
 import androidx.annotation.RestrictTo.Scope;
 
-/**
- * A class to convert a {@link ShapeAppearanceModel to a {@link android.graphics.Path}}.
- */
+/** A class to convert a {@link ShapeAppearanceModel} to a {@link android.graphics.Path}. */
 public class ShapeAppearancePathProvider {
 
   /**

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -3574,9 +3574,9 @@ final int getErrorTextCurrentColor() {
   }
 
   /**
-   * An AccessibilityDelegate intended to be set on an {@link EditText} or {@link TextInputEditText}
-   * with {@link
-   * TextInputLayout#setTextInputAccessibilityDelegate(TextInputLayout.AccessibilityDelegate) to
+   * An {@link AccessibilityDelegate} intended to be set on an {@link EditText} or {@link
+   * TextInputEditText} with {@link
+   * TextInputLayout#setTextInputAccessibilityDelegate(TextInputLayout.AccessibilityDelegate)} to
    * provide attributes for accessibility that are managed by {@link TextInputLayout}.
    */
   public static class AccessibilityDelegate extends AccessibilityDelegateCompat {

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -153,7 +153,7 @@ public MaterialCardView(Context context, AttributeSet attrs, int defStyleAttr) {
   @Override
   public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo info) {
     super.onInitializeAccessibilityNodeInfo(info);
-    info.setClassName(MaterialCardView.class.getName());
+    info.setClassName(CardView.class.getName());
     info.setCheckable(isCheckable());
     info.setClickable(isClickable());
     info.setChecked(isChecked());
@@ -162,7 +162,7 @@ public void onInitializeAccessibilityNodeInfo(@NonNull AccessibilityNodeInfo inf
   @Override
   public void onInitializeAccessibilityEvent(@NonNull AccessibilityEvent accessibilityEvent) {
     super.onInitializeAccessibilityEvent(accessibilityEvent);
-    accessibilityEvent.setClassName(MaterialCardView.class.getName());
+    accessibilityEvent.setClassName(CardView.class.getName());
     accessibilityEvent.setChecked(isChecked());
   }
 

File: catalog/java/io/material/catalog/themeswitcher/ThemePreferencesManager.java
Patch:
@@ -65,7 +65,8 @@ public void showChooseThemePopup(View anchor) {
       menuBuilder.setOptionalIconsVisible(true);
 
       ColorStateList defaultColor =
-          AppCompatResources.getColorStateList(context, R.color.mtrl_on_surface_emphasis_medium);
+          AppCompatResources.getColorStateList(
+              context, R.color.material_on_surface_emphasis_medium);
       int selectedColor = MaterialColors.getColor(anchor, resourceProvider.getPrimaryColor());
       int currentThemeId = getCurrentThemeId();
       for (int i = 0; i < menuBuilder.size(); i++) {

File: catalog/java/io/material/catalog/feature/DemoFragment.java
Patch:
@@ -74,7 +74,7 @@ public View onCreateView(
     demoContainer.addView(onCreateDemoView(layoutInflater, viewGroup, bundle));
 
     ViewGroup children = (ViewGroup) demoContainer.getChildAt(0);
-    DemoUtils.addBottomSpaceInsetsIfNeeded(children);
+    DemoUtils.addBottomSpaceInsetsIfNeeded(children, demoContainer);
     return view;
   }
 

File: catalog/java/io/material/catalog/feature/DemoLandingFragment.java
Patch:
@@ -100,7 +100,7 @@ public View onCreateView(
     }
     additionalDemosSection.setVisibility(additionalDemos.isEmpty() ? View.GONE : View.VISIBLE);
 
-    DemoUtils.addBottomSpaceInsetsIfNeeded((ViewGroup) view);
+    DemoUtils.addBottomSpaceInsetsIfNeeded((ViewGroup) view, viewGroup);
     return view;
   }
 

File: catalog/java/io/material/catalog/feature/DemoFragment.java
Patch:
@@ -74,7 +74,7 @@ public View onCreateView(
     demoContainer.addView(onCreateDemoView(layoutInflater, viewGroup, bundle));
 
     ViewGroup children = (ViewGroup) demoContainer.getChildAt(0);
-    DemoUtils.addBottomSpaceInsetsIfNeeded(children, demoContainer);
+    DemoUtils.addBottomSpaceInsetsIfNeeded(children);
     return view;
   }
 

File: catalog/java/io/material/catalog/feature/DemoLandingFragment.java
Patch:
@@ -100,7 +100,7 @@ public View onCreateView(
     }
     additionalDemosSection.setVisibility(additionalDemos.isEmpty() ? View.GONE : View.VISIBLE);
 
-    DemoUtils.addBottomSpaceInsetsIfNeeded((ViewGroup) view, viewGroup);
+    DemoUtils.addBottomSpaceInsetsIfNeeded((ViewGroup) view);
     return view;
   }
 

File: lib/java/com/google/android/material/picker/MonthAdapter.java
Patch:
@@ -129,7 +129,7 @@ public TextView getView(int position, View convertView, ViewGroup parent) {
     if (calendarConstraints.getDateValidator().isValid(date)) {
       day.setEnabled(true);
       for (long selectedDay : dateSelector.getSelectedDays()) {
-        if (date.equals(DateLongs.canonicalYearMonthDay(selectedDay))) {
+        if (DateLongs.canonicalYearMonthDay(date) == DateLongs.canonicalYearMonthDay(selectedDay)) {
           calendarStyle.selectedDay.styleItem(day);
           return day;
         }

File: lib/java/com/google/android/material/bottomsheet/BottomSheetDialogFragment.java
Patch:
@@ -68,7 +68,7 @@ public BottomSheetDialog getDialog() {
    */
   private boolean tryDismissWithAnimation(boolean allowingStateLoss) {
     BottomSheetBehavior<View> behavior = getBottomSheetBehavior();
-    if (behavior != null && getDialog().getDismissWithAnimation()) {
+    if (behavior != null && behavior.isHideable() && getDialog().getDismissWithAnimation()) {
       dismissWithAnimation(behavior, allowingStateLoss);
       return true;
     }

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -1603,9 +1603,9 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 + getPaddingBottom());
     switch (MeasureSpec.getMode(heightMeasureSpec)) {
       case MeasureSpec.AT_MOST:
-        heightMeasureSpec =
-            MeasureSpec.makeMeasureSpec(
-                Math.min(idealHeight, MeasureSpec.getSize(heightMeasureSpec)), MeasureSpec.EXACTLY);
+        if (getChildCount() == 1 && MeasureSpec.getSize(heightMeasureSpec) >= idealHeight) {
+          getChildAt(0).setMinimumHeight(idealHeight);
+        }
         break;
       case MeasureSpec.UNSPECIFIED:
         heightMeasureSpec = MeasureSpec.makeMeasureSpec(idealHeight, MeasureSpec.EXACTLY);

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -99,7 +99,8 @@
  * <p>Also supports:
  *
  * <ul>
- *   <li>Showing an error via {@link #setErrorEnabled(boolean)} and {@link #setError(CharSequence)}
+ *   <li>Showing an error via {@link #setErrorEnabled(boolean)} and {@link #setError(CharSequence)},
+ *       along with showing an error icon via {@link #setErrorIconDrawable}
  *   <li>Showing helper text via {@link #setHelperTextEnabled(boolean)} and {@link
  *       #setHelperText(CharSequence)}
  *   <li>Showing a character counter via {@link #setCounterEnabled(boolean)} and {@link

File: tests/javatests/com/google/android/material/testutils/SnackbarUtils.java
Patch:
@@ -109,7 +109,7 @@ public void onDismissed(B transientBottomBar, @DismissEvent int event) {
    */
   public static <B extends BaseTransientBottomBar<B>>
       void showTransientBottomBarAndWaitUntilFullyShown(@NonNull B transientBottomBar) {
-    TransientBottomBarShownCallback callback = new TransientBottomBarShownCallback();
+    TransientBottomBarShownCallback<B> callback = new TransientBottomBarShownCallback<B>();
     transientBottomBar.addCallback(callback);
     try {
       // Register our listener as idling resource so that Espresso waits until the
@@ -147,7 +147,7 @@ void dismissTransientBottomBarAndWaitUntilFullyDismissed(@NonNull final B transi
    */
   public static <B extends BaseTransientBottomBar<B>> void performActionAndWaitUntilFullyDismissed(
       @NonNull B transientBottomBar, @NonNull TransientBottomBarAction action) throws Throwable {
-    TransientBottomBarDismissedCallback callback = new TransientBottomBarDismissedCallback();
+    TransientBottomBarDismissedCallback<B> callback = new TransientBottomBarDismissedCallback<B>();
     transientBottomBar.addCallback(callback);
     try {
       // Register our listener as idling resource so that Espresso waits until the
@@ -172,7 +172,7 @@ public static <B extends BaseTransientBottomBar<B>> void performActionAndWaitUnt
   /** Helper method that waits until the given bar has been fully dismissed. */
   public static <B extends BaseTransientBottomBar<B>> void waitUntilFullyDismissed(
       @NonNull B transientBottomBar) {
-    TransientBottomBarDismissedCallback callback = new TransientBottomBarDismissedCallback();
+    TransientBottomBarDismissedCallback<B> callback = new TransientBottomBarDismissedCallback<B>();
     transientBottomBar.addCallback(callback);
     try {
       // Register our listener as idling resource so that Espresso waits until the

File: lib/java/com/google/android/material/textfield/DropdownMenuEndIconDelegate.java
Patch:
@@ -126,6 +126,7 @@ public void onEditTextAttached(EditText editText) {
           autoCompleteTextView.setThreshold(0);
           editText.removeTextChangedListener(exposedDropdownEndIconTextWatcher);
           editText.addTextChangedListener(exposedDropdownEndIconTextWatcher);
+          textInputLayout.setErrorIconDrawable(null);
           textInputLayout.setTextInputAccessibilityDelegate(accessibilityDelegate);
 
           textInputLayout.setEndIconVisible(true);

File: tests/javatests/com/google/android/material/shape/MaterialShapeDrawableDrawTest.java
Patch:
@@ -17,7 +17,7 @@
 package com.google.android.material.shape;
 
 import static org.junit.Assert.assertFalse;
-import static org.mockito.Matchers.any;
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 

File: tests/javatests/com/google/android/material/bottomsheet/BottomSheetDialogTest.java
Patch:
@@ -24,7 +24,7 @@
 import static org.hamcrest.Matchers.lessThan;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.fail;
-import static org.mockito.Matchers.any;
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.timeout;

File: tests/javatests/com/google/android/material/tabs/TabLayoutTest.java
Patch:
@@ -26,7 +26,7 @@
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.times;

File: tests/javatests/com/google/android/material/snackbar/SnackbarTest.java
Patch:
@@ -30,7 +30,7 @@
 import static org.hamcrest.core.AllOf.allOf;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.spy;

File: tests/javatests/com/google/android/material/bottomnavigation/BottomNavigationViewTest.java
Patch:
@@ -34,7 +34,7 @@
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
+import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.times;

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -1418,6 +1418,8 @@ public boolean shouldDelayChildPressedState() {
   protected void onAttachedToWindow() {
     super.onAttachedToWindow();
 
+    MaterialShapeUtils.setParentAbsoluteElevation(this);
+
     if (viewPager == null) {
       // If we don't have a ViewPager already, check if our parent is a ViewPager to
       // setup with it automatically

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -47,6 +47,7 @@
 import com.google.android.material.resources.MaterialResources;
 import com.google.android.material.shape.EdgeTreatment;
 import com.google.android.material.shape.MaterialShapeDrawable;
+import com.google.android.material.shape.MaterialShapeUtils;
 import com.google.android.material.shape.ShapeAppearanceModel;
 import androidx.core.graphics.drawable.DrawableCompat;
 import androidx.customview.view.AbsSavedState;
@@ -822,6 +823,8 @@ public Behavior getBehavior() {
   protected void onAttachedToWindow() {
     super.onAttachedToWindow();
 
+    MaterialShapeUtils.setParentAbsoluteElevation(this, materialShapeDrawable);
+
     // Automatically don't clip children for the parent view of BottomAppBar. This allows the shadow
     // to be drawn outside the bounds.
     if (getParent() instanceof ViewGroup) {

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -61,6 +61,7 @@
 import com.google.android.material.internal.ViewUtils;
 import com.google.android.material.resources.MaterialResources;
 import com.google.android.material.shape.MaterialShapeDrawable;
+import com.google.android.material.shape.MaterialShapeUtils;
 import androidx.core.graphics.drawable.DrawableCompat;
 import androidx.core.util.Pools;
 import androidx.core.view.GravityCompat;
@@ -1572,9 +1573,8 @@ private void updateTabViewLayoutParams(LinearLayout.LayoutParams lp) {
   @Override
   public void setElevation(float elevation) {
     super.setElevation(elevation);
-    if (getBackground() instanceof MaterialShapeDrawable) {
-      ((MaterialShapeDrawable) getBackground()).setElevation(elevation);
-    }
+
+    MaterialShapeUtils.setElevation(this, elevation);
   }
 
   @Override

File: lib/java/com/google/android/material/button/MaterialButtonToggleGroup.java
Patch:
@@ -53,7 +53,7 @@
  *     xmlns:android="http://schemas.android.com/apk/res/android"
  *     android:id="@+id/toggle_button_group"
  *     android:layout_width="wrap_content"
- *     android:layout_height="wrap_content" /&gt;
+ *     android:layout_height="wrap_content"&gt;
  *
  *     &lt;com.google.android.material.button.MaterialButton
  *         style="?attr/materialButtonOutlinedStyle"
@@ -76,7 +76,7 @@
  *         android:layout_height="wrap_content"
  *         android:text="@string/button_label_custom"/&gt;
  *
- * &lt;com.google.android.material.button.MaterialButtonToggleGroup /&gt;
+ * &lt;/com.google.android.material.button.MaterialButtonToggleGroup&gt;
  * </pre>
  *
  * <p>Buttons can also be added to this view group programmatically via the {@link #addView(View)}

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -68,7 +68,7 @@
  * generated path.
  */
 public class MaterialShapeDrawable extends Drawable
-    implements TintAwareDrawable, ShapeAppearanceModel.OnChangedListener {
+    implements TintAwareDrawable, ShapeAppearanceModel.OnChangedListener, Shapeable {
 
   private static final float SHADOW_RADIUS_MULTIPLIER = .75f;
 
@@ -229,6 +229,7 @@ private static int modulateAlpha(int paintAlpha, int alpha) {
    *
    * @param shapeAppearanceModel the desired model.
    */
+  @Override
   public void setShapeAppearanceModel(@NonNull ShapeAppearanceModel shapeAppearanceModel) {
     drawableState.shapeAppearanceModel.removeOnChangedListener(this);
     drawableState.shapeAppearanceModel = shapeAppearanceModel;
@@ -243,6 +244,7 @@ public void setShapeAppearanceModel(@NonNull ShapeAppearanceModel shapeAppearanc
    * @return the current model.
    */
   @NonNull
+  @Override
   public ShapeAppearanceModel getShapeAppearanceModel() {
     return drawableState.shapeAppearanceModel;
   }

File: lib/java/com/google/android/material/chip/Chip.java
Patch:
@@ -424,7 +424,7 @@ private void updateFrameworkRippleBackground() {
     //noinspection NewApi
     ripple =
         new RippleDrawable(
-            RippleUtils.convertToRippleDrawableColor(chipDrawable.getRippleColor()),
+            RippleUtils.sanitizeRippleDrawableColor(chipDrawable.getRippleColor()),
             getBackgroundDrawable(),
             null);
     chipDrawable.setUseCompatRipple(false);

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1006,7 +1006,7 @@ private boolean onStateChange(int[] chipState, int[] closeIconState) {
     }
 
     int newCompatRippleColor =
-        compatRippleColor != null
+        compatRippleColor != null && RippleUtils.shouldDrawRippleCompat(chipState)
             ? compatRippleColor.getColorForState(chipState, currentCompatRippleColor)
             : 0;
     if (currentCompatRippleColor != newCompatRippleColor) {
@@ -1280,7 +1280,7 @@ private ColorFilter getTintColorFilter() {
 
   private void updateCompatRippleColor() {
     compatRippleColor =
-        useCompatRipple ? RippleUtils.convertToRippleDrawableColor(rippleColor) : null;
+        useCompatRipple ? RippleUtils.sanitizeRippleDrawableColor(rippleColor) : null;
   }
 
   private void setChipSurfaceColor(@Nullable ColorStateList chipSurfaceColor) {
@@ -1795,7 +1795,7 @@ public void setCloseIcon(@Nullable Drawable closeIcon) {
   private void updateFrameworkCloseIconRipple() {
     closeIconRipple =
         new RippleDrawable(
-            RippleUtils.convertToRippleDrawableColor(getRippleColor()),
+            RippleUtils.sanitizeRippleDrawableColor(getRippleColor()),
             closeIcon,
             // A separate drawable with a solid background is needed for the mask because by
             // default, the close icon has a transparent background.

File: lib/java/com/google/android/material/picker/DateGridSelector.java
Patch:
@@ -55,10 +55,9 @@ public class DateGridSelector implements GridSelector<Long> {
 
   // The context is not available on construction and parceling, so we lazily initialize styles.
   private void initializeStyles(Context context) {
-    if (calendarStyle != null) {
-      return;
+    if (calendarStyle == null || calendarStyle.refreshStyles(context)) {
+      calendarStyle = new CalendarStyle(context);
     }
-    calendarStyle = new CalendarStyle(context);
   }
 
   @Override

File: lib/java/com/google/android/material/picker/DateRangeGridSelector.java
Patch:
@@ -59,10 +59,9 @@ public class DateRangeGridSelector implements GridSelector<Pair<Long, Long>> {
 
   // The context is not available on construction and parceling, so we lazily initialize styles.
   private void initializeStyles(Context context) {
-    if (calendarStyle != null) {
-      return;
+    if (calendarStyle == null || calendarStyle.refreshStyles(context)) {
+      calendarStyle = new CalendarStyle(context);
     }
-    calendarStyle = new CalendarStyle(context);
   }
 
   @Override

File: lib/java/com/google/android/material/picker/GridSelector.java
Patch:
@@ -43,7 +43,7 @@
 @RestrictTo(Scope.LIBRARY_GROUP)
 public interface GridSelector<S> extends Parcelable {
 
-  /** Returns the current selection */
+  /** Returns the current selection. */
   @Nullable
   S getSelection();
 

File: catalog/java/io/material/catalog/button/ButtonsMainDemoFragment.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.annotation.LayoutRes;
 import androidx.annotation.Nullable;
 import com.google.android.material.button.MaterialButton;
-import com.google.android.material.snackbar.BaseTransientBottomBar;
 import com.google.android.material.snackbar.Snackbar;
 import androidx.core.math.MathUtils;
 import android.util.DisplayMetrics;
@@ -55,7 +54,7 @@ public View onCreateDemoView(
           v -> {
             // Show a Snackbar with an action button, which should also have a MaterialButton style
             Snackbar snackbar =
-                Snackbar.make(v, R.string.cat_button_clicked, BaseTransientBottomBar.LENGTH_LONG);
+                Snackbar.make(v, R.string.cat_button_clicked, Snackbar.LENGTH_LONG);
             snackbar.setAction(
                 R.string.cat_snackbar_action_button_text,
                 new OnClickListener() {

File: catalog/java/io/material/catalog/elevation/ElevationOverlaysDemoActivity.java
Patch:
@@ -46,7 +46,7 @@ public View onCreateDemoView(
     RecyclerView recyclerView = view.findViewById(R.id.recycler_view);
     recyclerView.setAdapter(new Adapter(getElevationDpValues()));
     recyclerView.setLayoutManager(
-        new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, /* reverseLayout= */ false));
+        new LinearLayoutManager(this, RecyclerView.VERTICAL, /* reverseLayout= */ false));
 
     return view;
   }

File: catalog/java/io/material/catalog/fab/ExtendedFabBehaviorDemoFragment.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.annotation.LayoutRes;
 import androidx.annotation.Nullable;
 import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
-import com.google.android.material.snackbar.BaseTransientBottomBar;
 import com.google.android.material.snackbar.Snackbar;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
@@ -56,7 +55,7 @@ public View onCreateDemoView(
       extendedFab.setOnClickListener(
           v ->
               Snackbar.make(
-                      v, R.string.cat_extended_fab_clicked, BaseTransientBottomBar.LENGTH_SHORT)
+                      v, R.string.cat_extended_fab_clicked, Snackbar.LENGTH_SHORT)
                   .show());
     }
 

File: catalog/java/io/material/catalog/fab/ExtendedFabDemoFragment.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.annotation.LayoutRes;
 import androidx.annotation.Nullable;
 import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
-import com.google.android.material.snackbar.BaseTransientBottomBar;
 import com.google.android.material.snackbar.Snackbar;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -54,7 +53,7 @@ public View onCreateDemoView(
     for (ExtendedFloatingActionButton extendedFab : extendedFabs) {
       extendedFab.setOnClickListener(
           v -> {
-            Snackbar.make(v, R.string.cat_extended_fab_clicked, BaseTransientBottomBar.LENGTH_SHORT)
+            Snackbar.make(v, R.string.cat_extended_fab_clicked, Snackbar.LENGTH_SHORT)
                 .show();
           });
     }

File: catalog/java/io/material/catalog/fab/FabMainDemoFragment.java
Patch:
@@ -22,7 +22,6 @@
 import androidx.annotation.LayoutRes;
 import androidx.annotation.Nullable;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
-import com.google.android.material.snackbar.BaseTransientBottomBar;
 import com.google.android.material.snackbar.Snackbar;
 import androidx.core.view.ViewCompat;
 import android.view.LayoutInflater;
@@ -53,7 +52,7 @@ public View onCreateDemoView(
     for (FloatingActionButton fab : fabs) {
       fab.setOnClickListener(
           v -> {
-            Snackbar.make(v, R.string.cat_fab_clicked, BaseTransientBottomBar.LENGTH_SHORT).show();
+            Snackbar.make(v, R.string.cat_fab_clicked, Snackbar.LENGTH_SHORT).show();
           });
     }
 

File: catalog/java/io/material/catalog/font/FontMainDemoFragment.java
Patch:
@@ -26,7 +26,6 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StyleRes;
 import com.google.android.material.resources.TextAppearance;
-import com.google.android.material.snackbar.BaseTransientBottomBar;
 import com.google.android.material.snackbar.Snackbar;
 import androidx.core.widget.TextViewCompat;
 import androidx.recyclerview.widget.DividerItemDecoration;
@@ -160,7 +159,7 @@ public FontStyleViewHolder(ViewGroup parent) {
               Snackbar.make(
                       view,
                       view.getContext().getString(R.string.cat_font_style_message, attributeName),
-                      BaseTransientBottomBar.LENGTH_LONG)
+                      Snackbar.LENGTH_LONG)
                   .show());
     }
 

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -1723,8 +1723,7 @@ private void updateAppBarLayoutDrawableState(
 
         final boolean changed = layout.setLiftedState(lifted);
 
-        if (Build.VERSION.SDK_INT >= 11
-            && (forceJump || (changed && shouldJumpElevationState(parent, layout)))) {
+        if (forceJump || (changed && shouldJumpElevationState(parent, layout))) {
           // If the collapsed state changed, we may need to
           // jump to the current state if we have an overlapping view
           layout.jumpDrawablesToCurrentState();

File: lib/java/com/google/android/material/card/MaterialCardViewHelper.java
Patch:
@@ -398,7 +398,7 @@ void onMeasure(int measuredWidth, int measuredHeight) {
       int left = measuredWidth - margin - size;
       int bottom = measuredHeight - margin - size;
       int right = margin;
-      if (ViewCompat.getLayoutDirection(materialCardView) == View.LAYOUT_DIRECTION_RTL) {
+      if (ViewCompat.getLayoutDirection(materialCardView) == ViewCompat.LAYOUT_DIRECTION_RTL) {
         // swap left and right
         int tmp = right;
         right = left;

File: lib/java/com/google/android/material/internal/VisibilityAwareImageButton.java
Patch:
@@ -18,6 +18,7 @@
 
 import static androidx.annotation.RestrictTo.Scope.LIBRARY_GROUP;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import androidx.annotation.RestrictTo;
 import android.util.AttributeSet;
@@ -29,6 +30,7 @@
  * @hide
  */
 @RestrictTo(LIBRARY_GROUP)
+@SuppressLint("AppCompatCustomView")
 public class VisibilityAwareImageButton extends ImageButton {
 
   private int userSetVisibility;

File: lib/java/com/google/android/material/picker/DaysOfWeekAdapter.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.google.android.material.picker;
 
+import android.annotation.SuppressLint;
 import android.os.Build.VERSION;
 import android.os.Build.VERSION_CODES;
 import android.view.Gravity;
@@ -69,6 +70,7 @@ public int getCount() {
     return daysInWeek;
   }
 
+  @SuppressLint("WrongConstant")
   @Override
   public View getView(int position, View convertView, ViewGroup parent) {
     TextView dayOfWeek = (TextView) convertView;

File: lib/java/com/google/android/material/picker/MaterialCalendar.java
Patch:
@@ -111,7 +111,7 @@ public View onCreateView(
 
     int layout;
     int orientation;
-    if (MaterialPickerDialogFragment.isFullScreen(themedContext)) {
+    if (MaterialPickerDialogFragment.isFullscreen(themedContext)) {
       layout = R.layout.mtrl_calendar_vertical;
       orientation = ViewPager2.ORIENTATION_VERTICAL;
     } else {

File: lib/java/com/google/android/material/picker/MaterialPickerDialogFragment.java
Patch:
@@ -181,7 +181,7 @@ public final void onCreate(@Nullable Bundle bundle) {
   public final Dialog onCreateDialog(@Nullable Bundle bundle) {
     Dialog dialog = new Dialog(requireContext(), themeResId);
     Context context = dialog.getContext();
-    fullscreen = isFullScreen(context);
+    fullscreen = isFullscreen(context);
     int surfaceColor =
         MaterialAttributes.resolveOrThrow(
             getContext(),
@@ -330,7 +330,7 @@ private static Drawable createHeaderToggleDrawable(Context context) {
     return toggleDrawable;
   }
 
-  static boolean isFullScreen(Context context) {
+  static boolean isFullscreen(Context context) {
     int calendarStyle =
         MaterialAttributes.resolveOrThrow(
             context, R.attr.materialCalendarStyle, MaterialCalendar.class.getCanonicalName());

File: lib/java/com/google/android/material/picker/MonthFragment.java
Patch:
@@ -82,7 +82,7 @@ public View onCreateView(
     LayoutInflater themedInflater = LayoutInflater.from(context);
 
     final int layout;
-    if (MaterialPickerDialogFragment.isFullScreen(context)) {
+    if (MaterialPickerDialogFragment.isFullscreen(context)) {
       layout = R.layout.mtrl_calendar_month_labeled;
     } else {
       layout = R.layout.mtrl_calendar_month;

File: lib/java/com/google/android/material/picker/MonthsPagerAdapter.java
Patch:
@@ -89,7 +89,7 @@ class MonthsPagerAdapter extends FragmentStateAdapter {
                 .getResources()
                 .getDimensionPixelSize(R.dimen.mtrl_calendar_day_spacing_vertical);
     int labelHeight =
-        MaterialPickerDialogFragment.isFullScreen(context)
+        MaterialPickerDialogFragment.isFullscreen(context)
             ? MaterialCalendar.getDayHeight(context)
             : 0;
 

File: lib/java/com/google/android/material/picker/Month.java
Patch:
@@ -27,8 +27,6 @@
 final class Month implements Comparable<Month>, Parcelable {
 
   private final Calendar calendar;
-  private static final SimpleDateFormat longNameFormat =
-      new SimpleDateFormat("MMMM, yyyy", Locale.getDefault());
   private final String longName;
   final int month;
   final int year;
@@ -42,7 +40,8 @@ private Month(Calendar calendar) {
     year = calendar.get(Calendar.YEAR);
     daysInWeek = this.calendar.getMaximum(Calendar.DAY_OF_WEEK);
     daysInMonth = this.calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
-    longName = longNameFormat.format(this.calendar.getTime());
+    longName =
+        new SimpleDateFormat("MMMM, yyyy", Locale.getDefault()).format(this.calendar.getTime());
   }
 
   /**

File: lib/java/com/google/android/material/picker/DateRangeGridSelector.java
Patch:
@@ -91,7 +91,7 @@ public void onCalendarMonthDraw(Canvas canvas, MaterialCalendarGridView gridView
     if (selectedStartItem.before(firstOfMonth)) {
       firstHighlightPosition = monthAdapter.firstPositionInMonth();
       rangeHighlightStart =
-          firstHighlightPosition == 0
+          monthAdapter.isFirstInRow(firstHighlightPosition)
               ? 0
               : gridView.getChildAt(firstHighlightPosition - 1).getRight();
     } else {
@@ -105,7 +105,7 @@ public void onCalendarMonthDraw(Canvas canvas, MaterialCalendarGridView gridView
     if (selectedEndItem.after(lastOfMonth)) {
       lastHighlightPosition = monthAdapter.lastPositionInMonth();
       rangeHighlightEnd =
-          lastHighlightPosition == gridView.getCount() - 1
+          monthAdapter.isLastInRow(lastHighlightPosition)
               ? gridView.getWidth()
               : gridView.getChildAt(lastHighlightPosition + 1).getLeft();
     } else {

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -622,7 +622,9 @@ public TextInputLayout(Context context, @Nullable AttributeSet attrs, int defSty
       }
     } else if (a.hasValue(R.styleable.TextInputLayout_passwordToggleEnabled)) {
       // Support for deprecated attributes related to the password toggle end icon
-      setEndIconMode(END_ICON_PASSWORD_TOGGLE);
+      boolean passwordToggleEnabled =
+          a.getBoolean(R.styleable.TextInputLayout_passwordToggleEnabled, false);
+      setEndIconMode(passwordToggleEnabled ? END_ICON_PASSWORD_TOGGLE : END_ICON_NONE);
       setEndIconDrawable(a.getDrawable(R.styleable.TextInputLayout_passwordToggleDrawable));
       setEndIconContentDescription(
           a.getText(R.styleable.TextInputLayout_passwordToggleContentDescription));

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -2752,9 +2752,9 @@ private void updateIconDummyDrawables() {
       // Store the user defined end compound drawable so that we can restore it later.
       if (compounds[2] != endIconDummyDrawable) {
         originalEditTextEndDrawable = compounds[2];
+        TextViewCompat.setCompoundDrawablesRelative(
+            editText, compounds[0], compounds[1], endIconDummyDrawable, compounds[3]);
       }
-      TextViewCompat.setCompoundDrawablesRelative(
-          editText, compounds[0], compounds[1], endIconDummyDrawable, compounds[3]);
     } else if (endIconDummyDrawable != null) {
       // Remove the dummy end compound drawable if it exists and clear it.
       final Drawable[] compounds = TextViewCompat.getCompoundDrawablesRelative(editText);

File: lib/java/com/google/android/material/animation/MotionSpec.java
Patch:
@@ -220,7 +220,7 @@ public boolean equals(Object o) {
     if (this == o) {
       return true;
     }
-    if (o == null || getClass() != o.getClass()) {
+    if (!(o instanceof MotionSpec)) {
       return false;
     }
 

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1964,7 +1964,7 @@ public void setCheckedIcon(@Nullable Drawable checkedIcon) {
   /**
    * Returns this chip's show motion spec.
    *
-   * @see #setShowMotionSpec(Drawable)
+   * @see #setShowMotionSpec(MotionSpec)
    * @attr ref com.google.android.material.R.styleable#Chip_showMotionSpec
    */
   @Nullable
@@ -1995,7 +1995,7 @@ public void setShowMotionSpec(@Nullable MotionSpec showMotionSpec) {
   /**
    * Returns this chip's hide motion spec.
    *
-   * @see #setHideMotionSpec(Drawable)
+   * @see #setHideMotionSpec(MotionSpec)
    * @attr ref com.google.android.material.R.styleable#Chip_hideMotionSpec
    */
   @Nullable

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1964,7 +1964,7 @@ public void setCheckedIcon(@Nullable Drawable checkedIcon) {
   /**
    * Returns this chip's show motion spec.
    *
-   * @see #setShowMotionSpec(MotionSpec)
+   * @see #setShowMotionSpec(Drawable)
    * @attr ref com.google.android.material.R.styleable#Chip_showMotionSpec
    */
   @Nullable
@@ -1995,7 +1995,7 @@ public void setShowMotionSpec(@Nullable MotionSpec showMotionSpec) {
   /**
    * Returns this chip's hide motion spec.
    *
-   * @see #setHideMotionSpec(MotionSpec)
+   * @see #setHideMotionSpec(Drawable)
    * @attr ref com.google.android.material.R.styleable#Chip_hideMotionSpec
    */
   @Nullable

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1964,7 +1964,7 @@ public void setCheckedIcon(@Nullable Drawable checkedIcon) {
   /**
    * Returns this chip's show motion spec.
    *
-   * @see #setShowMotionSpec(Drawable)
+   * @see #setShowMotionSpec(MotionSpec)
    * @attr ref com.google.android.material.R.styleable#Chip_showMotionSpec
    */
   @Nullable
@@ -1995,7 +1995,7 @@ public void setShowMotionSpec(@Nullable MotionSpec showMotionSpec) {
   /**
    * Returns this chip's hide motion spec.
    *
-   * @see #setHideMotionSpec(Drawable)
+   * @see #setHideMotionSpec(MotionSpec)
    * @attr ref com.google.android.material.R.styleable#Chip_hideMotionSpec
    */
   @Nullable

File: lib/java/com/google/android/material/floatingactionbutton/FloatingActionButton.java
Patch:
@@ -249,7 +249,8 @@ public FloatingActionButton(Context context, @Nullable AttributeSet attrs, int d
     expandableWidgetHelper = new ExpandableWidgetHelper(this);
 
     getImpl().setShapeAppearance(shapeAppearance, usingDefaultCorner);
-    getImpl().setBackgroundDrawable(backgroundTint, backgroundTintMode, rippleColor, borderWidth);
+    getImpl()
+        .initializeBackgroundDrawable(backgroundTint, backgroundTintMode, rippleColor, borderWidth);
     getImpl().setMinTouchTargetSize(minTouchTargetSize);
     getImpl().setElevation(elevation);
     getImpl().setHoveredFocusedTranslationZ(hoveredFocusedTranslationZ);

File: lib/java/com/google/android/material/floatingactionbutton/FloatingActionButtonImpl.java
Patch:
@@ -51,6 +51,7 @@
 import com.google.android.material.shape.MaterialShapeDrawable;
 import com.google.android.material.shape.ShapeAppearanceModel;
 import androidx.core.graphics.drawable.DrawableCompat;
+import androidx.core.util.Preconditions;
 import androidx.core.view.ViewCompat;
 import android.view.View;
 import android.view.ViewTreeObserver;
@@ -175,7 +176,7 @@ interface InternalVisibilityChangedListener {
     rotation = this.view.getRotation();
   }
 
-  void setBackgroundDrawable(
+  void initializeBackgroundDrawable(
       ColorStateList backgroundTint,
       PorterDuff.Mode backgroundTintMode,
       ColorStateList rippleColor,
@@ -200,7 +201,6 @@ void setBackgroundDrawable(
         checkNotNull(shapeDrawable),
         touchFeedbackShape};
     contentBackground = new LayerDrawable(layers);
-    shadowViewDelegate.setBackgroundDrawable(contentBackground);
   }
 
   void setBackgroundTintList(@Nullable ColorStateList tint) {
@@ -662,6 +662,7 @@ void getPadding(Rect rect) {
   }
 
   void onPaddingUpdated(Rect padding) {
+    Preconditions.checkNotNull(contentBackground, "Didn't initialize content background");
     if (shouldAddPadding()) {
       InsetDrawable insetDrawable = new InsetDrawable(
           contentBackground, padding.left, padding.top, padding.right, padding.bottom);

File: lib/java/com/google/android/material/floatingactionbutton/FloatingActionButtonImplLollipop.java
Patch:
@@ -54,7 +54,7 @@ class FloatingActionButtonImplLollipop extends FloatingActionButtonImpl {
   }
 
   @Override
-  void setBackgroundDrawable(
+  void initializeBackgroundDrawable(
       ColorStateList backgroundTint,
       PorterDuff.Mode backgroundTintMode,
       ColorStateList rippleColor,
@@ -82,7 +82,6 @@ void setBackgroundDrawable(
             RippleUtils.convertToRippleDrawableColor(rippleColor), rippleContent, null);
 
     contentBackground = rippleDrawable;
-    shadowViewDelegate.setBackgroundDrawable(contentBackground);
   }
 
   @Override

File: lib/java/com/google/android/material/dialog/MaterialAlertDialogBuilder.java
Patch:
@@ -76,7 +76,7 @@ public class MaterialAlertDialogBuilder extends AlertDialog.Builder {
 
   private static int getMaterialAlertDialogThemeOverlay(Context context) {
     TypedValue materialAlertDialogThemeOverlay =
-        MaterialAttributes.resolveAttribute(context, MATERIAL_ALERT_DIALOG_THEME_OVERLAY);
+        MaterialAttributes.resolve(context, MATERIAL_ALERT_DIALOG_THEME_OVERLAY);
     if (materialAlertDialogThemeOverlay == null) {
       return 0;
     }

File: lib/java/com/google/android/material/elevation/ElevationOverlayProvider.java
Patch:
@@ -38,7 +38,7 @@ public class ElevationOverlayProvider {
 
   public ElevationOverlayProvider(Context context) {
     this.elevationOverlaysEnabled =
-        MaterialAttributes.resolveBooleanAttribute(context, R.attr.elevationOverlaysEnabled);
+        MaterialAttributes.resolveBoolean(context, R.attr.elevationOverlaysEnabled, false);
     this.elevationOverlaysColor =
         MaterialColors.getColor(context, R.attr.elevationOverlaysColor, Color.TRANSPARENT);
     this.colorSurface = MaterialColors.getColor(context, R.attr.colorSurface, Color.TRANSPARENT);

File: lib/java/com/google/android/material/bottomsheet/BottomSheetBehavior.java
Patch:
@@ -925,7 +925,7 @@ private void calculateCollapsedOffset() {
   }
 
   private void calculateHalfExpandedOffset() {
-      this.halfExpandedOffset = (int) (parentHeight * halfExpandedRatio);
+    this.halfExpandedOffset = (int) (parentHeight * (1 - halfExpandedRatio));
   }
 
   private void reset() {

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -110,7 +110,7 @@
  * tabLayout.addTab(tabLayout.newTab().setText("Tab 3"));
  * </pre>
  *
- * You should set a listener via {@link #setOnTabSelectedListener(OnTabSelectedListener)} to be
+ * You should add a listener via {@link #addOnTabSelectedListener(OnTabSelectedListener)} to be
  * notified when any tab's selection state has been changed.
  *
  * <p>You can also add items to TabLayout in your layout through the use of {@link TabItem}. An

File: lib/java/com/google/android/material/appbar/ViewOffsetBehavior.java
Patch:
@@ -44,6 +44,7 @@ public boolean onLayoutChild(CoordinatorLayout parent, V child, int layoutDirect
       viewOffsetHelper = new ViewOffsetHelper(child);
     }
     viewOffsetHelper.onViewLayout();
+    viewOffsetHelper.applyOffsets();
 
     if (tempTopBottomOffset != 0) {
       viewOffsetHelper.setTopAndBottomOffset(tempTopBottomOffset);

File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -166,11 +166,11 @@ public MaterialButton(Context context) {
     this(context, null /* attrs */);
   }
 
-  public MaterialButton(Context context, AttributeSet attrs) {
+  public MaterialButton(Context context, @Nullable AttributeSet attrs) {
     this(context, attrs, R.attr.materialButtonStyle);
   }
 
-  public MaterialButton(Context context, AttributeSet attrs, int defStyleAttr) {
+  public MaterialButton(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
     super(createThemedContext(context, attrs, defStyleAttr, DEF_STYLE_RES), attrs, defStyleAttr);
     // Ensure we are using the correctly themed context rather than the context that was passed in.
     context = getContext();

File: lib/java/com/google/android/material/shadow/ShadowViewDelegate.java
Patch:
@@ -17,14 +17,15 @@
 package com.google.android.material.shadow;
 
 import android.graphics.drawable.Drawable;
+import androidx.annotation.Nullable;
 
 /** Delegate interface that can be used to facilitate rendering of shadows pre-lollipop. */
 public interface ShadowViewDelegate {
   float getRadius();
 
   void setShadowPadding(int left, int top, int right, int bottom);
 
-  void setBackgroundDrawable(Drawable background);
+  void setBackgroundDrawable(@Nullable Drawable background);
 
   boolean isCompatPaddingEnabled();
 }

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -253,7 +253,6 @@ public BottomAppBar(Context context, @Nullable AttributeSet attrs, int defStyleA
     ShapeAppearanceModel appBarModel = materialShapeDrawable.getShapeAppearanceModel();
     appBarModel.setTopEdge(topEdgeTreatment);
     materialShapeDrawable.setShadowCompatibilityMode(SHADOW_COMPAT_MODE_ALWAYS);
-    materialShapeDrawable.setShadowVerticalOffset(elevation / 2);
     materialShapeDrawable.setPaintStyle(Style.FILL);
     setElevation(elevation);
     DrawableCompat.setTintList(materialShapeDrawable, backgroundTint);

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -623,7 +623,8 @@ public void setShadowRadius(int shadowRadius) {
    * 21 or when the shape is concave.
    */
   private boolean requiresCompatShadow() {
-    return VERSION.SDK_INT < VERSION_CODES.LOLLIPOP || !path.isConvex();
+    return VERSION.SDK_INT < VERSION_CODES.LOLLIPOP
+        || (!drawableState.shapeAppearanceModel.isRoundRect() && !path.isConvex());
   }
 
   /**

File: lib/java/com/google/android/material/card/MaterialCardViewHelper.java
Patch:
@@ -409,8 +409,9 @@ void forceRippleRedraw() {
       // Change the bounds slightly to force the layer to change color, then change the layer again.
       // In API 28 the color for the Ripple is snapshot at the beginning of the animation,
       // it doesn't update when the drawable changes to android:state_checked.
-      rippleDrawable.setBounds(bounds.left, bounds.top, bounds.right, bounds.bottom - 1);
-      rippleDrawable.setBounds(bounds);
+      int bottom = bounds.bottom;
+      rippleDrawable.setBounds(bounds.left, bounds.top, bounds.right, bottom - 1);
+      rippleDrawable.setBounds(bounds.left, bounds.top, bounds.right, bottom);
     }
   }
 

File: tests/javatests/com/google/android/material/textfield/TextInputLayoutTest.java
Patch:
@@ -433,7 +433,7 @@ public void testExtractUiHintSet() {
     final EditorInfo info = new EditorInfo();
     editText.onCreateInputConnection(info);
 
-    assertEquals(INPUT_TEXT, info.hintText);
+    assertEquals(INPUT_TEXT, info.hintText.toString());
   }
 
   @UiThreadTest
@@ -452,10 +452,10 @@ public void testDispatchProvideAutofillStructure() {
     // Asserts the structure.
     final ViewStructureImpl childStructure = structure.getChildAt(0);
     assertEquals(EditText.class.getName(), childStructure.getClassName());
-    assertEquals("Hint to the user", childStructure.getHint());
+    assertEquals("Hint to the user", childStructure.getHint().toString());
 
     // Make sure the widget's hint was restored.
-    assertEquals("Hint to the user", layout.getHint());
+    assertEquals("Hint to the user", layout.getHint().toString());
     final EditText editText = activity.findViewById(R.id.textinput_edittext);
     assertNull(editText.getHint());
   }

File: catalog/java/io/material/catalog/tableofcontents/TocFragment.java
Patch:
@@ -119,7 +119,7 @@ public void onDestroyView() {
   public void onCreate(@Nullable Bundle bundle) {
     super.onCreate(bundle);
     String defaultDemo = FeatureDemoUtils.getDefaultDemo(getContext());
-    if (!defaultDemo.isEmpty()) {
+    if (!defaultDemo.isEmpty() && bundle == null) {
       for (FeatureDemo demo : featureDemos) {
         Fragment fragment = demo.createFragment();
         String key = fragment.getClass().getName();

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -797,8 +797,8 @@ public static class LayoutParams extends LinearLayout.LayoutParams {
 
     /**
      * Upon a scroll ending, if the view is only partially visible then it will be snapped and
-     * scrolled to it's closest edge. For example, if the view only has it's bottom 25% displayed,
-     * it will be scrolled off screen completely. Conversely, if it's bottom 75% is visible then it
+     * scrolled to its closest edge. For example, if the view only has its bottom 25% displayed, it
+     * will be scrolled off screen completely. Conversely, if its bottom 75% is visible then it
      * will be scrolled fully into view.
      */
     public static final int SCROLL_FLAG_SNAP = 0x10;

File: lib/javatests/com/google/android/material/chip/ChipGroupTest.java
Patch:
@@ -23,12 +23,12 @@
 
 import androidx.appcompat.app.AppCompatActivity;
 import android.view.View;
+import androidx.test.core.app.ApplicationProvider;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.internal.DoNotInstrument;
 
 /** Tests for {@link com.google.android.material.chip.ChipGroup}. */
@@ -41,7 +41,7 @@ public class ChipGroupTest {
 
   @Before
   public void themeApplicationContext() {
-    RuntimeEnvironment.application.setTheme(
+    ApplicationProvider.getApplicationContext().setTheme(
         R.style.Theme_MaterialComponents_Light_NoActionBar_Bridge);
     AppCompatActivity activity = Robolectric.buildActivity(AppCompatActivity.class).setup().get();
     View inflated = activity.getLayoutInflater().inflate(R.layout.test_reflow_chipgroup, null);

File: lib/javatests/com/google/android/material/chip/ChipTest.java
Patch:
@@ -21,14 +21,14 @@
 import androidx.appcompat.app.AppCompatActivity;
 import android.text.TextUtils.TruncateAt;
 import android.view.View;
+import androidx.test.core.app.ApplicationProvider;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.rules.ExpectedException;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.internal.DoNotInstrument;
 
 /** Tests for {@link com.google.android.material.chip.Chip}. */
@@ -43,7 +43,7 @@ public class ChipTest {
 
   @Before
   public void themeApplicationContext() {
-    RuntimeEnvironment.application.setTheme(
+    ApplicationProvider.getApplicationContext().setTheme(
         R.style.Theme_MaterialComponents_Light_NoActionBar_Bridge);
     AppCompatActivity activity = Robolectric.buildActivity(AppCompatActivity.class).setup().get();
     View inflated = activity.getLayoutInflater().inflate(R.layout.test_action_chip, null);

File: lib/javatests/com/google/android/material/internal/ContextUtilsTest.java
Patch:
@@ -21,12 +21,12 @@
 import android.app.Activity;
 import android.content.ContextWrapper;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.test.core.app.ApplicationProvider;
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.internal.DoNotInstrument;
 
 /** Tests for {@link ContextUtils}. */
@@ -36,13 +36,13 @@ public class ContextUtilsTest {
 
   @Test
   public void testWithApplicationContext() {
-    Activity activity = ContextUtils.getActivity(RuntimeEnvironment.application);
+    Activity activity = ContextUtils.getActivity(ApplicationProvider.getApplicationContext());
     Assert.assertNull(activity);
   }
 
   @Test
   public void testWithContextWrapper() {
-    RuntimeEnvironment.application.setTheme(R.style.Theme_AppCompat);
+    ApplicationProvider.getApplicationContext().setTheme(R.style.Theme_AppCompat);
     AppCompatActivity appCompatActivity = Robolectric.setupActivity(AppCompatActivity.class);
     ContextWrapper contextWrapper = new ContextWrapper(appCompatActivity);
     Activity activity = ContextUtils.getActivity(contextWrapper);

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -28,7 +28,6 @@
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.TypedArray;
-import android.graphics.Paint;
 import android.graphics.Paint.Style;
 import android.graphics.Rect;
 import android.os.Parcel;
@@ -251,7 +250,6 @@ public BottomAppBar(Context context, @Nullable AttributeSet attrs, int defStyleA
     materialShapeDrawable.setShadowCompatibilityMode(SHADOW_COMPAT_MODE_ALWAYS);
     materialShapeDrawable.setShadowVerticalOffset(elevation / 2);
     materialShapeDrawable.setPaintStyle(Style.FILL);
-    materialShapeDrawable.setPaintFlags(Paint.ANTI_ALIAS_FLAG);
     setElevation(elevation);
     DrawableCompat.setTintList(materialShapeDrawable, backgroundTint);
     ViewCompat.setBackground(this, materialShapeDrawable);

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -28,7 +28,6 @@
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.TypedArray;
-import android.graphics.Paint;
 import android.graphics.Paint.Style;
 import android.graphics.Rect;
 import android.os.Parcel;
@@ -251,7 +250,6 @@ public BottomAppBar(Context context, @Nullable AttributeSet attrs, int defStyleA
     materialShapeDrawable.setShadowCompatibilityMode(SHADOW_COMPAT_MODE_ALWAYS);
     materialShapeDrawable.setShadowVerticalOffset(elevation / 2);
     materialShapeDrawable.setPaintStyle(Style.FILL);
-    materialShapeDrawable.setPaintFlags(Paint.ANTI_ALIAS_FLAG);
     setElevation(elevation);
     DrawableCompat.setTintList(materialShapeDrawable, backgroundTint);
     ViewCompat.setBackground(this, materialShapeDrawable);

File: catalog/java/io/material/catalog/textfield/TextFieldFilledDemoFragment.java
Patch:
@@ -47,7 +47,7 @@ public int getTextFieldContent() {
   @Override
   public View onCreateDemoView(
       LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle bundle) {
-    View view = layoutInflater.inflate(getTextFieldContent(), viewGroup, false);
+    View view = super.onCreateDemoView(layoutInflater, viewGroup, bundle);
     TextInputEditText startIconEditText = view.findViewById(R.id.edit_text_start_icon);
     Drawable startIcon =
         AppCompatResources.getDrawable(view.getContext(), R.drawable.ic_search_24px);

File: catalog/java/io/material/catalog/textfield/TextFieldOutlineDemoFragment.java
Patch:
@@ -47,7 +47,7 @@ public int getTextFieldContent() {
   @Override
   public View onCreateDemoView(
       LayoutInflater layoutInflater, @Nullable ViewGroup viewGroup, @Nullable Bundle bundle) {
-    View view = layoutInflater.inflate(getTextFieldContent(), viewGroup, false);
+    View view = super.onCreateDemoView(layoutInflater, viewGroup, bundle);
     TextInputEditText startIconEditText = view.findViewById(R.id.edit_text_start_icon);
     Drawable startIcon =
         AppCompatResources.getDrawable(view.getContext(), R.drawable.ic_search_24px);

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -231,6 +231,7 @@ public BottomAppBar(Context context, @Nullable AttributeSet attrs, int defStyleA
     ShapeAppearanceModel appBarModel = materialShapeDrawable.getShapeAppearanceModel();
     appBarModel.setTopEdge(topEdgeTreatment);
     materialShapeDrawable.setShadowCompatibilityMode(SHADOW_COMPAT_MODE_ALWAYS);
+    materialShapeDrawable.setShadowVerticalOffset(elevation / 2);
     materialShapeDrawable.setPaintStyle(Style.FILL);
     materialShapeDrawable.setPaintFlags(Paint.ANTI_ALIAS_FLAG);
     setElevation(elevation);

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1809,9 +1809,9 @@ public void setPasswordVisibilityToggleTintMode(@Nullable PorterDuff.Mode mode)
   }
 
   /**
-   * Handles visiblity for a password toggle icon when changing obfuscation in a password edit text.
-   * Public so that clients can override this method for custom UI changes when toggling the display
-   * of password text
+   * Handles visibility for a password toggle icon when changing obfuscation in a password edit
+   * text. Public so that clients can override this method for custom UI changes when toggling the
+   * display of password text
    *
    * @param shouldSkipAnimations true if the password toggle indicator icon should not animate
    *     changes

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -2082,7 +2082,7 @@ final int getErrorTextCurrentColor() {
   /**
    * An AccessibilityDelegate intended to be set on an {@link EditText} or {@link TextInputEditText}
    * with {@link
-   * TextInputLayout#setTextInputAccessibilityDelegate(TextInputLayout.AccessibilityDelegate}} to
+   * TextInputLayout#setTextInputAccessibilityDelegate(TextInputLayout.AccessibilityDelegate) to
    * provide attributes for accessibility that are managed by {@link TextInputLayout}.
    */
   public static class AccessibilityDelegate extends AccessibilityDelegateCompat {

File: lib/java/com/google/android/material/shape/ShapeAppearanceModel.java
Patch:
@@ -73,6 +73,7 @@ public ShapeAppearanceModel(ShapeAppearanceModel shapeAppearanceModel) {
 
   public ShapeAppearanceModel(
       Context context, AttributeSet attrs, @AttrRes int defStyleAttr, @StyleRes int defStyleRes) {
+    this();
     TypedArray a =
         ThemeEnforcement.obtainStyledAttributes(
             context, attrs, R.styleable.MaterialShape, defStyleAttr, defStyleRes);

File: lib/java/com/google/android/material/shape/RoundedCornerTreatment.java
Patch:
@@ -37,6 +37,6 @@ public RoundedCornerTreatment(float radius) {
   @Override
   public void getCornerPath(float angle, float interpolation, ShapePath shapePath) {
     shapePath.reset(0, radius * interpolation);
-    shapePath.addArc(0, 0, 2 * radius * interpolation, 2 * radius * interpolation, angle + 180, 90);
+    shapePath.addArc(0, 0, 2 * radius * interpolation, 2 * radius * interpolation, 180, angle);
   }
 }

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -1548,8 +1548,8 @@ public void draw(Canvas canvas) {
 
   @Override
   protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-    updatePasswordToggleView();
     super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+    updatePasswordToggleView();
   }
 
   private void updatePasswordToggleView() {

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -47,7 +47,7 @@ public class MaterialShapeDrawable extends Drawable implements TintAwareDrawable
 
   private static final float HALF_PI = (float) (Math.PI / 2.0);
 
-  private final Paint paint = new Paint();
+  private final Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
   // Inter-method state.
   private final Matrix[] cornerTransforms = new Matrix[4];
   private final Matrix[] edgeTransforms = new Matrix[4];

File: tests/javatests/com/google/android/material/appbar/AppBarLayoutBaseTest.java
Patch:
@@ -36,6 +36,7 @@
 import android.support.annotation.LayoutRes;
 import android.support.annotation.StringRes;
 import com.google.android.material.internal.BaseDynamicCoordinatorLayoutTest;
+import com.google.android.material.resources.TextAppearanceConfig;
 import com.google.android.material.testapp.R;
 import com.google.android.material.testutils.Shakespeare;
 import android.support.v4.view.ViewCompat;
@@ -72,6 +73,7 @@ protected static void performVerticalSwipeDownGesture(
   @CallSuper
   protected void configureContent(@LayoutRes final int layoutResId, @StringRes final int titleResId)
       throws Throwable {
+    TextAppearanceConfig.setShouldLoadFontSynchronously(true);
     onView(withId(R.id.coordinator_stub)).perform(inflateViewStub(layoutResId));
 
     mAppBar = mCoordinatorLayout.findViewById(R.id.app_bar);

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -149,14 +149,14 @@ public void onAnimationStart(Animator animation) {
       new TransformationListener<FloatingActionButton>() {
         @Override
         public void onScaleChanged(FloatingActionButton fab) {
-          materialShapeDrawable.setInterpolation(fab.getScaleY());
+          materialShapeDrawable.setInterpolation(isFabVisible() ? fab.getScaleY() : 0);
         }
 
         @Override
         public void onTranslationChanged(FloatingActionButton fab) {
           topEdgeTreatment.setHorizontalOffset(fab.getTranslationX());
           topEdgeTreatment.setCradleVerticalOffset(-fab.getTranslationY());
-          materialShapeDrawable.setInterpolation(fab.getScaleY());
+          materialShapeDrawable.setInterpolation(isFabVisible() ? fab.getScaleY() : 0);
         }
       };
 

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -545,7 +545,7 @@ private float calculateTextWidth(@Nullable CharSequence charSequence) {
    * Returns the width of the chip close icon plus padding, which only apply if the chip close icon
    * exists.
    */
-  private float calculateCloseIconWidth() {
+  float calculateCloseIconWidth() {
     if (showsCloseIcon()) {
       return closeIconStartPadding + closeIconSize + closeIconEndPadding;
     }

File: lib/java/com/google/android/material/button/MaterialButton.java
Patch:
@@ -537,7 +537,7 @@ public Mode getIconTintMode() {
   /** Updates the icon, icon tint, and icon tint mode for this button. */
   private void updateIcon() {
     if (icon != null) {
-      icon = icon.mutate();
+      icon = DrawableCompat.wrap(icon).mutate();
       DrawableCompat.setTintList(icon, iconTint);
       if (iconTintMode != null) {
         DrawableCompat.setTintMode(icon, iconTintMode);

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -1222,6 +1222,9 @@ private void applyChildDrawable(@Nullable Drawable drawable) {
         if (drawable.isStateful()) {
           drawable.setState(getState());
         }
+        if (drawable == chipIcon) {
+          DrawableCompat.setTintList(chipIcon, chipIconTint);
+        }
       }
     }
   }

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -27,6 +27,7 @@
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.TypedArray;
+import android.graphics.Paint;
 import android.graphics.Paint.Style;
 import android.graphics.Rect;
 import android.os.Parcel;
@@ -158,6 +159,7 @@ public BottomAppBar(Context context, @Nullable AttributeSet attrs, int defStyleA
     materialShapeDrawable = new MaterialShapeDrawable(appBarModel);
     materialShapeDrawable.setShadowEnabled(true);
     materialShapeDrawable.setPaintStyle(Style.FILL);
+    materialShapeDrawable.setPaintFlags(Paint.ANTI_ALIAS_FLAG);
     DrawableCompat.setTintList(materialShapeDrawable, backgroundTint);
     ViewCompat.setBackground(this, materialShapeDrawable);
   }

File: lib/java/com/google/android/material/shape/MaterialShapeDrawable.java
Patch:
@@ -400,12 +400,12 @@ public void getPathForSize(int width, int height, Path path) {
   }
 
   private void setCornerPathAndTransform(int index, int width, int height) {
-    getCoordinatesOfCorner(index, width, height, pointF);
     float angle = angleOfCorner(index, width, height);
     getCornerTreatmentForIndex(index).getCornerPath(angle, interpolation, cornerPaths[index]);
 
     float prevEdgeAngle = angleOfEdge((index - 1 + 4) % 4, width, height) + (float) Math.PI / 2f;
     cornerTransforms[index].reset();
+    getCoordinatesOfCorner(index, width, height, pointF);
     cornerTransforms[index].setTranslate(pointF.x, pointF.y);
     cornerTransforms[index].preRotate((float) Math.toDegrees(prevEdgeAngle));
   }

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -49,7 +49,7 @@ public MaterialCardView(Context context, AttributeSet attrs) {
   }
 
   public MaterialCardView(Context context, AttributeSet attrs, int defStyleAttr) {
-    super(context, attrs, defStyleAttr);
+    super(ThemeEnforcement.createThemedContext(context, defStyleAttr), attrs, defStyleAttr);
 
     TypedArray attributes =
         ThemeEnforcement.obtainStyledAttributes(

File: lib/java/com/google/android/material/textfield/TextInputLayout.java
Patch:
@@ -243,12 +243,12 @@ public TextInputLayout(Context context) {
     this(context, null);
   }
 
-  public TextInputLayout(Context context, AttributeSet attrs) {
+  public TextInputLayout(Context context, @Nullable AttributeSet attrs) {
     this(context, attrs, R.attr.textInputStyle);
   }
 
-  public TextInputLayout(Context context, AttributeSet attrs, int defStyleAttr) {
-    super(context, attrs, defStyleAttr);
+  public TextInputLayout(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
+    super(ThemeEnforcement.createThemedContext(context, defStyleAttr), attrs, defStyleAttr);
 
     setOrientation(VERTICAL);
     setWillNotDraw(false);

File: lib/java/com/google/android/material/bottomnavigation/BottomNavigationItemView.java
Patch:
@@ -92,6 +92,7 @@ public BottomNavigationItemView(Context context, AttributeSet attrs, int defStyl
     // the content description of the BottomNavigationItemView should be used for accessibility.
     ViewCompat.setImportantForAccessibility(smallLabel, ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);
     ViewCompat.setImportantForAccessibility(largeLabel, ViewCompat.IMPORTANT_FOR_ACCESSIBILITY_NO);
+    setFocusable(true);
     calculateTextScaleFactors(smallLabel.getTextSize(), largeLabel.getTextSize());
   }
 

File: lib/java/com/google/android/material/resources/TextAppearance.java
Patch:
@@ -142,7 +142,8 @@ public Typeface getFont(Context context) {
    * @param callback Callback to notify when font is available.
    * @see android.support.v7.widget.AppCompatTextHelper
    */
-  public void getFontAsync(Context context, TextPaint textPaint, @NonNull FontCallback callback) {
+  public void getFontAsync(
+      Context context, final TextPaint textPaint, @NonNull final FontCallback callback) {
     if (fontResolved) {
       updateTextPaintMeasureState(textPaint, font);
       return;

File: lib/java/com/google/android/material/internal/ThemeEnforcement.java
Patch:
@@ -168,7 +168,8 @@ private static void checkTextAppearance(
 
     if (!validTextAppearance) {
       throw new IllegalArgumentException(
-          "This component requires that you specify a valid TextAppearance attribute.");
+          "This component requires that you specify a valid TextAppearance attribute. Update your "
+              + "app theme to inherit from Theme.MaterialComponents (or a descendant).");
     }
   }
 

File: catalog/java/io/material/catalog/chip/ChipMainDemoFragment.java
Patch:
@@ -55,10 +55,10 @@ public View onCreateDemoView(
     Switch longTextSwitch = view.findViewById(R.id.cat_chip_text_length_switch);
     longTextSwitch.setOnCheckedChangeListener(
         (buttonView, isChecked) -> {
+          CharSequence updatedText =
+              getText(isChecked ? R.string.cat_chip_text_to_truncate : R.string.cat_chip_text);
           for (Chip chip : chips) {
-            CharSequence updatedText =
-                getText(isChecked ? R.string.cat_chip_text_to_truncate : R.string.cat_chip_text);
-            chip.setChipText(updatedText);
+            chip.setText(updatedText);
           }
         });
 

File: catalog/java/io/material/catalog/themeswitcher/ThemeSwitcherDialogFragment.java
Patch:
@@ -156,7 +156,8 @@ public ColorPalette(@StyleRes int themeOverlay, @StyleableRes int[] themeOverlay
 
       TypedArray a = getContext().obtainStyledAttributes(themeOverlay, themeOverlayAttrs);
       main = a.getColor(0, Color.TRANSPARENT);
-      dark = a.getColor(1, Color.TRANSPARENT);
+      dark = themeOverlayAttrs.length > 1 ? a.getColor(1, Color.TRANSPARENT) : Color.TRANSPARENT;
+
       a.recycle();
     }
   }

File: lib/java/com/google/android/material/textfield/IndicatorViewController.java
Patch:
@@ -347,7 +347,7 @@ void adjustIndicatorPadding() {
           ViewCompat.getPaddingStart(textInputView.getEditText()),
           0,
           ViewCompat.getPaddingEnd(textInputView.getEditText()),
-          textInputView.getEditText().getPaddingBottom());
+          0);
     }
   }
 

File: lib/java/com/google/android/material/tabs/TabLayout.java
Patch:
@@ -1586,10 +1586,12 @@ void selectTab(final Tab tab, boolean updateIndicator) {
           setSelectedTabView(newPosition);
         }
       }
+      // Setting selectedTab before dispatching 'tab unselected' events, so that currentTab's state
+      // will be interpreted as unselected
+      selectedTab = tab;
       if (currentTab != null) {
         dispatchTabUnselected(currentTab);
       }
-      selectedTab = tab;
       if (tab != null) {
         dispatchTabSelected(tab);
       }

File: lib/java/com/google/android/material/appbar/AppBarLayout.java
Patch:
@@ -62,7 +62,7 @@
  * app:layout_scrollFlags}.
  *
  * <p>This view depends heavily on being used as a direct child within a {@link CoordinatorLayout}.
- * If you use AppBarLayout within a different {@link ViewGroup}, most of it's functionality will not
+ * If you use AppBarLayout within a different {@link ViewGroup}, most of its functionality will not
  * work.
  *
  * <p>AppBarLayout also requires a separate scrolling sibling in order to know when to scroll. The

File: lib/java/com/google/android/material/bottomappbar/BottomAppBar.java
Patch:
@@ -693,7 +693,7 @@ public boolean onLayoutChild(
       FloatingActionButton fab = child.findDependentFab();
       if (fab != null) {
         updateFabPositionAndVisibility(fab, child);
-        fab.getContentRect(fabContentRect);
+        fab.getMeasuredContentRect(fabContentRect);
         child.setFabDiameter(fabContentRect.height());
       }
 

File: lib/java/com/google/android/material/textfield/TextInputEditText.java
Patch:
@@ -48,7 +48,7 @@ public TextInputEditText(Context context, AttributeSet attrs, int defStyleAttr)
   public InputConnection onCreateInputConnection(EditorInfo outAttrs) {
     final InputConnection ic = super.onCreateInputConnection(outAttrs);
     if (ic != null && outAttrs.hintText == null) {
-      // If we don't have a hint and our parent is a TextInputLayout, use it's hint for the
+      // If we don't have a hint and our parent is a TextInputLayout, use its hint for the
       // EditorInfo. This allows us to display a hint in 'extract mode'.
       ViewParent parent = getParent();
       while (parent instanceof View) {

File: lib/java/com/google/android/material/chip/ChipDrawable.java
Patch:
@@ -108,7 +108,7 @@
  *
  * <ul>
  *   <li>{@link ChipDrawable#setBounds(int, int, int, int)}, taking into account {@link
- *       ChipDrawable#getIntrinsicWidth()} and {@link ChipDrawable#getIntrinsicWidth()}.
+ *       ChipDrawable#getIntrinsicHeight()} and {@link ChipDrawable#getIntrinsicWidth()}.
  *   <li>{@link ChipDrawable#draw(Canvas)}
  *   <li>{@link ChipDrawable#setCallback(Callback)}, to support invalidations on the chip drawable
  *       or any of its child drawables. This includes animations.

File: lib/java/com/google/android/material/card/MaterialCardView.java
Patch:
@@ -86,12 +86,12 @@ public int getStrokeColor() {
    *
    * @param strokeWidth The width in pixels of the stroke.
    */
-  public void setStrokeWidth(@Dimension(unit = Dimension.PX) int strokeWidth) {
+  public void setStrokeWidth(@Dimension int strokeWidth) {
     cardViewHelper.setStrokeWidth(strokeWidth);
   }
 
   /** Returns the stroke width of this card view. */
-  @Dimension(unit = Dimension.PX)
+  @Dimension
   public int getStrokeWidth() {
     return cardViewHelper.getStrokeWidth();
   }

File: lib/java/com/google/android/material/card/MaterialCardViewHelper.java
Patch:
@@ -59,13 +59,13 @@ int getStrokeColor() {
     return strokeColor;
   }
 
-  void setStrokeWidth(@Dimension(unit = Dimension.PX) int strokeWidth) {
+  void setStrokeWidth(@Dimension int strokeWidth) {
     this.strokeWidth = strokeWidth;
     updateForeground();
     adjustContentPadding();
   }
 
-  @Dimension(unit = Dimension.PX)
+  @Dimension
   int getStrokeWidth() {
     return strokeWidth;
   }

File: lib/java/android/support/design/appbar/HeaderScrollingViewBehavior.java
Patch:
@@ -119,10 +119,10 @@ protected void layoutChild(
           parent.getWidth() - parent.getPaddingRight() - lp.rightMargin,
           parent.getHeight() + header.getBottom() - parent.getPaddingBottom() - lp.bottomMargin);
 
-      // TODO: Remove reflection once cl/190431932 is rolled forward
+      // TODO: Remove reflection once CoordinatorLayout#getLastWindowInsets() is public
       WindowInsetsCompat parentInsetsReflection = null;
       try {
-        Method method = CoordinatorLayout.class.getMethod("getLastWindowInsets");
+        Method method = CoordinatorLayout.class.getDeclaredMethod("getLastWindowInsets");
         method.setAccessible(true);
         parentInsetsReflection = (WindowInsetsCompat) method.invoke(parent);
       } catch (NoSuchMethodException e) {

File: lib/java/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -707,6 +707,9 @@ View findScrollingChild(View view) {
   }
 
   private float getYVelocity() {
+    if (velocityTracker == null) {
+      return 0;
+    }
     velocityTracker.computeCurrentVelocity(1000, maximumVelocity);
     return velocityTracker.getYVelocity(activePointerId);
   }

File: lib/java/android/support/design/chip/Chip.java
Patch:
@@ -97,6 +97,7 @@
 public class Chip extends AppCompatCheckBox implements Delegate {
 
   private static final int CLOSE_ICON_VIRTUAL_ID = 0;
+  private static final Rect EMPTY_BOUNDS = new Rect();
 
   private static final int[] SELECTED_STATE = new int[] {android.R.attr.state_selected};
 
@@ -575,7 +576,6 @@ protected int getVirtualViewAt(float x, float y) {
 
     @Override
     protected void getVisibleVirtualViews(List<Integer> virtualViewIds) {
-      virtualViewIds.add(HOST_ID);
       if (hasCloseIcon()) {
         virtualViewIds.add(CLOSE_ICON_VIRTUAL_ID);
       }
@@ -592,6 +592,7 @@ protected void onPopulateNodeForVirtualView(
         node.setEnabled(isEnabled());
       } else {
         node.setContentDescription("");
+        node.setBoundsInParent(EMPTY_BOUNDS);
       }
     }
 

File: lib/java/android/support/design/card/MaterialCardViewHelper.java
Patch:
@@ -33,7 +33,6 @@ class MaterialCardViewHelper {
   private static final int DEFAULT_STROKE_VALUE = -1;
   private final MaterialCardView materialCardView;
 
-  private float cornerRadius;
   private int strokeColor;
   private int strokeWidth;
 
@@ -42,7 +41,6 @@ public MaterialCardViewHelper(MaterialCardView card) {
   }
 
   public void loadFromAttributes(TypedArray attributes) {
-    cornerRadius = attributes.getDimensionPixelSize(R.styleable.CardView_cardCornerRadius, 0);
     strokeColor =
         attributes.getColor(R.styleable.MaterialCardView_strokeColor, DEFAULT_STROKE_VALUE);
     strokeWidth = attributes.getDimensionPixelSize(R.styleable.MaterialCardView_strokeWidth, 0);
@@ -57,7 +55,7 @@ public void loadFromAttributes(TypedArray attributes) {
    */
   private Drawable createBackgroundDrawable() {
     GradientDrawable bgDrawable = new GradientDrawable();
-    bgDrawable.setCornerRadius(cornerRadius);
+    bgDrawable.setCornerRadius(materialCardView.getRadius());
     // In order to set a stroke, a size and color both need to be set. We default to a zero-width
     // width size, but won't set a default color. This prevents drawing a stroke that blends in with
     // the card but that could affect card spacing.

File: lib/java/android/support/design/widget/TextInputLayout.java
Patch:
@@ -1212,7 +1212,7 @@ void setTextAppearanceCompatWithErrorFallback(TextView textView, @StyleRes int t
       // Probably caused by our theme not extending from Theme.Design*. Instead
       // we manually set something appropriate
       TextViewCompat.setTextAppearance(textView, R.style.TextAppearance_AppCompat_Caption);
-      textView.setTextColor(ContextCompat.getColor(getContext(), R.color.error_color_material));
+      textView.setTextColor(ContextCompat.getColor(getContext(), R.color.design_error));
     }
   }
 

File: lib/java/android/support/design/widget/TextInputLayout.java
Patch:
@@ -230,12 +230,11 @@ public TextInputLayout(Context context) {
   }
 
   public TextInputLayout(Context context, AttributeSet attrs) {
-    this(context, attrs, 0);
+    this(context, attrs, R.attr.textInputStyle);
   }
 
   public TextInputLayout(Context context, AttributeSet attrs, int defStyleAttr) {
-    // Can't call through to super(Context, AttributeSet, int) since it doesn't exist on API 10
-    super(context, attrs);
+    super(context, attrs, defStyleAttr);
 
     setOrientation(VERTICAL);
     setWillNotDraw(false);

File: lib/java/android/support/design/widget/CollapsingTextHelper.java
Patch:
@@ -180,11 +180,11 @@ void setCollapsedBounds(int left, int top, int right, int bottom) {
   }
 
   float calculateCollapsedTextWidth() {
-    if (textToDraw == null) {
+    if (text == null) {
       return 0;
     }
     getTextPaintCollapsed(tmpPaint);
-    return tmpPaint.measureText(textToDraw, 0, textToDraw.length());
+    return tmpPaint.measureText(text, 0, text.length());
   }
 
   float getCollapsedTextHeight() {

File: lib/java/android/support/design/widget/BottomNavigationView.java
Patch:
@@ -109,7 +109,7 @@ public BottomNavigationView(Context context) {
   }
 
   public BottomNavigationView(Context context, AttributeSet attrs) {
-    this(context, attrs, 0);
+    this(context, attrs, R.attr.bottomNavigationStyle);
   }
 
   public BottomNavigationView(Context context, AttributeSet attrs, int defStyleAttr) {

File: lib/java/android/support/design/widget/BottomNavigationView.java
Patch:
@@ -109,7 +109,7 @@ public BottomNavigationView(Context context) {
   }
 
   public BottomNavigationView(Context context, AttributeSet attrs) {
-    this(context, attrs, 0);
+    this(context, attrs, R.attr.bottomNavigationStyle);
   }
 
   public BottomNavigationView(Context context, AttributeSet attrs, int defStyleAttr) {

File: lib/java/android/support/design/widget/TextInputLayout.java
Patch:
@@ -230,7 +230,7 @@ public TextInputLayout(Context context) {
   }
 
   public TextInputLayout(Context context, AttributeSet attrs) {
-    this(context, attrs, 0);
+    this(context, attrs, R.attr.textInputStyle);
   }
 
   public TextInputLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: lib/java/android/support/design/card/MaterialCardView.java
Patch:
@@ -39,7 +39,7 @@ public MaterialCardView(Context context) {
   }
 
   public MaterialCardView(Context context, AttributeSet attrs) {
-    this(context, attrs, android.support.design.card.R.attr.cardViewStyle);
+    this(context, attrs, R.attr.materialCardViewStyle);
   }
 
   public MaterialCardView(Context context, AttributeSet attrs, int defStyleAttr) {

File: lib/java/android/support/design/chip/ChipDrawable.java
Patch:
@@ -735,14 +735,13 @@ private void calculateChipTextBounds(Rect bounds, RectF outBounds) {
     if (chipText != null) {
       float offsetFromStart = chipStartPadding + calculateChipIconWidth() + textStartPadding;
       float offsetFromEnd = chipEndPadding + calculateCloseIconWidth() + textEndPadding;
-      ;
 
       if (DrawableCompat.getLayoutDirection(this) == View.LAYOUT_DIRECTION_LTR) {
         outBounds.left = bounds.left + offsetFromStart;
         outBounds.right = bounds.right - offsetFromEnd;
       } else {
+        outBounds.left = bounds.left + offsetFromEnd;
         outBounds.right = bounds.right - offsetFromStart;
-        outBounds.left = bounds.left + offsetFromStart;
       }
 
       // Top and bottom included for completion. Don't position the chip text vertically based on

File: lib/java/android/support/design/chip/Chip.java
Patch:
@@ -186,6 +186,7 @@ public void setChipDrawable(@NonNull ChipDrawable drawable) {
                 chipDrawable,
                 null);
         chipDrawable.setUseCompatRipple(false);
+        //noinspection NewApi
         ViewCompat.setBackground(this, ripple);
       } else {
         chipDrawable.setUseCompatRipple(true);

File: lib/java/android/support/design/materialswitch/MaterialSwitch.java
Patch:
@@ -111,7 +111,6 @@ public MaterialSwitch(Context context, AttributeSet attrs, int defStyleAttr) {
     @StyleRes
     int textAppearanceStyleRes =
         attributes.getResourceId(R.styleable.MaterialSwitch_android_textAppearance, 0);
-    setTextAppearance(textAppearanceStyleRes);
     TextViewCompat.setTextAppearance(this, textAppearanceStyleRes);
     int gravity = attributes.getInt(R.styleable.MaterialSwitch_android_gravity, Gravity.CENTER);
     setGravity(gravity);

File: lib/java/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -303,7 +303,7 @@ public boolean onInterceptTouchEvent(CoordinatorLayout parent, V child, MotionEv
     // We have to handle cases that the ViewDragHelper does not capture the bottom sheet because
     // it is not the top most view of its parent. This is not necessary when the touch event is
     // happening over the scrolling content as nested scrolling logic handles that case.
-    View scroll = nestedScrollingChildRef.get();
+    View scroll = nestedScrollingChildRef != null ? nestedScrollingChildRef.get() : null;
     return action == MotionEvent.ACTION_MOVE
         && scroll != null
         && !ignoreEvents

File: lib/java/android/support/design/internal/BottomNavigationPresenter.java
Patch:
@@ -55,7 +55,9 @@ public MenuView getMenuView(ViewGroup root) {
 
   @Override
   public void updateMenuView(boolean cleared) {
-    if (mUpdateSuspended) return;
+    if (mUpdateSuspended) {
+      return;
+    }
     if (cleared) {
       mMenuView.buildMenuView();
     } else {

File: lib/java/android/support/design/internal/ForegroundLinearLayout.java
Patch:
@@ -18,6 +18,7 @@
 
 import static android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
@@ -26,7 +27,6 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.RequiresApi;
 import android.support.annotation.RestrictTo;
-import android.support.design.R;
 import android.support.v7.widget.LinearLayoutCompat;
 import android.util.AttributeSet;
 import android.view.Gravity;
@@ -229,6 +229,7 @@ public void draw(@NonNull Canvas canvas) {
     }
   }
 
+  @TargetApi(21)
   @RequiresApi(21)
   @Override
   public void drawableHotspotChanged(float x, float y) {

File: lib/java/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -25,7 +25,6 @@
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.StateListDrawable;
 import android.support.annotation.RestrictTo;
-import android.support.design.R;
 import android.support.v4.content.res.ResourcesCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.view.AccessibilityDelegateCompat;

File: lib/java/android/support/design/internal/ScrimInsetsFrameLayout.java
Patch:
@@ -25,7 +25,6 @@
 import android.graphics.drawable.Drawable;
 import android.support.annotation.NonNull;
 import android.support.annotation.RestrictTo;
-import android.support.design.R;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.WindowInsetsCompat;
 import android.util.AttributeSet;

File: lib/java/android/support/design/theme/ThemeUtils.java
Patch:
@@ -22,9 +22,6 @@
 
 /**
  * Utility methods to check Theme compatibility with components.
- *
- * <p>TODO: mark {@link android.support.design.widget.ThemeUtils} as @deprecated when
- * making this class OpenSource.
  */
 public class ThemeUtils {
 

File: lib/java/android/support/design/widget/AppBarLayout.java
Patch:
@@ -33,6 +33,7 @@
 import android.support.annotation.VisibleForTesting;
 import android.support.design.R;
 import android.support.design.animation.AnimationUtils;
+import android.support.design.theme.ThemeUtils;
 import android.support.v4.util.ObjectsCompat;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.ViewCompat;

File: lib/java/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -39,6 +39,7 @@
 import android.support.annotation.StyleRes;
 import android.support.design.R;
 import android.support.design.animation.AnimationUtils;
+import android.support.design.theme.ThemeUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.util.ObjectsCompat;

File: lib/java/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -42,6 +42,7 @@
 import android.support.annotation.RestrictTo;
 import android.support.annotation.VisibleForTesting;
 import android.support.design.R;
+import android.support.design.theme.ThemeUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.util.ObjectsCompat;

File: lib/java/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -43,6 +43,7 @@
 import android.support.design.animation.MotionSpec;
 import android.support.design.resources.MaterialResources;
 import android.support.design.stateful.ExtendableSavedState;
+import android.support.design.theme.ThemeUtils;
 import android.support.design.widget.FloatingActionButtonImpl.InternalVisibilityChangedListener;
 import android.support.design.widget.expandable.ExpandableTransformationWidget;
 import android.support.design.widget.expandable.ExpandableWidgetHelper;

File: lib/java/android/support/design/widget/NavigationView.java
Patch:
@@ -35,6 +35,7 @@
 import android.support.design.internal.NavigationMenu;
 import android.support.design.internal.NavigationMenuPresenter;
 import android.support.design.internal.ScrimInsetsFrameLayout;
+import android.support.design.theme.ThemeUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.ViewCompat;

File: lib/java/android/support/design/widget/TabLayout.java
Patch:
@@ -54,6 +54,7 @@
 import android.support.design.animation.AnimationUtils;
 import android.support.design.resources.MaterialResources;
 import android.support.design.ripple.RippleUtils;
+import android.support.design.theme.ThemeUtils;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.util.Pools;
 import android.support.v4.view.GravityCompat;

File: tests/javatests/android/support/design/testutils/BottomNavigationViewActions.java
Patch:
@@ -22,8 +22,8 @@
 import android.graphics.drawable.Drawable;
 import android.support.annotation.IdRes;
 import android.support.annotation.Nullable;
+import android.support.design.bottomnavigation.LabelVisibilityMode;
 import android.support.design.widget.BottomNavigationView;
-import android.support.design.widget.BottomNavigationView.LabelVisibilityMode;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
 import android.view.View;

File: lib/java/android/support/design/widget/TabLayout.java
Patch:
@@ -392,7 +392,7 @@ public TabLayout(Context context, AttributeSet attrs, int defStyleAttr) {
             attrs, R.styleable.TabLayout, defStyleAttr, R.style.Widget_Design_TabLayout);
 
     slidingTabIndicator.setSelectedIndicatorHeight(
-        a.getDimensionPixelSize(R.styleable.TabLayout_tabIndicatorHeight, 0));
+        a.getDimensionPixelSize(R.styleable.TabLayout_tabIndicatorHeight, -1));
     slidingTabIndicator.setSelectedIndicatorColor(
         a.getColor(R.styleable.TabLayout_tabIndicatorColor, 0));
     setSelectedTabIndicator(
@@ -2440,7 +2440,7 @@ public void draw(Canvas canvas) {
       if (tabSelectedIndicator != null) {
         indicatorHeight = tabSelectedIndicator.getIntrinsicHeight();
       }
-      if (selectedIndicatorHeight != 0) {
+      if (selectedIndicatorHeight >= 0) {
         indicatorHeight = selectedIndicatorHeight;
       }
 

File: lib/src/android/support/design/animation/ArgbEvaluatorCompat.java
Patch:
@@ -25,7 +25,7 @@
  * fixes for older versions of Android.
  */
 public class ArgbEvaluatorCompat implements TypeEvaluator<Integer> {
-  private static final ArgbEvaluatorCompat sInstance = new ArgbEvaluatorCompat();
+  private static final ArgbEvaluatorCompat instance = new ArgbEvaluatorCompat();
 
   /**
    * Returns an instance of <code>ArgbEvaluatorCompat</code> that may be used in {@link
@@ -35,7 +35,7 @@ public class ArgbEvaluatorCompat implements TypeEvaluator<Integer> {
    * @return An instance of <code>ArgbEvalutor</code>.
    */
   public static ArgbEvaluatorCompat getInstance() {
-    return sInstance;
+    return instance;
   }
 
   /**

File: lib/src/android/support/design/widget/CircularBorderDrawableLollipop.java
Patch:
@@ -25,7 +25,7 @@ class CircularBorderDrawableLollipop extends CircularBorderDrawable {
 
   @Override
   public void getOutline(Outline outline) {
-    copyBounds(mRect);
-    outline.setOval(mRect);
+    copyBounds(rect);
+    outline.setOval(rect);
   }
 }

File: testing/java/android/support/design/testapp/base/BaseTestActivity.java
Patch:
@@ -23,7 +23,7 @@
 /** Base activity type for all Material Components test fixtures. */
 public abstract class BaseTestActivity extends RecreatableAppCompatActivity {
 
-  private boolean mDestroyed;
+  private boolean destroyed;
 
   @Override
   protected void onCreate(Bundle savedInstanceState) {
@@ -53,11 +53,11 @@ protected void onContentViewSet() {}
   @Override
   protected void onDestroy() {
     super.onDestroy();
-    mDestroyed = true;
+    destroyed = true;
   }
 
   @Override
   public boolean isDestroyed() {
-    return mDestroyed;
+    return destroyed;
   }
 }

File: tests/javatests/android/support/design/testutils/CoordinatorLayoutUtils.java
Patch:
@@ -22,15 +22,15 @@
 public class CoordinatorLayoutUtils {
 
   public static class DependentBehavior extends CoordinatorLayout.Behavior<View> {
-    private final View mDependency;
+    private final View dependency;
 
     public DependentBehavior(View dependency) {
-      mDependency = dependency;
+      this.dependency = dependency;
     }
 
     @Override
     public boolean layoutDependsOn(CoordinatorLayout parent, View child, View dependency) {
-      return mDependency != null && dependency == mDependency;
+      return this.dependency != null && dependency == this.dependency;
     }
   }
 }

File: tests/javatests/android/support/design/widget/TabLayoutTest.java
Patch:
@@ -215,7 +215,7 @@ public void testPointerIcon() {
 
     final MotionEvent event = MotionEvent.obtain(0, 0, MotionEvent.ACTION_HOVER_MOVE, 0, 0, 0);
     for (int i = 0; i < tabCount; i++) {
-      assertEquals(expectedIcon, tabLayout.getTabAt(i).mView.onResolvePointerIcon(event, 0));
+      assertEquals(expectedIcon, tabLayout.getTabAt(i).view.onResolvePointerIcon(event, 0));
     }
   }
 

File: lib/src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -17,7 +17,6 @@
 package android.support.design.widget;
 
 import static android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP;
-import static android.support.design.widget.ViewUtils.objectEquals;
 
 import android.animation.ValueAnimator;
 import android.content.Context;
@@ -34,6 +33,7 @@
 import android.support.annotation.VisibleForTesting;
 import android.support.design.R;
 import android.support.design.animation.AnimationUtils;
+import android.support.v4.util.ObjectsCompat;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.WindowInsetsCompat;
@@ -593,7 +593,7 @@ WindowInsetsCompat onWindowInsetChanged(final WindowInsetsCompat insets) {
     }
 
     // If our insets have changed, keep them and invalidate the scroll ranges...
-    if (!objectEquals(mLastInsets, newInsets)) {
+    if (!ObjectsCompat.equals(mLastInsets, newInsets)) {
       mLastInsets = newInsets;
       invalidateScrollRanges();
     }

File: lib/src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -18,7 +18,6 @@
 
 import static android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP;
 import static android.support.design.widget.MathUtils.constrain;
-import static android.support.design.widget.ViewUtils.objectEquals;
 
 import android.animation.ValueAnimator;
 import android.content.Context;
@@ -42,6 +41,7 @@
 import android.support.design.animation.AnimationUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
+import android.support.v4.util.ObjectsCompat;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.WindowInsetsCompat;
@@ -281,7 +281,7 @@ WindowInsetsCompat onWindowInsetChanged(final WindowInsetsCompat insets) {
     }
 
     // If our insets have changed, keep them and invalidate the scroll ranges...
-    if (!objectEquals(mLastInsets, newInsets)) {
+    if (!ObjectsCompat.equals(mLastInsets, newInsets)) {
       mLastInsets = newInsets;
       requestLayout();
     }

File: lib/src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -17,7 +17,6 @@
 package android.support.design.widget;
 
 import static android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP;
-import static android.support.design.widget.ViewUtils.objectEquals;
 
 import android.content.Context;
 import android.content.res.Resources;
@@ -45,6 +44,7 @@
 import android.support.design.R;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
+import android.support.v4.util.ObjectsCompat;
 import android.support.v4.util.Pools;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.GravityCompat;
@@ -350,7 +350,7 @@ public void setStatusBarBackgroundColor(@ColorInt int color) {
   }
 
   final WindowInsetsCompat setWindowInsets(WindowInsetsCompat insets) {
-    if (!objectEquals(mLastInsets, insets)) {
+    if (!ObjectsCompat.equals(mLastInsets, insets)) {
       mLastInsets = insets;
       mDrawStatusBarBackground = insets != null && insets.getSystemWindowInsetTop() > 0;
       setWillNotDraw(!mDrawStatusBarBackground && getBackground() == null);

File: lib/src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -659,14 +659,13 @@ private void prepareChildren() {
           continue;
         }
         final View other = getChildAt(j);
-        final LayoutParams otherLp = getResolvedLayoutParams(other);
-        if (otherLp.dependsOn(this, other, view)) {
+        if (lp.dependsOn(this, view, other)) {
           if (!mChildDag.contains(other)) {
             // Make sure that the other node is added
             mChildDag.addNode(other);
           }
           // Now add the dependency to the graph
-          mChildDag.addEdge(view, other);
+          mChildDag.addEdge(other, view);
         }
       }
     }

File: testing/java/android/support/design/testapp/base/BaseTestActivity.java
Patch:
@@ -18,10 +18,10 @@
 
 import android.os.Bundle;
 import android.support.annotation.LayoutRes;
-import android.support.v7.app.AppCompatActivity;
 import android.view.WindowManager;
 
-public abstract class BaseTestActivity extends AppCompatActivity {
+/** Base activity type for all Material Components test fixtures. */
+public abstract class BaseTestActivity extends RecreatableAppCompatActivity {
 
   private boolean mDestroyed;
 

File: lib/src/android/support/design/internal/BottomNavigationItemView.java
Patch:
@@ -131,7 +131,6 @@ public MenuItemImpl getItemData() {
   public void setTitle(CharSequence title) {
     mSmallLabel.setText(title);
     mLargeLabel.setText(title);
-    setContentDescription(title);
   }
 
   @Override

File: lib/src/android/support/design/internal/BottomNavigationItemView.java
Patch:
@@ -31,6 +31,7 @@
 import android.support.v4.view.ViewCompat;
 import android.support.v7.view.menu.MenuItemImpl;
 import android.support.v7.view.menu.MenuView;
+import android.support.v7.widget.TooltipCompat;
 import android.util.AttributeSet;
 import android.view.Gravity;
 import android.view.LayoutInflater;
@@ -98,7 +99,7 @@ public void initialize(MenuItemImpl itemData, int menuType) {
     setTitle(itemData.getTitle());
     setId(itemData.getItemId());
     setContentDescription(itemData.getContentDescription());
-    ViewCompat.setTooltipText(this, itemData.getTooltipText());
+    TooltipCompat.setTooltipText(this, itemData.getTooltipText());
     setVisibility(itemData.isVisible() ? View.VISIBLE : View.GONE);
   }
 

File: lib/src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -35,6 +35,7 @@
 import android.support.v4.widget.TextViewCompat;
 import android.support.v7.view.menu.MenuItemImpl;
 import android.support.v7.view.menu.MenuView;
+import android.support.v7.widget.TooltipCompat;
 import android.util.AttributeSet;
 import android.util.TypedValue;
 import android.view.LayoutInflater;
@@ -112,7 +113,7 @@ public void initialize(MenuItemImpl itemData, int menuType) {
     setIcon(itemData.getIcon());
     setActionView(itemData.getActionView());
     setContentDescription(itemData.getContentDescription());
-    ViewCompat.setTooltipText(this, itemData.getTooltipText());
+    TooltipCompat.setTooltipText(this, itemData.getTooltipText());
     adjustAppearance();
   }
 

File: lib/src/android/support/design/widget/TabLayout.java
Patch:
@@ -65,6 +65,7 @@
 import android.support.v4.widget.TextViewCompat;
 import android.support.v7.app.ActionBar;
 import android.support.v7.content.res.AppCompatResources;
+import android.support.v7.widget.TooltipCompat;
 import android.text.Layout;
 import android.text.TextUtils;
 import android.util.AttributeSet;
@@ -2053,7 +2054,7 @@ private void updateTextAndIcon(
         }
       }
 
-      ViewCompat.setTooltipText(this, hasText ? null : contentDesc);
+      TooltipCompat.setTooltipText(this, hasText ? null : contentDesc);
     }
 
     public Tab getTab() {

File: lib/src/android/support/design/internal/BottomNavigationItemView.java
Patch:
@@ -97,6 +97,8 @@ public void initialize(MenuItemImpl itemData, int menuType) {
     setIcon(itemData.getIcon());
     setTitle(itemData.getTitle());
     setId(itemData.getItemId());
+    setContentDescription(itemData.getContentDescription());
+    ViewCompat.setTooltipText(this, itemData.getTooltipText());
     setVisibility(itemData.isVisible() ? View.VISIBLE : View.GONE);
   }
 

File: lib/src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -111,6 +111,8 @@ public void initialize(MenuItemImpl itemData, int menuType) {
     setTitle(itemData.getTitle());
     setIcon(itemData.getIcon());
     setActionView(itemData.getActionView());
+    setContentDescription(itemData.getContentDescription());
+    ViewCompat.setTooltipText(this, itemData.getTooltipText());
     adjustAppearance();
   }
 

File: lib/src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -626,7 +626,7 @@ LayoutParams getResolvedLayoutParams(View child) {
       }
       if (defaultBehavior != null) {
         try {
-          result.setBehavior(defaultBehavior.value().newInstance());
+          result.setBehavior(defaultBehavior.value().getDeclaredConstructor().newInstance());
         } catch (Exception e) {
           Log.e(
               TAG,

File: lib/src/android/support/design/backlayer/BackLayerSiblingBehavior.java
Patch:
@@ -190,6 +190,7 @@ public boolean onLayoutChild(CoordinatorLayout parent, View child, int layoutDir
         int right = parent.getWidth() - collapsedWidth;
         child.offsetLeftAndRight(right - child.getRight());
         break;
+      default: // do nothing
     }
 
     if (backLayerLayout.isExpanded()) {
@@ -221,9 +222,9 @@ public boolean onInterceptTouchEvent(CoordinatorLayout parent, View child, Motio
 
   @Override
   protected boolean onExpandedStateChange(
-      View dependency, View child, boolean expanded, boolean animated) {
+      View dependency, View child, final boolean expanded, boolean animated) {
     // Translate the content layer to the desired position.
-    BackLayerLayout backLayerLayout = (BackLayerLayout) dependency;
+    final BackLayerLayout backLayerLayout = (BackLayerLayout) dependency;
     animateTranslation(
         backLayerLayout,
         child,

File: lib/src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -296,7 +296,9 @@ public boolean onTouchEvent(CoordinatorLayout parent, V child, MotionEvent event
     if (mState == STATE_DRAGGING && action == MotionEvent.ACTION_DOWN) {
       return true;
     }
-    mViewDragHelper.processTouchEvent(event);
+    if (mViewDragHelper != null) {
+      mViewDragHelper.processTouchEvent(event);
+    }
     // Record the velocity
     if (action == MotionEvent.ACTION_DOWN) {
       reset();

File: testing/java/android/support/design/testapp/base/BaseTestActivity.java
Patch:
@@ -17,6 +17,7 @@
 package android.support.design.testapp.base;
 
 import android.os.Bundle;
+import android.support.annotation.LayoutRes;
 import android.support.v7.app.AppCompatActivity;
 import android.view.WindowManager;
 
@@ -44,6 +45,7 @@ public void finish() {
     overridePendingTransition(0, 0);
   }
 
+  @LayoutRes
   protected abstract int getContentViewLayoutResId();
 
   protected void onContentViewSet() {}

File: lib/src/android/support/design/chip/Chip.java
Patch:
@@ -127,7 +127,7 @@ public Chip(Context context, AttributeSet attrs, int defStyleAttr) {
 
     ChipDrawable drawable =
         ChipDrawable.createFromAttributes(
-            context, attrs, defStyleAttr, R.style.Widget_MaterialComponents_Chip);
+            context, attrs, defStyleAttr, R.style.Widget_MaterialComponents_Chip_Action);
     setButtonDrawable(drawable);
 
     touchHelper = new ChipTouchHelper(this);

File: lib/src/android/support/design/canvas/CanvasCompat.java
Patch:
@@ -29,6 +29,8 @@
 @RestrictTo(LIBRARY_GROUP)
 public class CanvasCompat {
 
+  private CanvasCompat() {}
+
   /**
    * Convenience for {@link Canvas#saveLayer(RectF, Paint)} but instead of taking a entire Paint
    * object it takes only the {@code alpha} parameter.

File: lib/src/android/support/design/drawable/DrawableUtils.java
Patch:
@@ -29,6 +29,8 @@
 @RestrictTo(Scope.LIBRARY_GROUP)
 public class DrawableUtils {
 
+  private DrawableUtils() {}
+
   /** Returns a tint filter for the given tint and mode. */
   @Nullable
   public static PorterDuffColorFilter updateTintFilter(

File: lib/src/android/support/design/resources/MaterialResources.java
Patch:
@@ -32,6 +32,8 @@
 @RestrictTo(LIBRARY_GROUP)
 public class MaterialResources {
 
+  private MaterialResources() {}
+
   /**
    * Returns the {@link ColorStateList} from the given attributes. The resource can include
    * themeable attributes, regardless of API level.

File: lib/src/android/support/design/widget/IndicatorViewController.java
Patch:
@@ -245,6 +245,7 @@ public void onAnimationStart(Animator animator) {
     }
     textInputView.updateEditTextBackground();
     textInputView.updateLabelState(animate);
+    textInputView.updateTextInputBoxState();
   }
 
   private void setCaptionViewVisibilities(
@@ -428,6 +429,7 @@ void setErrorEnabled(boolean enabled) {
       removeIndicator(mErrorView, ERROR_INDEX);
       mErrorView = null;
       textInputView.updateEditTextBackground();
+      textInputView.updateTextInputBoxState();
     }
     mErrorEnabled = enabled;
   }
@@ -465,6 +467,7 @@ void setHelperTextEnabled(boolean enabled) {
       removeIndicator(mHelperTextView, HELPER_INDEX);
       mHelperTextView = null;
       textInputView.updateEditTextBackground();
+      textInputView.updateTextInputBoxState();
     }
     mHelperTextEnabled = enabled;
   }

File: tests/javatests/android/support/design/testutils/TextInputLayoutActions.java
Patch:
@@ -18,8 +18,8 @@
 
 import static android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom;
 
-import android.content.res.ColorStateList;
 import android.graphics.Typeface;
+import android.support.annotation.ColorInt;
 import android.support.design.widget.TextInputLayout;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
@@ -228,7 +228,7 @@ public void perform(UiController uiController, View view) {
     };
   }
 
-  public static ViewAction setBoxStrokeColor(final ColorStateList colorStateList) {
+  public static ViewAction setBoxStrokeColor(@ColorInt final int strokeColor) {
     return new ViewAction() {
       @Override
       public Matcher<View> getConstraints() {
@@ -243,7 +243,7 @@ public String getDescription() {
       @Override
       public void perform(UiController uiController, View view) {
         TextInputLayout layout = (TextInputLayout) view;
-        layout.setBoxStrokeColor(colorStateList);
+        layout.setBoxStrokeColor(strokeColor);
       }
     };
   }

File: lib/src/android/support/design/widget/FloatingActionButtonImpl.java
Patch:
@@ -268,21 +268,21 @@ final void updateImageMatrixScale() {
     setImageMatrixScale(getImageMatrixScale());
   }
 
-  private void setImageMatrixScale(float scale) {
+  final void setImageMatrixScale(float scale) {
     Matrix matrix = tmpMatrix;
     calculateImageMatrixFromScale(scale, matrix);
     mView.setImageMatrix(matrix);
   }
 
-  private float getImageMatrixScale(){
+  final float getImageMatrixScale(){
     return calculateScaleFromImageMatrix(mView.getImageMatrix());
   }
 
   private void calculateImageMatrixFromScale(float scale, Matrix matrix) {
     matrix.reset();
 
     Drawable drawable = mView.getDrawable();
-    if (drawable != null) {
+    if (drawable != null && maxImageSize != 0) {
       // First make sure our image respects mMaxImageSize.
       RectF drawableBounds = mTmpRectF1;
       RectF imageBounds = mTmpRectF2;

File: lib/src/android/support/design/widget/FloatingActionButtonImpl.java
Patch:
@@ -441,7 +441,7 @@ private AnimatorSet createAnimator(MotionSpec spec, float opacity, float scale,
     getImageMatrixForScale(iconScale, tmpMatrix);
     animator =
         ObjectAnimator.ofObject(
-            mView, ImageMatrixProperty.IMAGE_MATRIX, new MatrixEvaluator(), tmpMatrix);
+            mView, new ImageMatrixProperty(), new MatrixEvaluator(), new Matrix(tmpMatrix));
     spec.getTiming("iconScale").apply(animator);
     animators.add(animator);
 

File: lib/src/android/support/design/widget/IndicatorViewController.java
Patch:
@@ -32,6 +32,7 @@
 import android.support.annotation.StyleRes;
 import android.support.design.R;
 import android.support.design.animation.AnimationUtils;
+import android.support.design.animation.AnimatorSetCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.Space;
 import android.support.v4.widget.TextViewCompat;
@@ -213,7 +214,7 @@ private void updateCaptionViewsVisibility(
           captionToHide,
           captionToShow);
 
-      captionAnimator.playTogether(captionAnimatorList);
+      AnimatorSetCompat.playTogether(captionAnimator, captionAnimatorList);
       final TextView captionViewToHide = getCaptionViewFromDisplayState(captionToHide);
       final TextView captionViewToShow = getCaptionViewFromDisplayState(captionToShow);
 

File: lib/src/android/support/design/widget/transformation/FabTransformationScrimBehavior.java
Patch:
@@ -23,6 +23,7 @@
 import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.design.animation.AnimatorSetCompat;
 import android.support.design.animation.MotionTiming;
 import android.support.design.widget.CoordinatorLayout;
 import android.support.design.widget.FloatingActionButton;
@@ -75,7 +76,7 @@ protected AnimatorSet onCreateExpandedStateChangeAnimation(
     createScrimAnimation(child, expanded, isAnimating, animations, listeners);
 
     AnimatorSet set = new AnimatorSet();
-    set.playTogether(animations);
+    AnimatorSetCompat.playTogether(set, animations);
     set.addListener(
         new AnimatorListenerAdapter() {
           @Override

File: lib/src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -38,7 +38,6 @@
 import android.os.Parcelable;
 import android.support.annotation.DrawableRes;
 import android.support.annotation.IntDef;
-import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
 import android.support.annotation.StyleRes;
@@ -357,7 +356,7 @@ public void setTypeface(@Nullable Typeface typeface) {
   /**
    * Returns the typeface used for the hint and any label views (such as counter and error views).
    */
-  @NonNull
+  @Nullable
   public Typeface getTypeface() {
     return mTypeface;
   }

File: tests/javatests/android/support/design/backlayer/BackLayerLayoutTestBase.java
Patch:
@@ -328,7 +328,7 @@ public void setUp(
     CoordinatorLayout.LayoutParams layoutParams =
         (CoordinatorLayout.LayoutParams) backLayer.getLayoutParams();
     int absoluteGravity =
-        Gravity.getAbsoluteGravity(layoutParams.gravity, backLayer.getLayoutDirection());
+        Gravity.getAbsoluteGravity(layoutParams.gravity, ViewCompat.getLayoutDirection(backLayer));
     isBackLayerAtEndSide = absoluteGravity == Gravity.RIGHT || absoluteGravity == Gravity.BOTTOM;
     isHorizontal = absoluteGravity == Gravity.RIGHT || absoluteGravity == Gravity.LEFT;
 

File: tests/javatests/android/support/design/testutils/TestUtils.java
Patch:
@@ -179,7 +179,7 @@ public static int getScreenOrientation(Activity activity) {
    * #getScreenOrientation(Activity)} and {@link #resetScreenOrientation(Activity, int)} to ensure
    * that it leaves the device in a known good state.
    */
-  public static void setScreenOrientation(Activity activity, int orientation) {
+  public static void setScreenOrientation(final Activity activity, final int orientation) {
     activity.setRequestedOrientation(
         orientation == ORIENTATION_PORTRAIT
             ? ActivityInfo.SCREEN_ORIENTATION_PORTRAIT
@@ -213,7 +213,7 @@ public static void switchScreenOrientation(Activity activity) {
    * call {@link #getScreenOrientation(Activity)} at the beginning of the test to save the old
    * orientation.
    */
-  public static void resetScreenOrientation(Activity activity, int oldOrientation) {
+  public static void resetScreenOrientation(final Activity activity, final int oldOrientation) {
     activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED);
     PollingCheck.waitFor(
         new PollingCheck.PollingCheckCondition() {

File: lib/src/android/support/design/backlayer/BackLayerLayout.java
Patch:
@@ -291,7 +291,7 @@ void measureExpanded() {
     CoordinatorLayout.LayoutParams layoutParams =
         (CoordinatorLayout.LayoutParams) getLayoutParams();
     final int absoluteGravity =
-        Gravity.getAbsoluteGravity(layoutParams.gravity, getLayoutDirection());
+        Gravity.getAbsoluteGravity(layoutParams.gravity, ViewCompat.getLayoutDirection(this));
     int heightMeasureSpec = originalHeightMeasureSpec;
     int widthMeasureSpec = originalWidthMeasureSpec;
     // In order to know the measurements for a expanded version of the back layer we need to

File: lib/src/android/support/design/backlayer/CollapsedBackLayerContents.java
Patch:
@@ -16,7 +16,9 @@
 
 package android.support.design.backlayer;
 
+import android.annotation.TargetApi;
 import android.content.Context;
+import android.os.Build;
 import android.support.annotation.AttrRes;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -48,6 +50,7 @@ public CollapsedBackLayerContents(
     super(context, attrs, defStyleAttr);
   }
 
+  @TargetApi(Build.VERSION_CODES.LOLLIPOP)
   public CollapsedBackLayerContents(
       @NonNull Context context,
       @Nullable AttributeSet attrs,

File: lib/src/android/support/design/widget/transformation/FabTransformationBehavior.java
Patch:
@@ -25,6 +25,7 @@
 import android.animation.ObjectAnimator;
 import android.animation.ValueAnimator;
 import android.animation.ValueAnimator.AnimatorUpdateListener;
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.graphics.Color;
@@ -188,6 +189,7 @@ private void createAnimatorSetWorkaroundAnimation(List<Animator> animations) {
   protected abstract FabTransformationSpec onCreateMotionSpec(
       View dependency, View child, boolean expanded);
 
+  @TargetApi(VERSION_CODES.LOLLIPOP)
   private void createElevationAnimation(
       View dependency,
       View child,

File: lib/src/android/support/design/widget/transformation/ExpandableBehavior.java
Patch:
@@ -84,12 +84,12 @@ protected abstract boolean onExpandedStateChange(
 
   @CallSuper
   @Override
-  public boolean onLayoutChild(CoordinatorLayout parent, View child, int layoutDirection) {
+  public boolean onLayoutChild(CoordinatorLayout parent, final View child, int layoutDirection) {
     if (!ViewCompat.isLaidOut(child)) {
-      ExpandableWidget dep = findExpandableWidget(parent, child);
+      final ExpandableWidget dep = findExpandableWidget(parent, child);
       if (dep != null && didStateChange(dep.isExpanded())) {
         currentState = dep.isExpanded() ? STATE_EXPANDED : STATE_COLLAPSED;
-        @State int expectedState = currentState;
+        @State final int expectedState = currentState;
         child
             .getViewTreeObserver()
             .addOnPreDrawListener(

File: lib/src/android/support/design/widget/transformation/FabTransformationScrimBehavior.java
Patch:
@@ -68,7 +68,7 @@ public boolean onTouchEvent(CoordinatorLayout parent, View child, MotionEvent ev
   @NonNull
   @Override
   protected AnimatorSet onCreateExpandedStateChangeAnimation(
-      View dependency, View child, boolean expanded, boolean isAnimating) {
+      View dependency, final View child, final boolean expanded, boolean isAnimating) {
     List<Animator> animations = new ArrayList<>();
     List<AnimatorListener> listeners = new ArrayList<>();
 

File: lib/src/android/support/design/animation/AnimationUtils.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.motion;
+package android.support.design.animation;
 
 import android.animation.TimeInterpolator;
 import android.support.annotation.RestrictTo;

File: lib/src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -33,7 +33,7 @@
 import android.support.annotation.RestrictTo;
 import android.support.annotation.VisibleForTesting;
 import android.support.design.R;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.WindowInsetsCompat;

File: lib/src/android/support/design/widget/BaseTransientBottomBar.java
Patch:
@@ -17,7 +17,7 @@
 package android.support.design.widget;
 
 import static android.support.annotation.RestrictTo.Scope.LIBRARY_GROUP;
-import static android.support.design.motion.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR;
+import static android.support.design.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR;
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
@@ -706,6 +706,8 @@ public boolean onInterceptTouchEvent(
         case MotionEvent.ACTION_CANCEL:
           SnackbarManager.getInstance().restoreTimeoutIfPaused(mManagerCallback);
           break;
+        default:
+          break;
       }
       return super.onInterceptTouchEvent(parent, child, event);
     }

File: lib/src/android/support/design/widget/CollapsingTextHelper.java
Patch:
@@ -29,7 +29,7 @@
 import android.os.Build;
 import android.support.annotation.ColorInt;
 import android.support.annotation.VisibleForTesting;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.v4.text.TextDirectionHeuristicsCompat;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.view.ViewCompat;

File: lib/src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -39,7 +39,7 @@
 import android.support.annotation.RestrictTo;
 import android.support.annotation.StyleRes;
 import android.support.design.R;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.view.GravityCompat;
@@ -1254,6 +1254,8 @@ public void onOffsetChanged(AppBarLayout layout, int verticalOffset) {
           case LayoutParams.COLLAPSE_MODE_PARALLAX:
             offsetHelper.setTopAndBottomOffset(Math.round(-verticalOffset * lp.mParallaxMult));
             break;
+          default:
+            break;
         }
       }
 

File: lib/src/android/support/design/widget/FloatingActionButtonImpl.java
Patch:
@@ -32,7 +32,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.design.R;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.view.ViewCompat;

File: lib/src/android/support/design/widget/HideBottomViewOnScrollBehavior.java
Patch:
@@ -17,7 +17,7 @@
 package android.support.design.widget;
 
 import android.content.Context;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.design.widget.CoordinatorLayout.Behavior;
 import android.support.v4.view.ViewCompat;
 import android.util.AttributeSet;

File: lib/src/android/support/design/widget/IndicatorViewController.java
Patch:
@@ -31,7 +31,7 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.StyleRes;
 import android.support.design.R;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.Space;
 import android.support.v4.widget.TextViewCompat;

File: lib/src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -44,7 +44,7 @@
 import android.support.annotation.StyleRes;
 import android.support.annotation.VisibleForTesting;
 import android.support.design.R;
-import android.support.design.motion.AnimationUtils;
+import android.support.design.animation.AnimationUtils;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.view.AbsSavedState;

File: lib/src/android/support/design/backlayer/BackLayerSiblingBehavior.java
Patch:
@@ -36,6 +36,9 @@
  *
  * <p>Using this behavior requires **exactly** one sibling view of type {@link BackLayerLayout}
  * which will be used to calculate the measurements and positions for the content layer view.
+ *
+ * <p>You MUST NOT use a {@link ViewGroup.OnHierarchyChangedListener} on the view to which you apply
+ * this behavior, as this behavior uses OnHierarchyChangedListener for internal housekeeping.
  */
 public class BackLayerSiblingBehavior extends Behavior<View> {
 

File: demos/java/io/material/demo/shrine/filters/FiltersActivity.java
Patch:
@@ -32,7 +32,7 @@ protected void onCreate(Bundle savedInstanceState) {
   }
 
   private void initToolbar() {
-    Toolbar toolbar = (Toolbar) findViewById(R.id.AppBar);
+    Toolbar toolbar = findViewById(R.id.AppBar);
     setSupportActionBar(toolbar);
     getSupportActionBar().setTitle(getString(R.string.shrine_filter_page_title));
     getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: demos/javatests/io/material/demo/shrine/products/ProductListActivityTest.java
Patch:
@@ -40,7 +40,7 @@ public class ProductListActivityTest {
   @Before
   public void setUp() {
     productListActivity = Robolectric.setupActivity(ProductListActivity.class);
-    productsRecyclerView = (RecyclerView) productListActivity.findViewById(R.id.ProductGrid);
+    productsRecyclerView = productListActivity.findViewById(R.id.ProductGrid);
   }
 
   @Test

File: lib/src/android/support/design/internal/BottomNavigationItemView.java
Patch:
@@ -83,9 +83,9 @@ public BottomNavigationItemView(Context context, AttributeSet attrs, int defStyl
 
     LayoutInflater.from(context).inflate(R.layout.design_bottom_navigation_item, this, true);
     setBackgroundResource(R.drawable.design_bottom_navigation_item_background);
-    mIcon = (ImageView) findViewById(R.id.icon);
-    mSmallLabel = (TextView) findViewById(R.id.smallLabel);
-    mLargeLabel = (TextView) findViewById(R.id.largeLabel);
+    mIcon = findViewById(R.id.icon);
+    mSmallLabel = findViewById(R.id.smallLabel);
+    mLargeLabel = findViewById(R.id.largeLabel);
   }
 
   @Override

File: lib/src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -90,7 +90,7 @@ public NavigationMenuItemView(Context context, AttributeSet attrs, int defStyleA
     setOrientation(HORIZONTAL);
     LayoutInflater.from(context).inflate(R.layout.design_navigation_menu_item, this, true);
     mIconSize = context.getResources().getDimensionPixelSize(R.dimen.design_navigation_icon_size);
-    mTextView = (CheckedTextView) findViewById(R.id.design_menu_item_text);
+    mTextView = findViewById(R.id.design_menu_item_text);
     mTextView.setDuplicateParentStateEnabled(true);
     ViewCompat.setAccessibilityDelegate(mTextView, mAccessibilityDelegate);
   }

File: lib/src/android/support/design/internal/SnackbarContentLayout.java
Patch:
@@ -55,8 +55,8 @@ public SnackbarContentLayout(Context context, AttributeSet attrs) {
   @Override
   protected void onFinishInflate() {
     super.onFinishInflate();
-    mMessageView = (TextView) findViewById(R.id.snackbar_text);
-    mActionView = (Button) findViewById(R.id.snackbar_action);
+    mMessageView = findViewById(R.id.snackbar_text);
+    mActionView = findViewById(R.id.snackbar_action);
   }
 
   public TextView getMessageView() {

File: lib/src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -352,7 +352,7 @@ private void ensureToolbar() {
 
     if (mToolbarId != -1) {
       // If we have an ID set, try and find it and it's direct parent to us
-      mToolbar = (Toolbar) findViewById(mToolbarId);
+      mToolbar = findViewById(mToolbarId);
       if (mToolbar != null) {
         mToolbarDirectChild = findDirectChild(mToolbar);
       }

File: lib/src/android/support/design/widget/TabLayout.java
Patch:
@@ -1662,11 +1662,11 @@ final void update() {
           mIconView.setImageDrawable(null);
         }
 
-        mCustomTextView = (TextView) custom.findViewById(android.R.id.text1);
+        mCustomTextView = custom.findViewById(android.R.id.text1);
         if (mCustomTextView != null) {
           mDefaultMaxLines = TextViewCompat.getMaxLines(mCustomTextView);
         }
-        mCustomIconView = (ImageView) custom.findViewById(android.R.id.icon);
+        mCustomIconView = custom.findViewById(android.R.id.icon);
       } else {
         // We do not have a custom view. Remove one if it already exists
         if (mCustomView != null) {

File: testing/java/android/support/design/testapp/AppBarLayoutCollapsePinActivity.java
Patch:
@@ -29,7 +29,7 @@ protected int getContentViewLayoutResId() {
 
   @Override
   protected void onContentViewSet() {
-    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+    Toolbar toolbar = findViewById(R.id.toolbar);
     setSupportActionBar(toolbar);
   }
 }

File: testing/java/android/support/design/testapp/BottomSheetBehaviorActivity.java
Patch:
@@ -40,10 +40,10 @@ protected int getContentViewLayoutResId() {
 
   @Override
   protected void onContentViewSet() {
-    mCoordinatorLayout = (CoordinatorLayout) findViewById(R.id.coordinator);
-    mBottomSheet = (LinearLayout) findViewById(R.id.bottom_sheet);
+    mCoordinatorLayout = findViewById(R.id.coordinator);
+    mBottomSheet = findViewById(R.id.bottom_sheet);
     mBehavior = BottomSheetBehavior.from(mBottomSheet);
-    mFab = (FloatingActionButton) findViewById(R.id.fab);
+    mFab = findViewById(R.id.fab);
     Intent intent = getIntent();
     if (intent != null) {
       int initialState = intent.getIntExtra(EXTRA_INITIAL_STATE, -1);

File: testing/java/android/support/design/testapp/CoordinatorLayoutActivity.java
Patch:
@@ -33,7 +33,7 @@ protected int getContentViewLayoutResId() {
 
   @Override
   protected void onContentViewSet() {
-    mContainer = (FrameLayout) findViewById(R.id.container);
-    mCoordinatorLayout = (CoordinatorLayout) findViewById(R.id.coordinator);
+    mContainer = findViewById(R.id.container);
+    mCoordinatorLayout = findViewById(R.id.coordinator);
   }
 }

File: testing/java/android/support/design/testapp/ExpandableTransformationActivity.java
Patch:
@@ -35,7 +35,7 @@ protected int getContentViewLayoutResId() {
 
   @Override
   protected void onContentViewSet() {
-    fab = (FloatingActionButton) findViewById(R.id.fab);
+    fab = findViewById(R.id.fab);
     sheet = findViewById(R.id.sheet);
     scrim = findViewById(R.id.scrim);
   }

File: testing/java/android/support/design/testapp/TabLayoutWithViewPagerActivity.java
Patch:
@@ -26,7 +26,7 @@ protected int getContentViewLayoutResId() {
 
   @Override
   protected void onContentViewSet() {
-    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+    Toolbar toolbar = findViewById(R.id.toolbar);
     setSupportActionBar(toolbar);
     getSupportActionBar().setDisplayHomeAsUpEnabled(true);
   }

File: testing/java/android/support/design/testapp/custom/CustomSnackbar.java
Patch:
@@ -34,14 +34,14 @@ public CustomSnackbar(
 
   /** Sets the title of this custom snackbar. */
   public CustomSnackbar setTitle(String title) {
-    TextView titleView = (TextView) getView().findViewById(R.id.custom_snackbar_title);
+    TextView titleView = getView().findViewById(R.id.custom_snackbar_title);
     titleView.setText(title);
     return this;
   }
 
   /** Sets the subtitle of this custom snackbar. */
   public CustomSnackbar setSubtitle(String subtitle) {
-    TextView subtitleView = (TextView) getView().findViewById(R.id.custom_snackbar_subtitle);
+    TextView subtitleView = getView().findViewById(R.id.custom_snackbar_subtitle);
     subtitleView.setText(subtitle);
     return this;
   }

File: tests/javatests/android/support/design/backlayer/BackLayerLayoutTestBase.java
Patch:
@@ -314,9 +314,9 @@ public void setUp(
     activity = activityTestRule.getActivity();
     resources = activity.getResources();
 
-    coordinatorLayout = (CoordinatorLayout) activity.findViewById(coordinatorLayoutId);
-    backLayer = (BackLayerLayout) activity.findViewById(backLayerId);
-    contentLayer = (NestedScrollView) activity.findViewById(contentLayerId);
+    coordinatorLayout = activity.findViewById(coordinatorLayoutId);
+    backLayer = activity.findViewById(backLayerId);
+    contentLayer = activity.findViewById(contentLayerId);
     primaryExtraContent = activity.findViewById(primaryExtraContentId);
     secondaryExtraContent = activity.findViewById(secondaryExtraContentId);
 

File: tests/javatests/android/support/design/widget/AppBarWithCollapsingToolbarStateRestoreTest.java
Patch:
@@ -42,7 +42,7 @@ public class AppBarWithCollapsingToolbarStateRestoreTest {
   @Test
   public void testRotateAndRestore() {
     final Activity activity = activityTestRule.getActivity();
-    final AppBarLayout appBar = (AppBarLayout) activity.findViewById(R.id.app_bar);
+    final AppBarLayout appBar = activity.findViewById(R.id.app_bar);
 
     // Save the orientation state.
     int oldOrientation = TestUtils.getScreenOrientation(activity);

File: tests/javatests/android/support/design/widget/AppBarWithToolbarAndTabsTest.java
Patch:
@@ -41,7 +41,7 @@ protected void configureContent(@LayoutRes int layoutResId, @StringRes int title
       throws Throwable {
     super.configureContent(layoutResId, titleResId);
 
-    mTabLayout = (TabLayout) mAppBar.findViewById(R.id.tabs);
+    mTabLayout = mAppBar.findViewById(R.id.tabs);
     String[] tabTitles = new String[5];
     System.arraycopy(Cheeses.sCheeseStrings, 0, tabTitles, 0, 5);
     onView(withId(R.id.tabs)).perform(addTabs(tabTitles));

File: tests/javatests/android/support/design/widget/AppBarWithToolbarTest.java
Patch:
@@ -146,7 +146,7 @@ public void testRequestRectangleWithChildThatDoesNotRequireScroll() throws Throw
           @Override
           public void run() {
             final ViewGroup scrollingContentInner =
-                (ViewGroup) scrollingContent.findViewById(R.id.scrolling_content_inner);
+                scrollingContent.findViewById(R.id.scrolling_content_inner);
             View child = scrollingContentInner.getChildAt(0);
             Rect rect = new Rect(0, 0, child.getWidth(), child.getHeight());
             child.requestRectangleOnScreen(rect, true);
@@ -180,7 +180,7 @@ public void testRequestRectangleWithChildThatDoesRequireScroll() throws Throwabl
           @Override
           public void run() {
             final ViewGroup scrollingContentInner =
-                (ViewGroup) scrollingContent.findViewById(R.id.scrolling_content_inner);
+                scrollingContent.findViewById(R.id.scrolling_content_inner);
             View child =
                 scrollingContentInner.getChildAt(scrollingContentInner.getChildCount() - 1);
             Rect rect = new Rect(0, 0, child.getWidth(), child.getHeight());

File: tests/javatests/android/support/design/widget/BaseDynamicCoordinatorLayoutTest.java
Patch:
@@ -96,9 +96,7 @@ public void perform(UiController uiController, View view) {
         viewStub.setLayoutResource(layoutResId);
         viewStub.inflate();
 
-        mCoordinatorLayout =
-            (CoordinatorLayout)
-                activityTestRule.getActivity().findViewById(viewStub.getInflatedId());
+        mCoordinatorLayout = activityTestRule.getActivity().findViewById(viewStub.getInflatedId());
 
         uiController.loopMainThreadUntilIdle();
       }

File: tests/javatests/android/support/design/widget/BottomNavigationViewScrollTest.java
Patch:
@@ -55,10 +55,9 @@ protected static void performVerticalSwipeDownGesture(
   protected void configureContent(@LayoutRes final int layoutResId) throws Throwable {
     onView(withId(R.id.coordinator_stub)).perform(inflateViewStub(layoutResId));
 
-    bottomNavigationView =
-        (BottomNavigationView) mCoordinatorLayout.findViewById(R.id.bottom_navigation);
+    bottomNavigationView = mCoordinatorLayout.findViewById(R.id.bottom_navigation);
 
-    TextView dialogue = (TextView) mCoordinatorLayout.findViewById(R.id.textview_dialogue);
+    TextView dialogue = mCoordinatorLayout.findViewById(R.id.textview_dialogue);
     if (dialogue != null) {
       onView(withId(R.id.textview_dialogue))
           .perform(setText(TextUtils.concat(Shakespeare.DIALOGUE)));

File: tests/javatests/android/support/design/widget/BottomNavigationViewTest.java
Patch:
@@ -82,7 +82,7 @@ public class BottomNavigationViewTest {
   @Before
   public void setUp() throws Exception {
     final BottomNavigationViewActivity activity = activityTestRule.getActivity();
-    mBottomNavigation = (BottomNavigationView) activity.findViewById(R.id.bottom_navigation);
+    mBottomNavigation = activity.findViewById(R.id.bottom_navigation);
 
     final Resources res = activity.getResources();
     mMenuStringContent = new HashMap<>(MENU_CONTENT_ITEM_IDS.length);

File: tests/javatests/android/support/design/widget/CustomSnackbarTest.java
Patch:
@@ -70,7 +70,7 @@ private interface DismissAction {
 
   @Before
   public void setup() {
-    mCoordinatorLayout = (CoordinatorLayout) activityTestRule.getActivity().findViewById(R.id.col);
+    mCoordinatorLayout = activityTestRule.getActivity().findViewById(R.id.col);
   }
 
   private void verifySnackbarContent(

File: tests/javatests/android/support/design/widget/NavigationViewTest.java
Patch:
@@ -112,8 +112,8 @@ public class NavigationViewTest {
   @Before
   public void setUp() throws Exception {
     final NavigationViewActivity activity = activityTestRule.getActivity();
-    mDrawerLayout = (DrawerLayout) activity.findViewById(R.id.drawer_layout);
-    mNavigationView = (NavigationTestView) mDrawerLayout.findViewById(R.id.start_drawer);
+    mDrawerLayout = activity.findViewById(R.id.drawer_layout);
+    mNavigationView = mDrawerLayout.findViewById(R.id.start_drawer);
 
     // Close the drawer to reset the state for the next test
     onView(withId(R.id.drawer_layout)).perform(closeDrawer(GravityCompat.START));

File: tests/javatests/android/support/design/widget/SnackbarTest.java
Patch:
@@ -81,7 +81,7 @@ private interface DismissAction {
 
   @Before
   public void setup() {
-    mCoordinatorLayout = (CoordinatorLayout) activityTestRule.getActivity().findViewById(R.id.col);
+    mCoordinatorLayout = activityTestRule.getActivity().findViewById(R.id.col);
   }
 
   private void verifySnackbarContent(

File: tests/javatests/android/support/design/widget/SnackbarWithFabTest.java
Patch:
@@ -43,7 +43,7 @@ public class SnackbarWithFabTest {
 
   @Before
   public void setup() {
-    mCoordinatorLayout = (CoordinatorLayout) activityTestRule.getActivity().findViewById(R.id.col);
+    mCoordinatorLayout = activityTestRule.getActivity().findViewById(R.id.col);
   }
 
   @Test

File: tests/javatests/android/support/design/widget/SnackbarWithTranslucentNavBarTest.java
Patch:
@@ -47,7 +47,7 @@ public class SnackbarWithTranslucentNavBarTest {
 
   @Before
   public void setup() {
-    mCoordinatorLayout = (CoordinatorLayout) activityTestRule.getActivity().findViewById(R.id.col);
+    mCoordinatorLayout = activityTestRule.getActivity().findViewById(R.id.col);
   }
 
   @Test

File: tests/javatests/android/support/design/widget/TabLayoutPoolingTest.java
Patch:
@@ -44,14 +44,14 @@ public void testUsingTabsFromOtherInstance() {
 
     // TabLayout1 has items added via the layout, so we'll just check they're
     // there first
-    final TabLayout tabLayout1 = (TabLayout) activity.findViewById(R.id.tabs_1);
+    final TabLayout tabLayout1 = activity.findViewById(R.id.tabs_1);
     assertTrue(tabLayout1.getTabCount() > 0);
 
     // Now remove all tabs. TabLayout will pool the Tab instances...
     tabLayout1.removeAllTabs();
 
     // Now add some tabs to the second TabLayout and make sure that we don't crash
-    final TabLayout tabLayout2 = (TabLayout) activity.findViewById(R.id.tabs_2);
+    final TabLayout tabLayout2 = activity.findViewById(R.id.tabs_2);
     tabLayout2.addTab(tabLayout2.newTab());
     tabLayout2.addTab(tabLayout2.newTab());
     tabLayout2.addTab(tabLayout2.newTab());

File: tests/javatests/android/support/design/widget/TabLayoutTest.java
Patch:
@@ -248,7 +248,7 @@ public void run() {
             activityTestRule.getActivity().setContentView(R.layout.design_tabs_fixed_width);
           }
         });
-    final TabLayout tabs = (TabLayout) activityTestRule.getActivity().findViewById(R.id.tabs);
+    final TabLayout tabs = activityTestRule.getActivity().findViewById(R.id.tabs);
     assertEquals(TabLayout.MODE_SCROLLABLE, tabs.getTabMode());
 
     final TabLayoutScrollIdlingResource idler = new TabLayoutScrollIdlingResource(tabs);

File: tests/javatests/android/support/design/widget/TabLayoutWithViewPagerTest.java
Patch:
@@ -244,8 +244,8 @@ public void perform(UiController uiController, View view) {
   @Before
   public void setUp() throws Exception {
     final TabLayoutWithViewPagerActivity activity = activityTestRule.getActivity();
-    mTabLayout = (TabLayout) activity.findViewById(R.id.tabs);
-    mViewPager = (ViewPager) activity.findViewById(R.id.tabs_viewpager);
+    mTabLayout = activity.findViewById(R.id.tabs);
+    mViewPager = activity.findViewById(R.id.tabs_viewpager);
 
     mDefaultPagerAdapter = new ColorPagerAdapter();
     mDefaultPagerAdapter.add("Red", Color.RED);

File: lib/src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -211,7 +211,7 @@ public CoordinatorLayout(Context context, AttributeSet attrs, int defStyleAttr)
       final float density = res.getDisplayMetrics().density;
       final int count = mKeylines.length;
       for (int i = 0; i < count; i++) {
-        mKeylines[i] *= density;
+        mKeylines[i] = (int) (mKeylines[i] * density);
       }
     }
     mStatusBarBackground = a.getDrawable(R.styleable.CoordinatorLayout_statusBarBackground);

File: lib/src/android/support/design/widget/CollapsingTextHelper.java
Patch:
@@ -27,6 +27,7 @@
 import android.graphics.Typeface;
 import android.os.Build;
 import android.support.annotation.ColorInt;
+import android.support.annotation.VisibleForTesting;
 import android.support.v4.text.TextDirectionHeuristicsCompat;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.view.ViewCompat;
@@ -396,7 +397,8 @@ private int getCurrentExpandedTextColor() {
   }
 
   @ColorInt
-  private int getCurrentCollapsedTextColor() {
+  @VisibleForTesting
+  int getCurrentCollapsedTextColor() {
     if (mState != null) {
       return mCollapsedTextColor.getColorForState(mState, 0);
     } else {

File: tests/javatests/android/support/design/widget/TextInputLayoutTest.java
Patch:
@@ -328,7 +328,6 @@ public void testExtractUiHintSet() {
 
     assertEquals(INPUT_TEXT, info.hintText);
   }
-
   @UiThreadTest
   @Test
   public void testDrawableStateChanged() {

File: lib/src/android/support/design/stateful/ExtendableSavedState.java
Patch:
@@ -23,7 +23,7 @@
 import android.os.Parcelable;
 import android.support.annotation.RestrictTo;
 import android.support.v4.util.SimpleArrayMap;
-import android.view.View.BaseSavedState;
+import android.support.v4.view.AbsSavedState;
 
 /**
  * Class for widgets that want to save and restore their own state in {@link
@@ -33,7 +33,7 @@
  * @hide
  */
 @RestrictTo(LIBRARY_GROUP)
-public class ExtendableSavedState extends BaseSavedState {
+public class ExtendableSavedState extends AbsSavedState {
 
   public final SimpleArrayMap<String, Bundle> extendableStates;
 

File: lib/src/android/support/design/backlayer/BackLayerSiblingBehavior.java
Patch:
@@ -175,10 +175,10 @@ public void onBeforeExpand() {
         end = backLayerLayout.getExpandedWidth();
         break;
       case Gravity.BOTTOM:
-        end = backLayerLayout.getMinimumHeight() - backLayerLayout.getExpandedHeight();
+        end = ViewCompat.getMinimumHeight(backLayerLayout) - backLayerLayout.getExpandedHeight();
         break;
       case Gravity.RIGHT:
-        end = backLayerLayout.getMinimumWidth() - backLayerLayout.getExpandedWidth();
+        end = ViewCompat.getMinimumWidth(backLayerLayout) - backLayerLayout.getExpandedWidth();
         break;
     }
     animate(

File: tests/javatests/android/support/design/widget/TextInputLayoutTest.java
Patch:
@@ -295,7 +295,6 @@ public void testExtractUiHintSet() {
     assertEquals(INPUT_TEXT, info.hintText);
   }
 
-  /** Regression test for b/31663756. */
   @UiThreadTest
   @Test
   public void testDrawableStateChanged() {

File: lib/src/android/support/design/internal/TextScale.java
Patch:
@@ -20,7 +20,6 @@
 
 import android.animation.Animator;
 import android.animation.ValueAnimator;
-import android.support.annotation.RequiresApi;
 import android.support.annotation.RestrictTo;
 import android.support.transition.Transition;
 import android.support.transition.TransitionValues;
@@ -30,7 +29,6 @@
 
 /** @hide */
 @RestrictTo(LIBRARY_GROUP)
-@RequiresApi(14)
 public class TextScale extends Transition {
   private static final String PROPNAME_SCALE = "android:textscale:scale";
 

File: lib/src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -793,7 +793,7 @@ private FloatingActionButtonImpl getImpl() {
 
   private FloatingActionButtonImpl createImpl() {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-      return new FloatingActionButtonLollipop(this, new ShadowDelegateImpl());
+      return new FloatingActionButtonImplLollipop(this, new ShadowDelegateImpl());
     } else {
       return new FloatingActionButtonImpl(this, new ShadowDelegateImpl());
     }

File: lib/src/android/support/design/widget/FloatingActionButtonImplLollipop.java
Patch:
@@ -33,11 +33,11 @@
 import android.view.View;
 
 @RequiresApi(21)
-class FloatingActionButtonLollipop extends FloatingActionButtonImpl {
+class FloatingActionButtonImplLollipop extends FloatingActionButtonImpl {
 
   private InsetDrawable mInsetDrawable;
 
-  FloatingActionButtonLollipop(
+  FloatingActionButtonImplLollipop(
       VisibilityAwareImageButton view, ShadowViewDelegate shadowViewDelegate) {
     super(view, shadowViewDelegate);
   }

File: lib/src/android/support/design/internal/BottomNavigationMenuView.java
Patch:
@@ -330,7 +330,9 @@ public void updateMenuView() {
 
     for (int i = 0; i < menuSize; i++) {
       mPresenter.setUpdateSuspended(true);
-      mButtons[i].initialize((MenuItemImpl) mMenu.getItem(i), 0);
+      if (mButtons[i] != null) {
+        mButtons[i].initialize((MenuItemImpl) mMenu.getItem(i), 0);
+      }
       mPresenter.setUpdateSuspended(false);
     }
   }

File: tests/javatests/android/support/design/widget/AppBarWithCollapsingToolbarStateRestoreTest.java
Patch:
@@ -68,7 +68,7 @@ public boolean canProceed() {
 
   @Test
   public void testRotateAndRestore() {
-    Activity activity = activityTestRule.getActivity();
+    final Activity activity = activityTestRule.getActivity();
     final AppBarLayout appBar = (AppBarLayout) activity.findViewById(R.id.app_bar);
 
     // Swipe up and collapse the AppBarLayout

File: tests/javatests/android/support/design/widget/BottomNavigationViewTest.java
Patch:
@@ -37,6 +37,7 @@
 import static org.mockito.Mockito.verifyNoMoreInteractions;
 import static org.mockito.Mockito.when;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.res.Resources;
 import android.os.Build;
@@ -466,6 +467,7 @@ public void run() {
   @Test
   @SmallTest
   @SdkSuppress(minSdkVersion = Build.VERSION_CODES.N)
+  @TargetApi(Build.VERSION_CODES.N)
   public void testPointerIcon() throws Throwable {
     final Activity activity = activityTestRule.getActivity();
     final PointerIcon expectedIcon = PointerIcon.getSystemIcon(activity, PointerIcon.TYPE_HAND);

File: tests/javatests/android/support/design/widget/TabLayoutTest.java
Patch:
@@ -34,6 +34,7 @@
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
+import android.annotation.TargetApi;
 import android.os.Build;
 import android.support.design.testapp.R;
 import android.support.test.annotation.UiThreadTest;
@@ -202,6 +203,7 @@ public void testMultipleTabsWithCustomLayoutSelection2() {
   @Test
   @UiThreadTest
   @SdkSuppress(minSdkVersion = Build.VERSION_CODES.N)
+  @TargetApi(Build.VERSION_CODES.N)
   public void testPointerIcon() {
     final LayoutInflater inflater = LayoutInflater.from(activityTestRule.getActivity());
     final TabLayout tabLayout = (TabLayout) inflater.inflate(R.layout.design_tabs_items, null);

File: lib/lollipop/android/support/design/widget/FloatingActionButtonLollipop.java
Patch:
@@ -82,8 +82,7 @@ void setRippleColor(int rippleColor) {
 
   @Override
   void onElevationsChanged(final float elevation, final float pressedTranslationZ) {
-    final int sdk = Build.VERSION.SDK_INT;
-    if (sdk == 21) {
+    if (Build.VERSION.SDK_INT == 21) {
       // Animations produce NPE in version 21. Bluntly set the values instead (matching the
       // logic in the animations below).
       if (mView.isEnabled()) {

File: lib/src/android/support/design/widget/DirectedAcyclicGraph.java
Patch:
@@ -81,7 +81,7 @@ void addEdge(@NonNull T node, @NonNull T incomingEdge) {
    * @return a list containing any incoming edges, or null if there are none.
    */
   @Nullable
-  List getIncomingEdges(@NonNull T node) {
+  List<T> getIncomingEdges(@NonNull T node) {
     return mGraph.get(node);
   }
 
@@ -92,7 +92,7 @@ List getIncomingEdges(@NonNull T node) {
    * @return a list containing any outgoing edges, or null if there are none.
    */
   @Nullable
-  List getOutgoingEdges(@NonNull T node) {
+  List<T> getOutgoingEdges(@NonNull T node) {
     ArrayList<T> result = null;
     for (int i = 0, size = mGraph.size(); i < size; i++) {
       ArrayList<T> edges = mGraph.valueAt(i);

File: lib/src/android/support/design/widget/HeaderBehavior.java
Patch:
@@ -19,12 +19,12 @@
 import android.content.Context;
 import android.support.design.widget.CoordinatorLayout.Behavior;
 import android.support.v4.view.ViewCompat;
-import android.support.v4.widget.ScrollerCompat;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.VelocityTracker;
 import android.view.View;
 import android.view.ViewConfiguration;
+import android.widget.OverScroller;
 
 /**
  * The {@link Behavior} for a view that sits vertically above scrolling a view. See {@link
@@ -35,7 +35,7 @@ abstract class HeaderBehavior<V extends View> extends ViewOffsetBehavior<V> {
   private static final int INVALID_POINTER = -1;
 
   private Runnable mFlingRunnable;
-  ScrollerCompat mScroller;
+  OverScroller mScroller;
 
   private boolean mIsBeingDragged;
   private int mActivePointerId = INVALID_POINTER;
@@ -244,7 +244,7 @@ final boolean fling(
     }
 
     if (mScroller == null) {
-      mScroller = ScrollerCompat.create(layout.getContext());
+      mScroller = new OverScroller(layout.getContext());
     }
 
     mScroller.fling(

File: lib/src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -30,7 +30,6 @@
 import android.support.v4.os.ParcelableCompat;
 import android.support.v4.os.ParcelableCompatCreatorCallbacks;
 import android.support.v4.view.AbsSavedState;
-import android.support.v4.view.MotionEventCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ViewDragHelper;
 import android.util.AttributeSet;
@@ -242,7 +241,7 @@ public boolean onInterceptTouchEvent(CoordinatorLayout parent, V child, MotionEv
       mIgnoreEvents = true;
       return false;
     }
-    int action = MotionEventCompat.getActionMasked(event);
+    int action = event.getActionMasked();
     // Record the velocity
     if (action == MotionEvent.ACTION_DOWN) {
       reset();
@@ -295,7 +294,7 @@ public boolean onTouchEvent(CoordinatorLayout parent, V child, MotionEvent event
     if (!child.isShown()) {
       return false;
     }
-    int action = MotionEventCompat.getActionMasked(event);
+    int action = event.getActionMasked();
     if (mState == STATE_DRAGGING && action == MotionEvent.ACTION_DOWN) {
       return true;
     }

File: lib/src/android/support/design/widget/HeaderBehavior.java
Patch:
@@ -18,7 +18,6 @@
 
 import android.content.Context;
 import android.support.design.widget.CoordinatorLayout.Behavior;
-import android.support.v4.view.MotionEventCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ScrollerCompat;
 import android.util.AttributeSet;
@@ -63,7 +62,7 @@ public boolean onInterceptTouchEvent(CoordinatorLayout parent, V child, MotionEv
       return true;
     }
 
-    switch (MotionEventCompat.getActionMasked(ev)) {
+    switch (ev.getActionMasked()) {
       case MotionEvent.ACTION_DOWN:
         {
           mIsBeingDragged = false;
@@ -124,7 +123,7 @@ public boolean onTouchEvent(CoordinatorLayout parent, V child, MotionEvent ev) {
       mTouchSlop = ViewConfiguration.get(parent.getContext()).getScaledTouchSlop();
     }
 
-    switch (MotionEventCompat.getActionMasked(ev)) {
+    switch (ev.getActionMasked()) {
       case MotionEvent.ACTION_DOWN:
         {
           final int x = (int) ev.getX();

File: lib/src/android/support/design/widget/SwipeDismissBehavior.java
Patch:
@@ -21,7 +21,6 @@
 import android.support.annotation.IntDef;
 import android.support.annotation.NonNull;
 import android.support.annotation.RestrictTo;
-import android.support.v4.view.MotionEventCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ViewDragHelper;
 import android.view.MotionEvent;
@@ -165,7 +164,7 @@ public void setSensitivity(float sensitivity) {
   public boolean onInterceptTouchEvent(CoordinatorLayout parent, V child, MotionEvent event) {
     boolean dispatchEventToHelper = mInterceptingEvents;
 
-    switch (MotionEventCompat.getActionMasked(event)) {
+    switch (event.getActionMasked()) {
       case MotionEvent.ACTION_DOWN:
         mInterceptingEvents =
             parent.isPointInChildBounds(child, (int) event.getX(), (int) event.getY());

File: tests/javatests/android/support/design/widget/BottomSheetBehaviorTouchTest.java
Patch:
@@ -27,7 +27,6 @@
 import android.support.test.filters.MediumTest;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
-import android.support.v4.view.MotionEventCompat;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
@@ -61,7 +60,7 @@ public class BottomSheetBehaviorTouchTest {
 
         @Override
         public boolean onTouch(View v, MotionEvent event) {
-          switch (MotionEventCompat.getActionMasked(event)) {
+          switch (event.getActionMasked()) {
             case MotionEvent.ACTION_DOWN:
               mDown = true;
               break;

File: lib/src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -265,7 +265,7 @@ public boolean onInterceptTouchEvent(CoordinatorLayout parent, V child, MotionEv
       case MotionEvent.ACTION_DOWN:
         int initialX = (int) event.getX();
         mInitialY = (int) event.getY();
-        View scroll = mNestedScrollingChildRef.get();
+        View scroll = mNestedScrollingChildRef != null ? mNestedScrollingChildRef.get() : null;
         if (scroll != null && parent.isPointInChildBounds(scroll, initialX, mInitialY)) {
           mActivePointerId = event.getPointerId(event.getActionIndex());
           mTouchingScrollingChild = true;

File: lib/src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -35,7 +35,6 @@
 import android.support.annotation.VisibleForTesting;
 import android.support.design.R;
 import android.support.design.widget.FloatingActionButtonImpl.InternalVisibilityChangedListener;
-import android.support.v4.content.res.ConfigurationHelper;
 import android.support.v4.view.ViewCompat;
 import android.support.v7.widget.AppCompatImageHelper;
 import android.util.AttributeSet;
@@ -436,8 +435,8 @@ private int getSizeDimension(@Size final int size) {
     switch (size) {
       case SIZE_AUTO:
         // If we're set to auto, grab the size from resources and refresh
-        final int width = ConfigurationHelper.getScreenWidthDp(res);
-        final int height = ConfigurationHelper.getScreenHeightDp(res);
+        final int width = res.getConfiguration().screenWidthDp;
+        final int height = res.getConfiguration().screenHeightDp;
         return Math.max(width, height) < AUTO_MINI_LARGEST_SCREEN_WIDTH
             ? getSizeDimension(SIZE_MINI)
             : getSizeDimension(SIZE_NORMAL);

File: lib/src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -31,7 +31,6 @@
 import android.support.v4.os.ParcelableCompatCreatorCallbacks;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.MotionEventCompat;
-import android.support.v4.view.VelocityTrackerCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ViewDragHelper;
 import android.util.AttributeSet;
@@ -605,7 +604,7 @@ View findScrollingChild(View view) {
 
   private float getYVelocity() {
     mVelocityTracker.computeCurrentVelocity(1000, mMaximumVelocity);
-    return VelocityTrackerCompat.getYVelocity(mVelocityTracker, mActivePointerId);
+    return mVelocityTracker.getYVelocity(mActivePointerId);
   }
 
   void startSettlingAnimation(View child, int state) {

File: lib/src/android/support/design/widget/HeaderBehavior.java
Patch:
@@ -19,7 +19,6 @@
 import android.content.Context;
 import android.support.design.widget.CoordinatorLayout.Behavior;
 import android.support.v4.view.MotionEventCompat;
-import android.support.v4.view.VelocityTrackerCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ScrollerCompat;
 import android.util.AttributeSet;
@@ -172,7 +171,7 @@ public boolean onTouchEvent(CoordinatorLayout parent, V child, MotionEvent ev) {
         if (mVelocityTracker != null) {
           mVelocityTracker.addMovement(ev);
           mVelocityTracker.computeCurrentVelocity(1000);
-          float yvel = VelocityTrackerCompat.getYVelocity(mVelocityTracker, mActivePointerId);
+          float yvel = mVelocityTracker.getYVelocity(mActivePointerId);
           fling(parent, child, -getScrollRangeForDragFling(child), 0, yvel);
         }
         // $FALLTHROUGH

File: tests/javatests/android/support/design/widget/BottomNavigationViewTest.java
Patch:
@@ -47,6 +47,7 @@
 import android.support.design.testutils.TestDrawable;
 import android.support.design.testutils.TestUtilsMatchers;
 import android.support.test.annotation.UiThreadTest;
+import android.support.test.filters.LargeTest;
 import android.support.test.filters.SdkSuppress;
 import android.support.test.filters.SmallTest;
 import android.support.test.rule.ActivityTestRule;
@@ -117,7 +118,7 @@ public void testBasics() {
   }
 
   @Test
-  @SmallTest
+  @LargeTest
   public void testNavigationSelectionListener() {
     BottomNavigationView.OnNavigationItemSelectedListener mockedListener =
         mock(BottomNavigationView.OnNavigationItemSelectedListener.class);

File: tests/javatests/android/support/design/widget/CustomSnackbarTest.java
Patch:
@@ -40,8 +40,8 @@
 import android.support.design.testapp.custom.CustomSnackbar;
 import android.support.design.testapp.custom.CustomSnackbarMainContent;
 import android.support.design.testutils.SnackbarUtils;
+import android.support.test.filters.LargeTest;
 import android.support.test.filters.MediumTest;
-import android.support.test.filters.SmallTest;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import android.support.v4.view.ViewCompat;
@@ -122,7 +122,7 @@ public void animateContentOut(int delay, int duration) {
   }
 
   @Test
-  @SmallTest
+  @LargeTest
   public void testBasicContent() throws Throwable {
     // Verify different combinations of snackbar content (title / subtitle and action)
     // and duration

File: tests/javatests/android/support/design/widget/SnackbarWithFabTest.java
Patch:
@@ -21,7 +21,7 @@
 import android.support.design.testapp.R;
 import android.support.design.testapp.SnackbarWithFabActivity;
 import android.support.design.testutils.SnackbarUtils;
-import android.support.test.filters.MediumTest;
+import android.support.test.filters.LargeTest;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import android.view.View;
@@ -30,7 +30,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-@MediumTest
+@LargeTest
 @RunWith(AndroidJUnit4.class)
 public class SnackbarWithFabTest {
   @Rule

File: demos/java/io/material/demo/shrine/products/ItemActivity.java
Patch:
@@ -107,7 +107,6 @@ private void initSpinner() {
     ArrayAdapter<CharSequence> adapter =
         ArrayAdapter.createFromResource(
             this, R.array.product_quantities, R.layout.shrine_spinner_item);
-    adapter.setDropDownViewResource(R.layout.shrine_spinner_dropdown);
     spinner.setAdapter(adapter);
   }
 }

File: lib/src/android/support/design/internal/BottomNavigationMenuView.java
Patch:
@@ -151,9 +151,9 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
       totalWidth += child.getMeasuredWidth();
     }
     setMeasuredDimension(
-        ViewCompat.resolveSizeAndState(
+        View.resolveSizeAndState(
             totalWidth, MeasureSpec.makeMeasureSpec(totalWidth, MeasureSpec.EXACTLY), 0),
-        ViewCompat.resolveSizeAndState(mItemHeight, heightSpec, 0));
+        View.resolveSizeAndState(mItemHeight, heightSpec, 0));
   }
 
   @Override

File: testing/java/android/support/design/testapp/custom/TestFloatingBehavior.java
Patch:
@@ -18,7 +18,6 @@
 import android.content.Context;
 import android.support.design.widget.CoordinatorLayout;
 import android.support.design.widget.Snackbar;
-import android.support.v4.view.ViewCompat;
 import android.util.AttributeSet;
 import android.view.View;
 import android.widget.TextView;
@@ -39,8 +38,7 @@ public boolean layoutDependsOn(CoordinatorLayout parent, TextView child, View de
 
   @Override
   public boolean onDependentViewChanged(CoordinatorLayout parent, TextView child, View dependency) {
-    ViewCompat.setTranslationY(
-        child, Math.min(0, ViewCompat.getTranslationY(dependency) - dependency.getHeight()));
+    child.setTranslationY(Math.min(0, dependency.getTranslationY() - dependency.getHeight()));
     return true;
   }
 }

File: lib/src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -31,7 +31,6 @@
 import android.support.v4.os.ParcelableCompatCreatorCallbacks;
 import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.MotionEventCompat;
-import android.support.v4.view.NestedScrollingChild;
 import android.support.v4.view.VelocityTrackerCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.ViewDragHelper;
@@ -587,8 +586,9 @@ boolean shouldHide(View child, float yvel) {
     return Math.abs(newTop - mMaxOffset) / (float) mPeekHeight > HIDE_THRESHOLD;
   }
 
-  private View findScrollingChild(View view) {
-    if (view instanceof NestedScrollingChild) {
+  @VisibleForTesting
+  View findScrollingChild(View view) {
+    if (ViewCompat.isNestedScrollingEnabled(view)) {
       return view;
     }
     if (view instanceof ViewGroup) {

File: lib/lollipop/android/support/design/widget/FloatingActionButtonLollipop.java
Patch:
@@ -33,7 +33,7 @@
 import android.view.View;
 
 @RequiresApi(21)
-class FloatingActionButtonLollipop extends FloatingActionButtonIcs {
+class FloatingActionButtonLollipop extends FloatingActionButtonImpl {
 
   private InsetDrawable mInsetDrawable;
 

File: tests/javatests/android/support/design/widget/TextInputLayoutPseudoLocaleTest.java
Patch:
@@ -21,6 +21,7 @@
 import static android.support.test.espresso.action.ViewActions.typeText;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.Configuration;
 import android.content.res.Resources;
@@ -48,6 +49,7 @@ public class TextInputLayoutPseudoLocaleTest {
   private static final String ORIGINAL_LANGUAGE = Locale.getDefault().getLanguage();
   private static final String ORIGINAL_COUNTRY = Locale.getDefault().getLanguage();
 
+  @TargetApi(17)
   private static void setLocale(String language, String country, Context context) {
     context = context.getApplicationContext();
     Resources resources = context.getResources();

File: lib/src/android/support/design/widget/TabLayout.java
Patch:
@@ -21,6 +21,7 @@
 import static android.support.v4.view.ViewPager.SCROLL_STATE_IDLE;
 import static android.support.v4.view.ViewPager.SCROLL_STATE_SETTLING;
 
+import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.Resources;
@@ -1551,6 +1552,7 @@ public void onInitializeAccessibilityEvent(AccessibilityEvent event) {
       event.setClassName(ActionBar.Tab.class.getName());
     }
 
+    @TargetApi(14)
     @Override
     public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {
       super.onInitializeAccessibilityNodeInfo(info);

File: lib/src/android/support/design/widget/ThemeUtils.java
Patch:
@@ -28,9 +28,8 @@ class ThemeUtils {
   static void checkAppCompatTheme(Context context) {
     TypedArray a = context.obtainStyledAttributes(APPCOMPAT_CHECK_ATTRS);
     final boolean failed = !a.hasValue(0);
-    if (a != null) {
-      a.recycle();
-    }
+    a.recycle();
+
     if (failed) {
       throw new IllegalArgumentException(
           "You need to use a Theme.AppCompat theme " + "(or descendant) with the design library.");

File: lib/src/android/support/design/internal/BottomNavigationItemView.java
Patch:
@@ -119,6 +119,7 @@ public MenuItemImpl getItemData() {
   public void setTitle(CharSequence title) {
     mSmallLabel.setText(title);
     mLargeLabel.setText(title);
+    setContentDescription(title);
   }
 
   @Override

File: lib/src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -409,8 +409,8 @@ int getDownNestedPreScrollRange() {
           // Only enter by the amount of the collapsed height
           range += childHeight - ViewCompat.getMinimumHeight(child);
         } else {
-          // Else use the full height
-          range += childHeight;
+          // Else use the full height (minus the top inset)
+          range += childHeight - getTopInset();
         }
       } else if (range > 0) {
         // If we've hit an non-quick return scrollable view, and we've already hit a

File: lib/src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -1317,7 +1317,7 @@ final void onChildViewsChanged(@DispatchChangeEvent final int type) {
         offsetChildByInset(child, inset, layoutDirection);
       }
 
-      if (type == EVENT_PRE_DRAW) {
+      if (type != EVENT_VIEW_REMOVED) {
         // Did it change? if not continue
         getLastChildRect(child, lastDrawRect);
         if (lastDrawRect.equals(drawRect)) {

File: lib/src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -619,9 +619,11 @@ void startSettlingAnimation(View child, int state) {
     } else {
       throw new IllegalArgumentException("Illegal state argument: " + state);
     }
-    setStateInternal(STATE_SETTLING);
     if (mViewDragHelper.smoothSlideViewTo(child, child.getLeft(), top)) {
+      setStateInternal(STATE_SETTLING);
       ViewCompat.postOnAnimation(child, new SettleRunnable(child, state));
+    } else {
+      setStateInternal(state);
     }
   }
 

File: lib/honeycomb-mr1/android/support/design/widget/ValueAnimatorCompatImplHoneycombMr1.java
Patch:
@@ -19,12 +19,10 @@
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.animation.ValueAnimator;
-import android.annotation.TargetApi;
 import android.support.annotation.RequiresApi;
 import android.view.animation.Interpolator;
 
 @RequiresApi(12)
-@TargetApi(12)
 class ValueAnimatorCompatImplHoneycombMr1 extends ValueAnimatorCompat.Impl {
 
   private final ValueAnimator mValueAnimator;

File: lib/honeycomb/android/support/design/widget/ViewGroupUtilsHoneycomb.java
Patch:
@@ -16,7 +16,6 @@
 
 package android.support.design.widget;
 
-import android.annotation.TargetApi;
 import android.graphics.Matrix;
 import android.graphics.Rect;
 import android.graphics.RectF;
@@ -26,7 +25,6 @@
 import android.view.ViewParent;
 
 @RequiresApi(11)
-@TargetApi(11)
 class ViewGroupUtilsHoneycomb {
   private static final ThreadLocal<Matrix> sMatrix = new ThreadLocal<>();
   private static final ThreadLocal<RectF> sRectF = new ThreadLocal<>();

File: lib/ics/android/support/design/internal/TextScale.java
Patch:
@@ -18,7 +18,6 @@
 
 import android.animation.Animator;
 import android.animation.ValueAnimator;
-import android.annotation.TargetApi;
 import android.support.annotation.RequiresApi;
 import android.support.transition.Transition;
 import android.support.transition.TransitionValues;
@@ -28,7 +27,6 @@
 
 /** @hide */
 @RequiresApi(14)
-@TargetApi(14)
 public class TextScale extends Transition {
   private static final String PROPNAME_SCALE = "android:textscale:scale";
 

File: lib/ics/android/support/design/widget/FloatingActionButtonIcs.java
Patch:
@@ -18,15 +18,13 @@
 
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
-import android.annotation.TargetApi;
 import android.os.Build;
 import android.support.annotation.Nullable;
 import android.support.annotation.RequiresApi;
 import android.support.v4.view.ViewCompat;
 import android.view.View;
 
 @RequiresApi(14)
-@TargetApi(14)
 class FloatingActionButtonIcs extends FloatingActionButtonGingerbread {
 
   private float mRotation;

File: lib/lollipop/android/support/design/widget/CircularBorderDrawableLollipop.java
Patch:
@@ -16,13 +16,11 @@
 
 package android.support.design.widget;
 
-import android.annotation.TargetApi;
 import android.graphics.Outline;
 import android.support.annotation.RequiresApi;
 
 /** Lollipop version of {@link CircularBorderDrawable}. */
 @RequiresApi(21)
-@TargetApi(21)
 class CircularBorderDrawableLollipop extends CircularBorderDrawable {
 
   @Override

File: lib/lollipop/android/support/design/widget/FloatingActionButtonLollipop.java
Patch:
@@ -19,7 +19,6 @@
 import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
 import android.animation.StateListAnimator;
-import android.annotation.TargetApi;
 import android.content.res.ColorStateList;
 import android.graphics.PorterDuff;
 import android.graphics.Rect;
@@ -34,7 +33,6 @@
 import android.view.View;
 
 @RequiresApi(21)
-@TargetApi(21)
 class FloatingActionButtonLollipop extends FloatingActionButtonIcs {
 
   private InsetDrawable mInsetDrawable;

File: lib/lollipop/android/support/design/widget/ViewUtilsLollipop.java
Patch:
@@ -19,7 +19,6 @@
 import android.animation.AnimatorInflater;
 import android.animation.ObjectAnimator;
 import android.animation.StateListAnimator;
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.support.annotation.RequiresApi;
@@ -29,7 +28,6 @@
 import android.view.ViewOutlineProvider;
 
 @RequiresApi(21)
-@TargetApi(21)
 class ViewUtilsLollipop {
 
   private static final int[] STATE_LIST_ANIM_ATTRS = new int[] {android.R.attr.stateListAnimator};

File: lib/src/android/support/design/internal/ForegroundLinearLayout.java
Patch:
@@ -18,7 +18,6 @@
 
 import static android.support.annotation.RestrictTo.Scope.GROUP_ID;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
@@ -119,7 +118,6 @@ protected boolean verifyDrawable(Drawable who) {
   }
 
   @RequiresApi(11)
-  @TargetApi(11)
   @Override
   public void jumpDrawablesToCurrentState() {
     super.jumpDrawablesToCurrentState();
@@ -228,7 +226,6 @@ public void draw(@NonNull Canvas canvas) {
   }
 
   @RequiresApi(21)
-  @TargetApi(21)
   @Override
   public void drawableHotspotChanged(float x, float y) {
     super.drawableHotspotChanged(x, y);

File: lib/src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -19,7 +19,6 @@
 import static android.support.annotation.RestrictTo.Scope.GROUP_ID;
 import static android.support.design.widget.ViewUtils.objectEquals;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Rect;
@@ -672,14 +671,12 @@ public LayoutParams(MarginLayoutParams source) {
     }
 
     @RequiresApi(19)
-    @TargetApi(19)
     public LayoutParams(LinearLayout.LayoutParams source) {
       // The copy constructor called here only exists on API 19+.
       super(source);
     }
 
     @RequiresApi(19)
-    @TargetApi(19)
     public LayoutParams(LayoutParams source) {
       // The copy constructor called here only exists on API 19+.
       super(source);

File: lib/src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -20,7 +20,6 @@
 import static android.support.design.widget.MathUtils.constrain;
 import static android.support.design.widget.ViewUtils.objectEquals;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.TypedArray;
@@ -1159,7 +1158,6 @@ public LayoutParams(MarginLayoutParams source) {
     }
 
     @RequiresApi(19)
-    @TargetApi(19)
     public LayoutParams(FrameLayout.LayoutParams source) {
       // The copy constructor called here only exists on API 19+.
       super(source);

File: lib/src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -18,7 +18,6 @@
 
 import static android.support.annotation.RestrictTo.Scope.GROUP_ID;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.Resources;
@@ -466,7 +465,6 @@ protected void drawableStateChanged() {
     getImpl().onDrawableStateChanged(getDrawableState());
   }
 
-  @TargetApi(Build.VERSION_CODES.HONEYCOMB)
   @Override
   public void jumpDrawablesToCurrentState() {
     super.jumpDrawablesToCurrentState();

File: lib/src/android/support/design/widget/TabLayout.java
Patch:
@@ -21,7 +21,6 @@
 import static android.support.v4.view.ViewPager.SCROLL_STATE_IDLE;
 import static android.support.v4.view.ViewPager.SCROLL_STATE_SETTLING;
 
-import android.annotation.TargetApi;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.Resources;
@@ -1532,15 +1531,13 @@ public void setSelected(final boolean selected) {
       }
     }
 
-    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)
     @Override
     public void onInitializeAccessibilityEvent(AccessibilityEvent event) {
       super.onInitializeAccessibilityEvent(event);
       // This view masquerades as an action bar tab.
       event.setClassName(ActionBar.Tab.class.getName());
     }
 
-    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)
     @Override
     public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {
       super.onInitializeAccessibilityNodeInfo(info);

File: tests/javatests/android/support/design/widget/TextInputLayoutPseudoLocaleTest.java
Patch:
@@ -26,8 +26,8 @@
 import android.content.res.Resources;
 import android.support.design.testapp.R;
 import android.support.design.testapp.TextInputLayoutActivity;
+import android.support.test.filters.MediumTest;
 import android.support.test.filters.SdkSuppress;
-import android.support.test.filters.SmallTest;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import java.util.Locale;
@@ -37,7 +37,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-@SmallTest
+@MediumTest
 @SdkSuppress(minSdkVersion = 17) // Needed for Configuration#setLocale
 @RunWith(AndroidJUnit4.class)
 public class TextInputLayoutPseudoLocaleTest {

File: tests/javatests/android/support/design/widget/TextInputLayoutTest.java
Patch:
@@ -60,7 +60,7 @@
 import android.support.design.testapp.TextInputLayoutActivity;
 import android.support.design.testutils.TestUtils;
 import android.support.test.annotation.UiThreadTest;
-import android.support.test.filters.SmallTest;
+import android.support.test.filters.MediumTest;
 import android.support.test.rule.ActivityTestRule;
 import android.support.test.runner.AndroidJUnit4;
 import android.support.v4.widget.TextViewCompat;
@@ -76,7 +76,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-@SmallTest
+@MediumTest
 @RunWith(AndroidJUnit4.class)
 public class TextInputLayoutTest {
   @Rule

File: lib/src/android/support/design/widget/BottomNavigationView.java
Patch:
@@ -59,12 +59,12 @@
  * layout resource file:
  * &lt;android.support.design.widget.BottomNavigationView
  *     xmlns:android="http://schemas.android.com/apk/res/android"
- *     xmlns:design="http://schema.android.com/apk/res/android.support.design"
+ *     xmlns:app="http://schema.android.com/apk/res/res-auto"
  *     android:id="@+id/navigation"
  *     android:layout_width="match_parent"
  *     android:layout_height="56dp"
  *     android:layout_gravity="start"
- *     design:menu="@menu/my_navigation_items" /&gt;
+ *     app:menu="@menu/my_navigation_items" /&gt;
  *
  * res/menu/my_navigation_items.xml:
  * &lt;menu xmlns:android="http://schemas.android.com/apk/res/android"&gt;

File: tests/javatests/android/support/design/widget/CoordinatorLayoutTest.java
Patch:
@@ -35,6 +35,7 @@
 import static org.mockito.Mockito.times;
 import static org.mockito.Mockito.verify;
 
+import android.annotation.TargetApi;
 import android.app.Instrumentation;
 import android.graphics.Rect;
 import android.support.design.testapp.CoordinatorLayoutActivity;
@@ -76,6 +77,7 @@ public void setup() {
   }
 
   @Test
+  @TargetApi(21)
   @SdkSuppress(minSdkVersion = 21)
   public void testSetFitSystemWindows() throws Throwable {
     final Instrumentation instrumentation = InstrumentationRegistry.getInstrumentation();

File: testing/java/android/support/design/testapp/BaseTestActivity.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
+package android.support.design.testapp;
 
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;

File: testing/java/android/support/design/testapp/BottomNavigationViewActivity.java
Patch:
@@ -13,9 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class BottomNavigationViewActivity extends BaseTestActivity {
   @Override

File: testing/java/android/support/design/testapp/BottomSheetBehaviorWithInsetsActivity.java
Patch:
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
+package android.support.design.testapp;
 
-import android.support.design.test.R;
+import android.support.annotation.VisibleForTesting;
 import android.view.View;
 
 public class BottomSheetBehaviorWithInsetsActivity extends BottomSheetBehaviorActivity {
 
-  View mBottomSheetContent;
+  @VisibleForTesting public View mBottomSheetContent;
 
   @Override
   protected int getContentViewLayoutResId() {

File: testing/java/android/support/design/testapp/BottomSheetDialogActivity.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class BottomSheetDialogActivity extends BaseTestActivity {
 

File: testing/java/android/support/design/testapp/DynamicCoordinatorLayoutActivity.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 /** Test activity for testing various aspects of {@link CoordinatorLayout}. */
 public class DynamicCoordinatorLayoutActivity extends BaseTestActivity {

File: testing/java/android/support/design/testapp/FloatingActionButtonActivity.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class FloatingActionButtonActivity extends BaseTestActivity {
 

File: testing/java/android/support/design/testapp/NavigationViewActivity.java
Patch:
@@ -13,9 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class NavigationViewActivity extends BaseTestActivity {
   @Override

File: testing/java/android/support/design/testapp/SnackbarActivity.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class SnackbarActivity extends BaseTestActivity {
   @Override

File: testing/java/android/support/design/testapp/TabLayoutPoolingActivity.java
Patch:
@@ -14,9 +14,7 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class TabLayoutPoolingActivity extends BaseTestActivity {
   @Override

File: testing/java/android/support/design/testapp/TabLayoutWithViewPagerActivity.java
Patch:
@@ -13,9 +13,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.widget;
+package android.support.design.testapp;
 
-import android.support.design.test.R;
 import android.support.v7.widget.Toolbar;
 
 public class TabLayoutWithViewPagerActivity extends BaseTestActivity {

File: testing/java/android/support/design/testapp/TextInputLayoutActivity.java
Patch:
@@ -13,9 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.widget;
-
-import android.support.design.test.R;
+package android.support.design.testapp;
 
 public class TextInputLayoutActivity extends BaseTestActivity {
   @Override

File: testing/java/android/support/design/testapp/custom/CustomSnackbar.java
Patch:
@@ -13,9 +13,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.widget;
+package android.support.design.testapp.custom;
 
-import android.support.design.test.R;
+import android.support.design.widget.BaseTransientBottomBar;
+import android.support.design.widget.CoordinatorLayout;
 import android.view.View;
 import android.widget.TextView;
 

File: testing/java/android/support/design/testapp/custom/CustomSnackbarMainContent.java
Patch:
@@ -13,10 +13,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.widget;
+package android.support.design.testapp.custom;
 
 import android.content.Context;
-import android.support.design.test.R;
 import android.util.AttributeSet;
 import android.widget.RelativeLayout;
 

File: testing/java/android/support/design/testapp/custom/CustomTextView.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.custom;
+package android.support.design.testapp.custom;
 
 import android.content.Context;
 import android.support.design.widget.CoordinatorLayout;

File: testing/java/android/support/design/testapp/custom/TestFloatingBehavior.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package android.support.design.custom;
+package android.support.design.testapp.custom;
 
 import android.content.Context;
 import android.support.design.widget.CoordinatorLayout;

File: tests/javatests/android/support/design/testutils/BottomNavigationViewActions.java
Patch:
@@ -23,9 +23,9 @@
 import android.support.annotation.IdRes;
 import android.support.annotation.Nullable;
 import android.support.design.widget.BottomNavigationView;
+import android.view.View;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
-import android.view.View;
 import org.hamcrest.Matcher;
 
 public class BottomNavigationViewActions {

File: tests/javatests/android/support/design/testutils/CollapsingToolbarLayoutActions.java
Patch:
@@ -20,9 +20,9 @@
 
 import android.support.annotation.ColorInt;
 import android.support.design.widget.CollapsingToolbarLayout;
+import android.view.View;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
-import android.view.View;
 import org.hamcrest.Matcher;
 
 public class CollapsingToolbarLayoutActions {

File: tests/javatests/android/support/design/testutils/DesignViewActions.java
Patch:
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package android.support.design.widget;
+package android.support.design.testutils;
 
+import android.view.View;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
 import android.support.test.espresso.matcher.ViewMatchers;
-import android.view.View;
 import org.hamcrest.Matcher;
 
 public final class DesignViewActions {

File: tests/javatests/android/support/design/testutils/DrawerLayoutActions.java
Patch:
@@ -18,10 +18,10 @@
 
 import static android.support.test.espresso.matcher.ViewMatchers.isAssignableFrom;
 
-import android.support.test.espresso.UiController;
-import android.support.test.espresso.ViewAction;
 import android.support.v4.widget.DrawerLayout;
 import android.view.View;
+import android.support.test.espresso.UiController;
+import android.support.test.espresso.ViewAction;
 import org.hamcrest.Matcher;
 
 public class DrawerLayoutActions {

File: tests/javatests/android/support/design/testutils/FloatingActionButtonActions.java
Patch:
@@ -23,9 +23,9 @@
 import android.support.annotation.DrawableRes;
 import android.support.design.widget.CoordinatorLayout;
 import android.support.design.widget.FloatingActionButton;
+import android.view.View;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
-import android.view.View;
 import org.hamcrest.Matcher;
 
 public class FloatingActionButtonActions {

File: tests/javatests/android/support/design/testutils/NavigationViewActions.java
Patch:
@@ -27,10 +27,10 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.StyleRes;
 import android.support.design.widget.NavigationView;
-import android.support.test.espresso.UiController;
-import android.support.test.espresso.ViewAction;
 import android.view.LayoutInflater;
 import android.view.View;
+import android.support.test.espresso.UiController;
+import android.support.test.espresso.ViewAction;
 import org.hamcrest.Matcher;
 
 public class NavigationViewActions {

File: tests/javatests/android/support/design/testutils/TabLayoutActions.java
Patch:
@@ -20,10 +20,10 @@
 
 import android.support.annotation.Nullable;
 import android.support.design.widget.TabLayout;
-import android.support.test.espresso.UiController;
-import android.support.test.espresso.ViewAction;
 import android.support.v4.view.ViewPager;
 import android.view.View;
+import android.support.test.espresso.UiController;
+import android.support.test.espresso.ViewAction;
 import org.hamcrest.Matcher;
 
 public class TabLayoutActions {

File: tests/javatests/android/support/design/testutils/TestUtilsActions.java
Patch:
@@ -27,15 +27,15 @@
 import android.support.annotation.Nullable;
 import android.support.design.widget.CollapsingToolbarLayout;
 import android.support.design.widget.TabLayout;
-import android.support.test.espresso.UiController;
-import android.support.test.espresso.ViewAction;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.TextViewCompat;
 import android.util.SparseArray;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import android.support.test.espresso.UiController;
+import android.support.test.espresso.ViewAction;
 import org.hamcrest.Matcher;
 
 public class TestUtilsActions {

File: tests/javatests/android/support/design/testutils/TestUtilsMatchers.java
Patch:
@@ -25,7 +25,6 @@
 import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.design.widget.FloatingActionButton;
-import android.support.test.espresso.matcher.BoundedMatcher;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.widget.TextViewCompat;
@@ -35,6 +34,7 @@
 import android.view.ViewParent;
 import android.widget.ImageView;
 import android.widget.TextView;
+import android.support.test.espresso.matcher.BoundedMatcher;
 import org.hamcrest.Description;
 import org.hamcrest.Matcher;
 import org.hamcrest.TypeSafeMatcher;

File: tests/javatests/android/support/design/testutils/TextInputLayoutActions.java
Patch:
@@ -20,9 +20,9 @@
 
 import android.graphics.Typeface;
 import android.support.design.widget.TextInputLayout;
+import android.view.View;
 import android.support.test.espresso.UiController;
 import android.support.test.espresso.ViewAction;
-import android.view.View;
 import org.hamcrest.Matcher;
 
 public class TextInputLayoutActions {

File: tests/javatests/android/support/design/testutils/ViewPagerActions.java
Patch:
@@ -20,11 +20,11 @@
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayingAtLeast;
 
 import android.support.annotation.Nullable;
-import android.support.test.espresso.UiController;
-import android.support.test.espresso.ViewAction;
 import android.support.v4.view.PagerAdapter;
 import android.support.v4.view.ViewPager;
 import android.view.View;
+import android.support.test.espresso.UiController;
+import android.support.test.espresso.ViewAction;
 import org.hamcrest.Matcher;
 
 public class ViewPagerActions {

File: tests/javatests/android/support/design/widget/BottomSheetBehaviorInitialStateTest.java
Patch:
@@ -21,6 +21,7 @@
 
 import android.content.Context;
 import android.content.Intent;
+import android.support.design.testapp.BottomSheetBehaviorActivity;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.filters.SmallTest;
 import android.support.test.rule.ActivityTestRule;

File: lib/src/android/support/design/internal/BottomNavigationMenuView.java
Patch:
@@ -254,6 +254,7 @@ public void buildMenuView() {
     }
     removeAllViews();
     if (mMenu.size() == 0) {
+      mButtons = null;
       return;
     }
     mButtons = new BottomNavigationItemView[mMenu.size()];

File: lib/src/android/support/design/internal/BaselineLayout.java
Patch:
@@ -24,7 +24,8 @@
 import android.view.ViewGroup;
 
 /**
- * A simple ViewGroup that aligns all the views inside on a baseline.
+ * A simple ViewGroup that aligns all the views inside on a baseline. Note: bottom padding for this
+ * view will be measured starting from the baseline.
  *
  * @hide
  */
@@ -68,6 +69,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
       childState = ViewUtils.combineMeasuredStates(childState, ViewCompat.getMeasuredState(child));
     }
     if (maxChildBaseline != -1) {
+      maxChildDescent = Math.max(maxChildDescent, getPaddingBottom());
       maxHeight = Math.max(maxHeight, maxChildBaseline + maxChildDescent);
       mBaseline = maxChildBaseline;
     }

File: lib/src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -155,6 +155,7 @@ public class CoordinatorLayout extends ViewGroup implements NestedScrollingParen
     private final Rect mTempRect2 = new Rect();
     private final Rect mTempRect3 = new Rect();
     private final Rect mTempRect4 = new Rect();
+    private final Rect mTempRect5 = new Rect();
     private final int[] mTempIntPair = new int[2];
     private Paint mScrimPaint;
 
@@ -1334,7 +1335,7 @@ private void offsetChildByInset(final View child, final Rect inset, final int la
         final Behavior behavior = lp.getBehavior();
         final Rect rect = mTempRect3;
         rect.setEmpty();
-        final Rect bounds = mTempRect4;
+        final Rect bounds = mTempRect5;
         bounds.set(child.getLeft(), child.getTop(), child.getRight(), child.getBottom());
 
         if (behavior != null && behavior.getInsetDodgeRect(this, child, rect)) {

File: lib/tests/src/android/support/design/widget/CoordinatorSnackbarWithFabTest.java
Patch:
@@ -48,7 +48,7 @@ public class CoordinatorSnackbarWithFabTest extends BaseDynamicCoordinatorLayout
     private Snackbar mSnackbar;
 
     @After
-    public void teardown() {
+    public void teardown() throws Throwable {
         // Dismiss the snackbar to get back to clean state for the next test
         if (mSnackbar != null) {
             SnackbarUtils.dismissTransientBottomBarAndWaitUntilFullyDismissed(mSnackbar);

File: lib/tests/src/android/support/design/widget/SnackbarTestWithFAB.java
Patch:
@@ -63,14 +63,14 @@ public void testShortSnackbarDodgesFab() {
         // Now wait until the Snackbar has been dismissed
         SnackbarUtils.waitUntilFullyDismissed(snackbar);
 
-        // And check that the FAB is back in it's original position
+        // And check that the FAB is back in its original position
         fab.getLocationOnScreen(fabPosition);
         assertEquals(originalFabPosition[0], fabPosition[0]);
         assertEquals(originalFabPosition[1], fabPosition[1]);
     }
 
     @Test
-    public void testIndefiniteSnackbarDodgesFab() {
+    public void testIndefiniteSnackbarDodgesFab() throws Throwable {
         final int[] originalFabPosition = new int[2];
         final View fab = mCoordinatorLayout.findViewById(R.id.fab);
         fab.getLocationOnScreen(originalFabPosition);
@@ -89,7 +89,7 @@ public void testIndefiniteSnackbarDodgesFab() {
         // Now dismiss the Snackbar and wait for it to be dismissed
         SnackbarUtils.dismissTransientBottomBarAndWaitUntilFullyDismissed(snackbar);
 
-        // And check that the FAB is back in it's original position
+        // And check that the FAB is back in its original position
         fab.getLocationOnScreen(fabPosition);
         assertEquals(originalFabPosition[0], fabPosition[0]);
         assertEquals(originalFabPosition[1], fabPosition[1]);

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -155,6 +155,7 @@ public class CoordinatorLayout extends ViewGroup implements NestedScrollingParen
     private final Rect mTempRect2 = new Rect();
     private final Rect mTempRect3 = new Rect();
     private final Rect mTempRect4 = new Rect();
+    private final Rect mTempRect5 = new Rect();
     private final int[] mTempIntPair = new int[2];
     private Paint mScrimPaint;
 
@@ -1332,7 +1333,7 @@ private void offsetChildByInset(final View child, final Rect inset, final int la
         final Behavior behavior = lp.getBehavior();
         final Rect rect = mTempRect3;
         rect.setEmpty();
-        final Rect bounds = mTempRect4;
+        final Rect bounds = mTempRect5;
         bounds.set(child.getLeft(), child.getTop(), child.getRight(), child.getBottom());
 
         if (behavior != null && behavior.getInsetDodgeRect(this, child, rect)) {

File: src/android/support/design/widget/BottomNavigationView.java
Patch:
@@ -117,7 +117,7 @@ public BottomNavigationView(Context context, AttributeSet attrs, int defStyleAtt
         mPresenter.setBottomNavigationMenuView(mMenuView);
         mMenuView.setPresenter(mPresenter);
         mMenu.addMenuPresenter(mPresenter);
-
+        mPresenter.initForMenu(getContext(), mMenu);
 
         // Custom attributes
         TintTypedArray a = TintTypedArray.obtainStyledAttributes(context, attrs,
@@ -188,7 +188,6 @@ public Menu getMenu() {
     public void inflateMenu(int resId) {
         mPresenter.setUpdateSuspended(true);
         getMenuInflater().inflate(resId, mMenu);
-        mPresenter.initForMenu(getContext(), mMenu);
         mPresenter.setUpdateSuspended(false);
         mPresenter.updateMenuView(true);
     }

File: src/android/support/design/internal/ScrimInsetsFrameLayout.java
Patch:
@@ -75,7 +75,7 @@ public WindowInsetsCompat onApplyWindowInsets(View v,
                                 insets.getSystemWindowInsetRight(),
                                 insets.getSystemWindowInsetBottom());
                         onInsetsChanged(insets);
-                        setWillNotDraw(mInsets.isEmpty() || mInsetForeground == null);
+                        setWillNotDraw(!insets.hasSystemWindowInsets() || mInsetForeground == null);
                         ViewCompat.postInvalidateOnAnimation(ScrimInsetsFrameLayout.this);
                         return insets.consumeSystemWindowInsets();
                     }

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -1052,7 +1052,7 @@ public void setScrimVisibleHeightTrigger(@IntRange(from = 0) final int height) {
      * Returns the amount of visible height in pixels used to define when to trigger a scrim
      * visibility change.
      *
-     * @see #setScrimTriggerOffset(int)
+     * @see #setScrimVisibleHeightTrigger(int)
      */
     public int getScrimVisibleHeightTrigger() {
         if (mScrimVisibleHeightTrigger >= 0) {

File: tests/src/android/support/design/widget/BottomNavigationViewTest.java
Patch:
@@ -21,6 +21,7 @@
 import static android.support.test.espresso.action.ViewActions.click;
 import static android.support.test.espresso.assertion.ViewAssertions.matches;
 import static android.support.test.espresso.matcher.ViewMatchers.isDescendantOfA;
+import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 import static android.support.test.espresso.matcher.ViewMatchers.withText;
 
@@ -96,7 +97,7 @@ public void testNavigationSelectionListener() {
 
         // Click one of our items
         onView(allOf(withText(mMenuStringContent.get(R.id.destination_profile)),
-                isDescendantOfA(withId(R.id.bottom_navigation)))).perform(click());
+                isDescendantOfA(withId(R.id.bottom_navigation)), isDisplayed())).perform(click());
         // And that our listener has been notified of the click
         verify(mockedListener, times(1)).onNavigationItemSelected(
                 mBottomNavigation.getMenu().findItem(R.id.destination_profile));
@@ -107,7 +108,7 @@ public void testNavigationSelectionListener() {
 
         // Click one of our items
         onView(allOf(withText(mMenuStringContent.get(R.id.destination_people)),
-                isDescendantOfA(withId(R.id.bottom_navigation)))).perform(click());
+                isDescendantOfA(withId(R.id.bottom_navigation)), isDisplayed())).perform(click());
         // And that our previous listener has not been notified of the click
         verifyNoMoreInteractions(mockedListener);
     }

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -272,7 +272,9 @@ private WindowInsetsCompat onWindowInsetChanged(final WindowInsetsCompat insets)
             requestLayout();
         }
 
-        return insets;
+        // Consume the insets. This is done so that child views with fitSystemWindows=true do not
+        // get the default padding functionality from View
+        return insets.consumeSystemWindowInsets();
     }
 
     @Override

File: src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -254,6 +254,7 @@ public boolean onLayoutChild(CoordinatorLayout parent, V child, int layoutDirect
     @Override
     public boolean onInterceptTouchEvent(CoordinatorLayout parent, V child, MotionEvent event) {
         if (!child.isShown()) {
+            mIgnoreEvents = true;
             return false;
         }
         int action = MotionEventCompat.getActionMasked(event);

File: gingerbread/android/support/design/widget/FloatingActionButtonGingerbread.java
Patch:
@@ -87,7 +87,7 @@ void setBackgroundDrawable(ColorStateList backgroundTint,
         mContentBackground = new LayerDrawable(layers);
 
         mShadowDrawable = new ShadowDrawableWrapper(
-                mView.getResources(),
+                mView.getContext(),
                 mContentBackground,
                 mShadowViewDelegate.getRadius(),
                 mElevation,

File: src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -250,8 +250,8 @@ void setIconTintList(ColorStateList tintList) {
         }
     }
 
-    public void setTextAppearance(Context context, int textAppearance) {
-        mTextView.setTextAppearance(context, textAppearance);
+    public void setTextAppearance(int textAppearance) {
+        TextViewCompat.setTextAppearance(mTextView, textAppearance);
     }
 
     public void setTextColor(ColorStateList colors) {

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -403,7 +403,7 @@ public void onBindViewHolder(ViewHolder holder, int position) {
                     NavigationMenuItemView itemView = (NavigationMenuItemView) holder.itemView;
                     itemView.setIconTintList(mIconTintList);
                     if (mTextAppearanceSet) {
-                        itemView.setTextAppearance(itemView.getContext(), mTextAppearance);
+                        itemView.setTextAppearance(mTextAppearance);
                     }
                     if (mTextColor != null) {
                         itemView.setTextColor(mTextColor);

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -1688,7 +1688,7 @@ final void update() {
                     mTextView = textView;
                     mDefaultMaxLines = TextViewCompat.getMaxLines(mTextView);
                 }
-                mTextView.setTextAppearance(getContext(), mTabTextAppearance);
+                TextViewCompat.setTextAppearance(mTextView, mTabTextAppearance);
                 if (mTabTextColors != null) {
                     mTextView.setTextColor(mTabTextColors);
                 }

File: src/android/support/design/internal/BottomNavigationItemView.java
Patch:
@@ -25,6 +25,7 @@
 import android.support.design.R;
 import android.support.v4.content.ContextCompat;
 import android.support.v4.graphics.drawable.DrawableCompat;
+import android.support.v4.view.ViewCompat;
 import android.support.v4.view.animation.LinearOutSlowInInterpolator;
 import android.support.v7.view.menu.MenuItemImpl;
 import android.support.v7.view.menu.MenuView;
@@ -193,7 +194,7 @@ public void setTextColor(ColorStateList color) {
     public void setItemBackground(int background) {
         Drawable backgroundDrawable = background == 0
                 ? null : ContextCompat.getDrawable(getContext(), background);
-        setBackgroundDrawable(backgroundDrawable);
+        ViewCompat.setBackground(this, backgroundDrawable);
     }
 
     @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR1)

File: src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -103,7 +103,7 @@ public void initialize(MenuItemImpl itemData, int menuType) {
         setVisibility(itemData.isVisible() ? VISIBLE : GONE);
 
         if (getBackground() == null) {
-            setBackgroundDrawable(createDefaultBackground());
+            ViewCompat.setBackground(this, createDefaultBackground());
         }
 
         setCheckable(itemData.isCheckable());

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -408,7 +408,7 @@ public void onBindViewHolder(ViewHolder holder, int position) {
                     if (mTextColor != null) {
                         itemView.setTextColor(mTextColor);
                     }
-                    itemView.setBackgroundDrawable(mItemBackground != null ?
+                    ViewCompat.setBackground(itemView, mItemBackground != null ?
                             mItemBackground.getConstantState().newDrawable() : null);
                     NavigationMenuTextItem item = (NavigationMenuTextItem) mItems.get(position);
                     itemView.setNeedsEmptyIcon(item.needsEmptyIcon);

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -166,7 +166,7 @@ public AppBarLayout(Context context, AttributeSet attrs) {
 
         final TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.AppBarLayout,
                 0, R.style.Widget_Design_AppBarLayout);
-        setBackgroundDrawable(a.getDrawable(R.styleable.AppBarLayout_android_background));
+        ViewCompat.setBackground(this, a.getDrawable(R.styleable.AppBarLayout_android_background));
         if (a.hasValue(R.styleable.AppBarLayout_expanded)) {
             setExpanded(a.getBoolean(R.styleable.AppBarLayout_expanded, false));
         }

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -110,8 +110,8 @@ public NavigationView(Context context, AttributeSet attrs, int defStyleAttr) {
                 R.styleable.NavigationView, defStyleAttr,
                 R.style.Widget_Design_NavigationView);
 
-        //noinspection deprecation
-        setBackgroundDrawable(a.getDrawable(R.styleable.NavigationView_android_background));
+        ViewCompat.setBackground(
+                this, a.getDrawable(R.styleable.NavigationView_android_background));
         if (a.hasValue(R.styleable.NavigationView_elevation)) {
             ViewCompat.setElevation(this, a.getDimensionPixelSize(
                     R.styleable.NavigationView_elevation, 0));

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -1495,7 +1495,8 @@ class TabView extends LinearLayout implements OnLongClickListener {
         public TabView(Context context) {
             super(context);
             if (mTabBackgroundResId != 0) {
-                setBackgroundDrawable(AppCompatResources.getDrawable(context, mTabBackgroundResId));
+                ViewCompat.setBackground(
+                        this, AppCompatResources.getDrawable(context, mTabBackgroundResId));
             }
             ViewCompat.setPaddingRelative(this, mTabPaddingStart, mTabPaddingTop,
                     mTabPaddingEnd, mTabPaddingBottom);

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -867,7 +867,7 @@ private void ensureBackgroundDrawableStateWorkaround() {
                 // as the background. This has the unfortunate side-effect of wiping out any
                 // user set padding, but I'd hope that use of custom padding on an EditText
                 // is limited.
-                mEditText.setBackgroundDrawable(newBg);
+                ViewCompat.setBackground(mErrorView, newBg);
                 mHasReconstructedEditTextBackground = true;
             }
         }

File: tests/src/android/support/design/widget/AppBarWithCollapsingToolbarTest.java
Patch:
@@ -159,11 +159,12 @@ public void testScrollingToolbar() {
 
         assertAppBarElevation(0f);
 
-        // Perform a swipe-up gesture across the horizontal center of the screen.
+        // Perform a swipe-up gesture across the horizontal center of the screen, starting from
+        // just below the AppBarLayout
         performVerticalSwipeUpGesture(
                 R.id.coordinator_layout,
                 centerX,
-                originalAppbarBottom + longSwipeAmount / 2,
+                originalAppbarBottom + 20,
                 longSwipeAmount);
 
         mAppBar.getLocationOnScreen(appbarOnScreenXY);

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -453,7 +453,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
                 // Update the expanded bounds
                 mCollapsingTextHelper.setExpandedBounds(
                         isRtl ? mExpandedMarginEnd : mExpandedMarginStart,
-                        mTmpRect.bottom + mExpandedMarginTop,
+                        mExpandedMarginTop,
                         right - left - (isRtl ? mExpandedMarginStart : mExpandedMarginEnd),
                         bottom - top - mExpandedMarginBottom);
                 // Now recalculate using the new bounds

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -1130,9 +1130,9 @@ void selectTab(final Tab tab, boolean updateIndicator) {
                 } else {
                     animateToTab(newPosition);
                 }
-            }
-            if (newPosition != Tab.INVALID_POSITION) {
-                setSelectedTabView(newPosition);
+                if (newPosition != Tab.INVALID_POSITION) {
+                    setSelectedTabView(newPosition);
+                }
             }
             dispatchTabUnselected(currentTab);
             mSelectedTab = tab;

File: tests/src/android/support/design/widget/FloatingActionButtonTest.java
Patch:
@@ -31,6 +31,8 @@
 import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static android.support.test.espresso.matcher.ViewMatchers.withId;
 
+import static org.hamcrest.Matchers.not;
+
 import android.graphics.Color;
 import android.support.design.test.R;
 import android.support.design.testutils.TestUtils;

File: src/android/support/design/widget/Snackbar.java
Patch:
@@ -477,7 +477,7 @@ public void onDragStateChanged(int state) {
                 });
                 clp.setBehavior(behavior);
                 // Also set the inset edge so that views can dodge the snackbar correctly
-                clp.insetEdge = Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL;
+                clp.insetEdge = Gravity.BOTTOM;
             }
 
             mTargetParent.addView(mView);

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -2553,7 +2553,7 @@ public void setAnchorId(@IdRes int id) {
          *
          * @return The current behavior or null if no behavior is specified
          */
-        @NonNull
+        @Nullable
         public Behavior getBehavior() {
             return mBehavior;
         }

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -1347,7 +1347,7 @@ public boolean onDependentViewChanged(CoordinatorLayout parent, View child,
         }
 
         @Override
-        public boolean onChildRectangleRequestedOnScreen(CoordinatorLayout parent, View child,
+        public boolean onRequestChildRectangleOnScreen(CoordinatorLayout parent, View child,
                 Rect rectangle, boolean immediate) {
             final AppBarLayout header = findFirstDependency(parent.getDependencies(child));
             if (header != null) {

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -1984,7 +1984,7 @@ public void onDependentViewRemoved(CoordinatorLayout parent, V child, View depen
 
         /**
          * @deprecated this method is not called anymore. You can safely remove all usages
-         * and implementations.
+         * and implementations. This method will be removed in a future release.
          */
         @Deprecated
         public boolean isDirty(CoordinatorLayout parent, V child) {
@@ -2310,7 +2310,7 @@ public WindowInsetsCompat onApplyWindowInsets(CoordinatorLayout coordinatorLayou
          * @return true if the Behavior handled the request
          * @see ViewParent#requestChildRectangleOnScreen(View, Rect, boolean)
          */
-        public boolean onChildRectangleRequestedOnScreen(CoordinatorLayout coordinatorLayout,
+        public boolean onRequestChildRectangleOnScreen(CoordinatorLayout coordinatorLayout,
                 V child, Rect rectangle, boolean immediate) {
             return false;
         }
@@ -2801,7 +2801,7 @@ public boolean requestChildRectangleOnScreen(View child, Rect rectangle, boolean
         final Behavior behavior = lp.getBehavior();
 
         if (behavior != null
-                && behavior.onChildRectangleRequestedOnScreen(this, child, rectangle, immediate)) {
+                && behavior.onRequestChildRectangleOnScreen(this, child, rectangle, immediate)) {
             return true;
         }
 

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -774,13 +774,13 @@ private void offsetIfNeeded(CoordinatorLayout parent, FloatingActionButton fab)
                 int offsetTB = 0, offsetLR = 0;
 
                 if (fab.getRight() >= parent.getWidth() - lp.rightMargin) {
-                    // If we're on the left edge, shift it the right
+                    // If we're on the right edge, shift it the right
                     offsetLR = padding.right;
                 } else if (fab.getLeft() <= lp.leftMargin) {
                     // If we're on the left edge, shift it the left
                     offsetLR = -padding.left;
                 }
-                if (fab.getBottom() >= parent.getBottom() - lp.bottomMargin) {
+                if (fab.getBottom() >= parent.getHeight() - lp.bottomMargin) {
                     // If we're on the bottom edge, shift it down
                     offsetTB = padding.bottom;
                 } else if (fab.getTop() <= lp.topMargin) {

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -200,7 +200,7 @@ public CollapsingToolbarLayout(Context context, AttributeSet attrs, int defStyle
                             R.styleable.CollapsingToolbarLayout_collapsedTitleTextAppearance, 0));
         }
 
-        mScrimVisibleHeightTrigger = a.getInt(
+        mScrimVisibleHeightTrigger = a.getDimensionPixelSize(
                 R.styleable.CollapsingToolbarLayout_scrimVisibleHeightTrigger, -1);
 
         mScrimAnimationDuration = a.getInt(

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -27,6 +27,7 @@
 import android.support.design.R;
 import android.support.v4.os.ParcelableCompat;
 import android.support.v4.os.ParcelableCompatCreatorCallbacks;
+import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.WindowInsetsCompat;
 import android.util.AttributeSet;
@@ -1270,13 +1271,13 @@ public void onRestoreInstanceState(CoordinatorLayout parent, AppBarLayout appBar
             }
         }
 
-        protected static class SavedState extends BaseSavedState {
+        protected static class SavedState extends AbsSavedState {
             int firstVisibleChildIndex;
             float firstVisibileChildPercentageShown;
             boolean firstVisibileChildAtMinimumHeight;
 
             public SavedState(Parcel source, ClassLoader loader) {
-                super(source);
+                super(source, loader);
                 firstVisibleChildIndex = source.readInt();
                 firstVisibileChildPercentageShown = source.readFloat();
                 firstVisibileChildAtMinimumHeight = source.readByte() != 0;

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -37,6 +37,7 @@
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.os.ParcelableCompat;
 import android.support.v4.os.ParcelableCompatCreatorCallbacks;
+import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.view.MotionEventCompat;
 import android.support.v4.view.NestedScrollingParent;
@@ -2658,11 +2659,11 @@ protected Parcelable onSaveInstanceState() {
         return ss;
     }
 
-    protected static class SavedState extends BaseSavedState {
+    protected static class SavedState extends AbsSavedState {
         SparseArray<Parcelable> behaviorStates;
 
         public SavedState(Parcel source, ClassLoader loader) {
-            super(source);
+            super(source, loader);
 
             final int size = source.readInt();
 

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -37,6 +37,7 @@
 import android.support.v4.content.ContextCompat;
 import android.support.v4.os.ParcelableCompat;
 import android.support.v4.os.ParcelableCompatCreatorCallbacks;
+import android.support.v4.view.AbsSavedState;
 import android.support.v4.view.ViewCompat;
 import android.support.v7.view.SupportMenuInflater;
 import android.support.v7.view.menu.MenuBuilder;
@@ -449,11 +450,11 @@ public interface OnNavigationItemSelectedListener {
      * User interface state that is stored by NavigationView for implementing
      * onSaveInstanceState().
      */
-    public static class SavedState extends BaseSavedState {
+    public static class SavedState extends AbsSavedState {
         public Bundle menuState;
 
         public SavedState(Parcel in, ClassLoader loader) {
-            super(in);
+            super(in, loader);
             menuState = in.readBundle(loader);
         }
 

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -551,6 +551,9 @@ public void setError(@Nullable final CharSequence error) {
                 && !TextUtils.equals(mErrorView.getText(), error);
         mErrorShown = !TextUtils.isEmpty(error);
 
+        // Cancel any on-going animation
+        ViewCompat.animate(mErrorView).cancel();
+
         if (mErrorShown) {
             mErrorView.setText(error);
             mErrorView.setVisibility(VISIBLE);

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -574,7 +574,7 @@ public boolean onDependentViewChanged(CoordinatorLayout parent, FloatingActionBu
         public void onDependentViewRemoved(CoordinatorLayout parent, FloatingActionButton child,
                 View dependency) {
             if (dependency instanceof Snackbar.SnackbarLayout) {
-                updateFabTranslationForSnackbar(parent, child, dependency);
+                updateFabTranslationForSnackbar(parent, child, true);
             }
         }
 

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -725,7 +725,7 @@ private void updateEditTextBackground() {
 
     private void ensureBackgroundDrawableStateWorkaround() {
         final int sdk = Build.VERSION.SDK_INT;
-        if (sdk != 21 || sdk != 22) {
+        if (sdk != 21 && sdk != 22) {
             // The workaround is only required on API 21-22
             return;
         }

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -1203,7 +1203,7 @@ private void offsetChildAsNeeded(CoordinatorLayout parent, View child, View depe
                 // any vertical gap, and overlap
                 final Behavior ablBehavior = (Behavior) behavior;
                 final int offset = ablBehavior.getTopBottomOffsetForScrollingSibling();
-                child.offsetTopAndBottom((dependency.getBottom() - child.getTop())
+                ViewCompat.offsetTopAndBottom(child, (dependency.getBottom() - child.getTop())
                         + ablBehavior.mOffsetDelta
                         + getVerticalLayoutGap()
                         - getOverlapPixelsForOffset(dependency));

File: src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -108,7 +108,8 @@ private void setActionView(View actionView) {
 
     private StateListDrawable createDefaultBackground() {
         TypedValue value = new TypedValue();
-        if (getContext().getTheme().resolveAttribute(R.attr.colorControlHighlight, value, true)) {
+        if (getContext().getTheme().resolveAttribute(
+                android.support.v7.appcompat.R.attr.colorControlHighlight, value, true)) {
             StateListDrawable drawable = new StateListDrawable();
             drawable.addState(CHECKED_STATE_SET, new ColorDrawable(value.data));
             drawable.addState(EMPTY_STATE_SET, new ColorDrawable(Color.TRANSPARENT));

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -179,7 +179,7 @@ public CollapsingToolbarLayout(Context context, AttributeSet attrs, int defStyle
         mCollapsingTextHelper.setExpandedTextAppearance(
                 R.style.TextAppearance_Design_CollapsingToolbar_Expanded);
         mCollapsingTextHelper.setCollapsedTextAppearance(
-                R.style.TextAppearance_AppCompat_Widget_ActionBar_Title);
+                android.support.v7.appcompat.R.style.TextAppearance_AppCompat_Widget_ActionBar_Title);
 
         // Now overlay any custom text appearances
         if (a.hasValue(R.styleable.CollapsingToolbarLayout_expandedTitleTextAppearance)) {

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -413,7 +413,8 @@ private ColorStateList createDefaultColorStateList(int baseColorThemeAttr) {
             return null;
         }
         ColorStateList baseColor = getResources().getColorStateList(value.resourceId);
-        if (!getContext().getTheme().resolveAttribute(R.attr.colorPrimary, value, true)) {
+        if (!getContext().getTheme().resolveAttribute(
+                    android.support.v7.appcompat.R.attr.colorPrimary, value, true)) {
             return null;
         }
         int colorPrimary = value.data;

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -494,7 +494,7 @@ public void setErrorEnabled(boolean enabled) {
                     // Probably caused by our theme not extending from Theme.Design*. Instead
                     // we manually set something appropriate
                     mErrorView.setTextAppearance(getContext(),
-                            R.style.TextAppearance_AppCompat_Caption);
+                            android.support.v7.appcompat.R.style.TextAppearance_AppCompat_Caption);
                     mErrorView.setTextColor(ContextCompat.getColor(
                             getContext(), R.color.design_textinput_error_color_light));
                 }
@@ -615,7 +615,7 @@ public void setCounterEnabled(boolean enabled) {
                     // Probably caused by our theme not extending from Theme.Design*. Instead
                     // we manually set something appropriate
                     mCounterView.setTextAppearance(getContext(),
-                            R.style.TextAppearance_AppCompat_Caption);
+                            android.support.v7.appcompat.R.style.TextAppearance_AppCompat_Caption);
                     mCounterView.setTextColor(ContextCompat.getColor(
                             getContext(), R.color.design_textinput_error_color_light));
                 }

File: src/android/support/design/widget/ThemeUtils.java
Patch:
@@ -22,7 +22,9 @@
 
 class ThemeUtils {
 
-    private static final int[] APPCOMPAT_CHECK_ATTRS = { R.attr.colorPrimary };
+    private static final int[] APPCOMPAT_CHECK_ATTRS = {
+            android.support.v7.appcompat.R.attr.colorPrimary
+    };
 
     static void checkAppCompatTheme(Context context) {
         TypedArray a = context.obtainStyledAttributes(APPCOMPAT_CHECK_ATTRS);

File: src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -441,6 +441,9 @@ public void setBottomSheetCallback(BottomSheetCallback callback) {
      *              {@link #STATE_HIDDEN}.
      */
     public final void setState(@State int state) {
+        if (state == mState) {
+            return;
+        }
         if (mViewRef == null) {
             // The view is not laid out yet; modify mState and let onLayoutChild handle it later
             if (state == STATE_COLLAPSED || state == STATE_EXPANDED ||

File: src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -441,6 +441,9 @@ public void setBottomSheetCallback(BottomSheetCallback callback) {
      *              {@link #STATE_HIDDEN}.
      */
     public final void setState(@State int state) {
+        if (mViewRef == null) {
+            return;
+        }
         V child = mViewRef.get();
         if (child == null) {
             return;

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -384,7 +384,7 @@ public void setSize(@Size int size) {
     /**
      * Returns the chosen size for this button.
      *
-     * @returns one of {@link #SIZE_NORMAL}, {@link #SIZE_MINI} or {@link #SIZE_AUTO}
+     * @return one of {@link #SIZE_NORMAL}, {@link #SIZE_MINI} or {@link #SIZE_AUTO}
      * @see #setSize(int)
      */
     @Size

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -381,7 +381,7 @@ private int getDownNestedPreScrollRange() {
                 break;
             }
         }
-        return mDownPreScrollRange = Math.max(0, range - getTopInset());
+        return mDownPreScrollRange = Math.max(0, range);
     }
 
     /**

File: src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -278,7 +278,7 @@ public boolean onTouchEvent(CoordinatorLayout parent, V child, MotionEvent event
         mVelocityTracker.addMovement(event);
         // The ViewDragHelper tries to capture only the top-most View. We have to explicitly tell it
         // to capture the bottom sheet in case it is not captured and the touch slop is passed.
-        if (action == MotionEvent.ACTION_MOVE) {
+        if (action == MotionEvent.ACTION_MOVE && !mIgnoreEvents) {
             if (Math.abs(mInitialY - event.getY()) > mViewDragHelper.getTouchSlop()) {
                 mViewDragHelper.captureChildView(child, event.getPointerId(event.getActionIndex()));
             }

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -754,7 +754,7 @@ static class SavedState extends BaseSavedState {
 
         public SavedState(Parcel source) {
             super(source);
-            error = source.readString();
+            error = TextUtils.CHAR_SEQUENCE_CREATOR.createFromParcel(source);
 
         }
 

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -18,7 +18,6 @@
 
 import android.content.Context;
 import android.content.res.ColorStateList;
-import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
 import android.graphics.Paint;
@@ -606,7 +605,7 @@ public void setCounterEnabled(boolean enabled) {
                 mCounterView.setMaxLines(1);
                 try {
                     mCounterView.setTextAppearance(getContext(), mCounterTextAppearance);
-                } catch (Resources.NotFoundException nfe) {
+                } catch (Exception e) {
                     // Probably caused by our theme not extending from Theme.Design*. Instead
                     // we manually set something appropriate
                     mCounterView.setTextAppearance(getContext(),

File: tests/src/android/support/design/widget/AppBarLayoutBaseTest.java
Patch:
@@ -48,7 +48,7 @@ public abstract class AppBarLayoutBaseTest extends BaseDynamicCoordinatorLayoutT
 
     protected TextView mTextView;
 
-    protected static void performVerticalUpGesture(@IdRes int containerId, final int swipeX,
+    protected static void performVerticalSwipeUpGesture(@IdRes int containerId, final int swipeX,
             final int swipeStartY, final int swipeAmountY) {
         onView(withId(containerId)).perform(new GeneralSwipeAction(
                 Swipe.SLOW,

File: tests/src/android/support/design/widget/AppBarWithToolbarTest.java
Patch:
@@ -45,7 +45,7 @@ public void testScrollToolbarWithFitSystemWindowsParent() {
         final int longSwipeAmount = 3 * appbarHeight / 2;
 
         // Perform a swipe-up gesture across the horizontal center of the screen.
-        performVerticalUpGesture(
+        performVerticalSwipeUpGesture(
                 R.id.coordinator_layout,
                 centerX,
                 originalAppbarBottom + 3 * longSwipeAmount / 2,

File: src/android/support/design/widget/BottomSheetBehavior.java
Patch:
@@ -192,7 +192,7 @@ public boolean onLayoutChild(CoordinatorLayout parent, V child, int layoutDirect
         // Offset the bottom sheet
         mParentHeight = parent.getHeight();
         mMinOffset = Math.max(0, mParentHeight - child.getHeight());
-        mMaxOffset = mParentHeight - mPeekHeight;
+        mMaxOffset = Math.max(mParentHeight - mPeekHeight, mMinOffset);
         if (mState == STATE_EXPANDED) {
             ViewCompat.offsetTopAndBottom(child, mMinOffset);
         } else if (mHideable && mState == STATE_HIDDEN) {

File: base/android/support/design/widget/VisibilityAwareImageButton.java
Patch:
@@ -17,11 +17,10 @@
 package android.support.design.widget;
 
 import android.content.Context;
-import android.support.v7.widget.AppCompatImageButton;
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-class VisibilityAwareImageButton extends AppCompatImageButton {
+class VisibilityAwareImageButton extends ImageButton {
 
     private int mUserSetVisibility;
 

File: tests/src/android/support/design/widget/BottomSheetBehaviorTest.java
Patch:
@@ -177,6 +177,7 @@ public void testSwipeDownToHide() {
                 .perform(DesignViewActions.withCustomConstraints(ViewActions.swipeDown(),
                         ViewMatchers.isDisplayingAtLeast(5)));
         // Avoid a deadlock (b/26160710)
+        registerIdlingResourceCallback();
         try {
             Espresso.onView(ViewMatchers.withId(R.id.bottom_sheet))
                     .check(ViewAssertions.matches(not(ViewMatchers.isDisplayed())));

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -129,7 +129,7 @@ public CollapsingToolbarLayout(Context context) {
     }
 
     public CollapsingToolbarLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, R.attr.collapsingToolbarLayoutStyle);
+        this(context, attrs, 0);
     }
 
     public CollapsingToolbarLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -173,7 +173,7 @@ public CoordinatorLayout(Context context) {
     }
 
     public CoordinatorLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, R.attr.coordinatorLayoutStyle);
+        this(context, attrs, 0);
     }
 
     public CoordinatorLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -104,7 +104,7 @@ public FloatingActionButton(Context context) {
     }
 
     public FloatingActionButton(Context context, AttributeSet attrs) {
-        this(context, attrs, R.attr.floatingActionButtonStyle);
+        this(context, attrs, 0);
     }
 
     public FloatingActionButton(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -92,7 +92,7 @@ public NavigationView(Context context) {
     }
 
     public NavigationView(Context context, AttributeSet attrs) {
-        this(context, attrs, R.attr.navigationViewStyle);
+        this(context, attrs, 0);
     }
 
     public NavigationView(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -258,7 +258,7 @@ public TabLayout(Context context) {
     }
 
     public TabLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, R.attr.tabLayoutStyle);
+        this(context, attrs, 0);
     }
 
     public TabLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -124,7 +124,7 @@ public TextInputLayout(Context context) {
     }
 
     public TextInputLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, R.attr.textInputLayoutStyle);
+        this(context, attrs, 0);
     }
 
     public TextInputLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -129,7 +129,7 @@ public CollapsingToolbarLayout(Context context) {
     }
 
     public CollapsingToolbarLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
+        this(context, attrs, R.attr.collapsingToolbarLayoutStyle);
     }
 
     public CollapsingToolbarLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -173,7 +173,7 @@ public CoordinatorLayout(Context context) {
     }
 
     public CoordinatorLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
+        this(context, attrs, R.attr.coordinatorLayoutStyle);
     }
 
     public CoordinatorLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -104,7 +104,7 @@ public FloatingActionButton(Context context) {
     }
 
     public FloatingActionButton(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
+        this(context, attrs, R.attr.floatingActionButtonStyle);
     }
 
     public FloatingActionButton(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -92,7 +92,7 @@ public NavigationView(Context context) {
     }
 
     public NavigationView(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
+        this(context, attrs, R.attr.navigationViewStyle);
     }
 
     public NavigationView(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -258,7 +258,7 @@ public TabLayout(Context context) {
     }
 
     public TabLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
+        this(context, attrs, R.attr.tabLayoutStyle);
     }
 
     public TabLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -124,7 +124,7 @@ public TextInputLayout(Context context) {
     }
 
     public TextInputLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
+        this(context, attrs, R.attr.textInputLayoutStyle);
     }
 
     public TextInputLayout(Context context, AttributeSet attrs, int defStyleAttr) {

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -485,7 +485,7 @@ public void setErrorEnabled(boolean enabled) {
                 mErrorView = new TextView(getContext());
                 try {
                     mErrorView.setTextAppearance(getContext(), mErrorTextAppearance);
-                } catch (Resources.NotFoundException nfe) {
+                } catch (Exception e) {
                     // Probably caused by our theme not extending from Theme.Design*. Instead
                     // we manually set something appropriate
                     mErrorView.setTextAppearance(getContext(),

File: base/android/support/design/widget/VisibilityAwareImageButton.java
Patch:
@@ -17,10 +17,11 @@
 package android.support.design.widget;
 
 import android.content.Context;
+import android.support.v7.widget.AppCompatImageButton;
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-class VisibilityAwareImageButton extends ImageButton {
+class VisibilityAwareImageButton extends AppCompatImageButton {
 
     private int mUserSetVisibility;
 

File: tests/src/android/support/design/testutils/ViewPagerActions.java
Patch:
@@ -162,7 +162,7 @@ public Matcher<View> getConstraints() {
 
             @Override
             public String getDescription() {
-                return "ViewPager move one page to the right";
+                return "ViewPager move to a specific page";
             }
 
             @Override

File: src/android/support/design/widget/Snackbar.java
Patch:
@@ -761,7 +761,7 @@ void animateChildrenOut(int delay, int duration) {
         @Override
         protected void onLayout(boolean changed, int l, int t, int r, int b) {
             super.onLayout(changed, l, t, r, b);
-            if (changed && mOnLayoutChangeListener != null) {
+            if (mOnLayoutChangeListener != null) {
                 mOnLayoutChangeListener.onLayoutChange(this, l, t, r, b);
             }
         }

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -372,7 +372,8 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         if (mCollapsingTitleEnabled && mDummyView != null) {
             // We only draw the title if the dummy view is being displayed (Toolbar removes
             // views if there is no space)
-            mDrawCollapsingTitle = mDummyView.isShown();
+            mDrawCollapsingTitle = ViewCompat.isAttachedToWindow(mDummyView)
+                    && mDummyView.getVisibility() == VISIBLE;
 
             if (mDrawCollapsingTitle) {
                 final boolean isRtl = ViewCompat.getLayoutDirection(this)

File: src/android/support/design/widget/Snackbar.java
Patch:
@@ -147,8 +147,8 @@ public void onShown(Snackbar snackbar) {
      */
     public static final int LENGTH_LONG = 0;
 
-    private static final int ANIMATION_DURATION = 250;
-    private static final int ANIMATION_FADE_DURATION = 180;
+    static final int ANIMATION_DURATION = 250;
+    static final int ANIMATION_FADE_DURATION = 180;
 
     private static final Handler sHandler;
     private static final int MSG_SHOW = 0;

File: src/android/support/design/widget/BottomSheetDialog.java
Patch:
@@ -57,6 +57,8 @@ public void setContentView(@LayoutRes int layoutResId) {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        getWindow().setLayout(
+                ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);
     }
 
     @Override

File: src/android/support/design/widget/SnackbarManager.java
Patch:
@@ -197,6 +197,8 @@ private void showNextSnackbarLocked() {
     private boolean cancelSnackbarLocked(SnackbarRecord record, int event) {
         final Callback callback = record.callback.get();
         if (callback != null) {
+            // Make sure we remove any timeouts for the SnackbarRecord
+            mHandler.removeCallbacksAndMessages(record);
             callback.dismiss(event);
             return true;
         }

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -19,6 +19,7 @@
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.content.res.Resources;
+import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
@@ -515,7 +516,7 @@ private void appendTransparentIconIfMissing(int startIndex, int endIndex) {
                 MenuItem item = textItem.getMenuItem();
                 if (item.getIcon() == null) {
                     if (mTransparentIcon == null) {
-                        mTransparentIcon = new ColorDrawable(android.R.color.transparent);
+                        mTransparentIcon = new ColorDrawable(Color.TRANSPARENT);
                     }
                     item.setIcon(mTransparentIcon);
                 }

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -1855,7 +1855,7 @@ public boolean onMeasureChild(CoordinatorLayout parent, V child,
          * in place of the default child layout behavior. The Behavior's implementation can
          * delegate to the standard CoordinatorLayout measurement behavior by calling
          * {@link CoordinatorLayout#onLayoutChild(android.view.View, int)
-         * parent.onMeasureChild}.</p>
+         * parent.onLayoutChild}.</p>
          *
          * <p>If a Behavior implements
          * {@link #onDependentViewChanged(CoordinatorLayout, android.view.View, android.view.View)}

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -278,8 +278,6 @@ private void updateLabelState(boolean animate) {
 
         if (mCounterOverflowed && mCounterView != null) {
             mCollapsingTextHelper.setCollapsedTextColor(mCounterView.getCurrentTextColor());
-        } else if (isErrorShowing && mErrorView != null) {
-            mCollapsingTextHelper.setCollapsedTextColor(mErrorView.getCurrentTextColor());
         } else if (isFocused && mFocusedTextColor != null) {
             mCollapsingTextHelper.setCollapsedTextColor(mFocusedTextColor.getDefaultColor());
         } else if (mDefaultTextColor != null) {

File: src/android/support/design/internal/ForegroundLinearLayout.java
Patch:
@@ -45,7 +45,7 @@ public class ForegroundLinearLayout extends LinearLayoutCompat {
     boolean mForegroundBoundsChanged = false;
 
     public ForegroundLinearLayout(Context context) {
-        super(context);
+        this(context, null);
     }
 
     public ForegroundLinearLayout(Context context, AttributeSet attrs) {

File: src/android/support/design/widget/ViewOffsetHelper.java
Patch:
@@ -66,9 +66,9 @@ private void updateOffsets() {
     }
 
     private static void tickleInvalidationFlag(View view) {
-        final float x = ViewCompat.getTranslationX(view);
-        ViewCompat.setTranslationY(view, x + 1);
-        ViewCompat.setTranslationY(view, x);
+        final float y = ViewCompat.getTranslationY(view);
+        ViewCompat.setTranslationY(view, y + 1);
+        ViewCompat.setTranslationY(view, y);
     }
 
     /**

File: src/android/support/design/widget/CollapsingTextHelper.java
Patch:
@@ -560,7 +560,7 @@ private void ensureExpandedTexture() {
         final int w = Math.round(mTextPaint.measureText(mTextToDraw, 0, mTextToDraw.length()));
         final int h = Math.round(mTextureDescent - mTextureAscent);
 
-        if (w <= 0 && h <= 0) {
+        if (w <= 0 || h <= 0) {
             return; // If the width or height are 0, return
         }
 

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -653,7 +653,7 @@ private void offsetIfNeeded(CoordinatorLayout parent, FloatingActionButton fab)
     /**
      * Returns the backward compatible elevation of the FloatingActionButton.
      *
-     * @returns the backward compatible elevation in pixels.
+     * @return the backward compatible elevation in pixels.
      * @attr ref android.support.design.R.styleable#FloatingActionButton_elevation
      * @see #setFloatingActionButtonElevation(float)
      */

File: base/android/support/design/widget/VisibilityAwareImageButton.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014 The Android Open Source Project
+ * Copyright (C) 2015 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -17,10 +17,10 @@
 package android.support.design.widget;
 
 import android.content.Context;
-import android.support.v7.widget.AppCompatImageButton;
 import android.util.AttributeSet;
+import android.widget.ImageButton;
 
-class VisibilityAwareImageButton extends AppCompatImageButton {
+class VisibilityAwareImageButton extends ImageButton {
 
     private int mUserSetVisibility;
 

File: src/android/support/design/widget/CollapsingToolbarLayout.java
Patch:
@@ -689,7 +689,7 @@ public void setCollapsedTitleTextColor(@ColorInt int color) {
      * @attr ref android.support.design.R.styleable#CollapsingToolbarLayout_collapsedTitleGravity
      */
     public void setCollapsedTitleGravity(int gravity) {
-        mCollapsingTextHelper.setExpandedTextGravity(gravity);
+        mCollapsingTextHelper.setCollapsedTextGravity(gravity);
     }
 
     /**

File: src/android/support/design/internal/NavigationMenuView.java
Patch:
@@ -19,6 +19,7 @@
 import android.content.Context;
 import android.support.v7.internal.view.menu.MenuBuilder;
 import android.support.v7.internal.view.menu.MenuView;
+import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.util.AttributeSet;
 
@@ -37,6 +38,7 @@ public NavigationMenuView(Context context, AttributeSet attrs) {
 
     public NavigationMenuView(Context context, AttributeSet attrs, int defStyleAttr) {
         super(context, attrs, defStyleAttr);
+        setLayoutManager(new LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false));
     }
 
     @Override

File: lollipop/android/support/design/widget/FloatingActionButtonLollipop.java
Patch:
@@ -47,10 +47,10 @@ class FloatingActionButtonLollipop extends FloatingActionButtonIcs {
     }
 
     @Override
-    void setBackgroundDrawable(Drawable originalBackground, ColorStateList backgroundTint,
+    void setBackgroundDrawable(ColorStateList backgroundTint,
             PorterDuff.Mode backgroundTintMode, int rippleColor, int borderWidth) {
-        // Now we need to tint the original background with the tint
-        mShapeDrawable = DrawableCompat.wrap(originalBackground.mutate());
+        // Now we need to tint the shape background with the tint
+        mShapeDrawable = DrawableCompat.wrap(createShapeDrawable());
         DrawableCompat.setTintList(mShapeDrawable, backgroundTint);
         if (backgroundTintMode != null) {
             DrawableCompat.setTintMode(mShapeDrawable, backgroundTintMode);

File: ics/android/support/design/widget/FloatingActionButtonIcs.java
Patch:
@@ -22,11 +22,11 @@
 import android.support.v4.view.ViewCompat;
 import android.view.View;
 
-class FloatingActionButtonHoneycombMr1 extends FloatingActionButtonEclairMr1 {
+class FloatingActionButtonIcs extends FloatingActionButtonEclairMr1 {
 
     private boolean mIsHiding;
 
-    FloatingActionButtonHoneycombMr1(View view, ShadowViewDelegate shadowViewDelegate) {
+    FloatingActionButtonIcs(View view, ShadowViewDelegate shadowViewDelegate) {
         super(view, shadowViewDelegate);
     }
 

File: lollipop/android/support/design/widget/FloatingActionButtonLollipop.java
Patch:
@@ -33,7 +33,7 @@
 import android.view.animation.Interpolator;
 
 @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-class FloatingActionButtonLollipop extends FloatingActionButtonHoneycombMr1 {
+class FloatingActionButtonLollipop extends FloatingActionButtonIcs {
 
     private Interpolator mInterpolator;
 

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -147,8 +147,8 @@ public void setBackgroundDrawable(Drawable background) {
         final int sdk = Build.VERSION.SDK_INT;
         if (sdk >= 21) {
             mImpl = new FloatingActionButtonLollipop(this, delegate);
-        } else if (sdk >= 12) {
-            mImpl = new FloatingActionButtonHoneycombMr1(this, delegate);
+        } else if (sdk >= 14) {
+            mImpl = new FloatingActionButtonIcs(this, delegate);
         } else {
             mImpl = new FloatingActionButtonEclairMr1(this, delegate);
         }

File: src/android/support/design/widget/FloatingActionButton.java
Patch:
@@ -259,15 +259,15 @@ public void setBackgroundDrawable(@NonNull Drawable background) {
 
     /**
      * Shows the button.
-     * <p>This method will animate it the button show if the view has already been laid out.</p>
+     * <p>This method will animate the button show if the view has already been laid out.</p>
      */
     public void show() {
         mImpl.show(null);
     }
 
     /**
      * Shows the button.
-     * <p>This method will animate it the button show if the view has already been laid out.</p>
+     * <p>This method will animate the button show if the view has already been laid out.</p>
      *
      * @param listener the listener to notify when this view is shown
      */

File: src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -145,7 +145,8 @@ public void setShortcut(boolean showShortcut, char shortcutKey) {
     @Override
     public void setIcon(Drawable icon) {
         if (icon != null) {
-            icon = DrawableCompat.wrap(icon.getConstantState().newDrawable()).mutate();
+            Drawable.ConstantState state = icon.getConstantState();
+            icon = DrawableCompat.wrap(state == null ? icon : state.newDrawable()).mutate();
             icon.setBounds(0, 0, mIconSize, mIconSize);
             DrawableCompat.setTintList(icon, mIconTintList);
         }

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -415,7 +415,7 @@ private int getDownNestedScrollRange() {
                 break;
             }
         }
-        return mDownScrollRange = Math.max(0, range - getTopInset());
+        return mDownScrollRange = Math.max(0, range);
     }
 
     final int getMinimumHeightForVisibleOverlappingContent() {

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -1243,7 +1243,7 @@ private int getOverlapForOffset(final View dependency, final int offset) {
                     return 0;
                 } else {
                     final int availScrollRange = totalScrollRange - preScrollDown;
-                    if (availScrollRange == 0) {
+                    if (availScrollRange != 0) {
                         // Else we'll use a interpolated ratio of the overlap, depending on offset
                         final float percScrolled = offset / (float) availScrollRange;
                         return MathUtils.constrain(

File: src/android/support/design/widget/CoordinatorLayout.java
Patch:
@@ -443,7 +443,7 @@ public boolean onTouchEvent(MotionEvent ev) {
         if (mBehaviorTouchView == null) {
             handled |= super.onTouchEvent(ev);
         } else if (cancelSuper) {
-            if (cancelEvent != null) {
+            if (cancelEvent == null) {
                 final long now = SystemClock.uptimeMillis();
                 cancelEvent = MotionEvent.obtain(now, now,
                         MotionEvent.ACTION_CANCEL, 0.0f, 0.0f, 0);

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -27,6 +27,7 @@
 import android.support.annotation.StyleRes;
 import android.support.design.R;
 import android.support.v4.view.AccessibilityDelegateCompat;
+import android.support.v4.view.GravityCompat;
 import android.support.v4.view.ViewCompat;
 import android.support.v4.view.ViewPropertyAnimatorListenerAdapter;
 import android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;
@@ -93,7 +94,7 @@ public TextInputLayout(Context context, AttributeSet attrs, int defStyleAttr) {
 
         mCollapsingTextHelper.setTextSizeInterpolator(AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
         mCollapsingTextHelper.setPositionInterpolator(new AccelerateInterpolator());
-        mCollapsingTextHelper.setCollapsedTextGravity(Gravity.TOP);
+        mCollapsingTextHelper.setCollapsedTextGravity(Gravity.TOP | GravityCompat.START);
 
         final TypedArray a = context.obtainStyledAttributes(attrs,
                 R.styleable.TextInputLayout, defStyleAttr, R.style.Widget_Design_TextInputLayout);

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -656,13 +656,13 @@ public Behavior(Context context, AttributeSet attrs) {
         }
 
         @Override
-        public boolean onStartNestedScroll(CoordinatorLayout coordinatorLayout, AppBarLayout child,
+        public boolean onStartNestedScroll(CoordinatorLayout parent, AppBarLayout child,
                 View directTargetChild, View target, int nestedScrollAxes) {
             // Return true if we're nested scrolling vertically, and we have scrollable children
             // and the scrolling view is big enough to scroll
             final boolean started = (nestedScrollAxes & ViewCompat.SCROLL_AXIS_VERTICAL) != 0
                     && child.hasScrollableChildren()
-                    && coordinatorLayout.getHeight() - target.getHeight() <= child.getHeight();
+                    && parent.getHeight() - directTargetChild.getHeight() <= child.getHeight();
 
             if (started && mAnimator != null) {
                 // Cancel any offset animation

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -377,6 +377,7 @@ private void prepareMenuItems() {
             if (mUpdateSuspended) {
                 return;
             }
+            mUpdateSuspended = true;
             mItems.clear();
             int currentGroupId = -1;
             int currentGroupStart = 0;
@@ -438,6 +439,7 @@ private void prepareMenuItems() {
                     currentGroupId = groupId;
                 }
             }
+            mUpdateSuspended = false;
         }
 
         private void appendTransparentIconIfMissing(int startIndex, int endIndex) {

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -191,7 +191,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             setUpdateSuspended(true);
             MenuItemImpl item = mAdapter.getItem(positionInAdapter).getMenuItem();
             if (item != null && item.isCheckable()) {
-                setCheckedItem(item);
+                mAdapter.setCheckedItem(item);
             }
             mMenu.performItemAction(item, this, 0);
             setUpdateSuspended(false);

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -30,6 +30,7 @@
 import android.support.annotation.Nullable;
 import android.support.annotation.StyleRes;
 import android.support.design.R;
+import android.support.design.internal.NavigationMenu;
 import android.support.design.internal.NavigationMenuPresenter;
 import android.support.design.internal.ScrimInsetsFrameLayout;
 import android.support.v4.content.ContextCompat;
@@ -75,7 +76,7 @@ public class NavigationView extends ScrimInsetsFrameLayout {
 
     private static final int PRESENTER_NAVIGATION_VIEW_ID = 1;
 
-    private final MenuBuilder mMenu;
+    private final NavigationMenu mMenu;
     private final NavigationMenuPresenter mPresenter;
 
     private OnNavigationItemSelectedListener mListener;
@@ -95,7 +96,7 @@ public NavigationView(Context context, AttributeSet attrs, int defStyleAttr) {
         super(context, attrs, defStyleAttr);
 
         // Create the menu
-        mMenu = new MenuBuilder(context);
+        mMenu = new NavigationMenu(context);
 
         // Custom attributes
         TypedArray a = context.obtainStyledAttributes(attrs,

File: eclair-mr1/android/support/design/widget/FloatingActionButtonEclairMr1.java
Patch:
@@ -164,7 +164,7 @@ void hide() {
         }
 
         Animation anim = android.view.animation.AnimationUtils.loadAnimation(
-                mView.getContext(), R.anim.fab_out);
+                mView.getContext(), R.anim.design_fab_out);
         anim.setInterpolator(AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
         anim.setDuration(SHOW_HIDE_ANIM_DURATION);
         anim.setAnimationListener(new AnimationUtils.AnimationListenerAdapter() {
@@ -185,7 +185,7 @@ public void onAnimationEnd(Animation animation) {
     @Override
     void show() {
         Animation anim = android.view.animation.AnimationUtils.loadAnimation(
-                mView.getContext(), R.anim.fab_in);
+                mView.getContext(), R.anim.design_fab_in);
         anim.setDuration(SHOW_HIDE_ANIM_DURATION);
         anim.setInterpolator(AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR);
         mView.startAnimation(anim);

File: src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -52,7 +52,8 @@ public NavigationMenuItemView(Context context, AttributeSet attrs) {
 
     public NavigationMenuItemView(Context context, AttributeSet attrs, int defStyleAttr) {
         super(context, attrs, defStyleAttr);
-        mIconSize = context.getResources().getDimensionPixelSize(R.dimen.navigation_icon_size);
+        mIconSize = context.getResources().getDimensionPixelSize(
+                R.dimen.design_navigation_icon_size);
     }
 
     @Override

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -86,9 +86,10 @@ public void initForMenu(Context context, MenuBuilder menu) {
         mLayoutInflater = LayoutInflater.from(context);
         mMenu = menu;
         Resources res = context.getResources();
-        mPaddingTopDefault = res.getDimensionPixelOffset(R.dimen.navigation_padding_top_default);
+        mPaddingTopDefault = res.getDimensionPixelOffset(
+                R.dimen.design_navigation_padding_top_default);
         mPaddingSeparator = res.getDimensionPixelOffset(
-                R.dimen.navigation_separator_vertical_padding);
+                R.dimen.design_navigation_separator_vertical_padding);
     }
 
     @Override

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -1225,13 +1225,13 @@ final void update() {
                 // If there isn't a custom view, we'll us our own in-built layouts
                 if (mIconView == null) {
                     ImageView iconView = (ImageView) LayoutInflater.from(getContext())
-                            .inflate(R.layout.layout_tab_icon, this, false);
+                            .inflate(R.layout.design_layout_tab_icon, this, false);
                     addView(iconView, 0);
                     mIconView = iconView;
                 }
                 if (mTextView == null) {
                     TextView textView = (TextView) LayoutInflater.from(getContext())
-                            .inflate(R.layout.layout_tab_text, this, false);
+                            .inflate(R.layout.design_layout_tab_text, this, false);
                     addView(textView);
                     mTextView = textView;
                 }

File: src/android/support/design/internal/NavigationMenuItemView.java
Patch:
@@ -110,8 +110,7 @@ public void setShortcut(boolean showShortcut, char shortcutKey) {
     @Override
     public void setIcon(Drawable icon) {
         if (icon != null) {
-            icon = DrawableCompat.wrap(icon);
-            icon = icon.mutate();
+            icon = DrawableCompat.wrap(icon.getConstantState().newDrawable()).mutate();
             icon.setBounds(0, 0, mIconSize, mIconSize);
             DrawableCompat.setTintList(icon, mIconTintList);
         }

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -328,7 +328,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     if (mTextColor != null) {
                         itemView.setTextColor(mTextColor);
                     }
-                    itemView.setBackgroundDrawable(mItemBackground);
+                    itemView.setBackgroundDrawable(mItemBackground != null ?
+                            mItemBackground.getConstantState().newDrawable() : null);
                     itemView.initialize(item.getMenuItem(), 0);
                     break;
                 case VIEW_TYPE_SUBHEADER:

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -463,7 +463,9 @@ public void setCheckedItem(MenuItemImpl checkedItem) {
 
         public Bundle createInstanceState() {
             Bundle state = new Bundle();
-            state.putInt(STATE_CHECKED_ITEM, mCheckedItem.getItemId());
+            if (mCheckedItem != null) {
+                state.putInt(STATE_CHECKED_ITEM, mCheckedItem.getItemId());
+            }
             return state;
         }
 

File: src/android/support/design/widget/CollapsingTextHelper.java
Patch:
@@ -457,6 +457,7 @@ private void recalculate() {
     void setText(CharSequence text) {
         if (text == null || !text.equals(mText)) {
             mText = text;
+            mTextToDraw = null;
             clearTexture();
             recalculate();
         }

File: src/android/support/design/widget/NavigationView.java
Patch:
@@ -207,7 +207,10 @@ protected void onMeasure(int widthSpec, int heightSpec) {
      * @param resId ID of a menu resource to inflate
      */
     public void inflateMenu(int resId) {
+        mPresenter.setUpdateSuspended(true);
         getMenuInflater().inflate(resId, mMenu);
+        mPresenter.setUpdateSuspended(false);
+        mPresenter.updateMenuView(false);
     }
 
     /**

File: eclair-mr1/android/support/design/widget/FloatingActionButtonEclairMr1.java
Patch:
@@ -122,7 +122,7 @@ void setBackgroundTintMode(PorterDuff.Mode tintMode) {
 
     @Override
     void setRippleColor(int rippleColor) {
-        DrawableCompat.setTint(mRippleDrawable, rippleColor);
+        DrawableCompat.setTintList(mRippleDrawable, createColorStateList(rippleColor));
     }
 
     @Override

File: lollipop/android/support/design/widget/FloatingActionButtonLollipop.java
Patch:
@@ -91,7 +91,7 @@ void setBackgroundTintMode(PorterDuff.Mode tintMode) {
 
     @Override
     void setRippleColor(int rippleColor) {
-        DrawableCompat.setTint(mRippleDrawable, rippleColor);
+        mRippleDrawable.setColor(ColorStateList.valueOf(rippleColor));
     }
 
     @Override

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -349,7 +349,7 @@ final int getDownNestedScrollRange() {
         }
 
         int range = 0;
-        for (int i = getChildCount() - 1; i >= 0; i--) {
+        for (int i = 0, z = getChildCount(); i < z; i++) {
             final View child = getChildAt(i);
             final LayoutParams lp = (LayoutParams) child.getLayoutParams();
             final int childHeight = ViewCompat.isLaidOut(child)

File: src/android/support/design/internal/NavigationMenuPresenter.java
Patch:
@@ -282,7 +282,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                     NavigationMenuItemView itemView = (NavigationMenuItemView) convertView;
                     itemView.setIconTintList(mIconTintList);
                     itemView.setTextColor(mTextColor);
-                    itemView.setBackground(mItemBackground);
+                    itemView.setBackgroundDrawable(mItemBackground);
                     itemView.initialize(item.getMenuItem(), 0);
                     break;
                 case VIEW_TYPE_SUBHEADER:

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -337,9 +337,7 @@ public void onPageScrolled(int position, float positionOffset,
 
             @Override
             public void onPageSelected(int position) {
-                if (mScrollState == ViewPager.SCROLL_STATE_IDLE) {
-                    getTabAt(position).select();
-                }
+                getTabAt(position).select();
             }
         };
     }

File: src/android/support/design/widget/TabLayout.java
Patch:
@@ -327,7 +327,9 @@ public void onPageScrolled(int position, float positionOffset,
 
             @Override
             public void onPageSelected(int position) {
-                getTabAt(position).select();
+                if (mScrollState == ViewPager.SCROLL_STATE_IDLE) {
+                    getTabAt(position).select();
+                }
             }
         };
     }

File: src/android/support/design/widget/TextInputLayout.java
Patch:
@@ -246,8 +246,6 @@ public void setHint(CharSequence hint) {
      * Whether the error functionality is enabled or not in this layout. Enabling this
      * functionality before setting an error message via {@link #setError(CharSequence)}, will mean
      * that this layout will not change size when an error is displayed.
-     *
-     * @attr R.attr.errorEnabled
      */
     public void setErrorEnabled(boolean enabled) {
         if (mErrorEnabled != enabled) {

File: src/android/support/design/widget/AppBarLayout.java
Patch:
@@ -154,6 +154,7 @@ public AppBarLayout(Context context, AttributeSet attrs) {
         TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.AppBarLayout,
                 0, R.style.Widget_Design_AppBarLayout);
         mTargetElevation = a.getDimensionPixelSize(R.styleable.AppBarLayout_elevation, 0);
+        setBackgroundDrawable(a.getDrawable(R.styleable.AppBarLayout_android_background));
         a.recycle();
 
         // Use the bounds view outline provider so that we cast a shadow, even without a background

File: honeycomb/android/support/design/widget/CoordinatorLayoutHoneycomb.java
Patch:
@@ -57,7 +57,7 @@ static void offsetDescendantMatrix(ViewParent target, View view, Matrix m) {
             m.preTranslate(-vp.getScrollX(), -vp.getScrollY());
         }
 
-        m.preTranslate(view.getX(), view.getY());
+        m.preTranslate(view.getLeft(), view.getTop());
 
         if (!view.getMatrix().isIdentity()) {
             m.preConcat(view.getMatrix());

