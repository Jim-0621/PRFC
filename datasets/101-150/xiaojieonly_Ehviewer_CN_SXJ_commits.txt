File: app/src/main/java/com/hippo/ehviewer/client/EhConfig.java
Patch:
@@ -220,7 +220,10 @@ public class EhConfig implements Cloneable {
     public static final String IMAGE_SIZE_780X = "780";
     /**
      * Image Size 980x
+     * 2024-09-11
+     * - The 980x resample option has been retired due to a combination of performance/overhead issues and lack of use.
      */
+    @Deprecated
     public static final String IMAGE_SIZE_980X = "980";
     /**
      * Image Size 1280x

File: app/src/main/java/com/hippo/ehviewer/ui/scene/download/DownloadsScene.java
Patch:
@@ -18,9 +18,7 @@
 
 import static com.hippo.ehviewer.spider.SpiderDen.getGalleryDownloadDir;
 import static com.hippo.ehviewer.spider.SpiderInfo.getSpiderInfo;
-import static com.hippo.ehviewer.ui.scene.gallery.detail.GalleryDetailScene.KEY_COME_FROM_DOWNLOAD;
 
-import android.animation.Animator;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
@@ -1590,7 +1588,6 @@ public void onClick(View v) {
                 Bundle args = new Bundle();
                 args.putString(GalleryDetailScene.KEY_ACTION, GalleryDetailScene.ACTION_DOWNLOAD_GALLERY_INFO);
                 args.putParcelable(GalleryDetailScene.KEY_GALLERY_INFO, list.get(positionInList(index)));
-                args.putBoolean(KEY_COME_FROM_DOWNLOAD, true);
                 Announcer announcer = new Announcer(GalleryDetailScene.class).setArgs(args);
                 announcer.setTranHelper(new EnterGalleryDetailTransaction(thumb));
                 startScene(announcer);

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -107,7 +107,6 @@ public final class SpiderQueen implements Runnable {
     public static final int STATE_FAILED = 3;
     public static final int DECODE_THREAD_NUM = 2;
     public static final String SPIDER_INFO_FILENAME = ".ehviewer";
-//    public static final String SPIDER_INFO_BACKUP_FILENAME = ".ehviewer_backup";
 
     public static final String SPIDER_INFO_BACKUP_DIR = "backupDir";
     private static final String TAG = SpiderQueen.class.getSimpleName();
@@ -1311,7 +1310,7 @@ private boolean downloadImage(long gid, int index, String pToken, String previou
                         response = call.execute();
                         targetImageUrl = response.header("location");
                     } catch (IOException e) {
-                        error = "TargetImageUrl error";
+                        error = "GP不足/Insufficient GP";
                         IOException ioException = new IOException("原图链接获取失败", e);
                         FirebaseCrashlytics.getInstance().recordException(ioException);
                         break;
@@ -1321,7 +1320,7 @@ private boolean downloadImage(long gid, int index, String pToken, String previou
                 }
 
                 if (targetImageUrl == null) {
-                    error = "TargetImageUrl error";
+                    error = "GP不足/Insufficient GP";
                     break;
                 }
                 if (DEBUG_LOG) {

File: app/src/main/java/com/hippo/ehviewer/ui/dialog/ArchiverDownloadDialog.java
Patch:
@@ -210,7 +210,8 @@ public void onSuccess(String downloadUrl) {
             request.setTitle(galleryDetail.title);
             request.setDescription(context.getString(R.string.download_archive_started));
             request.setVisibleInDownloadsUi(true);
-            request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "/EhviewerArchiver/"+galleryDetail.title + ".zip");
+//            request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "EhviewerArchiver/"+galleryDetail.title + ".zip");
+            request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "EhviewerArchiver/"+"[Abe Nattsu] SEX de Wakaru Unmei no Hito ~ Karada no Aishou... Tameshite miru? ~ Ch. 1-6 [Chinese] [裸單騎漢化]" + ".zip");
             request.allowScanningByMediaScanner();
 
             DownloadManager downloadManager = (DownloadManager) context.getSystemService(Context.DOWNLOAD_SERVICE);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/FavoritesScene.java
Patch:
@@ -1677,7 +1677,8 @@ protected GalleryInfo doInBackground(Void... v) {
 
                 long gidDiff = firstGInfo.gid - lastGInfo.gid;
                 long block = gidDiff / 50;
-                List<GalleryInfo> rGInfoL = EhEngine.getAllFavorites(mOkHttpClient, url + "&next=" + (firstGInfo.gid - gidDiff / block * ((int) (Math.random() * block))) + 1).galleryInfoList;
+                long rBlock = ((int) (Math.random() * block)) + 1;
+                List<GalleryInfo> rGInfoL = EhEngine.getAllFavorites(mOkHttpClient, url + "&next=" + (firstGInfo.gid - gidDiff / block * ((int) (Math.random() * block)) + 1)).galleryInfoList;
                 return rGInfoL.get((int) (Math.random() * rGInfoL.size()));
             } catch (Throwable e) {
                 throw new RuntimeException(e);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/FavoritesScene.java
Patch:
@@ -1677,7 +1677,7 @@ protected GalleryInfo doInBackground(Void... v) {
 
                 long gidDiff = firstGInfo.gid - lastGInfo.gid;
                 long block = gidDiff / 50;
-                List<GalleryInfo> rGInfoL = EhEngine.getAllFavorites(mOkHttpClient, url + "&next=" + (firstGInfo.gid + gidDiff / block * ((int) (Math.random() * block))) + 1).galleryInfoList;
+                List<GalleryInfo> rGInfoL = EhEngine.getAllFavorites(mOkHttpClient, url + "&next=" + (firstGInfo.gid - gidDiff / block * ((int) (Math.random() * block))) + 1).galleryInfoList;
                 return rGInfoL.get((int) (Math.random() * rGInfoL.size()));
             } catch (Throwable e) {
                 throw new RuntimeException(e);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/gallery/detail/GalleryDetailScene.java
Patch:
@@ -32,6 +32,7 @@
 import android.os.Looper;
 import android.os.Message;
 import android.text.TextUtils;
+import android.util.Log;
 import android.util.Pair;
 import android.view.Gravity;
 import android.view.LayoutInflater;

File: app/src/main/java/com/hippo/ehviewer/ui/CommonOperations.java
Patch:
@@ -61,13 +61,13 @@ private static void doAddToFavorites(Activity activity, GalleryInfo galleryInfo,
     }
 
     public static void addToFavorites(final Activity activity, final GalleryInfo galleryInfo,
-                                      final EhClient.Callback<Void> listener) {
+                                      final EhClient.Callback<Void> listener, boolean isDefaultFavSolt) {
         int slot = Settings.getDefaultFavSlot();
         String[] items = new String[11];
         items[0] = activity.getString(R.string.local_favorites);
         String[] favCat = Settings.getFavCat();
         System.arraycopy(favCat, 0, items, 1, 10);
-        if (slot >= -1 && slot <= 9) {
+        if ((slot >= -1 && slot <= 9)&&!isDefaultFavSolt) {
             String newFavoriteName = slot >= 0 ? items[slot + 1] : null;
             doAddToFavorites(activity, galleryInfo, slot, new DelegateFavoriteCallback(listener, galleryInfo, newFavoriteName, slot));
         } else {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/gallery/list/GalleryListScene.java
Patch:
@@ -1300,7 +1300,7 @@ public boolean onItemLongClick(GalleryInfo gi, View view) {
                             if (favourited) {
                                 CommonOperations.removeFromFavorites(activity, gi, new RemoveFromFavoriteListener(context, activity.getStageId(), getTag()));
                             } else {
-                                CommonOperations.addToFavorites(activity, gi, new AddToFavoriteListener(context, activity.getStageId(), getTag()));
+                                CommonOperations.addToFavorites(activity, gi, new AddToFavoriteListener(context, activity.getStageId(), getTag()),false);
                             }
                             break;
                     }

File: app/src/main/java/com/hippo/ehviewer/ui/scene/history/HistoryScene.java
Patch:
@@ -291,7 +291,7 @@ public void onClick(DialogInterface dialog, int which) {
                             case 1: // Favorites
                                 CommonOperations.addToFavorites(activity, gi,
                                         new addToFavoriteListener(context,
-                                                activity.getStageId(), getTag()));
+                                                activity.getStageId(), getTag()), false);
                                 break;
                         }
                     }

File: app/src/main/java/com/hippo/ehviewer/ui/scene/download/DownloadsScene.java
Patch:
@@ -164,6 +164,9 @@ public class DownloadsScene extends ToolbarScene
     @Nullable
     private List<DownloadInfo> mBackList;
 
+    /*---------------
+     List pagination
+     ---------------*/
     private int indexPage = 1;
     private int pageSize = 50;
     private final int paginationSize = 500;

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -215,10 +215,9 @@ public static int findStartPage(@NonNull Context context, @NonNull GalleryInfo g
             try {
                 pipe.obtain();
                 spiderInfo = SpiderInfo.read(pipe.open());
-            } catch (IOException e) {
+            } catch (IOException ignore) {
                 // Ignore
-                IOException exception = new IOException("读取失败",e);
-                Crashes.trackError(exception);
+//                Crashes.trackError(ignore);
             } finally {
                 pipe.close();
                 pipe.release();

File: app/src/main/java/com/hippo/ehviewer/client/data/userTag/UserTagList.java
Patch:
@@ -4,13 +4,15 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
+import java.util.ArrayList;
 import java.util.List;
 
 public class UserTagList implements Parcelable {
 
     public List<UserTag> userTags;
     public int stageId;
     public UserTagList() {
+        userTags = new ArrayList<>();
     }
 
     protected UserTagList(Parcel in) {

File: app/src/main/java/com/hippo/ehviewer/EhApplication.java
Patch:
@@ -481,7 +481,8 @@ public static Conaco<ImageBitmap> getConaco(@NonNull Context context) {
             builder.hasDiskCache = true;
             builder.diskCacheDir = new File(context.getCacheDir(), "thumb");
             builder.diskCacheMaxSize = 320 * 1024 * 1024; // 320MB
-            builder.okHttpClient = getOkHttpClient(context);
+//            builder.okHttpClient = getOkHttpClient(context);
+            builder.okHttpClient = getImageOkHttpClient(context);
             builder.objectHelper = getImageBitmapHelper(context);
             builder.debug = DEBUG_CONACO;
             application.mConaco = builder.build();

File: app/src/main/java/com/hippo/widget/AvatarImageView.java
Patch:
@@ -301,7 +301,7 @@ public void load(String key, String url, DataContainer container, boolean useNet
         builder.url = url;
         builder.dataContainer= container;
         builder.useNetwork= useNetwork;
-        builder.okHttpClient= EhApplication.getOkHttpClient(getContext());
+        builder.okHttpClient= EhApplication.getImageOkHttpClient(getContext());
         mConaco.load(builder);
     }
 

File: app/src/main/java/com/hippo/widget/LoadImageView.java
Patch:
@@ -237,7 +237,8 @@ public void load(String key, String url, DataContainer container, boolean useNet
         builder.url = url;
         builder.dataContainer= container;
         builder.useNetwork= useNetwork;
-        builder.okHttpClient= EhApplication.getOkHttpClient(getContext());
+//        builder.okHttpClient= EhApplication.getOkHttpClient(getContext());
+        builder.okHttpClient= EhApplication.getImageOkHttpClient(getContext());
         mConaco.load(builder);
     }
 

File: app/src/main/java/com/hippo/ehviewer/EhApplication.java
Patch:
@@ -128,7 +128,7 @@ public class EhApplication extends RecordingApplication {
 
     private final List<Activity> mActivityList = new ArrayList<>();
 
-    private List<String> torrentList = new ArrayList<>();
+    private final List<String> torrentList = new ArrayList<>();
 
     private boolean initialized = false;
 
@@ -337,7 +337,7 @@ public static OkHttpClient getOkHttpClient(@NonNull Context context) {
         EhApplication application = ((EhApplication) context.getApplicationContext());
         if (application.mOkHttpClient == null) {
             Dispatcher dispatcher = new Dispatcher();
-            dispatcher.setMaxRequestsPerHost(4);
+            dispatcher.setMaxRequestsPerHost(2);
             OkHttpClient.Builder builder = new OkHttpClient.Builder()
                     .connectTimeout(10, TimeUnit.SECONDS)
                     .readTimeout(10, TimeUnit.SECONDS)
@@ -695,6 +695,7 @@ public void showEventPane(EhNewsDetail result) {
         showEventPane(html);
     }
 
+    @Nullable
     public EhNewsDetail getEhNewsDetail(){
         return ehNewsDetail;
     }

File: app/src/main/java/com/hippo/ehviewer/client/data/GalleryInfo.java
Patch:
@@ -250,7 +250,7 @@ public DownloadInfo getDownloadInfo(@Nullable DownloadInfo info){
         i.favoriteName = favoriteName;
         i.tgList = tgList;
         if (info!=null){
-            i.state = DownloadInfo.STATE_WAIT;
+            i.state = info.state;
             i.legacy = info.legacy;
             i.time = info.time;
             i.label = info.label;

File: app/src/main/java/com/hippo/ehviewer/ui/scene/gallery/list/GalleryListScene.java
Patch:
@@ -133,6 +133,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.util.ArrayList;
 import java.util.Collections;
+import java.util.LinkedList;
 import java.util.List;
 import java.util.Objects;
 
@@ -354,7 +355,7 @@ public void onReplace(@NonNull DownloadInfo newInfo, @NonNull DownloadInfo oldIn
             }
 
             @Override
-            public void onUpdate(@NonNull DownloadInfo info, @NonNull List<DownloadInfo> list) {
+            public void onUpdate(@NonNull DownloadInfo info, @NonNull List<DownloadInfo> list, LinkedList<DownloadInfo> mWaitList) {
             }
 
             @Override

File: app/src/main/java/com/hippo/ehviewer/client/EhDns.java
Patch:
@@ -69,7 +69,8 @@ public class EhDns implements Dns {
 
         if (Settings.getBuiltEXHosts()){
             put(map, "exhentai.org", "178.175.128.252", "178.175.129.252", "178.175.129.254", "178.175.128.254",
-                    "178.175.132.20", "178.175.132.22");
+                    "178.175.132.20", "178.175.132.22","172.64.206.24","172.64.207.24");
+            put(map, "s.exhentai.org", "178.175.132.22", "178.175.128.254", "178.175.129.254");
         }
 
         builtInHosts = map;

File: app/src/main/java/com/hippo/ehviewer/ui/scene/download/DownloadsScene.java
Patch:
@@ -973,6 +973,7 @@ public void onUpdate(@NonNull DownloadInfo info, @NonNull List<DownloadInfo> lis
 
         int index = list.indexOf(info);
         if (index >= 0 && mAdapter != null) {
+//            mSpiderInfoMap.put(info.gid,getSpiderInfo(info));
             mAdapter.notifyItemChanged(index);
         }
     }

File: app/src/main/java/com/hippo/ehviewer/EhApplication.java
Patch:
@@ -162,6 +162,7 @@ public void onCreate() {
         Image.initialize(this);
         // 实际作用不确定，但是与64位应用有冲突
 //        A7Zip.loadLibrary(A7ZipExtractLite.LIBRARY, libname -> ReLinker.loadLibrary(EhApplication.this, libname));
+        // 64位适配
         A7Zip.initialize(this);
         if (EhDB.needMerge()) {
             EhDB.mergeOldDB(this);

File: app/src/main/java/com/hippo/ehviewer/client/data/GalleryDetail.java
Patch:
@@ -19,6 +19,7 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
+
 import java.util.Arrays;
 
 /**

File: app/src/main/java/com/hippo/ehviewer/ui/splash/SplashActivity.java
Patch:
@@ -32,6 +32,8 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         }
         AppCenter.start(getApplication(), "a47010fb-702a-415a-ad93-ab5c674093ca",
                 Analytics.class, Crashes.class, Distribute.class);
+//        AppCenter.start(getApplication(), "feb52710-e245-4820-aebb-a57e00ed806d",
+//                Analytics.class, Crashes.class, Distribute.class);
         Distribute.setEnabled(true);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.splash_layout);

File: app/src/main/java/com/hippo/widget/SearchBarMover.java
Patch:
@@ -34,7 +34,7 @@ public class SearchBarMover extends RecyclerView.OnScrollListener {
     private final Helper mHelper;
     private final View mSearchBar;
 
-    public SearchBarMover(Helper helper, View searchBar, RecyclerView... recyclerViews) {
+    public SearchBarMover(Helper helper, View searchBar,@Nullable RecyclerView... recyclerViews) {
         mHelper = helper;
         mSearchBar = searchBar;
         if (recyclerViews == null){

File: app/src/main/java/com/hippo/ehviewer/widget/SearchBar.java
Patch:
@@ -245,9 +245,6 @@ public void setSuggestionProvider(SuggestionProvider suggestionProvider) {
     }
 
     public void setText(String text) {
-        if (text == null || text.isEmpty()) {
-            return;
-        }
         mEditText.setText(text);
     }
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -706,7 +706,8 @@ private ChipGroup buildChipGroup(GalleryInfo gi, ChipGroup tagFlowLayout) {
                 }
                 chip.setText(TagTranslationUtil.getTagCNBody(tagName.split(":"), ehTags));
             } else {
-                chip.setText(tagName.split(":")[1]);
+                String[] tagSplit = tagName.split(":");
+                chip.setText(tagSplit.length > 1 ? tagSplit[1] : tagSplit[0]);
             }
             tagFlowLayout.addView(chip, 0);
             return tagFlowLayout;

File: app/src/main/java/com/hippo/ehviewer/EhDB.java
Patch:
@@ -140,7 +140,7 @@ private static void upgradeDB(SQLiteDatabase db, int oldVersion) {
     private static class OldDBHelper extends SQLiteOpenHelper {
 
         private static final String DB_NAME = "data";
-        private static final int VERSION = 4;
+        private static final int VERSION = 5;
 
         private static final String TABLE_GALLERY = "gallery";
         private static final String TABLE_LOCAL_FAVOURITE = "local_favourite";

File: app/src/main/java/com/hippo/ehviewer/client/EhDns.java
Patch:
@@ -51,6 +51,7 @@ public class EhDns implements Dns {
     put(map, "repo.e-hentai.org", "94.100.28.57");
     put(map, "forums.e-hentai.org", "94.100.18.243");
     put(map, "ehgt.org", "37.48.89.44+178.162.139.24+178.162.140.212+81.171.10.48");
+//    put(map, "ehgt.org", "178.162.139.24");
     put(map, "ul.ehgt.org", "94.100.24.82+94.100.24.72");
     builtInHosts = map;
   }

File: daogenerator/src/main/java/com/hippo/ehviewer/daogenerator/EhDaoGenerator.java
Patch:
@@ -36,7 +36,7 @@ public class EhDaoGenerator {
     private static final String OUT_DIR = "../app/src/main/java-gen";
     private static final String DELETE_DIR = "../app/src/main/java-gen/com/hippo/ehviewer/dao";
 
-    private static final int VERSION = 4;
+    private static final int VERSION = 5;
 
     private static final String DOWNLOAD_INFO_PATH = "../app/src/main/java-gen/com/hippo/ehviewer/dao/DownloadInfo.java";
     private static final String HISTORY_INFO_PATH = "../app/src/main/java-gen/com/hippo/ehviewer/dao/HistoryInfo.java";

File: app/src/main/java/com/hippo/ehviewer/client/EhDns.java
Patch:
@@ -91,7 +91,7 @@ private static void put(Map<String, List<InetAddress>> map, String host, String
   @NonNull
   @Override
   public List<InetAddress> lookup(@NonNull String hostname) throws UnknownHostException {
-    hostname = hostname.replaceFirst("h.github.io", "e-hentai.org"); // domain fronting
+//    hostname = hostname.replaceFirst("h.github.io", "e-hentai.org"); // domain fronting
     List<InetAddress> inetAddresses = (List<InetAddress>) hosts.get(hostname);
     if (inetAddresses != null) {
       return inetAddresses;

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryDetailParser.java
Patch:
@@ -65,7 +65,7 @@ public class GalleryDetailParser {
 
     private static final Pattern PATTERN_ERROR = Pattern.compile("<div class=\"d\">\n<p>([^<]+)</p>");
     private static final Pattern PATTERN_DETAIL = Pattern.compile("var gid = (\\d+);.+?var token = \"([a-f0-9]+)\";.+?var apiuid = ([\\-\\d]+);.+?var apikey = \"([a-f0-9]+)\";", Pattern.DOTALL);
-    private static final Pattern PATTERN_TORRENT = Pattern.compile("<a[^<>]*onclick=\"return popUp\\('([^']+)'[^)]+\\)\">Torrent Download \\( (\\d+) \\)</a>");
+    private static final Pattern PATTERN_TORRENT = Pattern.compile("<a[^<>]*onclick=\"return popUp\\('([^']+)'[^)]+\\)\">Torrent Download \\((\\d+)\\)</a>");
     private static final Pattern PATTERN_ARCHIVE = Pattern.compile("<a[^<>]*onclick=\"return popUp\\('([^']+)'[^)]+\\)\">Archive Download</a>");
     private static final Pattern PATTERN_COVER = Pattern.compile("width:(\\d+)px; height:(\\d+)px.+?url\\((.+?)\\)");
     private static final Pattern PATTERN_TAG_GROUP = Pattern.compile("<tr><td[^<>]+>([\\w\\s]+):</td><td>(?:<div[^<>]+><a[^<>]+>[\\w\\s]+</a></div>)+</td></tr>");

