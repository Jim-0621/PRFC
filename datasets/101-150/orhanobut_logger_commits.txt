File: logger/src/main/java/com/orhanobut/logger/Utils.java
Patch:
@@ -109,6 +109,9 @@ static String logLevel(int value) {
   }
 
   public static String toString(Object object) {
+    if (object == null) {
+      return "null";
+    }
     if (!object.getClass().isArray()) {
       return object.toString();
     }

File: logger/src/main/java/com/orhanobut/logger/AndroidLogAdapter.java
Patch:
@@ -20,4 +20,4 @@ public AndroidLogAdapter(FormatStrategy formatStrategy) {
     formatStrategy.log(priority, tag, message);
   }
 
-}
+}
\ No newline at end of file

File: logger/src/main/java/com/orhanobut/logger/DiskLogStrategy.java
Patch:
@@ -75,7 +75,7 @@ private File getLogFile(String folderName, String fileName) {
 
       File folder = new File(folderName);
       if (!folder.exists()) {
-        // TODO: What if folder is not created, what happens then?
+        //TODO: What if folder is not created, what happens then?
         folder.mkdirs();
       }
 

File: sample/src/main/java/com/orhanobut/sample/MainActivity.java
Patch:
@@ -41,7 +41,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     Logger.addLogAdapter(new AndroidLogAdapter(formatStrategy));
 
-    Logger.addLogAdapter(new AndroidLogAdapter(){
+    Logger.addLogAdapter(new AndroidLogAdapter() {
       @Override public boolean isLoggable(int priority, String tag) {
         return BuildConfig.DEBUG;
       }

File: logger/src/main/java/com/orhanobut/logger/DiskLogStrategy.java
Patch:
@@ -75,6 +75,7 @@ private File getLogFile(String folderName, String fileName) {
 
       File folder = new File(folderName);
       if (!folder.exists()) {
+        // TODO: What if folder is not created, what happens then?
         folder.mkdirs();
       }
 

File: logger/src/test/java/com.orhanobut.logger/PrettyFormatStrategyTest.java
Patch:
@@ -170,10 +170,10 @@ public class PrettyFormatStrategyTest {
   }
 
   private static class MockLogStrategy implements LogStrategy {
-    List<LogItem> logItems = new ArrayList<>();
+    List<LogAssert.LogItem> logItems = new ArrayList<>();
 
     @Override public void log(int priority, String tag, String message) {
-      logItems.add(new LogItem(priority, tag, message));
+      logItems.add(new LogAssert.LogItem(priority, tag, message));
     }
   }
 

File: logger/src/main/java/com/orhanobut/logger/Printer.java
Patch:
@@ -2,7 +2,7 @@
 
 interface Printer {
 
-  Printer t(String tag, int methodCount);
+  Printer t(String tag);
 
   /**
    * Add custom settings with a custom tag

File: logger/src/test/java/com.orhanobut.logger/LogAssert.java
Patch:
@@ -7,7 +7,7 @@
 import static com.google.common.truth.Truth.assertThat;
 
 final class LogAssert {
-  private static final String DEFAULT_TAG = "PRETTYLOGGER";
+  private static final String DEFAULT_TAG = "PRETTY_LOGGER";
 
   private static final char TOP_LEFT_CORNER = '╔';
   private static final char BOTTOM_LEFT_CORNER = '╚';

File: logger/src/test/java/com.orhanobut.logger/UtilsTest.java
Patch:
@@ -4,14 +4,14 @@
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.RobolectricGradleTestRunner;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
 import java.net.UnknownHostException;
 
 import static com.google.common.truth.Truth.assertThat;
 
-@RunWith(RobolectricGradleTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 @Config(sdk = 21, constants = BuildConfig.class)
 public class UtilsTest {
 

File: logger/src/main/java/com/orhanobut/logger/AndroidLogTool.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.util.Log;
 
-public class AndroidLogTool implements LogTool {
+class AndroidLogTool implements LogTool {
   @Override public void d(String tag, String message) {
     Log.d(tag, message);
   }

File: logger/src/main/java/com/orhanobut/logger/LoggerPrinter.java
Patch:
@@ -155,6 +155,7 @@ final class LoggerPrinter implements Printer {
       return;
     }
     try {
+      json = json.trim();
       if (json.startsWith("{")) {
         JSONObject jsonObject = new JSONObject(json);
         String message = jsonObject.toString(JSON_INDENT);

File: app/src/main/java/com/orhanobut/loggersample/MainActivity.java
Patch:
@@ -16,7 +16,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        Logger.init("test").hideThreadInfo().setMethodCount(40);
+        Logger.init("test").hideThreadInfo().setMethodCount(0);
 
         printNormalLog();
         printPretty();
@@ -27,7 +27,6 @@ void printNormalLog() {
         Log.v(TAG, "i = 0 + 1");
         Log.v(TAG, Dummy.JSON_WITH_NO_LINE_BREAK);
         Log.v("test", Dummy.JSON_WITH_LINE_BREAK);
-
     }
 
     void printPretty() {
@@ -45,6 +44,8 @@ void printPretty() {
         Logger.json(Dummy.SMALL_SON_WITH_NO_LINE_BREAK);
 
         Logger.d("test");
+
+        Logger.t("TEST", 3).d("asdfasdf");
     }
 
     void test2() {

File: logger/src/main/java/com/orhanobut/logger/Logger.java
Patch:
@@ -9,7 +9,6 @@
 public final class Logger {
 
     private static final Printer printer = new LoggerPrinter();
-    private static final int DEFAULT_METHOD_COUNT = 2;
     private static final String DEFAULT_TAG = "PRETTYLOGGER";
 
     //no instance
@@ -35,7 +34,7 @@ public static Settings init(String tag) {
     }
 
     public static Printer t(String tag) {
-        return printer.t(tag, DEFAULT_METHOD_COUNT);
+        return printer.t(tag, printer.getSettings().getMethodCount());
     }
 
     public static Printer t(int methodCount) {

File: logger/src/main/java/com/orhanobut/logger/Printer.java
Patch:
@@ -9,6 +9,8 @@ public interface Printer {
 
     Settings init(String tag);
 
+    Settings getSettings();
+
     void d(String message, Object... args);
 
     void e(String message, Object... args);

File: app/src/main/java/com/orhanobut/loggersample/MainActivity.java
Patch:
@@ -16,7 +16,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        Logger.init("test").hideThreadInfo().setMethodCount(40);
+        Logger.init("test").hideThreadInfo().setMethodCount(0);
 
         printNormalLog();
         printPretty();
@@ -27,7 +27,6 @@ void printNormalLog() {
         Log.v(TAG, "i = 0 + 1");
         Log.v(TAG, Dummy.JSON_WITH_NO_LINE_BREAK);
         Log.v("test", Dummy.JSON_WITH_LINE_BREAK);
-
     }
 
     void printPretty() {
@@ -45,6 +44,8 @@ void printPretty() {
         Logger.json(Dummy.SMALL_SON_WITH_NO_LINE_BREAK);
 
         Logger.d("test");
+
+        Logger.t("TEST", 3).d("asdfasdf");
     }
 
     void test2() {

File: logger/src/main/java/com/orhanobut/logger/Logger.java
Patch:
@@ -9,7 +9,6 @@
 public final class Logger {
 
     private static final Printer printer = new LoggerPrinter();
-    private static final int DEFAULT_METHOD_COUNT = 2;
     private static final String DEFAULT_TAG = "PRETTYLOGGER";
 
     //no instance
@@ -35,7 +34,7 @@ public static Settings init(String tag) {
     }
 
     public static Printer t(String tag) {
-        return printer.t(tag, DEFAULT_METHOD_COUNT);
+        return printer.t(tag, printer.getSettings().getMethodCount());
     }
 
     public static Printer t(int methodCount) {

File: logger/src/main/java/com/orhanobut/logger/Printer.java
Patch:
@@ -9,6 +9,8 @@ public interface Printer {
 
     Settings init(String tag);
 
+    Settings getSettings();
+
     void d(String message, Object... args);
 
     void e(String message, Object... args);

File: app/src/main/java/com/orhanobut/loggersample/MainActivity.java
Patch:
@@ -16,7 +16,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        Logger.init().setMethodCount(1).hideThreadInfo();
+        Logger.init().setMethodCount(2);
 
         printNormalLog();
         printPretty();

