File: src/main/java/com/shuzijun/leetcode/plugin/setting/PersistentConfig.java
Patch:
@@ -94,7 +94,7 @@ public void savePassword(String password, String username) {
         if (username == null || password == null) {
             return;
         }
-        PasswordSafe.getInstance().set(new CredentialAttributes(PluginConstant.PLUGIN_ID, username, this.getClass()), new Credentials(username, password == null ? "" : password));
+        PasswordSafe.getInstance().set(new CredentialAttributes(PluginConstant.PLUGIN_ID, username, this.getClass()), new Credentials(username, password));
     }
 
     public String getPassword(String username) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeTopManager.java
Patch:
@@ -40,7 +40,7 @@ private static List<Tag> getCompany() {
         List<Tag> tags = new ArrayList<>();
 
         HttpResponse response = HttpRequest.builderGet(CodeTopURLUtils.getCompanies()).request();
-        if (response != null && response.getStatusCode() == 200) {
+        if (response.getStatusCode() == 200) {
             try {
                 String body = response.getBody();
                 if (StringUtils.isNotBlank(body)) {
@@ -150,7 +150,7 @@ private static PageInfo<CodeTopQuestionView> getQuestionService(Project project,
             pageInfo.setRowTotal(pageObject.getInteger("count"));
             pageInfo.setRows(questionList);
         } else {
-            LogUtils.LOG.error("Request question list failed, status:" + response == null ? "" : response.getStatusCode());
+            LogUtils.LOG.error("Request question list failed, status:" + response.getStatusCode());
             throw new RuntimeException("Request question list failed");
         }
 

File: src/main/java/com/shuzijun/leetcode/plugin/utils/URLUtils.java
Patch:
@@ -23,7 +23,7 @@ public class URLUtils {
     private static String leetcodeSubmissions = "/submissions/detail/";
     private static String leetcodeTags = "/problems/api/tags/";
     private static String leetcodeFavorites = "/problems/api/favorites/";
-    private static String leetcodeVerify = "/problemset/all/";
+    private static String leetcodeVerify = "/problemset/";
     private static String leetcodeProgress = "/api/progress/all/";
     private static String leetcodeSession = "/session/";
     private static String leetcodeCardInfo = "/problems/api/card-info/";

File: src/main/java/com/shuzijun/leetcode/plugin/window/navigator/AllNavigatorTable.java
Patch:
@@ -133,6 +133,9 @@ public Object getValue(QuestionView question, int columnIndex) {
 
                 if (columnIndex == 2) {
                     Integer level = question.getLevel();
+                    if (level == null) {
+                        return null;
+                    }
                     if (level == 1) {
                         return "Easy";
                     } else if (level == 2) {

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/TestcaseAction.java
Patch:
@@ -8,7 +8,7 @@
 import com.shuzijun.leetcode.plugin.utils.MessageUtils;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
 import com.shuzijun.leetcode.plugin.window.dialog.TestcasePanel;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.util.concurrent.atomic.AtomicReference;
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/LoginAction.java
Patch:
@@ -14,7 +14,7 @@
 import com.shuzijun.leetcode.plugin.window.WindowFactory;
 import com.shuzijun.leetcode.plugin.window.login.HttpLogin;
 import com.shuzijun.leetcode.plugin.window.login.LoginPanel;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.net.HttpCookie;
 import java.util.List;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/TestcaseAction.java
Patch:
@@ -8,7 +8,7 @@
 import com.shuzijun.leetcode.plugin.utils.MessageUtils;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
 import com.shuzijun.leetcode.plugin.window.dialog.TestcasePanel;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.util.concurrent.atomic.AtomicReference;
 

File: src/main/java/com/shuzijun/leetcode/plugin/editor/LCVPanel.java
Patch:
@@ -30,7 +30,7 @@
 import com.shuzijun.leetcode.plugin.utils.FileUtils;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
 import io.netty.handler.codec.http.HttpHeaderNames;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.cef.browser.CefBrowser;
 import org.cef.browser.CefFrame;
 import org.cef.handler.*;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ArticleManager.java
Patch:
@@ -10,7 +10,7 @@
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
 import com.shuzijun.leetcode.plugin.utils.*;
 import com.shuzijun.leetcode.plugin.utils.doc.CleanMarkdown;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.io.File;
 import java.util.ArrayList;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -12,7 +12,7 @@
 import com.shuzijun.leetcode.plugin.model.*;
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
 import com.shuzijun.leetcode.plugin.utils.*;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.jetbrains.annotations.NotNull;
 
 import java.io.File;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeTopManager.java
Patch:
@@ -6,7 +6,7 @@
 import com.intellij.openapi.project.Project;
 import com.shuzijun.leetcode.plugin.model.*;
 import com.shuzijun.leetcode.plugin.utils.*;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.util.ArrayList;
 import java.util.List;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/FindManager.java
Patch:
@@ -9,7 +9,7 @@
 import com.shuzijun.leetcode.plugin.model.Tag;
 import com.shuzijun.leetcode.plugin.utils.*;
 import com.shuzijun.leetcode.plugin.window.WindowFactory;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.util.ArrayList;
 import java.util.List;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/QuestionManager.java
Patch:
@@ -12,7 +12,7 @@
 import com.shuzijun.leetcode.plugin.utils.*;
 import com.shuzijun.leetcode.plugin.utils.doc.CleanMarkdown;
 import com.shuzijun.leetcode.plugin.window.WindowFactory;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.text.SimpleDateFormat;
 import java.util.*;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/SubmissionManager.java
Patch:
@@ -6,7 +6,7 @@
 import com.shuzijun.leetcode.plugin.model.*;
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
 import com.shuzijun.leetcode.plugin.utils.*;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.io.File;
 import java.util.ArrayList;

File: src/main/java/com/shuzijun/leetcode/plugin/model/PageInfo.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.fastjson.JSON;
 import com.alibaba.fastjson.annotation.JSONField;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.lang.reflect.Field;
 import java.util.ArrayList;

File: src/main/java/com/shuzijun/leetcode/plugin/model/QuestionView.java
Patch:
@@ -1,6 +1,6 @@
 package com.shuzijun.leetcode.plugin.model;
 
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.util.HashMap;
 import java.util.Map;

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -27,7 +27,7 @@
 import com.shuzijun.leetcode.plugin.utils.MTAUtils;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
 import com.shuzijun.leetcode.plugin.utils.URLUtils;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.jetbrains.annotations.NotNull;
 
 import javax.swing.*;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -14,7 +14,7 @@
 import com.shuzijun.leetcode.plugin.model.LeetcodeEditor;
 import com.shuzijun.leetcode.plugin.model.Question;
 import com.shuzijun.leetcode.plugin.setting.ProjectConfig;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 import java.io.*;
 import java.util.ArrayList;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/HttpClientUtils.java
Patch:
@@ -3,7 +3,7 @@
 //import com.intellij.util.proxy.CommonProxy;
 //import com.shuzijun.leetcode.plugin.model.Config;
 //import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
-//import org.apache.commons.lang.StringUtils;
+//import org.apache.commons.lang3.StringUtils;
 //import org.apache.http.Header;
 //import org.apache.http.HttpHeaders;
 //import org.apache.http.client.config.AuthSchemes;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/MessageUtils.java
Patch:
@@ -20,8 +20,8 @@
 import com.intellij.ui.awt.RelativePoint;
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.window.ConsoleWindowFactory;
-import org.apache.commons.lang.time.DateFormatUtils;
 import org.apache.commons.lang3.StringUtils;
+import org.apache.commons.lang3.time.DateFormatUtils;
 import org.jetbrains.annotations.NotNull;
 
 import javax.swing.*;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/URLUtils.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 
 /**
  * @author shuzijun

File: src/main/java/com/shuzijun/leetcode/plugin/utils/VelocityUtils.java
Patch:
@@ -21,7 +21,7 @@ public class VelocityUtils {
         engine = new VelocityEngine();
         engine.setProperty(RuntimeConstants.PARSER_POOL_SIZE, 20);
         engine.setProperty(RuntimeConstants.INPUT_ENCODING, "UTF-8");
-        engine.setProperty(RuntimeConstants.OUTPUT_ENCODING, "UTF-8");
+        //engine.setProperty(RuntimeConstants.OUTPUT_ENCODING, "UTF-8");
 
         Properties props = new Properties();
         props.put("runtime.log.logsystem.class", "org.apache.velocity.runtime.log.SimpleLog4JLogSystem");

File: src/main/java/com/shuzijun/leetcode/plugin/window/WindowFactory.java
Patch:
@@ -14,7 +14,7 @@
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
 import icons.LeetCodeEditorIcons;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 

File: src/main/java/com/shuzijun/leetcode/plugin/window/login/HttpLogin.java
Patch:
@@ -17,7 +17,7 @@
 import com.shuzijun.leetcode.plugin.utils.*;
 import com.shuzijun.leetcode.plugin.window.NavigatorTabsPanel;
 import com.shuzijun.leetcode.plugin.window.WindowFactory;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpEntity;
 import org.apache.http.entity.mime.MultipartEntityBuilder;
 import org.jetbrains.annotations.NotNull;

File: src/main/java/com/shuzijun/leetcode/plugin/window/login/LoginPanel.java
Patch:
@@ -15,7 +15,7 @@
 import com.intellij.util.ui.components.BorderLayoutPanel;
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.utils.*;
-import org.apache.commons.lang.StringUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.cef.browser.CefBrowser;
 import org.cef.browser.CefFrame;
 import org.cef.callback.CefCookieVisitor;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/HttpRequestUtils.java
Patch:
@@ -113,6 +113,7 @@ public static void setCookie(List<HttpCookie> cookieList) {
 
         cookieManager.getCookieStore().removeAll();
         for (HttpCookie cookie : cookieList) {
+            cookie.setVersion(0);
             cookieManager.getCookieStore().add(null, cookie);
         }
     }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/OpenSolutionAction.java
Patch:
@@ -41,11 +41,11 @@ public void update(@NotNull AnActionEvent anActionEvent) {
             anActionEvent.getPresentation().setEnabled(false);
             return;
         }
-        Question question = QuestionManager.getQuestionByTitleSlug(leetcodeEditor.getTitleSlug(), anActionEvent.getProject());
+        Question question = QuestionManager.getQuestionByTitleSlug(leetcodeEditor.getTitleSlug(), anActionEvent.getProject(), true);
         if (question != null) {
             anActionEvent.getPresentation().setEnabled(!Constant.ARTICLE_LIVE_NONE.equals(question.getArticleLive()));
         } else {
-            anActionEvent.getPresentation().setEnabled(false);
+            anActionEvent.getPresentation().setEnabled(true);
         }
     }
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/FavoriteAction.java
Patch:
@@ -38,7 +38,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
         if (questionView == null) {
             return false;
         }
-        Question cacheQuestion = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject());
+        Question cacheQuestion = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject(),true);
         if (cacheQuestion == null) {
             return false;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/FavoriteActionGroup.java
Patch:
@@ -21,6 +21,9 @@ public class FavoriteActionGroup extends ActionGroup implements DumbAware {
     @Override
     public AnAction[] getChildren(AnActionEvent anActionEvent) {
         NavigatorAction navigatorAction = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_NAVIGATORACTION);
+        if (navigatorAction == null){
+            return new AnAction[0];
+        }
         List<AnAction> anActionList = Lists.newArrayList();
         List<Tag> tags = navigatorAction.getFind().getFilter(Constant.FIND_TYPE_LISTS);
         if (tags != null && !tags.isEmpty()) {

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/OpenSolutionAction.java
Patch:
@@ -39,7 +39,7 @@ public void update(@NotNull AnActionEvent anActionEvent) {
             anActionEvent.getPresentation().setEnabled(false);
             return;
         }
-        Question question = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject());
+        Question question = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject(), true);
         if (question == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/OpenSolutionAction.java
Patch:
@@ -41,11 +41,11 @@ public void update(@NotNull AnActionEvent anActionEvent) {
             anActionEvent.getPresentation().setEnabled(false);
             return;
         }
-        Question question = QuestionManager.getQuestionByTitleSlug(leetcodeEditor.getTitleSlug(), anActionEvent.getProject());
+        Question question = QuestionManager.getQuestionByTitleSlug(leetcodeEditor.getTitleSlug(), anActionEvent.getProject(), true);
         if (question != null) {
             anActionEvent.getPresentation().setEnabled(!Constant.ARTICLE_LIVE_NONE.equals(question.getArticleLive()));
         } else {
-            anActionEvent.getPresentation().setEnabled(false);
+            anActionEvent.getPresentation().setEnabled(true);
         }
     }
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/FavoriteAction.java
Patch:
@@ -38,7 +38,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
         if (questionView == null) {
             return false;
         }
-        Question cacheQuestion = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject());
+        Question cacheQuestion = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject(),true);
         if (cacheQuestion == null) {
             return false;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/FavoriteActionGroup.java
Patch:
@@ -21,6 +21,9 @@ public class FavoriteActionGroup extends ActionGroup implements DumbAware {
     @Override
     public AnAction[] getChildren(AnActionEvent anActionEvent) {
         NavigatorAction navigatorAction = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_NAVIGATORACTION);
+        if (navigatorAction == null){
+            return new AnAction[0];
+        }
         List<AnAction> anActionList = Lists.newArrayList();
         List<Tag> tags = navigatorAction.getFind().getFilter(Constant.FIND_TYPE_LISTS);
         if (tags != null && !tags.isEmpty()) {

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/OpenSolutionAction.java
Patch:
@@ -39,7 +39,7 @@ public void update(@NotNull AnActionEvent anActionEvent) {
             anActionEvent.getPresentation().setEnabled(false);
             return;
         }
-        Question question = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject());
+        Question question = QuestionManager.getQuestionByTitleSlug(questionView.getTitleSlug(), anActionEvent.getProject(), true);
         if (question == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/editor/converge/NotePreview.java
Patch:
@@ -6,7 +6,6 @@
 import com.intellij.openapi.actionSystem.DefaultActionGroup;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.*;
-import com.intellij.openapi.fileEditor.ex.FileEditorProviderManager;
 import com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.util.Disposer;
@@ -21,6 +20,7 @@
 import com.shuzijun.leetcode.plugin.manager.NoteManager;
 import com.shuzijun.leetcode.plugin.model.LeetcodeEditor;
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
+import com.shuzijun.leetcode.plugin.utils.FileEditorProviderReflection;
 import com.shuzijun.leetcode.plugin.utils.URLUtils;
 import org.jetbrains.annotations.Nls;
 import org.jetbrains.annotations.NotNull;
@@ -74,7 +74,7 @@ private void initComponent() {
                     myComponent.addToCenter(new JBLabel("No note"));
                 } else {
                     VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-                    FileEditorProvider[] editorProviders = FileEditorProviderManager.getInstance().getProviders(project, vf);
+                    FileEditorProvider[] editorProviders = FileEditorProviderReflection.getProviders(project, vf);
 
                     if (editorProviders != null && editorProviders.length > 0) {
                         fileEditor = editorProviders[0].createEditor(project, vf);

File: src/main/java/com/shuzijun/leetcode/plugin/editor/converge/SolutionPreview.java
Patch:
@@ -4,7 +4,6 @@
 import com.intellij.openapi.actionSystem.*;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.*;
-import com.intellij.openapi.fileEditor.ex.FileEditorProviderManager;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.util.Disposer;
 import com.intellij.openapi.util.UserDataHolderBase;
@@ -21,6 +20,7 @@
 import com.shuzijun.leetcode.plugin.manager.ArticleManager;
 import com.shuzijun.leetcode.plugin.manager.QuestionManager;
 import com.shuzijun.leetcode.plugin.model.*;
+import com.shuzijun.leetcode.plugin.utils.FileEditorProviderReflection;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.jetbrains.annotations.Nls;
@@ -177,7 +177,7 @@ private void openArticle() throws InterruptedException, java.util.concurrent.Exe
             mySplitter.setSecondComponent(new JBLabel("no solution"));
         } else {
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-            FileEditorProvider[] editorProviders = FileEditorProviderManager.getInstance().getProviders(project, vf);
+            FileEditorProvider[] editorProviders = FileEditorProviderReflection.getProviders(project, vf);
             FileEditor newEditor = editorProviders[0].createEditor(project, vf);
             if (newEditor == fileEditor) {
                 return;

File: src/main/java/com/shuzijun/leetcode/plugin/editor/converge/SubmissionsPreview.java
Patch:
@@ -4,7 +4,6 @@
 import com.intellij.openapi.actionSystem.*;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.*;
-import com.intellij.openapi.fileEditor.ex.FileEditorProviderManager;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.util.Disposer;
 import com.intellij.openapi.util.UserDataHolderBase;
@@ -26,6 +25,7 @@
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.model.Question;
 import com.shuzijun.leetcode.plugin.model.Submission;
+import com.shuzijun.leetcode.plugin.utils.FileEditorProviderReflection;
 import com.shuzijun.leetcode.plugin.window.dialog.SubmissionsPanel;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -186,7 +186,7 @@ private void openSubmission(Submission submission) throws InterruptedException,
             mySplitter.setSecondComponent(new JBLabel("no submission"));
         } else {
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-            FileEditorProvider[] editorProviders = FileEditorProviderManager.getInstance().getProviders(project, vf);
+            FileEditorProvider[] editorProviders = FileEditorProviderReflection.getProviders(project, vf);
             FileEditor newEditor = editorProviders[0].createEditor(project, vf);
             if (newEditor == fileEditor) {
                 return;

File: src/main/java/com/shuzijun/leetcode/plugin/editor/converge/NotePreview.java
Patch:
@@ -6,7 +6,6 @@
 import com.intellij.openapi.actionSystem.DefaultActionGroup;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.*;
-import com.intellij.openapi.fileEditor.ex.FileEditorProviderManager;
 import com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorProvider;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.util.Disposer;
@@ -21,6 +20,7 @@
 import com.shuzijun.leetcode.plugin.manager.NoteManager;
 import com.shuzijun.leetcode.plugin.model.LeetcodeEditor;
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
+import com.shuzijun.leetcode.plugin.utils.FileEditorProviderReflection;
 import com.shuzijun.leetcode.plugin.utils.URLUtils;
 import org.jetbrains.annotations.Nls;
 import org.jetbrains.annotations.NotNull;
@@ -74,7 +74,7 @@ private void initComponent() {
                     myComponent.addToCenter(new JBLabel("No note"));
                 } else {
                     VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-                    FileEditorProvider[] editorProviders = FileEditorProviderManager.getInstance().getProviders(project, vf);
+                    FileEditorProvider[] editorProviders = FileEditorProviderReflection.getProviders(project, vf);
 
                     if (editorProviders != null && editorProviders.length > 0) {
                         fileEditor = editorProviders[0].createEditor(project, vf);

File: src/main/java/com/shuzijun/leetcode/plugin/editor/converge/SolutionPreview.java
Patch:
@@ -4,7 +4,6 @@
 import com.intellij.openapi.actionSystem.*;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.*;
-import com.intellij.openapi.fileEditor.ex.FileEditorProviderManager;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.util.Disposer;
 import com.intellij.openapi.util.UserDataHolderBase;
@@ -21,6 +20,7 @@
 import com.shuzijun.leetcode.plugin.manager.ArticleManager;
 import com.shuzijun.leetcode.plugin.manager.QuestionManager;
 import com.shuzijun.leetcode.plugin.model.*;
+import com.shuzijun.leetcode.plugin.utils.FileEditorProviderReflection;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
 import org.jetbrains.annotations.Nls;
@@ -177,7 +177,7 @@ private void openArticle() throws InterruptedException, java.util.concurrent.Exe
             mySplitter.setSecondComponent(new JBLabel("no solution"));
         } else {
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-            FileEditorProvider[] editorProviders = FileEditorProviderManager.getInstance().getProviders(project, vf);
+            FileEditorProvider[] editorProviders = FileEditorProviderReflection.getProviders(project, vf);
             FileEditor newEditor = editorProviders[0].createEditor(project, vf);
             if (newEditor == fileEditor) {
                 return;

File: src/main/java/com/shuzijun/leetcode/plugin/editor/converge/SubmissionsPreview.java
Patch:
@@ -4,7 +4,6 @@
 import com.intellij.openapi.actionSystem.*;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.*;
-import com.intellij.openapi.fileEditor.ex.FileEditorProviderManager;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.util.Disposer;
 import com.intellij.openapi.util.UserDataHolderBase;
@@ -26,6 +25,7 @@
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.model.Question;
 import com.shuzijun.leetcode.plugin.model.Submission;
+import com.shuzijun.leetcode.plugin.utils.FileEditorProviderReflection;
 import com.shuzijun.leetcode.plugin.window.dialog.SubmissionsPanel;
 import org.apache.commons.collections.CollectionUtils;
 import org.apache.commons.lang3.StringUtils;
@@ -186,7 +186,7 @@ private void openSubmission(Submission submission) throws InterruptedException,
             mySplitter.setSecondComponent(new JBLabel("no submission"));
         } else {
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-            FileEditorProvider[] editorProviders = FileEditorProviderManager.getInstance().getProviders(project, vf);
+            FileEditorProvider[] editorProviders = FileEditorProviderReflection.getProviders(project, vf);
             FileEditor newEditor = editorProviders[0].createEditor(project, vf);
             if (newEditor == fileEditor) {
                 return;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -148,7 +148,7 @@ public static void RunCodeCode(String titleSlug, Project project) {
             } else if (response.getStatusCode() == 429) {
                 MessageUtils.getInstance(project).showWarnMsg("", "Please wait for the result.");
             } else {
-                LogUtils.LOG.error("RuncodeCode failure " + response == null ? "" : response.getBody());
+                LogUtils.LOG.error("RuncodeCode failure " +  response.getBody());
                 MessageUtils.getInstance(project).showWarnMsg("", PropertiesUtils.getInfo("request.failed"));
             }
         } catch (Exception i) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -116,7 +116,7 @@ public static void loadAllServiceData(NavigatorAction navigatorAction, Project p
                 }
             }
             if (status) {
-                if ("TRIED".equalsIgnoreCase(filters.getStatus()) && !questionView.getStatusSign().equalsIgnoreCase("❓")) {
+                if ("TRIED".equalsIgnoreCase(filters.getStatus()) && !questionView.getStatusSign().equalsIgnoreCase("?")) {
                     continue;
                 } else if ("AC".equalsIgnoreCase(filters.getStatus()) && !questionView.getStatusSign().equalsIgnoreCase("✔")) {
                     continue;

File: src/main/java/com/shuzijun/leetcode/plugin/window/login/HttpLogin.java
Patch:
@@ -78,7 +78,7 @@ public static boolean ajaxLogin(Config config, NavigatorAction navigatorAction,
                 } else {
                     HttpRequestUtils.resetHttpclient();
                     MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("login.unknown"));
-                    SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
+                    //SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
                     return Boolean.FALSE;
                 }
             } else if (response.getStatusCode() == 400) {
@@ -93,7 +93,7 @@ public static boolean ajaxLogin(Config config, NavigatorAction navigatorAction,
             } else {
                 HttpRequestUtils.resetHttpclient();
                 MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("login.unknown"));
-                SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
+                //SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
                 return Boolean.FALSE;
             }
         } catch (Exception e) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -148,7 +148,7 @@ public static void RunCodeCode(String titleSlug, Project project) {
             } else if (response.getStatusCode() == 429) {
                 MessageUtils.getInstance(project).showWarnMsg("", "Please wait for the result.");
             } else {
-                LogUtils.LOG.error("RuncodeCode failure " + response == null ? "" : response.getBody());
+                LogUtils.LOG.error("RuncodeCode failure " +  response.getBody());
                 MessageUtils.getInstance(project).showWarnMsg("", PropertiesUtils.getInfo("request.failed"));
             }
         } catch (Exception i) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -116,7 +116,7 @@ public static void loadAllServiceData(NavigatorAction navigatorAction, Project p
                 }
             }
             if (status) {
-                if ("TRIED".equalsIgnoreCase(filters.getStatus()) && !questionView.getStatusSign().equalsIgnoreCase("❓")) {
+                if ("TRIED".equalsIgnoreCase(filters.getStatus()) && !questionView.getStatusSign().equalsIgnoreCase("?")) {
                     continue;
                 } else if ("AC".equalsIgnoreCase(filters.getStatus()) && !questionView.getStatusSign().equalsIgnoreCase("✔")) {
                     continue;

File: src/main/java/com/shuzijun/leetcode/plugin/window/login/HttpLogin.java
Patch:
@@ -78,7 +78,7 @@ public static boolean ajaxLogin(Config config, NavigatorAction navigatorAction,
                 } else {
                     HttpRequestUtils.resetHttpclient();
                     MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("login.unknown"));
-                    SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
+                    //SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
                     return Boolean.FALSE;
                 }
             } else if (response.getStatusCode() == 400) {
@@ -93,7 +93,7 @@ public static boolean ajaxLogin(Config config, NavigatorAction navigatorAction,
             } else {
                 HttpRequestUtils.resetHttpclient();
                 MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("login.unknown"));
-                SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
+                //SentryUtils.submitErrorReport(null, String.format("login.unknown:\nStatusCode:%s\nbody:%s", response.getStatusCode(), body));
                 return Boolean.FALSE;
             }
         } catch (Exception e) {

File: src/main/java/com/shuzijun/leetcode/plugin/window/NavigatorTableData.java
Patch:
@@ -30,6 +30,7 @@
 import java.awt.event.ItemEvent;
 import java.awt.event.MouseEvent;
 import java.io.InputStream;
+import java.nio.charset.StandardCharsets;
 import java.text.NumberFormat;
 import java.util.ArrayList;
 import java.util.List;
@@ -193,7 +194,7 @@ protected JTextPane createTip(String type, List<Icon> icons, List<MyStyle> style
             if (inputStream == null) {
                 LogUtils.LOG.error("/template/" + type + cn + ".txt Path is empty");
             } else {
-                String templateTxt = new String(FileUtilRt.loadBytes(inputStream));
+                String templateTxt = new String(FileUtilRt.loadBytes(inputStream), StandardCharsets.UTF_8);
                 int startIndex = 0;
                 for (int i = 0; i < icons.size(); i++) {
                     String placeholder = "{" + i + "}";

File: src/main/java/com/shuzijun/leetcode/plugin/window/NavigatorTableData.java
Patch:
@@ -30,6 +30,7 @@
 import java.awt.event.ItemEvent;
 import java.awt.event.MouseEvent;
 import java.io.InputStream;
+import java.nio.charset.StandardCharsets;
 import java.text.NumberFormat;
 import java.util.ArrayList;
 import java.util.List;
@@ -193,7 +194,7 @@ protected JTextPane createTip(String type, List<Icon> icons, List<MyStyle> style
             if (inputStream == null) {
                 LogUtils.LOG.error("/template/" + type + cn + ".txt Path is empty");
             } else {
-                String templateTxt = new String(FileUtilRt.loadBytes(inputStream));
+                String templateTxt = new String(FileUtilRt.loadBytes(inputStream), StandardCharsets.UTF_8);
                 int startIndex = 0;
                 for (int i = 0; i < icons.size(); i++) {
                     String placeholder = "{" + i + "}";

File: src/main/java/com/shuzijun/leetcode/plugin/window/login/LoginPanel.java
Patch:
@@ -12,7 +12,6 @@
 import com.intellij.ui.jcef.JCEFHtmlPanel;
 import com.intellij.util.ui.JBUI;
 import com.intellij.util.ui.components.BorderLayoutPanel;
-import com.shuzijun.leetcode.plugin.editor.LCVPanel;
 import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.utils.*;
 import org.apache.commons.lang.StringUtils;

File: src/main/java/com/shuzijun/leetcode/plugin/editor/QuestionEditorIconProvider.java
Patch:
@@ -27,7 +27,7 @@ public Icon patchIcon(Icon baseIcon, VirtualFile file, int flags, @Nullable Proj
         }
         try {
             Config config = PersistentConfig.getInstance().getInitConfig();
-            if (config == null || !config.isQuestionEditor() || !config.isShowQuestionEditorSign()) {
+            if (config == null || !config.isShowQuestionEditor() || !config.isShowQuestionEditorSign()) {
                 return baseIcon;
             }
             LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getEditor(file.getPath(), config.getUrl());

File: src/main/java/com/shuzijun/leetcode/plugin/editor/QuestionEditorProvider.java
Patch:
@@ -33,7 +33,7 @@ public QuestionEditorProvider() {
     public boolean accept(@NotNull Project project, @NotNull VirtualFile file) {
         try {
             Config config = PersistentConfig.getInstance().getInitConfig();
-            if (config == null || !config.isQuestionEditor()) {
+            if (config == null || !config.isShowQuestionEditor()) {
                 return false;
             }
             LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getEditor(file.getPath());

File: src/main/java/com/shuzijun/leetcode/plugin/editor/QuestionEditorTabTitleProvider.java
Patch:
@@ -23,7 +23,7 @@ public class QuestionEditorTabTitleProvider implements EditorTabTitleProvider {
     public @NlsContexts.TabTitle @Nullable String getEditorTabTitle(@NotNull Project project, @NotNull VirtualFile file) {
         try {
             Config config = PersistentConfig.getInstance().getInitConfig();
-            if (config == null || !config.isQuestionEditor() || !config.isShowQuestionEditorSign()) {
+            if (config == null || !config.isShowQuestionEditor() || !config.isShowQuestionEditorSign()) {
                 return null;
             }
             LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getEditor(file.getPath(), config.getUrl());

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -36,7 +36,7 @@ public static void openCode(String titleSlug, Project project) {
             return;
         }
 
-        if (config.isQuestionEditor()) {
+        if (config.isShowQuestionEditor()) {
             openContent(titleSlug, project, false);
         }
 

File: src/main/java/com/shuzijun/leetcode/plugin/model/Config.java
Patch:
@@ -348,13 +348,13 @@ public void setCookie(boolean cookie) {
     }
 
     @Transient
-    public Boolean isQuestionEditor() {
+    public Boolean isShowQuestionEditor() {
         return !"Disable".equals(questionEditor) && !"false".equals(questionEditor);
     }
 
     @Transient
     public Boolean isLeftQuestionEditor() {
-        return "Left".equals(questionEditor) || "true".equals(questionEditor) || !isQuestionEditor();
+        return "Left".equals(questionEditor) || "true".equals(questionEditor) || !isShowQuestionEditor();
     }
 
     public String getQuestionEditor() {

File: src/main/java/com/shuzijun/leetcode/plugin/editor/QuestionEditorIconProvider.java
Patch:
@@ -27,7 +27,7 @@ public Icon patchIcon(Icon baseIcon, VirtualFile file, int flags, @Nullable Proj
         }
         try {
             Config config = PersistentConfig.getInstance().getInitConfig();
-            if (config == null || !config.isQuestionEditor() || !config.isShowQuestionEditorSign()) {
+            if (config == null || !config.isShowQuestionEditor() || !config.isShowQuestionEditorSign()) {
                 return baseIcon;
             }
             LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getEditor(file.getPath(), config.getUrl());

File: src/main/java/com/shuzijun/leetcode/plugin/editor/QuestionEditorProvider.java
Patch:
@@ -33,7 +33,7 @@ public QuestionEditorProvider() {
     public boolean accept(@NotNull Project project, @NotNull VirtualFile file) {
         try {
             Config config = PersistentConfig.getInstance().getInitConfig();
-            if (config == null || !config.isQuestionEditor()) {
+            if (config == null || !config.isShowQuestionEditor()) {
                 return false;
             }
             LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getEditor(file.getPath());

File: src/main/java/com/shuzijun/leetcode/plugin/editor/QuestionEditorTabTitleProvider.java
Patch:
@@ -23,7 +23,7 @@ public class QuestionEditorTabTitleProvider implements EditorTabTitleProvider {
     public @NlsContexts.TabTitle @Nullable String getEditorTabTitle(@NotNull Project project, @NotNull VirtualFile file) {
         try {
             Config config = PersistentConfig.getInstance().getInitConfig();
-            if (config == null || !config.isQuestionEditor() || !config.isShowQuestionEditorSign()) {
+            if (config == null || !config.isShowQuestionEditor() || !config.isShowQuestionEditorSign()) {
                 return null;
             }
             LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getEditor(file.getPath(), config.getUrl());

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -36,7 +36,7 @@ public static void openCode(String titleSlug, Project project) {
             return;
         }
 
-        if (config.isQuestionEditor()) {
+        if (config.isShowQuestionEditor()) {
             openContent(titleSlug, project, false);
         }
 

File: src/main/java/com/shuzijun/leetcode/plugin/model/Config.java
Patch:
@@ -348,13 +348,13 @@ public void setCookie(boolean cookie) {
     }
 
     @Transient
-    public Boolean isQuestionEditor() {
+    public Boolean isShowQuestionEditor() {
         return !"Disable".equals(questionEditor) && !"false".equals(questionEditor);
     }
 
     @Transient
     public Boolean isLeftQuestionEditor() {
-        return "Left".equals(questionEditor) || "true".equals(questionEditor) || !isQuestionEditor();
+        return "Left".equals(questionEditor) || "true".equals(questionEditor) || !isShowQuestionEditor();
     }
 
     public String getQuestionEditor() {

File: src/main/java/com/shuzijun/leetcode/plugin/utils/doc/CleanNodeFormatter.java
Patch:
@@ -69,7 +69,6 @@ private void render(@NotNull AttributesNode attributesNode, @NotNull NodeFormatt
         if(attributesNode.getText().startsWith(":align") ||attributesNode.getText().startsWith(":width") ){
             return;
         } else {
-            lineInfos.append(attributesNode.getChars());
             nodeFormatterContext.delegateRender();
         }
     }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/doc/CleanNodeFormatter.java
Patch:
@@ -69,7 +69,6 @@ private void render(@NotNull AttributesNode attributesNode, @NotNull NodeFormatt
         if(attributesNode.getText().startsWith(":align") ||attributesNode.getText().startsWith(":width") ){
             return;
         } else {
-            lineInfos.append(attributesNode.getChars());
             nodeFormatterContext.delegateRender();
         }
     }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/AbstractEditAction.java
Patch:
@@ -28,7 +28,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config) {
         if (leetcodeEditor == null) {
             return;
         }
-        Question question = ViewManager.getQuestionById(leetcodeEditor.getQuestionId(), anActionEvent.getProject());
+        Question question = ViewManager.getQuestionById(leetcodeEditor.getFrontendQuestionId(), anActionEvent.getProject());
         if (question == null) {
             MessageUtils.getInstance(anActionEvent.getProject()).showInfoMsg("info", PropertiesUtils.getInfo("tree.null"));
             return;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/OpenSolutionAction.java
Patch:
@@ -30,7 +30,7 @@ public void update(@NotNull AnActionEvent anActionEvent) {
         if (leetcodeEditor == null) {
             return;
         }
-        Question question = ViewManager.getDumbQuestionById(leetcodeEditor.getQuestionId(), anActionEvent.getProject());
+        Question question = ViewManager.getDumbQuestionById(leetcodeEditor.getFrontendQuestionId(), anActionEvent.getProject());
         if (question == null) {
             anActionEvent.getPresentation().setEnabled(false);
             return;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/FavoriteAction.java
Patch:
@@ -37,7 +37,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
         if (question == null) {
             return false;
         }
-        return tag.getQuestions().contains(question.getQuestionId());
+        return tag.getFrontendQuestionId().contains(question.getFrontendQuestionId());
     }
 
     @Override

File: src/main/java/com/shuzijun/leetcode/plugin/listener/TreeWillListener.java
Patch:
@@ -54,7 +54,8 @@ public void treeWillExpand(TreeExpansionEvent event) throws ExpandVetoException
         ProgressManager.getInstance().run(new Task.Backgroundable(project, PluginConstant.LEETCODE_EDITOR_TREE,false) {
             @Override
             public void run(@NotNull ProgressIndicator progressIndicator) {
-                loadData(question,node,selPath,tree,toolWindow);
+                //loadData(question,node,selPath,tree,toolWindow);
+                MessageUtils.showMsg(toolWindow.getContentManager().getComponent(), MessageType.INFO, "info", "Temporarily disabled");
             }
         });
         throw new ExpandVetoException(event);

File: src/main/java/com/shuzijun/leetcode/plugin/model/Tag.java
Patch:
@@ -45,11 +45,11 @@ public void setName(String name) {
         this.name = name;
     }
 
-    public TreeSet<String> getQuestions() {
+    public TreeSet<String> getFrontendQuestionId() {
         return questions;
     }
-    public void addQuestion(String questionId) {
-        questions.add(questionId);
+    public void addFrontendQuestionId(String frontendQuestionId) {
+        questions.add(frontendQuestionId);
     }
 
     public String getType() {

File: src/main/java/com/shuzijun/leetcode/plugin/setting/ProjectConfig.java
Patch:
@@ -38,7 +38,7 @@ public void loadState(@NotNull ProjectConfig.InnerState innerState) {
         this.innerState = innerState;
         idProjectConfig.clear();
         this.innerState.projectConfig.forEach((s, leetcodeEditor) -> {
-            idProjectConfig.put(leetcodeEditor.getQuestionId(),leetcodeEditor);
+            idProjectConfig.put(leetcodeEditor.getFrontendQuestionId(),leetcodeEditor);
         });
     }
 
@@ -53,7 +53,7 @@ public LeetcodeEditor getDefEditor(String questionId) {
     }
 
     public void addLeetcodeEditor(LeetcodeEditor leetcodeEditor) {
-        idProjectConfig.put(leetcodeEditor.getQuestionId(), leetcodeEditor);
+        idProjectConfig.put(leetcodeEditor.getFrontendQuestionId(), leetcodeEditor);
         if(StringUtils.isNotBlank(leetcodeEditor.getPath())) {
             innerState.projectConfig.put(leetcodeEditor.getPath(), leetcodeEditor);
         }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -227,8 +227,8 @@ public static void openFileEditor(File file, Project project) {
     public static void openFileEditorAndSaveState(File file, Project project, Question question, BiConsumer<LeetcodeEditor,String> consumer,boolean isOpen) {
         ApplicationManager.getApplication().invokeAndWait(() -> {
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-            LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getDefEditor(question.getQuestionId());
-            leetcodeEditor.setQuestionId(question.getQuestionId());
+            LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getDefEditor(question.getFrontendQuestionId());
+            leetcodeEditor.setFrontendQuestionId(question.getFrontendQuestionId());
             consumer.accept(leetcodeEditor,vf.getPath());
             ProjectConfig.getInstance(project).addLeetcodeEditor(leetcodeEditor);
             if(isOpen) {

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/AbstractEditAction.java
Patch:
@@ -28,7 +28,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config) {
         if (leetcodeEditor == null) {
             return;
         }
-        Question question = ViewManager.getQuestionById(leetcodeEditor.getQuestionId(), anActionEvent.getProject());
+        Question question = ViewManager.getQuestionById(leetcodeEditor.getFrontendQuestionId(), anActionEvent.getProject());
         if (question == null) {
             MessageUtils.getInstance(anActionEvent.getProject()).showInfoMsg("info", PropertiesUtils.getInfo("tree.null"));
             return;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/OpenSolutionAction.java
Patch:
@@ -30,7 +30,7 @@ public void update(@NotNull AnActionEvent anActionEvent) {
         if (leetcodeEditor == null) {
             return;
         }
-        Question question = ViewManager.getDumbQuestionById(leetcodeEditor.getQuestionId(), anActionEvent.getProject());
+        Question question = ViewManager.getDumbQuestionById(leetcodeEditor.getFrontendQuestionId(), anActionEvent.getProject());
         if (question == null) {
             anActionEvent.getPresentation().setEnabled(false);
             return;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/tree/FavoriteAction.java
Patch:
@@ -37,7 +37,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
         if (question == null) {
             return false;
         }
-        return tag.getQuestions().contains(question.getQuestionId());
+        return tag.getFrontendQuestionId().contains(question.getFrontendQuestionId());
     }
 
     @Override

File: src/main/java/com/shuzijun/leetcode/plugin/listener/TreeWillListener.java
Patch:
@@ -54,7 +54,8 @@ public void treeWillExpand(TreeExpansionEvent event) throws ExpandVetoException
         ProgressManager.getInstance().run(new Task.Backgroundable(project, PluginConstant.LEETCODE_EDITOR_TREE,false) {
             @Override
             public void run(@NotNull ProgressIndicator progressIndicator) {
-                loadData(question,node,selPath,tree,toolWindow);
+                //loadData(question,node,selPath,tree,toolWindow);
+                MessageUtils.showMsg(toolWindow.getContentManager().getComponent(), MessageType.INFO, "info", "Temporarily disabled");
             }
         });
         throw new ExpandVetoException(event);

File: src/main/java/com/shuzijun/leetcode/plugin/model/Tag.java
Patch:
@@ -45,11 +45,11 @@ public void setName(String name) {
         this.name = name;
     }
 
-    public TreeSet<String> getQuestions() {
+    public TreeSet<String> getFrontendQuestionId() {
         return questions;
     }
-    public void addQuestion(String questionId) {
-        questions.add(questionId);
+    public void addFrontendQuestionId(String frontendQuestionId) {
+        questions.add(frontendQuestionId);
     }
 
     public String getType() {

File: src/main/java/com/shuzijun/leetcode/plugin/setting/ProjectConfig.java
Patch:
@@ -38,7 +38,7 @@ public void loadState(@NotNull ProjectConfig.InnerState innerState) {
         this.innerState = innerState;
         idProjectConfig.clear();
         this.innerState.projectConfig.forEach((s, leetcodeEditor) -> {
-            idProjectConfig.put(leetcodeEditor.getQuestionId(),leetcodeEditor);
+            idProjectConfig.put(leetcodeEditor.getFrontendQuestionId(),leetcodeEditor);
         });
     }
 
@@ -53,7 +53,7 @@ public LeetcodeEditor getDefEditor(String questionId) {
     }
 
     public void addLeetcodeEditor(LeetcodeEditor leetcodeEditor) {
-        idProjectConfig.put(leetcodeEditor.getQuestionId(), leetcodeEditor);
+        idProjectConfig.put(leetcodeEditor.getFrontendQuestionId(), leetcodeEditor);
         if(StringUtils.isNotBlank(leetcodeEditor.getPath())) {
             innerState.projectConfig.put(leetcodeEditor.getPath(), leetcodeEditor);
         }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -227,8 +227,8 @@ public static void openFileEditor(File file, Project project) {
     public static void openFileEditorAndSaveState(File file, Project project, Question question, BiConsumer<LeetcodeEditor,String> consumer,boolean isOpen) {
         ApplicationManager.getApplication().invokeAndWait(() -> {
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
-            LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getDefEditor(question.getQuestionId());
-            leetcodeEditor.setQuestionId(question.getQuestionId());
+            LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(project).getDefEditor(question.getFrontendQuestionId());
+            leetcodeEditor.setFrontendQuestionId(question.getFrontendQuestionId());
             consumer.accept(leetcodeEditor,vf.getPath());
             ProjectConfig.getInstance(project).addLeetcodeEditor(leetcodeEditor);
             if(isOpen) {

File: src/main/java/com/shuzijun/leetcode/plugin/actions/AbstractAction.java
Patch:
@@ -7,8 +7,8 @@
 import com.intellij.openapi.progress.ProgressManager;
 import com.intellij.openapi.progress.Task;
 import com.shuzijun.leetcode.plugin.model.Config;
+import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
-import com.shuzijun.leetcode.plugin.setting.SettingConfigurable;
 import com.shuzijun.leetcode.plugin.utils.MTAUtils;
 import com.shuzijun.leetcode.plugin.utils.MessageUtils;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
@@ -25,7 +25,7 @@ public void actionPerformed(AnActionEvent anActionEvent) {
         Config config = PersistentConfig.getInstance().getInitConfig();
         if (config == null) {
             MessageUtils.getInstance(anActionEvent.getProject()).showWarnMsg("warning", PropertiesUtils.getInfo("config.first"));
-            ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(), SettingConfigurable.DISPLAY_NAME);
+            ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(), PluginConstant.APPLICATION_CONFIGURABLE_DISPLAY_NAME);
             return;
         } else if (StringUtils.isBlank(config.getId())) {
             config.setId(MTAUtils.getI(""));

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/ConfigAction.java
Patch:
@@ -3,14 +3,14 @@
 import com.intellij.openapi.actionSystem.AnAction;
 import com.intellij.openapi.actionSystem.AnActionEvent;
 import com.intellij.openapi.options.ShowSettingsUtil;
-import com.shuzijun.leetcode.plugin.setting.SettingConfigurable;
+import com.shuzijun.leetcode.plugin.model.PluginConstant;
 
 /**
  * @author shuzijun
  */
 public class ConfigAction extends AnAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent) {
-        ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(),SettingConfigurable.DISPLAY_NAME);
+        ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(), PluginConstant.APPLICATION_CONFIGURABLE_DISPLAY_NAME);
     }
 }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/FindTagAction.java
Patch:
@@ -52,7 +52,7 @@ public void setSelected(AnActionEvent anActionEvent, boolean b) {
                 @Override
                 public void run(@NotNull ProgressIndicator progressIndicator) {
                     if (b) {
-                        ViewManager.loadServiceData(tree, anActionEvent.getProject(), tag.getType());
+                        ViewManager.loadServiceData(tree, anActionEvent.getProject(), tag.getSlug());
                     } else {
                         ViewManager.loadServiceData(tree, anActionEvent.getProject());
                     }

File: src/main/java/com/shuzijun/leetcode/plugin/window/HttpLogin.java
Patch:
@@ -39,7 +39,7 @@ public static boolean ajaxLogin(Config config, JTree tree, Project project) {
 
         try {
             HttpEntity ent = MultipartEntityBuilder.create()
-                    .addTextBody("csrfmiddlewaretoken", HttpRequestUtils.getToken())
+                    .addTextBody("csrfmiddlewaretoken", HttpRequestUtils.getToken() == null ? "": HttpRequestUtils.getToken())
                     .addTextBody("login", config.getLoginName())
                     .addTextBody("password", PersistentConfig.getInstance().getPassword(config.getLoginName()))
                     .addTextBody("next", "/problems")

File: src/main/java/com/shuzijun/leetcode/plugin/actions/AbstractAction.java
Patch:
@@ -7,8 +7,8 @@
 import com.intellij.openapi.progress.ProgressManager;
 import com.intellij.openapi.progress.Task;
 import com.shuzijun.leetcode.plugin.model.Config;
+import com.shuzijun.leetcode.plugin.model.PluginConstant;
 import com.shuzijun.leetcode.plugin.setting.PersistentConfig;
-import com.shuzijun.leetcode.plugin.setting.SettingConfigurable;
 import com.shuzijun.leetcode.plugin.utils.MTAUtils;
 import com.shuzijun.leetcode.plugin.utils.MessageUtils;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
@@ -25,7 +25,7 @@ public void actionPerformed(AnActionEvent anActionEvent) {
         Config config = PersistentConfig.getInstance().getInitConfig();
         if (config == null) {
             MessageUtils.getInstance(anActionEvent.getProject()).showWarnMsg("warning", PropertiesUtils.getInfo("config.first"));
-            ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(), SettingConfigurable.DISPLAY_NAME);
+            ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(), PluginConstant.APPLICATION_CONFIGURABLE_DISPLAY_NAME);
             return;
         } else if (StringUtils.isBlank(config.getId())) {
             config.setId(MTAUtils.getI(""));

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/ConfigAction.java
Patch:
@@ -3,14 +3,14 @@
 import com.intellij.openapi.actionSystem.AnAction;
 import com.intellij.openapi.actionSystem.AnActionEvent;
 import com.intellij.openapi.options.ShowSettingsUtil;
-import com.shuzijun.leetcode.plugin.setting.SettingConfigurable;
+import com.shuzijun.leetcode.plugin.model.PluginConstant;
 
 /**
  * @author shuzijun
  */
 public class ConfigAction extends AnAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent) {
-        ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(),SettingConfigurable.DISPLAY_NAME);
+        ShowSettingsUtil.getInstance().showSettingsDialog(anActionEvent.getProject(), PluginConstant.APPLICATION_CONFIGURABLE_DISPLAY_NAME);
     }
 }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/FindTagAction.java
Patch:
@@ -52,7 +52,7 @@ public void setSelected(AnActionEvent anActionEvent, boolean b) {
                 @Override
                 public void run(@NotNull ProgressIndicator progressIndicator) {
                     if (b) {
-                        ViewManager.loadServiceData(tree, anActionEvent.getProject(), tag.getType());
+                        ViewManager.loadServiceData(tree, anActionEvent.getProject(), tag.getSlug());
                     } else {
                         ViewManager.loadServiceData(tree, anActionEvent.getProject());
                     }

File: src/main/java/com/shuzijun/leetcode/plugin/window/HttpLogin.java
Patch:
@@ -39,7 +39,7 @@ public static boolean ajaxLogin(Config config, JTree tree, Project project) {
 
         try {
             HttpEntity ent = MultipartEntityBuilder.create()
-                    .addTextBody("csrfmiddlewaretoken", HttpRequestUtils.getToken())
+                    .addTextBody("csrfmiddlewaretoken", HttpRequestUtils.getToken() == null ? "": HttpRequestUtils.getToken())
                     .addTextBody("login", config.getLoginName())
                     .addTextBody("password", PersistentConfig.getInstance().getPassword(config.getLoginName()))
                     .addTextBody("next", "/problems")

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -200,7 +200,7 @@ public static void RunCodeCode(Question question, Project project) {
                 ProgressManager.getInstance().run(new RunCodeCheckTask(returnObj, project, question.getTestCase()));
                 MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("request.pending"));
             } else {
-                LogUtils.LOG.error("RuncodeCode failure " + response.getBody());
+                LogUtils.LOG.error("RuncodeCode failure " + response == null ? "" : response.getBody());
                 MessageUtils.getInstance(project).showWarnMsg("error", PropertiesUtils.getInfo("request.failed"));
             }
         } catch (Exception i) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/NoteManager.java
Patch:
@@ -1,8 +1,10 @@
 package com.shuzijun.leetcode.plugin.manager;
 
 import com.alibaba.fastjson.JSONObject;
+import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.FileDocumentManager;
 import com.intellij.openapi.project.Project;
+import com.intellij.openapi.util.Computable;
 import com.intellij.openapi.vfs.LocalFileSystem;
 import com.intellij.openapi.vfs.VirtualFile;
 import com.shuzijun.leetcode.plugin.model.Config;
@@ -79,7 +81,7 @@ public static void push(Question question, Project project) {
             }
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
             FileUtils.saveEditDocument(vf);
-            String note = FileDocumentManager.getInstance().getDocument(vf).getText();
+            String note = ApplicationManager.getApplication().runReadAction((Computable<String>) () -> FileDocumentManager.getInstance().getDocument(vf).getText());
             HttpRequest httpRequest = HttpRequest.post(URLUtils.getLeetcodeGraphql(),"application/json");
             JSONObject variables = new JSONObject();
             variables.put("titleSlug",question.getTitleSlug());

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -5,6 +5,7 @@
 import com.intellij.openapi.fileEditor.FileEditorManager;
 import com.intellij.openapi.fileEditor.OpenFileDescriptor;
 import com.intellij.openapi.project.Project;
+import com.intellij.openapi.util.Computable;
 import com.intellij.openapi.vfs.LocalFileSystem;
 import com.intellij.openapi.vfs.VirtualFile;
 import com.intellij.openapi.vfs.newvfs.RefreshQueue;
@@ -78,7 +79,7 @@ public static String getClearCommentFileBody(File file, CodeTypeEnum codeTypeEnu
         saveEditDocument(vf);
         StringBuffer code = new StringBuffer();
         try {
-            String body = FileDocumentManager.getInstance().getDocument(vf).getText();
+            String body = ApplicationManager.getApplication().runReadAction((Computable<String>) () -> FileDocumentManager.getInstance().getDocument(vf).getText());
             if (StringUtils.isNotBlank(body)) {
 
                 List<String> codeList = new LinkedList<>();

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -200,7 +200,7 @@ public static void RunCodeCode(Question question, Project project) {
                 ProgressManager.getInstance().run(new RunCodeCheckTask(returnObj, project, question.getTestCase()));
                 MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("request.pending"));
             } else {
-                LogUtils.LOG.error("RuncodeCode failure " + response.getBody());
+                LogUtils.LOG.error("RuncodeCode failure " + response == null ? "" : response.getBody());
                 MessageUtils.getInstance(project).showWarnMsg("error", PropertiesUtils.getInfo("request.failed"));
             }
         } catch (Exception i) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/NoteManager.java
Patch:
@@ -1,8 +1,10 @@
 package com.shuzijun.leetcode.plugin.manager;
 
 import com.alibaba.fastjson.JSONObject;
+import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.fileEditor.FileDocumentManager;
 import com.intellij.openapi.project.Project;
+import com.intellij.openapi.util.Computable;
 import com.intellij.openapi.vfs.LocalFileSystem;
 import com.intellij.openapi.vfs.VirtualFile;
 import com.shuzijun.leetcode.plugin.model.Config;
@@ -79,7 +81,7 @@ public static void push(Question question, Project project) {
             }
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
             FileUtils.saveEditDocument(vf);
-            String note = FileDocumentManager.getInstance().getDocument(vf).getText();
+            String note = ApplicationManager.getApplication().runReadAction((Computable<String>) () -> FileDocumentManager.getInstance().getDocument(vf).getText());
             HttpRequest httpRequest = HttpRequest.post(URLUtils.getLeetcodeGraphql(),"application/json");
             JSONObject variables = new JSONObject();
             variables.put("titleSlug",question.getTitleSlug());

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -5,6 +5,7 @@
 import com.intellij.openapi.fileEditor.FileEditorManager;
 import com.intellij.openapi.fileEditor.OpenFileDescriptor;
 import com.intellij.openapi.project.Project;
+import com.intellij.openapi.util.Computable;
 import com.intellij.openapi.vfs.LocalFileSystem;
 import com.intellij.openapi.vfs.VirtualFile;
 import com.intellij.openapi.vfs.newvfs.RefreshQueue;
@@ -78,7 +79,7 @@ public static String getClearCommentFileBody(File file, CodeTypeEnum codeTypeEnu
         saveEditDocument(vf);
         StringBuffer code = new StringBuffer();
         try {
-            String body = FileDocumentManager.getInstance().getDocument(vf).getText();
+            String body = ApplicationManager.getApplication().runReadAction((Computable<String>) () -> FileDocumentManager.getInstance().getDocument(vf).getText());
             if (StringUtils.isNotBlank(body)) {
 
                 List<String> codeList = new LinkedList<>();

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/PositionAction.java
Patch:
@@ -49,6 +49,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config, Question
         }
         JBScrollPane scrollPane = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_SCROLL);
         ApplicationManager.getApplication().invokeAndWait(() -> {
+            WindowFactory.activateToolWindow(anActionEvent.getProject());
             ViewManager.position(tree, scrollPane, question);
         });
     }

File: src/main/java/com/shuzijun/leetcode/plugin/manager/NoteManager.java
Patch:
@@ -1,9 +1,9 @@
 package com.shuzijun.leetcode.plugin.manager;
 
 import com.alibaba.fastjson.JSONObject;
+import com.intellij.openapi.fileEditor.FileDocumentManager;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.vfs.LocalFileSystem;
-import com.intellij.openapi.vfs.VfsUtil;
 import com.intellij.openapi.vfs.VirtualFile;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.model.Constant;
@@ -79,7 +79,7 @@ public static void push(Question question, Project project) {
             }
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
             FileUtils.saveEditDocument(vf);
-            String note = VfsUtil.loadText(vf);
+            String note = FileDocumentManager.getInstance().getDocument(vf).getText();
             HttpRequest httpRequest = HttpRequest.post(URLUtils.getLeetcodeGraphql(),"application/json");
             JSONObject variables = new JSONObject();
             variables.put("titleSlug",question.getTitleSlug());

File: src/main/java/com/shuzijun/leetcode/plugin/utils/VelocityUtils.java
Patch:
@@ -37,6 +37,7 @@ public static String convert(String template, Object data) {
         VelocityContext velocityContext = new VelocityContext();
         velocityContext.put(VM_CONTEXT, data);
         velocityContext.put("velocityTool", new VelocityTool());
+        velocityContext.put("vt", new VelocityTool());
         boolean isSuccess = engine.evaluate(velocityContext, writer, VM_LOG_TAG, template);
         if (!isSuccess) {
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/PositionAction.java
Patch:
@@ -49,6 +49,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config, Question
         }
         JBScrollPane scrollPane = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_SCROLL);
         ApplicationManager.getApplication().invokeAndWait(() -> {
+            WindowFactory.activateToolWindow(anActionEvent.getProject());
             ViewManager.position(tree, scrollPane, question);
         });
     }

File: src/main/java/com/shuzijun/leetcode/plugin/manager/NoteManager.java
Patch:
@@ -1,9 +1,9 @@
 package com.shuzijun.leetcode.plugin.manager;
 
 import com.alibaba.fastjson.JSONObject;
+import com.intellij.openapi.fileEditor.FileDocumentManager;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.vfs.LocalFileSystem;
-import com.intellij.openapi.vfs.VfsUtil;
 import com.intellij.openapi.vfs.VirtualFile;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.model.Constant;
@@ -79,7 +79,7 @@ public static void push(Question question, Project project) {
             }
             VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file);
             FileUtils.saveEditDocument(vf);
-            String note = VfsUtil.loadText(vf);
+            String note = FileDocumentManager.getInstance().getDocument(vf).getText();
             HttpRequest httpRequest = HttpRequest.post(URLUtils.getLeetcodeGraphql(),"application/json");
             JSONObject variables = new JSONObject();
             variables.put("titleSlug",question.getTitleSlug());

File: src/main/java/com/shuzijun/leetcode/plugin/utils/VelocityUtils.java
Patch:
@@ -37,6 +37,7 @@ public static String convert(String template, Object data) {
         VelocityContext velocityContext = new VelocityContext();
         velocityContext.put(VM_CONTEXT, data);
         velocityContext.put("velocityTool", new VelocityTool());
+        velocityContext.put("vt", new VelocityTool());
         boolean isSuccess = engine.evaluate(velocityContext, writer, VM_LOG_TAG, template);
         if (!isSuccess) {
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/FindActionGroup.java
Patch:
@@ -40,7 +40,9 @@ public void update(AnActionEvent e) {
             }
         }
         e.getPresentation().setIcon(null);
-        findToolbar.getComponent().updateUI();
+        if (findToolbar != null && findToolbar.getComponent() != null) {
+            findToolbar.getComponent().updateUI();
+        }
     }
 
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/SortAction.java
Patch:
@@ -39,7 +39,9 @@ public void update(@NotNull AnActionEvent e) {
         } else {
             e.getPresentation().setIcon(null);
         }
-        sortToolbar.getComponent().updateUI();
+        if (sortToolbar != null && sortToolbar.getComponent() != null) {
+            sortToolbar.getComponent().updateUI();
+        }
         super.update(e);
 
     }

File: src/main/java/com/shuzijun/leetcode/plugin/editor/LCVPreview.java
Patch:
@@ -68,8 +68,8 @@ public LCVPreview(@NotNull Project project, @NotNull VirtualFile file) {
             tempPanel = new LCVPanel(url, project);
             tempPanel.loadHTML(createHtml(isPresentableUrl), url);
             myHtmlPanelWrapper.add(tempPanel.getComponent(), BorderLayout.CENTER);
-        } catch (IllegalStateException e) {
-            myHtmlPanelWrapper.add(new JBLabel(e.getMessage()), BorderLayout.CENTER);
+        } catch (Throwable e) {
+            myHtmlPanelWrapper.add(new JBLabel("<html><body>Your environment does not support JCEF.<br>Check the Registry 'ide.browser.jcef.enabled'.<br>"+e.getMessage()+"<body></html>"), BorderLayout.CENTER);
         }
         myPanel = tempPanel;
         myHtmlPanelWrapper.repaint();

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -46,7 +46,7 @@ public static void openCode(Question question, Project project) {
         if (file.exists()) {
             FileUtils.openFileEditorAndSaveState(file,project,question,fillPath,true);
         } else {
-            if (config.getQuestionEditor() || getQuestion(question, codeTypeEnum, project)) {
+            if (getQuestion(question, codeTypeEnum, project)) {
                 question.setContent(CommentUtils.createComment(question.getContent(), codeTypeEnum,config));
                 FileUtils.saveFile(file, VelocityUtils.convert(config.getCustomTemplate(), question));
                 FileUtils.openFileEditorAndSaveState(file,project,question,fillPath,true);

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -34,6 +34,9 @@ public static void saveFile(String path, String body) {
 
     public static void saveFile(File file, String body) {
         try {
+            if (body == null) {
+                return;
+            }
             if (!file.getParentFile().exists()) {
                 file.getParentFile().mkdirs();
             }

File: src/main/java/com/shuzijun/leetcode/plugin/window/HttpLogin.java
Patch:
@@ -82,6 +82,7 @@ public static boolean ajaxLogin(Config config, JTree tree, Project project) {
                     return Boolean.FALSE;
                 }
             } else if (response.getStatusCode() == 400) {
+                LogUtils.LOG.error("login 400:" + body);
                 JSONObject jsonObject = JSONObject.parseObject(body);
                 MessageUtils.getInstance(project).showInfoMsg("info", StringUtils.join(jsonObject.getJSONObject("form").getJSONArray("errors"), ","));
                 return Boolean.FALSE;

File: src/main/java/com/shuzijun/leetcode/plugin/editor/LCVPreview.java
Patch:
@@ -68,8 +68,8 @@ public LCVPreview(@NotNull Project project, @NotNull VirtualFile file) {
             tempPanel = new LCVPanel(url, project);
             tempPanel.loadHTML(createHtml(isPresentableUrl), url);
             myHtmlPanelWrapper.add(tempPanel.getComponent(), BorderLayout.CENTER);
-        } catch (Exception e) {
-            myHtmlPanelWrapper.add(new JBLabel(e.getMessage()), BorderLayout.CENTER);
+        } catch (Throwable e) {
+            myHtmlPanelWrapper.add(new JBLabel("<html><body>Your environment does not support JCEF.<br>Check the Registry 'ide.browser.jcef.enabled'.<br>"+e.getMessage()+"<body></html>"), BorderLayout.CENTER);
         }
         myPanel = tempPanel;
         myHtmlPanelWrapper.repaint();

File: src/main/java/com/shuzijun/leetcode/plugin/listener/SupportCheck.java
Patch:
@@ -24,7 +24,7 @@ public void runActivity(@NotNull Project project) {
             return;
         }
         if(!JBCefApp.isSupported()){
-            Notifications.Bus.notify(new Notification(PluginConstant.NOTIFICATION_GROUP, "Not Support JCEF", "Your environment does not support JCEF, cannot use LeetCode Editor", NotificationType.ERROR));
+            Notifications.Bus.notify(new Notification(PluginConstant.NOTIFICATION_GROUP, "Not Support JCEF", "Your environment does not support JCEF, cannot use LeetCode Editor.Check the Registry 'ide.browser.jcef.enabled'.", NotificationType.ERROR));
         }
     }
 }

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -46,7 +46,7 @@ public static void openCode(Question question, Project project) {
         if (file.exists()) {
             FileUtils.openFileEditorAndSaveState(file,project,question,fillPath,true);
         } else {
-            if (config.getQuestionEditor() || getQuestion(question, codeTypeEnum, project)) {
+            if (getQuestion(question, codeTypeEnum, project)) {
                 question.setContent(CommentUtils.createComment(question.getContent(), codeTypeEnum,config));
                 FileUtils.saveFile(file, VelocityUtils.convert(config.getCustomTemplate(), question));
                 FileUtils.openFileEditorAndSaveState(file,project,question,fillPath,true);

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/FindActionGroup.java
Patch:
@@ -40,7 +40,9 @@ public void update(AnActionEvent e) {
             }
         }
         e.getPresentation().setIcon(null);
-        findToolbar.getComponent().updateUI();
+        if (findToolbar != null && findToolbar.getComponent() != null) {
+            findToolbar.getComponent().updateUI();
+        }
     }
 
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/SortAction.java
Patch:
@@ -39,7 +39,9 @@ public void update(@NotNull AnActionEvent e) {
         } else {
             e.getPresentation().setIcon(null);
         }
-        sortToolbar.getComponent().updateUI();
+        if (sortToolbar != null && sortToolbar.getComponent() != null) {
+            sortToolbar.getComponent().updateUI();
+        }
         super.update(e);
 
     }

File: src/main/java/com/shuzijun/leetcode/plugin/editor/LCVPreview.java
Patch:
@@ -68,7 +68,7 @@ public LCVPreview(@NotNull Project project, @NotNull VirtualFile file) {
             tempPanel = new LCVPanel(url, project);
             tempPanel.loadHTML(createHtml(isPresentableUrl), url);
             myHtmlPanelWrapper.add(tempPanel.getComponent(), BorderLayout.CENTER);
-        } catch (IllegalStateException e) {
+        } catch (Exception e) {
             myHtmlPanelWrapper.add(new JBLabel(e.getMessage()), BorderLayout.CENTER);
         }
         myPanel = tempPanel;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -34,6 +34,9 @@ public static void saveFile(String path, String body) {
 
     public static void saveFile(File file, String body) {
         try {
+            if (body == null) {
+                return;
+            }
             if (!file.getParentFile().exists()) {
                 file.getParentFile().mkdirs();
             }

File: src/main/java/com/shuzijun/leetcode/plugin/window/HttpLogin.java
Patch:
@@ -82,6 +82,7 @@ public static boolean ajaxLogin(Config config, JTree tree, Project project) {
                     return Boolean.FALSE;
                 }
             } else if (response.getStatusCode() == 400) {
+                LogUtils.LOG.error("login 400:" + body);
                 JSONObject jsonObject = JSONObject.parseObject(body);
                 MessageUtils.getInstance(project).showInfoMsg("info", StringUtils.join(jsonObject.getJSONObject("form").getJSONArray("errors"), ","));
                 return Boolean.FALSE;

File: src/main/java/com/shuzijun/leetcode/plugin/model/PluginConstant.java
Patch:
@@ -24,7 +24,7 @@ public class PluginConstant {
     /**
      * 配置名称
      */
-    public static final String APPLICATION_CONFIGURABLE_DISPLAY_NAME = "leetcode plugin";
+    public static final String APPLICATION_CONFIGURABLE_DISPLAY_NAME = "LeetCode Plugin";
 
 
     public static final String ACTION_PREFIX = "leetcode";

File: src/main/java/com/shuzijun/leetcode/plugin/model/PluginConstant.java
Patch:
@@ -24,7 +24,7 @@ public class PluginConstant {
     /**
      * 配置名称
      */
-    public static final String APPLICATION_CONFIGURABLE_DISPLAY_NAME = "leetcode plugin";
+    public static final String APPLICATION_CONFIGURABLE_DISPLAY_NAME = "LeetCode Plugin";
 
 
     public static final String ACTION_PREFIX = "leetcode";

File: src/main/java/com/shuzijun/leetcode/plugin/model/PluginConstant.java
Patch:
@@ -55,5 +55,5 @@ public class PluginConstant {
 
     public static final String LEETCODE_EDITOR_GROUP = ACTION_PREFIX + ".editor.group";
 
-
+    public static final String  LEETCODE_EDITOR_TIMER_STATUS_BAR_ID = PLUGIN_ID + "-TimerStatusBar";
 }

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -163,7 +163,7 @@ private void loadSetting() {
         Config config = PersistentConfig.getInstance().getInitConfig();
         if (config != null) {
             userNameField.setText(config.getLoginName());
-            passwordField.setText(PersistentConfig.getInstance().getPassword());
+            passwordField.setText(PersistentConfig.getInstance().getPassword(config.getLoginName()));
             if (StringUtils.isNotBlank(config.getFilePath())) {
                 fileFolderBtn.setText(config.getFilePath());
             }
@@ -216,7 +216,7 @@ public boolean isModified() {
             Config currentState = new Config();
             process(currentState);
             if (currentState.isModified(config)) {
-                if (passwordField.getText() != null && passwordField.getText().equals(PersistentConfig.getInstance().getPassword())) {
+                if (passwordField.getText() != null && passwordField.getText().equals(PersistentConfig.getInstance().getPassword(config.getLoginName()))) {
                     return false;
                 } else {
                     return true;
@@ -239,7 +239,7 @@ public void apply() {
             file.mkdirs();
         }
         PersistentConfig.getInstance().setInitConfig(config);
-        PersistentConfig.getInstance().savePassword(passwordField.getText());
+        PersistentConfig.getInstance().savePassword(passwordField.getText(),config.getLoginName());
         CustomTreeCellRenderer.loaColor();
         TimerBarWidget.loaColor();
     }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/HttpRequestUtils.java
Patch:
@@ -1,6 +1,6 @@
 package com.shuzijun.leetcode.plugin.utils;
 
-import com.shuzijun.leetcode.plugin.utils.io.HttpRequests;
+import com.intellij.util.io.HttpRequests;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpHeaders;
 import org.jetbrains.annotations.NotNull;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/SentryUtils.java
Patch:
@@ -1,6 +1,6 @@
 package com.shuzijun.leetcode.plugin.utils;
 
-import com.intellij.ide.plugins.PluginManager;
+import com.intellij.ide.plugins.PluginManagerCore;
 import com.intellij.openapi.application.ApplicationInfo;
 import com.intellij.openapi.application.impl.ApplicationInfoImpl;
 import com.intellij.openapi.extensions.PluginId;
@@ -79,7 +79,7 @@ public void helpBuildingEvent(EventBuilder eventBuilder) {
 
         }
         context.addTag("javaVersion", SystemInfo.JAVA_RUNTIME_VERSION);
-        context.addTag("pluginVersion", PluginManager.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion());
+        context.addTag("pluginVersion", PluginManagerCore.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion());
         if(error == null){
             sentry.sendMessage(description);
         }else {

File: src/main/java/com/shuzijun/leetcode/plugin/utils/UpdateUtils.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
-import com.intellij.ide.plugins.PluginManager;
+import com.intellij.ide.plugins.PluginManagerCore;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.extensions.PluginId;
 import com.intellij.openapi.project.Project;
@@ -33,7 +33,7 @@ public void run() {
                     CloseableHttpClient httpClient = HttpClients.custom().build();
                     HttpGet httpget = null;
                     try {
-                        String[] version = PluginManager.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion().replace("v", "").split("\\.|-");
+                        String[] version = PluginManagerCore.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion().replace("v", "").split("\\.|-");
                         httpget = new HttpGet("https://plugins.jetbrains.com/api/plugins/"+PluginConstant.WEB_ID+"/updates");
                         CloseableHttpResponse response = httpClient.execute(httpget);
                         String body = EntityUtils.toString(response.getEntity(), "UTF-8");

File: src/main/java/com/shuzijun/leetcode/plugin/window/HttpLogin.java
Patch:
@@ -33,15 +33,15 @@ public static boolean ajaxLogin(Config config, JTree tree, Project project) {
             return Boolean.FALSE;
         }
 
-        if (StringUtils.isBlank(PersistentConfig.getInstance().getPassword())) {
+        if (StringUtils.isBlank(PersistentConfig.getInstance().getPassword(config.getLoginName()))) {
             return Boolean.FALSE;
         }
 
         try {
             HttpEntity ent = MultipartEntityBuilder.create()
                     .addTextBody("csrfmiddlewaretoken", HttpRequestUtils.getToken())
                     .addTextBody("login", config.getLoginName())
-                    .addTextBody("password", PersistentConfig.getInstance().getPassword())
+                    .addTextBody("password", PersistentConfig.getInstance().getPassword(config.getLoginName()))
                     .addTextBody("next", "/problems")
                     .build();
             HttpRequest httpRequest = HttpRequest.post(URLUtils.getLeetcodeLogin(), ent.getContentType().getValue());

File: src/main/java/com/shuzijun/leetcode/plugin/model/PluginConstant.java
Patch:
@@ -55,5 +55,5 @@ public class PluginConstant {
 
     public static final String LEETCODE_EDITOR_GROUP = ACTION_PREFIX + ".editor.group";
 
-
+    public static final String  LEETCODE_EDITOR_TIMER_STATUS_BAR_ID = PLUGIN_ID + "-TimerStatusBar";
 }

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -163,7 +163,7 @@ private void loadSetting() {
         Config config = PersistentConfig.getInstance().getInitConfig();
         if (config != null) {
             userNameField.setText(config.getLoginName());
-            passwordField.setText(PersistentConfig.getInstance().getPassword());
+            passwordField.setText(PersistentConfig.getInstance().getPassword(config.getLoginName()));
             if (StringUtils.isNotBlank(config.getFilePath())) {
                 fileFolderBtn.setText(config.getFilePath());
             }
@@ -216,7 +216,7 @@ public boolean isModified() {
             Config currentState = new Config();
             process(currentState);
             if (currentState.isModified(config)) {
-                if (passwordField.getText() != null && passwordField.getText().equals(PersistentConfig.getInstance().getPassword())) {
+                if (passwordField.getText() != null && passwordField.getText().equals(PersistentConfig.getInstance().getPassword(config.getLoginName()))) {
                     return false;
                 } else {
                     return true;
@@ -239,7 +239,7 @@ public void apply() {
             file.mkdirs();
         }
         PersistentConfig.getInstance().setInitConfig(config);
-        PersistentConfig.getInstance().savePassword(passwordField.getText());
+        PersistentConfig.getInstance().savePassword(passwordField.getText(),config.getLoginName());
         CustomTreeCellRenderer.loaColor();
         TimerBarWidget.loaColor();
     }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/HttpRequestUtils.java
Patch:
@@ -1,6 +1,6 @@
 package com.shuzijun.leetcode.plugin.utils;
 
-import com.shuzijun.leetcode.plugin.utils.io.HttpRequests;
+import com.intellij.util.io.HttpRequests;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.http.HttpHeaders;
 import org.jetbrains.annotations.NotNull;

File: src/main/java/com/shuzijun/leetcode/plugin/utils/SentryUtils.java
Patch:
@@ -1,6 +1,6 @@
 package com.shuzijun.leetcode.plugin.utils;
 
-import com.intellij.ide.plugins.PluginManager;
+import com.intellij.ide.plugins.PluginManagerCore;
 import com.intellij.openapi.application.ApplicationInfo;
 import com.intellij.openapi.application.impl.ApplicationInfoImpl;
 import com.intellij.openapi.extensions.PluginId;
@@ -79,7 +79,7 @@ public void helpBuildingEvent(EventBuilder eventBuilder) {
 
         }
         context.addTag("javaVersion", SystemInfo.JAVA_RUNTIME_VERSION);
-        context.addTag("pluginVersion", PluginManager.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion());
+        context.addTag("pluginVersion", PluginManagerCore.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion());
         if(error == null){
             sentry.sendMessage(description);
         }else {

File: src/main/java/com/shuzijun/leetcode/plugin/utils/UpdateUtils.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.alibaba.fastjson.JSONArray;
 import com.alibaba.fastjson.JSONObject;
-import com.intellij.ide.plugins.PluginManager;
+import com.intellij.ide.plugins.PluginManagerCore;
 import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.extensions.PluginId;
 import com.intellij.openapi.project.Project;
@@ -33,7 +33,7 @@ public void run() {
                     CloseableHttpClient httpClient = HttpClients.custom().build();
                     HttpGet httpget = null;
                     try {
-                        String[] version = PluginManager.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion().replace("v", "").split("\\.|-");
+                        String[] version = PluginManagerCore.getPlugin(PluginId.getId(PluginConstant.PLUGIN_ID)).getVersion().replace("v", "").split("\\.|-");
                         httpget = new HttpGet("https://plugins.jetbrains.com/api/plugins/"+PluginConstant.WEB_ID+"/updates");
                         CloseableHttpResponse response = httpClient.execute(httpget);
                         String body = EntityUtils.toString(response.getEntity(), "UTF-8");

File: src/main/java/com/shuzijun/leetcode/plugin/window/HttpLogin.java
Patch:
@@ -33,15 +33,15 @@ public static boolean ajaxLogin(Config config, JTree tree, Project project) {
             return Boolean.FALSE;
         }
 
-        if (StringUtils.isBlank(PersistentConfig.getInstance().getPassword())) {
+        if (StringUtils.isBlank(PersistentConfig.getInstance().getPassword(config.getLoginName()))) {
             return Boolean.FALSE;
         }
 
         try {
             HttpEntity ent = MultipartEntityBuilder.create()
                     .addTextBody("csrfmiddlewaretoken", HttpRequestUtils.getToken())
                     .addTextBody("login", config.getLoginName())
-                    .addTextBody("password", PersistentConfig.getInstance().getPassword())
+                    .addTextBody("password", PersistentConfig.getInstance().getPassword(config.getLoginName()))
                     .addTextBody("next", "/problems")
                     .build();
             HttpRequest httpRequest = HttpRequest.post(URLUtils.getLeetcodeLogin(), ent.getContentType().getValue());

File: src/main/java/com/shuzijun/leetcode/plugin/listener/ErrorReportHandler.java
Patch:
@@ -3,7 +3,6 @@
 import com.intellij.diagnostic.AbstractMessage;
 import com.intellij.openapi.diagnostic.ErrorReportSubmitter;
 import com.intellij.openapi.diagnostic.IdeaLoggingEvent;
-import com.intellij.openapi.diagnostic.SubmittedReportInfo;
 import com.intellij.util.Consumer;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
 import com.shuzijun.leetcode.plugin.utils.SentryUtils;
@@ -23,7 +22,7 @@ public String getReportActionText() {
     }
 
     @Override
-    public boolean submit(@NotNull IdeaLoggingEvent[] events, @Nullable String additionalInfo, @NotNull Component parentComponent, @NotNull Consumer<SubmittedReportInfo> consumer) {
+    public boolean submit(@NotNull IdeaLoggingEvent[] events, @Nullable String additionalInfo, @NotNull Component parentComponent, @NotNull Consumer consumer) {
         for (IdeaLoggingEvent event : events) {
             Throwable throwable = event.getThrowable();
             if (event.getData() instanceof AbstractMessage) {

File: src/main/java/com/shuzijun/leetcode/plugin/listener/ErrorReportHandler.java
Patch:
@@ -3,7 +3,6 @@
 import com.intellij.diagnostic.AbstractMessage;
 import com.intellij.openapi.diagnostic.ErrorReportSubmitter;
 import com.intellij.openapi.diagnostic.IdeaLoggingEvent;
-import com.intellij.openapi.diagnostic.SubmittedReportInfo;
 import com.intellij.util.Consumer;
 import com.shuzijun.leetcode.plugin.utils.PropertiesUtils;
 import com.shuzijun.leetcode.plugin.utils.SentryUtils;
@@ -23,7 +22,7 @@ public String getReportActionText() {
     }
 
     @Override
-    public boolean submit(@NotNull IdeaLoggingEvent[] events, @Nullable String additionalInfo, @NotNull Component parentComponent, @NotNull Consumer<SubmittedReportInfo> consumer) {
+    public boolean submit(@NotNull IdeaLoggingEvent[] events, @Nullable String additionalInfo, @NotNull Component parentComponent, @NotNull Consumer consumer) {
         for (IdeaLoggingEvent event : events) {
             Throwable throwable = event.getThrowable();
             if (event.getData() instanceof AbstractMessage) {

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/LoginAction.java
Patch:
@@ -65,7 +65,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config) {
                 @Override
                 public void run() {
                     LoginFrame loginFrame;
-                    if (HttpLogin.isSupportedJcef()) {
+                    if (HttpLogin.isEnabledJcef()) {
                         loginFrame = new JcefLogin(anActionEvent.getProject(), tree);
                     } else {
                         loginFrame = new CookieLogin(anActionEvent.getProject(), tree);

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/LoginAction.java
Patch:
@@ -65,7 +65,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config) {
                 @Override
                 public void run() {
                     LoginFrame loginFrame;
-                    if (HttpLogin.isSupportedJcef()) {
+                    if (HttpLogin.isEnabledJcef()) {
                         loginFrame = new JcefLogin(anActionEvent.getProject(), tree);
                     } else {
                         loginFrame = new CookieLogin(anActionEvent.getProject(), tree);

File: src/main/java/com/shuzijun/leetcode/plugin/actions/toolbar/LoginAction.java
Patch:
@@ -65,7 +65,7 @@ public void actionPerformed(AnActionEvent anActionEvent, Config config) {
                 @Override
                 public void run() {
                     LoginFrame loginFrame;
-                    if (HttpLogin.isSupportedJcef()) {
+                    if (HttpLogin.isEnabledJcef()) {
                         loginFrame = new JcefLogin(anActionEvent.getProject(), tree);
                     } else {
                         loginFrame = new CookieLogin(anActionEvent.getProject(), tree);

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -93,7 +93,7 @@ public void mouseClicked(MouseEvent e) {
             }
         });
 
-        jcefCheckBox.setEnabled(!HttpLogin.isSupportedJcef());
+        jcefCheckBox.setEnabled(HttpLogin.isSupportedJcef());
 
         templateConfigHelp.addMouseListener(new MouseAdapter() {
             @Override

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -93,7 +93,7 @@ public void mouseClicked(MouseEvent e) {
             }
         });
 
-        jcefCheckBox.setEnabled(!HttpLogin.isSupportedJcef());
+        jcefCheckBox.setEnabled(HttpLogin.isSupportedJcef());
 
         templateConfigHelp.addMouseListener(new MouseAdapter() {
             @Override

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -95,7 +95,7 @@ public void mouseClicked(MouseEvent e) {
         Boolean jcefSupported;
         try {
             jcefSupported = JBCefApp.isSupported();
-        }catch (Exception e){
+        }catch (Throwable e){
             jcefSupported = false;
         }
         if(!jcefSupported){

File: src/main/java/com/shuzijun/leetcode/plugin/window/LoginFrame.java
Patch:
@@ -217,7 +217,7 @@ private boolean classLoader() {
             try {
                 Config config = PersistentConfig.getInstance().getInitConfig();
                 return config.getJcef() && JBCefApp.isSupported();
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 return Boolean.FALSE;
             }
 

File: src/main/java/com/shuzijun/leetcode/plugin/setting/SettingUI.java
Patch:
@@ -95,7 +95,7 @@ public void mouseClicked(MouseEvent e) {
         Boolean jcefSupported;
         try {
             jcefSupported = JBCefApp.isSupported();
-        }catch (Exception e){
+        }catch (Throwable e){
             jcefSupported = false;
         }
         if(!jcefSupported){

File: src/main/java/com/shuzijun/leetcode/plugin/window/LoginFrame.java
Patch:
@@ -217,7 +217,7 @@ private boolean classLoader() {
             try {
                 Config config = PersistentConfig.getInstance().getInitConfig();
                 return config.getJcef() && JBCefApp.isSupported();
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 return Boolean.FALSE;
             }
 

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/OpenSolutionAction.java
Patch:
@@ -23,6 +23,9 @@ public class OpenSolutionAction extends AbstractEditAction {
     @Override
     public void update(@NotNull AnActionEvent anActionEvent) {
         VirtualFile vf = anActionEvent.getData(PlatformDataKeys.VIRTUAL_FILE);
+        if (vf == null) {
+            return;
+        }
         LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(anActionEvent.getProject()).getEditor(vf.getPath());
         if (leetcodeEditor == null) {
             return;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/PositionAction.java
Patch:
@@ -25,6 +25,9 @@ public class PositionAction extends AbstractEditAction {
 
     @Override
     public void update(@NotNull AnActionEvent e) {
+        if (e.getProject() == null) {
+            return;
+        }
         VirtualFile vf = ArrayUtil.getFirstElement(FileEditorManager.getInstance(e.getProject()).getSelectedFiles());
         if (vf == null) {
             e.getPresentation().setEnabled(false);

File: src/main/java/com/shuzijun/leetcode/plugin/manager/SubmissionManager.java
Patch:
@@ -120,8 +120,9 @@ public static void openSubmission(Submission submission, Question question, Proj
                                 sb.append(codeTypeEnum.getComment()).append("expected_output:").append(submissionData.getString("expected_output")).append("\n");
                                 sb.append(codeTypeEnum.getComment()).append("code_output:").append(submissionData.getString("code_output")).append("\n");
                                 sb.append(codeTypeEnum.getComment()).append("runtime_error:").append(submissionData.getString("runtime_error")).append("\n");
-                                sb.append(codeTypeEnum.getComment()).append("last_testcase:").append(submissionData.getString("last_testcase").replaceAll("(\\r|\\r\\n|\\n\\r|\\n)", " ")).append("\n");
-
+                                if(submissionData.containsKey("last_testcase")) {
+                                    sb.append(codeTypeEnum.getComment()).append("last_testcase:").append(submissionData.getString("last_testcase").replaceAll("(\\r|\\r\\n|\\n\\r|\\n)", " ")).append("\n");
+                                }
                             }
                             FileUtils.saveFile(file, sb.toString());
                             FileUtils.openFileEditor(file,project);

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -138,7 +138,7 @@ public Boolean compute() throws Throwable {
                     codeList.add(line);
                     lineCount++;
                 }
-                if (codeBegins.size() == codeBegins.size() && codeBegins.size() > 0) {
+                if (codeBegins.size() == codeEnds.size() && codeBegins.size() > 0) {
                     for (int s = 0; s < codeBegins.size(); s++) {
                         for (int i = codeBegins.get(s) + 1; i < codeEnds.get(s); i++) {
                             code.append(codeList.get(i)).append("\n");

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/OpenSolutionAction.java
Patch:
@@ -23,6 +23,9 @@ public class OpenSolutionAction extends AbstractEditAction {
     @Override
     public void update(@NotNull AnActionEvent anActionEvent) {
         VirtualFile vf = anActionEvent.getData(PlatformDataKeys.VIRTUAL_FILE);
+        if (vf == null) {
+            return;
+        }
         LeetcodeEditor leetcodeEditor = ProjectConfig.getInstance(anActionEvent.getProject()).getEditor(vf.getPath());
         if (leetcodeEditor == null) {
             return;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/editor/PositionAction.java
Patch:
@@ -25,6 +25,9 @@ public class PositionAction extends AbstractEditAction {
 
     @Override
     public void update(@NotNull AnActionEvent e) {
+        if (e.getProject() == null) {
+            return;
+        }
         VirtualFile vf = ArrayUtil.getFirstElement(FileEditorManager.getInstance(e.getProject()).getSelectedFiles());
         if (vf == null) {
             e.getPresentation().setEnabled(false);

File: src/main/java/com/shuzijun/leetcode/plugin/manager/SubmissionManager.java
Patch:
@@ -120,8 +120,9 @@ public static void openSubmission(Submission submission, Question question, Proj
                                 sb.append(codeTypeEnum.getComment()).append("expected_output:").append(submissionData.getString("expected_output")).append("\n");
                                 sb.append(codeTypeEnum.getComment()).append("code_output:").append(submissionData.getString("code_output")).append("\n");
                                 sb.append(codeTypeEnum.getComment()).append("runtime_error:").append(submissionData.getString("runtime_error")).append("\n");
-                                sb.append(codeTypeEnum.getComment()).append("last_testcase:").append(submissionData.getString("last_testcase").replaceAll("(\\r|\\r\\n|\\n\\r|\\n)", " ")).append("\n");
-
+                                if(submissionData.containsKey("last_testcase")) {
+                                    sb.append(codeTypeEnum.getComment()).append("last_testcase:").append(submissionData.getString("last_testcase").replaceAll("(\\r|\\r\\n|\\n\\r|\\n)", " ")).append("\n");
+                                }
                             }
                             FileUtils.saveFile(file, sb.toString());
                             FileUtils.openFileEditor(file,project);

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -138,7 +138,7 @@ public Boolean compute() throws Throwable {
                     codeList.add(line);
                     lineCount++;
                 }
-                if (codeBegins.size() == codeBegins.size() && codeBegins.size() > 0) {
+                if (codeBegins.size() == codeEnds.size() && codeBegins.size() > 0) {
                     for (int s = 0; s < codeBegins.size(); s++) {
                         for (int i = codeBegins.get(s) + 1; i < codeEnds.get(s); i++) {
                             code.append(codeList.get(i)).append("\n");

File: src/main/java/com/shuzijun/leetcode/plugin/model/CodeTypeEnum.java
Patch:
@@ -25,6 +25,7 @@ public enum CodeTypeEnum {
     MYSQL("MySQL", "mysql", ".sql", "#"),
     ORACLE("Oracle", "oraclesql", ".sql", "#"),
     MSSQLSERVER("MS SQL Server", "mssql", ".sql", "#"),
+    TypeScript("TypeScript", "typescript", ".ts", "//"),
     ;
 
 

File: src/main/java/com/shuzijun/leetcode/plugin/model/CodeTypeEnum.java
Patch:
@@ -25,6 +25,7 @@ public enum CodeTypeEnum {
     MYSQL("MySQL", "mysql", ".sql", "#"),
     ORACLE("Oracle", "oraclesql", ".sql", "#"),
     MSSQLSERVER("MS SQL Server", "mssql", ".sql", "#"),
+    TypeScript("TypeScript", "typescript", ".ts", "//"),
     ;
 
 

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ExploreManager.java
Patch:
@@ -172,6 +172,7 @@ public static Question getItem(Question q) {
                     JSONObject question = object.getJSONObject(q.getLangSlug());
                     if(Constant.ITEM_TYPE_QUESTION.equals(q.getLangSlug())){
                         q.setQuestionId(question.getString("questionId"));
+                        q.setFrontendQuestionId(question.getString("questionId"));
                         q.setTitleSlug(question.getString("titleSlug"));
                     }else {
                         q.setNodeType(Constant.NODETYPE_DEF);

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -73,6 +73,9 @@ public String apply(Question question) {
             node.add(new DefaultMutableTreeNode(q));
         }
         for (String key : filter.keySet()) {
+            if(Constant.FIND_TYPE_CATEGORY.equals(key)){
+                continue;
+            }
             DefaultMutableTreeNode filterNode = new DefaultMutableTreeNode(new Question(key));
             root.add(filterNode);
             addChild(filterNode, filter.get(key), question);

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ExploreManager.java
Patch:
@@ -172,6 +172,7 @@ public static Question getItem(Question q) {
                     JSONObject question = object.getJSONObject(q.getLangSlug());
                     if(Constant.ITEM_TYPE_QUESTION.equals(q.getLangSlug())){
                         q.setQuestionId(question.getString("questionId"));
+                        q.setFrontendQuestionId(question.getString("questionId"));
                         q.setTitleSlug(question.getString("titleSlug"));
                     }else {
                         q.setNodeType(Constant.NODETYPE_DEF);

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -73,6 +73,9 @@ public String apply(Question question) {
             node.add(new DefaultMutableTreeNode(q));
         }
         for (String key : filter.keySet()) {
+            if(Constant.FIND_TYPE_CATEGORY.equals(key)){
+                continue;
+            }
             DefaultMutableTreeNode filterNode = new DefaultMutableTreeNode(new Question(key));
             root.add(filterNode);
             addChild(filterNode, filter.get(key), question);

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -123,9 +123,9 @@ public Boolean compute() throws Throwable {
 
                 String[] lines = body.split("\r\n|\r|\n");
                 for (String line : lines) {
-                    if (StringUtils.isNotBlank(line) && trim(line).equals(codeTypeEnum.getComment() + trim(Constant.SUBMIT_REGION_BEGIN))) {
+                    if (StringUtils.isNotBlank(line) && trim(line).equals(trim(codeTypeEnum.getComment() + Constant.SUBMIT_REGION_BEGIN))) {
                         codeBegin = lineCount;
-                    } else if (StringUtils.isNotBlank(line) && trim(line).equals(codeTypeEnum.getComment() + trim(Constant.SUBMIT_REGION_END))) {
+                    } else if (StringUtils.isNotBlank(line) && trim(line).equals(trim(codeTypeEnum.getComment() + Constant.SUBMIT_REGION_END))) {
                         codeEnd = lineCount;
                     }
                     codeList.add(line);

File: src/main/java/com/shuzijun/leetcode/plugin/utils/FileUtils.java
Patch:
@@ -123,9 +123,9 @@ public Boolean compute() throws Throwable {
 
                 String[] lines = body.split("\r\n|\r|\n");
                 for (String line : lines) {
-                    if (StringUtils.isNotBlank(line) && trim(line).equals(codeTypeEnum.getComment() + trim(Constant.SUBMIT_REGION_BEGIN))) {
+                    if (StringUtils.isNotBlank(line) && trim(line).equals(trim(codeTypeEnum.getComment() + Constant.SUBMIT_REGION_BEGIN))) {
                         codeBegin = lineCount;
-                    } else if (StringUtils.isNotBlank(line) && trim(line).equals(codeTypeEnum.getComment() + trim(Constant.SUBMIT_REGION_END))) {
+                    } else if (StringUtils.isNotBlank(line) && trim(line).equals(trim(codeTypeEnum.getComment() + Constant.SUBMIT_REGION_END))) {
                         codeEnd = lineCount;
                     }
                     codeList.add(line);

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -208,7 +208,7 @@ public static Question getTreeQuestion(JTree tree,Project project) {
             }
         }
         if (question == null) {
-            MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("response.select"));
+            MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("tree.select"));
         }
         return question;
     }

File: src/main/java/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -208,7 +208,7 @@ public static Question getTreeQuestion(JTree tree,Project project) {
             }
         }
         if (question == null) {
-            MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("response.select"));
+            MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("tree.select"));
         }
         return question;
     }

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -392,7 +392,7 @@ public void run() {
                                     String input = jsonObject.getString("input");
                                     String output = jsonObject.getString("code_output");
                                     String expected = jsonObject.getString("expected_output");
-                                    String outputs = StringUtils.join(jsonObject.getJSONArray("code_output"), "\n\t\t");
+                                    String outputs = jsonObject.getString("std_output");
                                     MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("submit.failed", input, output, expected, outputs));
 
                                     if (!"ac".equals(question.getStatus())) {

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -393,7 +393,7 @@ public void run() {
                                     String input = jsonObject.getString("input");
                                     String output = jsonObject.getString("code_output");
                                     String expected = jsonObject.getString("expected_output");
-                                    String outputs = StringUtils.join(jsonObject.getJSONArray("code_output"), "\n\t\t");
+                                    String outputs = jsonObject.getString("std_output");
                                     MessageUtils.getInstance(project).showInfoMsg("info", PropertiesUtils.getInfo("submit.failed", input, output, expected, outputs));
 
                                     if (!"ac".equals(question.getStatus())) {

File: src/main/java/com/shuzijun/leetcode/plugin/timer/TimerBarWidget.java
Patch:
@@ -55,7 +55,7 @@ public void actionPerformed(ActionEvent e) {
     });
 
     private String time() {
-        return String.format("[%s]%02d:%02d:%02d", name, second / 60 / 60, second / 60, second % 60);
+        return String.format("[%s]%02d:%02d:%02d", name, second / 60 / 60, second / 60 % 60, second % 60);
     }
 
     @Override

File: src/main/java/com/shuzijun/leetcode/plugin/timer/TimerBarWidget.java
Patch:
@@ -55,7 +55,7 @@ public void actionPerformed(ActionEvent e) {
     });
 
     private String time() {
-        return String.format("[%s]%02d:%02d:%02d", name, second / 60 / 60, second / 60, second % 60);
+        return String.format("[%s]%02d:%02d:%02d", name, second / 60 / 60, second / 60 % 60, second % 60);
     }
 
     @Override

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -128,7 +128,6 @@ private static boolean getQuestion(Question question, CodeTypeEnum codeTypeEnum,
                     if (codeTypeEnum.getType().equals(object.getString("lang"))) {
                         question.setLangSlug(object.getString("langSlug"));
                         StringBuffer sb = new StringBuffer();
-                        sb.append("\n\n");
                         sb.append(codeTypeEnum.getComment()).append(Constant.SUBMIT_REGION_BEGIN).append("\n");
                         sb.append(object.getString("code").replaceAll("\\n", "\n")).append("\n");
                         sb.append(codeTypeEnum.getComment()).append(Constant.SUBMIT_REGION_END).append("\n");

File: src/main/java/com/shuzijun/leetcode/plugin/model/CodeTypeEnum.java
Patch:
@@ -8,9 +8,9 @@
  */
 public enum CodeTypeEnum {
     JAVA("Java", "java", ".java", "//"),
-    PYTHON("Python", "python", ".py", "#"),
+    PYTHON("Python", "python", ".py", "# "),
     CPP("C++", "cpp", ".cpp", "//"),
-    PYTHON3("Python3", "python3", ".py", "#"),
+    PYTHON3("Python3", "python3", ".py", "# "),
     C("C", "c", ".c", "//"),
     CSHARP("C#", "csharp", ".cs", "//"),
     JAVASCRIPT("JavaScript", "javascript", ".js", "//"),

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -128,7 +128,6 @@ private static boolean getQuestion(Question question, CodeTypeEnum codeTypeEnum,
                     if (codeTypeEnum.getType().equals(object.getString("lang"))) {
                         question.setLangSlug(object.getString("langSlug"));
                         StringBuffer sb = new StringBuffer();
-                        sb.append("\n\n");
                         sb.append(codeTypeEnum.getComment()).append(Constant.SUBMIT_REGION_BEGIN).append("\n");
                         sb.append(object.getString("code").replaceAll("\\n", "\n")).append("\n");
                         sb.append(codeTypeEnum.getComment()).append(Constant.SUBMIT_REGION_END).append("\n");

File: src/main/java/com/shuzijun/leetcode/plugin/model/CodeTypeEnum.java
Patch:
@@ -8,9 +8,9 @@
  */
 public enum CodeTypeEnum {
     JAVA("Java", "java", ".java", "//"),
-    PYTHON("Python", "python", ".py", "#"),
+    PYTHON("Python", "python", ".py", "# "),
     CPP("C++", "cpp", ".cpp", "//"),
-    PYTHON3("Python3", "python3", ".py", "#"),
+    PYTHON3("Python3", "python3", ".py", "# "),
     C("C", "c", ".c", "//"),
     CSHARP("C#", "csharp", ".cs", "//"),
     JAVASCRIPT("JavaScript", "javascript", ".js", "//"),

File: src/main/java/com/shuzijun/leetcode/plugin/actions/CollapseAction.java
Patch:
@@ -3,6 +3,7 @@
 import com.intellij.openapi.actionSystem.AnActionEvent;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -12,7 +13,7 @@
 public class CollapseAction extends AbstractAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent, Config config) {
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindAction.java
Patch:
@@ -3,6 +3,7 @@
 import com.intellij.openapi.actionSystem.AnActionEvent;
 import com.intellij.openapi.actionSystem.ToggleAction;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -14,7 +15,7 @@ public class FindAction extends ToggleAction {
 
     @Override
     public boolean isSelected(AnActionEvent anActionEvent) {
-        JPanel panel = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
+        JPanel panel = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
         if (panel == null) {
             return false;
         }
@@ -23,7 +24,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
 
     @Override
     public void setSelected(AnActionEvent anActionEvent, boolean b) {
-        JPanel panel = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
+        JPanel panel = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
         if (panel == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindClearAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -16,7 +17,7 @@ public class FindClearAction extends AbstractAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent, Config config) {
 
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindConfigAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.intellij.openapi.actionSystem.ex.CheckboxAction;
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -21,7 +22,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
     @Override
     public void setSelected(AnActionEvent anActionEvent, boolean b) {
         ViewManager.setIntersection(b);
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindTagAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Tag;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 import org.jetbrains.annotations.Nullable;
 
 import javax.swing.*;
@@ -29,7 +30,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
     @Override
     public void setSelected(AnActionEvent anActionEvent, boolean b) {
         tag.setSelect(b);
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/PickAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -14,12 +15,11 @@
 public class PickAction extends AbstractAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent, Config config) {
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }
-        JBScrollPane scrollPane = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_SCROLL);
-
+        JBScrollPane scrollPane = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_SCROLL);
         ViewManager.pick(tree, scrollPane);
     }
 }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/RefreshAction.java
Patch:
@@ -4,6 +4,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -14,7 +15,7 @@ public class RefreshAction extends AbstractAsynAction {
     @Override
     public void perform(AnActionEvent anActionEvent, Config config) {
 
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         ViewManager.loadServiceData(tree);
 
     }

File: src/main/java/com/shuzijun/leetcode/plugin/manager/QuestionManager.java
Patch:
@@ -246,7 +246,7 @@ private static void translation(List<Question> questions) {
             HttpPost translationPost = new HttpPost(URLUtils.getLeetcodeGraphql());
             try {
                 String body = null;
-                StringEntity entityCode = new StringEntity("{\"operationName\":\"getQuestionTranslation\",\"variables\":{},\"query\":\"query getQuestionTranslation($lang: String) {\\n  translations: allAppliedQuestionTranslations(lang: $lang) {\\n    title\\n    question {\\n      questionId\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}");
+                StringEntity entityCode = new StringEntity("{\"operationName\":\"getQuestionTranslation\",\"variables\":{},\"query\":\"query getQuestionTranslation($lang: String) {\\n  translations: allAppliedQuestionTranslations(lang: $lang) {\\n    title\\n    questionId\\n    __typename\\n  }\\n}\\n\"}");
                 translationPost.setEntity(entityCode);
                 translationPost.setHeader("Accept", "application/json");
                 translationPost.setHeader("Content-type", "application/json");
@@ -263,7 +263,7 @@ private static void translation(List<Question> questions) {
                     JSONArray jsonArray = JSONObject.parseObject(body).getJSONObject("data").getJSONArray("translations");
                     for (int i = 0; i < jsonArray.size(); i++) {
                         JSONObject object = jsonArray.getJSONObject(i);
-                        translationMap.put(object.getJSONObject("question").getString("questionId"), object.getString("title"));
+                        translationMap.put(object.getString("questionId"), object.getString("title"));
                     }
                     for (Question question : questions) {
                         if (translationMap.containsKey(question.getQuestionId())) {

File: src/main/java/com/shuzijun/leetcode/plugin/utils/URLUtils.java
Patch:
@@ -26,7 +26,7 @@ public class URLUtils {
     public static String getLeetcodeHost() {
         String host = PersistentConfig.getInstance().getConfig().getUrl();
         if (StringUtils.isBlank(host)) {
-            return "leetcode.com";
+            return leetcode;
         }
         return host;
     }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/UpdateUtils.java
Patch:
@@ -31,15 +31,15 @@ public void run() {
                     CloseableHttpClient httpClient = HttpClients.custom().build();
                     HttpGet httpget = null;
                     try {
-                        String[] version = PluginManager.getPlugin(PluginId.getId("leetcode-editor")).getVersion().split("\\.");
+                        String[] version = PluginManager.getPlugin(PluginId.getId("leetcode-editor")).getVersion().replace("v","").split("\\.|-");
                         httpget = new HttpGet("https://plugins.jetbrains.com/api/plugins/12132/updates");
                         CloseableHttpResponse response = httpClient.execute(httpget);
                         String body = EntityUtils.toString(response.getEntity(), "UTF-8");
                         JSONArray jsonArray = JSONObject.parseArray(body);
                         for (int i = 0; i < jsonArray.size(); i++) {
                             JSONObject jsonObject = jsonArray.getJSONObject(i);
                             if (jsonObject.getBoolean("approve")) {
-                                String[] nweVersion = jsonObject.getString("version").split("\\.");
+                                String[] nweVersion = jsonObject.getString("version").replace("v","").split("\\.|-");
                                 if (Integer.valueOf(version[0]) < Integer.valueOf(nweVersion[0])) {
                                     MessageUtils.showInfoMsg("info", PropertiesUtils.getInfo("updata", jsonObject.getString("version")));
                                     break;

File: src/main/java/com/shuzijun/leetcode/plugin/manager/CodeManager.java
Patch:
@@ -169,7 +169,7 @@ public static void SubmitCode(Question question) {
             arg.put("question_id", question.getQuestionId());
             arg.put("lang", question.getLangSlug());
             arg.put("typed_code", code);
-            StringEntity entity = new StringEntity(arg.toJSONString());
+            StringEntity entity = new StringEntity(arg.toJSONString(), "UTF-8");
             post.setEntity(entity);
             post.setHeader("Accept", "application/json");
             post.setHeader("Content-type", "application/json");
@@ -216,7 +216,7 @@ public static void RuncodeCode(Question question) {
             arg.put("lang", question.getLangSlug());
             arg.put("judge_type", "large");
             arg.put("typed_code", code);
-            StringEntity entity = new StringEntity(arg.toJSONString());
+            StringEntity entity = new StringEntity(arg.toJSONString(), "UTF-8");
             post.setEntity(entity);
             post.setHeader("Accept", "application/json");
             post.setHeader("Content-type", "application/json");

File: src/main/java/com/shuzijun/leetcode/plugin/manager/QuestionManager.java
Patch:
@@ -246,7 +246,7 @@ private static void translation(List<Question> questions) {
             HttpPost translationPost = new HttpPost(URLUtils.getLeetcodeGraphql());
             try {
                 String body = null;
-                StringEntity entityCode = new StringEntity("{\"operationName\":\"getQuestionTranslation\",\"variables\":{},\"query\":\"query getQuestionTranslation($lang: String) {\\n  translations: allAppliedQuestionTranslations(lang: $lang) {\\n    title\\n    question {\\n      questionId\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}");
+                StringEntity entityCode = new StringEntity("{\"operationName\":\"getQuestionTranslation\",\"variables\":{},\"query\":\"query getQuestionTranslation($lang: String) {\\n  translations: allAppliedQuestionTranslations(lang: $lang) {\\n    title\\n    questionId\\n    __typename\\n  }\\n}\\n\"}");
                 translationPost.setEntity(entityCode);
                 translationPost.setHeader("Accept", "application/json");
                 translationPost.setHeader("Content-type", "application/json");
@@ -263,7 +263,7 @@ private static void translation(List<Question> questions) {
                     JSONArray jsonArray = JSONObject.parseObject(body).getJSONObject("data").getJSONArray("translations");
                     for (int i = 0; i < jsonArray.size(); i++) {
                         JSONObject object = jsonArray.getJSONObject(i);
-                        translationMap.put(object.getJSONObject("question").getString("questionId"), object.getString("title"));
+                        translationMap.put(object.getString("questionId"), object.getString("title"));
                     }
                     for (Question question : questions) {
                         if (translationMap.containsKey(question.getQuestionId())) {

File: src/main/java/com/shuzijun/leetcode/plugin/utils/HttpClientUtils.java
Patch:
@@ -93,6 +93,7 @@ public static void setCookie(List<BasicClientCookie> cookieList) {
         if (httpclient == null) {
             createHttpClient();
         }
+        context.getCookieStore().clear();
         for (Cookie cookie : cookieList) {
             context.getCookieStore().addCookie(cookie);
         }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/URLUtils.java
Patch:
@@ -26,7 +26,7 @@ public class URLUtils {
     public static String getLeetcodeHost() {
         String host = PersistentConfig.getInstance().getConfig().getUrl();
         if (StringUtils.isBlank(host)) {
-            return "leetcode.com";
+            return leetcode;
         }
         return host;
     }

File: src/main/java/com/shuzijun/leetcode/plugin/utils/UpdateUtils.java
Patch:
@@ -31,15 +31,15 @@ public void run() {
                     CloseableHttpClient httpClient = HttpClients.custom().build();
                     HttpGet httpget = null;
                     try {
-                        String[] version = PluginManager.getPlugin(PluginId.getId("leetcode-editor")).getVersion().split("\\.");
+                        String[] version = PluginManager.getPlugin(PluginId.getId("leetcode-editor")).getVersion().replace("v","").split("\\.|-");
                         httpget = new HttpGet("https://plugins.jetbrains.com/api/plugins/12132/updates");
                         CloseableHttpResponse response = httpClient.execute(httpget);
                         String body = EntityUtils.toString(response.getEntity(), "UTF-8");
                         JSONArray jsonArray = JSONObject.parseArray(body);
                         for (int i = 0; i < jsonArray.size(); i++) {
                             JSONObject jsonObject = jsonArray.getJSONObject(i);
                             if (jsonObject.getBoolean("approve")) {
-                                String[] nweVersion = jsonObject.getString("version").split("\\.");
+                                String[] nweVersion = jsonObject.getString("version").replace("v","").split("\\.|-");
                                 if (Integer.valueOf(version[0]) < Integer.valueOf(nweVersion[0])) {
                                     MessageUtils.showInfoMsg("info", PropertiesUtils.getInfo("updata", jsonObject.getString("version")));
                                     break;

File: src/main/java/com/shuzijun/leetcode/plugin/actions/CollapseAction.java
Patch:
@@ -3,6 +3,7 @@
 import com.intellij.openapi.actionSystem.AnActionEvent;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -12,7 +13,7 @@
 public class CollapseAction extends AbstractAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent, Config config) {
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindAction.java
Patch:
@@ -3,6 +3,7 @@
 import com.intellij.openapi.actionSystem.AnActionEvent;
 import com.intellij.openapi.actionSystem.ToggleAction;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -14,7 +15,7 @@ public class FindAction extends ToggleAction {
 
     @Override
     public boolean isSelected(AnActionEvent anActionEvent) {
-        JPanel panel = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
+        JPanel panel = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
         if (panel == null) {
             return false;
         }
@@ -23,7 +24,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
 
     @Override
     public void setSelected(AnActionEvent anActionEvent, boolean b) {
-        JPanel panel = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
+        JPanel panel = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TERRFIND);
         if (panel == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindClearAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -16,7 +17,7 @@ public class FindClearAction extends AbstractAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent, Config config) {
 
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindConfigAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.intellij.openapi.actionSystem.ex.CheckboxAction;
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -21,7 +22,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
     @Override
     public void setSelected(AnActionEvent anActionEvent, boolean b) {
         ViewManager.setIntersection(b);
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/FindTagAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Tag;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 import org.jetbrains.annotations.Nullable;
 
 import javax.swing.*;
@@ -29,7 +30,7 @@ public boolean isSelected(AnActionEvent anActionEvent) {
     @Override
     public void setSelected(AnActionEvent anActionEvent, boolean b) {
         tag.setSelect(b);
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/PickAction.java
Patch:
@@ -5,6 +5,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -14,12 +15,11 @@
 public class PickAction extends AbstractAction {
     @Override
     public void actionPerformed(AnActionEvent anActionEvent, Config config) {
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         if (tree == null) {
             return;
         }
-        JBScrollPane scrollPane = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_SCROLL);
-
+        JBScrollPane scrollPane = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_SCROLL);
         ViewManager.pick(tree, scrollPane);
     }
 }

File: src/main/java/com/shuzijun/leetcode/plugin/actions/RefreshAction.java
Patch:
@@ -4,6 +4,7 @@
 import com.shuzijun.leetcode.plugin.manager.ViewManager;
 import com.shuzijun.leetcode.plugin.model.Config;
 import com.shuzijun.leetcode.plugin.utils.DataKeys;
+import com.shuzijun.leetcode.plugin.window.WindowFactory;
 
 import javax.swing.*;
 
@@ -14,7 +15,7 @@ public class RefreshAction extends AbstractAsynAction {
     @Override
     public void perform(AnActionEvent anActionEvent, Config config) {
 
-        JTree tree = anActionEvent.getData(DataKeys.LEETCODE_PROJECTS_TREE);
+        JTree tree = WindowFactory.getDataContext(anActionEvent.getProject()).getData(DataKeys.LEETCODE_PROJECTS_TREE);
         ViewManager.loadServiceData(tree);
 
     }

File: src/com/shuzijun/leetcode/plugin/actions/LoginAction.java
Patch:
@@ -48,7 +48,7 @@ public void perform(AnActionEvent anActionEvent, Config config) {
             }
         }
 
-        if (StringUtils.isBlank(config.getLoginName()) || StringUtils.isBlank(config.getLoginName())) {
+        if (StringUtils.isBlank(config.getLoginName()) || StringUtils.isBlank(PersistentConfig.getInstance().getPassword())) {
             MessageUtils.showWarnMsg("info", PropertiesUtils.getInfo("config.user"));
             return;
         }

File: src/com/shuzijun/leetcode/plugin/actions/LoginAction.java
Patch:
@@ -48,7 +48,7 @@ public void perform(AnActionEvent anActionEvent, Config config) {
             }
         }
 
-        if (StringUtils.isBlank(config.getLoginName()) || StringUtils.isBlank(config.getLoginName())) {
+        if (StringUtils.isBlank(config.getLoginName()) || StringUtils.isBlank(PersistentConfig.getInstance().getPassword())) {
             MessageUtils.showWarnMsg("info", PropertiesUtils.getInfo("config.user"));
             return;
         }

File: src/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -190,7 +190,9 @@ public static void pick(JTree tree, JBScrollPane scrollPane) {
     private static void addChild(DefaultMutableTreeNode rootNode, List<Tag> Lists, Map<String, Question> questionMap) {
         if (!Lists.isEmpty()) {
             for (Tag tag : Lists) {
-                DefaultMutableTreeNode tagNode = new DefaultMutableTreeNode(new Question(tag.getName()));
+                long qCnt = tag.getQuestions().stream().filter(q -> questionMap.get(q) != null).count();
+                DefaultMutableTreeNode tagNode = new DefaultMutableTreeNode(new Question(String.format("%s(%d)",
+                    tag.getName(), qCnt)));
                 rootNode.add(tagNode);
                 for (String key : tag.getQuestions()) {
                     if (questionMap.get(key) != null) {

File: src/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -190,7 +190,9 @@ public static void pick(JTree tree, JBScrollPane scrollPane) {
     private static void addChild(DefaultMutableTreeNode rootNode, List<Tag> Lists, Map<String, Question> questionMap) {
         if (!Lists.isEmpty()) {
             for (Tag tag : Lists) {
-                DefaultMutableTreeNode tagNode = new DefaultMutableTreeNode(new Question(tag.getName()));
+                long qCnt = tag.getQuestions().stream().filter(q -> questionMap.get(q) != null).count();
+                DefaultMutableTreeNode tagNode = new DefaultMutableTreeNode(new Question(String.format("%s(%d)",
+                    tag.getName(), qCnt)));
                 rootNode.add(tagNode);
                 for (String key : tag.getQuestions()) {
                     if (questionMap.get(key) != null) {

File: src/com/shuzijun/leetcode/plugin/manager/QuestionManager.java
Patch:
@@ -193,7 +193,7 @@ private static List<Question> parseQuestion(String str) {
 
         if (StringUtils.isNotBlank(str)) {
             JSONObject jsonObject = JSONObject.parseObject(str);
-            Boolean isPremium = new Integer("1").equals(jsonObject.getInteger("frequency_high")); //Premium users display frequency
+            Boolean isPremium = new Integer("0").equals(jsonObject.getInteger("frequency_high")); //Premium users display frequency
             JSONArray jsonArray = jsonObject.getJSONArray("stat_status_pairs");
             for (int i = 0; i < jsonArray.size(); i++) {
                 JSONObject object = jsonArray.getJSONObject(i);
@@ -202,7 +202,7 @@ private static List<Question> parseQuestion(String str) {
                 question.setQuestionId(object.getJSONObject("stat").getString("question_id"));
                 question.setFrontendQuestionId(object.getJSONObject("stat").getString("frontend_question_id"));
                 try {
-                    if(object.getBoolean("paid_only") && !isPremium){
+                    if(object.getBoolean("paid_only") && isPremium){
                         question.setStatus(object.getBoolean("paid_only") ? "lock" : null);
                     }else {
                         question.setStatus(object.get("status") == null ? "" : object.getString("status"));

File: src/com/shuzijun/leetcode/plugin/actions/LoginAction.java
Patch:
@@ -28,7 +28,7 @@ public class LoginAction extends AbstractAsynAction {
     public void perform(AnActionEvent anActionEvent, Config config) {
 
         if (StringUtils.isBlank(HttpClientUtils.getToken())) {
-            HttpGet httpget = new HttpGet(URLUtils.getLeetcodeUrl());
+            HttpGet httpget = new HttpGet(URLUtils.getLeetcodeVerify());
             CloseableHttpResponse response = HttpClientUtils.executeGet(httpget);
             httpget.abort();
             if (response == null) {

File: src/com/shuzijun/leetcode/plugin/utils/HttpClientUtils.java
Patch:
@@ -176,6 +176,7 @@ public static void resetHttpclient() {
                 e.printStackTrace();
             } finally {
                 httpclient = null;
+                context = null;
             }
         }
     }

File: src/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -56,7 +56,7 @@ public String apply(Question question) {
         DefaultTreeModel treeMode = (DefaultTreeModel) tree.getModel();
         DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeMode.getRoot();
         root.removeAllChildren();
-        DefaultMutableTreeNode node = new DefaultMutableTreeNode(new Question("Problems"));
+        DefaultMutableTreeNode node = new DefaultMutableTreeNode(new Question(String.format("Problems(%d)",questionList.size())));
         root.add(node);
         for (Question q : questionList) {
             node.add(new DefaultMutableTreeNode(q));
@@ -151,13 +151,15 @@ public int compare(String arg0, String arg1) {
             for (Question q : question.values()) {
                 node.add(new DefaultMutableTreeNode(q));
             }
+            ((Question)node.getUserObject()).setTitle(String.format("Problems(%d)",node.getChildCount()));
         } else {
             for (String key : selectQuestionList) {
                 Question q = question.get(key);
                 if (q != null) {
                     node.add(new DefaultMutableTreeNode(q));
                 }
             }
+            ((Question)node.getUserObject()).setTitle(String.format("Problems(%d)",node.getChildCount()));
         }
         treeMode.reload();
         tree.expandPath(new TreePath(node.getPath()));

File: src/com/shuzijun/leetcode/plugin/manager/ViewManager.java
Patch:
@@ -56,7 +56,7 @@ public String apply(Question question) {
         DefaultTreeModel treeMode = (DefaultTreeModel) tree.getModel();
         DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeMode.getRoot();
         root.removeAllChildren();
-        DefaultMutableTreeNode node = new DefaultMutableTreeNode(new Question("Problems"));
+        DefaultMutableTreeNode node = new DefaultMutableTreeNode(new Question(String.format("Problems(%d)",questionList.size())));
         root.add(node);
         for (Question q : questionList) {
             node.add(new DefaultMutableTreeNode(q));
@@ -151,13 +151,15 @@ public int compare(String arg0, String arg1) {
             for (Question q : question.values()) {
                 node.add(new DefaultMutableTreeNode(q));
             }
+            ((Question)node.getUserObject()).setTitle(String.format("Problems(%d)",node.getChildCount()));
         } else {
             for (String key : selectQuestionList) {
                 Question q = question.get(key);
                 if (q != null) {
                     node.add(new DefaultMutableTreeNode(q));
                 }
             }
+            ((Question)node.getUserObject()).setTitle(String.format("Problems(%d)",node.getChildCount()));
         }
         treeMode.reload();
         tree.expandPath(new TreePath(node.getPath()));

File: src/com/shuzijun/leetcode/plugin/manager/SubmissionManager.java
Patch:
@@ -84,7 +84,7 @@ public static void openSubmission(Submission submission, Question question, Proj
             MessageUtils.showWarnMsg("info", PropertiesUtils.getInfo("login.not"));
             return;
         }
-        CodeTypeEnum codeTypeEnum = CodeTypeEnum.getCodeTypeEnum(submission.getLang());
+        CodeTypeEnum codeTypeEnum = CodeTypeEnum.getCodeTypeEnumByLangSlug(submission.getLang());
         String filePath = PersistentConfig.getInstance().getTempFilePath() + question.getTitle() + submission.getId() + codeTypeEnum.getSuffix();
 
         File file = new File(filePath);

File: src/com/shuzijun/leetcode/plugin/listener/QueryKeyListener.java
Patch:
@@ -79,7 +79,7 @@ public void keyPressed(KeyEvent e) {
                     continue;
                 }
                 DefaultMutableTreeNode temp = (DefaultMutableTreeNode) all.getChildAt(i);
-                if (temp.getUserObject().toString().contains(selectText)) {
+                if (temp.getUserObject().toString().toUpperCase().contains(selectText.toUpperCase())) {
                     tree.setSelectionPath(new TreePath(temp.getPath()));
                     Point point = new Point(0, i < 3 ? 0 : (i - 3) * tree.getRowHeight());
                     viewport.setViewPosition(point);

File: src/com/shuzijun/leetcode/plugin/manager/QuestionManager.java
Patch:
@@ -120,6 +120,7 @@ private static List<Question> parseQuestion(String str) {
                 Question question = new Question(object.getJSONObject("stat").getString("question__title"));
                 question.setLeaf(Boolean.TRUE);
                 question.setQuestionId(object.getJSONObject("stat").getString("question_id"));
+                question.setFrontendQuestionId(object.getJSONObject("stat").getString("frontend_question_id"));
                 try {
                     question.setStatus(object.get("status") == null ? "" : object.getString("status"));
                 } catch (Exception ee) {
@@ -134,7 +135,7 @@ private static List<Question> parseQuestion(String str) {
 
             Collections.sort(questionList, new Comparator<Question>() {
                 public int compare(Question arg0, Question arg1) {
-                    return Integer.valueOf(arg0.getQuestionId()).compareTo(Integer.valueOf(arg1.getQuestionId()));
+                    return Integer.valueOf(arg0.getFrontendQuestionId()).compareTo(Integer.valueOf(arg1.getFrontendQuestionId()));
                 }
             });
         }

