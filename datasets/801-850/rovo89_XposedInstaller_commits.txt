File: app/src/main/java/de/robv/android/xposed/installer/installation/StatusInstallerFragment.java
Patch:
@@ -252,12 +252,12 @@ private void refreshKnownIssue(View v) {
         } else if (Build.VERSION.SDK_INT < 24 && !baseDir.equals(new File(appInfo.dataDir))) {
             Log.e(XposedApp.TAG, "Base directory: " + appInfo.dataDir);
             Log.e(XposedApp.TAG, "Expected: " + XposedApp.BASE_DIR);
-            issueName = getString(R.string.known_issue_wrong_base_directory);
+            issueName = getString(R.string.known_issue_wrong_base_directory, appInfo.dataDir);
             issueLink = "https://github.com/rovo89/XposedInstaller/issues/395";
         } else if (Build.VERSION.SDK_INT >= 24 && !baseDir.equals(new File(appInfo.deviceProtectedDataDir))) {
             Log.e(XposedApp.TAG, "Base directory: " + appInfo.deviceProtectedDataDir);
             Log.e(XposedApp.TAG, "Expected: " + XposedApp.BASE_DIR);
-            issueName = getString(R.string.known_issue_wrong_base_directory);
+            issueName = getString(R.string.known_issue_wrong_base_directory, appInfo.deviceProtectedDataDir);
             issueLink = "https://github.com/rovo89/XposedInstaller/issues/395";
         } else if (!baseDir.exists()) {
             issueName = getString(R.string.known_issue_missing_base_directory);

File: app/src/main/java/de/robv/android/xposed/installer/installation/StatusInstallerFragment.java
Patch:
@@ -233,9 +233,10 @@ private void refreshKnownIssue(View v) {
         final String issueLink;
         final File baseDir = new File(XposedApp.BASE_DIR);
         final ApplicationInfo appInfo = getActivity().getApplicationInfo();
-        final Set<String> missingFeatures = XposedApp.getXposedProp().getMissingInstallerFeatures();
+        final InstallZipUtil.XposedProp prop = XposedApp.getXposedProp();
+        final Set<String> missingFeatures = prop != null ? prop.getMissingInstallerFeatures() : null;
 
-        if (!missingFeatures.isEmpty()) {
+        if (missingFeatures != null && !missingFeatures.isEmpty()) {
             InstallZipUtil.reportMissingFeatures(missingFeatures);
             issueName = getString(R.string.installer_needs_update, getString(R.string.app_name));
             issueLink = getString(R.string.about_support);

File: app/src/main/java/de/robv/android/xposed/installer/LogsFragment.java
Patch:
@@ -222,7 +222,7 @@ private File save() {
                 now.get(Calendar.DAY_OF_MONTH), now.get(Calendar.HOUR_OF_DAY),
                 now.get(Calendar.MINUTE), now.get(Calendar.SECOND));
 
-        File dir =  getActivity().getExternalFilesDir(null);
+        File dir = getActivity().getExternalFilesDir(null);
 
         if (!dir.exists()) dir.mkdir();
 
@@ -313,7 +313,7 @@ protected String doInBackground(File... log) {
         @Override
         protected void onPostExecute(String llog) {
             mProgressDialog.dismiss();
-            mTxtLog.append(llog);
+            mTxtLog.setText(llog);
 
             if (llog.length() == 0)
                 mTxtLog.setText(R.string.log_is_empty);

File: app/src/main/java/de/robv/android/xposed/installer/util/NotificationUtil.java
Patch:
@@ -22,6 +22,7 @@ public final class NotificationUtil {
     private static final int PENDING_INTENT_SOFT_REBOOT = 2;
     private static final int PENDING_INTENT_REBOOT = 3;
     private static final int PENDING_INTENT_ACTIVATE_MODULE_AND_REBOOT = 4;
+    private static final int PENDING_INTENT_ACTIVATE_MODULE = 5;
     private static Context sContext = null;
     private static NotificationManager sNotificationManager;
 
@@ -70,7 +71,7 @@ public static void showNotActivatedNotification(String packageName,
         iActivate.putExtra(RebootReceiver.EXTRA_ACTIVATE_MODULE, packageName);
         iActivate.putExtra(RebootReceiver.EXTRA_ACTIVATE_MODULE_AND_RETURN, true);
         PendingIntent pActivate = PendingIntent.getBroadcast(sContext,
-                PENDING_INTENT_ACTIVATE_MODULE_AND_REBOOT, iActivate,
+                PENDING_INTENT_ACTIVATE_MODULE, iActivate,
                 PendingIntent.FLAG_UPDATE_CURRENT);
 
         NotificationCompat.BigTextStyle notiStyle = new NotificationCompat.BigTextStyle();

File: app/src/main/java/de/robv/android/xposed/installer/util/DownloadsUtil.java
Patch:
@@ -122,7 +122,7 @@ public static File[] getDownloadDirs(String subDir) {
         Context context = XposedApp.getInstance();
         ArrayList<File> dirs = new ArrayList<>(2);
         for (File dir :  ContextCompat.getExternalCacheDirs(context)) {
-            if (Environment.MEDIA_MOUNTED.equals(EnvironmentCompat.getStorageState(dir))) {
+            if (dir != null && EnvironmentCompat.getStorageState(dir).equals(Environment.MEDIA_MOUNTED)) {
                 dirs.add(new File(new File(dir, "downloads"), subDir));
             }
         }

File: app/src/main/java/de/robv/android/xposed/installer/util/RepoLoader.java
Patch:
@@ -56,8 +56,6 @@ private RepoLoader() {
         mPrefKeyLastUpdateCheck = "last_update_check";
         mModulePref = sApp.getSharedPreferences("module_settings", Context.MODE_PRIVATE);
         mGlobalReleaseType = ReleaseType.fromString(XposedApp.getPreferences().getString("release_type_global", "stable"));
-
-        RepoDb.init(sApp, this);
         refreshRepositories();
     }
 

File: app/src/main/java/de/robv/android/xposed/installer/LogsFragment.java
Patch:
@@ -277,7 +277,7 @@ private long skipLargeFile(BufferedReader is, long length) throws IOException {
 
         @Override
         protected void onPreExecute() {
-            mProgressDialog = new MaterialDialog.Builder(getContext()).content(R.string.loading).progress(true, 0).show();
+            mProgressDialog = new MaterialDialog.Builder(getActivity()).content(R.string.loading).progress(true, 0).show();
         }
 
         @Override

File: app/src/main/java/de/robv/android/xposed/installer/ModulesFragment.java
Patch:
@@ -15,6 +15,7 @@
 import android.os.Environment;
 import android.os.Handler;
 import android.support.annotation.NonNull;
+import android.support.v13.app.FragmentCompat;
 import android.support.v4.app.ActivityCompat;
 import android.support.v7.app.ActionBar;
 import android.util.DisplayMetrics;
@@ -285,7 +286,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     private boolean checkPermissions() {
         if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
-            requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_EXTERNAL_PERMISSION);
+            FragmentCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_EXTERNAL_PERMISSION);
             return true;
         }
         return false;

File: app/src/main/java/de/robv/android/xposed/installer/widget/DownloadView.java
Patch:
@@ -5,6 +5,7 @@
 import android.app.Fragment;
 import android.content.Context;
 import android.content.pm.PackageManager;
+import android.support.v13.app.FragmentCompat;
 import android.support.v4.app.ActivityCompat;
 import android.util.AttributeSet;
 import android.view.LayoutInflater;
@@ -175,7 +176,7 @@ public void onClick(View v) {
     private boolean checkPermissions() {
         if (ActivityCompat.checkSelfPermission(this.getContext(),
                 Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
-            fragment.requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_EXTERNAL_PERMISSION);
+            FragmentCompat.requestPermissions(fragment, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_EXTERNAL_PERMISSION);
             return true;
         }
         return false;

File: app/src/main/java/de/robv/android/xposed/installer/installation/InstallDirect.java
Patch:
@@ -23,8 +23,7 @@ public static void install(String zipPath, InstallCallback callback, boolean sys
         try {
             zip = new ZipFile(zipPath);
         } catch (IOException e) {
-            Log.e(XposedApp.TAG, "Could not open ZIP file", e);
-            triggerError(callback, InstallCallback.ERROR_INVALID_ZIP);
+            triggerError(callback, InstallCallback.ERROR_INVALID_ZIP, e.getLocalizedMessage());
             return;
         }
 

File: app/src/main/java/de/robv/android/xposed/installer/ModulesFragment.java
Patch:
@@ -58,6 +58,7 @@
 import java.util.Map;
 import java.util.Set;
 
+import de.robv.android.xposed.installer.installation.StatusInstallerFragment;
 import de.robv.android.xposed.installer.repo.Module;
 import de.robv.android.xposed.installer.repo.ModuleVersion;
 import de.robv.android.xposed.installer.repo.ReleaseType;
@@ -129,7 +130,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
                 addHeader();
             }
         } else {
-            if (InstallerFragment.DISABLE_FILE.exists()) installedXposedVersion = -1;
+            if (StatusInstallerFragment.DISABLE_FILE.exists()) installedXposedVersion = -1;
             if (installedXposedVersion <= 0) {
                 addHeader();
             }
@@ -307,7 +308,7 @@ private boolean importModules(File path) {
         try {
             ips = new FileInputStream(path);
         } catch (FileNotFoundException e) {
-            Log.e(XposedApp.TAG, "InstallerFragment -> " + e.getMessage());
+            Log.e(XposedApp.TAG, "ModulesFragment -> " + e.getMessage());
         }
 
         if (path.length() == 0) {

File: app/src/main/java/de/robv/android/xposed/installer/WelcomeActivity.java
Patch:
@@ -20,7 +20,7 @@
 import android.view.animation.Transformation;
 import android.widget.LinearLayout;
 
-import de.robv.android.xposed.installer.advanced.AdvancedInstallerFragment;
+import de.robv.android.xposed.installer.installation.AdvancedInstallerFragment;
 import de.robv.android.xposed.installer.util.ModuleUtil;
 import de.robv.android.xposed.installer.util.ModuleUtil.InstalledModule;
 import de.robv.android.xposed.installer.util.ModuleUtil.ModuleListener;

File: app/src/main/java/de/robv/android/xposed/installer/repo/RepoParser.java
Patch:
@@ -333,8 +333,7 @@ protected void onPostExecute(final Bitmap bitmap) {
                 levelListDrawable.setBounds(0, 0, bitmap.getWidth() * multiplier, bitmap.getHeight() * multiplier);
                 levelListDrawable.setLevel(1);
                 t.setText(t.getText());
-            } catch (Exception e) { /* Like a null bitmap, etc. */
-                Log.d(TAG, e.getMessage());
+            } catch (Exception ignored) { /* Like a null bitmap, etc. */
             }
         }
     }

File: app/src/main/java/de/robv/android/xposed/installer/util/UpdateService.java
Patch:
@@ -70,7 +70,7 @@ private boolean isOnline() {
     public void onDestroy() {
         super.onDestroy();
 
-        mTimer.cancel();
-        mTask.cancel();
+        if (mTimer != null) mTimer.cancel();
+        if (mTask != null) mTask.cancel();
     }
 }

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -484,7 +484,7 @@ private String getUIFramework() {
         if (Build.MANUFACTURER.equalsIgnoreCase("samsung") && new File("/system/framework/twframework.jar").exists()) {
             return "Samsung TouchWiz";
         }
-        if (Build.MANUFACTURER.equalsIgnoreCase("xioami") && new File("/system/framework/framework-miui-res.apk").exists()) {
+        if (Build.MANUFACTURER.equalsIgnoreCase("xiaomi") && new File("/system/framework/framework-miui-res.apk").exists()) {
             return "Xiaomi MIUI";
         }
         return ui;

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -403,7 +403,7 @@ public void onPositive(MaterialDialog dialog) {
                         @Override
                         public void onPositive(MaterialDialog dialog) {
                             super.onPositive(dialog);
-                            reboot(null);
+                            softReboot();
                         }
                     });
                 } else {

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -770,7 +770,6 @@ public void onDownloadFinished(final Context context, final DownloadsUtil.Downlo
             @Override
             public void onPositive(MaterialDialog dialog) {
                 super.onPositive(dialog);
-                Toast.makeText(context, R.string.selectFile, Toast.LENGTH_LONG).show();
 
                 if (!startShell()) return;
 

File: app/src/main/java/de/robv/android/xposed/installer/LogsFragment.java
Patch:
@@ -204,12 +204,11 @@ private File save() {
                 now.get(Calendar.DAY_OF_MONTH), now.get(Calendar.HOUR_OF_DAY),
                 now.get(Calendar.MINUTE), now.get(Calendar.SECOND));
 
-        String path = Environment.getExternalStorageDirectory() + "/XposedInstaller";
-        File dir = new File(path);
+        File dir =  getActivity().getExternalFilesDir(null);
 
         if (!dir.exists()) dir.mkdir();
 
-        File targetFile = new File(path, filename);
+        File targetFile = new File(dir, filename);
 
         try {
             FileInputStream in = new FileInputStream(mFileErrorLog);

File: app/src/main/java/de/robv/android/xposed/installer/ModulesFragment.java
Patch:
@@ -299,7 +299,7 @@ private boolean importModules(File path) {
         try {
             ips = new FileInputStream(path);
         } catch (FileNotFoundException e) {
-            Log.e(XposedApp.TAG, "InstallerFragment:302 -> " + e.getMessage());
+            Log.e(XposedApp.TAG, "InstallerFragment -> " + e.getMessage());
         }
 
         if (path.length() == 0) {

File: app/src/main/java/de/robv/android/xposed/installer/util/ModuleUtil.java
Patch:
@@ -207,7 +207,7 @@ public List<InstalledModule> getEnabledModules() {
 
     public synchronized void updateModulesList(boolean showToast) {
         try {
-            Log.i(XposedApp.TAG, "ModuleUtil:210 -> updating modules.list");
+            Log.i(XposedApp.TAG, "ModuleUtil -> updating modules.list");
             int installedXposedVersion = XposedApp.getXposedVersion();
             if (installedXposedVersion <= 0) {
                 Toast.makeText(mApp, "The Xposed framework is not installed", Toast.LENGTH_SHORT).show();
@@ -237,7 +237,7 @@ public synchronized void updateModulesList(boolean showToast) {
             if (showToast)
                 showToast(R.string.xposed_module_list_updated);
         } catch (IOException e) {
-            Log.e(XposedApp.TAG, "ModuleUtil:240 -> cannot write " + MODULES_LIST_FILE, e);
+            Log.e(XposedApp.TAG, "ModuleUtil -> cannot write " + MODULES_LIST_FILE, e);
             Toast.makeText(mApp, "cannot write " + MODULES_LIST_FILE + e, Toast.LENGTH_SHORT).show();
         }
     }

File: app/src/main/java/de/robv/android/xposed/installer/util/NotificationUtil.java
Patch:
@@ -159,7 +159,7 @@ public void onReceive(Context context, Intent intent) {
 
             RootUtil rootUtil = new RootUtil();
             if (!rootUtil.startShell()) {
-                Log.e(XposedApp.TAG, "NotificationUtil:162 -> Could not start root shell");
+                Log.e(XposedApp.TAG, "NotificationUtil -> Could not start root shell");
                 return;
             }
 
@@ -171,7 +171,7 @@ public void onReceive(Context context, Intent intent) {
                     : rootUtil.executeWithBusybox("reboot", messages);
 
             if (returnCode != 0) {
-                Log.e(XposedApp.TAG, "NotificationUtil:174 -> Could not reboot:");
+                Log.e(XposedApp.TAG, "NotificationUtil -> Could not reboot:");
                 for (String line : messages) {
                     Log.e(XposedApp.TAG, line);
                 }

File: app/src/main/java/de/robv/android/xposed/installer/util/RepoLoader.java
Patch:
@@ -302,7 +302,7 @@ private boolean downloadAndParseFiles(List<String> messages) {
                     cacheFile);
 
             Log.i(XposedApp.TAG, String.format(
-                    "RepoLoader:305 -> Downloaded %s with status %d (error: %s), size %d bytes",
+                    "RepoLoader -> Downloaded %s with status %d (error: %s), size %d bytes",
                     url, info.status, info.errorMessage, cacheFile.length()));
 
             if (info.status != SyncDownloadInfo.STATUS_SUCCESS) {
@@ -354,7 +354,7 @@ public void onCompleted(Repository repository) {
                         }
 
                         Log.i(XposedApp.TAG, String.format(
-                                "RepoLoader:357 -> Updated repository %s to version %s (%d new / %d removed modules)",
+                                "RepoLoader -> Updated repository %s to version %s (%d new / %d removed modules)",
                                 repo.url, repo.version, insertCounter.get(),
                                 deleteCounter.get()));
                     }
@@ -363,7 +363,7 @@ public void onCompleted(Repository repository) {
                 RepoDb.setTransactionSuccessful();
 
             } catch (Throwable t) {
-                Log.e(XposedApp.TAG, "RepoLoader:366 -> Cannot load repository from " + url, t);
+                Log.e(XposedApp.TAG, "RepoLoader -> Cannot load repository from " + url, t);
                 messages.add(mApp.getString(R.string.repo_load_failed, url,
                         t.getMessage()));
                 DownloadsUtil.clearCache(url);

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -319,7 +319,7 @@ public void onClick(View v) {
                 if (checkPermissions())
                     return;
 
-                new File(Environment.getExternalStoragePublicDirectory("XposedInstaller") + "/XposedInstaller_by_dvdandroid.apk").delete();
+                new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/XposedInstaller/XposedInstaller_by_dvdandroid.apk").delete();
 
                 DownloadsUtil.add(getContext(), "XposedInstaller_by_dvdandroid", newApkLink, new DownloadsUtil.DownloadFinishedCallback() {
                     @Override

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -50,7 +50,7 @@ public class XposedApp extends Application implements ActivityLifecycleCallbacks
     public static final File XPOSED_PROP_FILE_SYSTEMLESS = new File("/su/xposed.prop");
     private static final File XPOSED_PROP_FILE = new File("/system/xposed.prop");
     public static int WRITE_EXTERNAL_PERMISSION = 69;
-    public static String THIS_APK_VERSION = "1464854400000";
+    public static String THIS_APK_VERSION = "1464854400001";
     public static int[] iconsValues = new int[]{R.mipmap.ic_launcher, R.mipmap.ic_launcher_hjmodi, R.mipmap.ic_launcher_rovo, R.mipmap.ic_launcher_rovo_old, R.mipmap.ic_launcher_staol};
     private static Pattern PATTERN_APP_PROCESS_VERSION = Pattern.compile(".*with Xposed support \\(version (.+)\\).*");
     private static XposedApp mInstance = null;

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -319,7 +319,7 @@ public void onClick(View v) {
                 if (checkPermissions())
                     return;
 
-                new File(Environment.getExternalStoragePublicDirectory("XposedInstaller") + "XposedInstaller_by_dvdandroid.apk").delete();
+                new File(Environment.getExternalStoragePublicDirectory("XposedInstaller") + "/XposedInstaller_by_dvdandroid.apk").delete();
 
                 DownloadsUtil.add(getContext(), "XposedInstaller_by_dvdandroid", newApkLink, new DownloadsUtil.DownloadFinishedCallback() {
                     @Override

File: app/src/main/java/de/robv/android/xposed/installer/XposedBaseActivity.java
Patch:
@@ -19,9 +19,8 @@ protected void onCreate(Bundle savedInstanceBundle) {
 	@Override
 	protected void onResume() {
 		super.onResume();
-		XposedApp.setColors(getSupportActionBar(), XposedApp.getColor(this),
-				this);
-		ThemeUtil.reloadTheme(this);
+        XposedApp.setColors(getSupportActionBar(), XposedApp.getColor(this), this);
+        ThemeUtil.reloadTheme(this);
 
 		if (leftActivityWithSlideAnim)
 			NavUtil.setTransitionSlideLeave(this);

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -1029,7 +1029,7 @@ protected void onPostExecute(Boolean result) {
 				if (arch.contains("64")) {
 					archPos = 1;
 				} else if (arch.contains("86")) {
-					archPos = 2;
+					archPos = Build.VERSION.SDK_INT > 19 ? 2 : 0;
 				}
 
 				mInstallersChooser

File: app/src/main/java/de/robv/android/xposed/installer/WelcomeActivity.java
Patch:
@@ -48,6 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {
 		setSupportActionBar(mToolbar);
 
 		mNavigationView = (NavigationView) findViewById(R.id.navigation_view);
+		assert mNavigationView != null;
 		mNavigationView.setNavigationItemSelectedListener(this);
 
 		ActionBarDrawerToggle mDrawerToggle = new ActionBarDrawerToggle(this,
@@ -128,6 +129,7 @@ private void navigate(final int itemId) {
 				break;
 			case R.id.drawer_item_2:
 				mPrevSelectedId = itemId;
+				setTitle(R.string.nav_item_modules);
 				navFragment = new ModulesFragment();
 				break;
 			case R.id.drawer_item_3:

File: app/src/main/java/de/robv/android/xposed/installer/WelcomeActivity.java
Patch:
@@ -78,7 +78,8 @@ public void run() {
 
 		Bundle extras = getIntent().getExtras();
 		if (extras != null) {
-			int value = extras.getInt("fragment");
+			int value = extras.getInt("fragment",
+					prefs.getInt("default_view", 0));
 			switchFragment(value);
 		}
 

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1454853600000";
+	public static String THIS_APK_VERSION = "1454875200000";
 	public static int[] iconsValues = new int[] { R.mipmap.ic_launcher,
 			R.mipmap.ic_launcher_hjmodi, R.mipmap.ic_launcher_rovo,
 			R.mipmap.ic_launcher_rovo_old, R.mipmap.ic_launcher_staol };

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1452888000000";
+	public static String THIS_APK_VERSION = "1454853600000";
 	public static int[] iconsValues = new int[] { R.mipmap.ic_launcher,
 			R.mipmap.ic_launcher_hjmodi, R.mipmap.ic_launcher_rovo,
 			R.mipmap.ic_launcher_rovo_old, R.mipmap.ic_launcher_staol };

File: app/src/main/java/de/robv/android/xposed/installer/LogsFragment.java
Patch:
@@ -239,7 +239,7 @@ private long skipLargeFile(BufferedReader is, long length)
 		@Override
 		protected void onPreExecute() {
 			mProgressDialog = new MaterialDialog.Builder(getContext())
-					.content("loading").progress(true, 0).show();
+					.content(R.string.loading).progress(true, 0).show();
 		}
 
 		@Override

File: app/src/main/java/de/robv/android/xposed/installer/ModulesFragment.java
Patch:
@@ -363,7 +363,7 @@ public void onDownloadFinished(Context context,
 								new InstallApkUtil(getContext(), info)
 										.execute();
 							}
-						}, DownloadsUtil.MIME_TYPES.APK, false);
+						}, DownloadsUtil.MIME_TYPES.APK);
 			}
 		}
 

File: app/src/main/java/de/robv/android/xposed/installer/widget/DownloadView.java
Patch:
@@ -107,7 +107,7 @@ public DownloadView(Context context, final AttributeSet attrs) {
 			@Override
 			public void onClick(View v) {
 				mInfo = DownloadsUtil.add(getContext(), mTitle, mUrl, mCallback,
-						DownloadsUtil.MIME_TYPES.APK, false);
+						DownloadsUtil.MIME_TYPES.APK);
 				refreshViewFromUiThread();
 
 				if (mInfo != null)

File: app/src/main/java/de/robv/android/xposed/installer/util/ModuleUtil.java
Patch:
@@ -212,7 +212,7 @@ public List<InstalledModule> getEnabledModules() {
 	public synchronized void updateModulesList(boolean showToast) {
 		try {
 			Log.i(XposedApp.TAG, "updating modules.list");
-			int installedXposedVersion = XposedApp.getActiveXposedVersion();
+			int installedXposedVersion = XposedApp.getXposedVersion();
 			if (installedXposedVersion <= 0) {
 				Toast.makeText(mApp, "The Xposed framework is not installed",
 						Toast.LENGTH_SHORT).show();

File: app/src/main/java/de/robv/android/xposed/installer/AboutActivity.java
Patch:
@@ -22,6 +22,7 @@
 import static de.robv.android.xposed.installer.XposedApp.darkenColor;
 
 public class AboutActivity extends XposedBaseActivity {
+
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);

File: app/src/main/java/de/robv/android/xposed/installer/repo/ModuleVersion.java
Patch:
@@ -6,7 +6,6 @@ public class ModuleVersion {
 	public int code;
 	public String downloadLink;
 	public String md5sum;
-	public long size;
 	public String changelog;
 	public boolean changelogIsHtml = false;
 	public ReleaseType relType = ReleaseType.STABLE;

File: app/src/main/java/de/robv/android/xposed/installer/repo/RepoDbDefinitions.java
Patch:
@@ -40,7 +40,6 @@ public class RepoDbDefinitions {
 			+ ModuleVersionsColumns.CODE + " INTEGER NOT NULL, "
 			+ ModuleVersionsColumns.DOWNLOAD_LINK + " TEXT, "
 			+ ModuleVersionsColumns.MD5SUM + " TEXT, "
-			+ ModuleVersionsColumns.SIZE + " INTEGER NOT NULL, "
 			+ ModuleVersionsColumns.CHANGELOG + " TEXT, "
 			+ ModuleVersionsColumns.CHANGELOG_IS_HTML + " INTEGER DEFAULT 0, "
 			+ ModuleVersionsColumns.RELTYPE + " INTEGER DEFAULT 0, "
@@ -111,7 +110,6 @@ public interface ModulesColumns extends BaseColumns {
 		String SUPPORT = "support";
 		String CREATED = "created";
 		String UPDATED = "updated";
-		String SIZE = "size";
 
 		String PREFERRED = "preferred";
 		String LATEST_VERSION = "latest_version_id";
@@ -127,7 +125,6 @@ public interface ModuleVersionsColumns extends BaseColumns {
 		String CODE = "code";
 		String DOWNLOAD_LINK = "download_link";
 		String MD5SUM = "md5sum";
-		String SIZE = "size";
 		String CHANGELOG = "changelog";
 		String CHANGELOG_IS_HTML = "changelog_is_html";
 		String RELTYPE = "reltype";

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -49,7 +49,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451830500000";
+	public static String THIS_APK_VERSION = "1451899500000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/util/ModuleUtil.java
Patch:
@@ -246,7 +246,7 @@ public synchronized void updateModulesList(boolean showToast) {
 						Toast.LENGTH_SHORT).show();
 		} catch (IOException e) {
 			Log.e(XposedApp.TAG, "cannot write " + MODULES_LIST_FILE, e);
-			Toast.makeText(mApp, "cannot write " + MODULES_LIST_FILE,
+			Toast.makeText(mApp, "cannot write " + MODULES_LIST_FILE + e,
 					Toast.LENGTH_SHORT).show();
 		}
 	}

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -895,7 +895,7 @@ protected Boolean doInBackground(Void... params) {
 							architecture, sdk, version));
 				}
 
-				if (Build.VERSION.SDK_INT > 21) {
+				if (Build.VERSION.SDK_INT >= 21) {
 					for (int i = 0; i < uninstallerArray.length(); i++) {
 						JSONObject jsonObject = uninstallerArray
 								.getJSONObject(i);

File: app/src/main/java/de/robv/android/xposed/installer/util/AssetUtil.java
Patch:
@@ -23,7 +23,7 @@ public class AssetUtil {
 	private static PackageInfo mStaticBusyboxInfo = null;
 
 	public static String getBinariesFolder() {
-		if (Build.CPU_ABI.startsWith("armeabi")) {
+		if (Build.CPU_ABI.startsWith("arm")) {
 			return "arm/";
 		} else if (Build.CPU_ABI.startsWith("x86")) {
 			return "x86/";

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -49,7 +49,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451727600000";
+	public static String THIS_APK_VERSION = "1451727660000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -744,7 +744,7 @@ private void reboot(String mode) {
 
 		Intent i = new Intent(getContext(),
 				NotificationUtil.RebootReceiver.class);
-		if (mode.equals("reboot")) {
+		if (mode != null && mode.equals("recovery")) {
 			i.putExtra(EXTRA_RECOVERY_REBOOT, true);
 		}
 

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -49,7 +49,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451686200000";
+	public static String THIS_APK_VERSION = "1451727600000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/util/NotificationUtil.java
Patch:
@@ -114,7 +114,7 @@ public static void showModulesUpdatedNotification() {
 						.setVibrate(new long[] { 0 }).setAutoCancel(true)
 						.setSmallIcon(R.drawable.ic_notification);
 
-		if (prefs.getBoolean("heads_up", false))
+		if (prefs.getBoolean("heads_up", true) && Build.VERSION.SDK_INT >= 21)
 			builder.setPriority(2);
 
 		if (Build.VERSION.SDK_INT >= 16) {

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -49,7 +49,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451486100000";
+	public static String THIS_APK_VERSION = "1451498400000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451335200000";
+	public static String THIS_APK_VERSION = "1451336100000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451317500000";
+	public static String THIS_APK_VERSION = "1451335200000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/ModulesFragment.java
Patch:
@@ -266,7 +266,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 					return false;
 				}
 
-				Toast.makeText(getActivity(), enabledModulesPath.toString(),
+				Toast.makeText(getActivity(), installedModulesPath.toString(),
 						Toast.LENGTH_LONG).show();
 				return true;
 			case R.id.import_installed_modules:

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451292300000";
+	public static String THIS_APK_VERSION = "1451317500000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451045100000";
+	public static String THIS_APK_VERSION = "1451292300000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1451044800000";
+	public static String THIS_APK_VERSION = "1451045100000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1450969200000";
+	public static String THIS_APK_VERSION = "1451044800000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -51,7 +51,7 @@ public class XposedApp extends Application
 	private static final File XPOSED_PROP_FILE = new File(
 			"/system/xposed.prop");
 	public static int WRITE_EXTERNAL_PERMISSION = 69;
-	public static String THIS_APK_VERSION = "1450862400000";
+	public static String THIS_APK_VERSION = "1450879220000";
 	private static XposedApp mInstance = null;
 	private static Thread mUiThread;
 	private static Handler mMainHandler;

File: app/src/main/java/de/robv/android/xposed/installer/util/ModuleUtil.java
Patch:
@@ -313,6 +313,9 @@ public boolean isInstalledOnExternalStorage() {
 			return (app.flags & ApplicationInfo.FLAG_EXTERNAL_STORAGE) != 0;
 		}
 
+		/**
+		 * @hide
+		 */
 		public boolean isForwardLocked() {
 			return (app.flags & FLAG_FORWARD_LOCK) != 0;
 		}

File: app/src/main/java/de/robv/android/xposed/installer/util/ModuleUtil.java
Patch:
@@ -74,9 +74,9 @@ public void reloadInstalledModules() {
 				return;
 			mIsReloading = true;
 		}
-		mApp.updateProgressIndicator();
+		mApp.updateProgressIndicator(null);
 
-		Map<String, InstalledModule> modules = new HashMap<String, ModuleUtil.InstalledModule>();
+		Map<String, InstalledModule> modules = new HashMap<String, InstalledModule>();
 		RepoDb.beginTransation();
 		try {
 			RepoDb.deleteAllInstalledModules();
@@ -109,7 +109,7 @@ public void reloadInstalledModules() {
 		synchronized (this) {
 			mIsReloading = false;
 		}
-		mApp.updateProgressIndicator();
+		mApp.updateProgressIndicator(null);
 		for (ModuleListener listener : mListeners) {
 			listener.onInstalledModulesReloaded(mInstance);
 		}

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -107,7 +107,7 @@ public static void setColors(ActionBar actionBar, Object value,
 					color);
 			activity.setTaskDescription(tDesc);
 
-			if (getPreferences().getBoolean("nav_bar", true)) {
+			if (getPreferences().getBoolean("nav_bar", false)) {
 				activity.getWindow()
 						.setNavigationBarColor(darkenColor(color, 0.85f));
 			} else {

File: app/src/main/java/de/robv/android/xposed/installer/repo/ModuleVersion.java
Patch:
@@ -6,6 +6,7 @@ public class ModuleVersion {
 	public int code;
 	public String downloadLink;
 	public String md5sum;
+	public long size;
 	public String changelog;
 	public boolean changelogIsHtml = false;
 	public ReleaseType relType = ReleaseType.STABLE;

File: app/src/main/java/de/robv/android/xposed/installer/repo/RepoDbDefinitions.java
Patch:
@@ -40,6 +40,7 @@ public class RepoDbDefinitions {
 			+ ModuleVersionsColumns.CODE + " INTEGER NOT NULL, "
 			+ ModuleVersionsColumns.DOWNLOAD_LINK + " TEXT, "
 			+ ModuleVersionsColumns.MD5SUM + " TEXT, "
+			+ ModuleVersionsColumns.SIZE + " INTEGER NOT NULL, "
 			+ ModuleVersionsColumns.CHANGELOG + " TEXT, "
 			+ ModuleVersionsColumns.CHANGELOG_IS_HTML + " INTEGER DEFAULT 0, "
 			+ ModuleVersionsColumns.RELTYPE + " INTEGER DEFAULT 0, "
@@ -110,6 +111,7 @@ public interface ModulesColumns extends BaseColumns {
 		String SUPPORT = "support";
 		String CREATED = "created";
 		String UPDATED = "updated";
+		String SIZE = "size";
 
 		String PREFERRED = "preferred";
 		String LATEST_VERSION = "latest_version_id";
@@ -125,6 +127,7 @@ public interface ModuleVersionsColumns extends BaseColumns {
 		String CODE = "code";
 		String DOWNLOAD_LINK = "download_link";
 		String MD5SUM = "md5sum";
+		String SIZE = "size";
 		String CHANGELOG = "changelog";
 		String CHANGELOG_IS_HTML = "changelog_is_html";
 		String RELTYPE = "reltype";

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -100,7 +100,6 @@ public static void setColors(ActionBar actionBar, Object value,
 		int color = (int) value;
 		actionBar.setBackgroundDrawable(new ColorDrawable(color));
 		if (Build.VERSION.SDK_INT >= 21) {
-			activity.getWindow().setStatusBarColor(darkenColor(color, 0.85f));
 
 			ActivityManager.TaskDescription tDesc = new ActivityManager.TaskDescription(
 					activity.getString(R.string.app_name), drawableToBitmap(
@@ -147,7 +146,7 @@ public static Bitmap drawableToBitmap(Drawable drawable) {
 	 * @author PeterCxy https://github.com/PeterCxy/Lolistat/blob/aide/app/src/
 	 *         main/java/info/papdt/lolistat/support/Utility.java
 	 */
-	private static int darkenColor(int color, float factor) {
+	public static int darkenColor(int color, float factor) {
 		float[] hsv = new float[3];
 		Color.colorToHSV(color, hsv);
 		hsv[2] *= factor;

File: app/src/main/java/de/robv/android/xposed/installer/XposedBaseActivity.java
Patch:
@@ -1,5 +1,7 @@
 package de.robv.android.xposed.installer;
 
+import static de.robv.android.xposed.installer.XposedApp.getColor;
+
 import android.os.Bundle;
 import android.support.v7.app.AppCompatActivity;
 
@@ -19,8 +21,7 @@ protected void onCreate(Bundle savedInstanceBundle) {
 	@Override
 	protected void onResume() {
 		super.onResume();
-		XposedApp.setColors(getSupportActionBar(), XposedApp.getColor(this),
-				this);
+		XposedApp.setColors(getSupportActionBar(), getColor(this), this);
 		ThemeUtil.reloadTheme(this);
 
 		if (leftActivityWithSlideAnim)

File: app/src/main/java/de/robv/android/xposed/installer/DownloadDetailsFragment.java
Patch:
@@ -48,7 +48,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 		if (module.description != null) {
 			if (module.descriptionIsHtml) {
 				description.setText(
-						RepoParser.parseSimpleHtml(module.description));
+RepoParser.parseSimpleHtml(getActivity(),
+						module.description, description));
 				description.setMovementMethod(LinkMovementMethod.getInstance());
 			} else {
 				description.setText(module.description);

File: app/src/main/java/de/robv/android/xposed/installer/DownloadDetailsVersionsFragment.java
Patch:
@@ -274,7 +274,8 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
 				if (item.changelogIsHtml) {
 					holder.txtChanges.setText(
-							RepoParser.parseSimpleHtml(item.changelog));
+RepoParser.parseSimpleHtml(
+							getActivity(), item.changelog, holder.txtChanges));
 					holder.txtChanges.setMovementMethod(
 							LinkMovementMethod.getInstance());
 				} else {

File: app/src/main/java/de/robv/android/xposed/installer/util/RootUtil.java
Patch:
@@ -100,7 +100,7 @@ public synchronized void dispose() {
 	 */
 	public synchronized int execute(String command, List<String> output) {
 		if (mShell == null)
-			throw new IllegalStateException("shell is not running");
+			startShell();
 
 		mCommandRunning = true;
 		mShell.addCommand(command, 0, commandResultListener);

File: app/src/main/java/de/robv/android/xposed/installer/WelcomeActivity.java
Patch:
@@ -6,6 +6,7 @@
 import android.os.Handler;
 import android.support.design.widget.NavigationView;
 import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.GravityCompat;
 import android.support.v4.widget.DrawerLayout;
@@ -155,6 +156,7 @@ private void navigate(final int itemId) {
 				FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
 				transaction.replace(R.id.content_frame, navFragment).addToBackStack(null).commit();
 			} else {
+				getSupportFragmentManager().popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE);
 				FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
 				transaction.replace(R.id.content_frame, navFragment).commit();
 			}

File: app/src/main/java/de/robv/android/xposed/installer/DownloadDetailsActivity.java
Patch:
@@ -23,6 +23,7 @@
 import de.robv.android.xposed.installer.util.ModuleUtil.ModuleListener;
 import de.robv.android.xposed.installer.util.RepoLoader;
 import de.robv.android.xposed.installer.util.RepoLoader.RepoListener;
+import de.robv.android.xposed.installer.util.ThemeUtil;
 import de.robv.android.xposed.installer.util.UIUtil;
 
 
@@ -43,6 +44,8 @@ public class DownloadDetailsActivity extends XposedBaseActivity implements RepoL
 
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
+		ThemeUtil.setTheme(this);
+
 		mPackageName = getModulePackageName();
 		mModule = sRepoLoader.getModule(mPackageName);
 

File: app/src/main/java/de/robv/android/xposed/installer/WelcomeActivity.java
Patch:
@@ -26,6 +26,7 @@
 import de.robv.android.xposed.installer.util.NavUtil;
 import de.robv.android.xposed.installer.util.RepoLoader;
 import de.robv.android.xposed.installer.util.RepoLoader.RepoListener;
+import de.robv.android.xposed.installer.util.ThemeUtil;
 
 public class WelcomeActivity extends XposedBaseActivity implements
 		NavigationView.OnNavigationItemSelectedListener, ModuleListener, RepoListener {
@@ -46,6 +47,7 @@ public class WelcomeActivity extends XposedBaseActivity implements
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
+		ThemeUtil.setTheme(this);
 		setContentView(R.layout.activity_welcome);
 
 		mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);

File: app/src/main/java/de/robv/android/xposed/installer/util/ThemeUtil.java
Patch:
@@ -11,9 +11,9 @@ public final class ThemeUtil {
 	private ThemeUtil() {};
 
 	private static int[] THEMES = new int[] {
-		R.style.Theme_Light,
-		R.style.Theme_Dark,
-		R.style.Theme_Dark_Black,
+		R.style.Theme_XposedInstaller_Light,
+		R.style.Theme_XposedInstaller_Dark,
+		R.style.Theme_XposedInstaller_Dark_Black,
 	};
 
 	public static int getSelectTheme() {

File: app/src/main/java/de/robv/android/xposed/installer/DownloadDetailsSettingsFragment.java
Patch:
@@ -4,8 +4,8 @@
 import android.os.Bundle;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
-import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
+import com.github.machinarius.preferencefragment.PreferenceFragment;
 import de.robv.android.xposed.installer.repo.Module;
 import de.robv.android.xposed.installer.util.PrefixedSharedPreferences;
 import de.robv.android.xposed.installer.util.RepoLoader;

File: app/src/main/java/de/robv/android/xposed/installer/AboutFragment.java
Patch:
@@ -20,8 +20,8 @@ public void onCreate(Bundle savedInstanceState) {
 	public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		Activity activity = getActivity();
-		if (activity instanceof XposedDropdownNavActivity)
-			((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_ABOUT);
+		//if (activity instanceof XposedDropdownNavActivity)
+		//	((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_ABOUT);
 	}
 
 	@Override

File: app/src/main/java/de/robv/android/xposed/installer/InstallerFragment.java
Patch:
@@ -52,8 +52,8 @@ public class InstallerFragment extends Fragment {
 	public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		Activity activity = getActivity();
-		if (activity instanceof XposedDropdownNavActivity)
-			((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_INSTALL);
+		//if (activity instanceof XposedDropdownNavActivity)
+		//	((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_INSTALL);
 
 		dlgProgress = new ProgressDialog(activity);
 		dlgProgress.setIndeterminate(true);
@@ -77,7 +77,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 			@Override
 			public void onClick(View v) {
 				Intent intent = new Intent(getActivity(), XposedInstallerActivity.class);
-				intent.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedDropdownNavActivity.TAB_SETTINGS);
+				//intent.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedDropdownNavActivity.TAB_SETTINGS);
 				startActivity(intent);
 			}
 		});

File: app/src/main/java/de/robv/android/xposed/installer/LogsFragment.java
Patch:
@@ -39,8 +39,8 @@ public class LogsFragment extends Fragment {
 	public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		Activity activity = getActivity();
-		if (activity instanceof XposedDropdownNavActivity)
-			((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_LOGS);
+		//if (activity instanceof XposedDropdownNavActivity)
+		//	((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_LOGS);
 		setHasOptionsMenu(true);
 	}
 

File: app/src/main/java/de/robv/android/xposed/installer/SettingsFragment.java
Patch:
@@ -19,8 +19,8 @@ public class SettingsFragment extends PreferenceFragment {
 	public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		Activity activity = getActivity();
-		if (activity instanceof XposedDropdownNavActivity)
-			((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_SETTINGS);
+		//if (activity instanceof XposedDropdownNavActivity)
+		//	((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_SETTINGS);
 	}
 
 	@Override

File: app/src/main/java/de/robv/android/xposed/installer/SupportFragment.java
Patch:
@@ -19,8 +19,8 @@ public void onCreate(Bundle savedInstanceState) {
 	public void onActivityCreated(Bundle savedInstanceState) {
 		super.onActivityCreated(savedInstanceState);
 		Activity activity = getActivity();
-		if (activity instanceof XposedDropdownNavActivity)
-			((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_SUPPORT);
+		//if (activity instanceof XposedDropdownNavActivity)
+		//	((XposedDropdownNavActivity) activity).setNavItem(XposedDropdownNavActivity.TAB_SUPPORT);
 	}
 
 	@Override
@@ -33,7 +33,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 			@Override
 			public void onClick(View v) {
 				Intent intent = new Intent(getActivity(), XposedInstallerActivity.class);
-				intent.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedDropdownNavActivity.TAB_MODULES);
+				//intent.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedDropdownNavActivity.TAB_MODULES);
 				startActivity(intent);
 			}
 		});

File: app/src/main/java/de/robv/android/xposed/installer/util/NotificationUtil.java
Patch:
@@ -47,7 +47,7 @@ public static void cancelAll() {
 
 	public static void showNotActivatedNotification(String packageName, String appName) {
 		Intent iModulesTab = new Intent(sContext, XposedInstallerActivity.class);
-		iModulesTab.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedInstallerActivity.TAB_MODULES);
+		//iModulesTab.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedInstallerActivity.TAB_MODULES);
 		iModulesTab.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 
 		PendingIntent pModulesTab = PendingIntent.getActivity(sContext, PENDING_INTENT_OPEN_MODULES,
@@ -84,7 +84,7 @@ public static void showNotActivatedNotification(String packageName, String appNa
 
 	public static void showModulesUpdatedNotification() {
 		Intent iInstallTab = new Intent(sContext, XposedInstallerActivity.class);
-		iInstallTab.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedInstallerActivity.TAB_INSTALL);
+		//iInstallTab.putExtra(XposedInstallerActivity.EXTRA_SECTION, XposedInstallerActivity.TAB_INSTALL);
 		iInstallTab.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 		PendingIntent pInstallTab = PendingIntent.getActivity(sContext, PENDING_INTENT_OPEN_INSTALL,
 				iInstallTab, PendingIntent.FLAG_UPDATE_CURRENT);

File: src/de/robv/android/xposed/installer/SettingsFragment.java
Patch:
@@ -35,6 +35,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
 				boolean enabled = (Boolean) newValue;
 				if (enabled) {
 					preference.getEditor().putBoolean("enable_downloads", enabled).apply();
+					RepoLoader.getInstance().refreshRepositories();
 					RepoLoader.getInstance().triggerReload(true);
 				} else {
 					RepoLoader.getInstance().clear(true);

File: src/de/robv/android/xposed/installer/repo/RepoDb.java
Patch:
@@ -1,14 +1,14 @@
 package de.robv.android.xposed.installer.repo;
 
 import java.io.File;
+import java.util.LinkedHashMap;
 import java.util.Map;
 
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
-import android.support.v4.util.ArrayMap;
 import android.text.TextUtils;
 import android.util.Pair;
 import de.robv.android.xposed.installer.repo.RepoDbDefinitions.InstalledModulesColumns;
@@ -123,7 +123,7 @@ public static void deleteRepositories() {
 	}
 
 	public static Map<Long,Repository> getRepositories() {
-		Map<Long,Repository> result = new ArrayMap<Long, Repository>(1);
+		Map<Long,Repository> result = new LinkedHashMap<Long, Repository>(1);
 
 		String[] projection = new String[] {
 			RepositoriesColumns._ID,

File: src/de/robv/android/xposed/installer/util/RepoLoader.java
Patch:
@@ -5,6 +5,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.HashMap;
+import java.util.LinkedHashMap;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
@@ -69,7 +70,7 @@ public static synchronized RepoLoader getInstance() {
 		return mInstance;
 	}
 
-	private boolean refreshRepositories() {
+	public boolean refreshRepositories() {
 		mRepositories = RepoDb.getRepositories();
 
 		// Unlikely case (usually only during initial load): DB state doesn't fit to configuration
@@ -246,6 +247,7 @@ public void clear(boolean notify) {
 				return;
 
 			RepoDb.deleteRepositories();
+			mRepositories = new LinkedHashMap<Long, Repository>(0);
 			DownloadsUtil.clearCache(null);
 			resetLastUpdateCheck();
 		}

File: src/de/robv/android/xposed/installer/util/DownloadsUtil.java
Patch:
@@ -314,8 +314,8 @@ public static SyncDownloadInfo downloadSynchronously(String url, File target) {
 	public static void clearCache(String url) {
 		if (url != null) {
 			mPref.edit()
-				.remove("repo_" + url + "_modified")
-				.remove("repo_" + url + "_etag")
+				.remove("download_" + url + "_modified")
+				.remove("download_" + url + "_etag")
 				.apply();
 		} else {
 			mPref.edit().clear().apply();

File: src/de/robv/android/xposed/installer/SettingsFragment.java
Patch:
@@ -37,7 +37,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
 					preference.getEditor().putBoolean("enable_downloads", enabled).apply();
 					RepoLoader.getInstance().triggerReload(true);
 				} else {
-					RepoLoader.getInstance().clear();
+					RepoLoader.getInstance().clear(true);
 				}
 				return true;
 			}

File: src/de/robv/android/xposed/installer/util/NavUtil.java
Patch:
@@ -42,7 +42,7 @@ public static void startURL(Context context, Uri uri) {
 		Intent intent = new Intent(Intent.ACTION_VIEW, uri);
 		intent.putExtra(Browser.EXTRA_APPLICATION_ID, context.getPackageName());
 
-		if (uri.getHost().equals("repo.xposed.info")) {
+		if ("http".equals(uri.getScheme()) && "repo.xposed.info".equals(uri.getHost())) {
 			Intent browser = new Intent(Intent.ACTION_VIEW, EXAMPLE_URI);
 			ComponentName browserApp = browser.resolveActivity(context.getPackageManager());
 			intent.setComponent(browserApp);

File: src/de/robv/android/xposed/installer/util/NotificationUtil.java
Patch:
@@ -134,7 +134,9 @@ public void onReceive(Context context, Intent intent) {
 
 			if (intent.hasExtra(EXTRA_ACTIVATE_MODULE)) {
 				String packageName = intent.getStringExtra(EXTRA_ACTIVATE_MODULE);
-				ModuleUtil.getInstance().setModuleEnabled(packageName, true);
+				ModuleUtil moduleUtil = ModuleUtil.getInstance();
+				moduleUtil.setModuleEnabled(packageName, true);
+				moduleUtil.updateModulesList(false);
 				Toast.makeText(sContext, R.string.module_activated, Toast.LENGTH_SHORT).show();
 			}
 

File: src/de/robv/android/xposed/installer/repo/ReleaseType.java
Patch:
@@ -7,7 +7,7 @@ public enum ReleaseType {
 	BETA (R.string.reltype_beta, R.string.reltype_beta_summary),
 	EXPERIMENTAL (R.string.reltype_experimental, R.string.reltype_experimental_summary);
 
-	public static ReleaseType fromRepoXml(String value) {
+	public static ReleaseType fromString(String value) {
 		if (value == null || value.equals("stable"))
 			return STABLE;
 		else if (value.equals("beta"))

File: src/de/robv/android/xposed/installer/repo/RepoParser.java
Patch:
@@ -153,7 +153,7 @@ protected ModuleVersion readModuleVersion(Module module) throws XmlPullParserExc
 					return null;
 				}
 			} else if (tagName.equals("reltype")) {
-				version.relType = ReleaseType.fromRepoXml(parser.nextText());
+				version.relType = ReleaseType.fromString(parser.nextText());
 			} else if (tagName.equals("download")) {
 				version.downloadLink = parser.nextText();
 			} else if (tagName.equals("md5sum")) {

File: src/de/robv/android/xposed/installer/repo/ModuleVersion.java
Patch:
@@ -9,7 +9,7 @@ public class ModuleVersion {
 	public String md5sum;
 	public String changelog;
 	public boolean changelogIsHtml = false;
-	public String branch;
+	public ReleaseType relType = ReleaseType.STABLE;
 
 	/*package*/ ModuleVersion(Module module) {
 		this.module = module;

File: src/de/robv/android/xposed/installer/repo/RepoParser.java
Patch:
@@ -152,8 +152,8 @@ protected ModuleVersion readModuleVersion(Module module) throws XmlPullParserExc
 					leave(startDepth);
 					return null;
 				}
-			} else if (tagName.equals("branch")) {
-				version.branch = parser.nextText();
+			} else if (tagName.equals("reltype")) {
+				version.relType = ReleaseType.fromRepoXml(parser.nextText());
 			} else if (tagName.equals("download")) {
 				version.downloadLink = parser.nextText();
 			} else if (tagName.equals("md5sum")) {

File: src/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -41,6 +41,7 @@ public void onCreate() {
 
 		mPref = PreferenceManager.getDefaultSharedPreferences(this);
 		createDirectories();
+		AssetUtil.checkStaticBusyboxAvailability();
 		AssetUtil.removeBusybox();
 
 		registerActivityLifecycleCallbacks(this);

File: src/de/robv/android/xposed/installer/util/ModuleUtil.java
Patch:
@@ -65,6 +65,8 @@ public void reloadInstalledModules() {
 
 		for (PackageInfo pkg : mPm.getInstalledPackages(PackageManager.GET_META_DATA)) {
 			ApplicationInfo app = pkg.applicationInfo;
+			if (!app.enabled)
+				continue;
 
 			if (app.metaData != null && app.metaData.containsKey("xposedmodule"))
 				modules.put(pkg.packageName, new InstalledModule(pkg, false));
@@ -98,7 +100,7 @@ public InstalledModule reloadSingleModule(String packageName) {
 		}
 
 		ApplicationInfo app = pkg.applicationInfo;
-		if (app.metaData != null && app.metaData.containsKey("xposedmodule")) {
+		if (app.enabled && app.metaData != null && app.metaData.containsKey("xposedmodule")) {
 			InstalledModule module = new InstalledModule(pkg, false);
 			mInstalledModules.put(packageName, module);
 			for (ModuleListener listener : mListeners) {

File: src/de/robv/android/xposed/installer/DownloadDetailsFragment.java
Patch:
@@ -67,7 +67,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
 		Bundle args = getArguments();
 		packageName = args.getString(ARGUMENT_PACKAGE);
-		moduleGroup = RepoLoader.getInstance().getModuleGroup(packageName);
+		moduleGroup = RepoLoader.getInstance().waitForFirstLoadFinished().getModuleGroup(packageName);
 		module = moduleGroup.getModule();
 
 		TextView title = (TextView) view.findViewById(R.id.download_title);

File: src/de/robv/android/xposed/installer/widget/ExpandableStaticListView.java
Patch:
@@ -114,6 +114,8 @@ View getDivider() {
 	@Override
 	protected void dispatchDraw(Canvas canvas) {
 		super.dispatchDraw(canvas);
+		if (mGroups == null)
+			return;
 
 		for (int i = 0; i < mGroups.length; i++) {
 			Drawable indicator = mExpandedGroups[i] ? mIndicatorExpanded : mIndicatorCollapsed;

File: src/de/robv/android/xposed/installer/repo/Module.java
Patch:
@@ -14,8 +14,8 @@ public class Module {
 	public String contact;
 	public final List<ModuleVersion> versions = new ArrayList<ModuleVersion>();
 	public final List<String> screenshots = new ArrayList<String>();
-	public long created;
-	public long updated;
+	public long created = -1;
+	public long updated = -1;
 	
 	/*package*/ Module(Repository repository) {
 		this.repository = repository;

File: src/de/robv/android/xposed/installer/DownloadFragment.java
Patch:
@@ -60,7 +60,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 		ListView lv = (ListView) v.findViewById(R.id.listModules);
 		
 		mAdapter = new DownloadsAdapter(getActivity());
-		mAdapter.setNotifyOnChange(false);
 		mRepoLoader.addListener(this, true);
 		lv.setAdapter(mAdapter);
 		
@@ -123,6 +122,7 @@ public void onRepoReloaded(final RepoLoader loader) {
 			@Override
 			public void run() {
 				synchronized (mAdapter) {
+					mAdapter.setNotifyOnChange(false);
 					mAdapter.clear();
 					mAdapter.addAll(items);
 					mAdapter.notifyDataSetChanged();
@@ -181,6 +181,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
 		@Override
 		public void notifyDataSetChanged() {
+			setNotifyOnChange(false);
 			mAdapter.sort(null);
 		    super.notifyDataSetChanged();
 		}

File: src/de/robv/android/xposed/installer/widget/DownloadView.java
Patch:
@@ -131,7 +131,7 @@ public void run() {
 						btnInstall.setVisibility(View.GONE);
 						progressBar.setVisibility(View.GONE);
 						txtInfo.setVisibility(View.VISIBLE);
-						txtInfo.setText("Download failed");
+						txtInfo.setText("Download failed (error " + mInfo.reason + ")");
 						break;
 	
 					case DownloadManager.STATUS_SUCCESSFUL:

File: src/de/robv/android/xposed/installer/repo/Module.java
Patch:
@@ -7,6 +7,7 @@ public class Module {
 	public final Repository repository;
 	public String packageName;
 	public String name;
+	public String summary;
 	public String description;
 	public boolean descriptionIsHtml = false;
 	public String author;

File: src/de/robv/android/xposed/installer/repo/ModuleVersion.java
Patch:
@@ -1,15 +1,14 @@
 package de.robv.android.xposed.installer.repo;
 
-import java.util.ArrayList;
-import java.util.List;
 
 public class ModuleVersion {
 	public final Module module;
 	public String name;
 	public int code;
 	public String downloadLink;
 	public String md5sum;
-	public final List<String> changelog = new ArrayList<String>();
+	public String changelog;
+	public boolean changelogIsHtml = false;
 	
 	/*package*/ ModuleVersion(Module module) {
 		this.module = module;

File: src/de/robv/android/xposed/installer/util/RepoLoader.java
Patch:
@@ -138,7 +138,7 @@ private void downloadFiles() {
 					if (responseCode == HttpURLConnection.HTTP_NOT_MODIFIED) {
 						continue;
 					} else if (responseCode < 200 || responseCode >= 300) {
-						mMessages.add(String.format("Downloading %s failed: %d (%s)", responseCode, httpConnection.getResponseMessage()));
+						mMessages.add(String.format("Downloading %s failed: %d (%s)", repo, responseCode, httpConnection.getResponseMessage()));
 						continue;
 					}
 				}
@@ -163,7 +163,7 @@ private void downloadFiles() {
 				}
 				
 			} catch (Throwable t) {
-				mMessages.add(String.format("Downloading %s failed: %s", t.getMessage()));
+				mMessages.add(String.format("Downloading %s failed: %s", repo, t.getMessage()));
 
 			} finally {
 				if (connection != null && connection instanceof HttpURLConnection)

File: src/de/robv/android/xposed/installer/PackageChangeReceiver.java
Patch:
@@ -79,7 +79,7 @@ static Set<String> getEnabledModules(Context context) {
 			}
 			moduleLines.close();
 		} catch (IOException e) {
-			Toast.makeText(context, "cannot read /data/xposed/modules.whitelist", 1000).show();
+			Toast.makeText(context, "cannot read /data/xposed/modules.whitelist", Toast.LENGTH_LONG).show();
 			Log.e(XposedInstallerActivity.TAG, "cannot read /data/xposed/modules.whitelist", e);
 			return modules;
 		}
@@ -94,7 +94,7 @@ static void setEnabledModules(Context context, Set<String> modules) {
 			}
 			pw.close();
 		} catch (IOException e) {
-			Toast.makeText(context, "cannot write /data/xposed/modules.whitelist", 1000).show();
+			Toast.makeText(context, "cannot write /data/xposed/modules.whitelist", Toast.LENGTH_LONG).show();
 			Log.e(XposedInstallerActivity.TAG, "cannot write /data/xposed/modules.whitelist", e);
 		}
 	}
@@ -142,7 +142,7 @@ protected String doInBackground(Void... params) {
 			
 			@Override
 			protected void onPostExecute(String result) {
-				Toast.makeText(context, result, 1000).show();
+				Toast.makeText(context, result, Toast.LENGTH_SHORT).show();
 			}
 		}.execute();
 	}

