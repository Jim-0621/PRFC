File: novel-front/src/main/java/com/java2nb/novel/controller/PayController.java
Patch:
@@ -51,7 +51,7 @@ public void aliPay(Integer payAmount, HttpServletRequest request, HttpServletRes
         UserDetails userDetails = getUserDetails(request);
         if (userDetails == null) {
             //未登录，跳转到登陆页面
-            httpResponse.sendRedirect("/user/login.html?originUrl=/pay/aliPay?payAmount=" + payAmount);
+            httpResponse.sendRedirect("/user/login.html?originUrl=/pay/index.html");
         } else {
             //创建充值订单
             Long outTradeNo = orderService.createPayOrder((byte) 1, payAmount, userDetails.getId());

File: novel-admin/src/main/java/com/java2nb/novel/controller/FriendLinkController.java
Patch:
@@ -12,6 +12,7 @@
 import org.springframework.data.redis.core.RedisTemplate;
 import org.springframework.stereotype.Controller;
 import org.springframework.ui.Model;
+import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.*;
 
 import java.util.List;
@@ -83,7 +84,7 @@ String detail(@PathVariable("id") Integer id, Model model) {
     @ResponseBody
     @PostMapping("/save")
     @RequiresPermissions("novel:friendLink:add")
-    public R save(FriendLinkDO friendLink) {
+    public R save(@Validated FriendLinkDO friendLink) {
         if (friendLinkService.save(friendLink) > 0) {
             redisTemplate.delete(CacheKey.INDEX_LINK_KEY);
             return R.ok();
@@ -98,7 +99,7 @@ public R save(FriendLinkDO friendLink) {
     @ResponseBody
     @RequestMapping("/update")
     @RequiresPermissions("novel:friendLink:edit")
-    public R update(FriendLinkDO friendLink) {
+    public R update(@Validated FriendLinkDO friendLink) {
         friendLinkService.update(friendLink);
         redisTemplate.delete(CacheKey.INDEX_LINK_KEY);
         return R.ok();

File: novel-front/src/main/java/com/java2nb/novel/vo/BookShelfVO.java
Patch:
@@ -4,7 +4,6 @@
 import com.java2nb.novel.entity.UserBookshelf;
 import lombok.Data;
 
-import javax.annotation.Generated;
 import java.util.Date;
 
 /**
@@ -29,6 +28,7 @@ public class BookShelfVO extends UserBookshelf {
 
     private String bookDesc;
 
+    @JsonFormat(timezone = "GMT+8", pattern = "MM/dd HH:mm")
     private Date lastIndexUpdateTime;
 
     private Byte bookStatus;

File: novel-common/src/main/java/com/java2nb/novel/core/advice/PageExceptionHandler.java
Patch:
@@ -10,7 +10,7 @@
  * @author 11797
  */
 @Slf4j
-@ControllerAdvice(basePackages = "com.java2nb.novel.page")
+@ControllerAdvice(basePackages = "com.java2nb.novel.controller.page")
 public class PageExceptionHandler {
 
 

File: novel-front/src/main/java/com/java2nb/novel/controller/page/PageController.java
Patch:
@@ -1,5 +1,6 @@
-package com.java2nb.novel.controller;
+package com.java2nb.novel.controller.page;
 
+import com.java2nb.novel.controller.BaseController;
 import com.java2nb.novel.core.bean.UserDetails;
 import com.java2nb.novel.core.utils.ThreadLocalUtil;
 import com.java2nb.novel.entity.*;

File: novel-admin/src/main/java/com/java2nb/novel/controller/WebsiteInfoController.java
Patch:
@@ -28,7 +28,7 @@ public class WebsiteInfoController {
     private WebsiteInfoService websiteInfoService;
 
     @GetMapping()
-    @RequiresPermissions("novel:websiteInfo:detail")
+    @RequiresPermissions("novel:websiteInfo:websiteInfo")
     String detail(Model model) {
         WebsiteInfoDO websiteInfo = websiteInfoService.get(1L);
         model.addAttribute("websiteInfo", websiteInfo);

File: novel-crawl/src/main/java/com/java2nb/novel/core/crawl/CrawlParser.java
Patch:
@@ -139,7 +139,7 @@ public static void parseBook(RuleBean ruleBean, String bookId, CrawlBookHandler
         handler.handle(book);
     }
 
-    public static void parseBookIndexAndContent(String sourceBookId, Book book, RuleBean ruleBean, Map<Integer, BookIndex> existBookIndexMap, CrawlBookChapterHandler handler) {
+    public static boolean parseBookIndexAndContent(String sourceBookId, Book book, RuleBean ruleBean, Map<Integer, BookIndex> existBookIndexMap, CrawlBookChapterHandler handler) {
 
         Date currentDate = new Date();
 
@@ -275,7 +275,7 @@ public static void parseBookIndexAndContent(String sourceBookId, Book book, Rule
                     setBookContentList(contentList);
                 }});
 
-                return;
+                return true;
 
             }
 
@@ -285,6 +285,7 @@ public static void parseBookIndexAndContent(String sourceBookId, Book book, Rule
             setBookIndexList(new ArrayList<>(0));
             setBookContentList(new ArrayList<>(0));
         }});
+        return false;
 
     }
 

File: novel-crawl/src/main/java/com/java2nb/novel/service/impl/CrawlServiceImpl.java
Patch:
@@ -302,15 +302,16 @@ public boolean parseBookAndSave(int catId, RuleBean ruleBean, Integer sourceId,
                 book.setCrawlLastTime(new Date());
                 book.setId(IdWorker.INSTANCE.nextId());
                 //解析章节目录
-                CrawlParser.parseBookIndexAndContent(bookId, book, ruleBean, new HashMap<>(0), chapter -> {
+                boolean parseIndexContentResult = CrawlParser.parseBookIndexAndContent(bookId, book, ruleBean, new HashMap<>(0), chapter -> {
                     bookService.saveBookAndIndexAndContent(book, chapter.getBookIndexList(), chapter.getBookContentList());
                 });
+                parseResult.set(parseIndexContentResult);
 
             } else {
                 //只更新书籍的爬虫相关字段
                 bookService.updateCrawlProperties(existBook.getId(), sourceId, bookId);
+                parseResult.set(true);
             }
-            parseResult.set(true);
         });
 
         return parseResult.get();

File: novel-front/src/main/java/com/java2nb/novel/controller/NewsController.java
Patch:
@@ -31,7 +31,7 @@ public ResultBean listIndexNews(){
      * */
     @GetMapping("listByPage")
     public ResultBean listByPage(@RequestParam(value = "curr", defaultValue = "1") int page, @RequestParam(value = "limit", defaultValue = "5") int pageSize){
-        return ResultBean.ok(new PageInfo<>(newsService.listByPage(page,pageSize)));
+        return ResultBean.ok(newsService.listByPage(page,pageSize));
     }
 
 

File: novel-front/src/main/java/com/java2nb/novel/service/NewsService.java
Patch:
@@ -1,6 +1,7 @@
 package com.java2nb.novel.service;
 
 
+import com.java2nb.novel.core.bean.PageBean;
 import com.java2nb.novel.entity.News;
 import com.java2nb.novel.vo.NewsVO;
 
@@ -28,7 +29,7 @@ public interface NewsService {
      * 分页查询新闻列表
      * @param page 页码
      * @param pageSize 分页大小
-     * @return 新闻集合
+     * @return 新闻分页数据
      * */
-    List<NewsVO> listByPage(int page, int pageSize);
+    PageBean<News> listByPage(int page, int pageSize);
 }

File: novel-front/src/main/java/com/java2nb/novel/service/impl/SearchServiceImpl.java
Patch:
@@ -93,7 +93,7 @@ public PageInfo searchBook(BookSP params, int page, int pageSize) {
         boolQueryBuilder.filter(QueryBuilders.rangeQuery("wordCount").gte(params.getWordCountMin()).lte(params.getWordCountMax()));
 
         if (params.getUpdateTimeMin() != null) {
-            boolQueryBuilder.filter(QueryBuilders.rangeQuery("lastIndexUpdateTime").gte(params.getUpdateTimeMin()));
+            boolQueryBuilder.filter(QueryBuilders.rangeQuery("lastIndexUpdateTime").gte(new SimpleDateFormat("yyyy/MM/dd HH:mm").format(params.getUpdateTimeMin())));
         }
 
 

File: novel-crawl/src/main/java/com/java2nb/novel/core/crawl/CrawlParser.java
Patch:
@@ -94,6 +94,8 @@ public static Book parseBook(RuleBean ruleBean, String bookId) {
 
                     String desc = bookDetailHtml.substring(bookDetailHtml.indexOf(ruleBean.getDescStart()) + ruleBean.getDescStart().length());
                     desc = desc.substring(0, desc.indexOf(ruleBean.getDescEnd()));
+                    //过滤掉简介中的a标签
+                    desc = desc.replaceAll("<a[^<]+</a>","");
                     //设置书籍简介
                     book.setBookDesc(desc);
                     if (StringUtils.isNotBlank(ruleBean.getStatusPatten())) {
@@ -173,6 +175,7 @@ public static Map<Integer, List> parseBookIndexAndContent(String sourceBookId, B
             String lastIndexName = null;
 
             while (isFindIndex) {
+
                 BookIndex hasIndex = hasIndexs.get(indexNum);
                 String indexName = indexNameMatch.group(1);
 

File: novel-common/src/main/java/com/java2nb/novel/entity/BookSetting.java
Patch:
@@ -1,9 +1,10 @@
 package com.java2nb.novel.entity;
 
 import javax.annotation.Generated;
+import java.io.Serializable;
 import java.util.Date;
 
-public class BookSetting  {
+public class BookSetting  implements Serializable {
     @Generated("org.mybatis.generator.api.MyBatisGenerator")
     private Long id;
 

File: novel-crawl/src/main/java/com/java2nb/novel/core/listener/StarterListener.java
Patch:
@@ -53,6 +53,7 @@ public void contextInitialized(ServletContextEvent sce) {
                             //这里只做老书更新
                             book.setCrawlLastTime(currentDate);
                             book.setId(needUpdateBook.getId());
+                            book.setPicUrl(needUpdateBook.getPicUrl());
                             //查询已存在的章节
                             Map<Integer, BookIndex> existBookIndexMap = bookService.queryExistBookIndexMap(needUpdateBook.getId());
                             //解析章节目录

File: novel-common/src/main/java/com/java2nb/novel/core/crawl/CrawlParser.java
Patch:
@@ -26,7 +26,6 @@ public class CrawlParser {
     public static final Integer BOOK_INDEX_LIST_KEY = 1;
 
     public static final Integer BOOK_CONTENT_LIST_KEY = 2;
-    private static final Integer BOOK_KEY = 3;
 
     @SneakyThrows
     public static Book parseBook(RuleBean ruleBean, String bookId) {

