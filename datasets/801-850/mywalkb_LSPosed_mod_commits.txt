File: daemon/src/main/java/org/lsposed/lspd/util/FakeContext.java
Patch:
@@ -54,7 +54,8 @@ public ApplicationInfo getApplicationInfo() {
 
     @Override
     public ContentResolver getContentResolver() {
-        return null;
+        return new ContentResolver(this) {
+        };
     }
 
     public int getUserId() {

File: app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java
Patch:
@@ -164,7 +164,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             if (prefEnableLog != null) {
                 prefEnableLog.setEnabled(!BuildConfig.DEBUG && installed);
                 prefEnableLog.setChecked(!installed || ConfigManager.isLogWatchdogEnabled());
-                prefEnableLog.setOnPreferenceChangeListener((preference, newValue) -> ConfigManager.setLogWatchdog(!(boolean) newValue));
+                prefEnableLog.setOnPreferenceChangeListener((preference, newValue) -> ConfigManager.setLogWatchdog((boolean) newValue));
             }
 
             MaterialSwitchPreference prefDexObfuscate = findPreference("enable_dex_obfuscate");

File: daemon/src/main/java/org/lsposed/lspd/service/Dex2OatService.java
Patch:
@@ -28,6 +28,7 @@
 import android.net.LocalServerSocket;
 import android.os.Build;
 import android.os.FileObserver;
+import android.os.Process;
 import android.os.SELinux;
 import android.system.ErrnoException;
 import android.system.Os;
@@ -66,8 +67,8 @@ private void openDex2oat(int id, String path) {
 
     public Dex2OatService() {
         if (Build.VERSION.SDK_INT == Build.VERSION_CODES.Q) {
-            openDex2oat(0, "/apex/com.android.runtime/bin/dex2oat");
-            openDex2oat(1, "/apex/com.android.runtime/bin/dex2oatd");
+            openDex2oat(Process.is64Bit() ? 2 : 0, "/apex/com.android.runtime/bin/dex2oat");
+            openDex2oat(Process.is64Bit() ? 3 : 1, "/apex/com.android.runtime/bin/dex2oatd");
         } else {
             openDex2oat(0, "/apex/com.android.art/bin/dex2oat32");
             openDex2oat(1, "/apex/com.android.art/bin/dex2oatd32");

File: core/src/main/java/org/lsposed/lspd/hooker/LoadedApkCtorHooker.java
Patch:
@@ -72,7 +72,7 @@ public static void afterHookedMethod(XposedInterface.AfterHookCallback callback)
                 return;
             }
 
-            LoadedApkGetCLHooker.addLoadedApk(loadedApk);
+            LoadedApkCreateCLHooker.addLoadedApk(loadedApk);
         } catch (Throwable t) {
             Hookers.logE("error when hooking LoadedApk.<init>", t);
         }

File: core/src/main/java/org/lsposed/lspd/deopt/InlinedMethodCallers.java
Patch:
@@ -57,6 +57,7 @@ public class InlinedMethodCallers {
             // callers of Application#attach(Context)
             {"android.app.Instrumentation", "newApplication", ClassLoader.class, String.class, Context.class},
             {"android.app.Instrumentation", "newApplication", ClassLoader.class, Context.class},
+            {"android.app.ContextImpl", "getSharedPreferencesPath", String.class}
     };
 
     // TODO deprecate this

File: core/src/main/java/org/lsposed/lspd/hooker/LoadedApkGetCLHooker.java
Patch:
@@ -188,7 +188,7 @@ private static void hookNewXSP(XC_LoadPackage.LoadPackageParam lpparam) {
         }
 
         if (xposedminversion > 92 || xposedsharedprefs) {
-            Utils.logW("New modules detected, hook preferences");
+            Utils.logI("New modules detected, hook preferences");
             XposedHelpers.findAndHookMethod("android.app.ContextImpl", lpparam.classLoader, "checkMode", int.class, new XC_MethodHook() {
                 @Override
                 protected void afterHookedMethod(MethodHookParam param) {

File: daemon/src/main/java/org/lsposed/lspd/service/ServiceManager.java
Patch:
@@ -133,15 +133,15 @@ public static void start(String[] args) {
 
         systemServerService.putBinderForSystemServer();
 
-        DdmHandleAppName.setAppName("lspd", 0);
-
         // get config before package service is started
         // otherwise getInstance will trigger module/scope cache
         var configManager = ConfigManager.getInstance();
         // --- DO NOT call ConfigManager.getInstance later!!! ---
 
         ActivityThread.systemMain();
 
+        DdmHandleAppName.setAppName("lspd", 0);
+
         waitSystemService("package");
         waitSystemService("activity");
         waitSystemService(Context.USER_SERVICE);

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -1136,6 +1136,7 @@ private void removeModulePrefs(int uid, String packageName) throws IOException {
     public List<String> getDenyListPackages() {
         List<String> result = new ArrayList<>();
         if (!getApi().equals("Zygisk")) return result;
+        if (!ConfigFileManager.magiskDbPath.exists()) return result;
         try (final SQLiteDatabase magiskDb =
                      SQLiteDatabase.openDatabase(ConfigFileManager.magiskDbPath, new SQLiteDatabase.OpenParams.Builder().addOpenFlags(SQLiteDatabase.OPEN_READONLY).build())) {
             try (Cursor cursor = magiskDb.query("settings", new String[]{"value"}, "`key`=?", new String[]{"denylist"}, null, null, null)) {

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -129,7 +129,7 @@ public boolean equals(@Nullable Object o) {
 
         @Override
         public int hashCode() {
-            return processName.hashCode() ^ uid;
+            return Objects.hashCode(processName) ^ uid;
         }
     }
 

File: daemon/src/main/java/org/lsposed/lspd/service/LSPModuleService.java
Patch:
@@ -97,6 +97,8 @@ private void sendBinder(int uid) {
                 reply = provider.call("android", null, authority, SEND_BINDER, null, extra);
             } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.Q) {
                 reply = provider.call("android", authority, SEND_BINDER, null, extra);
+            } else {
+                reply = provider.call("android", SEND_BINDER, null, extra);
             }
             if (reply != null) {
                 Log.d(TAG, "sent module binder to " + name);

File: hiddenapi/stubs/src/main/java/android/content/IContentProvider.java
Patch:
@@ -7,6 +7,9 @@
 import androidx.annotation.RequiresApi;
 
 public interface IContentProvider extends IInterface {
+    Bundle call(String callingPkg, String method,
+                String arg, Bundle extras) throws RemoteException;
+
     @RequiresApi(29)
     Bundle call(String callingPkg, String authority, String method,
                 String arg, Bundle extras) throws RemoteException;

File: app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java
Patch:
@@ -173,8 +173,8 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             MaterialSwitchPreference notificationPreference = findPreference("enable_status_notification");
             if (notificationPreference != null) {
                 notificationPreference.setVisible(installed);
-                if (installed && App.isParasitic) {
-                    notificationPreference.setChecked(setNotificationPreferenceEnabled(notificationPreference, ShortcutUtil.isLaunchShortcutPinned()));
+                if (installed) {
+                    notificationPreference.setChecked(setNotificationPreferenceEnabled(notificationPreference, !App.isParasitic || ShortcutUtil.isLaunchShortcutPinned()));
                 }
                 notificationPreference.setOnPreferenceChangeListener((p, v) -> {
                     var succeeded = ConfigManager.setEnableStatusNotification((boolean) v);

File: app/src/main/java/org/lsposed/manager/util/ShortcutUtil.java
Patch:
@@ -115,7 +115,7 @@ public void onReceive(Context c, Intent intent) {
             }
         };
         context.registerReceiver(receiver, filter, permission,
-                null/* main thread */, Context.RECEIVER_NOT_EXPORTED);
+                null/* main thread */, Context.RECEIVER_EXPORTED);
 
         var intent = new Intent(uuid);
         int flags = PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE;

File: core/src/main/java/org/lsposed/lspd/impl/LSPosedRemotePreferences.java
Patch:
@@ -29,7 +29,7 @@ public class LSPosedRemotePreferences implements SharedPreferences {
         synchronized public void onUpdate(Bundle bundle) {
             Set<String> changes = new ArraySet<>();
             if (bundle.containsKey("delete")) {
-                var deletes = bundle.getStringArrayList("delete");
+                var deletes = (Set<String>) bundle.getSerializable("delete");
                 changes.addAll(deletes);
                 for (var key : deletes) {
                     mMap.remove(key);

File: core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java
Patch:
@@ -212,11 +212,11 @@ public String getProcessName() {
                 }
             }
             Log.d(TAG, "Loaded module " + module.packageName + ": " + ctx);
+            module.file.moduleLibraryNames.forEach(NativeAPI::recordNativeEntrypoint);
             return true;
         } catch (Throwable e) {
             Log.d(TAG, "Loading module " + module.packageName, e);
         }
-        module.file.moduleLibraryNames.forEach(NativeAPI::recordNativeEntrypoint);
         return false;
     }
 

File: daemon/src/main/java/org/lsposed/lspd/service/LSPModuleService.java
Patch:
@@ -203,9 +203,9 @@ public void updateRemotePreferences(String group, Bundle diff) throws RemoteExce
         var userId = ensureModule();
         Map<String, Object> values = new ArrayMap<>();
         if (diff.containsKey("delete")) {
-            var deletes = diff.getStringArrayList("delete");
+            var deletes = (Set<?>) diff.getSerializable("delete");
             for (var key : deletes) {
-                values.put(key, null);
+                values.put((String) key, null);
             }
         }
         if (diff.containsKey("put")) {

File: app/src/main/java/org/lsposed/manager/util/ModuleUtil.java
Patch:
@@ -357,7 +357,7 @@ public List<String> getScopeList() {
             try {
                 int scopeListResourceId = app.metaData.getInt("xposedscope");
                 if (scopeListResourceId != 0) {
-                    scopeList = Arrays.asList(pm.getResourcesForApplication(app).getStringArray(scopeListResourceId));
+                    list = Arrays.asList(pm.getResourcesForApplication(app).getStringArray(scopeListResourceId));
                 } else {
                     String scopeListString = app.metaData.getString("xposedscope");
                     if (scopeListString != null)

File: core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java
Patch:
@@ -40,6 +40,7 @@
 import org.lsposed.lspd.impl.utils.LSPosedDexParser;
 import org.lsposed.lspd.models.Module;
 import org.lsposed.lspd.nativebridge.HookBridge;
+import org.lsposed.lspd.nativebridge.NativeAPI;
 import org.lsposed.lspd.service.ILSPInjectedModuleService;
 import org.lsposed.lspd.util.LspModuleClassLoader;
 
@@ -191,6 +192,7 @@ public String getProcessName() {
         } catch (Throwable e) {
             Log.d(TAG, "Loading module " + module.packageName, e);
         }
+        module.file.moduleLibraryNames.forEach(NativeAPI::recordNativeEntrypoint);
         return false;
     }
 

File: core/src/main/java/org/lsposed/lspd/nativebridge/HookBridge.java
Patch:
@@ -1,6 +1,5 @@
 package org.lsposed.lspd.nativebridge;
 
-import java.lang.reflect.Constructor;
 import java.lang.reflect.Executable;
 import java.lang.reflect.InvocationTargetException;
 

File: app/src/main/java/org/lsposed/manager/ui/activity/CrashReportActivity.java
Patch:
@@ -48,8 +48,8 @@ public class CrashReportActivity extends MaterialActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
         setTheme(R.style.AppTheme);
+        super.onCreate(savedInstanceState);
         binding = ActivityCrashReportBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
         binding.sendLogs.setOnClickListener(view -> {

File: daemon/src/main/java/org/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -118,7 +118,8 @@ private void dispatchPackageChanged(Intent intent) {
         var allUsers = intent.getBooleanExtra(EXTRA_REMOVED_FOR_ALL_USERS, false);
         if (userId == USER_NULL) userId = uid % PER_USER_RANGE;
         Uri uri = intent.getData();
-        String moduleName = (uri != null) ? uri.getSchemeSpecificPart() : ConfigManager.getInstance().getModule(uid).packageName;
+        var module = ConfigManager.getInstance().getModule(uid);
+        String moduleName = (uri != null) ? uri.getSchemeSpecificPart() : (module != null) ? module.packageName : null;
 
         ApplicationInfo applicationInfo = null;
         if (moduleName != null) {

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -52,8 +52,8 @@ public class BaseActivity extends MaterialActivity {
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
         setTheme(R.style.AppTheme);
+        super.onCreate(savedInstanceState);
         // make sure the versions are consistent
         if (BuildConfig.DEBUG) return;
         if (!ConfigManager.isBinderAlive()) return;

File: daemon/src/main/java/org/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -177,7 +177,7 @@ private void dispatchPackageChanged(Intent intent) {
                         // it will automatically remove obsolete app from database
                         configManager.updateAppCache();
                     }
-                    if (intentAction.equals(Intent.ACTION_PACKAGE_ADDED)) {
+                    if (intentAction.equals(Intent.ACTION_PACKAGE_ADDED) && !intent.getBooleanExtra(Intent.EXTRA_REPLACING, false)) {
                         for (String module : configManager.getAutomaticAddModules()) {
                             var list = configManager.getModuleScope(module);
                             if (list != null) {

File: daemon/src/main/java/org/lsposed/lspd/service/LSPNotificationManager.java
Patch:
@@ -142,6 +142,7 @@ private static void createNotificationChannel(INotificationManager nm) throws Re
 
     static void notifyStatusNotification() {
         var intent = new Intent(openManagerAction);
+        intent.setPackage("android");
         var context = new FakeContext();
         int flags = PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE;
         var notification = new Notification.Builder(context, STATUS_CHANNEL_ID)
@@ -180,13 +181,15 @@ static void cancelStatusNotification() {
 
     private static PendingIntent getModuleIntent(String modulePackageName, int moduleUserId) {
         var intent = new Intent(openManagerAction);
+        intent.setPackage("android");
         intent.setData(new Uri.Builder().scheme("module").encodedAuthority(modulePackageName + ":" + moduleUserId).build());
         int flags = PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE;
         return PendingIntent.getBroadcast(new FakeContext(), 3, intent, flags);
     }
 
     private static PendingIntent getModuleScopeIntent(String modulePackageName, int moduleUserId, String scopePackageName, String action, IXposedScopeCallback callback) {
         var intent = new Intent(moduleScope);
+        intent.setPackage("android");
         intent.setData(new Uri.Builder().scheme("module").encodedAuthority(modulePackageName + ":" + moduleUserId).encodedPath(scopePackageName).appendQueryParameter("action", action).build());
         var extras = new Bundle();
         extras.putBinder("callback", callback.asBinder());

File: core/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -38,6 +38,7 @@
 import android.os.Build;
 import android.os.IBinder;
 import android.os.Process;
+import android.util.ArrayMap;
 import android.util.Log;
 
 import org.lsposed.lspd.impl.LSPosedContext;
@@ -241,6 +242,7 @@ public static void loadModules(ActivityThread at) {
             if (!LSPosedContext.loadModule(at, module)) {
                 loadedModules.remove(module.packageName);
             }
+            ((ArrayMap<?, ?>) XposedHelpers.getObjectField(ActivityThread.currentActivityThread(), "mPackages")).clear();
         });
     }
 

File: core/src/main/java/org/lsposed/lspd/hooker/LoadedApkGetCLHooker.java
Patch:
@@ -88,7 +88,7 @@ protected void afterHookedMethod(MethodHookParam<?> param) {
         try {
             Hookers.logD("LoadedApk#getClassLoader starts");
 
-            final String processName = AndroidAppHelper.currentProcessName();
+            final String processName = ActivityThread.currentProcessName();
             final String packageName = isFirstPackage && "android".equals(ActivityThread.currentPackageName()) ? "system" : loadedApk.getPackageName();
 
             Object mAppDir = XposedHelpers.getObjectField(loadedApk, "mAppDir");

File: core/src/main/java/org/lsposed/lspd/core/Startup.java
Patch:
@@ -68,7 +68,7 @@ public static void bootstrapXposed() {
         // Initialize the Xposed framework
         try {
             startBootstrapHook(XposedInit.startsSystemServer);
-            XposedInit.loadModules();
+            XposedInit.loadLegacyModules();
         } catch (Throwable t) {
             Utils.logE("error during Xposed initialization", t);
         }

File: core/src/main/java/org/lsposed/lspd/hooker/CrashDumpHooker.java
Patch:
@@ -7,7 +7,7 @@
 
 public class CrashDumpHooker extends XC_MethodHook {
     @Override
-    protected void beforeHookedMethod(MethodHookParam param) throws Throwable {
+    protected void beforeHookedMethod(MethodHookParam<?> param) {
         try {
             var e = (Throwable) param.args[0];
             XposedBridge.log("Crash unexpectedly: " + Log.getStackTraceString(e));

File: core/src/main/java/org/lsposed/lspd/hooker/HandleSystemServerProcessHooker.java
Patch:
@@ -33,7 +33,7 @@ public class HandleSystemServerProcessHooker extends XC_MethodHook {
     public static volatile ClassLoader systemServerCL;
 
     @Override
-    protected void afterHookedMethod(MethodHookParam param) {
+    protected void afterHookedMethod(MethodHookParam<?> param) {
         Hookers.logD("ZygoteInit#handleSystemServerProcess() starts");
         try {
             // get system_server classLoader

File: core/src/main/java/org/lsposed/lspd/hooker/OpenDexFileHooker.java
Patch:
@@ -9,7 +9,7 @@
 
 public class OpenDexFileHooker extends XC_MethodHook {
     @Override
-    protected void afterHookedMethod(MethodHookParam param) throws Throwable {
+    protected void afterHookedMethod(MethodHookParam<?> param) throws Throwable {
         ClassLoader classLoader = null;
         for (var arg : param.args) {
             if (arg instanceof ClassLoader) {

File: core/src/main/java/org/lsposed/lspd/hooker/StartBootstrapServicesHooker.java
Patch:
@@ -36,7 +36,7 @@
 public class StartBootstrapServicesHooker extends XC_MethodHook {
 
     @Override
-    protected void beforeHookedMethod(MethodHookParam param) {
+    protected void beforeHookedMethod(MethodHookParam<?> param) {
         logD("SystemServer#startBootstrapServices() starts");
 
         try {

File: core/src/main/java/org/lsposed/lspd/core/Startup.java
Patch:
@@ -61,8 +61,7 @@ private static void startBootstrapHook(boolean isSystem) {
                 ActivityThread.class, ApplicationInfo.class, CompatibilityInfo.class,
                 ClassLoader.class, boolean.class, boolean.class, boolean.class,
                 new LoadedApkCtorHooker());
-        XposedHelpers.findAndHookMethod(ActivityThread.class, "attach", boolean.class,
-                long.class, new AttachHooker());
+        XposedBridge.hookAllMethods(ActivityThread.class, "attach", new AttachHooker());
     }
 
     public static void bootstrapXposed() {

File: hiddenapi/stubs/src/main/java/android/app/LoadedApk.java
Patch:
@@ -3,6 +3,8 @@
 import android.content.pm.ApplicationInfo;
 
 public final class LoadedApk {
+	private ClassLoader mDefaultClassLoader;
+
 	public ApplicationInfo getApplicationInfo() {
 		throw new UnsupportedOperationException("STUB");
 	}

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -541,6 +541,7 @@ private synchronized void cacheModules() {
                 var module = new Module();
                 module.packageName = packageName;
                 module.apkPath = apkPath;
+                module.service = new LSPInjectedModuleService(module);
                 modules.add(module);
             }
 

File: core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java
Patch:
@@ -160,6 +160,7 @@ public static boolean loadModule(ActivityThread at, Module module) {
                 Log.d(TAG, "  Loading class " + moduleClass);
                 if (!XposedModule.class.isAssignableFrom(moduleClass)) {
                     Log.e(TAG, "    This class doesn't implement any sub-interface of XposedModule, skipping it");
+                    continue;
                 }
                 try {
                     if (moduleClass.getMethod("onResourceLoaded", XposedModuleInterface.ResourcesLoadedParam.class).getDeclaringClass() != XposedModule.class) {

File: core/src/main/java/android/content/res/XResources.java
Patch:
@@ -68,7 +68,7 @@
 import de.robv.android.xposed.callbacks.XC_LayoutInflated.LayoutInflatedParam;
 import de.robv.android.xposed.callbacks.XCallback;
 import io.github.libxposed.XposedResources;
-import io.github.libxposed.XposedTypedArray;
+import xposed.dummy.XTypedArraySuperClass;
 
 /**
  * {@link android.content.res.Resources} subclass that allows replacing individual resources.
@@ -1279,7 +1279,7 @@ private static int translateAttrId(String attrName, XResources origRes) {
 	 * Mainly used when inflating layouts.
 	 * @hide
 	 */
-	public static class XTypedArray extends XposedTypedArray {
+	public static class XTypedArray extends XTypedArraySuperClass {
 
         public XTypedArray(Resources resources) {
             super(resources);

File: daemon/src/main/java/org/lsposed/lspd/service/LSPInjectedModuleService.java
Patch:
@@ -4,7 +4,6 @@
 
 import android.os.Binder;
 import android.os.Bundle;
-import android.os.IBinder;
 import android.os.RemoteException;
 
 import org.lsposed.lspd.models.Module;

File: api/src/main/java/io/github/libxposed/XposedTypedArray.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.res.Resources;
 import android.content.res.TypedArray;
 
-public class XposedTypedArray extends TypedArray {
+public abstract class XposedTypedArray extends TypedArray {
     public XposedTypedArray(Resources resources) {
         super(resources);
     }

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -732,7 +732,7 @@ public String getModuleApkPath(ApplicationInfo info) {
                 return false;
             }
             try (var zip = new ZipFile(toGlobalNamespace(apk))) {
-                return zip.getEntry("assets/xposed_init") != null;
+                return zip.getEntry("META-INF/xposed/xposed_init") != null || zip.getEntry("assets/xposed_init") != null;
             } catch (IOException e) {
                 return false;
             }

File: core/src/main/java/org/lsposed/lspd/hooker/AttachHooker.java
Patch:
@@ -13,7 +13,7 @@ public class AttachHooker extends XC_MethodHook {
     @Override
     protected void afterHookedMethod(MethodHookParam param) throws Throwable {
         serviceClient.getModulesList().forEach(module -> {
-            if (LSPosedContext.loadModules((ActivityThread) param.thisObject, module)) {
+            if (LSPosedContext.loadModule((ActivityThread) param.thisObject, module)) {
                 XposedInit.getLoadedModules().add(module.packageName);
             }
         });

File: core/src/main/java/org/lsposed/lspd/impl/LSPosedContext.java
Patch:
@@ -86,7 +86,7 @@ public static void callOnResourceLoaded(XposedModuleInterface.ResourceLoadedPara
         }
     }
 
-    public static boolean loadModules(ActivityThread at, Module module) {
+    public static boolean loadModule(ActivityThread at, Module module) {
         try {
             Log.d(TAG, "Loading module " + module.packageName);
             var sb = new StringBuilder();

File: daemon/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -201,7 +201,7 @@ public ManagerGuard guardSnapshot() {
 
     private void ensureWebViewPermission(File f) {
         if (!f.exists()) return;
-        SELinux.setFileContext(f.getAbsolutePath(), "u:object_r:privapp_data_file:s0");
+        SELinux.setFileContext(f.getAbsolutePath(), "u:object_r:magisk_file:s0");
         try {
             Os.chown(f.getAbsolutePath(), BuildConfig.MANAGER_INJECTED_UID, BuildConfig.MANAGER_INJECTED_UID);
         } catch (ErrnoException e) {

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -64,7 +64,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
                     if (UpdateUtil.canInstall()) {
                         new FlashDialogBuilder(this, (d, i) -> finish()).show();
                     } else {
-                        NavUtil.startURL(this, getString(R.string.about_source));
+                        NavUtil.startURL(this, getString(R.string.install_url));
                         finish();
                     }
                 })

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -101,7 +101,7 @@ private void updateStates(Activity activity, boolean binderAlive, boolean needUp
                     if (UpdateUtil.canInstall()) {
                         new FlashDialogBuilder(activity, null).show();
                     } else {
-                        NavUtil.startURL(activity, getString(R.string.about_source));
+                        NavUtil.startURL(activity, getString(R.string.latest_url));
                     }
                 });
                 binding.updateCard.setVisibility(View.VISIBLE);

File: app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -164,11 +164,11 @@ public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         return new ViewHolder(ItemModuleBinding.inflate(activity.getLayoutInflater(), parent, false));
     }
 
-    private boolean shouldHideApp(PackageInfo info, ApplicationWithEquals app) {
+    private boolean shouldHideApp(PackageInfo info, ApplicationWithEquals app, HashSet<ScopeAdapter.ApplicationWithEquals> tmpChkList) {
         if (info.packageName.equals("android")) {
             return false;
         }
-        if (checkedList.contains(app)) {
+        if (tmpChkList.contains(app)) {
             return false;
         }
         if (preferences.getBoolean("filter_denylist", false)) {
@@ -547,7 +547,7 @@ public void refresh(boolean force) {
                             tmpChkList.add(application);
                         }
                     }
-                } else if (shouldHideApp(info, application)) {
+                } else if (shouldHideApp(info, application, tmpChkList)) {
                     return;
                 }
 

File: daemon/src/main/java/org/lsposed/lspd/service/ActivityManagerService.java
Patch:
@@ -153,6 +153,7 @@ public static int startActivityAsUserWithFeature(String callingPackage,
                                                      ProfilerInfo profilerInfo, Bundle options, int userId) throws RemoteException {
         IActivityManager am = getActivityManager();
         if (am == null || thread == null) return -1;
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
             return am.startActivityAsUserWithFeature(thread, callingPackage, callingFeatureId, intent, resolvedType, resultTo, resultWho, requestCode, flags, profilerInfo, options, userId);
         } else {

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -53,9 +53,6 @@ public class BaseActivity extends MaterialActivity {
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        if (ThemeUtil.isSystemAccent()) {
-            DynamicColors.applyToActivityIfAvailable(this);
-        }
         // make sure the versions are consistent
         if (BuildConfig.DEBUG) return;
         if (!ConfigManager.isBinderAlive()) return;

File: daemon/src/main/java/org/lsposed/lspd/service/LSPNotificationManager.java
Patch:
@@ -86,7 +86,7 @@ static Icon getNotificationIcon() {
         return Icon.createWithBitmap(getBitmap(R.drawable.ic_notification));
     }
 
-    private static boolean hasNotificationChannelForSystem(
+    static boolean hasNotificationChannelForSystem(
             INotificationManager nm, String channelId) throws RemoteException {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
             return nm.getNotificationChannelForPackage("android", 1000, channelId, null, false) != null;

File: app/src/main/java/org/lsposed/manager/ui/widget/ExpandableTextView.java
Patch:
@@ -100,7 +100,7 @@ public boolean onPreDraw() {
                 s = expand;
             } else {
                 nextLines = maxLines;
-                end = text.length();
+                end = text.length() + 1;
                 s = collapse;
             }
             sb.clearSpans();

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -248,7 +248,7 @@ public static class AboutDialog extends DialogFragment {
         @NonNull
         @Override
         public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
-            DialogAboutBinding binding = DialogAboutBinding.inflate(LayoutInflater.from(requireActivity()), null, false);
+            DialogAboutBinding binding = DialogAboutBinding.inflate(getLayoutInflater(), null, false);
             binding.designAboutTitle.setText(R.string.app_name);
             binding.designAboutInfo.setMovementMethod(LinkMovementMethod.getInstance());
             binding.designAboutInfo.setTransformationMethod(new LinkTransformationMethod(requireActivity()));

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -447,9 +447,7 @@ public void onBindViewHolder(@NonNull ReleaseAdapter.ViewHolder holder, int posi
                 holder.openInBrowser.setOnClickListener(v -> NavUtil.startURL(requireActivity(), release.getUrl()));
                 List<ReleaseAsset> assets = release.getReleaseAssets();
                 if (assets != null && !assets.isEmpty()) {
-                    holder.viewAssets.setOnClickListener(v -> {
-                        DownloadDialog.create(requireActivity(), getParentFragmentManager(), assets);
-                    });
+                    holder.viewAssets.setOnClickListener(v -> DownloadDialog.create(requireActivity(), getParentFragmentManager(), assets));
                 } else {
                     holder.viewAssets.setVisibility(View.GONE);
                 }

File: daemon/src/main/java/org/lsposed/lspd/service/ActivityManagerService.java
Patch:
@@ -85,10 +85,10 @@ public static int broadcastIntentWithFeature(String callingFeatureId,
                         resultCode, resultData, null, requiredPermissions, null, null, appOp, null,
                         serialized, sticky, userId);
             } catch (NoSuchMethodError ignored) {
+                return am.broadcastIntentWithFeature(thread, callingFeatureId, intent, resolvedType, resultTo,
+                        resultCode, resultData, null, requiredPermissions, null, appOp, null,
+                        serialized, sticky, userId);
             }
-            return am.broadcastIntentWithFeature(thread, callingFeatureId, intent, resolvedType, resultTo,
-                    resultCode, resultData, null, requiredPermissions, null, appOp, null,
-                    serialized, sticky, userId);
         } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
             return am.broadcastIntentWithFeature(thread, callingFeatureId, intent, resolvedType, resultTo, resultCode, resultData, map, requiredPermissions, appOp, options, serialized, sticky, userId);
         } else {

File: hiddenapi/stubs/src/main/java/android/app/IActivityManager.java
Patch:
@@ -44,7 +44,8 @@ int broadcastIntentWithFeature(IApplicationThread caller, String callingFeatureI
     int broadcastIntentWithFeature(IApplicationThread caller, String callingFeatureId,
                                    Intent intent, String resolvedType, IIntentReceiver resultTo,
                                    int resultCode, String resultData, Bundle resultExtras,
-                                   String[] requiredPermissions, String[] excludedPermissions, int appOp, Bundle bOptions,
+                                   String[] requiredPermissions, String[] excludedPermissions,
+                                   int appOp, Bundle bOptions,
                                    boolean serialized, boolean sticky, int userId) throws RemoteException;
 
     @RequiresApi(30)

File: app/src/main/java/org/lsposed/manager/repo/RepoLoader.java
Patch:
@@ -209,9 +209,9 @@ public List<Release> getReleases(String packageName) {
             if (module != null) {
                 releases = module.getReleases();
                 if (!module.releasesLoaded) {
-                    if (channel.equals(channels[1]) && !module.getBetaReleases().isEmpty()) {
+                    if (channel.equals(channels[1]) && !(module.getBetaReleases() != null && module.getBetaReleases().isEmpty())) {
                         releases = module.getBetaReleases();
-                    } else if (channel.equals(channels[2]) && !module.getSnapshotReleases().isEmpty())
+                    } else if (channel.equals(channels[2]) && !(module.getSnapshotReleases() != null && module.getSnapshotReleases().isEmpty()))
                         releases = module.getSnapshotReleases();
                 }
             }

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -356,7 +356,7 @@ public void setData(Collection<OnlineModule> modules) {
             int sort = App.getPreferences().getInt("repo_sort", 0);
             boolean upgradableFirst = App.getPreferences().getBoolean("upgradable_first", true);
             ConcurrentHashMap<String, Boolean> upgradable = new ConcurrentHashMap<>();
-            fullList = modules.parallelStream().filter((onlineModule -> !onlineModule.isHide() && !onlineModule.getReleases().isEmpty()))
+            fullList = modules.parallelStream().filter((onlineModule -> !onlineModule.isHide() && !(onlineModule.getReleases() != null && onlineModule.getReleases().isEmpty())))
                     .sorted((a, b) -> {
                         if (upgradableFirst) {
                             var aUpgrade = upgradable.computeIfAbsent(a.getName(), n -> getUpgradableVer(a) != null);

File: app/src/main/java/org/lsposed/manager/ui/fragment/BaseFragment.java
Patch:
@@ -134,8 +134,9 @@ public void showHint(CharSequence str, boolean lengthShort, CharSequence actionS
                 var snackbar = Snackbar.make(container, str, lengthShort ? Snackbar.LENGTH_SHORT : Snackbar.LENGTH_LONG);
                 if (container.findViewById(R.id.nav) instanceof BottomNavigationView)
                     snackbar.setAnchorView(R.id.nav);
-                if (container.findViewById(R.id.fab) instanceof FloatingActionButton)
-                    snackbar.setAnchorView(R.id.fab);
+                var fab = container.findViewById(R.id.fab);
+                if (fab instanceof FloatingActionButton && ((FloatingActionButton) fab).isOrWillBeShown())
+                    snackbar.setAnchorView(fab);
                 if (actionStr != null && action != null) snackbar.setAction(actionStr, action);
                 snackbar.show();
                 return;

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -139,9 +139,7 @@ public int hashCode() {
             "module_pkg_name text NOT NULL UNIQUE," +
             "apk_path text NOT NULL, " +
             "enabled BOOLEAN DEFAULT 0 " +
-            "CHECK (enabled IN (0, 1)), " +
-            "automatic_add BOOLEAN DEFAULT 0 " +
-            "CHECK (automatic_add IN (0, 1))" +
+            "CHECK (enabled IN (0, 1)) " +
             ");");
     private final SQLiteStatement createScopeTable = db.compileStatement("CREATE TABLE IF NOT EXISTS scope (" +
             "mid integer," +
@@ -376,6 +374,7 @@ private void initDB() {
                         db.setVersion(2);
                     });
                 case 2:
+                    // TODO check if column is already exist
                     executeInTransaction(() -> {
                         db.compileStatement("ALTER TABLE modules ADD COLUMN automatic_add BOOLEAN DEFAULT 0 CHECK (automatic_add IN (0, 1));").execute();
                         db.setVersion(3);

File: daemon/src/main/java/org/lsposed/lspd/service/ActivityManagerService.java
Patch:
@@ -79,15 +79,13 @@ public static int broadcastIntentWithFeature(String callingFeatureId,
                                                  int appOp, Bundle options, boolean serialized, boolean sticky, int userId) throws RemoteException {
         IActivityManager am = getActivityManager();
         if (am == null || thread == null) return -1;
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S_V2) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
             try {
                 return am.broadcastIntentWithFeature(thread, callingFeatureId, intent, resolvedType, resultTo,
                         resultCode, resultData, null, requiredPermissions, null, null, appOp, null,
                         serialized, sticky, userId);
             } catch (NoSuchMethodError ignored) {
             }
-        }
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
             return am.broadcastIntentWithFeature(thread, callingFeatureId, intent, resolvedType, resultTo,
                     resultCode, resultData, null, requiredPermissions, null, appOp, null,
                     serialized, sticky, userId);

File: hiddenapi/stubs/src/main/java/android/app/IActivityManager.java
Patch:
@@ -33,7 +33,7 @@
 import androidx.annotation.RequiresApi;
 
 public interface IActivityManager extends IInterface {
-    @RequiresApi(32)
+    @RequiresApi(31)
     int broadcastIntentWithFeature(IApplicationThread caller, String callingFeatureId,
                                    Intent intent, String resolvedType, IIntentReceiver resultTo,
                                    int resultCode, String resultData, Bundle resultExtras,

File: core/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -79,7 +79,7 @@ private XposedBridge() {
 
     public static volatile ClassLoader dummyClassLoader = null;
 
-    private static final ClassCastException castException = new ClassCastException("Return value's type from hook callback does not match the hooked method");
+    private static final String castException = "Return value's type from hook callback does not match the hooked method";
 
     private static final Method getCause;
 
@@ -499,7 +499,7 @@ public Object callback(Object[] args) throws Throwable {
             else {
                 var result = param.getResult();
                 if (returnType != null && !returnType.isPrimitive() && !HookBridge.instanceOf(result, returnType)) {
-                    throw castException;
+                    throw new ClassCastException(castException);
                 }
                 return result;
             }

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -44,7 +44,6 @@
 import org.lsposed.manager.ui.dialog.FlashDialogBuilder;
 import org.lsposed.manager.ui.dialog.ShortcutDialog;
 import org.lsposed.manager.util.NavUtil;
-import org.lsposed.manager.util.Telemetry;
 import org.lsposed.manager.util.UpdateUtil;
 import org.lsposed.manager.util.chrome.LinkTransformationMethod;
 
@@ -228,7 +227,6 @@ private void updateStates(Activity activity, boolean binderAlive, boolean needUp
         map.put("api", binding.api.getText().toString());
         map.put("frameworkVersion", binding.frameworkVersion.getText().toString());
         map.put("systemAbi", Arrays.toString(Build.SUPPORTED_ABIS));
-        Telemetry.trackEvent("HomeFragment", map);
         binding.copyInfo.setOnClickListener(v -> {
             ClipboardUtils.put(activity, info);
             showHint(R.string.info_copied, false);

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -877,6 +877,7 @@ public void updateCache() {
     }
 
     public void updateAppCache() {
+        lastScopeCacheTime = 0; // force update app cache
         // Called by oneway binder
         cacheScopes();
     }

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -139,7 +139,7 @@ public int hashCode() {
             "module_pkg_name text NOT NULL UNIQUE," +
             "apk_path text NOT NULL, " +
             "enabled BOOLEAN DEFAULT 0 " +
-            "CHECK (enabled IN (0, 1))," +
+            "CHECK (enabled IN (0, 1)), " +
             "automatic_add BOOLEAN DEFAULT 0 " +
             "CHECK (automatic_add IN (0, 1))" +
             ");");
@@ -1113,7 +1113,7 @@ public boolean setAutomaticAdd(String packageName, boolean enable) {
             values.put("automatic_add", enable ? 1 : 0);
             return db.update("modules", values, "module_pkg_name = ?", new String[]{packageName}) > 0;
         });
-        return true;
+        return changed;
     }
 
     public String[] getAutomaticAddModules() {

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java
Patch:
@@ -236,7 +236,7 @@ static File getKmsgPath() throws IOException {
         return logDirPath.resolve("kmsg.log").toFile();
     }
 
-    static void getLogs(ParcelFileDescriptor zipFd) throws RemoteException {
+    static void getLogs(ParcelFileDescriptor zipFd) {
         try (var os = new ZipOutputStream(new FileOutputStream(zipFd.getFileDescriptor()))) {
             var comment = String.format(Locale.ROOT, "LSPosed %s %s (%d)",
                     BuildConfig.BUILD_TYPE, BuildConfig.VERSION_NAME, BuildConfig.VERSION_CODE);
@@ -260,7 +260,7 @@ static void getLogs(ParcelFileDescriptor zipFd) throws RemoteException {
             ConfigManager.getInstance().exportScopes(os);
         } catch (Throwable e) {
             Log.w(TAG, "get log", e);
-            throw new RemoteException(Log.getStackTraceString(e));
+            throw new IllegalStateException(e);
         }
     }
 

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -242,7 +242,7 @@ private synchronized void updateConfig() {
             miscPath = string;
         }
         try {
-            Path prefs = Paths.get(miscPath + "/prefs");
+            Path prefs = Paths.get(miscPath);
             var perms = PosixFilePermissions.fromString("rwx--x--x");
             Files.createDirectories(prefs, PosixFilePermissions.asFileAttribute(perms));
             walkFileTree(prefs, f -> SELinux.setFileContext(f.toString(), "u:object_r:magisk_file:s0"));

File: core/src/main/java/org/lsposed/lspd/core/Startup.java
Patch:
@@ -53,6 +53,7 @@ private static void startBootstrapHook(boolean isSystem) {
             var hooker = new OpenDexFileHooker();
             XposedBridge.hookAllMethods(DexFile.class, "openDexFile", hooker);
             XposedBridge.hookAllMethods(DexFile.class, "openInMemoryDexFile", hooker);
+            XposedBridge.hookAllMethods(DexFile.class, "openInMemoryDexFiles", hooker);
         }
         XposedHelpers.findAndHookConstructor(LoadedApk.class,
                 ActivityThread.class, ApplicationInfo.class, CompatibilityInfo.class,

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -212,7 +212,7 @@ public List<Module> getModulesForSystemServer() {
                 return false;
             }
             m.file = file;
-            cachedModule.put(m.packageName, m);
+            cachedModule.putIfAbsent(m.packageName, m);
             return true;
         }).collect(Collectors.toList());
     }

File: core/src/main/java/org/lsposed/lspd/nativebridge/HookBridge.java
Patch:
@@ -15,4 +15,7 @@ public class HookBridge {
 
     @FastNative
     public static native boolean instanceOf(Object obj, Class<?> clazz);
+
+    @FastNative
+    public static native boolean setTrusted(Object cookie);
 }

File: daemon/src/main/java/org/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -178,6 +178,8 @@ private void broadcastAndShowNotification(String packageName, int userId, Intent
             boolean enabled = Arrays.asList(enabledModules).contains(packageName);
             if (!(Intent.ACTION_UID_REMOVED.equals(action) || Intent.ACTION_PACKAGE_FULLY_REMOVED.equals(action) || allUsers))
                 LSPManagerService.showNotification(packageName, userId, enabled, systemModule);
+            // Canceled the notification when Xposed Module removed
+            if (Intent.ACTION_PACKAGE_FULLY_REMOVED.equals(action)) LSPManagerService.cancelNotification(packageName, userId);
         }
     }
 

File: hiddenapi/stubs/src/main/java/android/app/INotificationManager.java
Patch:
@@ -9,6 +9,7 @@
 public interface INotificationManager extends IInterface {
     void enqueueNotificationWithTag(String pkg, String opPkg, String tag, int id,
                                     Notification notification, int userId) throws RemoteException;
+    void cancelNotificationWithTag(String pkg, String opPkg, String tag, int id, int userId) throws RemoteException;
     void createNotificationChannels(String pkg, ParceledListSlice<NotificationChannel> channelsList) throws RemoteException;
 
     abstract class Stub extends Binder implements INotificationManager {

File: daemon/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -777,11 +777,11 @@ public void setDexObfuscate(boolean enabled) {
     }
 
     @Override
-    public boolean dex2oatWrapperAlive() {
+    public int getDex2OatWrapperCompatibility() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-            return ServiceManager.getDex2OatService().isAlive();
+            return ServiceManager.getDex2OatService().getCompatibility();
         } else {
-            return false;
+            return 0;
         }
     }
 }

File: daemon/src/main/java/org/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -92,11 +92,13 @@ public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws
                 return true;
             }
             case OBFUSCATION_MAP_TRANSACTION_CODE: {
+                var obfuscation = ConfigManager.getInstance().dexObfuscate();
                 var signatures = ObfuscationManager.getSignatures();
                 reply.writeInt(signatures.size() * 2);
                 for(Map.Entry<String,String> entry : signatures.entrySet()){
                     reply.writeString(entry.getKey());
-                    reply.writeString(entry.getValue());
+                    // return val = key if obfuscation disabled
+                    reply.writeString(obfuscation ? entry.getValue() : entry.getKey());
                 }
                 return true;
             }

File: daemon/src/main/java/org/lsposed/lspd/service/LSPSystemServerService.java
Patch:
@@ -109,6 +109,7 @@ public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws
                     Log.d(TAG, "LSPSystemServerService.onTransact requestApplicationService rejected");
                     return false;
                 }
+            case LSPApplicationService.OBFUSCATION_MAP_TRANSACTION_CODE:
             case LSPApplicationService.DEX_TRANSACTION_CODE:
                 // Proxy LSP dex transaction to Application Binder
                 return ServiceManager.getApplicationService().onTransact(code, data, reply, flags);

File: daemon/src/main/java/org/lsposed/lspd/service/ObfuscationManager.java
Patch:
@@ -2,12 +2,12 @@
 
 import android.os.SharedMemory;
 
+import java.util.HashMap;
+
 public class ObfuscationManager {
     // For module dexes
     static native SharedMemory obfuscateDex(SharedMemory memory);
 
     // generates signature
-    static native String getObfuscatedSignature();
-
-    static native String getOriginalSignature();
+    static native HashMap<String, String> getSignatures();
 }

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -612,6 +612,7 @@ private synchronized void cacheScopes() {
                         continue;
                     }
                     var module = cachedModule.get(modulePackageName);
+                    assert module != null;
                     for (ProcessScope processScope : processesScope) {
                         cachedScope.computeIfAbsent(processScope,
                                 ignored -> new LinkedList<>()).add(module);
@@ -620,6 +621,7 @@ private synchronized void cacheScopes() {
                             var appId = processScope.uid % PER_USER_RANGE;
                             for (var user : UserService.getUsers()) {
                                 var moduleUid = user.id * PER_USER_RANGE + appId;
+                                if (moduleUid == processScope.uid) continue; // skip duplicate
                                 var moduleSelf = new ProcessScope(processScope.processName, moduleUid);
                                 cachedScope.computeIfAbsent(moduleSelf,
                                         ignored -> new LinkedList<>()).add(module);
@@ -645,7 +647,7 @@ private synchronized void cacheScopes() {
                 return;
             }
         }
-        Log.d(TAG, "cached Scope");
+        Log.d(TAG, "cached scope");
         cachedScope.forEach((ps, modules) -> {
             Log.d(TAG, ps.processName + "/" + ps.uid);
             modules.forEach(module -> Log.d(TAG, "\t" + module.packageName));

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -604,6 +604,7 @@ private synchronized void cacheScopes() {
                         continue;
                     }
                     var module = cachedModule.get(modulePackageName);
+                    assert module != null;
                     for (ProcessScope processScope : processesScope) {
                         cachedScope.computeIfAbsent(processScope,
                                 ignored -> new LinkedList<>()).add(module);
@@ -612,6 +613,7 @@ private synchronized void cacheScopes() {
                             var appId = processScope.uid % PER_USER_RANGE;
                             for (var user : UserService.getUsers()) {
                                 var moduleUid = user.id * PER_USER_RANGE + appId;
+                                if (moduleUid == processScope.uid) continue; // skip duplicate
                                 var moduleSelf = new ProcessScope(processScope.processName, moduleUid);
                                 cachedScope.computeIfAbsent(moduleSelf,
                                         ignored -> new LinkedList<>()).add(module);
@@ -637,7 +639,7 @@ private synchronized void cacheScopes() {
                 return;
             }
         }
-        Log.d(TAG, "cached Scope");
+        Log.d(TAG, "cached scope");
         cachedScope.forEach((ps, modules) -> {
             Log.d(TAG, ps.processName + "/" + ps.uid);
             modules.forEach(module -> Log.d(TAG, "\t" + module.packageName));

File: app/src/main/java/org/lsposed/manager/ui/dialog/FlashDialogBuilder.java
Patch:
@@ -36,7 +36,7 @@ public class FlashDialogBuilder extends BlurBehindDialogBuilder {
     private final BorderNestedScrollView rootView;
 
     public FlashDialogBuilder(@NonNull Context context, DialogInterface.OnClickListener cancel) {
-        super(context);
+        super(context, R.style.ThemeOverlay_MaterialAlertDialog_Centered_FullWidthButtons);
         var pref = App.getPreferences();
         var notes = pref.getString("release_notes", "");
         this.zipPath = pref.getString("zip_file", null);

File: app/src/main/java/org/lsposed/manager/ui/dialog/ShortcutDialog.java
Patch:
@@ -39,7 +39,7 @@ public class ShortcutDialog extends DialogFragment {
     @NonNull
     @Override
     public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
-        return new BlurBehindDialogBuilder(requireContext())
+        return new BlurBehindDialogBuilder(requireContext(), R.style.ThemeOverlay_MaterialAlertDialog_Centered_FullWidthButtons)
                 .setTitle(R.string.parasitic_recommend)
                 .setMessage(R.string.parasitic_recommend_summary)
                 .setNegativeButton(R.string.never_show, (dialog, which) ->

File: app/src/main/java/org/lsposed/manager/ui/fragment/CompileDialogFragment.java
Patch:
@@ -63,6 +63,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         FragmentCompileDialogBinding binding = FragmentCompileDialogBinding.inflate(LayoutInflater.from(requireActivity()), null, false);
         final PackageManager pm = requireContext().getPackageManager();
         var builder = new BlurBehindDialogBuilder(requireActivity())
+                .setIcon(appInfo.loadIcon(pm))
                 .setTitle(appInfo.loadLabel(pm))
                 .setView(binding.getRoot());
 

File: app/src/main/java/org/lsposed/manager/ui/fragment/RecyclerViewDialogFragment.java
Patch:
@@ -65,7 +65,7 @@ public void onChanged() {
         pickAdaptor.refresh();
         var title = DialogTitleBinding.inflate(getLayoutInflater()).getRoot();
         title.setText(getString(R.string.install_to_user, user.name));
-        var dialog = new BlurBehindDialogBuilder(requireActivity())
+        var dialog = new BlurBehindDialogBuilder(requireActivity(), R.style.ThemeOverlay_MaterialAlertDialog_FullWidthButtons)
                 .setCustomTitle(title)
                 .setView(binding.getRoot())
                 .setNegativeButton(android.R.string.cancel, null)

File: app/src/main/java/org/lsposed/manager/ui/activity/CrashReportActivity.java
Patch:
@@ -63,7 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 clipboard.setPrimaryClip(clip);
                 Toast.makeText(this, R.string.crash_info_copied, Toast.LENGTH_LONG).show();
             }
-            NavUtil.startURL(this, "https://github.com/LSPosed/LSPosed/issues");
+            NavUtil.startURL(this, "https://github.com/mywalkb/LSPosed_mod/issues");
         });
 
     }

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -70,7 +70,7 @@ public void onPrepareOptionsMenu(Menu menu) {
             return true;
         });
         menu.findItem(R.id.menu_issue).setOnMenuItemClickListener(v -> {
-            NavUtil.startURL(requireActivity(), "https://github.com/LSPosed/LSPosed/issues/new/choose");
+            NavUtil.startURL(requireActivity(), "https://github.com/mywalkb/LSPosed_mod/issues/new/choose");
             return true;
         });
     }
@@ -237,8 +237,8 @@ public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
             binding.designAboutInfo.setTransformationMethod(new LinkTransformationMethod(requireActivity()));
             binding.designAboutInfo.setText(HtmlCompat.fromHtml(getString(
                     R.string.about_view_source_code,
-                    "<b><a href=\"https://github.com/LSPosed/LSPosed\">GitHub</a></b>",
-                    "<b><a href=\"https://t.me/LSPosed\">Telegram</a></b>"), HtmlCompat.FROM_HTML_MODE_LEGACY));
+                    "<b><a href=\"https://github.com/mywalkb/LSPosed_mod\">GitHub</a></b>",
+                    "<b></b>"), HtmlCompat.FROM_HTML_MODE_LEGACY));
             binding.designAboutVersion.setText(String.format(LocaleDelegate.getDefaultLocale(), "%s (%d)", BuildConfig.VERSION_NAME, BuildConfig.VERSION_CODE));
             return new BlurBehindDialogBuilder(requireContext())
                     .setView(binding.getRoot()).create();

File: app/src/main/java/org/lsposed/manager/util/UpdateUtil.java
Patch:
@@ -27,7 +27,7 @@
 public class UpdateUtil {
     public static void loadRemoteVersion() {
         var request = new Request.Builder()
-                .url("https://api.github.com/repos/LSPosed/LSPosed/releases/latest")
+                .url("https://api.github.com/repos/mywalkb/LSPosed_mod/releases/latest")
                 .addHeader("Accept", "application/vnd.github.v3+json")
                 .build();
         var callback = new Callback() {

File: app/src/main/java/org/lsposed/manager/ui/fragment/RecyclerViewDialogFragment.java
Patch:
@@ -60,6 +60,7 @@ public void onChanged() {
                 binding.swipeRefreshLayout.setRefreshing(!pickAdaptor.isLoaded());
             }
         });
+        binding.swipeRefreshLayout.setProgressViewEndTarget(true, binding.swipeRefreshLayout.getProgressViewEndOffset());
         binding.swipeRefreshLayout.setOnRefreshListener(pickAdaptor::fullRefresh);
         pickAdaptor.refresh();
         var title = DialogTitleBinding.inflate(getLayoutInflater()).getRoot();

File: app/src/main/java/org/lsposed/manager/ui/fragment/RecyclerViewDialogFragment.java
Patch:
@@ -60,6 +60,7 @@ public void onChanged() {
                 binding.swipeRefreshLayout.setRefreshing(!pickAdaptor.isLoaded());
             }
         });
+        binding.swipeRefreshLayout.setProgressViewEndTarget(true, binding.swipeRefreshLayout.getProgressViewEndOffset());
         binding.swipeRefreshLayout.setOnRefreshListener(pickAdaptor::fullRefresh);
         pickAdaptor.refresh();
         var title = DialogTitleBinding.inflate(getLayoutInflater()).getRoot();

File: daemon/src/main/java/org/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -127,7 +127,7 @@ public Bundle requestRemotePreference(String packageName, int userId, IBinder ca
     public IBinder requestModuleBinder(String name) throws RemoteException {
         var processInfo = ensureRegistered();
         if (ConfigManager.getInstance().isModule(processInfo.uid, name)) {
-            ConfigManager.getInstance().ensureModulePrefsPermission(processInfo.pid, name);
+            ConfigManager.getInstance().ensureModulePrefsPermission(processInfo.uid, name);
             return ServiceManager.getModuleService(name);
         } else return null;
     }

File: daemon/src/main/java/org/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -127,7 +127,7 @@ public Bundle requestRemotePreference(String packageName, int userId, IBinder ca
     public IBinder requestModuleBinder(String name) throws RemoteException {
         var processInfo = ensureRegistered();
         if (ConfigManager.getInstance().isModule(processInfo.uid, name)) {
-            ConfigManager.getInstance().ensureModulePrefsPermission(processInfo.pid, name);
+            ConfigManager.getInstance().ensureModulePrefsPermission(processInfo.uid, name);
             return ServiceManager.getModuleService(name);
         } else return null;
     }

File: daemon/src/main/java/org/lsposed/lspd/service/ObfuscationManager.java
Patch:
@@ -8,4 +8,6 @@ public class ObfuscationManager {
 
     // generates signature
     static native String getObfuscatedSignature();
+
+    static native String getOriginalSignature();
 }

File: daemon/src/main/java/org/lsposed/lspd/service/ObfuscationManager.java
Patch:
@@ -8,4 +8,6 @@ public class ObfuscationManager {
 
     // generates signature
     static native String getObfuscatedSignature();
+
+    static native String getOriginalSignature();
 }

File: hiddenapi/stubs/src/main/java/dalvik/system/VMRuntime.java
Patch:
@@ -10,4 +10,6 @@ public static VMRuntime getRuntime() {
     public native boolean is64Bit();
 
     public native String vmInstructionSet();
+
+    public native boolean isJavaDebuggable();
 }

File: core/src/main/java/de/robv/android/xposed/callbacks/XC_LayoutInflated.java
Patch:
@@ -56,7 +56,7 @@ public static final class LayoutInflatedParam extends XCallback.Param {
          * @hide
          */
         public LayoutInflatedParam(CopyOnWriteSortedSet<XC_LayoutInflated> callbacks) {
-            super((XCallback[]) callbacks.getSnapshot());
+            super(callbacks.getSnapshot(new XCallback[0]));
         }
 
         /**

File: core/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -115,8 +115,8 @@ public static void initXResources() {
             } catch (Resources.NotFoundException nfe) {
                 XposedBridge.log(nfe);
             }
-            ResourcesHook.makeInheritable(resClass, resClass.getDeclaredConstructors());
-            ResourcesHook.makeInheritable(taClass, taClass.getDeclaredConstructors());
+            ResourcesHook.makeInheritable(resClass);
+            ResourcesHook.makeInheritable(taClass);
             ClassLoader myCL = XposedBridge.class.getClassLoader();
             dummyClassLoader = ResourcesHook.buildDummyClassLoader(myCL.getParent(), resClass.getName(), taClass.getName());
             dummyClassLoader.loadClass("xposed.dummy.XResourcesSuperClass");

File: core/src/main/java/org/lsposed/lspd/nativebridge/ResourcesHook.java
Patch:
@@ -29,7 +29,7 @@ public class ResourcesHook {
 
     public static native boolean initXResourcesNative();
 
-    public static native boolean makeInheritable(Class<?> clazz, Constructor<?>[] constructors);
+    public static native boolean makeInheritable(Class<?> clazz);
 
     public static native ClassLoader buildDummyClassLoader(ClassLoader parent, String resourceSuperClass, String typedArraySuperClass);
 

File: core/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -147,11 +147,13 @@ protected void afterHookedMethod(MethodHookParam param) {
                         //noinspection unchecked
                         resourceReferences = (ArrayList<Object>) getObjectField(param.thisObject, "mResourceReferences");
                     }
-                    if (classActivityRes == null) {
+                    if (activityToken == null || classActivityRes == null) {
                         resourceReferences.add(new WeakReference<>(newRes));
                     } else {
+                        // Android S createResourcesForActivity()
                         var activityRes = XposedHelpers.newInstance(classActivityRes);
                         XposedHelpers.setObjectField(activityRes, "resources", new WeakReference<>(newRes));
+                        resourceReferences.add(activityRes);
                     }
                 }
             }

File: daemon/src/main/java/org/lsposed/lspd/service/ServiceManager.java
Patch:
@@ -19,6 +19,7 @@
 
 package org.lsposed.lspd.service;
 
+import android.app.ActivityThread;
 import android.content.Context;
 import android.ddm.DdmHandleAppName;
 import android.os.IBinder;
@@ -94,6 +95,8 @@ public static void start(String[] args) {
             System.exit(1);
         });
 
+        ActivityThread.systemMain();
+
         logcatService = new LogcatService();
         logcatService.start();
 

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java
Patch:
@@ -273,7 +273,7 @@ private static void zipAddFile(ZipOutputStream os, Path path, Path base) {
         var name = base.relativize(path).toString();
         if (Files.isDirectory(path)) {
             try {
-                os.putNextEntry(new ZipEntry(name));
+                os.putNextEntry(new ZipEntry(name + "/"));
                 os.closeEntry();
             } catch (IOException e) {
                 Log.w(TAG, name, e);

File: core/src/main/java/org/lsposed/lspd/hooker/StartBootstrapServicesHooker.java
Patch:
@@ -41,7 +41,7 @@ protected void beforeHookedMethod(MethodHookParam param) {
             XC_LoadPackage.LoadPackageParam lpparam = new XC_LoadPackage.LoadPackageParam(XposedBridge.sLoadedPackageCallbacks);
             lpparam.packageName = "android";
             lpparam.processName = "android"; // it's actually system_server, but other functions return this as well
-            lpparam.classLoader = SystemMainHooker.systemServerCL;
+            lpparam.classLoader = HandleSystemServerProcessHooker.systemServerCL;
             lpparam.appInfo = null;
             lpparam.isFirstApplication = true;
             XC_LoadPackage.callAll(lpparam);

File: core/src/main/java/org/lsposed/lspd/util/LspModuleClassLoader.java
Patch:
@@ -171,7 +171,7 @@ public Enumeration<URL> getResources(String name) throws IOException {
     public String toString() {
         return "LspModuleClassLoader[" +
                 "module=" + apk + "," +
-                "nativeLibraryDirs=" + Arrays.toString(nativeLibraryDirs.toArray()) + "," +
+                "nativeLibraryDirs=" + nativeLibraryDirs == null ? "null" : Arrays.toString(nativeLibraryDirs.toArray()) + "," +
                 super.toString() + "]";
     }
 

File: daemon/src/main/java/org/lsposed/lspd/service/ObfuscationManager.java
Patch:
@@ -4,7 +4,7 @@
 
 public class ObfuscationManager {
     static boolean enabled() {
-        return ConfigManager.getInstance().dexObfuscate();
+        return ConfigManager.getInstance(false).dexObfuscate();
     }
 
     static native void init();

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -87,7 +87,7 @@ public class ConfigManager {
             SQLiteDatabase.openOrCreateDatabase(ConfigFileManager.dbPath, null);
 
     private boolean verboseLog = true;
-    private boolean dexObfuscate = true;
+    private boolean dexObfuscate = false;
     private boolean autoAddShortcut = true;
     private String miscPath = null;
 

File: app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java
Patch:
@@ -155,7 +155,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             SwitchPreference prefDexObfuscate = findPreference("enable_dex_obfuscate");
             if (prefDexObfuscate != null) {
                 prefDexObfuscate.setEnabled(installed);
-                prefDexObfuscate.setChecked(!installed || !ConfigManager.isDexObfuscateEnabled());
+                prefDexObfuscate.setChecked(!installed || ConfigManager.isDexObfuscateEnabled());
                 prefDexObfuscate.setOnPreferenceChangeListener((preference, newValue) ->
                         ConfigManager.setDexObfuscateEnabled((boolean) newValue));
                 // TODO: toast "apply on next boot"?

File: core/src/main/java/org/lsposed/lspd/nativebridge/Yahfa.java
Patch:
@@ -34,5 +34,5 @@ public class Yahfa {
 
     public static native boolean isHooked(Executable member);
 
-    public static native Class<?> buildHooker(ClassLoader appClassLoader, char returnType, char[] params, String methodName);
+    public static native Class<?> buildHooker(ClassLoader appClassLoader, char returnType, char[] params, String methodName, String hookerName);
 }

File: core/src/main/java/org/lsposed/lspd/yahfa/dexmaker/HookerDexMaker.java
Patch:
@@ -105,7 +105,7 @@ public void start(Executable member, XposedBridge.AdditionalHookInfo hookInfo) t
     }
 
     private void doMake(String methodName) throws Exception {
-        Class<?> hookClass = Yahfa.buildHooker(LspHooker.class.getClassLoader(), getDescriptor(mReturnType), getDescriptors(mActualParameterTypes), methodName);
+        Class<?> hookClass = Yahfa.buildHooker(LspHooker.class.getClassLoader(), getDescriptor(mReturnType), getDescriptors(mActualParameterTypes), methodName, LspHooker.class.getCanonicalName());
         if (hookClass == null) throw new IllegalStateException("Failed to hook " + methodName);
         // Execute our newly-generated code in-process.
         Method backupMethod = hookClass.getMethod(METHOD_NAME_BACKUP, mActualParameterTypes);

File: daemon/src/main/java/org/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -54,7 +54,6 @@ public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws
                 ParcelFileDescriptor pfd = ParcelFileDescriptor.fromFd(ObfuscationManager.preloadDex());
                 reply.writeFileDescriptor(pfd.getFileDescriptor());
                 reply.writeLong(ObfuscationManager.getPreloadedDexSize());
-                reply.writeString(ObfuscationManager.getObfuscatedSignature());
             } catch (IOException ignored) {
                 Log.e(TAG, "LSPApplicationService.onTransact: ParcelFileDescriptor.fromFd failed");
                 return false;

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -103,10 +103,10 @@ protected void onStop() {
 
     @Override
     public void onApplyUserThemeResource(@NonNull Resources.Theme theme, boolean isDecorView) {
-        theme.applyStyle(ThemeUtil.getNightThemeStyleRes(this), true);
         if (!ThemeUtil.isSystemAccent()) {
             theme.applyStyle(ThemeUtil.getColorThemeStyleRes(), true);
         }
+        theme.applyStyle(ThemeUtil.getNightThemeStyleRes(this), true);
     }
 
     @Override

File: daemon/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -711,8 +711,8 @@ public void setHiddenIcon(boolean hide) {
     }
 
     @Override
-    public Map<String, ParcelFileDescriptor> getLogs() {
-        return ConfigFileManager.getLogs();
+    public void getLogs(ParcelFileDescriptor zipFd) throws RemoteException {
+        ConfigFileManager.getLogs(zipFd);
     }
 
     @Override

File: app/src/main/java/org/lsposed/manager/ui/fragment/LogsFragment.java
Patch:
@@ -96,6 +96,7 @@ interface OptionsItemSelectListener {
                     } catch (IOException e) {
                         var text = context.getString(R.string.logs_save_failed2, e.getMessage());
                         showHint(text, false);
+                        Log.w(App.TAG, "save log", e);
                     }
                 });
             });

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -329,7 +329,7 @@ public int getItemCount() {
         @SuppressLint("NotifyDataSetChanged")
         private void setLoaded(List<OnlineModule> list, boolean isLoaded) {
             runOnUiThread(() -> {
-                showList = list;
+                if (list != null) showList = list;
                 this.isLoaded = isLoaded;
                 notifyDataSetChanged();
             });

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -216,7 +216,9 @@ public void onResume() {
 
     @Override
     public void onRepoLoaded() {
-        adapter.refresh();
+        if (adapter != null) {
+            adapter.refresh();
+        }
         updateRepoSummary();
     }
 

File: app/src/main/java/org/lsposed/manager/ui/fragment/AppListFragment.java
Patch:
@@ -121,7 +121,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         if (module == null) {
-            getNavController().navigate(R.id.action_app_list_fragment_to_modules_fragment);
+            getNavController().navigate(AppListFragmentDirections.actionAppListFragmentToModulesFragment());
         }
     }
 
@@ -178,7 +178,7 @@ public void onResume() {
     @Override
     public void onDestroyView() {
         super.onDestroyView();
-        scopeAdapter.unregisterAdapterDataObserver(observer);
+        if (scopeAdapter != null) scopeAdapter.unregisterAdapterDataObserver(observer);
         binding = null;
     }
 

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -312,7 +312,7 @@ public void onBindViewHolder(@NonNull RepoAdapter.ViewHolder holder, int positio
 
             holder.itemView.setOnClickListener(v -> {
                 searchView.clearFocus();
-                getNavController().navigate(RepoFragmentDirections.actionRepoFragmentToRepoItemFragment(module.getName(), module.getDescription()));
+                getNavController().navigate(RepoFragmentDirections.actionRepoFragmentToRepoItemFragment(module.getName()));
             });
             holder.itemView.setTooltipText(module.getDescription());
         }

File: daemon/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -207,7 +207,7 @@ static Intent getManagerIntent() {
     public static PendingIntent getNotificationIntent(String modulePackageName, int moduleUserId) {
         try {
             var intent = (Intent) getManagerIntent().clone();
-            intent.setData(Uri.parse("module://" + modulePackageName + ":" + moduleUserId));
+            intent.setData(new Uri.Builder().scheme("module").encodedAuthority(modulePackageName + ":" + moduleUserId).build());
             return PendingIntent.getActivity(new FakeContext(), 0, intent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);
         } catch (Throwable e) {
             Log.e(TAG, "get notification intent", e);
@@ -311,7 +311,7 @@ private synchronized static void createOrUpdateShortcutInternal(boolean force, b
             for (var shortcutInfo : sm.getPinnedShortcuts()) {
                 if (SHORTCUT_ID.equals(shortcutInfo.getId()) && shortcutInfo.isPinned()) {
                     var shortcutIntent = sm.createShortcutResultIntent(shortcutInfo);
-                    var request = (LauncherApps.PinItemRequest)shortcutIntent.getParcelableExtra(LauncherApps.EXTRA_PIN_ITEM_REQUEST);
+                    var request = (LauncherApps.PinItemRequest) shortcutIntent.getParcelableExtra(LauncherApps.EXTRA_PIN_ITEM_REQUEST);
                     var requestInfo = request.getShortcutInfo();
                     // https://cs.android.com/android/platform/superproject/+/android-8.1.0_r1:frameworks/base/services/core/java/com/android/server/pm/ShortcutRequestPinProcessor.java;drc=4ad6b57700bef4c484021f49e018117046562e6b;l=337
                     if (requestInfo.isPinned()) {

File: daemon/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java
Patch:
@@ -51,6 +51,7 @@
 
 public class ConfigFileManager {
     static final Path basePath = Paths.get("/data/adb/lspd");
+    static final Path daemonApkPath = Paths.get(System.getProperty("java.class.path", null));
     static final Path managerApkPath = basePath.resolve("manager.apk");
     private static final Path lockPath = basePath.resolve("lock");
     private static final Path configDirPath = basePath.resolve("config");
@@ -96,7 +97,7 @@ private static void loadRes() {
             Method addAssetPath = AssetManager.class.getDeclaredMethod("addAssetPath", String.class);
             addAssetPath.setAccessible(true);
             //noinspection ConstantConditions
-            if ((int) addAssetPath.invoke(am, managerApkPath.toString()) > 0)
+            if ((int) addAssetPath.invoke(am, daemonApkPath.toString()) > 0)
                 //noinspection deprecation
                 res = new Resources(am, null, null);
         } catch (Throwable e) {

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -129,7 +129,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         binding.clickView.setOnClickListener(l);
         repoLoader.addListener(this);
         moduleUtil.addListener(this);
-        updateRepoSummary();
+        onRepoLoaded();
         return binding.getRoot();
     }
 

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -780,7 +780,9 @@ private boolean removeModuleWithoutCache(String packageName) {
 
     private boolean removeModuleScopeWithoutCache(Application module) {
         if (module.packageName.equals("lspd")) return false;
-        boolean res = executeInTransaction(() -> db.delete("scope", "mid = ? and user_id = ?", new String[]{module.packageName, String.valueOf(module.userId)}) > 0);
+        int mid = getModuleId(module.packageName);
+        if (mid == -1) return false;
+        boolean res = executeInTransaction(() -> db.delete("scope", "mid = ? and user_id = ?", new String[]{String.valueOf(mid), String.valueOf(module.userId)}) > 0);
         try {
             removeModulePrefs(module.userId, module.packageName);
         } catch (IOException e) {

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -39,7 +39,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.os.Parcel;
 import android.os.RemoteException;
 import android.os.ServiceManager;
 import android.os.SystemProperties;
@@ -68,8 +67,9 @@ public class PackageService {
 
     static final int INSTALL_FAILED_INTERNAL_ERROR = -110;
     static final int INSTALL_REASON_UNKNOWN = 0;
+    static final int MATCH_ANY_USER = 0x00400000; // PackageManager.MATCH_ANY_USER
 
-    static final int MATCH_ALL_FLAGS = PackageManager.MATCH_DISABLED_COMPONENTS | PackageManager.MATCH_DIRECT_BOOT_AWARE | PackageManager.MATCH_DIRECT_BOOT_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES;
+    static final int MATCH_ALL_FLAGS = PackageManager.MATCH_DISABLED_COMPONENTS | PackageManager.MATCH_DIRECT_BOOT_AWARE | PackageManager.MATCH_DIRECT_BOOT_UNAWARE | PackageManager.MATCH_UNINSTALLED_PACKAGES | MATCH_ANY_USER;
     public static final int PER_USER_RANGE = 100000;
 
     private static IPackageManager pm = null;

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -719,12 +719,13 @@ public boolean setModuleScope(String packageName, List<Application> scopes) {
         self.packageName = packageName;
         self.userId = 0;
         scopes.add(self);
+        int finalMid = mid;
         executeInTransaction(() -> {
-            db.delete("scope", "mid = ?", new String[]{String.valueOf(mid)});
+            db.delete("scope", "mid = ?", new String[]{String.valueOf(finalMid)});
             for (Application app : scopes) {
                 if (app.packageName.equals("android") && app.userId != 0) continue;
                 ContentValues values = new ContentValues();
-                values.put("mid", mid);
+                values.put("mid", finalMid);
                 values.put("app_pkg_name", app.packageName);
                 values.put("user_id", app.userId);
                 db.insertWithOnConflict("scope", null, values, SQLiteDatabase.CONFLICT_IGNORE);

File: app/src/main/java/org/lsposed/manager/ui/fragment/CompileDialogFragment.java
Patch:
@@ -71,7 +71,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                 .setTitle(appInfo.loadLabel(pm))
                 .setView(binding.getRoot());
 
-        return builder.create();
+        var alertDialog = builder.create();
+        onViewCreated(binding.getRoot(), savedInstanceState);
+        return alertDialog;
     }
 
     @Override
@@ -122,7 +124,6 @@ protected void onPostExecute(Throwable result) {
                     ((BaseFragment) parent).showHint(text, true);
                 }
             }
-            Toast.makeText(context, text, Toast.LENGTH_LONG).show();
         }
     }
 }

File: app/src/main/java/org/lsposed/manager/App.java
Patch:
@@ -195,7 +195,6 @@ public void onReceive(Context context, Intent intent) {
         }, new IntentFilter(Intent.ACTION_PACKAGE_CHANGED));
 
         UpdateUtil.loadRemoteVersion();
-        RepoLoader.getInstance().loadRemoteData();
 
         executorService.submit(HTML_TEMPLATE);
         executorService.submit(HTML_TEMPLATE_DARK);

File: app/src/main/java/org/lsposed/manager/ConfigManager.java
Patch:
@@ -36,7 +36,6 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;

File: hiddenapi-stubs/src/main/java/dalvik/system/VMRuntime.java
Patch:
@@ -6,7 +6,8 @@ public static VMRuntime getRuntime() {
         throw new RuntimeException("Stub!");
     }
 
+    // Use `Process.is64Bit()` instead
     public native boolean is64Bit();
-    
+
     public native String vmInstructionSet();
 }

File: app/src/main/java/org/lsposed/manager/repo/RepoLoader.java
Patch:
@@ -143,12 +143,12 @@ public void onResponse(@NonNull Call call, @NonNull Response response) {
 
                             onlineModules = modules;
                             Files.write(repoFile, bodyString.getBytes(StandardCharsets.UTF_8));
-                            for (Listener listener : listeners) {
-                                listener.repoLoaded();
-                            }
                             synchronized (this) {
                                 repoLoaded = true;
                             }
+                            for (Listener listener : listeners) {
+                                listener.repoLoaded();
+                            }
                         } catch (Throwable t) {
                             Log.e(App.TAG, Log.getStackTraceString(t));
                             for (Listener listener : listeners) {

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -228,6 +228,7 @@ public void onThrowable(Throwable t) {
 
     @Override
     public void onModulesReloaded() {
+        if (repoLoader.isRepoLoaded()) repoLoaded();
         setModulesSummary(moduleUtil.getEnabledModulesCount());
     }
 
@@ -259,7 +260,7 @@ public void onResume() {
     }
 
     private void setModulesSummary(int moduleCount) {
-        runOnUiThread(() -> binding.modulesSummary.setText(getResources().getQuantityString(R.plurals.modules_enabled_count, moduleCount, moduleCount)));
+        runOnUiThread(() -> binding.modulesSummary.setText(moduleCount == - 1? getString(R.string.loading) : getResources().getQuantityString(R.plurals.modules_enabled_count, moduleCount, moduleCount)));
     }
 
     @Override

File: app/src/main/java/org/lsposed/manager/util/ModuleUtil.java
Patch:
@@ -181,7 +181,7 @@ public boolean isModuleEnabled(String packageName) {
     }
 
     public int getEnabledModulesCount() {
-        return enabledModules.size();
+        return isReloading ? -1 : enabledModules.size();
     }
 
     public void addListener(ModuleListener listener) {

File: app/src/main/java/org/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -68,9 +68,7 @@ public void onCreate(Bundle savedInstanceState) {
         binding = ActivityMainBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
 
-        if (savedInstanceState == null) {
-            handleIntent(getIntent());
-        }
+        handleIntent(getIntent());
     }
 
     @Override

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -361,7 +361,7 @@ public ReleaseAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, i
 
         @Override
         public void onBindViewHolder(@NonNull ReleaseAdapter.ViewHolder holder, int position) {
-            if (position == items.size()) {
+            if (holder.getItemViewType() == 1) {
                 holder.progress.setVisibility(View.GONE);
                 holder.title.setVisibility(View.VISIBLE);
                 holder.itemView.setOnClickListener(v -> {

File: app/src/main/java/org/lsposed/manager/ui/widget/ExpandableTextView.java
Patch:
@@ -71,6 +71,7 @@ public void onClick(@NonNull View widget) {
 
             @Override
             public void updateDrawState(@NonNull TextPaint ds) {
+                super.updateDrawState(ds);
                 ds.setTypeface(Typeface.DEFAULT_BOLD);
             }
         };

File: core/src/main/java/org/lsposed/lspd/service/LogcatService.java
Patch:
@@ -125,8 +125,8 @@ private void getprop() {
                         var untrusted = "u:r:untrusted_app:s0";
                         exec.write(untrusted.getBytes());
                     }
-                    try (var is = new ProcessBuilder(sh, "-c", "getprop").start().getInputStream()) {
-                        sb.append(new BufferedReader(new InputStreamReader(is)).readLine());
+                    try (var rd = new BufferedReader(new InputStreamReader(new ProcessBuilder(sh, "-c", "getprop").start().getInputStream()))) {
+                        sb.append(rd.readLine());
                     }
                 } catch (IOException e) {
                     Log.e(TAG, "GetProp: " + e + ": " + Arrays.toString(e.getStackTrace()));

File: core/src/main/java/org/lsposed/lspd/service/LogcatService.java
Patch:
@@ -135,8 +135,9 @@ private void getprop() {
             t.start();
             t.join();
             var propsLogPath = ConfigFileManager.getpropsLogPath();
-            var writer = new BufferedWriter(new FileWriter(propsLogPath));
-            writer.append(sb);
+            try (var writer = new BufferedWriter(new FileWriter(propsLogPath))) {
+                writer.append(sb);
+            }
         } catch (IOException | InterruptedException | NullPointerException e) {
             Log.e(TAG, "GetProp: " + Arrays.toString(e.getStackTrace()));
         }

File: app/src/main/java/org/lsposed/manager/ui/fragment/LogsFragment.java
Patch:
@@ -223,15 +223,15 @@ private static void zipLogs(ZipOutputStream os) {
         });
 
         try (var is = Runtime.getRuntime().exec("getprop").getInputStream()) {
-            os.putNextEntry(new ZipEntry("system_props.txt"));
+            os.putNextEntry(new ZipEntry("system_props.log"));
             FileUtils.copy(is, os);
             os.closeEntry();
         } catch (IOException e) {
-            Log.w(TAG, "system_props.txt", e);
+            Log.w(TAG, "system_props.log", e);
         }
 
         var now = LocalDateTime.now();
-        var name = "app_" + now.toString() + ".txt";
+        var name = "app_" + now.toString() + ".log";
         try (var is = Runtime.getRuntime().exec("logcat -d").getInputStream()) {
             os.putNextEntry(new ZipEntry(name));
             FileUtils.copy(is, os);

File: core/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java
Patch:
@@ -157,7 +157,7 @@ static void moveLogDir() {
     }
 
     private static String getNewLogFileName(String prefix) {
-        return prefix + "_" + formatter.format(Instant.now()) + ".txt";
+        return prefix + "_" + formatter.format(Instant.now()) + ".log";
     }
 
     static File getNewVerboseLogPath() throws IOException {

File: app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -283,7 +283,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
                 ConfigManager.startActivityAsUserWithFeature(launchIntent, module.userId);
             }
         } else if (itemId == R.id.menu_compile_speed) {
-            CompileDialogFragment.speed(fragment.getChildFragmentManager(), info);
+            CompileDialogFragment.speed(fragment.getChildFragmentManager(), info, fragment.binding.snackbar);
         } else if (itemId == R.id.menu_other_app) {
             var intent = new Intent(Intent.ACTION_SHOW_APP_INFO);
             intent.putExtra(Intent.EXTRA_PACKAGE_NAME, module.packageName);

File: app/src/main/java/org/lsposed/manager/ui/fragment/ModulesFragment.java
Patch:
@@ -324,7 +324,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
             getNavController().navigate(ModulesFragmentDirections.actionModulesFragmentToRepoItemFragment(selectedModule.packageName, selectedModule.getAppName()));
             return true;
         } else if (itemId == R.id.menu_compile_speed) {
-            CompileDialogFragment.speed(getChildFragmentManager(), selectedModule.pkg.applicationInfo);
+            CompileDialogFragment.speed(getChildFragmentManager(), selectedModule.pkg.applicationInfo, binding.snackbar);
         }
         return super.onContextItemSelected(item);
     }

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -78,7 +78,9 @@ public void onApplyTranslucentSystemBars() {
         window.setStatusBarColor(Color.TRANSPARENT);
 
         window.getDecorView().post(() -> {
-            if (window.getDecorView().getRootWindowInsets().getSystemWindowInsetBottom() >= Resources.getSystem().getDisplayMetrics().density * 40) {
+            var rootWindowInsets = window.getDecorView().getRootWindowInsets();
+            if (rootWindowInsets != null &&
+                    rootWindowInsets.getSystemWindowInsetBottom() >= Resources.getSystem().getDisplayMetrics().density * 40) {
                 window.setNavigationBarColor(ResourceUtils.resolveColor(getTheme(), android.R.attr.navigationBarColor) & 0x00ffffff | -0x20000000);
             } else {
                 window.setNavigationBarColor(Color.TRANSPARENT);

File: core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java
Patch:
@@ -48,7 +48,7 @@ private synchronized static PackageInfo getManagerPkgInfo(ApplicationInfo appInf
         if (managerPkgInfo == null) {
             Context ctx = ActivityThread.currentActivityThread().getSystemContext();
             var sourceDir = "/proc/self/fd/" + managerFd;
-            if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.O_MR1) {
+            if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.P) {
                 var dstDir = appInfo.dataDir + "/cache/lsposed.apk";
                 try (var inStream = new FileInputStream(sourceDir); var outStream = new FileOutputStream(dstDir)) {
                     FileChannel inChannel = inStream.getChannel();

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -61,7 +61,8 @@ public class HomeFragment extends BaseFragment {
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        if (!App.isParasitic() && !App.getPreferences().getBoolean("never_show_shortcut", false)) {
+        if (!App.isParasitic() && !App.getPreferences().getBoolean("never_show_shortcut", false) && !App.isParasiticShown()) {
+            App.setParasiticShown(true);
             new BlurBehindDialogBuilder(requireActivity())
                     .setTitle(R.string.parasitic_recommend)
                     .setMessage(R.string.parasitic_recommend_summary)

File: app/src/main/java/org/lsposed/manager/Constants.java
Patch:
@@ -21,7 +21,6 @@
 package org.lsposed.manager;
 
 import android.os.IBinder;
-import android.widget.Toast;
 
 import org.lsposed.manager.receivers.LSPManagerServiceHolder;
 

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -22,13 +22,13 @@
 
 import android.content.res.Resources;
 import android.graphics.Color;
-import android.os.Build;
 import android.os.Bundle;
 import android.view.Window;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.appcompat.app.AlertDialog;
+
+import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 
 import org.lsposed.manager.BuildConfig;
 import org.lsposed.manager.ConfigManager;
@@ -49,7 +49,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         if (!ConfigManager.isBinderAlive()) return;
         var version = ConfigManager.getXposedVersionName();
         if (BuildConfig.VERSION_NAME.equals(version)) return;
-        new AlertDialog.Builder(this)
+        new MaterialAlertDialogBuilder(this)
                 .setMessage(BuildConfig.VERSION_NAME.compareTo(version) > 0 ?
                         R.string.outdated_core : R.string.outdated_manager)
                 .setPositiveButton(android.R.string.ok, (dialog, id) -> {

File: app/src/main/java/org/lsposed/manager/ui/dialog/BlurBehindDialogBuilder.java
Patch:
@@ -30,10 +30,12 @@
 import androidx.appcompat.app.AlertDialog;
 import androidx.core.os.BuildCompat;
 
+import com.google.android.material.dialog.MaterialAlertDialogBuilder;
+
 import java.lang.reflect.Method;
 
 @SuppressWarnings({"JavaReflectionMemberAccess", "ConstantConditions"})
-public class BlurBehindDialogBuilder extends AlertDialog.Builder {
+public class BlurBehindDialogBuilder extends MaterialAlertDialogBuilder {
     private static final boolean supportBlur = getSystemProperty("ro.surface_flinger.supports_background_blur", false) && !getSystemProperty("persist.sys.sf.disable_blurs", false);
 
     public BlurBehindDialogBuilder(@NonNull Context context) {

File: app/src/main/java/org/lsposed/manager/ui/fragment/AppListFragment.java
Patch:
@@ -66,7 +66,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         if (module == null) {
             return binding.getRoot();
         }
-        binding.appBar.setRaised(true);
+        binding.appBar.setLiftable(true);
+        binding.appBar.setLifted(true);
         String title;
         if (module.userId != 0) {
             title = String.format(Locale.US, "%s (%d)", module.getAppName(), module.userId);

File: app/src/main/java/org/lsposed/manager/ui/fragment/CompileDialogFragment.java
Patch:
@@ -31,10 +31,10 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
-import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatDialogFragment;
 import androidx.fragment.app.FragmentManager;
 
+import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.snackbar.Snackbar;
 
 import org.lsposed.manager.App;
@@ -76,7 +76,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         FragmentCompileDialogBinding binding = FragmentCompileDialogBinding.inflate(LayoutInflater.from(requireActivity()), null, false);
         final PackageManager pm = requireContext().getPackageManager();
-        AlertDialog.Builder builder = new AlertDialog.Builder(requireActivity())
+        MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(requireActivity())
                 .setIcon(appInfo.loadIcon(pm))
                 .setTitle(appInfo.loadLabel(pm))
                 .setView(binding.getRoot());

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -104,7 +104,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         binding = FragmentRepoBinding.inflate(getLayoutInflater(), container, false);
         binding.getRoot().bringChildToFront(binding.appBar);
         setupToolbar(binding.toolbar, R.string.module_repo, R.menu.menu_repo);
-        binding.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> binding.appBar.setRaised(!top));
+        binding.appBar.setLiftable(true);
+        binding.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> binding.appBar.setLifted(!top));
         adapter = new RepoAdapter();
         adapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(adapter);

File: core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -518,7 +518,7 @@ public boolean enableModule(String packageName) throws RemoteException {
     }
 
     @Override
-    public boolean setModuleScope(String packageName, ParceledListSlice<Application> scope) {
+    public boolean setModuleScope(String packageName, ParceledListSlice<Application> scope) throws RemoteException {
         return ConfigManager.getInstance().setModuleScope(packageName, scope.getList());
     }
 

File: app/src/main/java/org/lsposed/manager/App.java
Patch:
@@ -38,7 +38,6 @@
 import com.google.gson.JsonParser;
 
 import org.lsposed.hiddenapibypass.HiddenApiBypass;
-import org.lsposed.manager.receivers.LSPManagerServiceHolder;
 import org.lsposed.manager.repo.RepoLoader;
 import org.lsposed.manager.ui.activity.CrashReportActivity;
 import org.lsposed.manager.util.DoHDNS;
@@ -168,8 +167,9 @@ public void onCreate() {
             public void onReceive(Context context, Intent intent) {
                 int userId = intent.getIntExtra(Intent.EXTRA_USER, 0);
                 String packageName = intent.getStringExtra("android.intent.extra.PACKAGES");
+                boolean packageFullyRemoved = intent.getBooleanExtra(Intent.ACTION_PACKAGE_FULLY_REMOVED, false);
                 if (packageName != null) {
-                    ModuleUtil.getInstance().reloadSingleModule(packageName, userId);
+                    ModuleUtil.getInstance().reloadSingleModule(packageName, userId, packageFullyRemoved);
                 }
             }
         }, new IntentFilter(Intent.ACTION_PACKAGE_CHANGED));

File: core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -86,12 +86,13 @@ public class LSPManagerService extends ILSPManagerService.Stub {
     public static final int CHANNEL_IMP = NotificationManager.IMPORTANCE_HIGH;
 
     private static final HandlerThread worker = new HandlerThread("manager worker");
-    private static final Handler workerHandler = new Handler(worker.getLooper());
+    private static final Handler workerHandler;
 
     private static Intent managerIntent = null;
 
     static {
         worker.start();
+        workerHandler = new Handler(worker.getLooper());
     }
 
     public class ManagerGuard implements IBinder.DeathRecipient {

File: app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java
Patch:
@@ -44,6 +44,7 @@
 import com.takisoft.preferencex.PreferenceFragmentCompat;
 
 import org.lsposed.manager.App;
+import org.lsposed.manager.BuildConfig;
 import org.lsposed.manager.ConfigManager;
 import org.lsposed.manager.R;
 import org.lsposed.manager.databinding.FragmentSettingsBinding;
@@ -145,7 +146,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
             boolean installed = ConfigManager.isBinderAlive();
             SwitchPreference prefVerboseLogs = findPreference("disable_verbose_log");
             if (prefVerboseLogs != null) {
-                prefVerboseLogs.setEnabled(installed);
+                prefVerboseLogs.setEnabled(!BuildConfig.DEBUG && installed);
                 prefVerboseLogs.setChecked(!installed || !ConfigManager.isVerboseLogEnabled());
                 prefVerboseLogs.setOnPreferenceChangeListener((preference, newValue) ->
                         ConfigManager.setVerboseLogEnabled(!(boolean) newValue));

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -231,7 +231,7 @@ private synchronized void updateConfig() {
     }
 
     public synchronized void updateManager(boolean uninstalled) {
-        if (uninstalled){
+        if (uninstalled) {
             managerUid = -1;
             return;
         }
@@ -770,6 +770,7 @@ public void setResourceHook(boolean resourceHook) {
     }
 
     public void setVerboseLog(boolean on) {
+        if (BuildConfig.DEBUG) return;
         var logcatService = ServiceManager.getLogcatService();
         if (on) {
             logcatService.startVerbose();
@@ -785,7 +786,7 @@ public boolean resourceHook() {
     }
 
     public boolean verboseLog() {
-        return verboseLog;
+        return BuildConfig.DEBUG || verboseLog;
     }
 
     public ParcelFileDescriptor getManagerApk() {

File: core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -177,8 +177,8 @@ private static Intent getManagerIntent() {
                         }
                     }
                 }
-                if (intent != null && intent.getCategories() != null) {
-                    intent.getCategories().clear();
+                if (intent != null) {
+                    if (intent.getCategories() != null) intent.getCategories().clear();
                     intent.addCategory("org.lsposed.manager.LAUNCH_MANAGER");
                     intent.setPackage(BuildConfig.MANAGER_INJECTED_PKG_NAME);
                     managerIntent = (Intent) intent.clone();

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -237,6 +237,7 @@ public synchronized void updateManager() {
             if (info != null) {
                 managerUid = info.applicationInfo.uid;
             } else {
+                managerUid = -1;
                 Log.i(TAG, "manager is not installed");
             }
         } catch (RemoteException ignored) {

File: core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java
Patch:
@@ -117,7 +117,7 @@ protected void beforeHookedMethod(MethodHookParam param) {
                     if (param.args[i] instanceof Intent) {
                         var intent = (Intent) param.args[i];
                         checkIntent(managerService, intent);
-                        intent.setComponent(new ComponentName(BuildConfig.MANAGER_INJECTED_PKG_NAME, "org.lsposed.manager.ui.activity.MainActivity"));
+                        intent.setComponent(new ComponentName(intent.getComponent().getPackageName(), "org.lsposed.manager.ui.activity.MainActivity"));
                     }
                 }
             }

File: core/src/main/java/org/lsposed/lspd/core/yahfa/HookMain.java
Patch:
@@ -27,6 +27,7 @@
 import java.lang.reflect.Executable;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
+import java.lang.reflect.Proxy;
 import java.util.ArrayList;
 import java.util.Arrays;
 
@@ -51,10 +52,8 @@ public static void backupAndHook(Executable target, Method hook, Method backup)
             // backup is just a placeholder and the constraint could be less strict
             checkCompatibleMethods(target, backup, "Backup");
         }
-        if(!Yahfa.backupAndHookNative(target, hook, backup)){
+        if (!Yahfa.backupAndHookNative(target, hook, backup, Proxy.isProxyClass(target.getDeclaringClass()))) {
             throw new RuntimeException("Failed to hook " + target + " with " + hook);
-        } else {
-            Yahfa.recordHooked(target);
         }
     }
 

File: core/src/main/java/org/lsposed/lspd/nativebridge/Yahfa.java
Patch:
@@ -25,15 +25,13 @@
 
 public class Yahfa {
 
-    public static native boolean backupAndHookNative(Executable target, Method hook, Method backup);
+    public static native boolean backupAndHookNative(Executable target, Method hook, Method backup, boolean isProxy);
 
     // JNI.ToReflectedMethod() could return either Method or Constructor
     public static native Executable findMethodNative(Class<?> targetClass, String methodName, String methodSig);
 
     public static native void init(int sdkVersion);
 
-    public static native void recordHooked(Executable member);
-
     public static native boolean isHooked(Executable member);
 
     public static native Class<?> buildHooker(ClassLoader appClassLoader, char returnType, char[] params, String methodName);

File: core/src/main/java/org/lsposed/lspd/service/ConfigFileManager.java
Patch:
@@ -58,8 +58,6 @@ public class ConfigFileManager {
             DateTimeFormatter.ISO_LOCAL_DATE_TIME.withZone(Utils.getZoneId());
     @SuppressWarnings("FieldCanBeLocal")
     private static FileLocker locker = null;
-    @SuppressWarnings("FieldCanBeLocal")
-    private static AssetManager am = null;
     private static Resources res = null;
     private static ParcelFileDescriptor fd = null;
 
@@ -119,7 +117,7 @@ private static String readLocale() {
     private static void loadRes() {
         if (res != null) return;
         try {
-            am = AssetManager.class.newInstance();
+            var am = AssetManager.class.newInstance();
             //noinspection JavaReflectionMemberAccess DiscouragedPrivateApi
             Method addAssetPath = AssetManager.class.getDeclaredMethod("addAssetPath", String.class);
             addAssetPath.setAccessible(true);

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -237,7 +237,7 @@ public static boolean uninstallPackage(VersionedPackage versionedPackage, int us
         CountDownLatch latch = new CountDownLatch(1);
         final boolean[] result = {false};
         var flag = userId == -1 ? 0x00000002 : 0; //PackageManager.DELETE_ALL_USERS = 0x00000002; UserHandle ALL = new UserHandle(-1);
-        pm.getPackageInstaller().uninstall(versionedPackage, null, flag, new IntentSenderAdaptor() {
+        pm.getPackageInstaller().uninstall(versionedPackage, "android", flag, new IntentSenderAdaptor() {
             @Override
             public void send(Intent intent) {
                 int status = intent.getIntExtra(PackageInstaller.EXTRA_STATUS, PackageInstaller.STATUS_FAILURE);

File: core/src/main/java/org/lsposed/lspd/config/ApplicationServiceClient.java
Patch:
@@ -15,9 +15,6 @@ abstract public class ApplicationServiceClient implements ILSPApplicationService
     @Override
     abstract public IBinder requestModuleBinder(String name);
 
-    @Override
-    abstract public boolean requestManagerBinder(String packageName, String path, List<IBinder> binder);
-
     @Override
     abstract public boolean isResourcesHookEnabled();
 

File: core/src/main/java/org/lsposed/lspd/core/Main.java
Patch:
@@ -81,7 +81,8 @@ public static void forkPostCommon(boolean isSystem, String appDataDir, String ni
         XposedBridge.initXResources();
         XposedInit.startsSystemServer = isSystem;
         PrebuiltMethodsDeopter.deoptBootMethods(); // do it once for secondary zygote
-        if (niceName.equals(BuildConfig.MANAGER_INJECTED_PKG_NAME) && ParasiticManagerHooker.start()) {
+        if ((niceName.equals(BuildConfig.MANAGER_INJECTED_PKG_NAME) || niceName.equals(BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME))
+                && ParasiticManagerHooker.start()) {
             Utils.logI("Loaded manager, skipping next steps");
             return;
         }

File: core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java
Patch:
@@ -109,6 +109,8 @@ protected void afterHookedMethod(MethodHookParam param) {
                     }
                 });
 
+        if (Process.myUid() != BuildConfig.MANAGER_INJECTED_UID) return;
+
         XposedBridge.hookAllMethods(ActivityThread.class, "handleReceiver", new XC_MethodReplacement() {
             @Override
             protected Object replaceHookedMethod(MethodHookParam param) {
@@ -194,6 +196,7 @@ protected Object replaceHookedMethod(MethodHookParam param) {
 
     private static void checkIntent(ILSPManagerService managerService, Intent intent) {
         if (managerService == null) return;
+        if (Process.myUid() != BuildConfig.MANAGER_INJECTED_UID) return;
         if (intent.getCategories() == null || !intent.getCategories().contains("org.lsposed.manager.LAUNCH_MANAGER")) {
             Hookers.logD("Launching the original app, restarting");
             try {

File: core/src/main/java/org/lsposed/lspd/util/ParasiticManagerHooker.java
Patch:
@@ -51,6 +51,7 @@ private synchronized static PackageInfo getManagerPkgInfo(ApplicationInfo appInf
             newAppInfo.packageName = appInfo.packageName;
             newAppInfo.dataDir = HiddenApiBridge.ApplicationInfo_credentialProtectedDataDir(appInfo);
             newAppInfo.deviceProtectedDataDir = appInfo.deviceProtectedDataDir;
+            newAppInfo.processName = appInfo.processName;
             HiddenApiBridge.ApplicationInfo_credentialProtectedDataDir(newAppInfo, HiddenApiBridge.ApplicationInfo_credentialProtectedDataDir(appInfo));
             newAppInfo.uid = appInfo.uid;
         }

File: core/src/main/java/org/lsposed/lspd/hooker/HandleBindAppHooker.java
Patch:
@@ -51,6 +51,7 @@ protected void beforeHookedMethod(MethodHookParam param) {
             // save app process name here for later use
             String appProcessName = (String) XposedHelpers.getObjectField(bindData, "processName");
             String reportedPackageName = appInfo.packageName.equals("android") ? "system" : appInfo.packageName;
+
             // Note: packageName="android" -> system_server process, ams pms etc;
             //       packageName="system"  -> android pkg, system dialogues.
             Utils.logD("processName=" + appProcessName +

File: core/src/main/java/org/lsposed/lspd/service/ActivityManagerService.java
Patch:
@@ -60,10 +60,11 @@ public static IActivityManager getActivityManager() {
             if (binder == null) return null;
             try {
                 binder.linkToDeath(deathRecipient, 0);
+                am = IActivityManager.Stub.asInterface(binder);
+                am.setActivityController(null, false);
             } catch (RemoteException e) {
                 Log.e(TAG, Log.getStackTraceString(e));
             }
-            am = IActivityManager.Stub.asInterface(binder);
         }
         return am;
     }
@@ -161,4 +162,5 @@ public static UserInfo getCurrentUser() throws RemoteException {
         if (am == null) return null;
         return am.getCurrentUser();
     }
+
 }

File: core/src/main/java/org/lsposed/lspd/service/LSPSystemServerService.java
Patch:
@@ -71,7 +71,7 @@ public IBinder asBinder() {
     }
 
     @Override
-    public ILSPApplicationService requestApplicationService(int uid, int pid, String processName, IBinder heartBeat) throws RemoteException {
+    public ILSPApplicationService requestApplicationService(int uid, int pid, String processName, IBinder heartBeat) {
         requested = true;
         if (ConfigManager.getInstance().shouldSkipSystemServer() || uid != 1000 || heartBeat == null || !"android".equals(processName))
             return null;

File: core/src/main/java/org/lsposed/lspd/service/ServiceManager.java
Patch:
@@ -104,6 +104,8 @@ public static void start(String[] args) {
         waitSystemService(Context.USER_SERVICE);
         waitSystemService(Context.APP_OPS_SERVICE);
 
+        ConfigFileManager.reloadLocale();
+
         BridgeService.send(mainService, new BridgeService.Listener() {
             @Override
             public void onSystemServerRestarted() {
@@ -123,6 +125,7 @@ public void onResponseFromBridgeService(boolean response) {
             public void onSystemServerDied() {
                 Log.w(TAG, "system server died");
                 systemServerService.putBinderForSystemServer();
+                managerService.onSystemServerDied();
             }
         });
 

File: hiddenapi-stubs/src/main/java/android/app/ActivityThread.java
Patch:
@@ -44,4 +44,7 @@ public IBinder asBinder() {
 			return null;
 		}
 	}
+	public static final class ActivityClientRecord {
+
+	}
 }

File: hiddenapi-stubs/src/main/java/android/app/IActivityManager.java
Patch:
@@ -95,7 +95,10 @@ int bindService(IApplicationThread caller, IBinder token, Intent service,
 
     UserInfo getCurrentUser() throws RemoteException;
 
+    void setActivityController(IActivityController watcher, boolean imAMonkey) throws RemoteException;
+
     abstract class Stub extends Binder implements IActivityManager {
+        public static int TRANSACTION_setActivityController;
 
         public static IActivityManager asInterface(IBinder obj) {
             throw new UnsupportedOperationException();

File: hiddenapi-stubs/src/main/java/android/content/pm/ApplicationInfo.java
Patch:
@@ -1,4 +1,5 @@
 package android.content.pm;
 
 public class ApplicationInfo {
+    public String credentialProtectedDataDir;
 }

File: hiddenapi-stubs/src/main/java/android/os/IUserManager.java
Patch:
@@ -19,6 +19,8 @@ List<UserInfo> getUsers(boolean excludePartial, boolean excludeDying, boolean ex
 
     UserInfo getProfileParent(int userId) throws RemoteException;
 
+    boolean isUserUnlockingOrUnlocked(int userId) throws RemoteException;
+
     abstract class Stub extends Binder implements IUserManager {
 
         public static IUserManager asInterface(IBinder obj) {

File: core/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -51,8 +51,9 @@
 import java.lang.ref.WeakReference;
 import java.lang.reflect.Method;
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.List;
+import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicBoolean;
 
 import de.robv.android.xposed.callbacks.XC_InitPackageResources;
@@ -359,5 +360,5 @@ private static boolean loadModule(String name, String apk, PreLoadedApk file) {
         return initModule(mcl, apk, file.moduleClassNames);
     }
 
-    public final static HashSet<String> loadedPackagesInProcess = new HashSet<>(1);
+    public final static Set<String> loadedPackagesInProcess = ConcurrentHashMap.newKeySet(1);
 }

File: app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java
Patch:
@@ -283,7 +283,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
             Preference translation_contributors = findPreference("translation_contributors");
             if (translation_contributors != null) {
                 var translators = HtmlCompat.fromHtml(getString(R.string.translators), HtmlCompat.FROM_HTML_MODE_LEGACY);
-                if (translators.equals("null")) {
+                if (translators.toString().equals("null")) {
                     translation_contributors.setVisible(false);
                 } else {
                     translation_contributors.setSummary(translators);

File: app/src/main/java/org/lsposed/manager/ui/fragment/SettingsFragment.java
Patch:
@@ -283,7 +283,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
             Preference translation_contributors = findPreference("translation_contributors");
             if (translation_contributors != null) {
                 var translators = HtmlCompat.fromHtml(getString(R.string.translators), HtmlCompat.FROM_HTML_MODE_LEGACY);
-                if (TextUtils.isEmpty(translators)) {
+                if (translators.equals("null")) {
                     translation_contributors.setVisible(false);
                 } else {
                     translation_contributors.setSummary(translators);

File: app/src/main/java/org/lsposed/manager/ui/fragment/AppListFragment.java
Patch:
@@ -150,12 +150,12 @@ public void handleOnBackPressed() {
     @Override
     public void onResume() {
         super.onResume();
-        scopeAdapter.refresh();
+        if (scopeAdapter != null) scopeAdapter.refresh();
     }
 
     @Override
     public void onDestroy() {
-        scopeAdapter.onDestroy();
+        if (scopeAdapter != null) scopeAdapter.onDestroy();
 
         super.onDestroy();
     }

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -151,9 +151,9 @@ private void renderGithubMarkdown(WebView view, String text) {
             setting.setTextZoom(80);
             String body;
             if (ResourceUtils.isNightMode(getResources().getConfiguration())) {
-                body = RepoFragment.HTML_TEMPLATE_DARK.get().replace("@body@", text);
+                body = App.HTML_TEMPLATE_DARK.get().replace("@body@", text);
             } else {
-                body = RepoFragment.HTML_TEMPLATE.get().replace("@body@", text);
+                body = App.HTML_TEMPLATE.get().replace("@body@", text);
             }
             view.setWebViewClient(new WebViewClient() {
                 @Override

File: app/src/main/java/org/lsposed/manager/ui/fragment/LogsFragment.java
Patch:
@@ -22,6 +22,8 @@
 
 import static org.lsposed.manager.App.TAG;
 
+import static java.lang.Math.max;
+
 import android.annotation.SuppressLint;
 import android.os.AsyncTask;
 import android.os.Bundle;
@@ -153,7 +155,7 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
             if (adapter.getItemCount() - layoutManager.findLastVisibleItemPosition() > 1000) {
                 binding.recyclerView.scrollToPosition(adapter.getItemCount() - 1);
             } else {
-                binding.recyclerView.smoothScrollToPosition(adapter.getItemCount() - 1);
+                binding.recyclerView.smoothScrollToPosition(max(adapter.getItemCount() - 1, 0));
             }
         } else if (itemId == R.id.menu_refresh) {
             reloadErrorLog();

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -130,8 +130,9 @@ public void onResume() {
         super.onResume();
         adapter.initData();
         if (preLoadWebview) {
-            new Handler(Looper.getMainLooper()).postDelayed(() ->
-                    new WebView(RepoFragment.this.requireContext()), 500);
+            new Handler(Looper.getMainLooper()).postDelayed(() -> {
+                if (!isRemoving()) new WebView(requireContext());
+            }, 500);
             preLoadWebview = false;
         }
     }

File: app/src/main/java/org/lsposed/manager/ui/fragment/AppListFragment.java
Patch:
@@ -36,6 +36,7 @@
 import androidx.annotation.StringRes;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.widget.SearchView;
+import androidx.recyclerview.widget.LinearLayoutManager;
 
 import com.google.android.material.snackbar.Snackbar;
 
@@ -44,7 +45,6 @@
 import org.lsposed.manager.adapters.ScopeAdapter;
 import org.lsposed.manager.databinding.FragmentAppListBinding;
 import org.lsposed.manager.util.BackupUtils;
-import org.lsposed.manager.util.LinearLayoutManagerFix;
 import org.lsposed.manager.util.ModuleUtil;
 
 import java.util.Locale;
@@ -82,7 +82,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         scopeAdapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(scopeAdapter);
         binding.recyclerView.setHasFixedSize(true);
-        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(requireActivity()));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManager(requireActivity()));
         RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);
         binding.swipeRefreshLayout.setOnRefreshListener(() -> scopeAdapter.refresh(true));
 

File: app/src/main/java/org/lsposed/manager/ui/fragment/LogsFragment.java
Patch:
@@ -40,6 +40,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
+import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.snackbar.Snackbar;
@@ -49,7 +50,6 @@
 import org.lsposed.manager.R;
 import org.lsposed.manager.databinding.FragmentLogsBinding;
 import org.lsposed.manager.databinding.ItemLogBinding;
-import org.lsposed.manager.util.LinearLayoutManagerFix;
 
 import java.io.BufferedReader;
 import java.io.FileDescriptor;
@@ -75,7 +75,7 @@ public class LogsFragment extends BaseFragment {
     private LogsAdapter adapter;
     private final Handler handler = new Handler(Looper.getMainLooper());
     private FragmentLogsBinding binding;
-    private LinearLayoutManagerFix layoutManager;
+    private LinearLayoutManager layoutManager;
     private final ActivityResultLauncher<String> saveLogsLauncher = registerForActivityResult(
             new ActivityResultContracts.CreateDocument(),
             uri -> {
@@ -123,7 +123,7 @@ public void onTabReselected(TabLayout.Tab tab) {
         adapter = new LogsAdapter();
         RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);
         binding.recyclerView.setAdapter(adapter);
-        layoutManager = new LinearLayoutManagerFix(requireActivity());
+        layoutManager = new LinearLayoutManager(requireActivity());
         binding.recyclerView.setLayoutManager(layoutManager);
         return binding.getRoot();
     }

File: app/src/main/java/org/lsposed/manager/ui/fragment/ModulesFragment.java
Patch:
@@ -60,6 +60,7 @@
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 import androidx.lifecycle.Lifecycle;
+import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.viewpager2.adapter.FragmentStateAdapter;
 import androidx.viewpager2.widget.ViewPager2;
@@ -83,7 +84,6 @@
 import org.lsposed.manager.repo.RepoLoader;
 import org.lsposed.manager.ui.widget.EmptyStateRecyclerView;
 import org.lsposed.manager.util.GlideApp;
-import org.lsposed.manager.util.LinearLayoutManagerFix;
 import org.lsposed.manager.util.ModuleUtil;
 
 import java.util.ArrayList;
@@ -228,7 +228,7 @@ public void onPageSelected(int position) {
             pickAdaptor.refresh();
             var rv = DialogRecyclerviewBinding.inflate(getLayoutInflater()).getRoot();
             rv.setAdapter(pickAdaptor);
-            rv.setLayoutManager(new LinearLayoutManagerFix(requireActivity()));
+            rv.setLayoutManager(new LinearLayoutManager(requireActivity()));
             var dialog = new AlertDialog.Builder(requireActivity())
                     .setTitle(getString(R.string.install_to_user, user.name))
                     .setView(rv)
@@ -398,7 +398,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
             }
             binding.recyclerView.setTag(position);
             binding.recyclerView.setAdapter(fragment.adapters.get(position));
-            RecyclerView.LayoutManager layoutManager = new LinearLayoutManagerFix(requireActivity());
+            RecyclerView.LayoutManager layoutManager = new LinearLayoutManager(requireActivity());
             binding.recyclerView.setLayoutManager(layoutManager);
             binding.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> fragment.binding.appBar.setRaised(!top));
             binding.recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -36,6 +36,7 @@
 import androidx.appcompat.widget.SearchView;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.lifecycle.Lifecycle;
+import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.android.material.snackbar.Snackbar;
@@ -46,7 +47,6 @@
 import org.lsposed.manager.databinding.ItemOnlinemoduleBinding;
 import org.lsposed.manager.repo.RepoLoader;
 import org.lsposed.manager.repo.model.OnlineModule;
-import org.lsposed.manager.util.LinearLayoutManagerFix;
 
 import java.time.Instant;
 import java.util.ArrayList;
@@ -96,7 +96,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         adapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(adapter);
         binding.recyclerView.setHasFixedSize(true);
-        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(requireActivity()));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManager(requireActivity()));
         RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);
         binding.progress.setVisibilityAfterHide(View.GONE);
         repoLoader.addListener(this);

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -19,7 +19,6 @@
 
 package org.lsposed.manager.ui.fragment;
 
-import android.content.Intent;
 import android.content.res.Configuration;
 import android.graphics.Color;
 import android.os.Bundle;
@@ -42,6 +41,7 @@
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
 import androidx.lifecycle.Lifecycle;
+import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.viewpager2.widget.ViewPager2;
 
@@ -65,7 +65,6 @@
 import org.lsposed.manager.repo.model.Release;
 import org.lsposed.manager.repo.model.ReleaseAsset;
 import org.lsposed.manager.ui.widget.LinkifyTextView;
-import org.lsposed.manager.util.LinearLayoutManagerFix;
 import org.lsposed.manager.util.NavUtil;
 import org.lsposed.manager.util.chrome.CustomTabsURLSpan;
 
@@ -90,6 +89,7 @@ public class RepoItemFragment extends BaseFragment implements RepoLoader.Listene
     private ReleaseAdapter releaseAdapter;
 
     private static String readWebviewHTML(String name) {
+
         try {
             var input = App.getInstance().getAssets().open("webview/" + name);
             var result = new ByteArrayOutputStream(1024);
@@ -444,7 +444,7 @@ public void onBindViewHolder(@NonNull PagerAdapter.ViewHolder holder, int positi
                         holder.recyclerView.setAdapter(new InformationAdapter(module));
                     }
                     holder.recyclerView.setTag(position);
-                    holder.recyclerView.setLayoutManager(new LinearLayoutManagerFix(requireActivity()));
+                    holder.recyclerView.setLayoutManager(new LinearLayoutManager(requireActivity()));
                     holder.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> binding.appBar.setRaised(!top));
                     var insets = requireActivity().getWindow().getDecorView().getRootWindowInsets();
                     if (insets != null)

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -905,6 +905,7 @@ public ParcelFileDescriptor getModulesLog(int mode) {
     public ParcelFileDescriptor getVerboseLog() {
         try {
             var logcat = ServiceManager.getLogcatService().getLog();
+            if (logcat == null) return null;
             return ParcelFileDescriptor.open(logcat, ParcelFileDescriptor.MODE_READ_ONLY);
         } catch (FileNotFoundException e) {
             Log.e(TAG, Log.getStackTraceString(e));
@@ -915,6 +916,7 @@ public ParcelFileDescriptor getVerboseLog() {
     public boolean clearLogs(boolean verbose) {
         try {
             var logcat = ServiceManager.getLogcatService().getLog();
+            if (verbose && logcat == null) return true;
             OutputStream os = new FileOutputStream(verbose ? logcat : modulesLog);
             os.close();
             return true;

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -62,7 +62,7 @@ private static PackageInfo wrap(ApplicationInfo applicationInfo, int longVersion
         packageInfo.applicationInfo = applicationInfo;
         packageInfo.versionCode = longVersionCode;
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
-            packageInfo.setLongVersionCode(System.currentTimeMillis());
+            packageInfo.setLongVersionCode(longVersionCode);
         }
         return packageInfo;
     }

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -21,6 +21,7 @@
 
 import static android.content.pm.ServiceInfo.FLAG_ISOLATED_PROCESS;
 import static org.lsposed.lspd.service.ServiceManager.TAG;
+import static org.lsposed.lspd.service.ServiceManager.existsInGlobalNamespace;
 
 import android.content.IIntentReceiver;
 import android.content.IIntentSender;
@@ -213,7 +214,7 @@ private static PackageInfo getPackageInfoWithComponents(String packageName, int
 
             }
         }
-        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || !isPackageAvailable(packageName, userId, true))))
+        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !existsInGlobalNamespace(pkgInfo.applicationInfo.sourceDir) || !isPackageAvailable(packageName, userId, true))))
             return null;
         return pkgInfo;
     }

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -180,7 +180,7 @@ public static Pair<Set<String>, Integer> fetchProcessesWithUid(Application app)
     }
 
     public static boolean isPackageAvailable(String packageName, int userId, boolean ignoreHidden) throws RemoteException {
-        return pm.isPackageAvailable(packageName, userId) && (!ignoreHidden || pm.getApplicationHiddenSettingAsUser(packageName, userId));
+        return pm.isPackageAvailable(packageName, userId) || (ignoreHidden && pm.getApplicationHiddenSettingAsUser(packageName, userId));
     }
 
     private static PackageInfo getPackageInfoWithComponents(String packageName, int flags, int userId) throws RemoteException {
@@ -213,7 +213,7 @@ private static PackageInfo getPackageInfoWithComponents(String packageName, int
 
             }
         }
-        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || isPackageAvailable(packageName, userId, true))))
+        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || !isPackageAvailable(packageName, userId, true))))
             return null;
         return pkgInfo;
     }

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -208,7 +208,7 @@ private static PackageInfo getPackageInfoWithComponents(String packageName, int
 
             }
         }
-        if (pkgInfo.applicationInfo == null ||(!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || (!pm.isPackageAvailable(packageName, userId) && !pm.getApplicationHiddenSettingAsUser(packageName, userId)))))
+        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || (!pm.isPackageAvailable(packageName, userId) && !pm.getApplicationHiddenSettingAsUser(packageName, userId)))))
             return null;
         return pkgInfo;
     }

File: app/src/main/java/org/lsposed/manager/ConfigManager.java
Patch:
@@ -119,11 +119,11 @@ public static boolean setModuleScope(String packageName, HashSet<ScopeAdapter.Ap
     public static List<ScopeAdapter.ApplicationWithEquals> getModuleScope(String packageName) {
         List<ScopeAdapter.ApplicationWithEquals> list = new ArrayList<>();
         try {
-            List<Application> applications = LSPManagerServiceHolder.getService().getModuleScope(packageName).getList();
+            var applications = LSPManagerServiceHolder.getService().getModuleScope(packageName);
             if (applications == null) {
                 return list;
             }
-            applications.forEach(application -> {
+            applications.getList().forEach(application -> {
                 if (!application.packageName.equals(packageName)) {
                     list.add(new ScopeAdapter.ApplicationWithEquals(application));
                 }

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -65,7 +65,6 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.CountDownLatch;
-import java.util.stream.Collectors;
 
 import hidden.HiddenApiBridge;
 
@@ -209,7 +208,7 @@ private static PackageInfo getPackageInfoWithComponents(String packageName, int
 
             }
         }
-        if (pkgInfo == null || pkgInfo.applicationInfo == null || (!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || pkgInfo.applicationInfo.deviceProtectedDataDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists())))
+        if (pkgInfo.applicationInfo == null ||(!pkgInfo.packageName.equals("android") && (pkgInfo.applicationInfo.sourceDir == null || !new File(pkgInfo.applicationInfo.sourceDir).exists() || (!pm.isPackageAvailable(packageName, userId) && !pm.getApplicationHiddenSettingAsUser(packageName, userId)))))
             return null;
         return pkgInfo;
     }

File: core/src/main/java/org/lsposed/lspd/config/ApplicationServiceClient.java
Patch:
@@ -3,8 +3,9 @@
 import android.os.IBinder;
 import android.os.ParcelFileDescriptor;
 
+import org.lsposed.lspd.models.Module;
 import org.lsposed.lspd.service.ILSPApplicationService;
-import org.lsposed.lspd.service.Module;
+
 import java.util.List;
 
 abstract public class ApplicationServiceClient implements ILSPApplicationService {

File: core/src/main/java/org/lsposed/lspd/config/LSPApplicationServiceClient.java
Patch:
@@ -24,8 +24,8 @@
 import android.os.ParcelFileDescriptor;
 import android.os.RemoteException;
 
+import org.lsposed.lspd.models.Module;
 import org.lsposed.lspd.service.ILSPApplicationService;
-import org.lsposed.lspd.service.Module;
 import org.lsposed.lspd.util.Utils;
 
 import java.util.Collections;

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -45,7 +45,7 @@
 import org.apache.commons.lang3.SerializationUtils;
 import org.lsposed.lspd.BuildConfig;
 import org.lsposed.lspd.models.Application;
-import org.lsposed.lspd.service.Module;
+import org.lsposed.lspd.models.Module;
 
 import java.io.File;
 import java.io.FileNotFoundException;

File: core/src/main/java/org/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -19,15 +19,16 @@
 
 package org.lsposed.lspd.service;
 
-import android.os.Bundle;
 import static org.lsposed.lspd.service.ServiceManager.TAG;
 
+import android.os.Bundle;
 import android.os.IBinder;
 import android.os.ParcelFileDescriptor;
 import android.os.RemoteException;
 import android.util.Log;
 import android.util.Pair;
 
+import org.lsposed.lspd.models.Module;
 import org.lsposed.lspd.util.InstallerVerifier;
 import org.lsposed.lspd.util.Utils;
 

File: core/src/main/java/org/lsposed/lspd/util/InstallerVerifier.java
Patch:
@@ -84,7 +84,7 @@ public static void hookXposedInstaller(final ClassLoader classLoader, IBinder bi
         Utils.logI("Found LSPosed Manager, hooking it");
         try {
             var clazz = XposedHelpers.findClass("org.lsposed.manager.Constants", classLoader);
-            XposedHelpers.callStaticMethod(clazz, "setBinder", IBinder.class, binder);
+            XposedHelpers.callStaticMethod(clazz, "setBinder", new Class[]{IBinder.class}, binder);
             Utils.logI("Hooked LSPosed Manager");
         } catch (Throwable t) {
             Utils.logW("Could not hook LSPosed Manager", t);

File: core/src/main/java/org/lsposed/lspd/core/Main.java
Patch:
@@ -36,7 +36,6 @@
 import org.lsposed.lspd.hooker.CrashDumpHooker;
 import org.lsposed.lspd.hooker.HandleBindAppHooker;
 import org.lsposed.lspd.hooker.LoadedApkCstrHooker;
-import org.lsposed.lspd.hooker.StartBootstrapServicesHooker;
 import org.lsposed.lspd.hooker.SystemMainHooker;
 import org.lsposed.lspd.service.ServiceManager;
 import org.lsposed.lspd.util.ModuleLogger;

File: hiddenapi-stubs/src/main/java/dalvik/system/BaseDexClassLoader.java
Patch:
@@ -9,6 +9,7 @@
 import java.nio.ByteBuffer;
 
 public class BaseDexClassLoader extends ClassLoader {
+    private Object pathList;
     public BaseDexClassLoader(String dexPath, File optimizedDirectory, String librarySearchPath, ClassLoader parent) {
         throw new RuntimeException("Stub!");
     }

File: core/src/main/java/org/lsposed/lspd/service/BridgeService.java
Patch:
@@ -121,7 +121,7 @@ public interface Listener {
     private static Listener listener;
 
     // For service
-    private static void sendToBridge(IBinder binder, boolean isRestart) {
+    private static synchronized void sendToBridge(IBinder binder, boolean isRestart) {
         do {
             bridgeService = ServiceManager.getService(SERVICE_NAME);
             if (bridgeService != null && bridgeService.pingBinder()) {
@@ -160,6 +160,7 @@ private static void sendToBridge(IBinder binder, boolean isRestart) {
                 data.writeInt(ACTION.ACTION_SEND_BINDER.ordinal());
                 Log.v(TAG, "binder " + binder.toString());
                 data.writeStrongBinder(binder);
+                if (bridgeService == null) break;
                 res = bridgeService.transact(TRANSACTION_CODE, data, reply, 0);
                 reply.readException();
             } catch (Throwable e) {

File: core/src/main/java/org/lsposed/lspd/config/ApplicationServiceClient.java
Patch:
@@ -5,6 +5,7 @@
 
 import org.lsposed.lspd.service.ILSPApplicationService;
 
+import java.util.List;
 import java.util.Map;
 
 abstract public class ApplicationServiceClient implements ILSPApplicationService {
@@ -15,7 +16,7 @@ abstract public class ApplicationServiceClient implements ILSPApplicationService
     abstract public IBinder requestModuleBinder();
 
     @Override
-    abstract public boolean requestManagerBinder(String packageName, String path, IBinder[] binder);
+    abstract public boolean requestManagerBinder(String packageName, String path, List<IBinder> binder);
 
     @Override
     abstract public boolean isResourcesHookEnabled();

File: core/src/main/java/org/lsposed/lspd/config/LSPApplicationServiceClient.java
Patch:
@@ -27,6 +27,7 @@
 import org.lsposed.lspd.util.Utils;
 
 import java.util.Collections;
+import java.util.List;
 import java.util.Map;
 
 public class LSPApplicationServiceClient extends ApplicationServiceClient {
@@ -68,7 +69,7 @@ public IBinder requestModuleBinder() {
     }
 
     @Override
-    public boolean requestManagerBinder(String packageName, String path, IBinder[] binder) {
+    public boolean requestManagerBinder(String packageName, String path, List<IBinder> binder) {
         try {
             return service.requestManagerBinder(packageName, path, binder);
         } catch (RemoteException | NullPointerException ignored) {

File: core/src/main/java/org/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -30,6 +30,7 @@
 import org.lsposed.lspd.util.InstallerVerifier;
 import org.lsposed.lspd.util.Utils;
 
+import java.util.List;
 import java.util.Map;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
@@ -102,7 +103,7 @@ public IBinder requestModuleBinder() throws RemoteException {
     }
 
     @Override
-    public boolean requestManagerBinder(String packageName, String path, IBinder[] binder) throws RemoteException {
+    public boolean requestManagerBinder(String packageName, String path, List<IBinder> binder) throws RemoteException {
         ensureRegistered();
         if (ConfigManager.getInstance().isManager(getCallingUid()) &&
                 ConfigManager.getInstance().isManager(packageName) &&
@@ -111,7 +112,7 @@ public boolean requestManagerBinder(String packageName, String path, IBinder[] b
             if (Utils.isMIUI) {
                 service.new ManagerGuard(handles.get(getCallingPid()));
             }
-            binder[0] = service;
+            binder.add(service);
             return false;
         }
         return ConfigManager.getInstance().shouldBlock(packageName);

File: hiddenapi-bridge/src/main/java/hidden/ByteBufferDexClassLoader.java
Patch:
@@ -5,7 +5,7 @@
 import dalvik.system.BaseDexClassLoader;
 
 public class ByteBufferDexClassLoader extends BaseDexClassLoader {
-    public ByteBufferDexClassLoader(ByteBuffer[] dexFiles, String librarySearchPath, ClassLoader parent) {
-        super(dexFiles, librarySearchPath, parent);
+    public ByteBufferDexClassLoader(ByteBuffer[] dexFiles, ClassLoader parent) {
+        super(dexFiles, parent);
     }
 }

File: hiddenapi-stubs/src/main/java/dalvik/system/BaseDexClassLoader.java
Patch:
@@ -15,7 +15,7 @@ public BaseDexClassLoader(String dexPath, File optimizedDirectory, String librar
         throw new RuntimeException("Stub!");
     }
 
-    public BaseDexClassLoader(ByteBuffer[] dexFiles, String librarySearchPath, ClassLoader parent) {
+    public BaseDexClassLoader(ByteBuffer[] dexFiles, ClassLoader parent) {
         throw new RuntimeException("Stub!");
     }
 

File: app/src/main/java/org/lsposed/manager/repo/RepoLoader.java
Patch:
@@ -182,7 +182,7 @@ public void removeListener(Listener listener) {
     }
 
     public OnlineModule getOnlineModule(String packageName) {
-        return onlineModules.get(packageName);
+        return packageName == null ? null : onlineModules.get(packageName);
     }
 
     public Collection<OnlineModule> getOnlineModules() {

File: app/src/main/java/org/lsposed/manager/ui/fragment/ModulesFragment.java
Patch:
@@ -363,7 +363,7 @@ synchronized public void repoLoaded() {
             String pkgName = module.getName();
             latestVersion.put(pkgName, new Pair<>(verCode, verName));
         }
-        adapters.forEach(ModuleAdapter::notifyDataSetChanged);
+        requireActivity().runOnUiThread(() -> adapters.forEach(ModuleAdapter::notifyDataSetChanged));
     }
 
     public static class ModuleListFragment extends Fragment {

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -155,6 +155,7 @@ private void renderGithubMarkdown(WebView view, String text) {
             setting.setAllowFileAccess(false);
             setting.setGeolocationEnabled(false);
             setting.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);
+            setting.setTextZoom(80);
             String body;
             int nightModeFlags = getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK;
             if (nightModeFlags == Configuration.UI_MODE_NIGHT_YES) {

File: app/src/main/java/org/lsposed/manager/ui/widget/ScrollWebView.java
Patch:
@@ -42,7 +42,7 @@ public boolean onTouchEvent(MotionEvent event) {
 
     @Override
     protected void onOverScrolled(int scrollX, int scrollY, boolean clampedX, boolean clampedY) {
-        if (clampedX) {
+        if (clampedX || clampedY) {
             var viewParent = findViewParentIfNeeds(this);
             if (viewParent != null) viewParent.requestDisallowInterceptTouchEvent(false);
         }

File: core/src/main/java/org/lsposed/lspd/yahfa/dexmaker/DynamicBridge.java
Patch:
@@ -32,7 +32,6 @@
 
 public final class DynamicBridge {
     private static final ConcurrentHashMap<Executable, LspHooker> hookedInfo = new ConcurrentHashMap<>();
-    private static final HookerDexMaker dexMaker = new HookerDexMaker();
 
     public static synchronized void hookMethod(Executable hookMethod, XposedBridge.AdditionalHookInfo additionalHookInfo) {
         Logger.d("hooking " + hookMethod);
@@ -44,6 +43,7 @@ public static synchronized void hookMethod(Executable hookMethod, XposedBridge.A
 
         Logger.d("start to generate class for: " + hookMethod);
         try {
+            final HookerDexMaker dexMaker = new HookerDexMaker();
             dexMaker.start(hookMethod, additionalHookInfo,
                     hookMethod.getDeclaringClass().getClassLoader());
             hookedInfo.put(hookMethod, dexMaker.getHooker());

File: app/src/main/java/org/lsposed/manager/ui/fragment/BaseFragment.java
Patch:
@@ -25,6 +25,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.navigation.NavController;
 import androidx.navigation.Navigation;
+import androidx.navigation.fragment.NavHostFragment;
 
 import org.lsposed.manager.R;
 
@@ -36,7 +37,7 @@ public void navigateUp() {
     public NavController getNavController() {
         View view = getView();
         if (view == null) {
-            return null;
+            return NavHostFragment.findNavController(this);
         }
         View tabletFragmentContainer = view.findViewById(R.id.tablet_nav_container);
         if (tabletFragmentContainer != null) {

File: app/src/main/java/org/lsposed/manager/ui/fragment/ModulesFragment.java
Patch:
@@ -368,7 +368,9 @@ public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newStat
                     }
                 }
             });
-            binding.recyclerView.onApplyWindowInsets(requireActivity().getWindow().getDecorView().getRootWindowInsets());
+            var insets = requireActivity().getWindow().getDecorView().getRootWindowInsets();
+            if (insets != null)
+                binding.recyclerView.onApplyWindowInsets(insets);
             RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);
             RecyclerViewKt.addFastScroller(binding.recyclerView, binding.recyclerView);
             return binding.getRoot();

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -406,7 +406,9 @@ public void onBindViewHolder(@NonNull PagerAdapter.ViewHolder holder, int positi
                     holder.recyclerView.setTag(position);
                     holder.recyclerView.setLayoutManager(new LinearLayoutManagerFix(requireActivity()));
                     holder.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> binding.appBar.setRaised(!top));
-                    holder.recyclerView.onApplyWindowInsets(requireActivity().getWindow().getDecorView().getRootWindowInsets());
+                    var insets = requireActivity().getWindow().getDecorView().getRootWindowInsets();
+                    if (insets != null)
+                        holder.recyclerView.onApplyWindowInsets(insets);
                     RecyclerViewKt.fixEdgeEffect(holder.recyclerView, false, true);
                     RecyclerViewKt.addFastScroller(holder.recyclerView, holder.itemView);
                     break;

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoItemFragment.java
Patch:
@@ -406,6 +406,7 @@ public void onBindViewHolder(@NonNull PagerAdapter.ViewHolder holder, int positi
                     holder.recyclerView.setTag(position);
                     holder.recyclerView.setLayoutManager(new LinearLayoutManagerFix(requireActivity()));
                     holder.recyclerView.getBorderViewDelegate().setBorderVisibilityChangedListener((top, oldTop, bottom, oldBottom) -> binding.appBar.setRaised(!top));
+                    holder.recyclerView.onApplyWindowInsets(requireActivity().getWindow().getDecorView().getRootWindowInsets());
                     RecyclerViewKt.fixEdgeEffect(holder.recyclerView, false, true);
                     RecyclerViewKt.addFastScroller(holder.recyclerView, holder.itemView);
                     break;

File: app/src/main/java/org/lsposed/manager/ui/fragment/RepoFragment.java
Patch:
@@ -71,7 +71,6 @@ public class RepoFragment extends BaseFragment implements RepoLoader.Listener {
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
-        repoLoader.addListener(this);
         mSearchListener = new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String query) {
@@ -103,6 +102,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         RecyclerViewKt.addFastScroller(binding.recyclerView, binding.recyclerView);
         RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);
         binding.progress.setVisibilityAfterHide(View.GONE);
+        repoLoader.addListener(this);
         return binding.getRoot();
     }
 

File: core/src/main/java/org/lsposed/lspd/service/BridgeService.java
Patch:
@@ -94,7 +94,7 @@ public void binderDied() {
             bridgeService.unlinkToDeath(this, 0);
             bridgeService = null;
             listener.onSystemServerDied();
-            sendToBridge(serviceBinder, true);
+            new Thread(()-> sendToBridge(serviceBinder, true)).start();
         }
     };
 

File: core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -118,7 +118,7 @@ public String[] enabledModules() {
 
     @Override
     public boolean enableModule(String packageName) throws RemoteException {
-        PackageInfo pkgInfo = PackageService.getPackageInfo(packageName, 0, 0);
+        PackageInfo pkgInfo = PackageService.getPackageInfo(packageName, PackageService.MATCH_ALL_FLAGS, 0);
         if (pkgInfo == null) return false;
         return ConfigManager.getInstance().enableModule(packageName, pkgInfo.applicationInfo.sourceDir);
     }
@@ -210,7 +210,7 @@ public boolean isSepolicyLoaded() throws RemoteException {
     @Override
     public List<UserInfo> getUsers() throws RemoteException {
         var users = new LinkedList<UserInfo>();
-        for(var user: UserService.getUsers()){
+        for (var user : UserService.getUsers()) {
             var info = new UserInfo();
             info.id = user.id;
             info.name = user.name;

File: app/src/main/java/org/lsposed/manager/ui/fragment/ModulesFragment.java
Patch:
@@ -138,7 +138,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
 
         binding.getRoot().bringChildToFront(binding.appBar);
         setupToolbar(binding.toolbar, R.string.Modules, R.menu.menu_modules);
-        binding.viewPager.setAdapter(new PagerAdapter());
+        binding.viewPager.setAdapter(pagerAdapter);
         binding.viewPager.registerOnPageChangeCallback(new ViewPager2.OnPageChangeCallback() {
             @Override
             public void onPageSelected(int position) {
@@ -325,7 +325,6 @@ public void onDestroyView() {
         super.onDestroyView();
 
         binding = null;
-        adapters.clear();
     }
 
     private class PagerAdapter extends RecyclerView.Adapter<PagerAdapter.ViewHolder> {

File: app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -122,6 +122,9 @@ public boolean onCheckedChanged(SwitchBar view, boolean isChecked) {
         @Override
         public void run() {
             synchronized (this) {
+                if (fragment == null || fragment.binding == null) {
+                    return;
+                }
                 fragment.binding.progress.setIndeterminate(false);
                 fragment.binding.swipeRefreshLayout.setRefreshing(false);
                 String queryStr = fragment.searchView != null ? fragment.searchView.getQuery().toString() : "";

File: app/src/main/java/org/lsposed/manager/ui/fragment/HomeFragment.java
Patch:
@@ -167,6 +167,7 @@ public void onResume() {
     @Override
     public void onDestroyView() {
         super.onDestroyView();
+
         binding = null;
     }
 }

File: app/src/main/java/org/lsposed/manager/ui/fragment/ModulesFragment.java
Patch:
@@ -452,9 +452,7 @@ public void onLoadCleared(@Nullable Drawable placeholder) {
 
             if (!isPick) {
                 holder.root.setAlpha(moduleUtil.isModuleEnabled(item.packageName) ? 1.0f : .5f);
-                holder.itemView.setOnClickListener(v -> {
-                    getNavController().navigate(ModulesFragmentDirections.actionModulesFragmentToAppListFragment(item.packageName, item.userId));
-                });
+                holder.itemView.setOnClickListener(v -> getNavController().navigate(ModulesFragmentDirections.actionModulesFragmentToAppListFragment(item.packageName, item.userId)));
                 holder.itemView.setOnLongClickListener(v -> {
                     selectedModule = item;
                     return false;

File: app/src/main/java/org/lsposed/manager/ui/fragment/AppListFragment.java
Patch:
@@ -92,8 +92,9 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        String modulePackageName = getArguments().getString("modulePackageName");
-        int moduleUserId = getArguments().getInt("moduleUserId", -1);
+        AppListFragmentArgs args = AppListFragmentArgs.fromBundle(getArguments());
+        String modulePackageName = args.getModulePackageName();
+        int moduleUserId = args.getModuleUserId();
 
         module = ModuleUtil.getInstance().getModule(modulePackageName, moduleUserId);
         if (module == null) {

File: app/src/main/java/org/lsposed/manager/ConfigManager.java
Patch:
@@ -27,9 +27,9 @@
 import android.os.RemoteException;
 import android.util.Log;
 
-import org.lsposed.lspd.Application;
+import org.lsposed.lspd.models.Application;
+import org.lsposed.lspd.models.UserInfo;
 import org.lsposed.lspd.utils.ParceledListSlice;
-import org.lsposed.lspd.utils.UserInfo;
 import org.lsposed.manager.adapters.ScopeAdapter;
 import org.lsposed.manager.receivers.LSPManagerServiceClient;
 

File: app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -66,7 +66,7 @@
 import com.google.android.material.checkbox.MaterialCheckBox;
 import com.google.android.material.snackbar.Snackbar;
 
-import org.lsposed.lspd.Application;
+import org.lsposed.lspd.models.Application;
 import org.lsposed.manager.App;
 import org.lsposed.manager.BuildConfig;
 import org.lsposed.manager.ConfigManager;

File: app/src/main/java/org/lsposed/manager/receivers/LSPManagerServiceClient.java
Patch:
@@ -26,10 +26,10 @@
 import android.os.ParcelFileDescriptor;
 import android.os.RemoteException;
 
-import org.lsposed.lspd.Application;
 import org.lsposed.lspd.ILSPManagerService;
+import org.lsposed.lspd.models.Application;
+import org.lsposed.lspd.models.UserInfo;
 import org.lsposed.lspd.utils.ParceledListSlice;
-import org.lsposed.lspd.utils.UserInfo;
 
 import java.util.List;
 

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -66,7 +66,7 @@
 import com.google.android.material.snackbar.Snackbar;
 import com.google.android.material.tabs.TabLayoutMediator;
 
-import org.lsposed.lspd.utils.UserInfo;
+import org.lsposed.lspd.models.UserInfo;
 import org.lsposed.manager.ConfigManager;
 import org.lsposed.manager.R;
 import org.lsposed.manager.adapters.AppHelper;

File: app/src/main/java/org/lsposed/manager/ui/activity/RepoItemActivity.java
Patch:
@@ -164,9 +164,7 @@ public void moduleReleasesLoaded(OnlineModule module) {
     @Override
     public void onThrowable(Throwable t) {
         if (releaseAdapter != null) {
-            runOnUiThread(() -> {
-                releaseAdapter.loadItems();
-            });
+            runOnUiThread(() -> releaseAdapter.loadItems());
         }
         if (getLifecycle().getCurrentState().isAtLeast(Lifecycle.State.RESUMED)) {
             Snackbar.make(binding.snackbar, getString(R.string.repo_load_failed, t.getLocalizedMessage()), Snackbar.LENGTH_SHORT).show();

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -41,8 +41,8 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
-import org.lsposed.lspd.Application;
 import org.lsposed.lspd.BuildConfig;
+import org.lsposed.lspd.models.Application;
 
 import java.io.File;
 import java.io.FileNotFoundException;

File: core/src/main/java/org/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -34,11 +34,11 @@
 import android.os.RemoteException;
 import android.util.Log;
 
-import org.lsposed.lspd.Application;
 import org.lsposed.lspd.BuildConfig;
 import org.lsposed.lspd.ILSPManagerService;
+import org.lsposed.lspd.models.Application;
+import org.lsposed.lspd.models.UserInfo;
 import org.lsposed.lspd.utils.ParceledListSlice;
-import org.lsposed.lspd.utils.UserInfo;
 
 import java.lang.reflect.InvocationTargetException;
 import java.util.LinkedList;

File: core/src/main/java/org/lsposed/lspd/service/ParcelUtils.java
Patch:
@@ -19,6 +19,7 @@
 
 package org.lsposed.lspd.service;
 
+import android.annotation.SuppressLint;
 import android.os.Build;
 import android.os.Parcel;
 
@@ -39,6 +40,7 @@ public static String readInterfaceDescriptor(Parcel parcel) {
 
     private static Method obtainMethod;
 
+    @SuppressLint("SoonBlockedPrivateApi")
     public static Parcel fromNativePointer(long ptr) {
         if (ptr == 0) return null;
 

File: core/src/main/java/org/lsposed/lspd/util/ClassUtils.java
Patch:
@@ -51,10 +51,8 @@ private static int getClassStatus(Class<?> clazz, boolean isUnsigned) {
     private static boolean isInitialized(Class<?> clazz) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
             return getClassStatus(clazz, true) >= 14;
-        } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.O_MR1) {
-            return getClassStatus(clazz, false) == 11;
         } else {
-            return getClassStatus(clazz, false) == 10;
+            return getClassStatus(clazz, false) == 11;
         }
     }
 

File: core/src/main/java/org/lsposed/lspd/util/InstallerVerifier.java
Patch:
@@ -39,7 +39,7 @@
 public class InstallerVerifier {
     public static boolean verifyInstallerSignature(ApplicationInfo appInfo) {
         ApkVerifier verifier = new ApkVerifier.Builder(new File(appInfo.sourceDir))
-                .setMinCheckedPlatformVersion(26)
+                .setMinCheckedPlatformVersion(27)
                 .build();
         try {
             ApkVerifier.Result result = verifier.verify();

File: core/src/main/java/org/lsposed/lspd/util/ProxyClassLoader.java
Patch:
@@ -31,7 +31,7 @@ public ProxyClassLoader(ClassLoader parentCL, ClassLoader appCL) {
 
     @Override
     protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {
-        Class clazz = null;
+        Class<?> clazz = null;
 
         try {
             clazz = mClassLoader.loadClass(name);

File: hiddenapi-stubs/src/main/java/android/os/IPowerManager.java
Patch:
@@ -1,7 +1,7 @@
 package android.os;
 
 public interface IPowerManager extends IInterface {
-    void reboot(boolean confirm, String reason, boolean wait);
+    void reboot(boolean confirm, String reason, boolean wait) throws RemoteException;
 
     abstract class Stub extends Binder implements IPowerManager {
 

File: core/src/main/java/org/lsposed/lspd/service/UserService.java
Patch:
@@ -82,6 +82,8 @@ public static int[] getUsers() throws RemoteException {
     public static int getProfileParent(int userId) throws RemoteException {
         IUserManager um = getUserManager();
         if (um == null) return -1;
-        return um.getProfileParentId(userId);
+        var userInfo = um.getProfileParent(userId);
+        if (userInfo == null) return userId;
+        else return userInfo.id;
     }
 }

File: hiddenapi-stubs/src/main/java/android/os/IUserManager.java
Patch:
@@ -7,9 +7,6 @@
 import java.util.List;
 
 public interface IUserManager extends IInterface {
-
-    int getProfileParentId(int userId) throws RemoteException;
-
     @RequiresApi(26)
     boolean isUserUnlocked(int userId)
             throws RemoteException;
@@ -20,6 +17,8 @@ List<UserInfo> getUsers(boolean excludeDying)
     List<UserInfo> getUsers(boolean excludePartial, boolean excludeDying, boolean excludePreCreated)
             throws RemoteException;
 
+    UserInfo getProfileParent(int userId) throws RemoteException;
+
     abstract class Stub extends Binder implements IUserManager {
 
         public static IUserManager asInterface(IBinder obj) {

File: core/src/main/java/org/lsposed/lspd/service/ServiceManager.java
Patch:
@@ -69,13 +69,13 @@ public static void start(String[] args) {
             }
         }
         Log.i(TAG, "starting server...");
-        Log.i(TAG, String.format("version %s (%s)", BuildConfig.VERSION_NAME, BuildConfig.VERSION_NAME));
+        Log.i(TAG, String.format("version %s (%s)", BuildConfig.VERSION_NAME, BuildConfig.VERSION_CODE));
 
         Thread.setDefaultUncaughtExceptionHandler((t, e) -> {
             Log.e(TAG, Log.getStackTraceString(e));
         });
 
-        Looper.prepare();
+        Looper.prepareMainLooper();
         mainService = new LSPosedService();
         moduleService = new LSPModuleService();
         applicationService = new LSPApplicationService();

File: core/src/main/java/org/lsposed/lspd/service/ServiceManager.java
Patch:
@@ -57,7 +57,7 @@ public static IServiceManager getSystemServiceManager() {
 
     // call by ourselves
     public static void start(String[] args) {
-        if (!ConfigManager.getInstance().tryLock()) return;
+        if (!ConfigManager.getInstance().tryLock()) System.exit(0);
 
         android.os.Process.killProcess(android.system.Os.getppid());
         for (String arg : args) {

File: app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -255,7 +255,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             item.setChecked(!item.isChecked());
             preferences.edit().putBoolean("filter_modules", item.isChecked()).apply();
         } else if (itemId == R.id.menu_launch) {
-            Intent launchIntent = AppHelper.getSettingsIntent(module.packageName, module.userId, pm);
+            Intent launchIntent = AppHelper.getSettingsIntent(module.packageName, module.userId);
             if (launchIntent != null) {
                 ConfigManager.startActivityAsUserWithFeature(launchIntent, module.userId);
             } else {
@@ -288,7 +288,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
         }
         int itemId = item.getItemId();
         if (itemId == R.id.menu_launch) {
-            Intent launchIntent = pm.getLaunchIntentForPackage(info.packageName);
+            Intent launchIntent = AppHelper.getLaunchIntentForPackage(info.packageName, info.uid / 100000);
             if (launchIntent != null) {
                 ConfigManager.startActivityAsUserWithFeature(launchIntent, module.userId);
             }
@@ -324,7 +324,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
 
     public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {
         inflater.inflate(R.menu.menu_app_list, menu);
-        Intent intent = AppHelper.getSettingsIntent(module.packageName, module.userId, pm);
+        Intent intent = AppHelper.getSettingsIntent(module.packageName, module.userId);
         if (intent == null) {
             menu.removeItem(R.id.menu_launch);
         }

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -301,7 +301,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
             if (packageName == null) {
                 return false;
             }
-            Intent intent = AppHelper.getSettingsIntent(packageName, module.userId, pm);
+            Intent intent = AppHelper.getSettingsIntent(packageName, module.userId);
             if (intent != null) {
                 ConfigManager.startActivityAsUserWithFeature(intent, module.userId);
             } else {
@@ -491,7 +491,7 @@ public void onLoadCleared(@Nullable Drawable placeholder) {
             holder.itemView.setOnCreateContextMenuListener((menu, v, menuInfo) -> {
                 getMenuInflater().inflate(R.menu.context_menu_modules, menu);
                 menu.setHeaderTitle(item.getAppName());
-                Intent intent = AppHelper.getSettingsIntent(item.packageName, item.userId, pm);
+                Intent intent = AppHelper.getSettingsIntent(item.packageName, item.userId);
                 if (intent == null) {
                     menu.removeItem(R.id.menu_launch);
                 }

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -23,7 +23,6 @@
 
 import android.content.ContentValues;
 import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteStatement;
@@ -352,7 +351,7 @@ private synchronized void cacheModules() {
                 int userId = cursor.getInt(userIdIdx);
                 var pkgInfo = modules.computeIfAbsent(packageName, m -> {
                     try {
-                        return PackageService.getPackageInfoFromAllUsers(m, PackageManager.MATCH_DISABLED_COMPONENTS | PackageManager.MATCH_UNINSTALLED_PACKAGES);
+                        return PackageService.getPackageInfoFromAllUsers(m, 0);
                     } catch (Throwable e) {
                         Log.e(TAG, Log.getStackTraceString(e));
                         return Collections.emptyMap();

File: core/src/main/java/org/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -94,6 +94,7 @@ public void dispatchPackageChanged(Intent intent) throws RemoteException {
                     ConfigManager.getInstance().removeModule(moduleName);
                 break;
             }
+            case Intent.ACTION_PACKAGE_ADDED:
             case Intent.ACTION_PACKAGE_CHANGED: {
                 // make sure that the change is for the complete package, not only a
                 // component

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -73,6 +73,7 @@
 import org.lsposed.manager.R;
 import org.lsposed.manager.adapters.AppHelper;
 import org.lsposed.manager.databinding.ActivityModuleDetailBinding;
+import org.lsposed.manager.databinding.DialogRecyclerviewBinding;
 import org.lsposed.manager.databinding.ItemModuleBinding;
 import org.lsposed.manager.databinding.ItemRepoRecyclerviewBinding;
 import org.lsposed.manager.repo.RepoLoader;
@@ -149,7 +150,7 @@ public void onPageSelected(int position) {
             var userId = adapters.get(position).getUserId();
             pickAdaptor.setFilter(m -> !snapshot.contains(m.packageName));
             pickAdaptor.refresh();
-            var v = new RecyclerView(ModulesActivity.this);
+            var v = DialogRecyclerviewBinding.inflate(getLayoutInflater()).getRoot();
             v.setAdapter(pickAdaptor);
             v.setLayoutManager(new LinearLayoutManagerFix(ModulesActivity.this));
             var dialog = new AlertDialog.Builder(ModulesActivity.this)

File: hiddenapi-stubs/src/main/java/android/app/IActivityManager.java
Patch:
@@ -43,6 +43,8 @@ int broadcastIntent(IApplicationThread caller, Intent intent,
 
     void forceStopPackage(String packageName, int userId);
 
+    boolean startUserInBackground(int userid);
+
     abstract class Stub extends Binder implements IActivityManager {
 
         public static IActivityManager asInterface(IBinder obj) {

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -371,7 +371,7 @@ private class ModuleAdapter extends EmptyStateRecyclerView.EmptyStateAdapter<Mod
         private final int userId;
         private final UserHandle userHandle;
         private boolean isLoaded;
-        private int[] profiles;
+        private int[] profiles = new int[0];
 
         ModuleAdapter(int userId, UserHandle userHandle) {
             this.userId = userId;

File: core/src/main/java/org/lsposed/lspd/hooker/XposedInstallerHooker.java
Patch:
@@ -32,7 +32,7 @@ public class XposedInstallerHooker {
     public static void hookXposedInstaller(final ClassLoader classLoader, IBinder binder) {
         Utils.logI("Found LSPosed Manager, hooking it");
         try {
-            Class<?> serviceClass = XposedHelpers.findClass("org.lsposed.manager.receivers.LSPosedManagerServiceClient", classLoader);
+            Class<?> serviceClass = XposedHelpers.findClass("org.lsposed.manager.receivers.LSPManagerServiceClient", classLoader);
             XposedHelpers.setStaticObjectField(serviceClass, "binder", binder);
 
             Utils.logI("Hooked LSPosed Manager");

File: core/src/main/java/org/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -96,7 +96,6 @@ public void dispatchPackageChanged(Intent intent) throws RemoteException {
 
         ApplicationInfo applicationInfo = PackageService.getApplicationInfo(packageName, PackageManager.GET_META_DATA, 0);
         boolean isXposedModule = applicationInfo != null &&
-                applicationInfo.enabled &&
                 applicationInfo.metaData != null &&
                 applicationInfo.metaData.containsKey("xposedminversion");
 

File: core/src/main/java/org/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -621,8 +621,8 @@ public String getCachePath(String fileName) {
     }
 
     public String getPrefsPath(String fileName, int uid) {
-        int userId = uid % PER_USER_RANGE;
-        return miscPath + File.separator + "prefs" + (userId == 0 ? "" : String.valueOf(userId)) + File.separator + fileName + File.separator;
+        int userId = uid / PER_USER_RANGE;
+        return miscPath + File.separator + "prefs" + (userId == 0 ? "" : String.valueOf(userId)) + File.separator + fileName;
     }
 
     public static void grantManagerPermission() {

File: core/src/main/java/org/lsposed/lspd/config/LSPApplicationServiceClient.java
Patch:
@@ -32,7 +32,6 @@ public class LSPApplicationServiceClient implements ILSPApplicationService {
     static ILSPApplicationService service = null;
     static IBinder serviceBinder = null;
 
-    static String baseCachePath = null;
     static String processName = null;
 
     public static LSPApplicationServiceClient serviceClient = null;

File: app/src/main/java/org/lsposed/manager/util/ModuleUtil.java
Patch:
@@ -110,7 +110,7 @@ public InstalledModule reloadSingleModule(String packageName, int userId) {
                 throw new NameNotFoundException();
             }
         } catch (NameNotFoundException e) {
-            InstalledModule old = installedModules.remove(packageName);
+            InstalledModule old = installedModules.remove(Pair.create(packageName, userId));
             if (old != null) {
                 for (ModuleListener listener : listeners) {
                     listener.onSingleInstalledModuleReloaded();

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -83,7 +83,6 @@
 
 import rikka.recyclerview.RecyclerViewKt;
 import rikka.widget.borderview.BorderRecyclerView;
-import rikka.widget.borderview.BorderView;
 
 public class ModulesActivity extends BaseActivity implements ModuleUtil.ModuleListener {
 
@@ -159,6 +158,9 @@ public boolean onQueryTextChange(String newText) {
                 }
                 new TabLayoutMediator(binding.tabLayout, binding.viewPager, (tab, position) -> tab.setText(titles.get(position))).attach();
             } else {
+                var adapter = new ModuleAdapter(0);
+                adapter.setHasStableIds(true);
+                adapters.add(adapter);
                 binding.tabLayout.setVisibility(View.GONE);
             }
         }

File: core/src/main/java/org/lsposed/lspd/service/BridgeService.java
Patch:
@@ -191,6 +191,7 @@ private static void receiveFromBridge(IBinder binder) {
             return;
         }
 
+        var token = Binder.clearCallingIdentity();
         if (serviceBinder == null) {
             PackageReceiver.register(new BroadcastReceiver() {
                 @Override
@@ -219,6 +220,7 @@ public void onReceive(Context context, Intent intent) {
         } else {
             serviceBinder.unlinkToDeath(LSPSERVICE_DEATH_RECIPIENT, 0);
         }
+        Binder.restoreCallingIdentity(token);
 
         serviceBinder = Binder_allowBlocking(binder);
         service = ILSPosedService.Stub.asInterface(serviceBinder);

File: core/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -283,7 +283,7 @@ private static boolean initNativeModule(ClassLoader mcl, String apk) {
         String moduleLibraryName;
         try {
             while ((moduleLibraryName = moduleLibraryReader.readLine()) != null) {
-                if (!moduleLibraryName.startsWith("#") && moduleLibraryName.endsWith(".so")) {
+                if (!moduleLibraryName.startsWith("#")) {
                     NativeAPI.recordNativeEntrypoint(moduleLibraryName);
                 }
             }

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -278,7 +278,6 @@ public void onLoadCleared(@Nullable Drawable placeholder) {
             holder.itemView.setOnClickListener(v -> {
                 Intent intent = new Intent(ModulesActivity.this, AppListActivity.class);
                 intent.putExtra("modulePackageName", item.packageName);
-                intent.putExtra("moduleName", item.getAppName());
                 startActivity(intent);
             });
 

File: app/src/main/java/org/lsposed/manager/util/NotificationUtil.java
Patch:
@@ -53,7 +53,6 @@ public static void showNotification(Context context, String modulePackageName, S
 
         Intent intent = new Intent(context, AppListActivity.class)
                 .putExtra("modulePackageName", modulePackageName)
-                .putExtra("moduleName", moduleName)
                 .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
 
         PendingIntent contentIntent = PendingIntent.getActivity(context, PENDING_INTENT_OPEN_APP_LIST, intent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);

File: app/src/main/java/org/lsposed/manager/adapters/AppHelper.java
Patch:
@@ -28,13 +28,13 @@
 import android.content.pm.ResolveInfo;
 import android.view.MenuItem;
 
+import org.lsposed.manager.ConfigManager;
+import org.lsposed.manager.R;
+
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
 
-import org.lsposed.manager.ConfigManager;
-import org.lsposed.manager.R;
-
 public class AppHelper {
 
     public static final String SETTINGS_CATEGORY = "de.robv.android.xposed.category.MODULE_SETTINGS";

File: app/src/main/java/org/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -412,6 +412,7 @@ public void onLoadFailed(@Nullable Drawable errorDrawable) {
 
         holder.itemView.setOnCreateContextMenuListener((menu, v, menuInfo) -> {
             activity.getMenuInflater().inflate(R.menu.menu_app_item, menu);
+            menu.setHeaderTitle(appName);
             Intent launchIntent = pm.getLaunchIntentForPackage(appInfo.packageName);
             if (launchIntent == null) {
                 menu.removeItem(R.id.menu_launch);

File: app/src/main/java/org/lsposed/manager/receivers/LSPosedManagerServiceClient.java
Patch:
@@ -24,12 +24,12 @@
 import android.os.ParcelFileDescriptor;
 import android.os.RemoteException;
 
-import java.util.List;
-
 import org.lsposed.lspd.Application;
 import org.lsposed.lspd.ILSPManagerService;
 import org.lsposed.lspd.utils.ParceledListSlice;
 
+import java.util.List;
+
 public class LSPosedManagerServiceClient {
 
     @SuppressWarnings("FieldMayBeFinal")

File: app/src/main/java/org/lsposed/manager/repo/RepoLoader.java
Patch:
@@ -26,6 +26,9 @@
 
 import com.google.gson.Gson;
 
+import org.lsposed.manager.App;
+import org.lsposed.manager.repo.model.OnlineModule;
+
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.Files;
@@ -38,8 +41,6 @@
 import java.util.Map;
 import java.util.concurrent.CopyOnWriteArrayList;
 
-import org.lsposed.manager.App;
-import org.lsposed.manager.repo.model.OnlineModule;
 import okhttp3.Call;
 import okhttp3.Callback;
 import okhttp3.Request;

File: app/src/main/java/org/lsposed/manager/ui/activity/LogsActivity.java
Patch:
@@ -64,7 +64,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.OutputStream;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Calendar;

File: app/src/main/java/org/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -199,7 +199,7 @@ protected BaseAdapter<?> createAdapter() {
 
     private class ModuleAdapter extends BaseAdapter<ModuleAdapter.ViewHolder> {
         private final List<ModuleUtil.InstalledModule> searchList = new ArrayList<>();
-        private List<ModuleUtil.InstalledModule> showList = new ArrayList<>();
+        private final List<ModuleUtil.InstalledModule> showList = new ArrayList<>();
 
         ModuleAdapter() {
             refresh();
@@ -265,6 +265,7 @@ public void onLoadCleared(@Nullable Drawable placeholder) {
 
             holder.itemView.setOnCreateContextMenuListener((menu, v, menuInfo) -> {
                 getMenuInflater().inflate(R.menu.context_menu_modules, menu);
+                menu.setHeaderTitle(item.getAppName());
                 Intent intent = AppHelper.getSettingsIntent(item.packageName, pm);
                 if (intent == null) {
                     menu.removeItem(R.id.menu_launch);

File: app/src/main/java/org/lsposed/manager/ui/activity/base/BaseActivity.java
Patch:
@@ -37,6 +37,7 @@
 import org.lsposed.manager.R;
 import org.lsposed.manager.util.NavUtil;
 import org.lsposed.manager.util.theme.ThemeUtil;
+
 import rikka.core.res.ResourcesKt;
 import rikka.material.app.MaterialActivity;
 

File: app/src/main/java/org/lsposed/manager/ui/activity/base/ListActivity.java
Patch:
@@ -32,6 +32,7 @@
 import org.lsposed.manager.R;
 import org.lsposed.manager.databinding.ActivityListBinding;
 import org.lsposed.manager.util.LinearLayoutManagerFix;
+
 import rikka.recyclerview.RecyclerViewKt;
 
 public abstract class ListActivity extends BaseActivity {

File: app/src/main/java/org/lsposed/manager/ui/dialog/InfoDialogBuilder.java
Patch:
@@ -27,12 +27,13 @@
 import androidx.annotation.NonNull;
 import androidx.core.text.HtmlCompat;
 
-import java.util.Locale;
-
 import org.lsposed.manager.BuildConfig;
 import org.lsposed.manager.ConfigManager;
 import org.lsposed.manager.R;
 import org.lsposed.manager.databinding.DialogInfoBinding;
+
+import java.util.Locale;
+
 import rikka.core.util.ClipboardUtils;
 
 public class InfoDialogBuilder extends BlurBehindDialogBuilder {

File: app/src/main/java/org/lsposed/manager/util/AppModule.java
Patch:
@@ -36,13 +36,14 @@
 import com.bumptech.glide.module.AppGlideModule;
 import com.caverock.androidsvg.SVG;
 
-import java.io.InputStream;
-
 import org.lsposed.manager.App;
 import org.lsposed.manager.R;
 import org.lsposed.manager.util.svg.ExternalFileResolver;
 import org.lsposed.manager.util.svg.SvgDecoder;
 import org.lsposed.manager.util.svg.SvgDrawableTranscoder;
+
+import java.io.InputStream;
+
 import me.zhanghai.android.appiconloader.glide.AppIconModelLoader;
 
 @GlideModule

File: app/src/main/java/org/lsposed/manager/util/BackupUtils.java
Patch:
@@ -25,6 +25,8 @@
 
 import org.json.JSONArray;
 import org.json.JSONObject;
+import org.lsposed.manager.ConfigManager;
+import org.lsposed.manager.adapters.ScopeAdapter;
 
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -34,9 +36,6 @@
 import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
 
-import org.lsposed.manager.ConfigManager;
-import org.lsposed.manager.adapters.ScopeAdapter;
-
 public class BackupUtils {
     private static final int VERSION = 2;
 

File: app/src/main/java/org/lsposed/manager/util/DoHDNS.java
Patch:
@@ -22,12 +22,13 @@
 
 import androidx.annotation.NonNull;
 
+import org.lsposed.manager.App;
+
 import java.net.InetAddress;
 import java.net.UnknownHostException;
 import java.util.List;
 import java.util.Locale;
 
-import org.lsposed.manager.App;
 import okhttp3.Dns;
 import okhttp3.HttpUrl;
 import okhttp3.OkHttpClient;

File: app/src/main/java/org/lsposed/manager/util/NavUtil.java
Patch:
@@ -26,6 +26,7 @@
 import androidx.browser.customtabs.CustomTabsIntent;
 
 import org.lsposed.manager.ui.activity.base.BaseActivity;
+
 import rikka.core.res.ResourcesKt;
 import rikka.core.util.ResourceUtils;
 

File: app/src/main/java/org/lsposed/manager/util/holiday/HolidayHelper.java
Patch:
@@ -20,8 +20,6 @@
 package org.lsposed.manager.util.holiday;
 
 import android.app.Activity;
-import android.graphics.ColorMatrix;
-import android.graphics.ColorMatrixColorFilter;
 import android.graphics.drawable.ColorDrawable;
 import android.view.View;
 import android.view.ViewGroup;

File: app/src/main/java/org/lsposed/manager/util/svg/SvgDecoder.java
Patch:
@@ -19,6 +19,8 @@
 
 package org.lsposed.manager.util.svg;
 
+import static com.bumptech.glide.request.target.Target.SIZE_ORIGINAL;
+
 import androidx.annotation.NonNull;
 
 import com.bumptech.glide.load.Options;
@@ -31,8 +33,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 
-import static com.bumptech.glide.request.target.Target.SIZE_ORIGINAL;
-
 /**
  * Decodes an SVG internal representation from an {@link InputStream}.
  */

File: app/src/main/java/org/lsposed/manager/util/theme/ThemeUtil.java
Patch:
@@ -25,11 +25,12 @@
 import androidx.annotation.ColorRes;
 import androidx.annotation.StyleRes;
 
+import org.lsposed.manager.App;
+import org.lsposed.manager.R;
+
 import java.util.HashMap;
 import java.util.Map;
 
-import org.lsposed.manager.App;
-import org.lsposed.manager.R;
 import rikka.core.util.ResourceUtils;
 import rikka.material.app.DayNightDelegate;
 

File: app/src/main/java/org/lsposed/manager/util/NotificationUtil.java
Patch:
@@ -65,7 +65,7 @@ public static void showNotification(Context context, String modulePackageName, S
                 .setContentTitle(title)
                 .setContentText(content)
                 .setAutoCancel(true)
-                .setSmallIcon(R.drawable.ic_notification)
+                .setSmallIcon(R.drawable.ic_extension)
                 .setColor(context.getColor(R.color.color_primary))
                 .setContentIntent(contentIntent)
                 .setStyle(style);

File: core/src/main/java/org/lsposed/lspd/service/BridgeService.java
Patch:
@@ -265,7 +265,7 @@ public static boolean onTransact(@NonNull Parcel data, @Nullable Parcel reply, i
                 try {
                     String processName = data.readString();
                     IBinder heartBeat = data.readStrongBinder();
-                    var applicationService = service.requestApplicationService(Binder.getCallingUid(), Binder.getCallingPid(), processName, heartBeat);
+                    var applicationService = service == null ? null : service.requestApplicationService(Binder.getCallingUid(), Binder.getCallingPid(), processName, heartBeat);
                     if (applicationService != null) binder = applicationService.asBinder();
                 } catch (RemoteException e) {
                     Log.e(TAG, Log.getStackTraceString(e));

File: app/src/main/java/org/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -32,6 +32,7 @@
 import com.bumptech.glide.Glide;
 import com.google.android.material.snackbar.Snackbar;
 
+import org.lsposed.manager.BuildConfig;
 import org.lsposed.manager.ConfigManager;
 import org.lsposed.manager.R;
 import org.lsposed.manager.databinding.ActivityMainBinding;
@@ -83,6 +84,7 @@ public void onCreate(Bundle savedInstanceState) {
             binding.translators.setMovementMethod(LinkMovementMethod.getInstance());
             binding.translators.setTransformationMethod(new LinkTransformationMethod(this));
             binding.translators.setText(HtmlCompat.fromHtml(getString(R.string.about_translators, getString(R.string.translators)), HtmlCompat.FROM_HTML_MODE_LEGACY));
+            binding.version.setText(String.format(Locale.US, "%s (%s)", BuildConfig.VERSION_NAME, BuildConfig.VERSION_CODE));
             new BlurBehindDialogBuilder(this)
                     .setView(binding.getRoot())
                     .show();

File: app/src/main/java/org/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -156,7 +156,7 @@ public void onClick(View v) {
     @Override
     protected void onResume() {
         super.onResume();
-        int moduleCount = ModuleUtil.getInstance().getEnabledModules().size();
+        int moduleCount = ModuleUtil.getInstance().getEnabledModulesCount();
         binding.modulesSummary.setText(getResources().getQuantityString(R.plurals.modules_enabled_count, moduleCount, moduleCount));
     }
 }

File: core/src/main/java/org/lsposed/lspd/nativebridge/ClassLinker.java
Patch:
@@ -30,7 +30,6 @@ public class ClassLinker {
     @FastNative
     public static native void setEntryPointsToInterpreter(Executable method);
 
-    @FastNative
     public static void onPostFixupStaticTrampolines(Class<?> clazz) {
         // native flags will be re-set in hooking logic
         PendingHooks.hookPendingMethod(clazz);

File: app/src/main/java/org/lsposed/manager/ui/activity/RepoActivity.java
Patch:
@@ -179,7 +179,7 @@ public int getItemCount() {
 
         public void setData(Collection<OnlineModule> modules) {
             fullList = new ArrayList<>(modules);
-            fullList = fullList.stream().filter((onlineModule -> !onlineModule.isHide() && !onlineModule.getReleases().isEmpty())).collect(Collectors.toList());
+            fullList = fullList.stream().filter((onlineModule -> !onlineModule.isHide())).collect(Collectors.toList());
             int sort = preferences.getInt("repo_sort", 0);
             if (sort == 0) {
                 fullList.sort((o1, o2) -> labelComparator.compare(o1.getDescription(), o2.getDescription()));

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -252,8 +252,7 @@ public static synchronized boolean installManagerIfAbsent(String packageName, Fi
                 boolean signatureMatch = InstallerVerifier.verifyInstallerSignature(pkgInfo.applicationInfo);
                 if (versionMatch && signatureMatch && pkgInfo.versionCode >= BuildConfig.VERSION_CODE)
                     return false;
-                if (!BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME.equals(packageName) || !signatureMatch
-                        || !versionMatch && pkgInfo.versionCode > BuildConfig.VERSION_CODE)
+                if (!signatureMatch || !versionMatch && pkgInfo.versionCode > BuildConfig.VERSION_CODE)
                     uninstallPackage(new VersionedPackage(pkgInfo.packageName, pkgInfo.versionCode));
             }
 

File: app/src/main/java/org/lsposed/manager/ui/activity/RepoActivity.java
Patch:
@@ -64,7 +64,7 @@ public class RepoActivity extends ListActivity implements RepoLoader.Listener {
     public void onCreate(@Nullable Bundle savedInstanceState) {
         repoLoader.addListener(this);
         super.onCreate(savedInstanceState);
-        if (!ConfigManager.isMagiskInstalled()) {
+        if (ConfigManager.getXposedVersionName() == null && !ConfigManager.isMagiskInstalled()) {
             Toast.makeText(this, R.string.lsposed_not_active, Toast.LENGTH_LONG).show();
             finish();
         }

File: core/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -134,7 +134,7 @@ public static int getXposedVersion() {
 	 */
 	public synchronized static void log(String text) {
 		Log.i(TAG, text);
-		ModuleLogger.log(text);
+		ModuleLogger.log(text, false);
 	}
 
 	/**
@@ -148,7 +148,7 @@ public synchronized static void log(String text) {
 	public synchronized static void log(Throwable t) {
 		String logStr = Log.getStackTraceString(t);
 		Log.e(TAG, logStr);
-		ModuleLogger.log(logStr);
+		ModuleLogger.log(logStr, true);
 	}
 
 	/**

File: core/src/main/java/org/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -19,6 +19,7 @@
 
 package org.lsposed.lspd.service;
 
+import android.content.ComponentName;
 import android.content.Intent;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageManager;
@@ -31,7 +32,6 @@
 import java.util.Arrays;
 
 import org.lsposed.lspd.Application;
-import pxb.android.arsc.Config;
 
 import static org.lsposed.lspd.service.ServiceManager.TAG;
 
@@ -101,7 +101,7 @@ public void dispatchPackageChanged(Intent intent) throws RemoteException {
             broadcastIntent.addFlags(0x01000000);
             broadcastIntent.addFlags(0x00400000);
             broadcastIntent.setData(intent.getData());
-            broadcastIntent.setPackage(ConfigManager.getInstance().getManagerPackageName());
+            broadcastIntent.setComponent(ComponentName.unflattenFromString(ConfigManager.getInstance().getManagerPackageName() + "/.receivers.ServiceReceiver"));
 
             try {
                 ActivityManagerService.broadcastIntentWithFeature(null, null, broadcastIntent,

File: core/src/main/java/org/lsposed/lspd/service/PackageService.java
Patch:
@@ -252,7 +252,7 @@ public static synchronized boolean installManagerIfAbsent(String packageName, Fi
                 boolean signatureMatch = InstallerVerifier.verifyInstallerSignature(pkgInfo.applicationInfo);
                 if (versionMatch && signatureMatch && pkgInfo.versionCode >= BuildConfig.VERSION_CODE)
                     return false;
-                if (packageName != BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME || !signatureMatch
+                if (!BuildConfig.DEFAULT_MANAGER_PACKAGE_NAME.equals(packageName) || !signatureMatch
                         || !versionMatch && pkgInfo.versionCode > BuildConfig.VERSION_CODE)
                     uninstallPackage(new VersionedPackage(pkgInfo.packageName, pkgInfo.versionCode));
             }

File: core/src/main/java/org/lsposed/lspd/util/InstallerVerifier.java
Patch:
@@ -23,6 +23,7 @@
 import android.content.Context;
 import android.content.pm.ApplicationInfo;
 import android.os.Bundle;
+import android.os.Handler;
 import android.widget.Toast;
 
 import com.android.apksig.ApkVerifier;
@@ -68,7 +69,7 @@ protected void afterHookedMethod(MethodHookParam param) {
                         Utils.logW("showErrorToast: ", t);
                         Toast.makeText((Context) param.thisObject, "This application has been destroyed, please make sure you download it from the official source.", Toast.LENGTH_LONG).show();
                     }
-                    System.exit(0);
+                    new Handler().postDelayed(() -> System.exit(0), 50);
                 }
             });
         } catch (Throwable t) {

File: app/src/main/java/io/github/lsposed/manager/receivers/ServiceReceiver.java
Patch:
@@ -28,7 +28,7 @@
 import io.github.lsposed.manager.util.ModuleUtil;
 import io.github.lsposed.manager.util.NotificationUtil;
 
-public class EdServiceReceiver extends BroadcastReceiver {
+public class ServiceReceiver extends BroadcastReceiver {
 
     private static String getPackageName(Intent intent) {
         Uri uri = intent.getData();

File: app/src/main/java/io/github/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -41,8 +41,8 @@
 import io.github.lsposed.manager.databinding.ActivityMainBinding;
 import io.github.lsposed.manager.databinding.DialogAboutBinding;
 import io.github.lsposed.manager.ui.activity.base.BaseActivity;
-import io.github.lsposed.manager.ui.fragment.StatusDialogBuilder;
-import io.github.lsposed.manager.util.BlurBehindDialogBuilder;
+import io.github.lsposed.manager.ui.dialog.StatusDialogBuilder;
+import io.github.lsposed.manager.ui.dialog.BlurBehindDialogBuilder;
 import io.github.lsposed.manager.util.GlideHelper;
 import io.github.lsposed.manager.util.ModuleUtil;
 import io.github.lsposed.manager.util.NavUtil;

File: app/src/main/java/io/github/lsposed/manager/ui/dialog/BlurBehindDialogBuilder.java
Patch:
@@ -17,7 +17,7 @@
  * Copyright (C) 2021 LSPosed Contributors
  */
 
-package io.github.lsposed.manager.util;
+package io.github.lsposed.manager.ui.dialog;
 
 import android.animation.ValueAnimator;
 import android.annotation.SuppressLint;

File: app/src/main/java/io/github/lsposed/manager/ui/dialog/StatusDialogBuilder.java
Patch:
@@ -14,11 +14,10 @@
  * You should have received a copy of the GNU General Public License
  * along with LSPosed.  If not, see <https://www.gnu.org/licenses/>.
  *
- * Copyright (C) 2020 EdXposed Contributors
  * Copyright (C) 2021 LSPosed Contributors
  */
 
-package io.github.lsposed.manager.ui.fragment;
+package io.github.lsposed.manager.ui.dialog;
 
 import android.annotation.SuppressLint;
 import android.content.Context;
@@ -39,7 +38,6 @@
 import io.github.lsposed.manager.ConfigManager;
 import io.github.lsposed.manager.R;
 import io.github.lsposed.manager.databinding.StatusInstallerBinding;
-import io.github.lsposed.manager.util.BlurBehindDialogBuilder;
 
 @SuppressLint("StaticFieldLeak")
 public class StatusDialogBuilder extends BlurBehindDialogBuilder {

File: app/src/main/java/io/github/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -173,6 +173,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {
                                         Toast.makeText(ModulesActivity.this, text, Toast.LENGTH_SHORT).show();
                                     }
                                 });
+                                if (success) moduleUtil.reloadSingleModule(module.packageName);
                             }))
                     .setNegativeButton(android.R.string.cancel, null)
                     .show();

File: app/src/main/java/io/github/lsposed/manager/util/ModuleUtil.java
Patch:
@@ -107,6 +107,9 @@ public InstalledModule reloadSingleModule(String packageName) {
         PackageInfo pkg;
         try {
             pkg = ConfigManager.getPackageInfo(packageName, PackageManager.GET_META_DATA);
+            if (pkg == null) {
+                throw new NameNotFoundException();
+            }
         } catch (NameNotFoundException e) {
             InstalledModule old = installedModules.remove(packageName);
             if (old != null) {

File: core/src/main/java/io/github/lsposed/lspd/service/PackageService.java
Patch:
@@ -221,7 +221,7 @@ public IntentSender getIntentSender() throws IllegalAccessException, InvocationT
     public static boolean uninstallPackage(VersionedPackage versionedPackage) throws RemoteException, InterruptedException, InvocationTargetException, NoSuchMethodException, InstantiationException, IllegalAccessException {
         CountDownLatch latch = new CountDownLatch(1);
         final boolean[] result = {false};
-        pm.getPackageInstaller().uninstallExistingPackage(versionedPackage, "com.android.shell", new IntentSenderAdaptor() {
+        pm.getPackageInstaller().uninstall(versionedPackage, null, 0x00000002, new IntentSenderAdaptor() {
             @Override
             public void send(Intent intent) {
                 int status = intent.getIntExtra(PackageInstaller.EXTRA_STATUS, PackageInstaller.STATUS_FAILURE);

File: hiddenapi-stubs/src/main/java/android/content/pm/IPackageInstaller.java
Patch:
@@ -1,14 +1,12 @@
 package android.content.pm;
 
-import android.content.IntentSender;
 import android.os.Binder;
 import android.os.IBinder;
 import android.os.IInterface;
 
 public interface IPackageInstaller extends IInterface {
 
-    void uninstallExistingPackage(VersionedPackage versionedPackage, String callerPackageName,
-                                  IntentSender statusReceiver, int userId);
+    void uninstall(android.content.pm.VersionedPackage versionedPackage, java.lang.String callerPackageName, int flags, android.content.IntentSender statusReceiver, int userId) throws android.os.RemoteException;
 
     abstract class Stub extends Binder implements IPackageInstaller {
         public static IPackageInstaller asInterface(IBinder obj) {

File: app/src/main/java/io/github/lsposed/manager/ui/activity/RepoActivity.java
Patch:
@@ -167,7 +167,7 @@ public void setData(Collection<OnlineModule> modules) {
             if (sort == 0) {
                 fullList.sort((o1, o2) -> labelComparator.compare(o1.getDescription(), o2.getDescription()));
             } else if (sort == 1) {
-                fullList.sort(Collections.reverseOrder(Comparator.comparing(o -> Instant.parse(o.getUpdatedAt()))));
+                fullList.sort(Collections.reverseOrder(Comparator.comparing(o -> Instant.parse(o.getReleases().get(0).getUpdatedAt()))));
             }
             String queryStr = searchView != null ? searchView.getQuery().toString() : "";
             runOnUiThread(() -> getFilter().filter(queryStr));

File: core/src/main/java/io/github/lsposed/lspd/nativebridge/Yahfa.java
Patch:
@@ -36,5 +36,5 @@ public class Yahfa {
 
     public static native boolean isHooked(Member member);
 
-    public static native Class<?> buildHooker(ClassLoader appClassLoader, Class<?> returnType, Class<?>[] params);
+    public static native Class<?> buildHooker(ClassLoader appClassLoader, Class<?> returnType, Class<?>[] params, String methodName);
 }

File: app/src/main/java/io/github/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -90,7 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
         String installXposedVersion = ConfigManager.getXposedVersionName();
         int cardBackgroundColor;
         if (installXposedVersion != null) {
-            binding.statusTitle.setText(String.format(Locale.US, "%s %s", getString(R.string.Activated), ConfigManager.getVariantString()));
+            binding.statusTitle.setText(getString(R.string.Activated, ConfigManager.getVariantString()));
             if (!ConfigManager.isPermissive()) {
                 if (Helpers.currentHoliday == Helpers.Holidays.LUNARNEWYEAR) {
                     cardBackgroundColor = 0xfff05654;

File: core/src/main/java/io/github/lsposed/lspd/service/PackageService.java
Patch:
@@ -117,6 +117,7 @@ public static void grantRuntimePermission(String packageName, String permissionN
 
     private static Set<String> fetchProcesses(PackageInfo pkgInfo) {
         HashSet<String> processNames = new HashSet<>();
+        if (pkgInfo == null) return processNames;
         for (ComponentInfo[] componentInfos : new ComponentInfo[][]{pkgInfo.activities, pkgInfo.receivers, pkgInfo.providers}) {
             if (componentInfos == null) continue;
             for (ComponentInfo componentInfo : componentInfos) {
@@ -148,6 +149,7 @@ private static PackageInfo getPackageInfoWithComponents(String packageName, int
             pkgInfo = pm.getPackageInfo(packageName, flags | PackageManager.GET_ACTIVITIES | PackageManager.GET_SERVICES | PackageManager.GET_RECEIVERS | PackageManager.GET_PROVIDERS, userId);
         } catch (Exception e) {
             pkgInfo = pm.getPackageInfo(packageName, flags, userId);
+            if (pkgInfo == null) return null;
             try {
                 pkgInfo.activities = pm.getPackageInfo(packageName, flags | PackageManager.GET_ACTIVITIES, userId).activities;
             } catch (Exception ignored) {

File: app/src/main/java/io/github/lsposed/manager/util/BlurBehindDialogBuilder.java
Patch:
@@ -35,7 +35,7 @@
 @SuppressWarnings({"JavaReflectionMemberAccess", "ConstantConditions"})
 @SuppressLint("PrivateApi")
 public class BlurBehindDialogBuilder extends AlertDialog.Builder {
-    private static final boolean supportBlur = getSystemProperty("ro.surface_flinger.supports_background_blur", false) && getSystemProperty("persist.sys.sf.disable_blurs", false);
+    private static final boolean supportBlur = getSystemProperty("ro.surface_flinger.supports_background_blur", false) && !getSystemProperty("persist.sys.sf.disable_blurs", false);
 
     public BlurBehindDialogBuilder(@NonNull Context context) {
         super(context);

File: app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -494,6 +494,9 @@ public void refresh(boolean force) {
             }
             refreshing = true;
         }
+        activity.binding.progress.setVisibility(View.INVISIBLE);
+        activity.binding.progress.setIndeterminate(true);
+        activity.binding.progress.setVisibility(View.VISIBLE);
         enabled = ModuleUtil.getInstance().isModuleEnabled(modulePackageName);
         activity.binding.masterSwitch.setOnCheckedChangeListener(null);
         activity.binding.masterSwitch.setChecked(enabled);

File: app/src/main/java/io/github/lsposed/manager/ui/fragment/StatusDialogBuilder.java
Patch:
@@ -130,7 +130,6 @@ public static String getArch() {
 
     private String getAndroidVersion() {
         switch (Build.VERSION.SDK_INT) {
-            case 26:
             case 27:
                 return "Oreo";
             case 28:

File: core/src/main/java/io/github/lsposed/lspd/service/PackageService.java
Patch:
@@ -128,7 +128,7 @@ private static Set<String> fetchProcesses(PackageInfo pkgInfo) {
     public static Pair<Set<String>, Integer> fetchProcessesWithUid(Application app) throws RemoteException {
         IPackageManager pm = getPackageManager();
         if (pm == null) return new Pair<>(Collections.emptySet(), -1);
-        int baseFlag = PackageManager.MATCH_DISABLED_COMPONENTS | PackageManager.MATCH_DIRECT_BOOT_AWARE | PackageManager.MATCH_DIRECT_BOOT_UNAWARE;
+        int baseFlag = PackageManager.MATCH_DISABLED_COMPONENTS | PackageManager.MATCH_UNINSTALLED_PACKAGES | PackageManager.MATCH_DIRECT_BOOT_AWARE | PackageManager.MATCH_DIRECT_BOOT_UNAWARE;
         PackageInfo pkgInfo = getPackageInfoWithComponents(app.packageName, baseFlag, app.userId);
         if (pkgInfo == null || pkgInfo.applicationInfo == null)
             return new Pair<>(Collections.emptySet(), -1);
@@ -138,7 +138,7 @@ public static Pair<Set<String>, Integer> fetchProcessesWithUid(Application app)
     private static PackageInfo getPackageInfoWithComponents(String packageName, int flags, int userId) throws RemoteException {
         PackageInfo pkgInfo;
         try {
-            pkgInfo = pm.getPackageInfo(packageName, PackageManager.GET_ACTIVITIES | PackageManager.GET_SERVICES | PackageManager.GET_RECEIVERS | PackageManager.GET_PROVIDERS, userId);
+            pkgInfo = pm.getPackageInfo(packageName, flags | PackageManager.GET_ACTIVITIES | PackageManager.GET_SERVICES | PackageManager.GET_RECEIVERS | PackageManager.GET_PROVIDERS, userId);
         } catch (Exception e) {
             pkgInfo = pm.getPackageInfo(packageName, flags, userId);
             try {

File: app/src/main/java/io/github/lsposed/manager/receivers/LSPosedManagerServiceClient.java
Patch:
@@ -45,7 +45,7 @@ public static int getXposedVersionCode() throws RemoteException, NullPointerExce
 
     public static List<PackageInfo> getInstalledPackagesFromAllUsers(int flags, boolean filterNoProcess) throws RemoteException, NullPointerException {
         ensureService();
-        ParceledListSlice<PackageInfo> parceledListSlice = service.getInstalledPackagesFromAllUsers(flags, false);
+        ParceledListSlice<PackageInfo> parceledListSlice = service.getInstalledPackagesFromAllUsers(flags, filterNoProcess);
         //
         return parceledListSlice.getList();
     }

File: core/src/main/java/io/github/lsposed/lspd/service/UserService.java
Patch:
@@ -66,7 +66,7 @@ public static int[] getUsers() throws RemoteException {
         } else {
             try {
                 users = um.getUsers(true);
-            } catch (NoSuchFieldError e) {
+            } catch (NoSuchMethodError e) {
                 users = um.getUsers(true, true, true);
             }
         }

File: hiddenapi-stubs/src/main/java/android/os/IUserManager.java
Patch:
@@ -15,7 +15,6 @@ boolean isUserUnlocked(int userId)
     List<UserInfo> getUsers(boolean excludeDying)
             throws RemoteException;
 
-    @RequiresApi(30)
     List<UserInfo> getUsers(boolean excludePartial, boolean excludeDying, boolean excludePreCreated)
             throws RemoteException;
 

File: core/src/main/java/io/github/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -96,7 +96,7 @@ public class ConfigManager {
     private static final File modulesLogPath = new File(logPath, "modules.log");
     private static final File verboseLogPath = new File(logPath, "all.log");
 
-    final FileObserver configObserver = new FileObserver(configPath, FileObserver.MODIFY | FileObserver.DELETE | FileObserver.CREATE | FileObserver.MOVED_TO) {
+    final FileObserver configObserver = new FileObserver(configPath.getAbsolutePath(), FileObserver.MODIFY | FileObserver.DELETE | FileObserver.CREATE | FileObserver.MOVED_TO) {
         @Override
         public void onEvent(int event, @Nullable String path) {
             updateConfig();

File: core/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -223,7 +223,7 @@ private static XResources cloneToXResources(XC_MethodHook.MethodHookParam param,
         // Replace the returned resources with our subclass.
         XResources newRes = new XResources(
                 (ClassLoader) XposedHelpers.getObjectField(param.getResult(), "mClassLoader"));
-        HiddenApiBridge.Resources_setImpl(newRes, (ResourcesImpl) XposedHelpers.getObjectField(Resources.getSystem(), "mResourcesImpl"));
+        HiddenApiBridge.Resources_setImpl(newRes, (ResourcesImpl) XposedHelpers.getObjectField(param.getResult(), "mResourcesImpl"));
         newRes.initObject(resDir);
 
         // Invoke handleInitPackageResources().

File: core/src/main/java/io/github/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -68,6 +68,7 @@ public void dispatchPackageChanged(Intent intent) throws RemoteException {
             Log.e(TAG, "Package name is null");
             return;
         }
+        Log.d(TAG, "New installed: " + packageName);
         int uid = intent.getIntExtra(Intent.EXTRA_UID, -1);
         int userId = intent.getIntExtra(Intent.EXTRA_USER, -1);
         boolean replacing = intent.getBooleanExtra(Intent.EXTRA_REPLACING, false);
@@ -103,7 +104,9 @@ public void dispatchPackageChanged(Intent intent) throws RemoteException {
             }
         }
         if (!intent.getAction().equals(Intent.ACTION_PACKAGE_REMOVED) && uid > 0 && ConfigManager.getInstance().isManager(packageName)) {
+            Log.d(TAG, "Manager updated");
             try {
+                ConfigManager.getInstance().updateManager();
                 ConfigManager.grantManagerPermission();
             } catch (Throwable e) {
                 Log.e(TAG, Log.getStackTraceString(e));

File: core/src/main/java/io/github/lsposed/lspd/sandhook/core/SandHookImpl.java
Patch:
@@ -53,6 +53,7 @@ public int getVariant() {
 
     @Override
     public void init() {
+        SandHook.init(com.swift.sandhook.SandHook.class, ClassNeverCall.class);
         int sdkVersion = Build.VERSION.SDK_INT;
         if (Build.VERSION.PREVIEW_SDK_INT != 0) {
             sdkVersion += 1;

File: app/src/main/java/io/github/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -281,7 +281,6 @@ public void run() {
                 showList = fullList;
                 String queryStr = searchView != null ? searchView.getQuery().toString() : "";
                 runOnUiThread(() -> getFilter().filter(queryStr));
-                moduleUtil.updateModulesList();
             }
         };
 

File: app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -336,7 +336,8 @@ public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflat
         if (intent == null) {
             menu.removeItem(R.id.menu_launch);
         }
-        if (recommendedList.isEmpty()) {
+        List<String> scopeList = ModuleUtil.getInstance().getModule(modulePackageName).getScopeList();
+        if (scopeList == null || scopeList.isEmpty()) {
             menu.removeItem(R.id.use_recommended);
         }
         menu.findItem(R.id.item_show_system).setChecked(preferences.getBoolean("show_system_apps", false));

File: core/src/main/java/io/github/lsposed/lspd/service/PackageService.java
Patch:
@@ -47,7 +47,7 @@ public static String[] getPackagesForUid(int uid) throws RemoteException {
     public static ParceledListSlice<PackageInfo> getInstalledPackagesFromAllUsers(int flags) throws RemoteException {
         ArrayList<PackageInfo> res = new ArrayList<>();
         IPackageManager pm = getPackageManager();
-        if (pm == null) return new ParceledListSlice<>(res);
+        if (pm == null) return ParceledListSlice.emptyList();
         for (int userId : UserService.getUsers()) {
             res.addAll(pm.getInstalledPackages(flags, userId).getList());
         }

File: core/src/main/java/io/github/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -52,7 +52,7 @@ public String[] getModulesList(String processName) throws RemoteException {
         ensureRegistered();
         int callingUid = Binder.getCallingUid();
         if (callingUid == 1000 && processName.equals("android")) {
-            ConfigManager.getModulesPathForSystemServer();
+            return ConfigManager.getInstance().getModulesPathForSystemServer();
         }
         return ConfigManager.getInstance().getModulesPathForProcess(processName, callingUid);
     }

File: core/src/main/java/io/github/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -20,7 +20,7 @@ public ILSPApplicationService requestApplicationService(int uid, int pid, String
             return null;
         }
         if (uid == 1000 && processName.equals("android")) {
-            if (ConfigManager.shouldSkipSystemServer())
+            if (ConfigManager.getInstance().shouldSkipSystemServer())
                 return null;
             else
                 return ServiceManager.getApplicationService();

File: core/src/main/java/io/github/lsposed/lspd/service/LSPosedService.java
Patch:
@@ -26,7 +26,7 @@ public ILSPApplicationService requestApplicationService(int uid, int pid, String
                 return ServiceManager.getApplicationService();
         }
         if (ConfigManager.getInstance().shouldSkipProcess(new ConfigManager.ProcessScope(processName, uid))) {
-            Log.d(TAG, "Skipped " + processName);
+            Log.d(TAG, "Skipped " + processName + "/" + uid);
             return null;
         }
         if (ServiceManager.getApplicationService().hasRegister(uid, pid)) {
@@ -66,7 +66,7 @@ public void dispatchPackageChanged(Intent intent) throws RemoteException {
         }
         if (!intent.getAction().equals(Intent.ACTION_PACKAGE_REMOVED) && uid > 0 && ConfigManager.getInstance().isManager(packageName)) {
             try {
-                ConfigManager.getInstance().grantManagerPermission();
+                ConfigManager.grantManagerPermission();
             } catch (Throwable e) {
                 Log.e(TAG, Log.getStackTraceString(e));
             }

File: core/src/main/java/io/github/lsposed/lspd/service/ServiceManager.java
Patch:
@@ -57,7 +57,7 @@ public void onResponseFromBridgeService(boolean response) {
         });
 
         try {
-            ConfigManager.getInstance().grantManagerPermission();
+            ConfigManager.grantManagerPermission();
         } catch (Throwable e) {
             Log.e(TAG, Log.getStackTraceString(e));
         }

File: app/src/main/java/io/github/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -188,11 +188,11 @@ public void onLoadCleared(@Nullable Drawable placeholder) {
                 sb.append(getString(R.string.module_empty_description));
             }
 
-            int installedXposedVersion = ConfigManager.getXposedApiVersion();
+            int installXposedVersion = ConfigManager.getXposedApiVersion();
             String warningText = null;
             if (item.minVersion == 0) {
                 warningText = getString(R.string.no_min_version_specified);
-            } else if (installedXposedVersion > 0 && item.minVersion > installedXposedVersion) {
+            } else if (installXposedVersion > 0 && item.minVersion > installXposedVersion) {
                 warningText = String.format(getString(R.string.warning_xposed_min_version), item.minVersion);
             } else if (item.minVersion < ModuleUtil.MIN_MODULE_VERSION) {
                 warningText = String.format(getString(R.string.warning_min_version_too_low), item.minVersion, ModuleUtil.MIN_MODULE_VERSION);

File: core/src/main/java/io/github/lsposed/lspd/hooker/SystemMainHooker.java
Patch:
@@ -44,7 +44,7 @@ protected void afterHookedMethod(MethodHookParam param) throws Throwable {
             systemServerCL = Thread.currentThread().getContextClassLoader();
             // deopt methods in SYSTEMSERVERCLASSPATH
             PrebuiltMethodsDeopter.deoptSystemServerMethods(systemServerCL);
-            Main.getEdxpImpl().getRouter().startSystemServerHook();
+            Main.getImpl().getRouter().startSystemServerHook();
         } catch (Throwable t) {
             Hookers.logE("error when hooking systemMain", t);
         }

File: core/src/main/java/io/github/lsposed/lspd/sandhook/core/SandHookImpl.java
Patch:
@@ -35,7 +35,7 @@ public class SandHookImpl extends BaseImpl {
 
     static {
         final Impl lspdImpl = new SandHookImpl();
-        if (Main.setEdxpImpl(lspdImpl)) {
+        if (Main.setImpl(lspdImpl)) {
             lspdImpl.init();
         }
     }

File: core/src/main/java/io/github/lsposed/lspd/yahfa/core/YahfaImpl.java
Patch:
@@ -34,7 +34,7 @@ public class YahfaImpl extends BaseImpl {
 
     static {
         final Impl lspdImpl = new YahfaImpl();
-        if (Main.setEdxpImpl(lspdImpl)) {
+        if (Main.setImpl(lspdImpl)) {
             lspdImpl.init();
         }
     }

File: app/src/main/java/io/github/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -87,9 +87,9 @@ public void onCreate(Bundle savedInstanceState) {
         Glide.with(binding.appIcon)
                 .load(GlideHelper.wrapApplicationInfoForIconLoader(getApplicationInfo()))
                 .into(binding.appIcon);
-        String installedXposedVersion = ConfigManager.getXposedVersionName();
+        String installXposedVersion = ConfigManager.getXposedVersionName();
         int cardBackgroundColor;
-        if (installedXposedVersion != null) {
+        if (installXposedVersion != null) {
             binding.statusTitle.setText(String.format(Locale.US, "%s %s", getString(R.string.Activated), ConfigManager.getVariantString()));
             if (!ConfigManager.isPermissive()) {
                 if (Helpers.currentHoliday == Helpers.Holidays.LUNARNEWYEAR) {
@@ -98,7 +98,7 @@ public void onCreate(Bundle savedInstanceState) {
                     cardBackgroundColor = ResourcesKt.resolveColor(getTheme(), R.attr.colorNormal);
                 }
                 binding.statusIcon.setImageResource(R.drawable.ic_check_circle);
-                binding.statusSummary.setText(String.format(Locale.US, "%s (%d)", installedXposedVersion, ConfigManager.getXposedVersionCode()));
+                binding.statusSummary.setText(String.format(Locale.US, "%s (%d)", installXposedVersion, ConfigManager.getXposedVersionCode()));
             } else {
                 cardBackgroundColor = ResourcesKt.resolveColor(getTheme(), R.attr.colorError);
                 binding.statusIcon.setImageResource(R.drawable.ic_warning);

File: app/src/main/java/io/github/lsposed/manager/ui/fragment/StatusDialogBuilder.java
Patch:
@@ -66,13 +66,13 @@ public StatusDialogBuilder(@NonNull Context context) {
         super(context);
         StatusInstallerBinding binding = StatusInstallerBinding.inflate(LayoutInflater.from(context), null, false);
 
-        String installedXposedVersion = ConfigManager.getXposedVersionName();
+        String installXposedVersion = ConfigManager.getXposedVersionName();
         String mAppVer = String.format("%s (%s)", BuildConfig.VERSION_NAME, BuildConfig.VERSION_CODE);
         binding.manager.setText(mAppVer);
 
-        if (installedXposedVersion != null) {
+        if (installXposedVersion != null) {
             binding.api.setText(String.format(Locale.US, "%s.0", ConfigManager.getXposedApiVersion()));
-            binding.framework.setText(String.format(Locale.US, "%s (%s)", installedXposedVersion, ConfigManager.getXposedVersionCode()));
+            binding.framework.setText(String.format(Locale.US, "%s (%s)", installXposedVersion, ConfigManager.getXposedVersionCode()));
         }
 
         binding.androidVersion.setText(context.getString(R.string.android_sdk, getAndroidVersion(), Build.VERSION.RELEASE, Build.VERSION.SDK_INT));

File: core/src/main/java/io/github/lsposed/lspd/core/BaseImpl.java
Patch:
@@ -25,7 +25,7 @@
 import io.github.lsposed.lspd.proxy.NormalProxy;
 import io.github.lsposed.lspd.proxy.Router;
 
-public abstract class BaseEdxpImpl implements EdxpImpl {
+public abstract class BaseImpl implements Impl {
 
     protected Proxy mNormalProxy;
     protected Router mRouter;

File: core/src/main/java/io/github/lsposed/lspd/core/Impl.java
Patch:
@@ -30,7 +30,7 @@
 
 import static java.lang.annotation.RetentionPolicy.SOURCE;
 
-public interface EdxpImpl extends KeepAll {
+public interface Impl extends KeepAll {
 
     int NONE = 0;
     int YAHFA = 1;

File: core/src/main/java/de/robv/android/xposed/XSharedPreferences.java
Patch:
@@ -201,8 +201,7 @@ private void tryRegisterWatcher() {
             Path path = mFile.toPath();
             try {
                 if (sWatcher == null) {
-                    // TODO
-//                    sWatcher = new File(XposedInit.prefsBasePath).toPath().getFileSystem().newWatchService();
+                    sWatcher = new File(serviceClient.getPrefsPath("")).toPath().getFileSystem().newWatchService();
                     if (BuildConfig.DEBUG) Log.d(TAG, "Created WatchService instance");
                 }
                 mWatchKey = path.getParent().register(sWatcher, StandardWatchEventKinds.ENTRY_CREATE,

File: core/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -50,7 +50,7 @@
 import de.robv.android.xposed.callbacks.XCallback;
 import external.com.android.dx.DexMaker;
 import external.com.android.dx.TypeId;
-import io.github.lsposed.lspd.nativebridge.Logger;
+import io.github.lsposed.lspd.nativebridge.ModuleLogger;
 
 import static de.robv.android.xposed.XposedHelpers.getIntField;
 import static de.robv.android.xposed.XposedHelpers.setObjectField;
@@ -171,7 +171,7 @@ public static int getXposedVersion() {
 	 */
 	public synchronized static void log(String text) {
 		Log.i(TAG, text);
-		Logger.log(text);
+		ModuleLogger.log(text);
 	}
 
 	/**
@@ -185,7 +185,7 @@ public synchronized static void log(String text) {
 	public synchronized static void log(Throwable t) {
 		String logStr = Log.getStackTraceString(t);
 		Log.e(TAG, logStr);
-		Logger.log(logStr);
+		ModuleLogger.log(logStr);
 	}
 
 	/**

File: core/src/main/java/io/github/lsposed/lspd/service/BridgeService.java
Patch:
@@ -273,7 +273,7 @@ public static IBinder getApplicationServiceForSystemServer(IBinder binder) {
         try {
             ILSPosedService service = ILSPosedService.Stub.asInterface(binder);
             ILSPApplicationService applicationService = service.requestApplicationService(Process.myUid(), Process.myPid());
-            if (applicationService != null) applicationService.asBinder();
+            if (applicationService != null) return applicationService.asBinder();
         } catch (Throwable e) {
             Log.e(TAG, Log.getStackTraceString(e));
         }

File: core/src/main/java/io/github/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -367,9 +367,9 @@ public int variant() {
         return variant;
     }
 
-    public ParcelFileDescriptor getModulesLog() {
+    public ParcelFileDescriptor getModulesLog(int mode) {
         try {
-            return ParcelFileDescriptor.open(modulesLogPath, ParcelFileDescriptor.MODE_READ_ONLY);
+            return ParcelFileDescriptor.open(modulesLogPath, mode | ParcelFileDescriptor.MODE_CREATE);
         } catch (FileNotFoundException e) {
             Log.e(TAG, Log.getStackTraceString(e));
             return null;

File: core/src/main/java/io/github/lsposed/lspd/service/LSPManagerService.java
Patch:
@@ -111,7 +111,7 @@ public ParcelFileDescriptor getVerboseLog() {
 
     @Override
     public ParcelFileDescriptor getModulesLog() {
-        return ConfigManager.getInstance().getModulesLog();
+        return ConfigManager.getInstance().getModulesLog(ParcelFileDescriptor.MODE_READ_ONLY);
     }
 
     @Override

File: core/src/main/java/io/github/lsposed/lspd/service/LSPApplicationService.java
Patch:
@@ -6,7 +6,6 @@
 import android.util.Log;
 import android.util.Pair;
 
-import java.util.List;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
 
@@ -22,6 +21,7 @@ public void registerHeartBeat(IBinder handle) throws RemoteException {
         handles.add(handle);
         int uid = Binder.getCallingUid();
         int pid = Binder.getCallingPid();
+
         cache.add(new Pair<>(uid, pid));
         handle.linkToDeath(new DeathRecipient() {
             @Override

File: core/src/main/java/io/github/lsposed/lspd/config/LSPApplicationServiceClient.java
Patch:
@@ -4,8 +4,6 @@
 import android.os.RemoteException;
 
 import java.io.File;
-import java.util.Collections;
-import java.util.List;
 
 import io.github.lsposed.lspd.service.ILSPApplicationService;
 import io.github.lsposed.lspd.util.Utils;

File: core/src/main/java/io/github/lsposed/lspd/service/ConfigManager.java
Patch:
@@ -57,7 +57,7 @@ public class ConfigManager {
 
     final private File logPath = new File(basePath, "log");
     final private File modulesLogPath = new File(logPath, "modules.log");
-    final private File verboseLogPath = new File(logPath, "verbose.log");
+    final private File verboseLogPath = new File(logPath, "all.log");
 
     final FileObserver configObserver = new FileObserver(configPath) {
         @Override

File: core/src/main/java/io/github/lsposed/lspd/service/PackageService.java
Patch:
@@ -38,8 +38,8 @@ public static ParceledListSlice<PackageInfo> getInstalledPackagesFromAllUsers(in
         ArrayList<PackageInfo> res = new ArrayList<>();
         IPackageManager pm = getPackageManager();
         if (pm == null) return new ParceledListSlice<>(res);
-        for (int uid : UserService.getUsers()) {
-            res.addAll(pm.getInstalledPackages(flags, uid).getList());
+        for (int userId : UserService.getUsers()) {
+            res.addAll(pm.getInstalledPackages(flags, userId).getList());
         }
         return new ParceledListSlice<>(res);
     }

File: app/src/main/java/io/github/lsposed/manager/ui/activity/RepoActivity.java
Patch:
@@ -167,7 +167,7 @@ public void setData(Collection<OnlineModule> modules) {
             if (sort == 0) {
                 fullList.sort((o1, o2) -> labelComparator.compare(o1.getDescription(), o2.getDescription()));
             } else if (sort == 1) {
-                fullList.sort(Comparator.comparing(o -> Instant.parse(o.getUpdatedAt())));
+                fullList.sort(Collections.reverseOrder(Comparator.comparing(o -> Instant.parse(o.getUpdatedAt()))));
             }
             String queryStr = searchView != null ? searchView.getQuery().toString() : "";
             runOnUiThread(() -> getFilter().filter(queryStr));

File: core/src/main/java/io/github/lsposed/lspd/hooker/XposedInstallerHooker.java
Patch:
@@ -55,7 +55,6 @@ public static void hookXposedInstaller(final ClassLoader classLoader) {
                 XposedHelpers.setStaticIntField(ConstantsClass, "xposedApiVersion", XposedBridge.getXposedVersion());
                 XposedHelpers.setStaticObjectField(ConstantsClass, "xposedVersion", BuildConfig.VERSION_NAME);
                 XposedHelpers.setStaticIntField(ConstantsClass, "xposedVersionCode", BuildConfig.VERSION_CODE);
-                XposedHelpers.setStaticIntField(ConstantsClass, "xposedVersionCode", XposedBridge.getXposedVersion());
                 XposedHelpers.setStaticObjectField(ConstantsClass, "xposedVariant", variant);
                 XposedHelpers.setStaticObjectField(ConstantsClass, "baseDir", ConfigManager.getBaseConfigPath() + "/");
                 XposedHelpers.setStaticObjectField(ConstantsClass, "logDir", ConfigManager.getLogPath());

File: app/src/main/java/io/github/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -78,7 +78,7 @@ public void onCreate(Bundle savedInstanceState) {
             binding.sourceCode.setTransformationMethod(new LinkTransformationMethod(this));
             binding.sourceCode.setText(HtmlCompat.fromHtml(getString(
                     R.string.about_view_source_code,
-                    "<b><a href=\"https://github.com/RikkaApps/Shizuku\">GitHub</a></b>",
+                    "<b><a href=\"https://github.com/LSPosed/LSPosed\">GitHub</a></b>",
                     "<b><a href=\"https://t.me/LSPosed\">Telegram</a></b>"), HtmlCompat.FROM_HTML_MODE_LEGACY));
             new AlertDialog.Builder(this)
                     .setView(binding.getRoot())

File: app/src/main/java/io/github/lsposed/manager/ui/fragment/StatusDialogBuilder.java
Patch:
@@ -1,13 +1,13 @@
 package io.github.lsposed.manager.ui.fragment;
 
 import android.annotation.SuppressLint;
-import android.app.AlertDialog;
 import android.content.Context;
 import android.os.Build;
 import android.view.LayoutInflater;
 import android.view.View;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.app.AlertDialog;
 import androidx.core.text.HtmlCompat;
 
 import java.io.BufferedReader;

File: app/src/main/java/io/github/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -69,6 +69,7 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(binding.getRoot());
         setSupportActionBar(binding.toolbar);
         binding.toolbar.setNavigationOnClickListener(view -> onBackPressed());
+        binding.appBar.setLiftOnScrollTargetViewId(R.id.recyclerView);
         binding.masterSwitch.setVisibility(View.GONE);
         ActionBar bar = getSupportActionBar();
         if (bar != null) {

File: app/src/main/java/io/github/lsposed/manager/ui/activity/RepoActivity.java
Patch:
@@ -66,6 +66,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         setContentView(binding.getRoot());
         setSupportActionBar(binding.toolbar);
         binding.toolbar.setNavigationOnClickListener(view -> onBackPressed());
+        binding.appBar.setLiftOnScrollTargetViewId(R.id.recyclerView);
         binding.masterSwitch.setVisibility(View.GONE);
         ActionBar bar = getSupportActionBar();
         assert bar != null;

File: app/src/main/java/io/github/lsposed/manager/repo/RepoLoader.java
Patch:
@@ -78,7 +78,7 @@ public void loadRemoteData() {
                 .build()).enqueue(new Callback() {
             @Override
             public void onFailure(@NonNull Call call, @NonNull IOException e) {
-                Toast.makeText(App.getInstance(), e.getMessage(), Toast.LENGTH_LONG).show();
+                App.getInstance().runOnUiThread(() -> Toast.makeText(App.getInstance(), e.getMessage(), Toast.LENGTH_LONG).show());
                 synchronized (this) {
                     isLoading = false;
                 }

File: app/src/main/java/io/github/lsposed/manager/ui/activity/AppListActivity.java
Patch:
@@ -62,6 +62,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         scopeAdapter = new ScopeAdapter(this, moduleName, modulePackageName, binding.masterSwitch);
         scopeAdapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(scopeAdapter);
+        binding.recyclerView.setHasFixedSize(true);
         binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         RecyclerViewKt.addFastScroller(binding.recyclerView, binding.swipeRefreshLayout);
         RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);

File: app/src/main/java/io/github/lsposed/manager/ui/activity/ModulesActivity.java
Patch:
@@ -80,6 +80,7 @@ public void onCreate(Bundle savedInstanceState) {
         adapter.setHasStableIds(true);
         moduleUtil.addListener(this);
         binding.recyclerView.setAdapter(adapter);
+        binding.recyclerView.setHasFixedSize(true);
         binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         RecyclerViewKt.addFastScroller(binding.recyclerView, binding.swipeRefreshLayout);
         RecyclerViewKt.fixEdgeEffect(binding.recyclerView, false, true);

File: app/src/main/java/name/mikanoshi/customiuizer/holidays/HolidayHelper.java
Patch:
@@ -53,7 +53,7 @@ public static void setup(Activity activity) {
             view.setEmissionRate(rotation == Surface.ROTATION_90 || rotation == Surface.ROTATION_270 ? 8 : 4);
             view.setFadeOutPercent(0.75f);
             view.setAngle(0);
-            RelativeLayout.LayoutParams lp = (RelativeLayout.LayoutParams) view.getLayoutParams();
+            CoordinatorLayout.LayoutParams lp = (CoordinatorLayout.LayoutParams) view.getLayoutParams();
             lp.height = activity.getResources().getDisplayMetrics().heightPixels / (rotation == Surface.ROTATION_90 || rotation == Surface.ROTATION_270 ? 2 : 3);
             view.setLayoutParams(lp);
             setWeatherGenerator(new SnowGenerator(activity));

File: app/src/main/java/io/github/lsposed/manager/ui/activity/AppListActivity.java
Patch:
@@ -79,13 +79,13 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         searchListener = new SearchView.OnQueryTextListener() {
             @Override
             public boolean onQueryTextSubmit(String query) {
-                scopeAdapter.filter(query);
+                scopeAdapter.getFilter().filter(query);
                 return false;
             }
 
             @Override
             public boolean onQueryTextChange(String newText) {
-                scopeAdapter.filter(newText);
+                scopeAdapter.getFilter().filter(newText);
                 return false;
             }
         };

File: app/src/main/java/io/github/lsposed/manager/ui/activity/LogsActivity.java
Patch:
@@ -238,7 +238,9 @@ private class LogsReader extends AsyncTask<File, Integer, ArrayList<String>> {
         private final Runnable mRunnable = new Runnable() {
             @Override
             public void run() {
-                mProgressDialog.show();
+                if (!isFinishing()) {
+                    mProgressDialog.show();
+                }
             }
         };
 

File: core/src/main/java/io/github/lsposed/lspd/yahfa/dexmaker/HookerDexMaker.java
Patch:
@@ -135,13 +135,13 @@ public void start(Member member, XposedBridge.AdditionalHookInfo hookInfo,
     @SuppressWarnings("ResultOfMethodCallIgnored")
     @TargetApi(Build.VERSION_CODES.O)
     private void doMake(String hookedClassName) throws Exception {
-        mDexMaker = new DexMaker();
         ClassLoader loader = null;
         // Generate a Hooker class.
         String className = CLASS_NAME_PREFIX;
         boolean usedCache = false;
         if (canCache) {
             try {
+                mDexMaker = new DexMaker();
                 // className is also used as dex file name
                 // so it should be different from each other
                 String suffix = DexMakerUtils.getSha1Hex(mMember.toString());
@@ -165,8 +165,9 @@ private void doMake(String hookedClassName) throws Exception {
         if (!usedCache) {
             // do everything in memory
             DexLog.d("Generating in memory");
-            if(BuildConfig.DEBUG)
+            if (BuildConfig.DEBUG)
                 className = className + hookedClassName.replace(".", "/");
+            mDexMaker = new DexMaker();
             doGenerate(className);
             byte[] dexBytes = mDexMaker.generate();
             loader = new InMemoryDexClassLoader(ByteBuffer.wrap(dexBytes), mAppClassLoader);

File: app/src/main/java/io/github/lsposed/manager/util/ModuleUtil.java
Patch:
@@ -272,7 +272,7 @@ public String getDescription() {
         }
 
         public List<String> getScopeList() {
-            if (this.scopeList == null) {
+            if (scopeList == null) {
                 try {
                     int scopeListResourceId = app.metaData.getInt("xposedscope");
                     if (scopeListResourceId != 0) {
@@ -282,7 +282,7 @@ public List<String> getScopeList() {
                     e.printStackTrace();
                 }
             }
-            return this.scopeList;
+            return scopeList;
         }
 
         public PackageInfo getPackageInfo() {

File: app/src/main/java/io/github/lsposed/manager/ui/fragment/CompileDialogFragment.java
Patch:
@@ -102,8 +102,8 @@ public void onRequestPermissionsResult(int requestCode, int grantResult) {
                             e.printStackTrace();
                         }
                     });
-                } catch (Exception e) {
-                    e.printStackTrace();
+                } catch (Throwable t) {
+                    t.printStackTrace();
                     compileWithShell(mode);
                 }
             });

File: app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -11,6 +11,7 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuInflater;
@@ -166,6 +167,7 @@ private void sortApps() {
     private void checkRecommended() {
         checkedList.clear();
         checkedList.addAll(recommendedList);
+        Log.e("Test", recommendedList.toString());
         AppHelper.saveScopeList(modulePackageName, checkedList);
         notifyDataSetChanged();
     }
@@ -204,6 +206,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             } else {
                 activity.makeSnackBar(R.string.module_no_ui, Snackbar.LENGTH_LONG);
             }
+            return true;
         } else if (!AppHelper.onOptionsItemSelected(item, preferences)) {
             return false;
         }

File: app/src/main/java/io/github/lsposed/manager/util/ModuleUtil.java
Patch:
@@ -25,7 +25,6 @@
 import java.util.concurrent.CopyOnWriteArrayList;
 
 import io.github.lsposed.manager.App;
-import io.github.lsposed.manager.BuildConfig;
 import io.github.lsposed.manager.Constants;
 import io.github.lsposed.manager.R;
 import io.github.lsposed.manager.adapters.AppHelper;
@@ -328,7 +327,7 @@ public List<String> getScopeList() {
                 try {
                     int scopeListResourceId = app.metaData.getInt("xposedscope");
                     if (scopeListResourceId != 0) {
-                        scopeList = Arrays.asList(pm.getResourcesForApplication(BuildConfig.APPLICATION_ID).getStringArray(scopeListResourceId));
+                        scopeList = Arrays.asList(pm.getResourcesForApplication(app).getStringArray(scopeListResourceId));
                     }
                 } catch (Exception e) {
                     e.printStackTrace();

File: app/src/main/java/io/github/lsposed/manager/adapters/ScopeAdapter.java
Patch:
@@ -166,7 +166,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             item.setChecked(!item.isChecked());
             preferences.edit().putBoolean("show_modules", item.isChecked()).apply();
         } else if (itemId == R.id.menu_launch) {
-            Intent launchIntent = pm.getLaunchIntentForPackage(modulePackageName);
+            Intent launchIntent = AppHelper.getSettingsIntent(modulePackageName, pm);
             if (launchIntent != null) {
                 activity.startActivity(launchIntent);
             } else {

File: app/src/main/java/io/github/lsposed/manager/adapters/AppAdapter.java
Patch:
@@ -90,7 +90,7 @@ private void loadApps() {
                 rmList.add(info);
                 continue;
             }
-            if (!preferences.getBoolean("show_system_apps", true) && (info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
+            if (!preferences.getBoolean("show_system_apps", false) && (info.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
                 rmList.add(info);
                 continue;
             }
@@ -157,7 +157,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {
         inflater.inflate(R.menu.menu_app_list, menu);
-        menu.findItem(R.id.item_show_system).setChecked(preferences.getBoolean("show_system_apps", true));
+        menu.findItem(R.id.item_show_system).setChecked(preferences.getBoolean("show_system_apps", false));
         switch (preferences.getInt("list_sort", 0)) {
             case 7:
                 menu.findItem(R.id.item_sort_by_update_time_reverse).setChecked(true);

File: core/src/main/java/io/github/lsposed/lspd/config/ConfigManager.java
Patch:
@@ -14,8 +14,6 @@ public class ConfigManager {
 
     public static native String getLibSandHookName();
 
-    public static native String getConfigPath(String suffix);
-
     public static native String getPrefsPath(String suffix);
 
     public static native String getCachePath(String suffix);

File: app/src/main/java/io/github/lsposed/manager/ui/activity/AppListActivity.java
Patch:
@@ -25,7 +25,6 @@
 import io.github.lsposed.manager.adapters.ScopeAdapter;
 import io.github.lsposed.manager.databinding.ActivityScopeListBinding;
 import io.github.lsposed.manager.util.LinearLayoutManagerFix;
-
 import me.zhanghai.android.fastscroll.FastScrollerBuilder;
 
 public class AppListActivity extends BaseActivity {
@@ -67,7 +66,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         binding.recyclerView.setAdapter(appAdapter);
         binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         FastScrollerBuilder fastScrollerBuilder = new FastScrollerBuilder(binding.recyclerView);
-        if (!preferences.getBoolean("md2", false)) {
+        if (!preferences.getBoolean("md2", true)) {
             DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this,
                     DividerItemDecoration.VERTICAL);
             binding.recyclerView.addItemDecoration(dividerItemDecoration);

File: core/src/main/java/de/robv/android/xposed/LspHooker.java
Patch:
@@ -18,8 +18,8 @@ public LspHooker(XposedBridge.AdditionalHookInfo info, Member origin, Method bac
         this.backup = backup;
     }
 
-    public Method getBackup() {
-        return backup;
+    public Object invokeOriginalMethod(Object thisObject, Object[] args) throws InvocationTargetException, IllegalAccessException {
+        return backup.invoke(thisObject, args);
     }
 
     @SuppressWarnings({"unused", "RedundantSuppression"})

File: core/src/main/java/io/github/lsposed/lspd/yahfa/dexmaker/DynamicBridge.java
Patch:
@@ -74,7 +74,7 @@ public static Object invokeOriginalMethod(Member method, Object thisObject, Obje
         if (args == null) {
             args = new Object[0];
         }
-        return hooker.getBackup().invoke(thisObject, args);
+        return hooker.invokeOriginalMethod(thisObject, args);
     }
 }
 

File: app/src/main/java/io/github/lsposed/manager/ui/activity/MainActivity.java
Patch:
@@ -1,10 +1,8 @@
 package io.github.lsposed.manager.ui.activity;
 
 import android.annotation.SuppressLint;
-import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.view.View;
 
 import androidx.appcompat.widget.PopupMenu;
 import androidx.appcompat.widget.TooltipCompat;

File: core/src/main/java/de/robv/android/xposed/PendingHooks.java
Patch:
@@ -33,12 +33,12 @@ public ConcurrentHashMap<Member, XposedBridge.AdditionalHookInfo> apply(Class<?>
                         });
 
         pending.put(hookMethod, additionalInfo);
-        recordPendingMethodNative(hookMethod.getDeclaringClass());
+        recordPendingMethodNative(hookMethod, hookMethod.getDeclaringClass());
     }
 
     public synchronized void cleanUp() {
         sPendingHooks.clear();
     }
 
-    private static native void recordPendingMethodNative(Class clazz);
+    private static native void recordPendingMethodNative(Member hookMethod, Class clazz);
 }

File: app/src/main/java/org/meowcat/edxposed/manager/ui/fragment/StatusDialogBuilder.java
Patch:
@@ -52,7 +52,7 @@ public StatusDialogBuilder(@NonNull Context context) {
         binding.manager.setText(mAppVer);
 
         if (installedXposedVersion != null) {
-            binding.api.setText(String.format(Locale.US, "%s.0", Constants.getXposedVariant()));
+            binding.api.setText(String.format(Locale.US, "%s.0", Constants.getXposedApiVersion()));
             binding.framework.setText(String.format(Locale.US, "%s (%s)", installedXposedVersion, Constants.getXposedVersionCode()));
         }
 

File: app/src/main/java/org/meowcat/edxposed/manager/App.java
Patch:
@@ -14,7 +14,6 @@
 
 import org.meowcat.edxposed.manager.ui.activity.CrashReportActivity;
 import org.meowcat.edxposed.manager.util.CompileUtil;
-import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.NotificationUtil;
 import org.meowcat.edxposed.manager.util.RebootUtil;
 
@@ -35,7 +34,7 @@ public class App extends Application implements Application.ActivityLifecycleCal
     private static Handler mainHandler;
     private SharedPreferences pref;
     //private AppCompatActivity currentActivity = null;
-    private boolean isUiLoaded = false;
+    private final boolean isUiLoaded = false;
 
     private final Shizuku.OnRequestPermissionResultListener REQUEST_PERMISSION_RESULT_LISTENER = this::onRequestPermissionsResult;
 
@@ -134,7 +133,6 @@ public void onCreate() {
 
         createDirectories();
         NotificationUtil.init();
-        ModuleUtil.getInstance();
 
         Shizuku.addRequestPermissionResultListener(REQUEST_PERMISSION_RESULT_LISTENER);
     }

File: app/src/main/java/org/meowcat/edxposed/manager/ui/fragment/CompileDialogFragment.java
Patch:
@@ -28,6 +28,7 @@
 
 import rikka.shizuku.ShizukuSystemProperties;
 
+import static android.content.pm.PackageManager.PERMISSION_DENIED;
 import static android.content.pm.PackageManager.PERMISSION_GRANTED;
 
 @SuppressWarnings("deprecation")
@@ -125,8 +126,7 @@ public void onAttach(@NonNull Context context) {
             int type = arguments.getInt(KEY_TYPE);
             appInfo = arguments.getParcelable(KEY_APP_INFO);
             type = type * 10 + 1;
-            if (App.checkPermission(type))
-                onRequestPermissionsResult(type, PERMISSION_GRANTED);
+            onRequestPermissionsResult(type, App.checkPermission(type) ? PERMISSION_GRANTED : PERMISSION_DENIED);
         } else {
             dismissAllowingStateLoss();
         }

File: app/src/main/java/org/meowcat/edxposed/manager/util/RebootUtil.java
Patch:
@@ -15,6 +15,7 @@
 import rikka.shizuku.ShizukuSystemProperties;
 import rikka.shizuku.SystemServiceHelper;
 
+import static android.content.pm.PackageManager.PERMISSION_DENIED;
 import static android.content.pm.PackageManager.PERMISSION_GRANTED;
 
 public class RebootUtil {
@@ -60,9 +61,8 @@ protected IPowerManager create() {
 
 
     public static void reboot(RebootType mode) {
-        if (App.checkPermission(mode.ordinal())) {
-            onRequestPermissionsResult(mode.ordinal(), PERMISSION_GRANTED);
-        }
+        onRequestPermissionsResult(mode.ordinal(), App.checkPermission(mode.ordinal()) ? PERMISSION_GRANTED : PERMISSION_DENIED);
+
     }
 
     private static void rebootWithShell(RebootType mode) {

File: edxp-core/src/main/java/com/elderdrivers/riru/edxp/core/Yahfa.java
Patch:
@@ -12,7 +12,7 @@ public class Yahfa {
 
     public static native void init(int sdkVersion);
 
-    public static native void setMethodNonCompilable(Member member);
+    //public static native void setMethodNonCompilable(Member member);
 
     public static native void recordHooked(Member member);
 

File: edxp-core/src/main/java/android/content/res/XModuleResources.java
Patch:
@@ -6,6 +6,7 @@
 import de.robv.android.xposed.IXposedHookInitPackageResources;
 import de.robv.android.xposed.IXposedHookZygoteInit;
 import de.robv.android.xposed.IXposedHookZygoteInit.StartupParam;
+import de.robv.android.xposed.XposedHelpers;
 import de.robv.android.xposed.callbacks.XC_InitPackageResources.InitPackageResourcesParam;
 
 /**
@@ -33,7 +34,8 @@ public static XModuleResources createInstance(String path, XResources origRes) {
 			throw new IllegalArgumentException("path must not be null");
 
 		AssetManager assets = new AssetManager();
-		assets.addAssetPath(path);
+		XposedHelpers.callMethod(assets, "addAssetPath", path);
+		//assets.addAssetPath(path);
 
 		XModuleResources res;
 		if (origRes != null)

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/BlackListActivity.java
Patch:
@@ -48,7 +48,6 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         if (bar != null) {
             bar.setDisplayHomeAsUpEnabled(true);
         }
-        setupWindowInsets(binding.snackbar, binding.recyclerView);
         final boolean isWhiteListMode = isWhiteListMode();
         appAdapter = new BlackListAdapter(this, isWhiteListMode);
         appAdapter.setHasStableIds(true);

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/LogsActivity.java
Patch:
@@ -67,7 +67,6 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         if (bar != null) {
             bar.setDisplayHomeAsUpEnabled(true);
         }
-        setupWindowInsets(binding.snackbar, binding.recyclerView);
 
         if (!preferences.getBoolean("hide_logcat_warning", false)) {
             DialogInstallWarningBinding binding = DialogInstallWarningBinding.inflate(getLayoutInflater());

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/MainActivity.java
Patch:
@@ -34,7 +34,6 @@ public void onCreate(Bundle savedInstanceState) {
                 binding.modules.setElevation(12);
             }
         });
-        setupWindowInsets(binding.snackbar, null);
         ModuleUtil.getInstance().addListener(this);
         binding.modules.setOnClickListener(v -> {
             Intent intent = new Intent();

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/ModuleScopeActivity.java
Patch:
@@ -51,7 +51,6 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
             bar.setDisplayHomeAsUpEnabled(true);
             bar.setSubtitle(moduleName);
         }
-        setupWindowInsets(binding.snackbar, binding.recyclerView);
         appAdapter = new ScopeAdapter(this, modulePackageName, binding.masterSwitch);
         appAdapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(appAdapter);

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/SettingsActivity.java
Patch:
@@ -58,7 +58,6 @@ public void onCreate(Bundle savedInstanceState) {
         if (bar != null) {
             bar.setDisplayHomeAsUpEnabled(true);
         }
-        setupWindowInsets(binding.snackbar, null);
         if (savedInstanceState == null) {
             getSupportFragmentManager().beginTransaction()
                     .add(R.id.container, new SettingsFragment()).commit();

File: app/src/main/java/org/meowcat/edxposed/manager/App.java
Patch:
@@ -10,6 +10,7 @@
 import android.content.pm.PackageManager;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.util.Log;
 
 import androidx.annotation.NonNull;
@@ -99,7 +100,7 @@ public void onCreate() {
 
         instance = this;
         uiThread = Thread.currentThread();
-        mainHandler = new Handler();
+        mainHandler = new Handler(Looper.getMainLooper());
 
         pref = PreferenceManager.getDefaultSharedPreferences(this);
 

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/BlackListActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.pm.ApplicationInfo;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -35,7 +36,7 @@ public void run() {
             binding.swipeRefreshLayout.setRefreshing(true);
         }
     };
-    private final Handler handler = new Handler();
+    private final Handler handler = new Handler(Looper.getMainLooper());
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/LogsActivity.java
Patch:
@@ -6,6 +6,7 @@
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -52,7 +53,7 @@ public class LogsActivity extends BaseActivity {
     private final File fileAllLog = new File(Constants.getBaseDir() + "log/all.log");
     private final File fileAllLogOld = new File(Constants.getBaseDir() + "log/all.log.old");
     private LogsAdapter adapter;
-    private final Handler handler = new Handler();
+    private final Handler handler = new Handler(Looper.getMainLooper());
     private ActivityLogsBinding binding;
     private LinearLayoutManagerFix layoutManager;
 

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/ModuleScopeActivity.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.pm.ApplicationInfo;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.Looper;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
@@ -35,7 +36,7 @@ public void run() {
             binding.swipeRefreshLayout.setRefreshing(true);
         }
     };
-    private final Handler handler = new Handler();
+    private final Handler handler = new Handler(Looper.getMainLooper());
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {

File: edxp-core/src/main/java/com/elderdrivers/riru/edxp/config/ConfigManager.java
Patch:
@@ -22,8 +22,6 @@ public class ConfigManager {
 
     public static native String getBaseConfigPath();
 
-    public static native String getMiscPath();
-
     public static native String getDataPathPrefix();
 
     public static native String getModulesList();

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/SettingsActivity.java
Patch:
@@ -142,7 +142,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
                 prefEnableDeopt.setOnPreferenceChangeListener(new OnFlagChangeListener(deoptBootFlag));
             }
 
-            SwitchPreferenceCompat prefDisableResources = findPreference("disable_resources");
+            SwitchPreferenceCompat prefDisableResources = findPreference("enable_resources");
             if (prefDisableResources != null) {
                 prefDisableResources.setChecked(!enableResourcesFlag.exists());
                 prefDisableResources.setOnPreferenceChangeListener(new OnFlagChangeListener(enableResourcesFlag));

File: edxp-core/src/main/java/com/elderdrivers/riru/edxp/config/ConfigManager.java
Patch:
@@ -47,6 +47,8 @@ private static boolean isFileExists(String path) {
 
     public static native String getBaseConfigPath();
 
+    public static native String getMiscPath();
+
     public static native String getDataPathPrefix();
 
     public static native String getModulesList();

File: app/src/main/java/org/meowcat/edxposed/manager/ui/activity/LogsActivity.java
Patch:
@@ -174,8 +174,8 @@ private void send() {
         Intent sendIntent = new Intent();
         sendIntent.setAction(Intent.ACTION_SEND);
         sendIntent.putExtra(Intent.EXTRA_STREAM, uri);
+        sendIntent.setDataAndType(uri, "text/plain");
         sendIntent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
-        sendIntent.setType("application/html");
         startActivity(Intent.createChooser(sendIntent, getResources().getString(R.string.menuSend)));
     }
 

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -338,6 +338,7 @@ public static boolean loadModules(boolean callInitZygote) throws IOException {
                 if (loadedModules.contains(apk)) {
                     newLoadedApk.add(apk);
                 } else {
+                    loadedModules.add(apk); // temporarily add it for XSharedPreference
                     boolean loadSuccess = loadModule(apk, topClassLoader, callInitZygote);
                     if (loadSuccess) {
                         newLoadedApk.add(apk);

File: app/src/main/java/org/meowcat/edxposed/manager/util/json/JSONUtils.java
Patch:
@@ -9,7 +9,7 @@
 
 public class JSONUtils {
 
-    public static final String JSON_LINK = "http://edxp.meowcat.org/assets/version.json";
+    public static final String JSON_LINK = "https://edxp.meowcat.org/assets/version.json";
 
     public static String getFileContent(String url) throws IOException {
         HttpURLConnection c = (HttpURLConnection) new URL(url).openConnection();

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/config/SandHookProvider.java
Patch:
@@ -16,6 +16,8 @@
 
 import de.robv.android.xposed.XposedBridge;
 
+import static com.elderdrivers.riru.edxp.util.ClassUtils.shouldDelayHook;
+
 public class SandHookProvider extends BaseHookProvider {
     @Override
     public void hookMethod(Member method, XposedBridge.AdditionalHookInfo additionalInfo) {
@@ -50,7 +52,7 @@ public Object invokeOriginalMethod(Member method, long methodId, Object thisObje
 
     @Override
     public Member findMethodNative(Member hookMethod) {
-        return hookMethod;
+        return shouldDelayHook(hookMethod) ? null : hookMethod;
     }
 
     @Override

File: sandhook-hooklib/src/main/java/com/swift/sandhook/SandHook.java
Patch:
@@ -95,8 +95,6 @@ public static synchronized void hook(HookWrapper.HookEntity entity) throws HookE
         if (SandHookConfig.delayHook && PendingHookHandler.canWork() && ClassStatusUtils.isStaticAndNoInited(entity.target)) {
             PendingHookHandler.addPendingHook(entity);
             return;
-        } else if (entity.initClass) {
-            resolveStaticMethod(target);
         }
 
         resolveStaticMethod(backup);

File: sandhook-hooklib/src/main/java/com/swift/sandhook/SandHook.java
Patch:
@@ -95,6 +95,8 @@ public static synchronized void hook(HookWrapper.HookEntity entity) throws HookE
         if (SandHookConfig.delayHook && PendingHookHandler.canWork() && ClassStatusUtils.isStaticAndNoInited(entity.target)) {
             PendingHookHandler.addPendingHook(entity);
             return;
+        } else if (entity.initClass) {
+            resolveStaticMethod(target);
         }
 
         resolveStaticMethod(backup);

File: sandhook-hooklib/src/main/java/com/swift/sandhook/SandHook.java
Patch:
@@ -95,8 +95,6 @@ public static synchronized void hook(HookWrapper.HookEntity entity) throws HookE
         if (SandHookConfig.delayHook && PendingHookHandler.canWork() && ClassStatusUtils.isStaticAndNoInited(entity.target)) {
             PendingHookHandler.addPendingHook(entity);
             return;
-        } else if (entity.initClass) {
-            resolveStaticMethod(target);
         }
 
         resolveStaticMethod(backup);

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/config/BaseHookProvider.java
Patch:
@@ -48,7 +48,7 @@ public void setNativeFlag(Member hookMethod, boolean isNative) {
 
     @Override
     public boolean methodHooked(Member target) {
-        return Yahfa.isHooked((Method)target);
+        return Yahfa.isHooked(target);
     }
 
     @Override

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/_hooker/yahfa/HandleBindAppHooker.java
Patch:
@@ -2,6 +2,8 @@
 
 import com.elderdrivers.riru.common.KeepMembers;
 import com.elderdrivers.riru.edxp._hooker.impl.HandleBindApp;
+import com.elderdrivers.riru.edxp.core.Yahfa;
+import com.elderdrivers.riru.edxp.util.Hookers;
 
 import de.robv.android.xposed.XC_MethodHook;
 import de.robv.android.xposed.annotation.ApiSensitive;

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/config/BaseHookProvider.java
Patch:
@@ -6,6 +6,7 @@
 import com.elderdrivers.riru.edxp.hook.HookProvider;
 
 import java.lang.reflect.Member;
+import java.lang.reflect.Method;
 
 public abstract class BaseHookProvider implements HookProvider {
 
@@ -47,7 +48,7 @@ public void setNativeFlag(Member hookMethod, boolean isNative) {
 
     @Override
     public boolean methodHooked(Member target) {
-        return HookMain.hooked(target);
+        return Yahfa.isHooked((Method)target);
     }
 
     @Override

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.res.TypedArray;
 import android.util.Log;
 
+import com.elderdrivers.riru.edxp.bridge.BuildConfig;
 import com.elderdrivers.riru.edxp.config.EdXpConfigGlobal;
 
 import java.lang.reflect.AccessibleObject;
@@ -145,8 +146,7 @@ public static void initXResources() {
 	 * Returns the currently installed version of the Xposed framework.
 	 */
 	public static int getXposedVersion() {
-		// ed: fixed value for now
-		return 93;
+		return BuildConfig.API_CODE;
 	}
 
 	/**

File: app/src/main/java/org/meowcat/edxposed/manager/AboutActivity.java
Patch:
@@ -30,7 +30,7 @@ public void onCreate(Bundle savedInstanceState) {
         if (bar != null) {
             bar.setDisplayHomeAsUpEnabled(true);
         }
-        setupWindowInsets(binding.snackbar, binding.nestedScrollView);
+        setupWindowInsets(binding.snackbar, null);
 
         String packageName = getPackageName();
         String translator = getResources().getString(R.string.translator);

File: app/src/main/java/org/meowcat/edxposed/manager/MainActivity.java
Patch:
@@ -35,7 +35,7 @@ public void onCreate(Bundle savedInstanceState) {
                 binding.downloads.setElevation(12);
             }
         });
-        setupWindowInsets(binding.snackbar, binding.nestedScrollView);
+        setupWindowInsets(binding.snackbar, null);
         repoLoader = RepoLoader.getInstance();
         ModuleUtil.getInstance().addListener(this);
         repoLoader.addListener(this, false);

File: app/src/main/java/org/meowcat/edxposed/manager/MainActivity.java
Patch:
@@ -92,7 +92,7 @@ public void onCreate(Bundle savedInstanceState) {
         }
         if (installedXposedVersion != null) {
             int installedXposedVersionInt = extractIntPart(installedXposedVersion);
-            if (installedXposedVersionInt == App.getXposedVersion()) {
+            if (App.getActiveXposedVersion() != -1) {
                 String installedXposedVersionStr = installedXposedVersionInt + ".0";
                 binding.statusTitle.setText(R.string.Activated);
                 binding.statusSummary.setText(installedXposedVersion.replace(installedXposedVersionStr + "-", ""));
@@ -104,9 +104,9 @@ public void onCreate(Bundle savedInstanceState) {
                 binding.status.setCardBackgroundColor(ContextCompat.getColor(this, R.color.amber_500));
                 binding.statusIcon.setImageResource(R.drawable.ic_warning);
             }
-        } else if (App.getXposedVersion() > 0) {
+        } else if (App.getActiveXposedVersion() > 0) {
             binding.statusTitle.setText(R.string.Activated);
-            binding.statusSummary.setText(getString(R.string.version_x, App.getXposedVersion()));
+            binding.statusSummary.setText(getString(R.string.version_x, App.getActiveXposedVersion()));
             binding.status.setCardBackgroundColor(ContextCompat.getColor(this, R.color.download_status_update_available));
             binding.statusIcon.setImageResource(R.drawable.ic_check_circle);
         } else {

File: app/src/main/java/org/meowcat/edxposed/manager/util/ModuleUtil.java
Patch:
@@ -212,7 +212,7 @@ public synchronized void updateModulesList(boolean showToast) {
     public synchronized void updateModulesList(boolean showToast, ActivityModulesBinding binding) {
         try {
             Log.i(App.TAG, "ModuleUtil -> updating modules.list");
-            int installedXposedVersion = App.getXposedVersion();
+            int installedXposedVersion = App.getActiveXposedVersion();
             if (!App.getPreferences().getBoolean("skip_xposedminversion_check", false) && installedXposedVersion <= 0 && showToast) {
                 if (binding != null) {
                     Snackbar.make(binding.snackbar, R.string.notinstalled, Snackbar.LENGTH_SHORT).show();
@@ -332,7 +332,7 @@ private InstalledModule(PackageInfo pkg, boolean isFramework) {
                 this.minVersion = 0;
                 this.description = "";
             } else {
-                int version = App.getXposedVersion();
+                int version = App.getActiveXposedVersion();
                 if (version > 0 && App.getPreferences().getBoolean("skip_xposedminversion_check", false)) {
                     this.minVersion = version;
                 } else {

File: app/src/main/java/org/meowcat/edxposed/manager/EdDownloadActivity.java
Patch:
@@ -95,7 +95,7 @@ protected void onPostExecute(String result) {
 
                 TransitionManager.beginDelayedTransition(binding.tabLayout);
                 for (XposedTab tab : xposedJson.tabs) {
-                    if (tab.sdks.contains(Build.VERSION.SDK_INT)) {
+                    if (tab.installers.size() > 0 && tab.sdks.contains(Build.VERSION.SDK_INT)) {
                         tabsAdapter.addFragment(tab.name, BaseAdvancedInstaller.newInstance(tab));
                         tabsAdapter.notifyDataSetChanged();
                     }

File: app/src/main/java/de/robv/android/xposed/installer/XposedApp.java
Patch:
@@ -14,7 +14,7 @@
 
 @SuppressLint("Registered")
 public class XposedApp extends Application {
-    public static final String TAG = "App";
+    public static final String TAG = "EdXposedManager";
     private static final File EDXPOSED_PROP_FILE = new File("/system/framework/edconfig.jar");
     private static XposedApp instance = null;
     public InstallZipUtil.XposedProp mXposedProp;

File: app/src/main/java/org/meowcat/edxposed/manager/App.java
Patch:
@@ -38,7 +38,6 @@
 import de.robv.android.xposed.installer.util.InstallZipUtil;
 
 public class App extends XposedApp implements Application.ActivityLifecycleCallbacks {
-    public static final String TAG = "EdXposedManager";
     public static String BASE_DIR = null;
     public static String ENABLED_MODULES_LIST_FILE = null;
     @SuppressLint("StaticFieldLeak")

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsActivity.java
Patch:
@@ -50,7 +50,7 @@ public void onCreate(Bundle savedInstanceState) {
         try {
             module = repoLoader.getModule(packageName);
         } catch (Exception e) {
-            Log.i(TAG, "DownloadDetailsActivity -> " + e.getMessage());
+            Log.i(App.TAG, "DownloadDetailsActivity -> " + e.getMessage());
 
             module = null;
         }

File: app/src/main/java/org/meowcat/edxposed/manager/BlackListActivity.java
Patch:
@@ -21,6 +21,7 @@
 import org.meowcat.edxposed.manager.adapters.BlackListAdapter;
 import org.meowcat.edxposed.manager.adapters.CompatListAdapter;
 import org.meowcat.edxposed.manager.databinding.ActivityBlackListBinding;
+import org.meowcat.edxposed.manager.util.LinearLayoutManagerFix;
 
 public class BlackListActivity extends BaseActivity implements AppAdapter.Callback {
     private SearchView searchView;
@@ -54,7 +55,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         appAdapter = isCompat ? new CompatListAdapter(this) : new BlackListAdapter(this, isWhiteListMode);
         appAdapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(appAdapter);
-        binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         if (!App.getPreferences().getBoolean("md2", false)) {
             DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this,
                     DividerItemDecoration.VERTICAL);

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadActivity.java
Patch:
@@ -35,6 +35,7 @@
 import org.meowcat.edxposed.manager.databinding.ItemDownloadBinding;
 import org.meowcat.edxposed.manager.repo.RepoDb;
 import org.meowcat.edxposed.manager.repo.RepoDbDefinitions;
+import org.meowcat.edxposed.manager.util.LinearLayoutManagerFix;
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.RepoLoader;
 
@@ -95,7 +96,7 @@ public Cursor runQuery(CharSequence constraint) {
         moduleUtil.addListener(this);
         binding.recyclerView.setAdapter(adapter);
 
-        binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         StickyRecyclerHeadersDecoration headersDecor = new StickyRecyclerHeadersDecoration(adapter);
         binding.recyclerView.addItemDecoration(headersDecor);
         adapter.registerAdapterDataObserver(new RecyclerView.AdapterDataObserver() {

File: app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java
Patch:
@@ -28,6 +28,7 @@
 import org.meowcat.edxposed.manager.databinding.ActivityLogsBinding;
 import org.meowcat.edxposed.manager.databinding.DialogInstallWarningBinding;
 import org.meowcat.edxposed.manager.databinding.ItemLogBinding;
+import org.meowcat.edxposed.manager.util.LinearLayoutManagerFix;
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -78,7 +79,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         }
         adapter = new LogsAdapter();
         binding.recyclerView.setAdapter(adapter);
-        binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         if (App.getPreferences().getBoolean("disable_verbose_log", false)) {
             binding.slidingTabs.setVisibility(View.GONE);
         }

File: app/src/main/java/org/meowcat/edxposed/manager/ModuleScopeActivity.java
Patch:
@@ -17,6 +17,7 @@
 import org.meowcat.edxposed.manager.adapters.AppHelper;
 import org.meowcat.edxposed.manager.adapters.ScopeAdapter;
 import org.meowcat.edxposed.manager.databinding.ActivityScopeListBinding;
+import org.meowcat.edxposed.manager.util.LinearLayoutManagerFix;
 
 public class ModuleScopeActivity extends BaseActivity implements AppAdapter.Callback {
     private SearchView searchView;
@@ -50,7 +51,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         appAdapter = new ScopeAdapter(this, modulePackageName, binding.masterSwitch);
         appAdapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(appAdapter);
-        binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         if (!App.getPreferences().getBoolean("md2", false)) {
             DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this,
                     DividerItemDecoration.VERTICAL);

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -33,6 +33,7 @@
 import org.meowcat.edxposed.manager.repo.ReleaseType;
 import org.meowcat.edxposed.manager.repo.RepoDb;
 import org.meowcat.edxposed.manager.util.InstallApkUtil;
+import org.meowcat.edxposed.manager.util.LinearLayoutManagerFix;
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.NavUtil;
 import org.meowcat.edxposed.manager.util.RepoLoader;
@@ -196,7 +197,7 @@ public void onCreate(Bundle savedInstanceState) {
         adapter.setHasStableIds(true);
         moduleUtil.addListener(this);
         binding.recyclerView.setAdapter(adapter);
-        binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        binding.recyclerView.setLayoutManager(new LinearLayoutManagerFix(this));
         if (!App.getPreferences().getBoolean("md2", false)) {
             DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this,
                     DividerItemDecoration.VERTICAL);

File: app/src/main/java/org/meowcat/edxposed/manager/BaseActivity.java
Patch:
@@ -108,10 +108,10 @@ private int getCustomTheme() {
     protected void setupWindowInsets(View rootView, View secondView) {
         rootView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION);
         ViewCompat.setOnApplyWindowInsetsListener(rootView, (v, insets) -> {
-            if (secondView != null && insets.getTappableElementInsets().bottom != insets.getSystemWindowInsetBottom()) {
+            if (secondView != null) {
                 secondView.setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
             }
-            rootView.setPadding(insets.getSystemWindowInsetLeft(), insets.getSystemWindowInsetTop(), insets.getSystemWindowInsetRight(), insets.getTappableElementInsets().bottom);
+            rootView.setPadding(insets.getSystemWindowInsetLeft(), insets.getSystemWindowInsetTop(), insets.getSystemWindowInsetRight(), secondView == null ? insets.getSystemWindowInsetBottom() : 0);
             return insets;
         });
     }

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadActivity.java
Patch:
@@ -377,7 +377,7 @@ class HeaderViewHolder extends RecyclerView.ViewHolder {
 
             HeaderViewHolder(View view) {
                 super(view);
-                title = findViewById(android.R.id.title);
+                title = view.findViewById(android.R.id.title);
             }
         }
     }

File: app/src/main/java/org/meowcat/edxposed/manager/CompileDialogFragment.java
Patch:
@@ -110,7 +110,6 @@ protected String doInBackground(String... commands) {
             List<String> stdout = new ArrayList<>();
             List<String> stderr = new ArrayList<>();
             Shell.Result result = Shell.su(commands).to(stdout, stderr).exec();
-            List<String> ret;
             if (stderr.size() > 0) {
                 return "Error: " + TextUtils.join("\n", stderr);
             } else if (!result.isSuccess()) { // they might don't write to stderr

File: app/src/main/java/org/meowcat/edxposed/manager/ModuleScopeActivity.java
Patch:
@@ -31,12 +31,11 @@ public void run() {
         }
     };
     private final Handler handler = new Handler();
-    private String modulePackageName;
 
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        modulePackageName = getIntent().getStringExtra("modulePackageName");
+        String modulePackageName = getIntent().getStringExtra("modulePackageName");
         String moduleName = getIntent().getStringExtra("moduleName");
         binding = ActivityBlackListBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/BlackListAdapter.java
Patch:
@@ -15,7 +15,7 @@
 
 public class BlackListAdapter extends AppAdapter {
 
-    private volatile boolean isWhiteListMode;
+    private final boolean isWhiteListMode;
     private List<String> checkedList;
 
     public BlackListAdapter(Context context, boolean isWhiteListMode) {

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/CursorRecyclerViewAdapter.java
Patch:
@@ -14,7 +14,7 @@ public abstract class CursorRecyclerViewAdapter<VH extends RecyclerView.ViewHold
 
     private int rowIdColumn;
 
-    private DataSetObserver dataSetObserver;
+    private final DataSetObserver dataSetObserver;
 
     public CursorRecyclerViewAdapter(Cursor cursor) {
         this.cursor = cursor;

File: app/src/main/java/org/meowcat/edxposed/manager/repo/RepoDb.java
Patch:
@@ -37,7 +37,7 @@ public final class RepoDb extends SQLiteOpenHelper {
 
     @SuppressLint("StaticFieldLeak")
     private static Context context;
-    private static SQLiteDatabase db;
+    private static final SQLiteDatabase db;
 
     static {
         RepoDb instance = new RepoDb(XposedApp.getInstance());

File: app/src/main/java/org/meowcat/edxposed/manager/repo/RepoParser.java
Patch:
@@ -33,7 +33,7 @@ public class RepoParser {
     public final static String TAG = XposedApp.TAG;
     private final static String NS = null;
     private final XmlPullParser parser;
-    private RepoParserCallback callback;
+    private final RepoParserCallback callback;
     private boolean mRepoEventTriggered = false;
 
     private RepoParser(InputStream is, RepoParserCallback callback) throws XmlPullParserException, IOException {

File: app/src/main/java/org/meowcat/edxposed/manager/util/ModuleUtil.java
Patch:
@@ -7,7 +7,6 @@
 import android.content.pm.PackageManager;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.graphics.Bitmap;
-import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.util.Log;
 import android.widget.Toast;

File: app/src/main/java/org/meowcat/edxposed/manager/util/chrome/CustomTabsURLSpan.java
Patch:
@@ -11,7 +11,7 @@
  */
 public class CustomTabsURLSpan extends URLSpan {
 
-    private BaseActivity activity;
+    private final BaseActivity activity;
 
     CustomTabsURLSpan(BaseActivity activity, String url) {
         super(url);

File: app/src/main/java/org/meowcat/edxposed/manager/util/chrome/LinkTransformationMethod.java
Patch:
@@ -16,7 +16,7 @@
  */
 public class LinkTransformationMethod implements TransformationMethod {
 
-    private BaseActivity activity;
+    private final BaseActivity activity;
 
     public LinkTransformationMethod(BaseActivity activity) {
         this.activity = activity;

File: app/src/main/java/org/meowcat/edxposed/manager/widget/DownloadView.java
Patch:
@@ -17,7 +17,7 @@ public class DownloadView extends LinearLayout {
     public Fragment fragment;
     private String mUrl = null;
     private String mTitle = null;
-    private DownloadViewBinding binding;
+    private final DownloadViewBinding binding;
 
     public DownloadView(Context context, final AttributeSet attrs) {
         super(context, attrs);
@@ -38,7 +38,7 @@ public void setUrl(String url) {
         if (mUrl != null) {
             binding.btnDownload.setVisibility(View.VISIBLE);
             binding.txtInfo.setVisibility(View.GONE);
-        }else {
+        } else {
             binding.btnDownload.setVisibility(View.GONE);
             binding.txtInfo.setVisibility(View.VISIBLE);
             binding.txtInfo.setText(R.string.download_view_no_url);

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -548,7 +548,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
             String updateDate = dateformat.format(new Date(item.updateTime));
             holder.timestamps.setText(getString(R.string.install_timestamps, creationDate, updateDate));
 
-            holder.appIcon.setImageBitmap(item.getIcon(ModulesActivity.this));
+            holder.appIcon.setImageBitmap(item.getIcon());
 
             TextView descriptionText = holder.appDescription;
             descriptionText.setVisibility(View.VISIBLE);

File: app/src/main/java/org/meowcat/edxposed/manager/SettingsActivity.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
-import android.os.FileUtils;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
 import android.view.View;
@@ -29,6 +28,7 @@
 import org.meowcat.edxposed.manager.adapters.AppHelper;
 import org.meowcat.edxposed.manager.adapters.BlackListAdapter;
 import org.meowcat.edxposed.manager.databinding.ActivitySettingsBinding;
+import org.meowcat.edxposed.manager.util.FileUtils;
 import org.meowcat.edxposed.manager.util.RepoLoader;
 import org.meowcat.edxposed.manager.widget.IntegerListPreference;
 
@@ -137,7 +137,7 @@ static void setFilePermissionsFromMode(String name) {
             if ((Context.MODE_WORLD_READABLE & MODE_WORLD_WRITEABLE) != 0) {
                 perms |= FileUtils.S_IWOTH;
             }
-            FileUtils.setPermissions(name, perms, -1, -1);
+            FileUtils.setPermissions(name, perms);
         }
 
         @SuppressLint({"ObsoleteSdkInt", "WorldReadableFiles"})

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppHelper.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.Intent;
 import android.content.pm.ApplicationInfo;
 import android.net.Uri;
-import android.os.FileUtils;
 import android.view.View;
 import android.widget.Toast;
 
@@ -20,6 +19,7 @@
 import org.meowcat.edxposed.manager.R;
 import org.meowcat.edxposed.manager.XposedApp;
 import org.meowcat.edxposed.manager.util.CompileUtil;
+import org.meowcat.edxposed.manager.util.FileUtils;
 
 import java.io.BufferedReader;
 import java.io.File;
@@ -180,7 +180,7 @@ private static void setFilePermissionsFromMode(String name, int mode) {
         if ((mode & Context.MODE_WORLD_WRITEABLE) != 0) {
             perms |= FileUtils.S_IWOTH;
         }
-        FileUtils.setPermissions(name, perms, -1, -1);
+        FileUtils.setPermissions(name, perms);
     }
 
     @SuppressLint("WorldReadableFiles")

File: app/src/main/java/org/meowcat/edxposed/manager/BaseActivity.java
Patch:
@@ -119,7 +119,7 @@ protected void setupWindowInsets(View rootView, View secondView) {
     @Override
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        AppCompatDelegate.setDefaultNightMode(XposedApp.getPreferences().getInt("theme", 0));
+        AppCompatDelegate.setDefaultNightMode(XposedApp.getPreferences().getInt("theme", -1));
         theme = getTheme(this) + getCustomTheme() + XposedApp.getPreferences().getBoolean("md2", false);
     }
 

File: app/src/main/java/org/meowcat/edxposed/manager/BlackListActivity.java
Patch:
@@ -51,7 +51,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         }
         setupWindowInsets(binding.snackbar, binding.recyclerView);
         final boolean isWhiteListMode = isWhiteListMode();
-        appAdapter = isCompat ? new CompatListAdapter(this, binding) : new BlackListAdapter(this, isWhiteListMode, binding);
+        appAdapter = isCompat ? new CompatListAdapter(this) : new BlackListAdapter(this, isWhiteListMode);
         appAdapter.setHasStableIds(true);
         binding.recyclerView.setAdapter(appAdapter);
         binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));

File: app/src/main/java/org/meowcat/edxposed/manager/MainActivity.java
Patch:
@@ -103,7 +103,7 @@ public void onCreate(Bundle savedInstanceState) {
             binding.statusIcon.setImageDrawable(getDrawable(R.drawable.ic_error));
         }
         notifyDataSetChanged();
-        new Thread(() -> new BlackListAdapter(getApplicationContext(), AppHelper.isWhiteListMode(), null).generateCheckedList());
+        new Thread(() -> new BlackListAdapter(getApplicationContext(), AppHelper.isWhiteListMode()).generateCheckedList());
     }
 
     private int extractIntPart(String str) {

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -24,7 +24,6 @@
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
-import androidx.transition.TransitionManager;
 
 import com.google.android.material.snackbar.Snackbar;
 
@@ -158,7 +157,6 @@ public void run() {
                 }
             });
             adapter.addAll(showList);
-            TransitionManager.beginDelayedTransition(binding.recyclerView);
             adapter.notifyDataSetChanged();
             moduleUtil.updateModulesList(false);
             binding.swipeRefreshLayout.setRefreshing(false);

File: app/src/main/java/org/meowcat/edxposed/manager/SettingsActivity.java
Patch:
@@ -501,7 +501,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
                 prefPretendXposedInstaller.setOnPreferenceChangeListener((preference, newValue) -> {
                     boolean enabled = (Boolean) newValue;
                     if (enabled) {
-                        new BlackListAdapter(getContext(), AppHelper.isWhiteListMode(), null).generateCheckedList();
+                        new BlackListAdapter(getContext(), AppHelper.isWhiteListMode()).generateCheckedList();
                         FileOutputStream fos = null;
                         try {
                             fos = new FileOutputStream(pretendXposedInstallerFlag.getPath());
@@ -533,7 +533,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
                 prefHideEdXposedManager.setOnPreferenceChangeListener((preference, newValue) -> {
                     boolean enabled = (Boolean) newValue;
                     if (enabled) {
-                        new BlackListAdapter(getContext(), AppHelper.isWhiteListMode(), null).generateCheckedList();
+                        new BlackListAdapter(getContext(), AppHelper.isWhiteListMode()).generateCheckedList();
                         FileOutputStream fos = null;
                         try {
                             fos = new FileOutputStream(hideEdXposedManagerFlag.getPath());

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/BlackListAdapter.java
Patch:
@@ -6,7 +6,6 @@
 
 import org.meowcat.edxposed.manager.R;
 import org.meowcat.edxposed.manager.XposedApp;
-import org.meowcat.edxposed.manager.databinding.ActivityBlackListBinding;
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.ToastUtil;
 
@@ -19,8 +18,8 @@ public class BlackListAdapter extends AppAdapter {
     private volatile boolean isWhiteListMode;
     private List<String> checkedList;
 
-    public BlackListAdapter(Context context, boolean isWhiteListMode, ActivityBlackListBinding binding) {
-        super(context, binding);
+    public BlackListAdapter(Context context, boolean isWhiteListMode) {
+        super(context);
         this.isWhiteListMode = isWhiteListMode;
     }
 

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/CompatListAdapter.java
Patch:
@@ -5,7 +5,6 @@
 import android.widget.CompoundButton;
 
 import org.meowcat.edxposed.manager.R;
-import org.meowcat.edxposed.manager.databinding.ActivityBlackListBinding;
 import org.meowcat.edxposed.manager.util.ToastUtil;
 
 import java.util.List;
@@ -14,8 +13,8 @@ public class CompatListAdapter extends AppAdapter {
 
     private List<String> checkedList;
 
-    public CompatListAdapter(Context context, ActivityBlackListBinding binding) {
-        super(context, binding);
+    public CompatListAdapter(Context context) {
+        super(context);
     }
 
     @Override

File: app/src/main/java/org/meowcat/edxposed/manager/xposed/Enhancement.java
Patch:
@@ -105,7 +105,7 @@ public void onEvent(int event, @Nullable String path) {
     }
 
     private static List<String> readModulesList(final String filename) {
-        XposedBridge.log("EdXpMgrEx: Reading modules list " + filename + "...");
+        XposedBridge.log("EdXposedManager: Reading modules list " + filename + "...");
         final StrictMode.ThreadPolicy oldPolicy = StrictMode.allowThreadDiskReads();
         try {
             final File listFile = new File(filename);

File: app/src/main/java/org/meowcat/edxposed/manager/AboutActivity.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.content.pm.PackageManager;
 import android.os.Bundle;
 import android.view.View;
 

File: app/src/main/java/org/meowcat/edxposed/manager/EdDownloadActivity.java
Patch:
@@ -49,9 +49,9 @@ public void onCreate(Bundle savedInstanceState) {
 
         if (!XposedApp.getPreferences().getBoolean("hide_install_warning", false)) {
             DialogInstallWarningBinding binding = DialogInstallWarningBinding.inflate(getLayoutInflater());
-            binding.message.setText(R.string.not_logcat);
             new MaterialAlertDialogBuilder(this)
                     .setTitle(R.string.install_warning_title)
+                    .setMessage(R.string.install_warning)
                     .setView(binding.getRoot())
                     .setPositiveButton(android.R.string.ok, (dialog, which) -> {
                         if (binding.checkbox.isChecked())

File: app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java
Patch:
@@ -65,9 +65,9 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
 
         if (!XposedApp.getPreferences().getBoolean("hide_logcat_warning", false)) {
             DialogInstallWarningBinding binding = DialogInstallWarningBinding.inflate(getLayoutInflater());
-            binding.message.setText(R.string.not_logcat);
             new MaterialAlertDialogBuilder(this)
                     .setTitle(R.string.install_warning_title)
+                    .setMessage(R.string.not_logcat)
                     .setView(binding.getRoot())
                     .setPositiveButton(android.R.string.ok, (dialog, which) -> {
                         if (binding.checkbox.isChecked())

File: app/src/main/java/org/meowcat/edxposed/manager/MainActivity.java
Patch:
@@ -14,8 +14,6 @@
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.RepoLoader;
 
-import me.zhanghai.android.appiconloader.AppIconLoader;
-
 public class MainActivity extends BaseActivity implements RepoLoader.RepoListener, ModuleUtil.ModuleListener {
     ActivityMainBinding binding;
     private RepoLoader repoLoader;

File: app/src/main/java/org/meowcat/edxposed/manager/XposedApp.java
Patch:
@@ -148,10 +148,10 @@ public void onCreate() {
         RepoLoader.getInstance().triggerFirstLoadIfNecessary();
 
         appIconLoader = new AppIconLoader(getResources().getDimensionPixelSize(
-                R.dimen.app_icon_size), this);
+                R.dimen.app_icon_size), false, this);
     }
 
-    public AppIconLoader getAppIconLoader(){
+    public AppIconLoader getAppIconLoader() {
         return appIconLoader;
     }
 

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppAdapter.java
Patch:
@@ -33,8 +33,6 @@
 import java.util.List;
 import java.util.Locale;
 
-import me.zhanghai.android.appiconloader.AppIconLoader;
-
 public class AppAdapter extends RecyclerView.Adapter<AppAdapter.ViewHolder> implements Filterable {
 
     protected final Context context;

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppHelper.java
Patch:
@@ -18,7 +18,6 @@
 
 import org.meowcat.edxposed.manager.BuildConfig;
 import org.meowcat.edxposed.manager.R;
-import org.meowcat.edxposed.manager.StatusInstallerFragment;
 import org.meowcat.edxposed.manager.XposedApp;
 import org.meowcat.edxposed.manager.util.CompileUtil;
 

File: app/src/main/java/org/meowcat/edxposed/manager/receivers/BootReceiver.java
Patch:
@@ -3,8 +3,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.net.ConnectivityManager;
-import android.net.NetworkInfo;
 import android.os.AsyncTask;
 import android.util.Log;
 

File: app/src/main/java/org/meowcat/edxposed/manager/xposed/Enhancement.java
Patch:
@@ -12,8 +12,6 @@
 import androidx.annotation.Keep;
 import androidx.annotation.Nullable;
 
-import org.meowcat.edxposed.manager.StatusInstallerFragment;
-
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileReader;
@@ -29,6 +27,7 @@
 import de.robv.android.xposed.XposedBridge;
 import de.robv.android.xposed.XposedHelpers;
 import de.robv.android.xposed.callbacks.XC_LoadPackage;
+import de.robv.android.xposed.installer.XposedApp;
 
 import static de.robv.android.xposed.XposedHelpers.callMethod;
 import static de.robv.android.xposed.XposedHelpers.callStaticMethod;
@@ -347,7 +346,7 @@ protected void afterHookedMethod(MethodHookParam param) {
             }
         } else if (lpparam.packageName.equals(APPLICATION_ID)) {
             // Make sure Xposed work
-            XposedHelpers.findAndHookMethod(StatusInstallerFragment.class.getName(), lpparam.classLoader, "isEnhancementEnabled", XC_MethodReplacement.returnConstant(true));
+            XposedHelpers.findAndHookMethod(XposedApp.class.getName(), lpparam.classLoader, "isEnhancementEnabled", XC_MethodReplacement.returnConstant(true));
             // XposedHelpers.findAndHookMethod(StatusInstallerFragment.class.getName(), lpparam.classLoader, "isSELinuxEnforced", XC_MethodReplacement.returnConstant(SELinuxHelper.isSELinuxEnforced()));
         }
     }

File: xposed-bridge/src/main/java/android/content/res/XResources.java
Patch:
@@ -8,6 +8,7 @@
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.os.StrictMode;
 import android.text.Html;
 import android.util.AttributeSet;
 import android.util.DisplayMetrics;
@@ -115,8 +116,10 @@ public boolean isFirstLoad() {
 			if (mResDir == null)
 				return false;
 
+			final StrictMode.ThreadPolicy policy = StrictMode.allowThreadDiskReads();
 			Long lastModification = new File(mResDir).lastModified();
 			Long oldModified = sResDirLastModified.get(mResDir);
+			StrictMode.setThreadPolicy(policy);
 			if (lastModification.equals(oldModified))
 				return false;
 

File: app/src/main/java/org/meowcat/edxposed/manager/SettingsActivity.java
Patch:
@@ -494,7 +494,7 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
                 updatePreference(!md2.isChecked());
 
                 Preference enhancement_status = findPreference("enhancement_status");
-                Objects.requireNonNull(enhancement_status).setSummary(StatusInstallerFragment.isEnhancementEnabled() ? R.string.settings_summary_enhancement_enabled : R.string.settings_summary_enhancement);
+                Objects.requireNonNull(enhancement_status).setSummary(XposedApp.isEnhancementEnabled() ? R.string.settings_summary_enhancement_enabled : R.string.settings_summary_enhancement);
                 SwitchPreferenceCompat prefPretendXposedInstaller = findPreference("pretend_xposed_installer");
 
                 Objects.requireNonNull(prefPretendXposedInstaller).setChecked(pretendXposedInstallerFlag.exists());

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppHelper.java
Patch:
@@ -46,7 +46,7 @@ public class AppHelper {
     private static final String WHITE_LIST_MODE = "conf/usewhitelist";
     private static final String BLACK_LIST_MODE = "conf/blackwhitelist";
 
-    private static final List<String> FORCE_WHITE_LIST = new ArrayList<>(StatusInstallerFragment.isEnhancementEnabled() ? Arrays.asList(BuildConfig.APPLICATION_ID, "android") : Collections.singletonList(BuildConfig.APPLICATION_ID));
+    private static final List<String> FORCE_WHITE_LIST = new ArrayList<>(XposedApp.isEnhancementEnabled() ? Arrays.asList(BuildConfig.APPLICATION_ID, "android") : Collections.singletonList(BuildConfig.APPLICATION_ID));
     public static List<String> FORCE_WHITE_LIST_MODULE = new ArrayList<>(FORCE_WHITE_LIST);
 
     @SuppressWarnings("OctalInteger")

File: app/src/main/java/org/meowcat/edxposed/manager/xposed/Enhancement.java
Patch:
@@ -21,6 +21,7 @@
 import de.robv.android.xposed.XposedBridge;
 import de.robv.android.xposed.XposedHelpers;
 import de.robv.android.xposed.callbacks.XC_LoadPackage;
+import de.robv.android.xposed.installer.XposedApp;
 
 import static de.robv.android.xposed.XposedHelpers.findAndHookMethod;
 import static org.meowcat.edxposed.manager.BuildConfig.APPLICATION_ID;
@@ -300,7 +301,7 @@ protected void afterHookedMethod(MethodHookParam param) {
             }
         } else if (lpparam.packageName.equals(APPLICATION_ID)) {
             // Make sure Xposed work
-            XposedHelpers.findAndHookMethod(StatusInstallerFragment.class.getName(), lpparam.classLoader, "isEnhancementEnabled", XC_MethodReplacement.returnConstant(true));
+            XposedHelpers.findAndHookMethod(XposedApp.class.getName(), lpparam.classLoader, "isEnhancementEnabled", XC_MethodReplacement.returnConstant(true));
             // XposedHelpers.findAndHookMethod(StatusInstallerFragment.class.getName(), lpparam.classLoader, "isSELinuxEnforced", XC_MethodReplacement.returnConstant(SELinuxHelper.isSELinuxEnforced()));
         }
     }

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/config/ConfigManager.java
Patch:
@@ -39,6 +39,8 @@ private static boolean isFileExists(String path) {
 
     public static native String getInstallerPackageName();
 
+    public static native String getXposedPropPath();
+
     public static native String getInstallerConfigPath(String suffix);
 
     public static native String getDataPathPrefix();

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/hooker/XposedInstallerHooker.java
Patch:
@@ -1,5 +1,6 @@
 package com.elderdrivers.riru.edxp.hooker;
 
+import com.elderdrivers.riru.edxp.config.ConfigManager;
 import com.elderdrivers.riru.edxp.util.Utils;
 
 import java.io.File;
@@ -37,7 +38,7 @@ protected void beforeHookedMethod(MethodHookParam param) throws Throwable {
                                 Utils.logD("reloadXposedProp already done, skip...");
                                 return;
                             }
-                            File file = new File("/system/framework/edconfig.jar");
+                            File file = new File(ConfigManager.getXposedPropPath());
                             FileInputStream is = null;
                             try {
                                 is = new FileInputStream(file);

File: xposed-bridge/src/main/java/com/elderdrivers/riru/edxp/config/EdxpConfig.java
Patch:
@@ -8,6 +8,8 @@ public interface EdxpConfig {
 
     String getInstallerPackageName();
 
+    String getXposedPropPath();
+
     boolean isDynamicModulesMode();
 
     boolean isNoModuleLogEnabled();

File: app/src/main/java/org/meowcat/edxposed/manager/MainActivity.java
Patch:
@@ -8,6 +8,8 @@
 import androidx.appcompat.widget.TooltipCompat;
 import androidx.core.content.ContextCompat;
 
+import org.meowcat.edxposed.manager.adapters.AppHelper;
+import org.meowcat.edxposed.manager.adapters.BlackListAdapter;
 import org.meowcat.edxposed.manager.databinding.ActivityMainBinding;
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.RepoLoader;
@@ -95,6 +97,7 @@ public void onCreate(Bundle savedInstanceState) {
             binding.statusIcon.setImageDrawable(getDrawable(R.drawable.ic_error));
         }
         notifyDataSetChanged();
+        new Thread(() -> new BlackListAdapter(getApplicationContext(), AppHelper.isWhiteListMode(), null).generateCheckedList());
     }
 
     private int extractIntPart(String str) {

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppHelper.java
Patch:
@@ -45,7 +45,7 @@ public class AppHelper {
     private static final String BLACK_LIST_MODE = "conf/blackwhitelist";
 
     private static final List<String> FORCE_WHITE_LIST = new ArrayList<>(Collections.singletonList(BuildConfig.APPLICATION_ID));
-    static List<String> FORCE_WHITE_LIST_MODULE = new ArrayList<>(FORCE_WHITE_LIST);
+    public static List<String> FORCE_WHITE_LIST_MODULE = new ArrayList<>(FORCE_WHITE_LIST);
 
     @SuppressWarnings("OctalInteger")
     static void makeSurePath() {

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/BlackListAdapter.java
Patch:
@@ -25,7 +25,7 @@ public BlackListAdapter(Context context, boolean isWhiteListMode, ActivityBlackL
     }
 
     @Override
-    protected List<String> generateCheckedList() {
+    public List<String> generateCheckedList() {
         if (XposedApp.getPreferences().getBoolean("hook_modules", true)) {
             Collection<ModuleUtil.InstalledModule> installedModules = ModuleUtil.getInstance().getModules().values();
             for (ModuleUtil.InstalledModule info : installedModules) {

File: app/src/main/java/org/meowcat/edxposed/manager/XposedApp.java
Patch:
@@ -114,6 +114,7 @@ public void onCreate() {
         BASE_DIR_LEGACY = appInfo.dataDir;
         BASE_DIR = appInfo.deviceProtectedDataDir + "/";
         ENABLED_MODULES_LIST_FILE = BASE_DIR + "conf/enabled_modules.list";
+        ModuleUtil.MODULES_LIST_FILE = BASE_DIR + "conf/modules.list";
 
         instance = this;
         uiThread = Thread.currentThread();

File: app/src/main/java/org/meowcat/edxposed/manager/util/ModuleUtil.java
Patch:
@@ -35,7 +35,7 @@
 @SuppressWarnings("OctalInteger")
 public final class ModuleUtil {
     // xposedminversion below this
-    private static final String MODULES_LIST_FILE = XposedApp.BASE_DIR + "conf/modules.list";
+    public static String MODULES_LIST_FILE = XposedApp.BASE_DIR + "conf/modules.list";
     private static final String PLAY_STORE_PACKAGE = "com.android.vending";
     public static int MIN_MODULE_VERSION = 2; // reject modules with
     private static ModuleUtil instance = null;

File: app/src/main/java/org/meowcat/edxposed/manager/SettingsActivity.java
Patch:
@@ -415,7 +415,8 @@ public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
                     Activity activity = getActivity();
                     if (activity != null) {
                         Intent intent = new Intent();
-                        intent.setClass(activity, CompatListActivity.class);
+                        intent.putExtra("compat_list",true);
+                        intent.setClass(activity, BlackListActivity.class);
                         activity.startActivity(intent);
                     }
                     return true;

File: app/src/main/java/org/meowcat/edxposed/manager/BaseActivity.java
Patch:
@@ -162,6 +162,9 @@ protected void onApplyThemeResource(Resources.Theme theme, int resid, boolean fi
         if (XposedApp.getPreferences().getBoolean("md2", false) && !(this instanceof MainActivity)) {
             theme.applyStyle(R.style.ThemeOverlay_Md2, true);
         }
+        if (this instanceof MainActivity) {
+            theme.applyStyle(R.style.ThemeOverlay_ActivityMain, true);
+        }
         theme.applyStyle(getThemeStyleRes(this), true);
         // only pass theme style to super, so styled theme will not be overwritten
         super.onApplyThemeResource(theme, R.style.ThemeOverlay, first);

File: xposed-bridge/src/main/java/de/robv/android/xposed/XSharedPreferences.java
Patch:
@@ -128,11 +128,11 @@ private void loadFromDiskLocked() {
 				map = mMap;
 			}
 		} catch (XmlPullParserException e) {
-			Log.w(TAG, "getSharedPreferences", e);
+			Log.w(TAG, "getSharedPreferences failed for: " + mFilename, e);
 		} catch (FileNotFoundException ignored) {
 			// SharedPreferencesImpl has a canRead() check, so it doesn't log anything in case the file doesn't exist
 		} catch (IOException e) {
-			Log.w(TAG, "getSharedPreferences", e);
+			Log.w(TAG, "getSharedPreferences failed for: " + mFilename, e);
 		} finally {
 			if (result != null && result.stream != null) {
 				try {

File: app/src/main/java/org/meowcat/edxposed/manager/BaseActivity.java
Patch:
@@ -142,8 +142,9 @@ protected void onApplyThemeResource(Resources.Theme theme, int resid, boolean fi
             }
             theme.applyStyle(resid, false);
         }
-        if (!(this instanceof MainActivity)) {
-            theme.applyStyle(getCustomTheme(), true);
+        theme.applyStyle(getCustomTheme(), true);
+        if (this instanceof MainActivity) {
+            theme.applyStyle(R.style.ThemeOverlay_ActivityMain, true);
         }
         theme.applyStyle(getThemeStyleRes(this), true);
         // only pass theme style to super, so styled theme will not be overwritten

File: app/src/main/java/org/meowcat/edxposed/manager/BaseAdvancedInstaller.java
Patch:
@@ -11,7 +11,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.TooltipCompat;
 import androidx.core.text.HtmlCompat;
 import androidx.fragment.app.Fragment;
@@ -118,7 +117,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
             binding.warningUnofficial.setVisibility(View.VISIBLE);
         }
 
-        binding.showOnXda.setOnClickListener(v -> NavUtil.startURL((AppCompatActivity) getActivity(), tab.support));
+        binding.showOnXda.setOnClickListener(v -> NavUtil.startURL((BaseActivity) getActivity(), tab.support));
         binding.updateDescription.setOnClickListener(v -> new MaterialAlertDialogBuilder(Objects.requireNonNull(getContext()))
                 .setTitle(R.string.changes)
                 .setMessage(HtmlCompat.fromHtml(tab.description, HtmlCompat.FROM_HTML_MODE_LEGACY))

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsFragment.java
Patch:
@@ -10,7 +10,6 @@
 import android.view.ViewGroup;
 
 import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.view.ViewCompat;
 import androidx.fragment.app.Fragment;
 
@@ -52,7 +51,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         if (module.description != null) {
             if (module.descriptionIsHtml) {
                 binding.downloadDescription.setText(RepoParser.parseSimpleHtml(getActivity(), module.description, binding.downloadDescription));
-                binding.downloadDescription.setTransformationMethod(new LinkTransformationMethod((AppCompatActivity) getActivity()));
+                binding.downloadDescription.setTransformationMethod(new LinkTransformationMethod((BaseActivity) getActivity()));
                 binding.downloadDescription.setMovementMethod(LinkMovementMethod.getInstance());
             } else {
                 binding.downloadDescription.setText(module.description);
@@ -71,7 +70,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             final Uri link = NavUtil.parseURL(moreInfoEntry.second);
             if (link != null) {
                 moreinfoBinding.message.setTextColor(moreinfoBinding.message.getLinkTextColors());
-                moreinfoBinding.getRoot().setOnClickListener(v -> NavUtil.startURL((AppCompatActivity) getActivity(), link));
+                moreinfoBinding.getRoot().setOnClickListener(v -> NavUtil.startURL((BaseActivity) getActivity(), link));
             }
 
             binding.downloadMoreinfoContainer.addView(moreinfoBinding.getRoot());

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsVersionsFragment.java
Patch:
@@ -20,7 +20,6 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.content.ContextCompat;
 import androidx.core.view.ViewCompat;
 import androidx.fragment.app.ListFragment;
@@ -283,7 +282,7 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
 
                 if (item.changelogIsHtml) {
                     holder.txtChanges.setText(RepoParser.parseSimpleHtml(getActivity(), item.changelog, holder.txtChanges));
-                    holder.txtChanges.setTransformationMethod(new LinkTransformationMethod((AppCompatActivity) getActivity()));
+                    holder.txtChanges.setTransformationMethod(new LinkTransformationMethod((BaseActivity) getActivity()));
                     holder.txtChanges.setMovementMethod(LinkMovementMethod.getInstance());
                 } else {
                     holder.txtChanges.setText(item.changelog);

File: app/src/main/java/org/meowcat/edxposed/manager/receivers/DownloadReceiver.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.widget.Toast;
 
 import org.meowcat.edxposed.manager.util.DownloadsUtil;
 
@@ -18,6 +19,7 @@ public void onReceive(final Context context, final Intent intent) {
             }
         } catch (Exception e) {//Flyme
             e.printStackTrace();
+            Toast.makeText(context, "shit flyme boom", Toast.LENGTH_LONG).show();
         }
 
     }

File: app/src/main/java/org/meowcat/edxposed/manager/util/chrome/LinkTransformationMethod.java
Patch:
@@ -9,16 +9,16 @@
 import android.view.View;
 import android.widget.TextView;
 
-import androidx.appcompat.app.AppCompatActivity;
+import org.meowcat.edxposed.manager.BaseActivity;
 
 /**
  * Created by Nikola D. on 12/23/2015.
  */
 public class LinkTransformationMethod implements TransformationMethod {
 
-    private AppCompatActivity activity;
+    private BaseActivity activity;
 
-    public LinkTransformationMethod(AppCompatActivity activity) {
+    public LinkTransformationMethod(BaseActivity activity) {
         this.activity = activity;
     }
 

File: app/src/main/java/org/meowcat/edxposed/manager/BaseActivity.java
Patch:
@@ -66,7 +66,7 @@ public static boolean isNightMode(Configuration configuration) {
     protected void setupWindowInsets(View rootView, View secondView) {
         rootView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION);
         ViewCompat.setOnApplyWindowInsetsListener(rootView, (v, insets) -> {
-            if (secondView != null) {
+            if (secondView != null && insets.getTappableElementInsets().bottom != insets.getSystemWindowInsetBottom()) {
                 secondView.setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
             }
             rootView.setPadding(insets.getSystemWindowInsetLeft(), insets.getSystemWindowInsetTop(), insets.getSystemWindowInsetRight(), insets.getTappableElementInsets().bottom);

File: app/src/main/java/org/meowcat/edxposed/manager/CompatListActivity.java
Patch:
@@ -38,7 +38,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
         }
         setupWindowInsets(binding.snackbar, binding.recyclerView);
         binding.recyclerView.setLayoutManager(new LinearLayoutManager(this));
-        appAdapter = new CompatListAdapter(this);
+        appAdapter = new CompatListAdapter(this, binding);
         binding.recyclerView.setAdapter(appAdapter);
         DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this,
                 DividerItemDecoration.VERTICAL);

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadActivity.java
Patch:
@@ -25,6 +25,7 @@
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
+import androidx.transition.TransitionManager;
 
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.timehop.stickyheadersrecyclerview.StickyRecyclerHeadersAdapter;
@@ -173,6 +174,7 @@ private void setFilter(String filterText) {
     private void reloadItems() {
         runOnUiThread(() -> {
             adapter.swapCursor(RepoDb.queryModuleOverview(sortingOrder, filterText));
+            TransitionManager.beginDelayedTransition(binding.recyclerView);
             adapter.notifyDataSetChanged();
         });
     }

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsFragment.java
Patch:
@@ -36,7 +36,9 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         }
         DownloadDetailsBinding binding = DownloadDetailsBinding.inflate(inflater, container, false);
         ViewCompat.setOnApplyWindowInsetsListener(binding.getRoot(), (v, insets) -> {
-            binding.getRoot().setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
+            if (insets.getTappableElementInsets().bottom != insets.getSystemWindowInsetBottom()) {
+                binding.getRoot().setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
+            }
             return insets;
         });
         binding.downloadTitle.setText(module.name);

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsVersionsFragment.java
Patch:
@@ -92,7 +92,9 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
         getListView().setClipToPadding(false);
         getListView().setClipToPadding(false);
         ViewCompat.setOnApplyWindowInsetsListener(view, (v, insets) -> {
-            getListView().setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
+            if (insets.getTappableElementInsets().bottom != insets.getSystemWindowInsetBottom()) {
+                getListView().setPadding(0, 0, 0, insets.getSystemWindowInsetBottom());
+            }
             return insets;
         });
     }

File: app/src/main/java/org/meowcat/edxposed/manager/EdDownloadActivity.java
Patch:
@@ -12,6 +12,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentPagerAdapter;
+import androidx.transition.TransitionManager;
 
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.gson.Gson;
@@ -93,6 +94,7 @@ protected void onPostExecute(String result) {
             try {
                 final JSONUtils.XposedJson xposedJson = new Gson().fromJson(result, JSONUtils.XposedJson.class);
 
+                TransitionManager.beginDelayedTransition(binding.tabLayout);
                 for (XposedTab tab : xposedJson.tabs) {
                     if (tab.sdks.contains(Build.VERSION.SDK_INT)) {
                         tabsAdapter.addFragment(tab.name, BaseAdvancedInstaller.newInstance(tab));

File: app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java
Patch:
@@ -237,7 +237,7 @@ protected void onPreExecute() {
             mProgressDialog = new MaterialAlertDialogBuilder(LogsActivity.this).create();
             mProgressDialog.setMessage(getString(R.string.loading));
             mProgressDialog.setCancelable(false);
-            handler.postDelayed(mRunnable, 500);
+            handler.postDelayed(mRunnable, 300);
         }
 
         @Override

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -22,6 +22,7 @@
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
+import androidx.transition.TransitionManager;
 
 import com.google.android.material.snackbar.Snackbar;
 
@@ -86,6 +87,7 @@ public void run() {
                 }
             }
             adapter.addAll(showList);
+            TransitionManager.beginDelayedTransition(binding.recyclerView);
             adapter.notifyDataSetChanged();
             moduleUtil.updateModulesList(false);
             binding.swipeRefreshLayout.setRefreshing(false);

File: app/src/main/java/org/meowcat/edxposed/manager/XposedApp.java
Patch:
@@ -60,7 +60,7 @@ public static XposedApp getInstance() {
     }
 
     public static InstallZipUtil.XposedProp getXposedProp() {
-        return de.robv.android.xposed.installer.XposedApp.getInstance().mXposedProp;
+        return de.robv.android.xposed.installer.XposedApp.getInstance().xposedProp;
     }
 
     public static void runOnUiThread(Runnable action) {

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/BlackListAdapter.java
Patch:
@@ -6,6 +6,7 @@
 
 import org.meowcat.edxposed.manager.R;
 import org.meowcat.edxposed.manager.XposedApp;
+import org.meowcat.edxposed.manager.databinding.ActivityBlackListBinding;
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.ToastUtil;
 
@@ -18,8 +19,8 @@ public class BlackListAdapter extends AppAdapter {
     private volatile boolean isWhiteListMode;
     private List<String> checkedList;
 
-    public BlackListAdapter(Context context, boolean isWhiteListMode) {
-        super(context);
+    public BlackListAdapter(Context context, boolean isWhiteListMode, ActivityBlackListBinding binding) {
+        super(context, binding);
         this.isWhiteListMode = isWhiteListMode;
     }
 

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/CompatListAdapter.java
Patch:
@@ -5,6 +5,7 @@
 import android.widget.CompoundButton;
 
 import org.meowcat.edxposed.manager.R;
+import org.meowcat.edxposed.manager.databinding.ActivityBlackListBinding;
 import org.meowcat.edxposed.manager.util.ToastUtil;
 
 import java.util.List;
@@ -13,8 +14,8 @@ public class CompatListAdapter extends AppAdapter {
 
     private List<String> checkedList;
 
-    public CompatListAdapter(Context context) {
-        super(context);
+    public CompatListAdapter(Context context, ActivityBlackListBinding binding) {
+        super(context, binding);
     }
 
     @Override

File: app/src/main/java/org/meowcat/edxposed/manager/EdDownloadActivity.java
Patch:
@@ -8,7 +8,6 @@
 import android.util.Log;
 import android.view.Menu;
 import android.view.View;
-import android.widget.CheckBox;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.ActionBar;
@@ -18,6 +17,7 @@
 import androidx.fragment.app.FragmentPagerAdapter;
 import androidx.viewpager.widget.ViewPager;
 
+import com.google.android.material.checkbox.MaterialCheckBox;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.tabs.TabLayout;
 import com.google.gson.Gson;
@@ -58,7 +58,7 @@ public void onCreate(Bundle savedInstanceState) {
                     .setTitle(R.string.install_warning_title)
                     .setView(dontShowAgainView)
                     .setPositiveButton(android.R.string.ok, (dialog, which) -> {
-                        CheckBox checkBox = dontShowAgainView.findViewById(android.R.id.checkbox);
+                        MaterialCheckBox checkBox = dontShowAgainView.findViewById(android.R.id.checkbox);
                         if (checkBox.isChecked())
                             XposedApp.getPreferences().edit().putBoolean("hide_install_warning", true).apply();
                     })

File: app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java
Patch:
@@ -11,7 +11,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.CheckBox;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
@@ -23,6 +22,7 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.google.android.material.checkbox.MaterialCheckBox;
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 import com.google.android.material.snackbar.Snackbar;
 import com.google.android.material.tabs.TabLayout;
@@ -71,7 +71,7 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
                     .setTitle(R.string.install_warning_title)
                     .setView(dontShowAgainView)
                     .setPositiveButton(android.R.string.ok, (dialog, which) -> {
-                        CheckBox checkBox = dontShowAgainView.findViewById(android.R.id.checkbox);
+                        MaterialCheckBox checkBox = dontShowAgainView.findViewById(android.R.id.checkbox);
                         if (checkBox.isChecked())
                             XposedApp.getPreferences().edit().putBoolean("hide_logcat_warning", true).apply();
                     })

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -13,12 +13,12 @@
 import android.view.ViewGroup;
 import android.widget.Filter;
 import android.widget.ImageView;
-import android.widget.Switch;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.SearchView;
+import androidx.appcompat.widget.SwitchCompat;
 import androidx.appcompat.widget.Toolbar;
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -482,7 +482,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
                 descriptionText.setTextColor(getResources().getColor(R.color.warning));
             }
 
-            Switch mSwitch = holder.mSwitch;
+            SwitchCompat mSwitch = holder.mSwitch;
             mSwitch.setOnCheckedChangeListener((buttonView, isChecked) -> {
                 String packageName = item.packageName;
                 boolean changed = mModuleUtil.isModuleEnabled(packageName) ^ isChecked;
@@ -552,7 +552,7 @@ class ViewHolder extends RecyclerView.ViewHolder {
             TextView appVersion;
             TextView timestamps;
             TextView warningText;
-            Switch mSwitch;
+            SwitchCompat mSwitch;
 
             ViewHolder(View itemView) {
                 super(itemView);

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppAdapter.java
Patch:
@@ -11,10 +11,10 @@
 import android.widget.CompoundButton;
 import android.widget.Filter;
 import android.widget.ImageView;
-import android.widget.Switch;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.SwitchCompat;
 import androidx.recyclerview.widget.RecyclerView;
 
 import org.meowcat.edxposed.manager.R;
@@ -224,7 +224,7 @@ static class ViewHolder extends RecyclerView.ViewHolder {
         TextView appPackage;
         TextView appVersion;
         TextView timestamps;
-        Switch mSwitch;
+        SwitchCompat mSwitch;
 
         ViewHolder(View itemView) {
             super(itemView);

File: app/src/main/java/org/meowcat/edxposed/manager/BaseAdvancedInstaller.java
Patch:
@@ -16,6 +16,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.TooltipCompat;
 import androidx.fragment.app.Fragment;
 
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
@@ -100,7 +101,8 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
         TextView author = view.findViewById(R.id.author);
         View showOnXda = view.findViewById(R.id.show_on_xda);
         View updateDescription = view.findViewById(R.id.updateDescription);
-
+        TooltipCompat.setTooltipText(infoInstaller, getString(R.string.info));
+        TooltipCompat.setTooltipText(infoUninstaller, getString(R.string.info));
         try {
             chooserInstallers.setAdapter(new XposedZip.MyAdapter(getContext(), installers()));
             chooserUninstallers.setAdapter(new XposedZip.MyAdapter(getContext(), uninstallers()));

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsVersionsFragment.java
Patch:
@@ -10,7 +10,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.text.method.LinkMovementMethod;
-import android.util.Log;
 import android.util.TypedValue;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -109,7 +108,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                     try {
                         OutputStream os = mActivity.getContentResolver().openOutputStream(uri);
                         if (os != null) {
-                            FileInputStream in = new FileInputStream(new File(DownloadView.mInfo.localFilename));
+                            FileInputStream in = new FileInputStream(new File(DownloadView.lastInfo.localFilename));
                             byte[] buffer = new byte[1024];
                             int len;
                             while ((len = in.read(buffer)) > 0) {

File: app/src/main/java/org/meowcat/edxposed/manager/MainActivity.java
Patch:
@@ -10,6 +10,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.PopupMenu;
+import androidx.appcompat.widget.TooltipCompat;
 
 import com.google.android.material.card.MaterialCardView;
 
@@ -20,6 +21,7 @@ public class MainActivity extends BaseActivity implements RepoLoader.RepoListene
 
     private RepoLoader mRepoLoader;
 
+    @SuppressLint("PrivateResource")
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -64,6 +66,7 @@ public void onCreate(Bundle savedInstanceState) {
             startActivity(intent);
         });
         ImageView menu = findViewById(R.id.menu_more);
+        TooltipCompat.setTooltipText(menu, getString(androidx.appcompat.R.string.abc_action_menu_overflow_description));
         menu.setOnClickListener(v -> {
             PopupMenu appMenu = new PopupMenu(MainActivity.this, menu);
             appMenu.inflate(R.menu.menu_installer);

File: app/src/main/java/org/meowcat/edxposed/manager/widget/DownloadView.java
Patch:
@@ -20,14 +20,15 @@
 import java.util.Objects;
 
 public class DownloadView extends LinearLayout {
-    public static DownloadsUtil.DownloadInfo mInfo = null;
+    public static DownloadsUtil.DownloadInfo lastInfo = null;
     private final Button btnDownload;
     private final Button btnDownloadCancel;
     private final Button btnInstall;
     private final Button btnSave;
     private final ProgressBar progressBar;
     private final TextView txtInfo;
     public Fragment fragment;
+    private DownloadsUtil.DownloadInfo mInfo = null;
     private String mUrl = null;
     private final Runnable refreshViewRunnable = new Runnable() {
         @Override
@@ -120,6 +121,7 @@ public DownloadView(Context context, final AttributeSet attrs) {
         });
 
         btnSave.setOnClickListener(v -> {
+            lastInfo = mInfo;
             mInfo = DownloadsUtil.addModule(getContext(), mTitle, mUrl, (context1, info) -> {
                 Intent exportIntent = new Intent(Intent.ACTION_CREATE_DOCUMENT);
                 exportIntent.addCategory(Intent.CATEGORY_OPENABLE);

File: app/src/main/java/android/os/FileUtils.java
Patch:
@@ -1,4 +1,4 @@
-package org.meowcat.edxposed.manager.util;
+package android.os;
 
 import java.io.BufferedInputStream;
 import java.io.ByteArrayOutputStream;
@@ -171,4 +171,4 @@ public static long checksumCrc32(File file) throws FileNotFoundException, IOExce
                 }
         }
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/org/meowcat/edxposed/manager/SettingsActivity.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.os.FileUtils;
 import android.view.View;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
@@ -24,7 +25,6 @@
 import com.takisoft.preferencex.PreferenceFragmentCompat;
 import com.topjohnwu.superuser.Shell;
 
-import org.meowcat.edxposed.manager.util.FileUtils;
 import org.meowcat.edxposed.manager.util.RepoLoader;
 
 import java.io.File;

File: app/src/main/java/org/meowcat/edxposed/manager/StatusInstallerFragment.java
Patch:
@@ -9,6 +9,7 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.FileUtils;
 import android.text.Html;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -22,8 +23,6 @@
 
 import com.google.android.material.dialog.MaterialAlertDialogBuilder;
 
-import org.meowcat.edxposed.manager.util.FileUtils;
-
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileReader;

File: app/src/main/java/org/meowcat/edxposed/manager/XposedApp.java
Patch:
@@ -12,6 +12,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.Environment;
+import android.os.FileUtils;
 import android.os.Handler;
 import android.preference.PreferenceManager;
 import android.util.DisplayMetrics;
@@ -22,7 +23,6 @@
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
 import org.meowcat.edxposed.manager.receivers.PackageChangeReceiver;
-import org.meowcat.edxposed.manager.util.FileUtils;
 import org.meowcat.edxposed.manager.util.ModuleUtil;
 import org.meowcat.edxposed.manager.util.NotificationUtil;
 import org.meowcat.edxposed.manager.util.RepoLoader;

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppHelper.java
Patch:
@@ -6,6 +6,7 @@
 import android.content.Intent;
 import android.content.pm.ApplicationInfo;
 import android.net.Uri;
+import android.os.FileUtils;
 import android.view.View;
 import android.widget.Toast;
 
@@ -19,7 +20,6 @@
 import org.meowcat.edxposed.manager.R;
 import org.meowcat.edxposed.manager.XposedApp;
 import org.meowcat.edxposed.manager.util.CompileUtil;
-import org.meowcat.edxposed.manager.util.FileUtils;
 
 import java.io.File;
 import java.io.FileNotFoundException;

File: app/src/main/java/org/meowcat/edxposed/manager/util/ModuleUtil.java
Patch:
@@ -10,6 +10,7 @@
 import android.content.pm.ResolveInfo;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
+import android.os.FileUtils;
 import android.util.Log;
 import android.widget.Toast;
 

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/hooker/XposedInstallerHooker.java
Patch:
@@ -29,6 +29,9 @@ protected void beforeHookedMethod(MethodHookParam param) throws Throwable {
                             Utils.logD("before reloadXposedProp...");
                             final String propFieldName = "mXposedProp";
                             final Object thisObject = param.thisObject;
+                            if (thisObject == null) {
+                                return;
+                            }
                             if (XposedHelpers.getObjectField(thisObject, propFieldName) != null) {
                                 param.setResult(null);
                                 Utils.logD("reloadXposedProp already done, skip...");

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -158,7 +158,7 @@ public synchronized static void log(String text) {
 		if (EdXpConfigGlobal.getConfig().isNoModuleLogEnabled()) {
 			return;
 		}
-		Log.i(TAG, "Module: " + text);
+		Log.i(TAG, text);
 	}
 
 	/**
@@ -186,7 +186,7 @@ public synchronized static void log(String name, String text) {
 		if (EdXpConfigGlobal.getConfig().isNoModuleLogEnabled()) {
 			return;
 		}
-		Log.i(TAG, "Module: " + name + ": " + text);
+		Log.i(TAG, name + ": " + text);
 	}
 
 	/**

File: app/src/main/java/org/meowcat/edxposed/manager/BaseAdvancedInstaller.java
Patch:
@@ -19,6 +19,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
 import androidx.fragment.app.Fragment;
 
@@ -188,7 +189,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c
             view.findViewById(R.id.warning_unofficial).setVisibility(View.VISIBLE);
         }
 
-        showOnXda.setOnClickListener(v -> NavUtil.startURL(getActivity(), supportUrl()));
+        showOnXda.setOnClickListener(v -> NavUtil.startURL((AppCompatActivity) getActivity(), supportUrl()));
         updateDescription.setOnClickListener(v -> new MaterialAlertDialogBuilder(Objects.requireNonNull(getContext()))
                 .setTitle(R.string.changes)
                 .setMessage(Html.fromHtml(description()))

File: app/src/main/java/org/meowcat/edxposed/manager/BlackListActivity.java
Patch:
@@ -11,6 +11,7 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.SearchView;
 import androidx.appcompat.widget.Toolbar;
+import androidx.core.view.MenuItemCompat;
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -72,7 +73,7 @@ public boolean onQueryTextChange(String newText) {
     @Override
     public boolean onCreateOptionsMenu(@NonNull Menu menu) {
         getMenuInflater().inflate(R.menu.menu_app_list, menu);
-        mSearchView = (SearchView) menu.findItem(R.id.menu_search).getActionView();
+        mSearchView = (SearchView) MenuItemCompat.getActionView(menu.findItem(R.id.menu_search));
         mSearchView.setOnQueryTextListener(mSearchListener);
         return super.onCreateOptionsMenu(menu);
     }

File: app/src/main/java/org/meowcat/edxposed/manager/CompatListActivity.java
Patch:
@@ -10,6 +10,7 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.SearchView;
 import androidx.appcompat.widget.Toolbar;
+import androidx.core.view.MenuItemCompat;
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -75,7 +76,7 @@ public void onResume() {
     @Override
     public boolean onCreateOptionsMenu(@NonNull Menu menu) {
         getMenuInflater().inflate(R.menu.menu_app_list, menu);
-        mSearchView = (SearchView) menu.findItem(R.id.menu_search).getActionView();
+        mSearchView = (SearchView) MenuItemCompat.getActionView(menu.findItem(R.id.menu_search));
         mSearchView.setOnQueryTextListener(mSearchListener);
         return super.onCreateOptionsMenu(menu);
     }

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsFragment.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
 
 import org.meowcat.edxposed.manager.repo.Module;
@@ -45,7 +46,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
         if (module.description != null) {
             if (module.descriptionIsHtml) {
                 description.setText(RepoParser.parseSimpleHtml(getActivity(), module.description, description));
-                description.setTransformationMethod(new LinkTransformationMethod(getActivity()));
+                description.setTransformationMethod(new LinkTransformationMethod((AppCompatActivity) getActivity()));
                 description.setMovementMethod(LinkMovementMethod.getInstance());
             } else {
                 description.setText(module.description);
@@ -67,7 +68,7 @@ public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             final Uri link = NavUtil.parseURL(moreInfoEntry.second);
             if (link != null) {
                 txtValue.setTextColor(txtValue.getLinkTextColors());
-                moreInfoView.setOnClickListener(v -> NavUtil.startURL(getActivity(), link));
+                moreInfoView.setOnClickListener(v -> NavUtil.startURL((AppCompatActivity) getActivity(), link));
             }
 
             moreInfoContainer.addView(moreInfoView);

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsVersionsFragment.java
Patch:
@@ -16,6 +16,7 @@
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.ListFragment;
 
@@ -247,7 +248,7 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {
 
                 if (item.changelogIsHtml) {
                     holder.txtChanges.setText(RepoParser.parseSimpleHtml(getActivity(), item.changelog, holder.txtChanges));
-                    holder.txtChanges.setTransformationMethod(new LinkTransformationMethod(getActivity()));
+                    holder.txtChanges.setTransformationMethod(new LinkTransformationMethod((AppCompatActivity) getActivity()));
                     holder.txtChanges.setMovementMethod(LinkMovementMethod.getInstance());
                 } else {
                     holder.txtChanges.setText(item.changelog);

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -4,7 +4,6 @@
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
-import android.graphics.Color;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Environment;
@@ -25,6 +24,7 @@
 import androidx.appcompat.app.ActionBar;
 import androidx.appcompat.widget.SearchView;
 import androidx.appcompat.widget.Toolbar;
+import androidx.core.view.MenuItemCompat;
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -162,7 +162,7 @@ public boolean onQueryTextChange(String newText) {
     @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.menu_modules, menu);
-        mSearchView = (SearchView) menu.findItem(R.id.menu_search).getActionView();
+        mSearchView = (SearchView) MenuItemCompat.getActionView(menu.findItem(R.id.menu_search));
         mSearchView.setOnQueryTextListener(mSearchListener);
         return super.onCreateOptionsMenu(menu);
     }

File: app/src/main/java/org/meowcat/edxposed/manager/SettingsActivity.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.os.FileUtils;
 import android.view.View;
 import android.widget.FrameLayout;
 import android.widget.LinearLayout;
@@ -25,6 +24,7 @@
 import com.takisoft.preferencex.PreferenceFragmentCompat;
 import com.topjohnwu.superuser.Shell;
 
+import org.meowcat.edxposed.manager.util.FileUtils;
 import org.meowcat.edxposed.manager.util.RepoLoader;
 
 import java.io.File;

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppHelper.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.Intent;
 import android.content.pm.ApplicationInfo;
 import android.net.Uri;
-import android.os.FileUtils;
 import android.view.View;
 import android.widget.Toast;
 
@@ -20,6 +19,7 @@
 import org.meowcat.edxposed.manager.R;
 import org.meowcat.edxposed.manager.XposedApp;
 import org.meowcat.edxposed.manager.util.CompileUtil;
+import org.meowcat.edxposed.manager.util.FileUtils;
 
 import java.io.File;
 import java.io.FileNotFoundException;

File: app/src/main/java/org/meowcat/edxposed/manager/util/ModuleUtil.java
Patch:
@@ -10,7 +10,6 @@
 import android.content.pm.ResolveInfo;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
-import android.os.FileUtils;
 import android.util.Log;
 import android.widget.Toast;
 

File: app/src/main/java/org/meowcat/edxposed/manager/util/json/XposedZip.java
Patch:
@@ -1,6 +1,5 @@
 package org.meowcat.edxposed.manager.util.json;
 
-import android.app.Activity;
 import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -10,6 +9,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
 
 import java.util.List;
 
@@ -46,7 +46,7 @@ private View getMyView(ViewGroup parent, int position) {
             View row;
             ItemHolder holder = new ItemHolder();
 
-            LayoutInflater inflater = ((Activity) context).getLayoutInflater();
+            LayoutInflater inflater = ((AppCompatActivity) context).getLayoutInflater();
             row = inflater.inflate(android.R.layout.simple_dropdown_item_1line, parent, false);
 
             holder.name = row.findViewById(android.R.id.text1);

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -487,11 +487,9 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
             TextView version = holder.appVersion;
             version.setText(Objects.requireNonNull(item).versionName);
             version.setSelected(true);
-            version.setTextColor(Color.parseColor("#808080"));
 
             TextView packageTv = holder.appPackage;
             packageTv.setText(item.packageName);
-            packageTv.setSelected(true);
 
             String creationDate = dateformat.format(new Date(item.installTime));
             String updateDate = dateformat.format(new Date(item.updateTime));

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppAdapter.java
Patch:
@@ -174,14 +174,14 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
         holder.appName.setText(InstallApkUtil.getAppLabel(info, pm));
         try {
             holder.appVersion.setText(pm.getPackageInfo(info.packageName, 0).versionName);
+            holder.appVersion.setSelected(true);
             String creationDate = dateformat.format(new Date(pm.getPackageInfo(info.packageName, 0).firstInstallTime));
             String updateDate = dateformat.format(new Date(pm.getPackageInfo(info.packageName, 0).lastUpdateTime));
             holder.timestamps.setText(holder.itemView.getContext().getString(R.string.install_timestamps, creationDate, updateDate));
         } catch (PackageManager.NameNotFoundException e) {
             e.printStackTrace();
         }
         holder.appPackage.setText(info.packageName);
-        //holder.appPackage.setTextColor(ThemeUtil.getThemeColor(context, android.R.attr.textColorSecondary));
 
         holder.mSwitch.setOnCheckedChangeListener(null);
         holder.mSwitch.setChecked(checkedList.contains(info.packageName));

File: app/src/main/java/org/meowcat/edxposed/manager/ModulesActivity.java
Patch:
@@ -54,10 +54,12 @@
 import java.io.InputStreamReader;
 import java.io.PrintWriter;
 import java.text.DateFormat;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.Objects;
 import java.util.Set;
@@ -72,7 +74,7 @@ public class ModulesActivity extends BaseActivity implements ModuleUtil.ModuleLi
     private SearchView mSearchView;
     private SearchView.OnQueryTextListener mSearchListener;
     private PackageManager mPm;
-    private DateFormat dateformat = DateFormat.getDateInstance(DateFormat.SHORT);
+    private DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
     private ModuleUtil mModuleUtil;
     private ModuleAdapter mAdapter = null;
     private MenuItem mClickedMenuItem = null;

File: app/src/main/java/org/meowcat/edxposed/manager/adapters/AppAdapter.java
Patch:
@@ -22,19 +22,21 @@
 import org.meowcat.edxposed.manager.util.InstallApkUtil;
 
 import java.text.DateFormat;
+import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.Date;
 import java.util.List;
+import java.util.Locale;
 
 public class AppAdapter extends RecyclerView.Adapter<AppAdapter.ViewHolder> {
 
     protected final Context context;
     private final ApplicationInfo.DisplayNameComparator displayNameComparator;
     private Callback callback;
     private List<ApplicationInfo> fullList, showList;
-    private DateFormat dateformat = DateFormat.getDateInstance(DateFormat.SHORT);
+    private DateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
     private List<String> checkedList;
     private PackageManager pm;
     private ApplicationFilter filter;

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsVersionsFragment.java
Patch:
@@ -1,7 +1,6 @@
 package org.meowcat.edxposed.manager;
 
 import android.annotation.SuppressLint;
-import android.app.Activity;
 import android.content.Context;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
@@ -41,8 +40,8 @@
 import static org.meowcat.edxposed.manager.XposedApp.WRITE_EXTERNAL_PERMISSION;
 
 public class DownloadDetailsVersionsFragment extends ListFragment {
-    private DownloadDetailsActivity mActivity;
     private static View rootView;
+    private DownloadDetailsActivity mActivity;
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsVersionsFragment.java
Patch:
@@ -42,7 +42,7 @@
 
 public class DownloadDetailsVersionsFragment extends ListFragment {
     private DownloadDetailsActivity mActivity;
-    private View rootView;
+    private static View rootView;
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
@@ -124,7 +124,6 @@ public static class DownloadModuleCallback implements DownloadsUtil.DownloadFini
         @Override
         public void onDownloadFinished(Context context, DownloadsUtil.DownloadInfo info) {
             File localFile = new File(info.localFilename);
-            View rootView = ((Activity) context).findViewById(R.id.snackbar);
             if (!localFile.isFile())
                 return;
 

File: app/src/main/java/org/meowcat/edxposed/manager/BlackListActivity.java
Patch:
@@ -88,6 +88,7 @@ public void onResume() {
                         intent.setClass(BlackListActivity.this, SettingsActivity.class);
                         startActivity(intent);
                     })
+                    .setNegativeButton(android.R.string.cancel, (dialog, which) -> finish())
                     .setCancelable(false)
                     .show();
         }

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadDetailsActivity.java
Patch:
@@ -74,7 +74,6 @@ public void onCreate(Bundle savedInstanceState) {
             ActionBar ab = getSupportActionBar();
 
             if (ab != null) {
-                ab.setTitle(R.string.nav_item_download);
                 ab.setDisplayHomeAsUpEnabled(true);
             }
 

File: app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java
Patch:
@@ -288,7 +288,7 @@ protected void onPostExecute(ArrayList<String> logs) {
                 mAdapter.setLogs(logs);
             }
             handler.removeCallbacks(mRunnable);//It loaded so fast that no need to show progress
-            if (mProgressDialog.isShowing()){
+            if (mProgressDialog.isShowing()) {
                 mProgressDialog.dismiss();
             }
         }

File: app/src/main/java/org/meowcat/edxposed/manager/util/InstallApkUtil.java
Patch:
@@ -89,7 +89,9 @@ protected Integer doInBackground(Void... params) {
                 String path = "/data/local/tmp/";
                 String fileName = new File(info.localFilename).getName();
                 Shell.su("cat \"" + info.localFilename + "\">" + path + fileName).exec();
-                returnCode = Shell.su("pm install -r -f \"" + path + fileName + "\"").exec().getCode();
+                Shell.Result result = Shell.su("pm install -r -f \"" + path + fileName + "\"").exec();
+                returnCode = result.getCode();
+                output = result.getOut();
                 //noinspection ResultOfMethodCallIgnored
                 new File(path + fileName).delete();
             } catch (IllegalStateException e) {

File: app/src/main/java/org/meowcat/edxposed/manager/LogsActivity.java
Patch:
@@ -93,7 +93,6 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
             public void onTabSelected(TabLayout.Tab tab) {
                 allLog = tab.getPosition() != 0;
                 reloadErrorLog();
-                scrollDown();
             }
 
             @Override
@@ -323,6 +322,7 @@ void setLogs(ArrayList<String> logs) {
             this.logs.clear();
             this.logs.addAll(logs);
             notifyDataSetChanged();
+            mListView.scrollToPosition(getItemCount() - 1);
         }
 
         void setEmpty() {

File: app/src/main/java/org/meowcat/edxposed/manager/util/InstallApkUtil.java
Patch:
@@ -16,6 +16,7 @@
 
 import com.topjohnwu.superuser.Shell;
 
+import org.meowcat.edxposed.manager.BuildConfig;
 import org.meowcat.edxposed.manager.R;
 import org.meowcat.edxposed.manager.XposedApp;
 
@@ -58,7 +59,7 @@ static void installApkNormally(Context context, String localFilename) {
         installIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         Uri uri;
         if (Build.VERSION.SDK_INT >= 24) {
-            uri = FileProvider.getUriForFile(context, "moe.guo.edxpmanager.fileprovider", new File(localFilename));
+            uri = FileProvider.getUriForFile(context, BuildConfig.APPLICATION_ID + ".fileprovider", new File(localFilename));
             installIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
         } else {
             uri = Uri.fromFile(new File(localFilename));

File: app/src/main/java/org/meowcat/edxposed/manager/BlackListActivity.java
Patch:
@@ -64,7 +64,7 @@ public boolean onQueryTextChange(String newText) {
     @Override
     public boolean onCreateOptionsMenu(@NonNull Menu menu) {
         getMenuInflater().inflate(R.menu.menu_app_list, menu);
-        mSearchView = (SearchView) menu.findItem(R.id.app_search).getActionView();
+        mSearchView = (SearchView) menu.findItem(R.id.menu_search).getActionView();
         mSearchView.setOnQueryTextListener(mSearchListener);
         return super.onCreateOptionsMenu(menu);
     }

File: app/src/main/java/org/meowcat/edxposed/manager/DownloadActivity.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.SharedPreferences;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/core/SandHookRouter.java
Patch:
@@ -4,14 +4,14 @@
 import com.elderdrivers.riru.edxp.proxy.BaseRouter;
 import com.elderdrivers.riru.edxp.sandhook.config.SandHookEdxpConfig;
 import com.elderdrivers.riru.edxp.sandhook.config.SandHookProvider;
-import com.elderdrivers.riru.edxp.sandhook.dexmaker.DynamicBridge;
 import com.elderdrivers.riru.edxp.sandhook.entry.AppBootstrapHookInfo;
 import com.elderdrivers.riru.edxp.sandhook.entry.SysBootstrapHookInfo;
 import com.elderdrivers.riru.edxp.sandhook.entry.SysInnerHookInfo;
 import com.elderdrivers.riru.edxp.sandhook.entry.WorkAroundHookInfo;
 import com.elderdrivers.riru.edxp.sandhook.hooker.SystemMainHooker;
 import com.elderdrivers.riru.edxp.util.Utils;
 import com.swift.sandhook.xposedcompat.XposedCompat;
+import com.swift.sandhook.xposedcompat.methodgen.SandHookXposedBridge;
 
 import de.robv.android.xposed.XposedBridge;
 
@@ -54,7 +54,7 @@ public void startWorkAroundHook() {
     }
 
     public void onEnterChildProcess() {
-        DynamicBridge.onForkPost();
+        SandHookXposedBridge.onForkPost();
         //enable compile in child process
         //SandHook.enableCompiler(!XposedInit.startsSystemServer);
     }

File: edxp-sandhook/src/main/java/com/swift/sandhook/xposedcompat/methodgen/HookerDexMakerNew.java
Patch:
@@ -172,7 +172,9 @@ private HookWrapper.HookEntity doMake(String className, String dexName) throws E
 
         ClassLoader loader;
         if (TextUtils.isEmpty(mDexDirPath)) {
-            throw new IllegalArgumentException("dexDirPath should not be empty!!!");
+            byte[] dexBytes = mDexMaker.generate();
+            loader = new InMemoryDexClassLoader(ByteBuffer.wrap(dexBytes), mAppClassLoader);
+            return loadHookerClass(loader, className);
         }
         // Create the dex file and load it.
         try {

File: xposed-bridge/src/main/java/com/elderdrivers/riru/edxp/hook/HookProvider.java
Patch:
@@ -28,4 +28,6 @@ public interface HookProvider {
 
     void setNativeFlag(Member hookMethod, boolean isNative);
 
+    boolean methodHooked(Member target);
+
 }

File: edxp-sandhook/src/main/java/com/swift/sandhook/xposedcompat/XposedCompat.java
Patch:
@@ -5,8 +5,8 @@
 import android.text.TextUtils;
 
 import com.elderdrivers.riru.edxp.config.ConfigManager;
-import com.swift.sandhook.SandHook;
 import com.elderdrivers.riru.edxp.util.ComposeClassLoader;
+import com.swift.sandhook.wrapper.HookWrapper;
 import com.swift.sandhook.xposedcompat.methodgen.SandHookXposedBridge;
 import com.swift.sandhook.xposedcompat.utils.ApplicationUtils;
 import com.swift.sandhook.xposedcompat.utils.FileUtils;
@@ -38,7 +38,7 @@ public static void addHookers(ClassLoader classLoader, Class[] hookers) {
             return;
         for (Class hooker : hookers) {
             try {
-                SandHook.addHookClass(classLoader, hooker);
+                HookWrapper.addHookClass(classLoader, hooker);
             } catch (Throwable throwable) {
             }
         }

File: edxp-sandhook/src/main/java/com/swift/sandhook/xposedcompat/hookstub/HookStubManager.java
Patch:
@@ -5,7 +5,7 @@
 import com.swift.sandhook.SandHook;
 import com.swift.sandhook.SandHookMethodResolver;
 import com.swift.sandhook.utils.ParamWrapper;
-import com.swift.sandhook.wrapper.BackupMethodStubs;
+import com.swift.sandhook.wrapper.StubMethodsFactory;
 import com.swift.sandhook.xposedcompat.XposedCompat;
 import com.swift.sandhook.xposedcompat.utils.DexLog;
 
@@ -167,13 +167,13 @@ private static synchronized StubMethodsInfo getStubMethodPair(boolean is64Bit, i
         try {
             if (is64Bit) {
                 Method hook = MethodHookerStubs64.class.getDeclaredMethod(getHookMethodName(curUseStubIndex), pars);
-                Method backup = hasStubBackup ? MethodHookerStubs64.class.getDeclaredMethod(getBackupMethodName(curUseStubIndex), pars) : BackupMethodStubs.getStubMethod();
+                Method backup = hasStubBackup ? MethodHookerStubs64.class.getDeclaredMethod(getBackupMethodName(curUseStubIndex), pars) : StubMethodsFactory.getStubMethod();
                 if (hook == null || backup == null)
                     return null;
                 return new StubMethodsInfo(stubArgs, curUseStubIndex, hook, backup);
             } else {
                 Method hook = MethodHookerStubs32.class.getDeclaredMethod(getHookMethodName(curUseStubIndex), pars);
-                Method backup = hasStubBackup ? MethodHookerStubs32.class.getDeclaredMethod(getBackupMethodName(curUseStubIndex), pars) : BackupMethodStubs.getStubMethod();
+                Method backup = hasStubBackup ? MethodHookerStubs32.class.getDeclaredMethod(getBackupMethodName(curUseStubIndex), pars) : StubMethodsFactory.getStubMethod();
                 if (hook == null || backup == null)
                     return null;
                 return new StubMethodsInfo(stubArgs, curUseStubIndex, hook, backup);

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -93,9 +93,6 @@ public static void main(String[] args) {
 	public static volatile ClassLoader dummyClassLoader = null;
 
 	public static void initXResources() {
-	    if (!EdXpConfigGlobal.getConfig().isResourcesHookEnabled()) {
-	        return;
-        }
         if (dummyClassLoader != null) {
         	return;
 		}

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/core/Yahfa.java
Patch:
@@ -15,4 +15,6 @@ public class Yahfa {
     public static native void init(int SDK_version);
 
     public static native void setMethodNonCompilable(Member member);
+
+    public static native boolean setNativeFlag(Member member, boolean isNative);
 }

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/util/ClassUtils.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.os.Build;
 
+import java.lang.reflect.Constructor;
 import java.lang.reflect.Member;
 import java.lang.reflect.Modifier;
 
@@ -37,7 +38,7 @@ public static boolean isInitialized(Class clazz) {
     }
 
     public static boolean shouldDelayHook(Member hookMethod) {
-        if (hookMethod == null) {
+        if (hookMethod == null || hookMethod instanceof Constructor) {
             return false;
         }
         Class declaringClass = hookMethod.getDeclaringClass();

File: xposed-bridge/src/main/java/com/elderdrivers/riru/edxp/hook/HookProvider.java
Patch:
@@ -25,4 +25,7 @@ public interface HookProvider {
     boolean initXResourcesNative();
 
     boolean removeFinalFlagNative(Class clazz);
+
+    void setNativeFlag(Member hookMethod, boolean isNative);
+
 }

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/config/WhaleEdxpConfig.java
Patch:
@@ -3,5 +3,5 @@
 import com.elderdrivers.riru.edxp.config.BaseEdxpConfig;
 
 public class WhaleEdxpConfig extends BaseEdxpConfig {
-    
+
 }

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/core/WhaleEdxpImpl.java
Patch:
@@ -7,6 +7,7 @@
 import com.elderdrivers.riru.edxp.core.BaseEdxpImpl;
 import com.elderdrivers.riru.edxp.core.EdxpImpl;
 import com.elderdrivers.riru.edxp.core.Main;
+import com.elderdrivers.riru.edxp.core.Proxy;
 import com.elderdrivers.riru.edxp.core.Yahfa;
 import com.elderdrivers.riru.edxp.core.yahfa.HookMethodResolver;
 import com.elderdrivers.riru.edxp.proxy.Router;
@@ -39,4 +40,5 @@ public void init() {
 
         setInitialized();
     }
+
 }

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/config/YahfaHookProvider.java
Patch:
@@ -4,13 +4,14 @@
 import com.elderdrivers.riru.edxp.config.BaseHookProvider;
 import com.elderdrivers.riru.edxp.core.ResourcesHook;
 import com.elderdrivers.riru.edxp.core.Yahfa;
-import com.elderdrivers.riru.edxp.yahfa.dexmaker.DexMakerUtils;
 import com.elderdrivers.riru.edxp.yahfa.dexmaker.DynamicBridge;
 
 import java.lang.reflect.Member;
 
 import de.robv.android.xposed.XposedBridge;
 
+import static com.elderdrivers.riru.edxp.util.ClassUtils.shouldDelayHook;
+
 public class YahfaHookProvider extends BaseHookProvider {
 
     @Override
@@ -25,7 +26,7 @@ public Object invokeOriginalMethod(Member method, long methodId, Object thisObje
 
     @Override
     public Member findMethodNative(Member hookMethod) {
-        return DexMakerUtils.findMethodNative(hookMethod);
+        return shouldDelayHook(hookMethod) ? null : hookMethod;
     }
 
     @Override

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/art/ClassLinker.java
Patch:
@@ -4,13 +4,13 @@
 
 import java.lang.reflect.Member;
 
-import de.robv.android.xposed.XposedBridge;
+import de.robv.android.xposed.PendingHooks;
 
 public class ClassLinker implements KeepAll {
 
     public static native void setEntryPointsToInterpreter(Member method);
 
     public static void onPostFixupStaticTrampolines(Class clazz) {
-        XposedBridge.hookPendingMethod(clazz);
+        PendingHooks.hookPendingMethod(clazz);
     }
 }

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/hooker/SystemMainHooker.java
Patch:
@@ -3,7 +3,7 @@
 import android.app.ActivityThread;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp._hooker.impl.OneplusWorkaround;
+import com.elderdrivers.riru.edxp._hooker.impl.SystemMain;
 import com.swift.sandhook.SandHook;
 import com.swift.sandhook.annotation.HookClass;
 import com.swift.sandhook.annotation.HookMethod;
@@ -30,7 +30,7 @@ public class SystemMainHooker implements KeepMembers {
 
     @HookMethod("systemMain")
     public static ActivityThread hook() throws Throwable {
-        final XC_MethodHook methodHook = new OneplusWorkaround();
+        final XC_MethodHook methodHook = new SystemMain();
         final XC_MethodHook.MethodHookParam param = new XC_MethodHook.MethodHookParam();
         param.thisObject = null;
         param.args = new Object[]{};

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/proxy/BaseRouter.java
Patch:
@@ -124,7 +124,8 @@ public void startBootstrapHook(boolean isSystem) {
     public void startSystemServerHook() {
         ClassLoader classLoader = BaseRouter.class.getClassLoader();
         if (useXposedApi) {
-            XposedHelpers.findAndHookMethod(StartBootstrapServicesHooker.className, classLoader,
+            XposedHelpers.findAndHookMethod(StartBootstrapServicesHooker.className,
+                    SystemMainHooker.systemServerCL,
                     StartBootstrapServicesHooker.methodName, new StartBootstrapServices());
         } else {
             HookMain.doHookDefault(

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/_hooker/HandleBindAppHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.sandhook.entry.hooker;
+package com.elderdrivers.riru.edxp.sandhook._hooker;
 
 import android.app.ActivityThread;
 import android.app.LoadedApk;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/_hooker/LoadedApkConstructorHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.sandhook.entry.hooker;
+package com.elderdrivers.riru.edxp.sandhook._hooker;
 
 import android.app.ActivityThread;
 import android.app.AndroidAppHelper;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/_hooker/OnePlusWorkAroundHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.sandhook.entry.hooker;
+package com.elderdrivers.riru.edxp.sandhook._hooker;
 
 import com.elderdrivers.riru.common.KeepMembers;
 import com.elderdrivers.riru.edxp.Main;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/_hooker/StartBootstrapServicesHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.sandhook.entry.hooker;
+package com.elderdrivers.riru.edxp.sandhook._hooker;
 
 import android.os.Build;
 
@@ -7,7 +7,6 @@
 import com.swift.sandhook.SandHook;
 import com.swift.sandhook.annotation.HookMethod;
 import com.swift.sandhook.annotation.HookMethodBackup;
-import com.swift.sandhook.annotation.HookMode;
 import com.swift.sandhook.annotation.HookReflectClass;
 import com.swift.sandhook.annotation.SkipParamCheck;
 import com.swift.sandhook.annotation.ThisObject;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/_hooker/SystemMainHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.sandhook.entry.hooker;
+package com.elderdrivers.riru.edxp.sandhook._hooker;
 
 import android.app.ActivityThread;
 

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/core/HookMain.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.elderdrivers.riru.edxp.util.Utils;
 import com.elderdrivers.riru.edxp.Main;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.OnePlusWorkAroundHooker;
 
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Method;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/Router.java
Patch:
@@ -12,7 +12,7 @@
 import com.elderdrivers.riru.edxp.sandhook.entry.bootstrap.SysBootstrapHookInfo;
 import com.elderdrivers.riru.edxp.sandhook.entry.bootstrap.SysInnerHookInfo;
 import com.elderdrivers.riru.edxp.sandhook.entry.bootstrap.WorkAroundHookInfo;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.SystemMainHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.SystemMainHooker;
 import com.elderdrivers.riru.edxp.util.Utils;
 import com.swift.sandhook.xposedcompat.XposedCompat;
 

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/bootstrap/AppBootstrapHookInfo.java
Patch:
@@ -1,9 +1,9 @@
 package com.elderdrivers.riru.edxp.sandhook.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.HandleBindAppHooker;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.LoadedApkConstructorHooker;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.HandleBindAppHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.LoadedApkConstructorHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.OnePlusWorkAroundHooker;
 
 public class AppBootstrapHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/bootstrap/SysInnerHookInfo.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.sandhook.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.StartBootstrapServicesHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.StartBootstrapServicesHooker;
 
 public class SysInnerHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/bootstrap/WorkAroundHookInfo.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.sandhook.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.sandhook.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.sandhook._hooker.OnePlusWorkAroundHooker;
 
 public class WorkAroundHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/_hooker/HandleBindAppHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.whale.entry.hooker;
+package com.elderdrivers.riru.edxp.whale._hooker;
 
 import android.app.ActivityThread;
 import android.app.LoadedApk;

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/_hooker/LoadedApkConstructorHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.whale.entry.hooker;
+package com.elderdrivers.riru.edxp.whale._hooker;
 
 import android.app.ActivityThread;
 import android.app.AndroidAppHelper;

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/_hooker/OnePlusWorkAroundHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.whale.entry.hooker;
+package com.elderdrivers.riru.edxp.whale._hooker;
 
 import com.elderdrivers.riru.common.KeepMembers;
 import com.elderdrivers.riru.edxp.Main;

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/_hooker/StartBootstrapServicesHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.whale.entry.hooker;
+package com.elderdrivers.riru.edxp.whale._hooker;
 
 import android.os.Build;
 

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/_hooker/SystemMainHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.whale.entry.hooker;
+package com.elderdrivers.riru.edxp.whale._hooker;
 
 import android.app.ActivityThread;
 

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/core/HookMain.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.whale.core;
 
 import com.elderdrivers.riru.edxp.Main;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.OnePlusWorkAroundHooker;
 import com.elderdrivers.riru.edxp.util.Utils;
 
 import java.lang.reflect.Constructor;

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/entry/Router.java
Patch:
@@ -12,7 +12,7 @@
 import com.elderdrivers.riru.edxp.whale.entry.bootstrap.SysBootstrapHookInfo;
 import com.elderdrivers.riru.edxp.whale.entry.bootstrap.SysInnerHookInfo;
 import com.elderdrivers.riru.edxp.whale.entry.bootstrap.WorkAroundHookInfo;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.SystemMainHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.SystemMainHooker;
 
 import java.util.concurrent.atomic.AtomicBoolean;
 

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/entry/bootstrap/AppBootstrapHookInfo.java
Patch:
@@ -1,9 +1,9 @@
 package com.elderdrivers.riru.edxp.whale.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.HandleBindAppHooker;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.LoadedApkConstructorHooker;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.HandleBindAppHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.LoadedApkConstructorHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.OnePlusWorkAroundHooker;
 
 public class AppBootstrapHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/entry/bootstrap/SysInnerHookInfo.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.whale.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.StartBootstrapServicesHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.StartBootstrapServicesHooker;
 
 public class SysInnerHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/entry/bootstrap/WorkAroundHookInfo.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.whale.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.whale.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.whale._hooker.OnePlusWorkAroundHooker;
 
 public class WorkAroundHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/_hooker/HandleBindAppHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.yahfa._hooker;
 
 import android.app.ActivityThread;
 import android.app.LoadedApk;

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/_hooker/LoadedApkConstructorHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.yahfa._hooker;
 
 import android.app.ActivityThread;
 import android.app.AndroidAppHelper;

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/_hooker/OnePlusWorkAroundHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.yahfa._hooker;
 
 import com.elderdrivers.riru.common.KeepMembers;
 import com.elderdrivers.riru.edxp.Main;

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/_hooker/StartBootstrapServicesHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.yahfa._hooker;
 
 import android.os.Build;
 

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/_hooker/SystemMainHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.yahfa._hooker;
 
 import android.app.ActivityThread;
 

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/core/HookMain.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.yahfa.core;
 
 import com.elderdrivers.riru.edxp.Main;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.OnePlusWorkAroundHooker;
 import com.elderdrivers.riru.edxp.util.Utils;
 
 import java.lang.reflect.Constructor;

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/entry/Router.java
Patch:
@@ -13,7 +13,7 @@
 import com.elderdrivers.riru.edxp.yahfa.entry.bootstrap.SysBootstrapHookInfo;
 import com.elderdrivers.riru.edxp.yahfa.entry.bootstrap.SysInnerHookInfo;
 import com.elderdrivers.riru.edxp.yahfa.entry.bootstrap.WorkAroundHookInfo;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.SystemMainHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.SystemMainHooker;
 
 import java.util.concurrent.atomic.AtomicBoolean;
 

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/entry/bootstrap/AppBootstrapHookInfo.java
Patch:
@@ -1,9 +1,9 @@
 package com.elderdrivers.riru.edxp.yahfa.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.HandleBindAppHooker;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.LoadedApkConstructorHooker;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.HandleBindAppHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.LoadedApkConstructorHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.OnePlusWorkAroundHooker;
 
 public class AppBootstrapHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/entry/bootstrap/SysInnerHookInfo.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.yahfa.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.StartBootstrapServicesHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.StartBootstrapServicesHooker;
 
 public class SysInnerHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/entry/bootstrap/WorkAroundHookInfo.java
Patch:
@@ -1,7 +1,7 @@
 package com.elderdrivers.riru.edxp.yahfa.entry.bootstrap;
 
 import com.elderdrivers.riru.common.KeepMembers;
-import com.elderdrivers.riru.edxp.yahfa.entry.hooker.OnePlusWorkAroundHooker;
+import com.elderdrivers.riru.edxp.yahfa._hooker.OnePlusWorkAroundHooker;
 
 public class WorkAroundHookInfo implements KeepMembers {
     public static String[] hookItemNames = {

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/hooker/XposedBlackListHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.hooker;
 
 import android.annotation.TargetApi;
 import android.app.Activity;

File: edxp-common/src/main/java/com/elderdrivers/riru/edxp/hooker/XposedInstallerHooker.java
Patch:
@@ -1,4 +1,4 @@
-package com.elderdrivers.riru.edxp.yahfa.entry.hooker;
+package com.elderdrivers.riru.edxp.hooker;
 
 import com.elderdrivers.riru.edxp.util.Utils;
 

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/hooker/LoadedApkConstructorHooker.java
Patch:
@@ -8,6 +8,7 @@
 import android.util.Log;
 
 import com.elderdrivers.riru.common.KeepMembers;
+import com.elderdrivers.riru.edxp.hooker.XposedBlackListHooker;
 import com.elderdrivers.riru.edxp.sandhook.entry.Router;
 import com.swift.sandhook.SandHook;
 import com.swift.sandhook.annotation.HookClass;

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/entry/hooker/LoadedApkConstructorHooker.java
Patch:
@@ -8,6 +8,7 @@
 import android.util.Log;
 
 import com.elderdrivers.riru.common.KeepMembers;
+import com.elderdrivers.riru.edxp.hooker.XposedBlackListHooker;
 import com.elderdrivers.riru.edxp.whale.entry.Router;
 
 import de.robv.android.xposed.XposedBridge;

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/entry/hooker/LoadedApkConstructorHooker.java
Patch:
@@ -8,6 +8,7 @@
 import android.util.Log;
 
 import com.elderdrivers.riru.common.KeepMembers;
+import com.elderdrivers.riru.edxp.hooker.XposedBlackListHooker;
 import com.elderdrivers.riru.edxp.yahfa.entry.Router;
 
 import de.robv.android.xposed.XposedBridge;

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -3,7 +3,6 @@
 import android.app.ActivityThread;
 import android.app.AndroidAppHelper;
 import android.content.pm.ApplicationInfo;
-import android.content.pm.PackageParser;
 import android.content.res.Resources;
 import android.content.res.ResourcesImpl;
 import android.content.res.TypedArray;

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/Router.java
Patch:
@@ -33,9 +33,10 @@ public class Router {
     static boolean useSandHook = false;
 
     public static void prepare(boolean isSystem) {
+        startWorkAroundHook();
+        XposedBridge.initXResources();
         // this flag is needed when loadModules
         startsSystemServer = isSystem;
-//        InstallerChooser.setup();
     }
 
     public static void checkHookState(String appDataDir) {

File: edxp-whale/src/main/java/com/elderdrivers/riru/edxp/whale/entry/Router.java
Patch:
@@ -27,9 +27,10 @@ public class Router {
 
 
     public static void prepare(boolean isSystem) {
+        startWorkAroundHook();
+        XposedBridge.initXResources();
         // this flag is needed when loadModules
         XposedInit.startsSystemServer = isSystem;
-//        InstallerChooser.setup();
     }
 
     public static void checkHookState(String appDataDir) {

File: edxp-yahfa/src/main/java/com/elderdrivers/riru/edxp/yahfa/entry/Router.java
Patch:
@@ -29,9 +29,10 @@ public class Router {
 
 
     public static void prepare(boolean isSystem) {
+        startWorkAroundHook();
+        XposedBridge.initXResources();
         // this flag is needed when loadModules
         XposedInit.startsSystemServer = isSystem;
-//        InstallerChooser.setup();
     }
 
     public static void checkHookState(String appDataDir) {

File: hiddenapi-stubs/src/main/java/xposed/dummy/XTypedArraySuperClass.java
Patch:
@@ -13,8 +13,8 @@
  */
 public class XTypedArraySuperClass extends TypedArray {
 	/** Dummy, will never be called (objects are transferred to this class only). */
-	protected XTypedArraySuperClass(Resources resources, int[] data, int[] indices, int len) {
-		super(null, null, null, 0);
+	protected XTypedArraySuperClass(Resources resources) {
+		super(resources);
 		throw new UnsupportedOperationException();
 	}
 }

File: edxp-sandhook/src/main/java/com/swift/sandhook/xposedcompat/methodgen/SandHookXposedBridge.java
Patch:
@@ -64,7 +64,7 @@ public static synchronized void hookMethod(Member hookMethod, XposedBridge.Addit
             long timeStart = System.currentTimeMillis();
             HookMethodEntity stub = null;
             if (XposedCompat.useInternalStub) {
-                stub = HookStubManager.getHookMethodEntity(hookMethod);
+                stub = HookStubManager.getHookMethodEntity(hookMethod, additionalHookInfo);
             }
             if (stub != null) {
                 SandHook.hook(new HookWrapper.HookEntity(hookMethod, stub.hook, stub.backup, false));

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -14,10 +14,10 @@
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 import java.util.Arrays;
+import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
-import java.util.concurrent.ConcurrentHashMap;
 
 import de.robv.android.xposed.XC_MethodHook.MethodHookParam;
 import de.robv.android.xposed.callbacks.XC_InitPackageResources;
@@ -60,7 +60,7 @@ public final class XposedBridge {
 	private static final Object[] EMPTY_ARRAY = new Object[0];
 
 	// built-in handlers
-	public static final Map<Member, CopyOnWriteSortedSet<XC_MethodHook>> sHookedMethodCallbacks = new ConcurrentHashMap<>();
+	public static final Map<Member, CopyOnWriteSortedSet<XC_MethodHook>> sHookedMethodCallbacks = new HashMap<>();
 	public static final CopyOnWriteSortedSet<XC_LoadPackage> sLoadedPackageCallbacks = new CopyOnWriteSortedSet<>();
 	/*package*/ static final CopyOnWriteSortedSet<XC_InitPackageResources> sInitPackageResourcesCallbacks = new CopyOnWriteSortedSet<>();
 

File: xposed-bridge/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -14,10 +14,10 @@
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 import java.util.Arrays;
-import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
 import java.util.Set;
+import java.util.concurrent.ConcurrentHashMap;
 
 import de.robv.android.xposed.XC_MethodHook.MethodHookParam;
 import de.robv.android.xposed.callbacks.XC_InitPackageResources;
@@ -60,7 +60,7 @@ public final class XposedBridge {
 	private static final Object[] EMPTY_ARRAY = new Object[0];
 
 	// built-in handlers
-	public static final Map<Member, CopyOnWriteSortedSet<XC_MethodHook>> sHookedMethodCallbacks = new HashMap<>();
+	public static final Map<Member, CopyOnWriteSortedSet<XC_MethodHook>> sHookedMethodCallbacks = new ConcurrentHashMap<>();
 	public static final CopyOnWriteSortedSet<XC_LoadPackage> sLoadedPackageCallbacks = new CopyOnWriteSortedSet<>();
 	/*package*/ static final CopyOnWriteSortedSet<XC_InitPackageResources> sInitPackageResourcesCallbacks = new CopyOnWriteSortedSet<>();
 

File: edxp-sandhook/src/main/java/com/elderdrivers/riru/edxp/sandhook/entry/Router.java
Patch:
@@ -61,6 +61,7 @@ public static void installBootstrapHooks(boolean isSystem) {
             }
             Router.startBootstrapHook(isSystem);
             XposedInit.initForZygote(isSystem);
+            SandHookConfig.compiler = !isSystem;
         } catch (Throwable t) {
             Utils.logE("error during Xposed initialization", t);
             XposedBridge.disableHooks = true;

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/Main.java
Patch:
@@ -10,6 +10,7 @@
 import com.elderdrivers.riru.xposed.proxy.yahfa.NormalProxy;
 import com.elderdrivers.riru.xposed.util.Utils;
 
+import java.lang.reflect.Member;
 import java.lang.reflect.Method;
 import java.util.Arrays;
 
@@ -19,7 +20,6 @@ public class Main implements KeepAll {
     public static String appDataDir = "";
     public static String niceName = "";
     public static String appProcessName = "";
-    public static long closedFdTable = 0;
     private static String forkAndSpecializePramsStr = "";
     private static String forkSystemServerPramsStr = "";
 
@@ -105,6 +105,8 @@ public static void forkSystemServerPost(int pid) {
 
     public static native boolean backupAndHookNative(Object target, Method hook, Method backup);
 
+    public static native void setMethodNonCompilable(Object member);
+
     public static native void ensureMethodCached(Method hook, Method backup);
 
     // JNI.ToReflectedMethod() could return either Method or Constructor

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/proxy/yahfa/NormalProxy.java
Patch:
@@ -28,9 +28,10 @@ public static void forkAndSpecializePre(int uid, int gid, int[] gids, int debugF
         }
     }
 
-    public static void forkAndSpecializePost(int pid, String appDataDir) {
+    public static void forkAndSpecializePost(int pid, String appDataDir, String niceName) {
         // TODO consider processes without forkAndSpecializePost called
         Main.appDataDir = appDataDir;
+        Main.niceName = niceName;
         Router.prepare(false);
         Router.reopenFilesIfNeeded();
         Router.onEnterChildProcess();
@@ -58,6 +59,7 @@ public static void forkSystemServerPre(int uid, int gid, int[] gids, int debugFl
     public static void forkSystemServerPost(int pid) {
         // in system_server process
         Main.appDataDir = getDataPathPrefix() + "android";
+        Main.niceName = "system_server";
         Router.prepare(true);
         Router.reopenFilesIfNeeded();
         Router.onEnterChildProcess();

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/Main.java
Patch:
@@ -18,6 +18,7 @@ public class Main implements KeepAll {
 
     public static String appDataDir = "";
     public static String appProcessName = "";
+    public static long closedFdTable = 0;
     private static String forkAndSpecializePramsStr = "";
     private static String forkSystemServerPramsStr = "";
 
@@ -120,9 +121,9 @@ public static void forkSystemServerPost(int pid) {
 
     // prevent from fatal error caused by holding not whitelisted file descriptors when forking zygote
     // https://github.com/rovo89/Xposed/commit/b3ba245ad04cd485699fb1d2ebde7117e58214ff
-    public static native void closeFilesBeforeForkNative();
+    public static native long closeFilesBeforeForkNative();
 
-    public static native void reopenFilesAfterForkNative();
+    public static native void reopenFilesAfterForkNative(long fdTable);
 
     public static native void deoptMethodNative(Object object);
 

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/core/HookMain.java
Patch:
@@ -111,6 +111,7 @@ public static void backupAndHook(Object target, Method hook, Method backup) {
         if (backup != null) {
             HookMethodResolver.resolveMethod(hook, backup);
         }
+        Runtime.getRuntime().gc();
         if (!backupAndHookNative(target, hook, backup)) {
             throw new RuntimeException("Failed to hook " + target + " with " + hook);
         }

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/Main.java
Patch:
@@ -116,6 +116,8 @@ public static void forkSystemServerPost(int pid) {
 
     public static native boolean isDynamicModulesEnabled();
 
+    public static native boolean isAppNeedHook(String appDataDir);
+
     // prevent from fatal error caused by holding not whitelisted file descriptors when forking zygote
     // https://github.com/rovo89/Xposed/commit/b3ba245ad04cd485699fb1d2ebde7117e58214ff
     public static native void closeFilesBeforeForkNative();

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/util/PrebuiltMethodsDeopter.java
Patch:
@@ -30,6 +30,7 @@ public static void deoptMethods(String where, ClassLoader cl) {
     }
 
     public static void deoptBootMethods() {
+        // todo check if has been done before
         deoptMethods(KEY_BOOT_IMAGE, null);
     }
 

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/proxy/yahfa/NormalProxy.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.elderdrivers.riru.xposed.Main;
 import com.elderdrivers.riru.xposed.config.ConfigManager;
-import com.elderdrivers.riru.xposed.dexmaker.DynamicBridge;
 import com.elderdrivers.riru.xposed.entry.Router;
 import com.elderdrivers.riru.xposed.util.PrebuiltMethodsDeopter;
 
@@ -19,6 +18,7 @@ public static void forkAndSpecializePre(int uid, int gid, int[] gids, int debugF
         Main.appDataDir = appDataDir;
         ConfigManager.setDynamicModulesMode(isDynamicModulesMode);
         PrebuiltMethodsDeopter.deoptBootMethods(); // do it once for secondary zygote
+        // call this to ensure the flag is set to false ASAP
         Router.prepare(false);
         // install bootstrap hooks for secondary zygote
         Router.installBootstrapHooks(false);
@@ -31,7 +31,6 @@ public static void forkAndSpecializePost(int pid, String appDataDir) {
         // TODO consider processes without forkAndSpecializePost called
         Main.reopenFilesAfterForkNative();
         Router.onEnterChildProcess();
-        DynamicBridge.onForkPost();
         // load modules for each app process on its forked if dynamic modules mode is on
         Router.loadModulesSafely();
     }
@@ -41,6 +40,7 @@ public static void forkSystemServerPre(int uid, int gid, int[] gids, int debugFl
         final boolean isDynamicModulesMode = Main.isDynamicModulesEnabled();
         Main.appDataDir = getDataPathPrefix() + "android";
         ConfigManager.setDynamicModulesMode(isDynamicModulesMode);
+        // set startsSystemServer flag used when loadModules
         Router.prepare(true);
         PrebuiltMethodsDeopter.deoptBootMethods(); // do it once for main zygote
         // install bootstrap hooks for main zygote as early as possible

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/entry/Router.java
Patch:
@@ -13,11 +13,11 @@
 public class Router {
 
     public static void onProcessForked(boolean isSystem) {
-        // Initialize the Xposed framework and modules
+        // Initialize the Xposed framework
         try {
             XposedInit.initForZygote(isSystem);
         } catch (Throwable t) {
-            Utils.logE("Errors during Xposed initialization", t);
+            Utils.logE("error during Xposed initialization", t);
             XposedBridge.disableHooks = true;
         }
     }

File: Bridge/src/main/java/de/robv/android/xposed/XposedInit.java
Patch:
@@ -40,7 +40,7 @@ public final class XposedInit {
     public static final String INSTALLER_PACKAGE_NAME = "com.solohsu.android.edxp.manager";
     public static final String INSTALLER_LEGACY_PACKAGE_NAME = "de.robv.android.xposed.installer";
     @SuppressLint("SdCardPath")
-    private static final String BASE_DIR = Build.VERSION.SDK_INT >= 24
+    public static final String INSTALLER_DATA_BASE_DIR = Build.VERSION.SDK_INT >= 24
             ? "/data/user_de/0/" + INSTALLER_PACKAGE_NAME + "/"
             : "/data/data/" + INSTALLER_PACKAGE_NAME + "/";
     private static final String INSTANT_RUN_CLASS = "com.android.tools.fd.runtime.BootstrapApplication";
@@ -89,15 +89,15 @@ private static boolean needsToCloseFilesForFork() {
     }
 
     /**
-     * Try to load all modules defined in <code>BASE_DIR/conf/modules.list</code>
+     * Try to load all modules defined in <code>INSTALLER_DATA_BASE_DIR/conf/modules.list</code>
      */
     private static volatile AtomicBoolean modulesLoaded = new AtomicBoolean(false);
 
     public static void loadModules() throws IOException {
         if (!modulesLoaded.compareAndSet(false, true)) {
             return;
         }
-        final String filename = BASE_DIR + "conf/modules.list";
+        final String filename = INSTALLER_DATA_BASE_DIR + "conf/modules.list";
         BaseService service = SELinuxHelper.getAppDataFileService();
         if (!service.checkFileExists(filename)) {
             Log.e(TAG, "Cannot load any modules because " + filename + " was not found");

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/dexmaker/DynamicBridge.java
Patch:
@@ -16,7 +16,7 @@
 
 import de.robv.android.xposed.XposedBridge;
 
-import static com.elderdrivers.riru.xposed.dexmaker.HookerDexMaker.SHOULD_USE_IN_MEMORY_DEX;
+import static com.elderdrivers.riru.xposed.dexmaker.DexMakerUtils.shouldUseInMemoryHook;
 import static com.elderdrivers.riru.xposed.util.FileUtils.getDataPathPrefix;
 
 public final class DynamicBridge {
@@ -50,7 +50,7 @@ public static synchronized void hookMethod(Member hookMethod, XposedBridge.Addit
         DexLog.d("start to generate class for: " + hookMethod);
         try {
             // for Android Oreo and later use InMemoryClassLoader
-            if (!SHOULD_USE_IN_MEMORY_DEX) {
+            if (!shouldUseInMemoryHook()) {
                 // under Android Oreo, using DexClassLoader
                 if (dexPathInited.compareAndSet(false, true)) {
                     // delete previous compiled dex to prevent potential crashing

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/entry/hooker/XposedBlackListHooker.java
Patch:
@@ -18,13 +18,13 @@
 import de.robv.android.xposed.XSharedPreferences;
 import de.robv.android.xposed.XposedBridge;
 
+import static com.elderdrivers.riru.xposed.util.FileUtils.IS_USING_PROTECTED_STORAGE;
 import static de.robv.android.xposed.XposedHelpers.findAndHookMethod;
 import static de.robv.android.xposed.XposedInit.INSTALLER_PACKAGE_NAME;
 
 public class XposedBlackListHooker {
 
     public static final String BLACK_LIST_PACKAGE_NAME = "com.flarejune.xposedblacklist";
-    private static final boolean IS_USING_PROTECTED_STORAGE = Build.VERSION.SDK_INT >= Build.VERSION_CODES.N;
     private static final String BLACK_LIST_PREF_NAME = "list";
     private static final String PREF_KEY_BLACK_LIST = "blackList";
     public static final String PREF_FILE_PATH = (IS_USING_PROTECTED_STORAGE ? "/data/user_de/0/" : "/data/data")

File: Bridge/src/main/java/de/robv/android/xposed/XposedBridge.java
Patch:
@@ -6,6 +6,7 @@
 import com.elderdrivers.riru.xposed.core.HookMain;
 import com.elderdrivers.riru.xposed.dexmaker.DynamicBridge;
 import com.elderdrivers.riru.xposed.dexmaker.MethodInfo;
+import com.elderdrivers.riru.xposed.util.MethodHookUtils;
 
 import java.io.File;
 import java.io.IOException;
@@ -154,6 +155,7 @@ public synchronized static void log(Throwable t) {
 	 * @see #hookAllConstructors
 	 */
 	public static XC_MethodHook.Unhook hookMethod(Member hookMethod, XC_MethodHook callback) {
+        hookMethod = MethodHookUtils.preCheck(hookMethod);
 		if (!(hookMethod instanceof Method) && !(hookMethod instanceof Constructor<?>)) {
 			throw new IllegalArgumentException("Only methods and constructors can be hooked: " + hookMethod.toString());
 		} else if (hookMethod.getDeclaringClass().isInterface()) {

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/entry/hooker/HandleBindAppHooker.java
Patch:
@@ -66,8 +66,9 @@ public static void hook(Object thiz, Object bindData) {
             }
         } catch (Throwable t) {
             logE("error when hooking bindApp", t);
+        } finally {
+            backup(thiz, bindData);
         }
-        backup(thiz, bindData);
     }
 
     public static void backup(Object thiz, Object bindData) {

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/entry/hooker/LoadedApkConstructorHooker.java
Patch:
@@ -34,7 +34,8 @@ public static void hook(Object thiz, ActivityThread activityThread,
                             boolean includeCode, boolean registerPackage) {
 
         if (XposedBridge.disableHooks) {
-            backup(thiz, activityThread, aInfo, compatInfo, baseLoader, securityViolation, includeCode, registerPackage);
+            backup(thiz, activityThread, aInfo, compatInfo, baseLoader, securityViolation,
+                    includeCode, registerPackage);
             return;
         }
 

File: Bridge/src/main/java/com/elderdrivers/riru/xposed/core/HookMain.java
Patch:
@@ -82,6 +82,7 @@ public static void hook(Object target, Method hook) {
     }
 
     public static void backupAndHook(Object target, Method hook, Method backup) {
+        Utils.logD(String.format("target=%s, hook=%s, backup=%s", target, hook, backup));
         if (target == null) {
             throw new IllegalArgumentException("null target method");
         }
@@ -108,7 +109,7 @@ public static void backupAndHook(Object target, Method hook, Method backup) {
         }
     }
 
-    private static Object findMethod(Class cls, String methodName, String methodSig) {
+    public static Object findMethod(Class cls, String methodName, String methodSig) {
         if (cls == null) {
             throw new IllegalArgumentException("null class");
         }

