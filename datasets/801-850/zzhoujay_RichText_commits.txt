File: richtext/src/main/java/com/zzhoujay/richtext/ImageHolder.java
Patch:
@@ -116,11 +116,13 @@ public boolean isInvalidateSize() {
     private DrawableBorderHolder borderHolder;
     private Drawable placeHolder, errorImage;
     private String prefixCode;
+    private int configHashcode;
 
     public ImageHolder(String source, int position, RichTextConfig config, TextView textView) {
         this.source = source;
         this.position = position;
         this.isGif = false;
+        this.configHashcode = config.key();
 
         prefixCode = config.imageDownloader == null ? "" : config.imageDownloader.getClass().getName();
 
@@ -143,7 +145,7 @@ public ImageHolder(String source, int position, RichTextConfig config, TextView
     }
 
     private void generateKey() {
-        this.key = MD5.generate(prefixCode + source);
+        this.key = MD5.generate(prefixCode + configHashcode + source);
     }
 
     public void setSource(String source) {

File: richtext/src/main/java/com/zzhoujay/richtext/cache/BitmapPool.java
Patch:
@@ -19,7 +19,7 @@ public class BitmapPool {
 
     private static final String RICH_TEXT_DIR_NAME = "_rt";
     private static final int MAX_SIZE_LOCAL_CACHE_SIZE = 1024 * 1024;
-    private static final int MAX_TEMP_LOCAL_CACHE_SIZE = 1024 * 1024 * 100;
+    private static final int MAX_TEMP_LOCAL_CACHE_SIZE = 1024 * 1024 * 500;
 
 
     private static final int bitmapCacheSize = (int) (Runtime.getRuntime().maxMemory() / 4);

File: richtext/src/main/java/com/zzhoujay/richtext/drawable/DrawableWrapper.java
Patch:
@@ -66,7 +66,7 @@ public void draw(@NonNull Canvas canvas) {
     }
 
     private void drawBorder(Canvas canvas) {
-        if (sizeHolder != null && sizeHolder.borderHolder != null && sizeHolder.border != null) {
+        if (sizeHolder != null && sizeHolder.borderHolder != null && sizeHolder.borderHolder.isShowBorder() && sizeHolder.border != null) {
             float radius = sizeHolder.borderHolder.getRadius();
             canvas.drawRoundRect(sizeHolder.border, radius, radius, paint);
         }

File: richtext/src/main/java/com/zzhoujay/richtext/drawable/GifDrawable.java
Patch:
@@ -97,6 +97,7 @@ public void start(TextView textView) {
     public void stop() {
         running = false;
         this.textView = null;
+        this.movie = null;
     }
 
     @Override

File: richtext/src/main/java/com/zzhoujay/richtext/callback/SimpleImageFixCallback.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 2017/2/21.
+ * SimpleImageFixCallback
  */
 
 public abstract class SimpleImageFixCallback implements ImageFixCallback {

File: richtext/src/main/java/com/zzhoujay/richtext/drawable/GifDrawable.java
Patch:
@@ -15,7 +15,7 @@
 
 /**
  * Created by zhou on 2017/2/21.
- * 支持播放Gif图片的自定义Drawable
+ * Support for custom Drawable playing Gif images
  */
 
 public class GifDrawable extends Drawable {

File: richtext/src/main/java/com/zzhoujay/richtext/exceptions/BitmapCacheLoadFailureException.java
Patch:
@@ -5,8 +5,10 @@
 
 /**
  * Created by zhou on 2017/4/4.
+ * BitmapCacheLoadFailureException
  */
 
+@SuppressWarnings("unused")
 public class BitmapCacheLoadFailureException extends Exception {
 
     private static final String MESSAGE = "Bitmap 缓存加载失败";

File: richtext/src/main/java/com/zzhoujay/richtext/exceptions/ImageWrapperMultiSourceException.java
Patch:
@@ -2,6 +2,7 @@
 
 /**
  * Created by zhou on 2017/4/4.
+ * ImageWrapperMultiSourceException
  */
 
 public class ImageWrapperMultiSourceException extends IllegalArgumentException {
@@ -12,6 +13,7 @@ public ImageWrapperMultiSourceException() {
         super(MESSAGE);
     }
 
+    @SuppressWarnings("unused")
     public ImageWrapperMultiSourceException(Throwable cause) {
         super(MESSAGE, cause);
     }

File: richtext/src/main/java/com/zzhoujay/richtext/ext/Base64.java
Patch:
@@ -22,7 +22,7 @@
 /**
  * Base64解码,引用至:https://github.com/litesuits/android-common
  */
-@SuppressWarnings({"unused", "WeakerAccess"})
+@SuppressWarnings({"unused", "WeakerAccess", "SameParameterValue"})
 public class Base64 {
     /**
      * Default values for encoder/decoder flags.
@@ -67,6 +67,7 @@ public class Base64 {
     //  shared code
     //  --------------------------------------------------------
 
+    @SuppressWarnings("SameParameterValue")
     private static abstract class Coder {
         public byte[] output;
         public int op;

File: richtext/src/main/java/com/zzhoujay/richtext/ext/Debug.java
Patch:
@@ -4,14 +4,14 @@
 
 /**
  * Created by zhou on 2017/4/4.
+ * Debug Utils
  */
 
 public class Debug {
 
-    public static void e(Exception e) {
+    public static void e(Throwable e) {
         if (RichText.debugMode) {
             e.printStackTrace();
         }
     }
-
 }

File: richtext/src/main/java/com/zzhoujay/richtext/ext/HtmlTagHandler.java
Patch:
@@ -4,7 +4,6 @@
 import android.text.Editable;
 import android.text.Html;
 import android.text.Spanned;
-import android.util.Log;
 import android.widget.TextView;
 
 import com.zzhoujay.markdown.style.CodeSpan;
@@ -52,6 +51,7 @@ public void handleTag(boolean opening, String tag, Editable output, XMLReader xm
         }
     }
 
+    @SuppressWarnings("unused")
     private void startTag(String tag, Editable out, XMLReader reader) {
         switch (tag.toLowerCase()) {
             case "ul":
@@ -67,6 +67,7 @@ private void startTag(String tag, Editable out, XMLReader reader) {
         }
     }
 
+    @SuppressWarnings("unused")
     private void reallyHandler(int start, int end, String tag, Editable out, XMLReader reader) {
         switch (tag.toLowerCase()) {
             case "code":

File: richtext/src/main/java/com/zzhoujay/richtext/ext/ImageKit.java
Patch:
@@ -8,6 +8,7 @@
 
 /**
  * Created by zhou on 2017/3/25.
+ * ImageKit
  */
 
 public class ImageKit {
@@ -65,8 +66,8 @@ private static String bytesToHexString(byte[] src) {
         if (src == null || src.length <= 0) {
             return null;
         }
-        for (int i = 0; i < src.length; i++) {
-            int v = src[i] & 0xFF;
+        for (byte aSrc : src) {
+            int v = aSrc & 0xFF;
             String hv = Integer.toHexString(v);
             if (hv.length() < 2) {
                 stringBuilder.append(0);

File: richtext/src/main/java/com/zzhoujay/richtext/ext/MD5.java
Patch:
@@ -6,6 +6,7 @@
 
 /**
  * Created by zhou on 2016/12/5.
+ * MD5 Utils
  */
 
 public class MD5 {

File: richtext/src/main/java/com/zzhoujay/richtext/ext/TextKit.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 2017/2/21.
+ * TextKit
  */
 
 public class TextKit {

File: richtext/src/main/java/com/zzhoujay/richtext/ig/Cancelable.java
Patch:
@@ -6,6 +6,9 @@
  */
 public interface Cancelable {
 
+    /**
+     * 尝试取消（不一定能成功取消）
+     */
     void cancel();
 
 }

File: richtext/src/main/java/com/zzhoujay/richtext/ig/SourceDecode.java
Patch:
@@ -64,7 +64,7 @@ boolean isGif(String s, BitmapFactory.Options options) {
         }
     };
 
-    static SourceDecode<InputStream> REMOTE_SOURCE_DECODE = new SourceDecode<InputStream>() {
+    static SourceDecode<InputStream> INPUT_STREAM_DECODE = new SourceDecode<InputStream>() {
 
         private static final int MARK_POSITION = 1024 * 1024;
 

File: richtext/src/main/java/com/zzhoujay/richtext/parser/CachedSpannedParser.java
Patch:
@@ -136,6 +136,7 @@ private boolean isCached(SpannableStringBuilder ssb) {
         return cs != null && cs.length > 0;
     }
 
+    @SuppressWarnings("unused")
     private void clearCachedMark(SpannableStringBuilder ssb) {
         Cached[] cs = ssb.getSpans(0, ssb.length(), Cached.class);
         if (cs != null && cs.length > 0) {

File: richtext/src/main/java/com/zzhoujay/richtext/RichTextPool.java
Patch:
@@ -14,8 +14,10 @@
 
 /**
  * Created by zhou on 2017/3/25.
+ * RichTextPool
  */
 
+@SuppressWarnings("WeakerAccess")
 class RichTextPool {
 
     private static final int MAX_RICH_TEXT_SIZE = 50;

File: richtext/src/main/java/com/zzhoujay/richtext/callback/Callback.java
Patch:
@@ -2,6 +2,7 @@
 
 /**
  * Created by zhou on 2017/3/11.
+ * 解析完成回调接口
  */
 
 public interface Callback {

File: richtext/src/main/java/com/zzhoujay/richtext/callback/OnImageClickListener.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 16-5-28.
+ * OnImageClickListener
  */
 public interface OnImageClickListener {
     /**

File: richtext/src/main/java/com/zzhoujay/richtext/callback/OnUrlClickListener.java
Patch:
@@ -2,6 +2,7 @@
 
 /**
  * Created by zhou on 16-5-28.
+ * OnUrlClickListener
  */
 public interface OnUrlClickListener {
 

File: richtext/src/main/java/com/zzhoujay/richtext/callback/SimpleImageFixCallback.java
Patch:
@@ -19,7 +19,7 @@ public void onLoading(ImageHolder holder) {
     }
 
     @Override
-    public void onSizeReady(ImageHolder holder, int width, int height) {
+    public void onSizeReady(ImageHolder holder, int imageWidth, int imageHeight, ImageHolder.SizeHolder sizeHolder) {
 
     }
 

File: richtext/src/main/java/com/zzhoujay/richtext/ig/CallCancelableWrapper.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 2017/2/21.
+ * CallCancelableWrapper
  */
 class CallCancelableWrapper implements Cancelable {
     private Call call;

File: richtext/src/main/java/com/zzhoujay/richtext/ig/Cancelable.java
Patch:
@@ -2,8 +2,8 @@
 
 /**
  * Created by zhou on 2016/12/11.
+ * 可取消的任务（标记）
  */
-
 interface Cancelable {
 
     void cancel();

File: richtext/src/main/java/com/zzhoujay/richtext/ig/FutureCancelableWrapper.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 2017/2/21.
+ * FutureCancelableWrapper
  */
 class FutureCancelableWrapper implements Cancelable {
 

File: richtext/src/main/java/com/zzhoujay/richtext/ig/LocalDiskCachedImageLoader.java
Patch:
@@ -11,6 +11,7 @@
 
 /**
  * Created by zhou on 2017/3/25.
+ * 本地缓存图片加载器
  */
 class LocalDiskCachedImageLoader extends AbstractImageLoader implements Runnable {
 
@@ -30,7 +31,7 @@ public void run() {
             if (bitmapWrapper == null) {
                 onFailure(new BitmapCacheLoadFailureException());
             } else {
-                border = bitmapWrapper.getRect();
+                sizeCacheHolder = bitmapWrapper.getSizeCacheHolder();
                 onResourceReady(ImageWrapper.createAsBitmap(bitmapWrapper.getBitmap()));
             }
         }

File: richtext/src/main/java/com/zzhoujay/richtext/ig/SourceDecode.java
Patch:
@@ -14,6 +14,7 @@
 
 /**
  * Created by zhou on 2017/2/21.
+ * 图片解析工具
  */
 abstract class SourceDecode<T> {
 
@@ -122,8 +123,8 @@ boolean isGif(InputStream inputStream, BitmapFactory.Options options) {
     };
 
     ImageWrapper decode(ImageHolder holder, T t, BitmapFactory.Options options) {
-        if (holder.isAutoPlay() && isGif(t, options)) {
-            holder.setImageType(ImageHolder.ImageType.GIF);
+        if (holder.isAutoPlay() && (holder.isGif() || isGif(t, options))) {
+            holder.setIsGif(true);
             return decodeAsGif(t, options);
         } else {
             return decodeAsBitmap(t, options);

File: richtext/src/main/java/com/zzhoujay/richtext/parser/CachedSpannedParser.java
Patch:
@@ -20,6 +20,7 @@
 
 /**
  * Created by zhou on 2016/12/5.
+ * CachedSpannedParser
  */
 
 public class CachedSpannedParser {

File: richtext/src/main/java/com/zzhoujay/richtext/parser/Html2SpannedParser.java
Patch:
@@ -5,6 +5,7 @@
 
 /**
  * Created by zhou on 16-7-27.
+ * Html2SpannedParser
  */
 public class Html2SpannedParser implements SpannedParser {
 

File: richtext/src/main/java/com/zzhoujay/richtext/parser/ImageGetterWrapper.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 2016/12/3.
+ * ImageGetterWrapper
  */
 
 public interface ImageGetterWrapper {

File: richtext/src/main/java/com/zzhoujay/richtext/parser/Markdown2SpannedParser.java
Patch:
@@ -7,6 +7,7 @@
 
 /**
  * Created by zhou on 16-7-27.
+ * Markdown2SpannedParser
  */
 public class Markdown2SpannedParser implements SpannedParser {
 

File: richtext/src/main/java/com/zzhoujay/richtext/parser/SpannedParser.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 16-7-27.
+ * SpannedParser
  */
 public interface SpannedParser {
 

File: richtext/src/main/java/com/zzhoujay/richtext/spans/Clickable.java
Patch:
@@ -6,6 +6,7 @@
  * Created by zhou on 2016/11/17.
  * Clickable
  */
+@SuppressWarnings("WeakerAccess")
 public interface Clickable {
 
     void onClick(View widget);

File: richtext/src/main/java/com/zzhoujay/richtext/spans/ClickableImageSpan.java
Patch:
@@ -19,7 +19,6 @@
 public class ClickableImageSpan extends ImageSpan implements LongClickableSpan {
 
     private float x;
-    private int top;
     private final int position;
     private final List<String> imageUrls;
     private final OnImageLongClickListener onImageLongClickListener;
@@ -46,7 +45,6 @@ public ClickableImageSpan(Drawable drawable, List<String> imageUrls, int positio
     public void draw(Canvas canvas, CharSequence text, int start, int end, float x, int top, int y, int bottom, Paint paint) {
         super.draw(canvas, text, start, end, x, top, y, bottom, paint);
         this.x = x;
-        this.top = top;
     }
 
     public boolean clicked(int position) {

File: richtext/src/main/java/com/zzhoujay/richtext/spans/LongClickable.java
Patch:
@@ -6,6 +6,7 @@
  * Created by zhou on 16-8-4.
  * LongClickable
  */
+@SuppressWarnings("WeakerAccess")
 public interface LongClickable {
     /**
      * 长按点击时间

File: richtext/src/main/java/com/zzhoujay/richtext/spans/LongClickableSpan.java
Patch:
@@ -2,6 +2,7 @@
 
 /**
  * Created by zhou on 16-8-4.
+ * LongClickableSpan
  */
 public interface LongClickableSpan extends Clickable, LongClickable {
 }

File: richtext/src/main/java/com/zzhoujay/richtext/spans/LongClickableURLSpan.java
Patch:
@@ -21,6 +21,7 @@ public class LongClickableURLSpan extends URLSpan implements LongClickableSpan {
     private final OnUrlLongClickListener onUrlLongClickListener;
     private final LinkHolder linkHolder;
 
+    @SuppressWarnings("unused")
     public LongClickableURLSpan(LinkHolder linkHolder) {
         this(linkHolder, null, null);
     }

File: app/src/main/java/zhou/demo/MainActivity.java
Patch:
@@ -31,7 +31,7 @@ public class MainActivity extends AppCompatActivity {
     private static final String IMAGE = "<img title=\"\" src=\"http://g.hiphotos.baidu.com/image/pic/item/241f95cad1c8a7866f726fe06309c93d71cf5087.jpg\"  style=\"cursor: pointer;\"><br><br>" +
             "<img src=\"http://img.ugirls.com/uploads/cooperate/baidu/20160519menghuli.jpg\" width=\"1080\" height=\"1620\"/><a href=\"http://www.baidu.com\">baidu</a>" +
             "hello asdkjfgsduk <a href=\"http://www.jd.com\">jd</a>";
-    private static final String IMAGE1 = "<h1>RichText</h1><p>Android平台下的富文本解析器</p><img title=\"\" src=\"http://image.tianjimedia.com/uploadImages/2015/129/56/J63MI042Z4P8.jpg\"  style=\"cursor: pointer;\"><br><br>" +
+    private static final String IMAGE1 = "<h1>RichText</h1><p>Android平台下的富文本解析器</p><img title=\"\" src=\"https://www.huayubx.com/data/cms/image/20170302/1488421057515013918.jpg\"  style=\"cursor: pointer;\"><br><br>" +
             "<h3>点击菜单查看更多Demo</h3><img src=\"http://ww2.sinaimg.cn/bmiddle/813a1fc7jw1ee4xpejq4lj20g00o0gnu.jpg\" /><p><a href=\"http://www.baidu.com\">baidu</a>" +
             "hello asdkjfgsduk <a href=\"http://www.jd.com\">jd</a></p>";
 

File: app/src/main/java/zhou/demo/MainActivity.java
Patch:
@@ -31,7 +31,7 @@ public class MainActivity extends AppCompatActivity {
     private static final String IMAGE = "<img title=\"\" src=\"http://g.hiphotos.baidu.com/image/pic/item/241f95cad1c8a7866f726fe06309c93d71cf5087.jpg\"  style=\"cursor: pointer;\"><br><br>" +
             "<img src=\"http://img.ugirls.com/uploads/cooperate/baidu/20160519menghuli.jpg\" width=\"1080\" height=\"1620\"/><a href=\"http://www.baidu.com\">baidu</a>" +
             "hello asdkjfgsduk <a href=\"http://www.jd.com\">jd</a>";
-    private static final String IMAGE1 = "<h1>RichText</h1><p>Android平台下的富文本解析器</p><img title=\"\" src=\"http://image.tianjimedia.com/uploadImages/2015/129/56/J63MI042Z4P8.jpg\"  style=\"cursor: pointer;\"><br><br>" +
+    private static final String IMAGE1 = "<h1>RichText</h1><p>Android平台下的富文本解析器</p><img title=\"\" src=\"https://www.huayubx.com/data/cms/image/20170302/1488421057515013918.jpg\"  style=\"cursor: pointer;\"><br><br>" +
             "<h3>点击菜单查看更多Demo</h3><img src=\"http://ww2.sinaimg.cn/bmiddle/813a1fc7jw1ee4xpejq4lj20g00o0gnu.jpg\" /><p><a href=\"http://www.baidu.com\">baidu</a>" +
             "hello asdkjfgsduk <a href=\"http://www.jd.com\">jd</a></p>";
 

File: glideimagegetter/src/main/java/com/zzhoujay/glideimagegetter/ImageTarget.java
Patch:
@@ -53,7 +53,7 @@ public void onLoadStarted(Drawable placeholder) {
             drawableWrapper.setBounds(holder.getCachedBound());
         } else {
             if (!config.autoFix && config.imageFixCallback != null) {
-                config.imageFixCallback.onFix(holder);
+                config.imageFixCallback.onLoading(holder);
             }
             int width;
             int height = 0;
@@ -92,7 +92,7 @@ public void onLoadFailed(Exception e, Drawable errorDrawable) {
             drawableWrapper.setBounds(holder.getCachedBound());
         } else {
             if (!config.autoFix && config.imageFixCallback != null) {
-                config.imageFixCallback.onFix(holder);
+                config.imageFixCallback.onFailure(holder, e);
             }
             int width;
             int height = 0;
@@ -120,7 +120,7 @@ public void getSize(SizeReadyCallback cb) {
         int maxWidth = getRealWidth(), maxHeight = Integer.MAX_VALUE;
         if (config.imageFixCallback != null) {
             holder.setImageState(ImageHolder.ImageState.SIZE_READY);
-            config.imageFixCallback.onFix(holder);
+            config.imageFixCallback.onSizeReady(holder, 0, 0);
             if (holder.getMaxWidth() > 0 && holder.getMaxHeight() > 0) {
                 maxWidth = holder.getMaxWidth();
                 maxHeight = holder.getMaxHeight();

File: glideimagegetter/src/main/java/com/zzhoujay/glideimagegetter/ImageTargetBitmap.java
Patch:
@@ -39,15 +39,14 @@ public void onResourceReady(Bitmap resource, GlideAnimation<? super Bitmap> glid
         }
         TextView textView = textViewWeakReference.get();
         holder.setImageState(ImageHolder.ImageState.READY);
-        holder.setImageWidth(resource.getWidth());
-        holder.setImageHeight(resource.getHeight());
+        holder.setSize(resource.getWidth(), resource.getHeight());
         Drawable drawable = new BitmapDrawable(textView.getContext().getResources(), resource);
         drawableWrapper.setDrawable(drawable);
         if (holder.getCachedBound() != null) {
             drawableWrapper.setBounds(holder.getCachedBound());
         } else {
             if (!config.autoFix && config.imageFixCallback != null) {
-                config.imageFixCallback.onFix(holder);
+                config.imageFixCallback.onImageReady(holder, resource.getWidth(), resource.getHeight());
             }
             if (config.autoFix || holder.isAutoFix() || !holder.isInvalidateSize()) {
                 int width = getRealWidth();

File: glideimagegetter/src/main/java/com/zzhoujay/glideimagegetter/ImageTargetGif.java
Patch:
@@ -53,14 +53,13 @@ public void onResourceReady(GifDrawable resource, GlideAnimation<? super GifDraw
         holder.setImageState(ImageHolder.ImageState.READY);
         gifDrawableSoftReference = new SoftReference<>(resource);
         Bitmap first = resource.getFirstFrame();
-        holder.setImageWidth(first.getWidth());
-        holder.setImageHeight(first.getHeight());
+        holder.setSize(first.getWidth(), first.getHeight());
         drawableWrapper.setDrawable(resource);
         if (holder.getCachedBound() != null) {
             drawableWrapper.setBounds(holder.getCachedBound());
         } else {
             if (!config.autoFix && config.imageFixCallback != null) {
-                config.imageFixCallback.onFix(holder);
+                config.imageFixCallback.onImageReady(holder, first.getWidth(), first.getHeight());
             }
             if (config.autoFix || holder.isAutoFix() || !holder.isInvalidateSize()) {
                 int width = getRealWidth();

File: richtext/src/main/java/com/zzhoujay/richtext/RichText.java
Patch:
@@ -327,7 +327,7 @@ public Drawable getDrawable(String source) {
         }
         holder.setImageState(ImageHolder.ImageState.INIT);
         if (!config.autoFix && config.imageFixCallback != null) {
-            config.imageFixCallback.onFix(holder);
+            config.imageFixCallback.onInit(holder);
             if (!holder.isShow()) {
                 return null;
             }

File: richtext/src/main/java/com/zzhoujay/richtext/ig/Base64ImageLoader.java
Patch:
@@ -32,7 +32,7 @@ public void run() {
             int[] inDimens = getDimensions(src, options);
             options.inSampleSize = onSizeReady(inDimens[0], inDimens[1]);
             options.inPreferredConfig = Bitmap.Config.RGB_565;
-            onResourceReady(sourceDecode.decode(src, options));
+            onResourceReady(sourceDecode.decode(holder, src, options));
         } catch (Exception e) {
             onFailure(e);
         }

File: richtext/src/main/java/com/zzhoujay/richtext/ig/CallbackImageLoader.java
Patch:
@@ -37,7 +37,7 @@ public void onResponse(Call call, Response response) throws IOException {
             int[] inDimens = getDimensions(stream, options);
             options.inSampleSize = onSizeReady(inDimens[0], inDimens[1]);
             options.inPreferredConfig = Bitmap.Config.RGB_565;
-            onResourceReady(sourceDecode.decode(stream, options));
+            onResourceReady(sourceDecode.decode(holder, stream, options));
             stream.close();
             inputStream.close();
         } catch (Exception e) {

File: richtext/src/main/java/com/zzhoujay/richtext/ig/ImageLoader.java
Patch:
@@ -1,12 +1,12 @@
 package com.zzhoujay.richtext.ig;
 
-import android.graphics.Bitmap;
+import com.zzhoujay.richtext.callback.Recyclable;
 
 /**
  * Created by zhou on 2016/12/9.
  * 图片加载器
  */
-interface ImageLoader {
+interface ImageLoader extends Recyclable {
 
     /**
      * 加载中，设置placeHolder图片
@@ -34,6 +34,6 @@ interface ImageLoader {
      *
      * @param bitmap Bitmap
      */
-    void onResourceReady(Bitmap bitmap);
+    void onResourceReady(ImageWrapper imageWrapper);
 
 }

File: richtext/src/main/java/com/zzhoujay/richtext/ig/LocalFileImageLoader.java
Patch:
@@ -14,6 +14,7 @@
  */
 
 class LocalFileImageLoader extends AbstractImageLoader<String> implements Runnable {
+
     LocalFileImageLoader(ImageHolder holder, RichTextConfig config, TextView textView, DrawableWrapper drawableWrapper, ImageLoadNotify iln) {
         super(holder, config, textView, drawableWrapper, iln, SourceDecode.LOCAL_FILE_SOURCE_DECODE);
     }
@@ -26,7 +27,7 @@ public void run() {
             int[] inDimens = getDimensions(holder.getSource(), options);
             options.inSampleSize = onSizeReady(inDimens[0], inDimens[1]);
             options.inPreferredConfig = Bitmap.Config.RGB_565;
-            onResourceReady(sourceDecode.decode(holder.getSource(), options));
+            onResourceReady(sourceDecode.decode(holder, holder.getSource(), options));
         } catch (Exception e) {
             onFailure(e);
         }

File: richtext/src/main/java/com/zzhoujay/richtext/ig/Cancelable.java
Patch:
@@ -4,7 +4,7 @@
  * Created by zhou on 2016/12/11.
  */
 
-public interface Cancelable {
+interface Cancelable {
 
     void cancel();
 

File: glideimagegetter/src/main/java/com/zzhoujay/glideimagegetter/GlideImageGetter.java
Patch:
@@ -24,6 +24,7 @@
  * Created by zhou on 2016/12/3.
  * 使用Glide作为图片加载器
  */
+@SuppressWarnings("unused")
 public class GlideImageGetter implements ImageGetter, ImageLoadNotify {
 
     private static final int TARGET_TAG = R.id.zhou_glide_image_tag_id;

File: richtext/src/main/java/com/zzhoujay/richtext/ig/AbstractImageLoader.java
Patch:
@@ -54,7 +54,7 @@ public void onLoading() {
             }
             int width;
             int height = 0;
-            if (config.autoFix || holder.isAutoFix()) {
+            if (config.autoFix || holder.isAutoFix() || !holder.isInvalidateSize()) {
                 width = getRealWidth();
                 int ow = config.placeHolder.getBounds().width();
                 if (ow != 0) {
@@ -108,7 +108,7 @@ public void onFailure(Exception e) {
             }
             int width;
             int height = 0;
-            if (config.autoFix || holder.isAutoFix()) {
+            if (config.autoFix || holder.isAutoFix() || !holder.isInvalidateSize()) {
                 width = getRealWidth();
                 int ow = config.errorImage.getBounds().width();
                 if (ow != 0) {
@@ -152,7 +152,7 @@ public void onResourceReady(Bitmap bitmap) {
             if (!config.autoFix && config.imageFixCallback != null) {
                 config.imageFixCallback.onFix(holder);
             }
-            if (config.autoFix || holder.isAutoFix()) {
+            if (config.autoFix || holder.isAutoFix() || !holder.isInvalidateSize()) {
                 int width = getRealWidth();
                 int height = (int) ((float) bitmap.getHeight() * width / bitmap.getWidth());
                 drawableWrapper.setBounds(0, 0, width, height);

File: richtext/src/main/java/com/zzhoujay/richtext/RichText.java
Patch:
@@ -310,10 +310,11 @@ public Drawable getDrawable(String source) {
         ImageHolder holder;
         if (config.richType == RichType.MARKDOWN) {
             holder = new ImageHolder(source, imageHolderMap.size());
+            imageHolderMap.put(source, holder);
         } else {
             holder = imageHolderMap.get(source);
             if (holder == null) {
-                holder = new ImageHolder(source, 0);
+                holder = new ImageHolder(source, imageHolderMap.size());
                 imageHolderMap.put(source, holder);
             }
         }

File: richtext/src/main/java/com/zzhoujay/richtext/spans/ClickableImageSpan.java
Patch:
@@ -5,7 +5,6 @@
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 import android.text.style.ImageSpan;
-import android.util.Log;
 import android.view.View;
 
 import com.zzhoujay.richtext.callback.OnImageClickListener;
@@ -48,7 +47,6 @@ public void draw(Canvas canvas, CharSequence text, int start, int end, float x,
         super.draw(canvas, text, start, end, x, top, y, bottom, paint);
         this.x = x;
         this.top = top;
-        Log.i("RichText", "src:" + position + "x:" + x + ",top:" + top);
     }
 
     public boolean clicked(int position) {

File: app/src/main/java/zhou/demo/ListViewActivity.java
Patch:
@@ -8,11 +8,9 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
-import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.TextView;
 
-import com.bumptech.glide.Glide;
 import com.zzhoujay.richtext.ImageHolder;
 import com.zzhoujay.richtext.RichText;
 import com.zzhoujay.richtext.callback.ImageFixCallback;
@@ -112,7 +110,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                     @Override
                     public void onFix(ImageHolder holder, boolean imageReady) {
 
-                        if (holder.getImageType() != ImageHolder.GIF) {
+                        if (holder.getImageType() != ImageHolder.ImageType.GIF) {
                             holder.setAutoFix(true);
                         } else {
                             holder.setHeight(200 + position * 10);

File: richtext/src/main/java/com/zzhoujay/richtext/RichType.java
Patch:
@@ -6,6 +6,8 @@
  * Created by zhou on 16-7-27.
  * 富文本类型
  */
-@IntDef({RichText.TYPE_HTML, RichText.TYPE_MARKDOWN})
+@IntDef({RichType.HTML, RichType.MARKDOWN})
 public @interface RichType {
+    int HTML = 0;
+    int MARKDOWN = 1;
 }

File: richtext/src/main/java/com/zzhoujay/richtext/callback/ImageFixCallback.java
Patch:
@@ -4,6 +4,7 @@
 
 /**
  * Created by zhou on 16-5-28.
+ * ImageFixCallback
  */
 public interface ImageFixCallback {
     /**

File: richtext/src/main/java/com/zzhoujay/richtext/RichText.java
Patch:
@@ -366,8 +366,7 @@ public void onLoadFailed(Exception e, Drawable errorDrawable) {
     }
 
     private int getRealWidth() {
-        ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) textView.getLayoutParams();
-        return textView.getWidth() - textView.getPaddingRight() - textView.getPaddingLeft() - layoutParams.leftMargin - layoutParams.rightMargin;
+        return textView.getWidth() - textView.getPaddingRight() - textView.getPaddingLeft();
     }
 
 

