File: sample/src/main/java/cat/ereza/customactivityoncrash/sample/SampleCrashingApplication.java
Patch:
@@ -37,7 +37,7 @@ public void onCreate() {
                 //BackgroundMode.BACKGROUND_MODE_SHOW_CUSTOM: launch the error activity when the app is in background,
                 //BackgroundMode.BACKGROUND_MODE_CRASH: launch the default system error when the app is in background,
                 //BackgroundMode.BACKGROUND_MODE_SILENT: crash silently when the app is in background,
-                .backgroundMode(CaocConfig.BACKGROUND_MODE_SILENT)
+//                .backgroundMode(CaocConfig.BACKGROUND_MODE_SILENT)
                 //This disables the interception of crashes. Use it to disable CustomActivityOnCrash (for example, depending on your buildType).
 //                .enabled(false)
                 //This hides the "error details" button in the error activity, thus hiding the stack trace

File: sample/src/main/java/cat/ereza/customactivityoncrash/sample/SampleCrashingApplication.java
Patch:
@@ -19,8 +19,8 @@
 import android.app.Application;
 import android.util.Log;
 
-import cat.ereza.customactivityoncrash.config.CaocConfig;
 import cat.ereza.customactivityoncrash.CustomActivityOnCrash;
+import cat.ereza.customactivityoncrash.config.CaocConfig;
 
 public class SampleCrashingApplication extends Application {
 

File: library/src/main/java/cat/ereza/customactivityoncrash/config/CaocConfig.java
Patch:
@@ -23,13 +23,16 @@
 import android.support.annotation.Nullable;
 
 import java.io.Serializable;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
 import java.lang.reflect.Modifier;
 
 import cat.ereza.customactivityoncrash.CustomActivityOnCrash;
 
 public class CaocConfig implements Serializable {
 
     @IntDef({BACKGROUND_MODE_CRASH, BACKGROUND_MODE_SHOW_CUSTOM, BACKGROUND_MODE_SILENT})
+    @Retention(RetentionPolicy.SOURCE)
     private @interface BackgroundMode {
         //I hate empty blocks
     }

File: sample/src/main/java/cat/ereza/customactivityoncrash/sample/SampleCrashingApplication.java
Patch:
@@ -43,7 +43,7 @@ public void onCreate() {
 //                .showRestartButton(false)
                 //This makes the library track the activites visited by the user and their lifecycle calls.
                 //Use it if you want that info in the error details screen shown on the error activity.
-                .trackActivities(true)
+//                .trackActivities(true)
                 //This shows a different image on the error activity, instead of the default upside-down bug.
                 //You may use a drawable or a mipmap.
 //                .errorDrawable(R.mipmap.ic_launcher)

File: library/src/main/java/cat/ereza/customactivityoncrash/activity/DefaultErrorActivity.java
Patch:
@@ -49,21 +49,22 @@ protected void onCreate(Bundle savedInstanceState) {
         Button restartButton = (Button) findViewById(R.id.customactivityoncrash_error_activity_restart_button);
 
         final Class<? extends Activity> restartActivityClass = CustomActivityOnCrash.getRestartActivityClassFromIntent(getIntent());
+        final CustomActivityOnCrash.EventListener eventListener = CustomActivityOnCrash.getEventListenerFromIntent(getIntent());
 
         if (restartActivityClass != null) {
             restartButton.setText(R.string.customactivityoncrash_error_activity_restart_app);
             restartButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
                     Intent intent = new Intent(DefaultErrorActivity.this, restartActivityClass);
-                    CustomActivityOnCrash.restartApplicationWithIntent(DefaultErrorActivity.this, intent);
+                    CustomActivityOnCrash.restartApplicationWithIntent(DefaultErrorActivity.this, intent, eventListener);
                 }
             });
         } else {
             restartButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    CustomActivityOnCrash.closeApplication(DefaultErrorActivity.this);
+                    CustomActivityOnCrash.closeApplication(DefaultErrorActivity.this, eventListener);
                 }
             });
         }

File: library/src/main/java/cat/ereza/customactivityoncrash/activity/DefaultErrorActivity.java
Patch:
@@ -50,15 +50,14 @@ protected void onCreate(Bundle savedInstanceState) {
                 @Override
                 public void onClick(View v) {
                     Intent intent = new Intent(DefaultErrorActivity.this, restartActivityClass);
-                    finish();
-                    startActivity(intent);
+                    CustomActivityOnCrash.restartApplicationWithIntent(DefaultErrorActivity.this, intent);
                 }
             });
         } else {
             restartButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    finish();
+                    CustomActivityOnCrash.closeApplication(DefaultErrorActivity.this);
                 }
             });
         }

File: sample/src/main/java/cat/ereza/sample/customactivityoncrash/activity/CustomErrorActivity.java
Patch:
@@ -62,15 +62,14 @@ protected void onCreate(Bundle savedInstanceState) {
                 @Override
                 public void onClick(View v) {
                     Intent intent = new Intent(CustomErrorActivity.this, restartActivityClass);
-                    finish();
-                    startActivity(intent);
+                    CustomActivityOnCrash.restartApplicationWithIntent(CustomErrorActivity.this, intent);
                 }
             });
         } else {
             restartButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    finish();
+                    CustomActivityOnCrash.closeApplication(CustomErrorActivity.this);
                 }
             });
         }

File: library/src/main/java/cat/ereza/customactivityoncrash/CustomActivityOnCrash.java
Patch:
@@ -503,6 +503,7 @@ private static Class<? extends Activity> guessRestartActivityClass(Context conte
      * @param context A valid context. Must not be null.
      * @return A valid activity class, or null if no suitable one is found
      */
+    @SuppressWarnings("unchecked")
     private static Class<? extends Activity> getRestartActivityClassWithIntentFilter(Context context) {
         List<ResolveInfo> resolveInfos = context.getPackageManager().queryIntentActivities(
                 new Intent().setAction(INTENT_ACTION_RESTART_ACTIVITY),
@@ -528,6 +529,7 @@ private static Class<? extends Activity> getRestartActivityClassWithIntentFilter
      * @param context A valid context. Must not be null.
      * @return A valid activity class, or null if no suitable one is found
      */
+    @SuppressWarnings("unchecked")
     private static Class<? extends Activity> getLauncherActivity(Context context) {
         Intent intent = context.getPackageManager().getLaunchIntentForPackage(context.getPackageName());
         if (intent != null) {
@@ -572,6 +574,7 @@ private static Class<? extends Activity> guessErrorActivityClass(Context context
      * @param context A valid context. Must not be null.
      * @return A valid activity class, or null if no suitable one is found
      */
+    @SuppressWarnings("unchecked")
     private static Class<? extends Activity> getErrorActivityClassWithIntentFilter(Context context) {
         List<ResolveInfo> resolveInfos = context.getPackageManager().queryIntentActivities(
                 new Intent().setAction(INTENT_ACTION_ERROR_ACTIVITY),

File: sample/src/main/java/cat/ereza/sample/customactivityoncrash/SampleCrashingApplication.java
Patch:
@@ -34,7 +34,7 @@ public void onCreate() {
         CustomActivityOnCrash.setLaunchActivityEvenIfInBackground(false);
 
         //This sets the restart activity. If you don't do this, the "Restart app" button will change to "Close app".
-        CustomActivityOnCrash.setRestartActivityClass(MainActivity.class);
+//        CustomActivityOnCrash.setRestartActivityClass(MainActivity.class);
 
         //This hides the "error details" button, thus hiding the stack trace
 //        CustomActivityOnCrash.setShowErrorDetails(false);

File: sample/src/main/java/cat/ereza/sample/customactivityoncrash/activity/MainActivity.java
Patch:
@@ -22,6 +22,7 @@
 import android.view.View;
 import android.widget.Button;
 
+import cat.ereza.customactivityoncrash.CustomActivityOnCrash;
 import cat.ereza.sample.customactivityoncrash.R;
 
 public class MainActivity extends Activity {
@@ -70,5 +71,7 @@ protected Void doInBackground(Void... voids) {
                 }.execute();
             }
         });
+
+        CustomActivityOnCrash.install(this);
     }
 }

File: sample/src/main/java/cat/ereza/sample/customactivityoncrash/MainActivity.java
Patch:
@@ -63,7 +63,7 @@ protected Void doInBackground(Void... voids) {
                         } catch (InterruptedException e) {
                             //meh
                         }
-                        throw new RuntimeException("I AM ERROR! (a delayed one)");
+                        throw new RuntimeException("I am a not so cool exception, and I am delayed, so you can check if the app crashes when in background!)");
                     }
                 }.execute();
             }

File: sample/src/main/java/cat/ereza/sample/customactivityoncrash/MainActivity.java
Patch:
@@ -63,7 +63,7 @@ protected Void doInBackground(Void... voids) {
                         } catch (InterruptedException e) {
                             //meh
                         }
-                        throw new RuntimeException("I AM ERROR! (a delayed one)");
+                        throw new RuntimeException("I am a not so cool exception, and I am delayed, so you can check if the app crashes when in background!)");
                     }
                 }.execute();
             }

File: sample/src/main/java/cat/ereza/sample/customactivityoncrash/SampleCrashableApplication.java
Patch:
@@ -27,7 +27,7 @@ public void onCreate() {
         super.onCreate();
 
         //Install CustomActivityOnCrash
-        CustomActivityOnCrash.init(this, ErrorActivity.class, true);
+        CustomActivityOnCrash.init(this, true);
 
         //Now initialize your error handlers as normal, they will most likely keep a reference to the original exception handler
         //i.e., ACRA.init(this);

File: sample/src/main/java/cat/ereza/customactivityoncrash/sample/ErrorActivity.java
Patch:
@@ -19,7 +19,6 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.TextView;
@@ -33,7 +32,6 @@ public class ErrorActivity extends Activity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        Log.d(SampleCrashableApplication.TAG, "Entering ErrorActivity");
 
         setTitle(R.string.error_title);
         setContentView(R.layout.activity_error);
@@ -51,7 +49,6 @@ protected void onCreate(Bundle savedInstanceState) {
             public void onClick(View view) {
                 Intent intent = new Intent(ErrorActivity.this, MainActivity.class);
                 finish();
-                Log.d(SampleCrashableApplication.TAG, "Exiting ErrorActivity");
                 startActivity(intent);
             }
         });

File: sample/src/main/java/cat/ereza/customactivityoncrash/sample/SampleCrashableApplication.java
Patch:
@@ -22,8 +22,6 @@
 
 public class SampleCrashableApplication extends Application {
 
-    public final static String TAG = "SampleCrashableApp";
-
     @Override
     public void onCreate() {
         super.onCreate();

