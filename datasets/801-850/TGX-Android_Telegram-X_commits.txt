File: app/src/main/java/org/thunderdog/challegram/service/TGCallService.java
Patch:
@@ -661,7 +661,7 @@ public void onAccuracyChanged (Sensor sensor, int accuracy) {
   private static final @DrawableRes int CALL_ICON_RES = R.drawable.baseline_phone_24_white;
 
   private void showNotification () {
-    boolean needNotification = call != null && (call.isOutgoing || call.state.getConstructor() == TdApi.CallStateExchangingKeys.CONSTRUCTOR || call.state.getConstructor() == TdApi.CallStateReady.CONSTRUCTOR) && !TD.isFinished(call) && UI.getUiState() != UI.State.RESUMED;
+    boolean needNotification = call != null && (call.isOutgoing || call.state.getConstructor() == TdApi.CallStateExchangingKeys.CONSTRUCTOR || call.state.getConstructor() == TdApi.CallStateReady.CONSTRUCTOR) && !TD.isFinished(call);
 
     if (needNotification == (ongoingCallNotification != null)) {
       return;

File: app/src/main/java/org/thunderdog/challegram/data/FileComponent.java
Patch:
@@ -353,12 +353,12 @@ public void rebuildLayout () {
 
   public void buildLayout (int maxWidth) {
     lastMaxWidth = maxWidth;
-    if (waveform != null) {
-      waveform.layout(Math.min(Screen.dp(420f), Math.min(TGMessage.getEstimatedContentMaxWidth(), maxWidth) - Screen.dp(FileProgressComponent.DEFAULT_FILE_RADIUS) * 2 - getPreviewOffset() - (int) sizeWidth - Screen.dp(12f)));
-    }
     if (title != null || subtitle != null) {
       buildTitles(maxWidth - (getPreviewSize() + getPreviewOffset()));
     }
+    if (waveform != null) {
+      waveform.layout(Math.min(Screen.dp(420f), Math.min(TGMessage.getEstimatedContentMaxWidth(), maxWidth) - Screen.dp(FileProgressComponent.DEFAULT_FILE_RADIUS) * 2 - getPreviewOffset() - (int) sizeWidth - Screen.dp(12f)));
+    }
   }
 
   private void buildTitles (int maxWidth) {

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -5181,7 +5181,7 @@ public boolean onTouchEvent (MotionEvent event) {
           }
         };
         captionView.setPadding(Screen.dp(14f), Screen.dp(14f), Screen.dp(14f), Screen.dp(14f));
-        captionView.setTextColorId(ColorId.white);
+        captionView.setTextColorId(ColorId.white, true);
         captionView.setTextSize(Screen.dp(16f));
         captionView.setTextStyleProvider(TGMessage.getTextStyleProvider());
         captionView.setLinkColorId(ColorId.caption_textLink, ColorId.caption_textLinkPressHighlight);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageViewGroup.java
Patch:
@@ -30,6 +30,7 @@
 import androidx.annotation.Nullable;
 import androidx.recyclerview.widget.RecyclerView;
 
+import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.loader.gif.GifReceiver;
 import org.thunderdog.challegram.navigation.ViewController;
@@ -271,6 +272,7 @@ public void detach () {
   public void setMessage (TGMessage message) {
     messageView.setMessage(message);
     overlayView.setMessage(message);
+    videoPlayerView.setVisibility(TD.isSelfDestructTypeImmediately(message.getMessage()) ? GONE:  VISIBLE);
     requestVideo(message);
 
     if (getMeasuredHeight() != messageView.getCurrentHeight()) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -1065,7 +1065,7 @@ public boolean wouldReusePlayList (TdApi.Message fromMessage, boolean isReverse,
   }
 
   private boolean filterMedia (TdApi.Message message, int contentType) {
-    return !tdlib.messageSending(message) && contentType == message.content.getConstructor();
+    return !TD.isSelfDestructTypeImmediately(message) && !tdlib.messageSending(message) && contentType == message.content.getConstructor();
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/player/RoundVideoController.java
Patch:
@@ -318,7 +318,7 @@ public void onFileGenerationFinished (@NonNull TdApi.File file) {
 
   private boolean isRendered;
 
-  private static final boolean USE_SURFACE = false; // Build.VERSION.SDK_INT >= Build.VERSION_CODES.N
+  public static final boolean USE_SURFACE = false; // Build.VERSION.SDK_INT >= Build.VERSION_CODES.N
 
   private void preparePlayerIfNeeded () { // Prepare off-screen texture
     if (texturePrepared) {

File: app/src/main/java/org/thunderdog/challegram/player/RoundVideoRecorder.java
Patch:
@@ -152,7 +152,7 @@ public void openCamera () {
   private volatile boolean isSwitchingToNewCamera;
 
   public boolean canSwitchToNewCamera () {
-    return !isSwitchingToNewCamera && initied && eglSurface != null;
+    return !isSwitchingToNewCamera && initied; // && eglSurface != null;
   }
 
   public void switchToNewCamera () {

File: app/src/main/java/org/thunderdog/challegram/video/old/Track.java
Patch:
@@ -271,6 +271,8 @@ public void addSample(long offset, MediaCodec.BufferInfo bufferInfo) {
   }
 
   public void prepare() {
+    duration = 0;
+
     ArrayList<SamplePresentationTime> original = new ArrayList<>(samplePresentationTimes);
     Collections.sort(samplePresentationTimes, (o1, o2) -> {
       if (o1.presentationTime > o2.presentationTime) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLayout.java
Patch:
@@ -19,7 +19,7 @@
 import android.widget.RelativeLayout;
 
 import org.thunderdog.challegram.ui.MessagesController;
-import org.thunderdog.challegram.widget.EmojiLayout;
+import org.thunderdog.challegram.widget.KeyboardFrameLayout;
 
 import me.vkryl.android.animator.Animated;
 
@@ -40,7 +40,7 @@ public void setController (MessagesController controller) {
   @Override
   protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
     boolean emojiState = controller.getEmojiState();
-    EmojiLayout emojiLayout = controller.getEmojiLayout();
+    KeyboardFrameLayout emojiLayout = controller.getEmojiKeyboardLayout();
 
     boolean commandsState = controller.getCommandsState();
     CommandKeyboardLayout keyboardLayout = controller.getKeyboardLayout();
@@ -63,7 +63,7 @@ protected void onLayout (boolean changed, int l, int t, int r, int b) {
     super.onLayout(changed, l, t, r, b);
     if (changedMin) {
       boolean emojiState = controller.getEmojiState();
-      EmojiLayout emojiLayout = controller.getEmojiLayout();
+      KeyboardFrameLayout emojiLayout = controller.getEmojiKeyboardLayout();
 
       boolean commandsState = controller.getCommandsState();
       CommandKeyboardLayout keyboardLayout = controller.getKeyboardLayout();

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -306,6 +306,8 @@ public static boolean isThemeDoc (TdApi.Document doc) {
 
   public static final boolean REQUIRE_FIREBASE_SERVICES_FOR_SAFETYNET = false;
 
+  public static final boolean USE_INPUT_VIEW_CLIPPING_FIX = false;
+
   public static final int VOIP_CONNECTION_MIN_LAYER = 65;
   public static final boolean FORCE_DIRECT_TGVOIP = false;
 

File: app/src/main/java/org/thunderdog/challegram/emoji/CustomEmojiSpanImpl.java
Patch:
@@ -33,7 +33,7 @@
 
 import me.vkryl.core.lambda.Destroyable;
 
-class CustomEmojiSpanImpl extends EmojiSpanImpl implements TdlibEmojiManager.Watcher, Destroyable {
+public class CustomEmojiSpanImpl extends EmojiSpanImpl implements TdlibEmojiManager.Watcher, PreserveCustomEmojiFilter.RecoverableSpan, Destroyable {
   private final CustomEmojiSurfaceProvider surfaceProvider;
   private final Tdlib tdlib;
   private final long customEmojiId;

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntity.java
Patch:
@@ -136,6 +136,9 @@ public final int getEnd () {
   public abstract boolean isCustomEmoji ();
   public abstract long getCustomEmojiId ();
   public abstract TextEntity createCopy ();
+  public abstract boolean isQuote ();
+  public abstract  TdApi.TextEntity getQuote ();
+  public abstract int getQuoteId ();
 
   // TODO: TextEntityCustom & TextEntityMessage to make things simpler
   public abstract TextEntity setOnClickListener (ClickableSpan onClickListener);

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -1787,6 +1787,7 @@ private boolean moveToNextLine (TextPart part) {
     currentY += lineHeight;
     maxPartHeight = 0;
     part.setXY(0, currentY);
+    part.setLineIndex(getLineCount(), paragraphCount);
     ensureLineCount(lineHeight, prevMaxPartHeight);
     return true;
   }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -51,6 +51,8 @@ public class Config {
   public static final boolean MODERN_IMAGE_DECODER_ENABLED = true;
   public static final boolean FORCE_SOFTWARE_IMAGE_DECODER = true;
 
+  public static final boolean WAIT_ANIMATIONS_BEFORE_START_VIDEO = true;
+
   // Allow stretch bounce in places where the glow looks ugly
   public static final boolean HAS_NICE_OVER_SCROLL_EFFECT = Build.VERSION.SDK_INT >= Build.VERSION_CODES.S;
 

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -5306,7 +5306,9 @@ protected void updateCustomMenu (int menuId, LinearLayout menu) {
 
   @Override
   public void onPageScrollStateChanged (int state) {
-
+    if (topCellView != null && state != ViewPager.SCROLL_STATE_SETTLING) {
+      topCellView.getTopView().resetFromTo();
+    }
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLoader.java
Patch:
@@ -37,6 +37,7 @@
 import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.data.TdApiExt;
 import org.thunderdog.challegram.data.ThreadInfo;
+import org.thunderdog.challegram.emoji.EmojiCodes;
 import org.thunderdog.challegram.telegram.Tdlib;
 import org.thunderdog.challegram.telegram.TdlibDelegate;
 import org.thunderdog.challegram.telegram.TdlibMessageViewer;
@@ -1004,7 +1005,7 @@ else if (text != null)
           msg.interactionInfo = new TdApi.MessageInteractionInfo();
           msg.interactionInfo.reactions = new TdApi.MessageReactions(
             new TdApi.MessageReaction[]{
-              new TdApi.MessageReaction(new TdApi.ReactionTypeEmoji("\uD83D\uDC4D"), 5, true, mySender, new TdApi.MessageSender[0])
+              new TdApi.MessageReaction(new TdApi.ReactionTypeEmoji(EmojiCodes.THUMBS_UP), 5, true, mySender, new TdApi.MessageSender[0])
             },
             false
           );

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -62,6 +62,7 @@
 import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.data.TGReaction;
 import org.thunderdog.challegram.emoji.Emoji;
+import org.thunderdog.challegram.emoji.EmojiCodes;
 import org.thunderdog.challegram.filegen.TdlibFileGenerationManager;
 import org.thunderdog.challegram.loader.ImageFile;
 import org.thunderdog.challegram.loader.ImageLoader;
@@ -4243,7 +4244,7 @@ public String defaultEmojiReaction () {
         return ((TdApi.ReactionTypeEmoji) defaultReactionType).emoji;
       }
     }
-    return "\uD83D\uDC4D"; // Thumbs up
+    return EmojiCodes.THUMBS_UP;
   }
 
   public void ensureEmojiReactionsAvailable (@Nullable RunnableBool after) {

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -5198,6 +5198,7 @@ private void setHeaderText () {
     if (headerCell != null && chat != null) {
       headerCell.setUseRedHighlight(tdlib.isRedTeam(chat.id));
       headerCell.setText(tdlib.chatTitle(chat, false), makeSubtitle(false));
+      headerCell.setAllowTitleClick(chat.id);
       headerCell.setEmojiStatus(tdlib.chatUser(chat));
       headerCell.setExpandedSubtitle(makeSubtitle(true));
     }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerController.java
Patch:
@@ -234,6 +234,7 @@ protected void onDraw (Canvas c) {
     pager.addOnPageChangeListener(new androidx.viewpager.widget.ViewPager.OnPageChangeListener() {
       @Override
       public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+        positionOffset = ViewPager.clampPositionOffset(positionOffset);
         boolean needUpdateAttachState = currentPosition != position || (currentPositionOffset == 0f) != (positionOffset == 0f);
         currentPosition = position;
         currentPositionOffset = positionOffset;
@@ -461,6 +462,7 @@ public boolean isDisallowKeyboardHideOnPageScrolled () {
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     if (headerCell != null) {
       headerCell.getTopView().setSelectionFactor((float) position + positionOffset);
     }

File: app/src/main/java/org/thunderdog/challegram/ui/IntroController.java
Patch:
@@ -1652,6 +1652,7 @@ protected void onDraw (Canvas c) {
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     lastActualPosition = position;
     lastOffset = positionOffset;
     updateTexts(false);

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsPagerController.java
Patch:
@@ -325,6 +325,7 @@ protected void onCreateView (Context context, FrameLayoutFix contentView, ViewPa
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     if (this.checkedBasePosition != position) {
       checkedBasePosition = position;
       checkContentScrollY(position);

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -1603,6 +1603,7 @@ public boolean isViewFromObject (View view, Object o) {
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     float offset = (float) position + positionOffset;
     pagerHeaderView.getTopView().setSelectionFactor(offset);
     if (this.pagerScrollOffset != offset) {

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -5231,6 +5231,7 @@ private void updateAvailableReactions () {
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     if (this.checkedBasePosition != position) {
       checkedBasePosition = position;
       checkContentScrollY(position);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsStickersController.java
Patch:
@@ -312,6 +312,7 @@ public HeaderEditText editView () {
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
     super.onPageScrolled(position, positionOffset, positionOffsetPixels);
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     lastSelectionFactor = positionOffset + position;
     if (searchHeaderCell != null) {
       searchHeaderCell.getTopView().setSelectionFactor(lastSelectionFactor);

File: app/src/main/java/org/thunderdog/challegram/widget/EmojiLayout.java
Patch:
@@ -30,7 +30,6 @@
 import androidx.collection.SparseArrayCompat;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.viewpager.widget.PagerAdapter;
-import androidx.viewpager.widget.ViewPager;
 
 import org.drinkless.tdlib.TdApi;
 import org.thunderdog.challegram.R;
@@ -871,7 +870,7 @@ public void moveHeaderFull (int y) {
       ignoreFirstScrollEvent = false;
       return;
     }
-    if (ignoreMovement || scrollState != org.thunderdog.challegram.widget.ViewPager.SCROLL_STATE_IDLE) {
+    if (ignoreMovement || scrollState != ViewPager.SCROLL_STATE_IDLE) {
       return;
     }
     lastHeaderVisibleY = 0;
@@ -887,7 +886,7 @@ private void moveHeaderImpl (int y) {
       ignoreFirstScrollEvent = false;
       return;
     }
-    if (ignoreMovement || scrollState != org.thunderdog.challegram.widget.ViewPager.SCROLL_STATE_IDLE) {
+    if (ignoreMovement || scrollState != ViewPager.SCROLL_STATE_IDLE) {
       return;
     }
 
@@ -1064,6 +1063,7 @@ private void updatePositions () {
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     setCurrentPageFactor((float) position + positionOffset);
 
     if (affectHeight) {

File: app/src/main/java/org/thunderdog/challegram/widget/PageBlockWrapView.java
Patch:
@@ -539,6 +539,7 @@ public float getViewPagerPosition () {
 
   @Override
   public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+    positionOffset = ViewPager.clampPositionOffset(positionOffset);
     this.viewPagerPosition = position + positionOffset;
     ViewPagerPositionView positionView = (ViewPagerPositionView) getChildAt(1);
     if (positionView != null) {

File: app/src/main/java/org/thunderdog/challegram/widget/rtl/RtlViewPager.java
Patch:
@@ -273,6 +273,7 @@ private ReverseOnPageChangeListener(@NonNull OnPageChangeListener original) {
 
     @Override
     public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
+      positionOffset = ViewPager.clampPositionOffset(positionOffset);
       if (!suppressOnPageChangeListeners) {
         if (isRtl()) {
           if (positionOffset == 0f && positionOffsetPixels == 0) {

File: app/src/main/java/org/thunderdog/challegram/ui/IntroController.java
Patch:
@@ -1137,7 +1137,7 @@ public boolean onLongClick (View v) {
     ids.append(R.id.btn_log_files);
     icons.append(R.drawable.baseline_bug_report_24);
     strings.append("Log Settings");
-    if (Config.ALLOW_DEBUG_DC) {
+    if (Config.ALLOW_DEBUG_DC || getTdlib().account().isDebug()) {
       ids.append(R.id.btn_tdlib_debugDatacenter);
       icons.append(R.drawable.baseline_build_24);
       strings.append("Proceed in " + (getTdlib().account().isDebug() ? "production" : "debug") + " Telegram environment");

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsController.java
Patch:
@@ -1223,7 +1223,7 @@ public void onClick (View v) {
         showBuildOptions(true);
       } else {
         tdlib.getTesterLevel(testerLevel -> runOnUiThreadOptional(() ->
-          showBuildOptions(testerLevel >= Tdlib.TESTER_LEVEL_TESTER)
+          showBuildOptions(testerLevel >= Tdlib.TesterLevel.TESTER)
         ));
       }
     }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerHeaderViewCompact.java
Patch:
@@ -216,7 +216,6 @@ public void onScrolled (@NonNull RecyclerView recyclerView, int dx, int dy) {
     recyclerView.setOverScrollMode(Config.HAS_NICE_OVER_SCROLL_EFFECT ? OVER_SCROLL_IF_CONTENT_SCROLLS :OVER_SCROLL_NEVER);
     recyclerView.setLayoutManager(new LinearLayoutManager(context, LinearLayoutManager.HORIZONTAL, Lang.rtl()));
     recyclerView.setAdapter(adapter);
-    recyclerView.setHasFixedSize(true);
     addView(recyclerView);
 
     setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.MATCH_PARENT, Size.getHeaderBigPortraitSize(true)));

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerController.java
Patch:
@@ -432,7 +432,7 @@ protected boolean useCenteredTitle () {
   public final void onPageScrollStateChanged (int state) {
     scrollState = state;
     if (state != ViewPager.SCROLL_STATE_SETTLING && headerCell != null) {
-      headerCell.getTopView().setFromTo(-1, -1);
+      headerCell.getTopView().resetFromTo();
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -1653,6 +1653,9 @@ public void onPageScrollStateChanged (int scrollState) {
           hideSoftwareKeyboard();
         }
       }
+      if (pagerHeaderView != null && scrollState != ViewPager.SCROLL_STATE_SETTLING) {
+        pagerHeaderView.getTopView().resetFromTo();
+      }
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagePreviewView.java
Patch:
@@ -343,7 +343,9 @@ public void setUseAvatarFallback (boolean useAvatarFallback) {
   private final ReplaceAnimator<TextEntry> titleText = new ReplaceAnimator<>(ignored -> invalidate(), AnimatorUtils.DECELERATE_INTERPOLATOR, 180l);
   private final ReplaceAnimator<TextEntry> contentText = new ReplaceAnimator<>(ignored -> invalidate(), AnimatorUtils.DECELERATE_INTERPOLATOR, 180l);
   private final ReplaceAnimator<MediaEntry> mediaPreview = new ReplaceAnimator<>(ignored -> {
-    buildText(true);
+    if (data != null) {
+      buildText(true);
+    }
     invalidate();
   }, AnimatorUtils.DECELERATE_INTERPOLATOR, 180l);
   private final BoolAnimator showSmallMedia = new BoolAnimator(this, AnimatorUtils.DECELERATE_INTERPOLATOR, 180l);

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerHeaderViewCompact.java
Patch:
@@ -386,7 +386,7 @@ private void pseudoSmoothScrollBy (int scrollX) {
     recyclerView.stopScroll();
     int threshold = Screen.dp(2f);
     if (Math.abs(scrollX) >= threshold && hasUserInteraction) {
-      long duration = computeScrollDuration(scrollX, recyclerView.getMeasuredHeight());
+      long duration = computeScrollDuration(scrollX, recyclerView.getMeasuredWidth());
 
       scrollByAnimator = new FloatAnimator(duration, QUINTIC_INTERPOLATOR, 0, new AnimatorListener<>() {
         @Override

File: app/src/main/java/org/thunderdog/challegram/ui/SelectChatsController.java
Patch:
@@ -389,8 +389,9 @@ public void onScrollStateChanged (@NonNull RecyclerView recyclerView, int newSta
     adapter.setItems(items, false);
     recyclerView.setAdapter(adapter);
 
-    int initialChunkSize = Screen.calculateLoadingItems(Screen.dp(72f), 5) + 5;
-    int chunkSize = Screen.calculateLoadingItems(Screen.dp(72f), 25);
+    int itemHeight = SettingHolder.measureHeightForType(ListItem.TYPE_CHAT_SMALL);
+    int initialChunkSize = Screen.calculateLoadingItems(itemHeight, 5) + 5;
+    int chunkSize = Screen.calculateLoadingItems(itemHeight, 25);
     loadingMore = true;
     chatListSlice = new TdlibChatListSlice(tdlib, ChatPosition.CHAT_LIST_MAIN, null, true);
 

File: app/src/main/java/org/thunderdog/challegram/ui/SelectChatsController.java
Patch:
@@ -405,10 +405,10 @@ public void onScrollStateChanged (@NonNull RecyclerView recyclerView, int newSta
     recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
       @Override
       public void onScrolled (@NonNull RecyclerView recyclerView, int dx, int dy) {
-        if (dy > 0 && !loadingMore && isChatSearchOpen() && chatListSlice.canLoad()) {
+        if (dy != 0 && !loadingMore && !isChatSearchOpen() && chatListSlice.canLoad()) {
           int lastVisiblePosition = findLastVisiblePosition();
-          if (lastVisiblePosition == adapter.getItemCount() - 1) {
-            chatListSlice.loadMore(chunkSize, /* after */ null);
+          if (lastVisiblePosition + 15 >= adapter.getItemCount() - 1) {
+            chatListSlice.loadMore(chunkSize, null);
           }
         }
       }

File: app/src/main/java/org/thunderdog/challegram/widget/NetworkStatusBarView.java
Patch:
@@ -98,7 +98,7 @@ public NetworkStatusBarView (Context context) {
 
   @Override
   public void onStatusBarHeightChanged (int newHeight) {
-    Log.i("new height: %d", newHeight);
+    // Log.i("new height: %d", newHeight);
     if (getLayoutParams() != null && getLayoutParams().height != newHeight) {
       getLayoutParams().height = newHeight;
       setLayoutParams(getLayoutParams());

File: app/src/main/java/org/thunderdog/challegram/ui/SettingHolder.java
Patch:
@@ -601,6 +601,9 @@ public static SettingHolder create (final Context context, final Tdlib tdlib, fi
       case ListItem.TYPE_PADDING: {
         PaddingView paddingView = new PaddingView(context);
         paddingView.setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
+        if (themeProvider != null) {
+          themeProvider.addThemeInvalidateListener(paddingView);
+        }
         return new SettingHolder(paddingView);
       }
       case ListItem.TYPE_SEPARATOR_FULL:

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerTopView.java
Patch:
@@ -753,9 +753,9 @@ private void recalculateSelection (float selectionFactor, boolean set) {
         this.selectionLeft = selectionLeft;
         this.selectionWidth = selectionWidth;
       }
-      callListener = (fromIndex == -1 && toIndex == -1) || (fromIndex != -1 && toIndex != -1 && Math.abs(toIndex - fromIndex) == 1);
+      callListener = fromIndex == -1 && toIndex == -1;
     } else {
-      callListener = fromIndex != -1 && toIndex != -1 && Math.abs(toIndex - fromIndex) > 1;
+      callListener = fromIndex != -1 && toIndex != -1;
     }
     float totalFactor = items.size() > 1 ? selectionFactor / (float) (items.size() - 1) : 0;
     if (callListener && selectionChangeListener != null && (lastCallSelectionLeft != selectionLeft || lastCallSelectionWidth != selectionWidth || lastCallSelectionFactor != totalFactor)) {

File: app/src/main/java/org/thunderdog/challegram/unsorted/Size.java
Patch:
@@ -40,7 +40,7 @@ public class Size {
   public static final float NAVIGATION_PREVIEW_TRANSLATE_FACTOR = 3.5f;
 
   public static float convertExpandedFactor (float scaleFactor) {
-    return MathUtils.clamp(getHeaderSizeDifference(true) * scaleFactor / (float) getHeaderSizeDifference(false));
+    return getHeaderSizeDifference(true) * scaleFactor / (float) getHeaderSizeDifference(false);
   }
 
   public static int getHeaderPortraitSize () {

File: app/src/main/java/org/thunderdog/challegram/ui/ChatFoldersFeatureController.java
Patch:
@@ -221,7 +221,7 @@ private View buildContentView () {
       title.setPadding(contentHorizontalPadding, contentVerticalPadding, contentHorizontalPadding, contentSpacing);
       title.setTextSize(18f);
       title.setTypeface(Fonts.getRobotoMedium());
-      title.setText(R.string.ChatFoldersSetupSuggestionTitle);
+      title.setText(Lang.getString(R.string.ChatFoldersSetupSuggestionTitle));
       TextViewCompat.setLineHeight(title, Screen.sp(21f));
       contentView.addView(title, LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT);
 
@@ -231,7 +231,7 @@ private View buildContentView () {
       text.setPadding(contentHorizontalPadding, 0, contentHorizontalPadding, contentVerticalPadding);
       text.setTextSize(15f);
       text.setTypeface(Fonts.getRobotoRegular());
-      text.setText(R.string.ChatFoldersSetupSuggestionText);
+      text.setText(Lang.getMarkdownString(this, R.string.ChatFoldersSetupSuggestionText));
       TextViewCompat.setLineHeight(text, Screen.sp(17.6f));
       contentView.addView(text, LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT);
 

File: app/src/main/java/org/thunderdog/challegram/navigation/EditHeaderView.java
Patch:
@@ -29,6 +29,7 @@
 import androidx.annotation.DrawableRes;
 import androidx.annotation.StringRes;
 
+import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.loader.ImageGalleryFile;
@@ -224,6 +225,7 @@ public float getScaleFactor () {
 
   @Override
   public void setScaleFactor (float scaleFactor, float fromFactor, float toScaleFactor, boolean byScroll) {
+    Log.v("setScale %f %f", scaleFactor, Size.convertExpandedFactor(scaleFactor));
     scaleFactor = Size.convertExpandedFactor(scaleFactor);
     if (this.scaleFactor != scaleFactor) {
       this.scaleFactor = scaleFactor;

File: app/src/main/java/org/thunderdog/challegram/ui/EditChatFolderController.java
Patch:
@@ -227,6 +227,7 @@ public void setArguments (Arguments args) {
   protected void onCreateView (Context context, FrameLayoutFix contentView, RecyclerView recyclerView) {
     if (Config.CHAT_FOLDERS_REDESIGN) {
       headerCell = new EditHeaderView(context, this);
+      // headerCell.setNeedExpand(false);
       headerCell.setInput(editedChatFolder.title);
       headerCell.setInputOptions(R.string.FolderNameHint, InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_FLAG_CAP_WORDS);
       headerCell.setOnPhotoClickListener(this::showIconSelector);

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibSettingsManager.java
Patch:
@@ -1113,7 +1113,7 @@ public boolean hasNotificationProblems () {
   private static final boolean DEFAULT_MAIN_CHAT_LIST_ENABLED = true;
   private static final boolean DEFAULT_ARCHIVE_CHAT_LIST_ENABLED = false;
   public static final int DEFAULT_CHAT_FOLDER_OPTIONS = ChatFolderOptions.DISPLAY_AT_TOP;
-  public static final int DEFAULT_CHAT_FOLDER_STYLE = ChatFolderStyle.LABEL_AND_ICON;
+  public static final int DEFAULT_CHAT_FOLDER_STYLE = ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE_FOLDER;
   private static final int DEFAULT_CHAT_FOLDER_BADGE_FLAGS = 0;
 
   private boolean isMainChatListEnabled () {

File: app/src/main/java/org/thunderdog/challegram/ui/MainController.java
Patch:
@@ -2675,7 +2675,7 @@ private void checkTabs () {
     ViewPagerHeaderViewCompact headerCellView = (ViewPagerHeaderViewCompact) headerCell.getView();
     boolean hasFolders = hasFolders();
     boolean displayTabsAtBottom = displayTabsAtBottom();
-    headerCell.getTopView().setShowLabelOnActiveOnly(hasFolders && tdlib.settings().chatFolderStyle() == ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE);
+    headerCell.getTopView().setShowLabelOnActiveOnly(hasFolders && tdlib.settings().chatFolderStyle() == ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE_FOLDER);
     headerCell.getTopView().setUseDarkBackground(displayTabsAtBottom);
     headerCell.getTopView().setDrawSelectionAtTop(displayTabsAtBottom);
     headerCell.getTopView().setSlideOffDirection(displayTabsAtBottom ? ViewPagerTopView.SLIDE_OFF_DIRECTION_TOP : ViewPagerTopView.SLIDE_OFF_DIRECTION_BOTTOM);
@@ -3216,7 +3216,7 @@ private boolean hasIcon (@ChatFolderStyle int chatFolderStyle) {
     switch (chatFolderStyle) {
       case ChatFolderStyle.ICON_ONLY:
       case ChatFolderStyle.LABEL_AND_ICON:
-      case ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE:
+      case ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE_FOLDER:
         return true;
       case ChatFolderStyle.LABEL_ONLY:
         return false;

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsFoldersController.java
Patch:
@@ -321,7 +321,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
             case ChatFolderStyle.ICON_ONLY:
               styleRes = R.string.IconOnly;
               break;
-            case ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE:
+            case ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE_FOLDER:
               styleRes = R.string.IconWithLabelOnActiveFolder2;
               break;
             default:
@@ -473,7 +473,7 @@ public void onClick (View v) {
         new ListItem(ListItem.TYPE_SEPARATOR_FULL),
         new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_iconOnly, 0, R.string.IconOnly, R.id.btn_chatFolderStyle, chatFolderStyle == ChatFolderStyle.ICON_ONLY),
         new ListItem(ListItem.TYPE_SEPARATOR_FULL),
-        new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_iconWithLabelOnActiveFolder, 0, R.string.IconWithLabelOnActiveFolder2, R.id.btn_chatFolderStyle, chatFolderStyle == ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE)
+        new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_iconWithLabelOnActiveFolder, 0, R.string.IconWithLabelOnActiveFolder2, R.id.btn_chatFolderStyle, chatFolderStyle == ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE_FOLDER)
       };
       SettingsWrapBuilder settings = new SettingsWrapBuilder(R.id.btn_chatFolderStyle)
         .setRawItems(items)
@@ -486,7 +486,7 @@ public void onClick (View v) {
           } else if (selection == R.id.btn_labelAndIcon) {
             style = ChatFolderStyle.LABEL_AND_ICON;
           } else if (selection == R.id.btn_iconWithLabelOnActiveFolder) {
-            style = ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE;
+            style = ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE_FOLDER;
           } else {
             style = ChatFolderStyle.LABEL_ONLY;
           }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -35,6 +35,7 @@ public class Config {
   public static final boolean CHAT_FOLDERS_HIDE_BOTTOM_BAR_ON_SCROLL = true;
   public static final boolean CHAT_FOLDERS_APPEARANCE_IS_GLOBAL = true;
   public static final boolean CHAT_FOLDERS_REDESIGN = true;
+  public static final boolean COLLAPSE_CHAT_FOLDER_HEADER_ON_SCROLL = CHAT_FOLDERS_REDESIGN;
   public static final boolean RESTRICT_HIDING_MAIN_LIST = true;
   public static final boolean SEARCH_MESSAGES_ONLY_IN_SELECTED_FOLDER = BuildConfig.EXPERIMENTAL;
 

File: app/src/main/java/org/thunderdog/challegram/navigation/HeaderView.java
Patch:
@@ -208,7 +208,7 @@ public void initWithController (NavigationController controller) {
 
   private int currentHeaderOffset = -1;
 
-  private int getCurrentHeaderOffset () {
+  public int getCurrentHeaderOffset () {
     return currentHeaderOffset != -1 ? currentHeaderOffset : 0;
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsPagerController.java
Patch:
@@ -115,7 +115,7 @@ public MessageOptionsPagerController (Context context, Tdlib tdlib, Options opti
         .drawable(R.drawable.baseline_favorite_16, 16f, 6f, Gravity.LEFT)
         .build(), this, Screen.dp(16));
       counters[ALL_REACTED_POSITION].counter.setCount(message.getMessageReactions().getTotalCount(), false);
-      state.headerAlwaysVisibleCountersWidth += counters[ALL_REACTED_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING), /* labelFactor */ 1f);
+      state.headerAlwaysVisibleCountersWidth += counters[ALL_REACTED_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING));
     } else {
       ALL_REACTED_POSITION = -1;
     }
@@ -127,7 +127,7 @@ public MessageOptionsPagerController (Context context, Tdlib tdlib, Options opti
         .drawable(R.drawable.baseline_visibility_16, 16f, 6f, Gravity.LEFT)
         .build(), this, Screen.dp(16));
       counters[SEEN_POSITION].counter.setCount(1, false);
-      int itemWidth = counters[SEEN_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING), /* labelFactor */ 1f); // - Screen.dp(16);
+      int itemWidth = counters[SEEN_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING)); // - Screen.dp(16);
       state.headerAlwaysVisibleCountersWidth += itemWidth;
       counters[SEEN_POSITION].setStaticWidth(itemWidth - Screen.dp(16));
       counters[SEEN_POSITION].counter.setCount(Tdlib.CHAT_LOADING, false);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsFoldersController.java
Patch:
@@ -322,7 +322,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
               styleRes = R.string.IconOnly;
               break;
             case ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE:
-              styleRes = R.string.IconWithLabelOnActiveFolder;
+              styleRes = R.string.IconWithLabelOnActiveFolder2;
               break;
             default:
             case ChatFolderStyle.LABEL_ONLY:
@@ -473,7 +473,7 @@ public void onClick (View v) {
         new ListItem(ListItem.TYPE_SEPARATOR_FULL),
         new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_iconOnly, 0, R.string.IconOnly, R.id.btn_chatFolderStyle, chatFolderStyle == ChatFolderStyle.ICON_ONLY),
         new ListItem(ListItem.TYPE_SEPARATOR_FULL),
-        new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_iconWithLabelOnActiveFolder, 0, R.string.IconWithLabelOnActiveFolder, R.id.btn_chatFolderStyle, chatFolderStyle == ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE)
+        new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_iconWithLabelOnActiveFolder, 0, R.string.IconWithLabelOnActiveFolder2, R.id.btn_chatFolderStyle, chatFolderStyle == ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE)
       };
       SettingsWrapBuilder settings = new SettingsWrapBuilder(R.id.btn_chatFolderStyle)
         .setRawItems(items)

File: app/src/main/java/org/thunderdog/challegram/widget/BubbleLayout.java
Patch:
@@ -73,10 +73,11 @@ public void draw (@NonNull Canvas c) {
           backgroundDrawable.setBounds(0, cornerHeight - Screen.dp(2f), viewWidth, viewHeight);
           backgroundDrawable.draw(c);
 
-          int cornerX = viewWidth / 2 - cornerWidth / 2;
+          int pivotX = (cornerCenterChanged ? cornerCenterX : viewWidth / 2);
+          int cornerX = pivotX - cornerWidth / 2;
           cornerDrawable.setBounds(cornerX, 0, cornerX + cornerWidth, cornerHeight);
           c.save();
-          c.rotate(180f, viewWidth / 2f, cornerHeight / 2f);
+          c.rotate(180f, pivotX, cornerHeight / 2f);
           cornerDrawable.draw(c);
           c.restore();
         } else {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -6807,6 +6807,9 @@ public void checkPremiumLimit (TdApi.PremiumLimitType premiumLimitType, @NonNull
       case TdApi.PremiumLimitTypeChatFolderChosenChatCount.CONSTRUCTOR:
         effectiveLimit = tdlib.chatFolderChosenChatCountMax();
         break;
+      case TdApi.PremiumLimitTypeShareableChatFolderCount.CONSTRUCTOR:
+        effectiveLimit = tdlib.addedShareableChatFolderCountMax();
+        break;
       default:
         Td.assertPremiumLimitType_3b3ed738();
         throw Td.unsupported(premiumLimitType);

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -1670,7 +1670,7 @@ public void onMoreItemPressed (int id) {
       if (TD.isChatListFolder(chatList)) {
         int chatFolderId = ((TdApi.ChatListFolder) chatList).chatFolderId;
         long[] selectedChatIds = ArrayUtils.keys(selectedChats);
-        tdlib.removeChatsFromChatFolder(chatFolderId, selectedChatIds);
+        tdlib.ui().removeChatsFromChatFolder(chatFolderId, selectedChatIds);
       }
       onSelectionActionComplete();
       // break;

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsPrivacyKeyController.java
Patch:
@@ -292,7 +292,7 @@ private boolean needExceptions () {
           case TdApi.UserPrivacySettingAllowFindingByPhoneNumber.CONSTRUCTOR:
             return false;
         }
-        break;
+        return true;
       }
       case Mode.NEW_CHATS_PRIVACY:
         return false;

File: app/src/main/java/org/thunderdog/challegram/filegen/PhotoGenerationInfo.java
Patch:
@@ -457,7 +457,7 @@ private static String makeConversion (ImageGalleryFile file, long lastModifiedTi
     PaintState paintState = file.getPaintState();
     if (paintState != null && !paintState.isEmpty()) {
       b.append(",p:");
-      b.append(paintState.toString());
+      b.append(paintState.saveAndSerializeToString());
     }
 
     if (BuildConfig.DEBUG) {

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -1643,7 +1643,7 @@ private int processPart (final String in, final int start, int end, ArrayList<Te
         } else if (newEnd - currentEnd == 1 && lastCodePointWidth != -1 && lastCodePoint == codePoint) {
           charWidth = lastCodePointWidth;
         } else {
-          charWidth = U.measureText(in, currentEnd, newEnd, paint);
+          charWidth = BiDiUtils.measureTextRun(bidiEntity, in, currentEnd, newEnd, paint); //    U.measureText(in, currentEnd, newEnd, paint);
           if (newEnd - currentEnd == 1) {
             lastCodePoint = codePoint;
             lastCodePointWidth = charWidth;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -5096,7 +5096,7 @@ public boolean canBeForwarded () {
   }
 
   public boolean canBeReacted () {
-    return !isSponsoredMessage() && !isEventLog() && !(msg.content instanceof TdApi.MessageCall) && !Td.isEmpty(messageAvailableReactions);
+    return !isSponsoredMessage() && !isEventLog() && !(msg.content instanceof TdApi.MessageCall) && !Td.isEmpty(messageAvailableReactions) && (tdlib.hasPremium() || Td.hasNonPremiumReactions(messageAvailableReactions));
   }
 
   public boolean canBeSaved () {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationChannelGroup.java
Patch:
@@ -82,11 +82,11 @@ private static String makePrefix (long accountUserId, int globalVersion) {
     return accountUserId + "_" + globalVersion;
   }
 
-  public TdlibNotificationChannelGroup (Tdlib tdlib, long accountUserId, boolean isDebugAccount, @Nullable TdApi.User account) throws ChannelCreationFailureException {
+  public TdlibNotificationChannelGroup (Tdlib tdlib, long accountUserId, boolean isDebugAccount, int globalVersion, @Nullable TdApi.User account) throws ChannelCreationFailureException {
     this.tdlib = tdlib;
     this.accountUserId = accountUserId;
     this.isDebug = isDebugAccount;
-    this.globalVersion = tdlib.notifications().getChannelsGlobalVersion();
+    this.globalVersion = globalVersion;
     this.groupId = makeGroupId(accountUserId, isDebugAccount);
     create(account);
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationManager.java
Patch:
@@ -1141,14 +1141,15 @@ public TdlibNotificationChannelGroup getChannelCache () throws TdlibNotification
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
       long accountUserId = tdlib.myUserId(true);
       boolean isDebug = tdlib.account().isDebug();
+      int globalVersion = getChannelsGlobalVersion();
       TdApi.User account = myUser();
       if (accountUserId == 0) {
         if (channelGroupCache != null)
           return channelGroupCache;
         throw new IllegalStateException("Cannot retrieve accountUserId, required by channelGroup, authorizationStatus: " + tdlib.authorizationStatus());
       }
-      if (channelGroupCache == null || !channelGroupCache.compareTo(accountUserId, isDebug, getChannelsGlobalVersion())) {
-        channelGroupCache = new TdlibNotificationChannelGroup(tdlib, accountUserId, isDebug, account);
+      if (channelGroupCache == null || !channelGroupCache.compareTo(accountUserId, isDebug, globalVersion)) {
+        channelGroupCache = new TdlibNotificationChannelGroup(tdlib, accountUserId, isDebug, globalVersion, account);
       }
       return channelGroupCache;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/EmojiMediaListController.java
Patch:
@@ -313,7 +313,7 @@ private void setEnableStickersAnimations (boolean enableStickersAnimations) {
       }
       boolean stickerAnimationsEnabled = stickersController.recyclerView.getItemAnimator() == stickersAnimator;
       if (enableStickersAnimations != stickerAnimationsEnabled) {
-        if (stickerAnimationsEnabled) {
+        if (enableStickersAnimations) {
           stickersController.recyclerView.setItemAnimator(stickersAnimator);
         } else {
           stickersController.recyclerView.setItemAnimator(null);

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -6845,7 +6845,7 @@ public boolean setLinkPreviewUrl (@NonNull String url) {
       if (url.equals(this.linkPreviewOptions.url)) {
         return false;
       }
-      if (StringUtils.isEmpty(this.linkPreviewOptions.url) && url.equals(foundUrls.urls[0])) {
+      if (StringUtils.isEmpty(this.linkPreviewOptions.url) && !foundUrls.isEmpty() && url.equals(foundUrls.urls[0])) {
         return false;
       }
       this.linkPreviewOptions.url = url;

File: app/src/main/java/org/thunderdog/challegram/filegen/TdlibFileGenerationManager.java
Patch:
@@ -984,7 +984,7 @@ private void copyContentStream (final String originalPath, final String conversi
     final String sourceUri = conversion.substring(0, i);
     String arg = conversion.substring(i + 1);
     int j = arg.indexOf('_');
-    final long expectedSize = StringUtils.parseInt(j != -1 ? arg.substring(0, j) : arg);
+    final long expectedSize = StringUtils.parseLong(j != -1 ? arg.substring(0, j) : arg);
 
     getContentExecutor().execute(() -> {
       boolean success = false;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -2407,7 +2407,7 @@ public void openMessage (final TdlibDelegate context, final long chatId, final M
     openChat(context, chatId, new ChatOpenParameters().keepStack().highlightMessage(messageId).ensureHighlightAvailable().messageThread(messageThread).urlOpenParameters(openParameters));
   }
 
-  public void openMessage (final TdlibDelegate context, final TdApi.MessageLinkInfo messageLink, final UrlOpenParameters openParameters) {
+  public void openMessage (final TdlibDelegate context, final TdApi.MessageLinkInfo messageLink, final @Nullable UrlOpenParameters openParameters) {
     if (messageLink.message != null) {
       // TODO support for album, media timestamp, etc
       MessageId messageId = new MessageId(messageLink.message.chatId, messageLink.message.id);
@@ -2417,7 +2417,7 @@ public void openMessage (final TdlibDelegate context, final TdApi.MessageLinkInf
           if (error != null) {
             openMessage(context, messageLink.chatId, messageId, openParameters);
           } else {
-            ThreadInfo messageThread = ThreadInfo.openedFromMessage(context.tdlib(), messageThreadInfo, openParameters.messageId);
+            ThreadInfo messageThread = ThreadInfo.openedFromMessage(context.tdlib(), messageThreadInfo, openParameters != null ? openParameters.messageId : null);
             if (Config.SHOW_CHANNEL_POST_REPLY_INFO_IN_COMMENTS) {
               TdApi.Message message = messageThread.getOldestMessage();
               if (message != null && message.replyTo == null && message.forwardInfo != null && tdlib.isChannelAutoForward(message)) {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsBlockedController.java
Patch:
@@ -410,7 +410,9 @@ public void onClick (View v) {
     if (v.getId() == R.id.user) {
       TGUser user = ((UserView) v).getUser();
       if (user != null) {
-        tdlib.ui().openChat(this, user.getSenderId(), new TdlibUi.ChatOpenParameters().keepStack());
+        tdlib.ui().openChat(this, user.getSenderId(), new TdlibUi.ChatOpenParameters().keepStack()
+          .urlOpenParameters(new TdlibUi.UrlOpenParameters().tooltip(context.tooltipManager().builder(v)))
+        );
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsController.java
Patch:
@@ -872,7 +872,7 @@ private void checkBirthdate () {
       if (hasBirthdate) {
         position = adapter.indexOfViewById(R.id.btn_phone);
         adapter.addItems(position + 1,
-          new ListItem(ListItem.TYPE_SEPARATOR_FULL),
+          new ListItem(ListItem.TYPE_SEPARATOR),
           newBirthdateItem()
         );
       } else {

File: app/src/main/java/org/thunderdog/challegram/ui/TranslationControllerV2.java
Patch:
@@ -684,7 +684,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
     protected void onDraw (Canvas canvas) {
       float alpha = translationCounterDrawable.getLoadingTextAlpha();
       for (ListAnimator.Entry<TextWrapper> entry : text) {
-        entry.item.draw(canvas, Screen.dp(18), Screen.dp(6), null, alpha * entry.getVisibility(), textMediaReceiver);
+        entry.item.draw(canvas, Screen.dp(18), getMeasuredWidth() - Screen.dp(18), 0, Screen.dp(6), null, alpha * entry.getVisibility(), textMediaReceiver);
       }
       invalidate();
     }

File: app/src/main/java/org/thunderdog/challegram/N.java
Patch:
@@ -117,4 +117,5 @@ public Suggestion (String emoji, String label, String replacement) {
   public native static void throwDirect (String msg);
 
   public static native String[] getTgCallsVersions ();
+  public static native String toHexString (byte[] array);
 }

File: app/src/main/java/org/thunderdog/challegram/MainActivity.java
Patch:
@@ -94,6 +94,7 @@
 import org.thunderdog.challegram.util.Crash;
 import org.thunderdog.challegram.widget.GearView;
 import org.thunderdog.challegram.widget.NoScrollTextView;
+import org.thunderdog.challegram.widget.PopupLayout;
 
 import java.util.ArrayList;
 import java.util.LinkedList;
@@ -924,7 +925,7 @@ private void performAs (List<TdlibAccount> accounts, @Nullable CharSequence prom
       .setNeedSeparators(false)
       .setOnSettingItemClick(multiSelect ? new ViewController.OnSettingItemClick() {
         @Override
-        public void onSettingItemClick (View view, int settingsId, ListItem item, TextView doneButton, SettingsAdapter settingsAdapter) {
+        public void onSettingItemClick (View view, int settingsId, ListItem item, TextView doneButton, SettingsAdapter settingsAdapter, PopupLayout window) {
           switch (item.getViewType()) {
             case ListItem.TYPE_CHECKBOX_OPTION:
             case ListItem.TYPE_CHECKBOX_OPTION_WITH_AVATAR:

File: app/src/main/java/org/thunderdog/challegram/data/TGInlineKeyboard.java
Patch:
@@ -1282,7 +1282,7 @@ private Client.ResultHandler getLoginCallback (final int currentContextId, final
                       break;
                   }
                 })
-              .setOnSettingItemClick(confirm.requestWriteAccess ? (itemView, settingsId, item, doneButton, settingsAdapter) -> {
+              .setOnSettingItemClick(confirm.requestWriteAccess ? (itemView, settingsId, item, doneButton, settingsAdapter, window) -> {
                 final int itemId = item.getId();
                 if (itemId == R.id.btn_signIn) {
                   boolean needSignIn = settingsAdapter.getCheckIntResults().get(R.id.btn_signIn) == R.id.btn_signIn;

File: app/src/main/java/org/thunderdog/challegram/helper/LiveLocationHelper.java
Patch:
@@ -640,7 +640,7 @@ public LiveLocationHelper openLiveLocationList (boolean forceList) {
       }
       return false;
     });
-    b.setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter) -> {
+    b.setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter, window) -> {
       TdApi.Message message = (TdApi.Message) item.getData();
       TdApi.MessageLocation messageLocation = (TdApi.MessageLocation) message.content;
       MapController.Args args = new MapController.Args(messageLocation.location.latitude, messageLocation.location.longitude, message).setChatId(message.chatId, message.messageThreadId).setNavigateBackOnStop(true);

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewController.java
Patch:
@@ -1863,7 +1863,7 @@ public interface SettingsStringDelegate {
   }
 
   public interface OnSettingItemClick {
-    void onSettingItemClick (View view, @IdRes int settingsId, ListItem item, TextView doneButton, SettingsAdapter settingsAdapter);
+    void onSettingItemClick (View view, @IdRes int settingsId, ListItem item, TextView doneButton, SettingsAdapter settingsAdapter, PopupLayout window);
   }
 
   public final void showSettings (final @IdRes int id, ListItem[] rawItems, final SettingsIntDelegate delegate) {
@@ -2009,7 +2009,7 @@ public void getItemOffsets (@NonNull Rect outRect, @NonNull View view, @NonNull
           settings.adapter.processToggle(v);
         }
         if (tag != null && tag instanceof ListItem && b.onSettingItemClick != null) {
-          b.onSettingItemClick.onSettingItemClick(v, b.id, (ListItem) tag, settings.doneButton, settings.adapter);
+          b.onSettingItemClick.onSettingItemClick(v, b.id, (ListItem) tag, settings.doneButton, settings.adapter, settings.window);
         }
       }
     };

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -484,7 +484,7 @@ public void kickMember (ViewController<?> c, final long chatId, final TdApi.Mess
           }
         }
       })
-      .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter) -> {
+      .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter, window) -> {
         headerItem.setString(getBlockString(chatId, senderId, settingsAdapter.getCheckIntResults().get(R.id.btn_restrictMember) != 0));
         settingsAdapter.updateValuedSettingByPosition(settingsAdapter.indexOfView(headerItem));
       })
@@ -2836,7 +2836,7 @@ private void openExternalUrl (final TdlibDelegate context, final String original
                       break;
                   }
                 })
-                .setOnSettingItemClick(confirm.requestWriteAccess ? (itemView, settingsId, item, doneButton, settingsAdapter) -> {
+                .setOnSettingItemClick(confirm.requestWriteAccess ? (itemView, settingsId, item, doneButton, settingsAdapter, window) -> {
                   final int itemId = item.getId();
                   if (itemId == R.id.btn_signIn) {
                     boolean needSignIn = settingsAdapter.getCheckIntResults().get(R.id.btn_signIn) == R.id.btn_signIn;
@@ -4934,7 +4934,7 @@ public void showAddChatsToFolderOptions (ViewController<?> context, long[] chatI
       .setSettingProcessor((item, view, isUpdate) -> {
         view.setIconColorId(item.getId() == R.id.btn_createNewFolder ? ColorId.inlineIcon : ColorId.NONE);
       })
-      .setOnSettingItemClick((view, id, item, done, adapter) -> {
+      .setOnSettingItemClick((view, id, item, done, adapter, window) -> {
         settings[0].window.hideWindow(true);
         if (item.getId() == R.id.btn_createNewFolder) {
           TdApi.ChatFolder chatFolder = TD.newChatFolder(chatIds);

File: app/src/main/java/org/thunderdog/challegram/ui/ChatStatisticsController.java
Patch:
@@ -622,7 +622,7 @@ private void kickMember (final DoubleTextWrapper content) {
           }
         }
       })
-      .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter) -> {
+      .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter, window) -> {
         headerItem.setString(Lang.getStringBold(settingsAdapter.getCheckIntResults().get(R.id.btn_restrictMember) != 0 ? R.string.MemberCannotJoinGroup : R.string.MemberCanJoinGroup, tdlib.cache().userName(content.getUserId())));
         settingsAdapter.updateValuedSettingByPosition(settingsAdapter.indexOfView(headerItem));
       })

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -9267,7 +9267,7 @@ private void openEventLogSettings () {
                 break;
             }
           })
-          .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter) -> {
+          .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter, window) -> {
             switch (item.getViewType()) {
               case ListItem.TYPE_CHECKBOX_OPTION:
               case ListItem.TYPE_CHECKBOX_OPTION_WITH_AVATAR:

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -3346,7 +3346,7 @@ else if (groupFull != null)
           new ListItem(ListItem.TYPE_RADIO_OPTION, R.id.btn_hidden, 0, R.string.ChatHistoryHidden, R.id.btn_prehistoryMode, !currentValue)
         })
         .setHeaderItem(headerItem)
-        .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter) -> {
+        .setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter, window) -> {
           boolean visible = settingsAdapter.getCheckIntResults().get(R.id.btn_prehistoryMode) == R.id.btn_visible;
           if (groupFull != null && !visible) {
             headerItem.setString(Lang.plural(R.string.ChatHistoryPartiallyHiddenInfo, 100));

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsCacheController.java
Patch:
@@ -646,7 +646,7 @@ private void showClearSettings (int id, final TGStorageStats.Entry entry) {
     ListItem[] array = new ListItem[items.size()];
     items.toArray(array);
 
-    showSettings(new SettingsWrapBuilder(id).addHeaderItem(headerItem).setRawItems(array).setIntDelegate((id1, result) -> optimizeStorage(result, entry)).setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter) -> {
+    showSettings(new SettingsWrapBuilder(id).addHeaderItem(headerItem).setRawItems(array).setIntDelegate((id1, result) -> optimizeStorage(result, entry)).setOnSettingItemClick((view, settingsId, item, doneButton, settingsAdapter, window) -> {
       String size = Strings.buildSize(measureTotal(settingsAdapter.getCheckIntResults(), entry), false);
       doneButton.setText(Lang.getString(R.string.ClearX, size).toUpperCase());
     }).setSaveStr(Lang.getString(R.string.ClearX, Strings.buildSize(selectedSize, false)))

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -1718,7 +1718,7 @@ public void onClick (View v) {
         rawItems[4] = new ListItem(ListItem.TYPE_CHECKBOX_OPTION, R.id.btn_vibrateOnlyIfSilent, 0, R.string.OnlyIfSilent, R.id.btn_vibrateOnlyIfSilent, currentSilentOnly);
       }
 
-      showSettings(new SettingsWrapBuilder(id).setRawItems(rawItems).setIntDelegate(this).setOnSettingItemClick((view, settingId, settingItem, doneButton, settingsAdapter) -> {
+      showSettings(new SettingsWrapBuilder(id).setRawItems(rawItems).setIntDelegate(this).setOnSettingItemClick((view, settingId, settingItem, doneButton, settingsAdapter, window) -> {
         final int settingItemId = settingItem.getId();
         if (settingItemId == R.id.btn_short) {
           try {
@@ -1883,7 +1883,7 @@ public void onClick (View v) {
         items[i++] = new ListItem(ListItem.TYPE_RADIO_OPTION, 0, 0, ringtoneItem.isDefault() ? Lang.getString(R.string.IsDefault, ringtoneItem.getName()) : ringtoneItem.getName(), v.getId(), isCurrent).setStringKey(ringtoneItem.getUri().toString());
       }
 
-      showSettings(new SettingsWrapBuilder(v.getId()).setRawItems(items).setStringDelegate(this).setOnSettingItemClick((view, settingId, settingItem, doneButton, settingsAdapter) -> {
+      showSettings(new SettingsWrapBuilder(v.getId()).setRawItems(items).setStringDelegate(this).setOnSettingItemClick((view, settingId, settingItem, doneButton, settingsAdapter, window) -> {
         String path = settingItem.getStringCheckResult();
         if (path != null) {
           for (RingtoneItem ringtoneItem : ringtoneItems) {

File: app/src/main/java/org/thunderdog/challegram/voip/CallConfiguration.java
Patch:
@@ -63,7 +63,7 @@ public CallConfiguration (
     boolean enableH264Encoder,
     boolean enableH264Decoder
   ) {
-    if (VoIP.needFilterCallServers()) {
+    if (VoIP.needModifyCallServers()) {
       this.state = new TdApi.CallStateReady(
         state.protocol,
         VoIP.filterCallServers(state.servers),

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatListener.java
Patch:
@@ -36,6 +36,7 @@ default void onChatEmojiStatusChanged (long chatId, @Nullable TdApi.EmojiStatus
 
   default void onChatBackgroundCustomEmojiChanged (long chatId, long customEmojiId) { }
   default void onChatActionBarChanged (long chatId, TdApi.ChatActionBar actionBar) { }
+  default void onChatBusinessBotManageBarChanged (long chatId, @Nullable TdApi.BusinessBotManageBar botManageBar) { }
   default void onChatPhotoChanged (long chatId, @Nullable TdApi.ChatPhotoInfo photo) { }
   default void onChatReadInbox (long chatId, long lastReadInboxMessageId, int unreadCount, boolean availabilityChanged) { }
   default void onChatHasScheduledMessagesChanged (long chatId, boolean hasScheduledMessages) { }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibOptionListener.java
Patch:
@@ -22,6 +22,7 @@ default void onSentScheduledMessageNotificationsDisabled (boolean areDisabled) {
   default void onSuggestedLanguagePackChanged (String suggestedLanguagePackId, TdApi.LanguagePackInfo suggestedLanguagePack) { }
   default void onContactRegisteredNotificationsDisabled (boolean areDisabled) { }
   default void onSuggestedActionsChanged (TdApi.SuggestedAction[] addedActions, TdApi.SuggestedAction[] removedActions) { }
+  default void onSpeedLimitNotification (boolean isUpload) { }
   default void onContactCloseBirthdayUsersChanged (TdApi.CloseBirthdayUser[] birthdayUsers) { }
   default void onArchiveAndMuteChatsFromUnknownUsersEnabled (boolean enabled) { }
   default void onAccentColorsChanged () { }

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -894,7 +894,7 @@ private boolean makeRequest () {
         function = new TdApi.ImportContacts(new TdApi.Contact[] {new TdApi.Contact(phone, getFirstName(), getLastName(), null, 0)});
         break;
       case MODE_CHANGE_NUMBER:
-        function = new TdApi.ChangePhoneNumber(phone, tdlib.phoneNumberAuthenticationSettings(context));
+        function = new TdApi.SendPhoneNumberCode(phone, tdlib.phoneNumberAuthenticationSettings(context), new TdApi.PhoneNumberCodeTypeChange());
         break;
       case MODE_LOGIN:
         function = new TdApi.SetAuthenticationPhoneNumber(phone, tdlib.phoneNumberAuthenticationSettings(context));

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsPrivacyKeyController.java
Patch:
@@ -275,7 +275,7 @@ private void buildCells () {
         hintItem = new ListItem(ListItem.TYPE_DESCRIPTION, R.id.btn_description, 0, rulesType == PrivacySettings.Mode.EVERYBODY ? R.string.WhoCanFindByPhoneInfoEveryone : R.string.WhoCanFindByPhoneInfoContacts);
         TdApi.User user = tdlib.myUser();
         if (user != null) {
-          internalLinkType = new TdApi.InternalLinkTypeUserPhoneNumber(user.phoneNumber);
+          internalLinkType = new TdApi.InternalLinkTypeUserPhoneNumber(user.phoneNumber, "");
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/voip/VoIP.java
Patch:
@@ -186,6 +186,7 @@ public static VoIPInstance instantiateAndConnect (
     final String[] tgCallsVersions = N.getTgCallsVersions();
 
     final VoIPLogs.Pair logFiles = VoIPLogs.getNewFile(true);
+    tdlib.storeCallLogInformation(call, logFiles);
 
     final File persistentStateFile = VoIPPersistentConfig.getVoipConfigFile();
 

File: app/src/main/java/org/thunderdog/challegram/navigation/OptionsLayout.java
Patch:
@@ -32,6 +32,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 
+import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.telegram.Tdlib;
@@ -256,6 +257,7 @@ public static void updateSubtitle (EmojiTextView text, CharSequence name, @Drawa
   public static EmojiTextView genSubtitle (Context context) {
     EmojiTextView text = new EmojiTextView(context);
     text.setScrollDisabled(true);
+    text.setMinHeight(Screen.dp(40f));
     text.setTypeface(Fonts.getRobotoRegular());
     text.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 15f);
     text.setGravity(Lang.rtl() ? Gravity.RIGHT | Gravity.CENTER_VERTICAL : Gravity.LEFT | Gravity.CENTER_VERTICAL);

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsController.java
Patch:
@@ -352,7 +352,7 @@ public int getItemsHeight (RecyclerView recyclerView) {
     if (adapter.subtitlePosition >= 0) {
       View view = recyclerView.getLayoutManager().findViewByPosition(adapter.subtitlePosition);
       int height = view != null ? view.getMeasuredHeight() : 0;
-      totalHeight += height != 0 ? height : Screen.dp(15f) + Screen.dp(7f) + Screen.dp(8f);
+      totalHeight += height != 0 ? height : Screen.dp(40f);
     }
     return totalHeight;
   }

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -2363,7 +2363,7 @@ private boolean setDescription (TdApi.FormattedText text) {
       currentAbout = text;
       if (text != null) {
         // TODO: custom emoji support
-        aboutWrapper = new TextWrapper(tdlib, text, Paints.robotoStyleProvider(16f), TextColorSets.Regular.NORMAL, new TdlibUi.UrlOpenParameters().sourceChat(getChatId()), null);
+        aboutWrapper = new TextWrapper(tdlib, text, Paints.robotoStyleProvider(15f), TextColorSets.Regular.NORMAL, new TdlibUi.UrlOpenParameters().sourceChat(getChatId()), null);
         aboutWrapper.addTextFlags(Text.FLAG_CUSTOM_LONG_PRESS | (Lang.rtl() ? Text.FLAG_ALIGN_RIGHT : 0));
         aboutWrapper.prepare(getTextWidth(Screen.currentWidth()));
       } else {

File: app/src/main/java/org/thunderdog/challegram/widget/EmojiPacksInfoView.java
Patch:
@@ -87,7 +87,7 @@ private void updateImpl (long firstEmojiId, int emojiPacksCount, ClickableSpan o
         info != null ? info.title : Lang.getString(R.string.LoadingMessageEmojiPack)
       );
     } else {
-      link = Lang.plural(R.string.xEmojiPacks, emojiPacksCount);;
+      link = Lang.plural(R.string.xEmojiPacks, emojiPacksCount);
     }
     String text = Lang.getString(isSingle ? R.string.EmojiUsedFromSingle : R.string.EmojiUsedFromX, link);
 
@@ -105,7 +105,7 @@ private void updateImpl (long firstEmojiId, int emojiPacksCount, ClickableSpan o
         formattedTextRaw = new TdApi.FormattedText(text, emojiStart >= linkStart ? new TdApi.TextEntity[]{
           new TdApi.TextEntity(linkStart, link.length(), new TdApi.TextEntityTypeUrl()),
           new TdApi.TextEntity(emojiStart, 1, new TdApi.TextEntityTypeCustomEmoji(firstEmojiId))
-        }: new TdApi.TextEntity[]{
+        } : new TdApi.TextEntity[]{
           new TdApi.TextEntity(emojiStart, 1, new TdApi.TextEntityTypeCustomEmoji(firstEmojiId)),
           new TdApi.TextEntity(linkStart, link.length(), new TdApi.TextEntityTypeUrl())
         });

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -7220,6 +7220,8 @@ public void openBirthdateEditor (ViewController<?> context, View view, @Birthdat
               });
             }
           });
+        } else if (id == R.id.btn_suggestion) {
+          context.tdlib().send(new TdApi.HideSuggestedAction(new TdApi.SuggestedActionSetBirthdate()), tdlib.typedOkHandler());
         }
         return true;
       });

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -63,7 +63,6 @@
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.data.TGFoundChat;
-import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.data.TGUser;
 import org.thunderdog.challegram.data.ThreadInfo;
 import org.thunderdog.challegram.data.TranslationsManager;
@@ -1782,7 +1781,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
           view.setData(R.string.Birthdate);
           TdApi.Birthdate birthdate = userFull != null ? userFull.birthdate : null;
           if (birthdate != null) {
-            view.setName(Lang.getBirthdate(birthdate, true));
+            view.setName(Lang.getBirthdate(birthdate, true, tdlib.isSelfUserId(user.id)));
           } else {
             view.setName(Lang.getString(R.string.LoadingInformation));
           }
@@ -4771,7 +4770,7 @@ public void onClick (View v) {
     } else if (viewId == R.id.btn_birthdate) {
       TdApi.Birthdate birthdate = userFull != null ? userFull.birthdate : null;
       if (birthdate != null) {
-        CharSequence text = Lang.getBirthdate(birthdate, false);
+        CharSequence text = Lang.getBirthdate(birthdate, false, tdlib.isSelfUserId(user.id));
         showOptions(text,
           new int[] {R.id.btn_copyText},
           new String[] {Lang.getString(R.string.Copy)},

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -1421,7 +1421,7 @@ public void onClick (View v) {
       adapter.processToggle(v, item, toggleValue);
       tdlib.context().setForceEnableNotifications(selectedAccount.id, toggleValue);
       if (selectedAccount.id == tdlib.id()) {
-        context.getDrawer().checkSettingsError(); // FIXME re-work to listeners
+        context.getDrawer().checkSettingsClickBait(); // FIXME re-work to listeners
       }
       updateNotificationModeHint(true);
       tdlib.context().onUpdateNotifications(null, notificationAccount -> notificationAccount.id == selectedAccount.id);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsPrivacyKeyController.java
Patch:
@@ -554,7 +554,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
             }
             case TdApi.UserPrivacySettingShowStatus.CONSTRUCTOR: {
               view.setEnabledAnimated(readDatePrivacySetting != null, isUpdate);
-              view.getToggler().setRadioEnabled(readDatePrivacySetting != null && readDatePrivacySetting.showReadDate, isUpdate);
+              view.getToggler().setRadioEnabled(readDatePrivacySetting != null && !readDatePrivacySetting.showReadDate, isUpdate);
               break;
             }
             default:
@@ -734,7 +734,7 @@ public void onClick (View v) {
         }
         case TdApi.UserPrivacySettingShowStatus.CONSTRUCTOR: {
           if (readDatePrivacySetting != null) {
-            readDatePrivacySetting.showReadDate = adapter.toggleView(v);
+            readDatePrivacySetting.showReadDate = !adapter.toggleView(v);
             tdlib.send(new TdApi.SetReadDatePrivacySettings(readDatePrivacySetting), tdlib.typedOkHandler());
           }
           break;

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomBar.java
Patch:
@@ -191,7 +191,7 @@ private void updateBarMetrics () {
 
     int totalWidth;
     if (itemWidth > maxItemWidth) {
-      this.itemStartX = (maxItemWidth * items.length - barWidth) / 2;
+      this.itemStartX = (barWidth - maxItemWidth * items.length) / 2;
       totalWidth = maxItemWidth * items.length;
       itemWidth = maxItemWidth;
     } else {

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomBaseController.java
Patch:
@@ -147,7 +147,7 @@ protected final void initMetrics () { // FIXME make private again and move calli
   }
 
   private int getBarHeightIfAvailable () {
-    return mediaLayout.inSpecificMode() ? 0 : MediaBottomBar.getBarHeight();
+    return mediaLayout.inSpecificMode() && mediaLayout.getMode() != MediaLayout.MODE_CUSTOM_ADAPTER ? 0 : MediaBottomBar.getBarHeight();
   }
 
   private void resetStartHeights (boolean initial) {

File: app/src/main/java/org/thunderdog/challegram/mediaview/data/MediaStack.java
Patch:
@@ -233,7 +233,7 @@ public MediaItem getPrevious () {
 
   // appliers
 
-  private void notifyMediaChanged (boolean itemCountChanged) {
+  public void notifyMediaChanged (boolean itemCountChanged) {
     if (callback != null) {
       callback.onMediaChanged(estimatedBefore + currentIndex, getEstimatedSize(), items.get(currentIndex), itemCountChanged);
     }

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -498,7 +498,7 @@ public static void startForeground (Service service, int notificationId, Notific
             knownType = android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_SHORT_SERVICE;
           } else {
             // FOREGROUND_SERVICE_TYPE_SHORT_SERVICE was added in Android 14.
-            knownType = (1 << 11);
+            knownType = android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MANIFEST;
           }
           break;
       }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationStyle.java
Patch:
@@ -1000,14 +1000,14 @@ private void addMessage (NotificationCompat.MessagingStyle style, CharSequence m
     style.addMessage(new NotificationCompat.MessagingStyle.Message(Lang.getSilentNotificationTitle(messageText, false, tdlib.isSelfChat(chat), tdlib.isMultiChat(chat), tdlib.isChannelChat(chat), isExclusivelyScheduled, isExclusivelySilent), TimeUnit.SECONDS.toMillis(notification.getDate()), person));
   }
 
+  @SuppressWarnings("deprecation")
   public static NotificationCompat.MessagingStyle newMessagingStyle (TdlibNotificationManager context, TdApi.Chat chat, int messageCount, boolean areMentions, boolean arePinned, boolean areOnlyScheduled, boolean areOnlySilent, boolean allowDownload) {
     Tdlib tdlib = context.tdlib();
     TdApi.User user = context.myUser();
     NotificationCompat.MessagingStyle style;
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && user != null) {
       style = new NotificationCompat.MessagingStyle(buildPerson(context, tdlib.isSelfChat(chat), tdlib.isMultiChat(chat), tdlib.isChannelChat(chat), user, null, false, false, allowDownload));
     } else {
-      //noinspection deprecation
       style = new NotificationCompat.MessagingStyle("");
     }
 

File: app/src/main/java/org/thunderdog/challegram/config/Device.java
Patch:
@@ -190,6 +190,6 @@ private static int parseProduct (int manufacturer, String product) {
 
   public static final boolean FLYME = !StringUtils.isEmpty(Build.DISPLAY) && Build.DISPLAY.toLowerCase().contains("flyme");
 
-  // Android >= 13 has builtin clipboard toasts, but MIUI based on Android 13 ships without them
-  public static final boolean HAS_BUILTIN_CLIPBOARD_TOASTS = IS_XIAOMI ? Build.VERSION.SDK_INT > Build.VERSION_CODES.TIRAMISU : Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU;
+  // Android >= 13 has builtin clipboard toasts, but MIUI/HyperOs ships without them
+  public static final boolean HAS_BUILTIN_CLIPBOARD_TOASTS = !IS_XIAOMI && Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU;
 }

File: app/src/main/java/org/thunderdog/challegram/MainActivity.java
Patch:
@@ -88,6 +88,7 @@
 import org.thunderdog.challegram.ui.SettingsPrivacyController;
 import org.thunderdog.challegram.ui.SettingsPrivacyKeyController;
 import org.thunderdog.challegram.ui.SettingsThemeController;
+import org.thunderdog.challegram.ui.EditChatFolderInviteLinkController;
 import org.thunderdog.challegram.unsorted.Settings;
 import org.thunderdog.challegram.util.Crash;
 import org.thunderdog.challegram.widget.GearView;
@@ -1245,6 +1246,8 @@ private static ViewController<?> restoreController (BaseActivity context, Tdlib
       restore = new SettingsFoldersController(context, tdlib);
     } else if (id == R.id.controller_editChatFolders) {
       restore = new EditChatFolderController(context, tdlib);
+    } else if (id == R.id.controller_editChatFolderInviteLink) {
+      restore = new EditChatFolderInviteLinkController(context, tdlib);
     } else if (id == R.id.controller_bug_killer) {
       restore = new SettingsBugController(context, tdlib);
     } else {

File: app/src/main/java/org/thunderdog/challegram/component/user/UserView.java
Patch:
@@ -462,7 +462,7 @@ public List<DrawModifier> getDrawModifiers () {
 
   public void setChecked (boolean isChecked, boolean animated) {
     if (checkBoxHelper == null) {
-      checkBoxHelper = new SimplestCheckBoxHelper(this, avatarReceiver);
+      checkBoxHelper = new SimplestCheckBoxHelper(this);
     }
     checkBoxHelper.setIsChecked(isChecked, animated);
   }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -35,6 +35,7 @@ public class Config {
   public static final boolean CHAT_FOLDERS_SMART_CHAT_DELETION_ENABLED = true;
   public static final boolean CHAT_FOLDERS_HIDE_BOTTOM_BAR_ON_SCROLL = true;
   public static final boolean CHAT_FOLDERS_APPEARANCE_IS_GLOBAL = true;
+  public static final boolean CHAT_FOLDERS_REDESIGN = true;
   public static final boolean RESTRICT_HIDING_MAIN_LIST = true;
   public static final boolean SEARCH_MESSAGES_ONLY_IN_SELECTED_FOLDER = BuildConfig.EXPERIMENTAL;
 

File: app/src/main/java/org/thunderdog/challegram/data/TGCommentButton.java
Patch:
@@ -450,7 +450,7 @@ private void drawInline (@NonNull MessageView view, @NonNull Canvas c, @NonNull
 
     int avatarsX = right - (useBubbles ? Screen.dp(16f) : Screen.dp(38f));
     int avatarsY = rect.centerY();
-    avatars.draw(view, c, view.getAvatarsReceiver(), avatarsX, avatarsY, Gravity.RIGHT, alpha);
+    avatars.draw(c, view.getAvatarsReceiver(), avatarsX, avatarsY, Gravity.RIGHT, alpha);
 
     int badgeX = avatarsX - Math.round(avatars.getAnimatedWidth()) - Screen.dp(8f) - Screen.dp(BADGE_RADIUS);
     int badgeY = rect.centerY();
@@ -511,7 +511,7 @@ private void drawBubble (@NonNull MessageView view, @NonNull Canvas c, @NonNull
 
     int avatarsX = right - Screen.dp(6f);
     int avatarsY = rect.centerY();
-    avatars.draw(view, c, view.getAvatarsReceiver(), avatarsX, avatarsY, Gravity.RIGHT, alpha);
+    avatars.draw(c, view.getAvatarsReceiver(), avatarsX, avatarsY, Gravity.RIGHT, alpha);
 
     float badgeX = avatarsX - avatars.getAnimatedWidth() - Screen.dp(8f) - Screen.dp(BADGE_RADIUS);
     float badgeY = rect.centerY();

File: app/src/main/java/org/thunderdog/challegram/data/TGReactions.java
Patch:
@@ -1025,7 +1025,7 @@ public void drawReactionInBubble (MessageView view, Canvas c, float x, float y,
 
       if (visibility > 0f) {
         c.drawRoundRect(rect, radius, radius, Paints.fillingPaint( ColorUtils.alphaColor(alpha, backgroundColor)));
-        avatars.draw(view, c, view.getReactionAvatarsReceiver(), avatarsX, getReactionBubbleHeight() / 2, Gravity.LEFT, alpha);
+        avatars.draw(c, view.getReactionAvatarsReceiver(), avatarsX, getReactionBubbleHeight() / 2, Gravity.LEFT, alpha);
         counter.draw(c, textX, getReactionBubbleHeight() / 2f, Gravity.LEFT, alpha, view, ColorId.badgeFailedText);
         if (!isHidden) {
           drawReceiver(c, Screen.dp(-1), imgY, Screen.dp(-1) + imageSize, imgY + imageSize, alpha);

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerController.java
Patch:
@@ -660,9 +660,9 @@ protected long getPagerItemId (int position) {
   }
   protected abstract void onCreateView (Context context, FrameLayoutFix contentView, ViewPager pager);
   protected abstract ViewController<?> onCreatePagerItemForPosition (Context context, int position);
-  protected @Nullable abstract String[] getPagerSections ();
+  protected @Nullable abstract CharSequence[] getPagerSections ();
   protected @Nullable List<ViewPagerTopView.Item> getPagerSectionItems () {
-    String[] pagerSections = getPagerSections();
+    CharSequence[] pagerSections = getPagerSections();
     if (pagerSections == null) {
       return cachedPagerSectionItems = null;
     }
@@ -682,7 +682,7 @@ protected long getPagerItemId (int position) {
       }
     }
     List<ViewPagerTopView.Item> pagerSectionItems = new ArrayList<>(pagerSections.length);
-    for (String pagerSection : pagerSections) {
+    for (CharSequence pagerSection : pagerSections) {
       pagerSectionItems.add(new ViewPagerTopView.Item(pagerSection));
     }
     cachedPagerSectionItems = pagerSectionItems;

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatFolderStyle.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 
 @Retention(RetentionPolicy.SOURCE)
-@IntDef({ChatFolderStyle.LABEL_ONLY, ChatFolderStyle.ICON_ONLY, ChatFolderStyle.LABEL_AND_ICON})
+@IntDef({ChatFolderStyle.LABEL_ONLY, ChatFolderStyle.ICON_ONLY, ChatFolderStyle.LABEL_AND_ICON, ChatFolderStyle.ICON_WITH_LABEL_ON_ACTIVE})
 public @interface ChatFolderStyle {
-  int LABEL_ONLY = 0, ICON_ONLY = 1, LABEL_AND_ICON = 2;
+  int LABEL_ONLY = 0, ICON_ONLY = 1, LABEL_AND_ICON = 2, ICON_WITH_LABEL_ON_ACTIVE = 3;
 }

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsPagerController.java
Patch:
@@ -114,7 +114,7 @@ public MessageOptionsPagerController (Context context, Tdlib tdlib, Options opti
         .drawable(R.drawable.baseline_favorite_16, 16f, 6f, Gravity.LEFT)
         .build(), this, Screen.dp(16));
       counters[ALL_REACTED_POSITION].counter.setCount(message.getMessageReactions().getTotalCount(), false);
-      state.headerAlwaysVisibleCountersWidth += counters[ALL_REACTED_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING));
+      state.headerAlwaysVisibleCountersWidth += counters[ALL_REACTED_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING), /* labelFactor */ 1f);
     } else {
       ALL_REACTED_POSITION = -1;
     }
@@ -126,7 +126,7 @@ public MessageOptionsPagerController (Context context, Tdlib tdlib, Options opti
         .drawable(R.drawable.baseline_visibility_16, 16f, 6f, Gravity.LEFT)
         .build(), this, Screen.dp(16));
       counters[SEEN_POSITION].counter.setCount(1, false);
-      int itemWidth = counters[SEEN_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING)); // - Screen.dp(16);
+      int itemWidth = counters[SEEN_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING), /* labelFactor */ 1f); // - Screen.dp(16);
       state.headerAlwaysVisibleCountersWidth += itemWidth;
       counters[SEEN_POSITION].setStaticWidth(itemWidth - Screen.dp(16));
       counters[SEEN_POSITION].counter.setCount(Tdlib.CHAT_LOADING, false);

File: app/src/main/java/org/thunderdog/challegram/ui/SetSenderControllerPage.java
Patch:
@@ -207,14 +207,14 @@ private DoubleTextWrapper parseObject (TdApi.Object object) {
           DoubleTextWrapper d = new DoubleTextWrapper(tdlib, Td.getSenderUserId(sender.sender), true);
           d.setChatMessageSender(sender);
           d.setForcedSubtitle(Lang.getString(R.string.YourAccount));
-          d.setDrawFakeCheckbox(Td.getSenderId(currentSender) == Td.getSenderId(sender.sender));
+          d.setIsChecked(Td.getSenderId(currentSender) == Td.getSenderId(sender.sender), /* animated */ false);
           return d;
         } else {
           TdApi.Chat chat = tdlib.chat(Td.getSenderId(sender.sender));
           if (chat != null) {
             DoubleTextWrapper d = new DoubleTextWrapper(tdlib, chat);
             d.setChatMessageSender(sender);
-            d.setDrawFakeCheckbox(Td.getSenderId(currentSender) == Td.getSenderId(sender.sender));
+            d.setIsChecked(Td.getSenderId(currentSender) == Td.getSenderId(sender.sender), /* animated */ false);
             if (Td.getSenderId(sender.sender) == this.chat.id) {
               d.setForcedSubtitle(Lang.getString(R.string.AnonymousAdmin));
             } else {

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -946,7 +946,7 @@ protected View onCreateView (Context context) {
     headerCell.initWithMargin(Screen.dp(56f) * getMenuItemCount(), false);
     headerCell.setThemedTextColor(ColorId.text, ColorId.textLight, this);
     updateHeader();
-    if (Settings.instance().chatFoldersEnabled() && TD.isChatListMain(displayingChatList) && tdlib.chatFoldersCount() > 0) {
+    if (Settings.instance().chatFoldersEnabled() && TD.isChatListMain(displayingChatList) && tdlib.chatFolderCount() > 0) {
       headerCell.setTitle(R.string.CategoryMain);
       headerCell.setTitleIcon(R.drawable.baseline_keyboard_arrow_down_20);
       headerCell.setOnClickListener(v -> {

File: app/src/main/java/org/thunderdog/challegram/widget/BetterChatView.java
Patch:
@@ -147,7 +147,7 @@ public void performDestroy () {
   public void setIsChecked (boolean isChecked, boolean animated) {
     if (isChecked != (checkBoxHelper != null && checkBoxHelper.isChecked())) {
       if (checkBoxHelper == null) {
-        checkBoxHelper = new SimplestCheckBoxHelper(this, avatarReceiver);
+        checkBoxHelper = new SimplestCheckBoxHelper(this);
       }
       checkBoxHelper.setIsChecked(isChecked, animated);
     }

File: app/src/main/java/org/thunderdog/challegram/widget/VerticalChatView.java
Patch:
@@ -78,7 +78,7 @@ public VerticalChatView (@NonNull Context context, Tdlib tdlib) {
   public void setIsChecked (boolean isChecked, boolean animated) {
     if (isChecked != (checkBoxHelper != null && checkBoxHelper.isChecked())) {
       if (checkBoxHelper == null) {
-        checkBoxHelper = new SimplestCheckBoxHelper(this, avatarReceiver);
+        checkBoxHelper = new SimplestCheckBoxHelper(this);
       }
       checkBoxHelper.setIsChecked(isChecked, animated);
     }

File: app/src/main/java/org/thunderdog/challegram/receiver/TGRemoveAllReceiver.java
Patch:
@@ -25,6 +25,6 @@ public class TGRemoveAllReceiver extends BroadcastReceiver {
   @Override
   public void onReceive (Context context, Intent intent) {
     TdlibNotificationExtras extras = TdlibNotificationExtras.parseCategory(intent.getExtras());
-    TdlibManager.performExternalAction(context, TdlibManager.EXTERNAL_ACTION_MARK_ALL_AS_HIDDEN, extras);
+    TdlibManager.performExternalAction(context, TdlibManager.ExternalAction.MARK_ALL_AS_HIDDEN, extras);
   }
 }

File: app/src/main/java/org/thunderdog/challegram/receiver/TGRemoveReceiver.java
Patch:
@@ -25,6 +25,6 @@ public class TGRemoveReceiver extends BroadcastReceiver {
   @Override
   public void onReceive (Context context, Intent intent) {
     TdlibNotificationExtras extras = TdlibNotificationExtras.parse(intent.getExtras());
-    TdlibManager.performExternalAction(context, TdlibManager.EXTERNAL_ACTION_MARK_AS_HIDDEN, extras);
+    TdlibManager.performExternalAction(context, TdlibManager.ExternalAction.MARK_AS_HIDDEN, extras);
   }
 }

File: app/src/main/java/org/thunderdog/challegram/tool/Intents.java
Patch:
@@ -101,6 +101,7 @@ public class Intents {
 
   public static final String ACTION_MESSAGE_REPLY = PACKAGE_NAME + ".ACTION_MESSAGE_REPLY";
   public static final String ACTION_MESSAGE_MUTE = PACKAGE_NAME + ".ACTION_MESSAGE_MUTE";
+  public static final String ACTION_MESSAGE_UNMUTE = PACKAGE_NAME + ".ACTION_MESSAGE_UNMUTE";
   public static final String ACTION_MESSAGE_READ = PACKAGE_NAME + ".ACTION_MESSAGE_READ";
   /// public static final String ACTION_MESSAGE_HIDE = PACKAGE_NAME + ".ACTION_MESSAGE_HIDE";
   public static final String ACTION_MESSAGE_HEARD = PACKAGE_NAME + ".ACTION_MESSAGE_HEARD"; // chat_id, last_message_id

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibMessageViewer.java
Patch:
@@ -869,9 +869,6 @@ private void checkNeedRestrictScreenshots () {
     }
     if (this.needRestrictScreenshots != needRestrictScreenshots) {
       this.needRestrictScreenshots = needRestrictScreenshots;
-      if (BuildConfig.DEBUG) {
-        UI.showToast("update restrictScreenshots to " + needRestrictScreenshots, Toast.LENGTH_SHORT);
-      }
       for (Listener listener : listeners) {
         listener.onNeedRestrictScreenshots(this, needRestrictScreenshots);
       }

File: app/src/main/java/org/thunderdog/challegram/player/RoundVideoRecorder.java
Patch:
@@ -747,7 +747,7 @@ private void doDestroy () {
     }
   }
 
-  private boolean doCapture () {
+  public boolean isCapturing () {
     return isCapturing || finishCapture || recording;
   }
 
@@ -764,7 +764,7 @@ private void onDraw(Integer cameraId) {
     }
     cameraSurface.updateTexImage();
 
-    if (doCapture()) {
+    if (isCapturing()) {
       if (!recording) {
         int resolution;
         int bitrate;

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraController.java
Patch:
@@ -1256,7 +1256,6 @@ private boolean applyFakeRotation () {
       }
 
       int prevOrientation = context().getCurrentOrientation();
-      context().lockOrientation(requestedOrientation);
       checkDisplayRotation();
       return (prevOrientation == ActivityInfo.SCREEN_ORIENTATION_PORTRAIT) != (requestedOrientation == ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
     }
@@ -1276,7 +1275,7 @@ public void onFactorChanged (int id, float factor, float fraction, FactorAnimato
   public void onFactorChangeFinished (int id, float finalFactor, FactorAnimator callee) {
     switch (id) {
       case ANIMATOR_ROTATION:
-        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR2) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR2 && finalFactor % 90.0f == 0.0f) {
           applyFakeRotation();
         }
         break;

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraTextureView.java
Patch:
@@ -64,7 +64,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
 
     if (!ignoreAspectRatio && ratioWidth > 0 && ratioHeight > 0) {
       int width, height;
-      if (viewWidth < viewHeight * ratioWidth / ratioHeight) {
+      if (viewWidth < viewHeight * ((float) ratioWidth / (float) ratioHeight)) {
         width = viewWidth;
         height = (int) ((float) viewWidth * ((float) ratioHeight / (float) ratioWidth));
       } else {
@@ -73,7 +73,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
       }
 
       float ratio = Math.max((float) viewWidth / (float) width, (float) viewHeight / (float) height);
-      if (ratio > 1f) {
+      if (ratio != 1f) {
         width *= ratio;
         height *= ratio;
       }

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -10377,7 +10377,7 @@ public void findUpdateFile (@NonNull RunnableData<UpdateFileInfo> onDone) {
           version = document.fileName.substring(prefix.length(), i == -1 ? document.fileName.length() : i);
           if (version.matches("^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$")) {
             buildNo = StringUtils.parseInt(version.substring(version.lastIndexOf('.') + 1));
-            if (buildNo > BuildConfig.ORIGINAL_VERSION_CODE || BuildConfig.DEBUG) {
+            if (buildNo > BuildConfig.ORIGINAL_VERSION_CODE) {
               ok = true;
             }
           }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsBugController.java
Patch:
@@ -58,7 +58,7 @@
 import org.thunderdog.challegram.ui.camera.CameraController;
 import org.thunderdog.challegram.unsorted.Settings;
 import org.thunderdog.challegram.unsorted.Test;
-import org.thunderdog.challegram.util.AppInstallationUtil;
+import org.thunderdog.challegram.util.AppUpdater;
 import org.thunderdog.challegram.util.Crash;
 import org.thunderdog.challegram.util.StringList;
 import org.thunderdog.challegram.v.CustomRecyclerView;
@@ -395,7 +395,7 @@ private CharSequence getCrashGuide () {
       default:
         return null;
     }
-    return Lang.getMarkdownStringSecure(this, resId, getDiskAvailableInfo(), AppInstallationUtil.getDownloadUrl(null).url);
+    return Lang.getMarkdownStringSecure(this, resId, getDiskAvailableInfo(), AppUpdater.getDownloadUrl(null).url);
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsThemeController.java
Patch:
@@ -55,7 +55,6 @@
 import org.thunderdog.challegram.tool.Strings;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.unsorted.Settings;
-import org.thunderdog.challegram.util.AppInstallationUtil;
 import org.thunderdog.challegram.util.AppUpdater;
 import org.thunderdog.challegram.util.DrawableModifier;
 import org.thunderdog.challegram.util.Permissions;
@@ -72,6 +71,7 @@
 import java.util.List;
 import java.util.TimeZone;
 
+import me.vkryl.android.AppInstallationUtil;
 import me.vkryl.core.BitwiseUtils;
 import me.vkryl.core.DateUtils;
 import me.vkryl.core.MathUtils;
@@ -529,7 +529,7 @@ public void onRemove (RecyclerView.ViewHolder viewHolder) {
       }*/
       items.add(new ListItem(ListItem.TYPE_SHADOW_BOTTOM));
 
-      if (AppInstallationUtil.isAppSideLoaded()) {
+      if (AppInstallationUtil.isAppSideLoaded(UI.getAppContext())) {
         items.addAll(Arrays.asList(
           new ListItem(ListItem.TYPE_HEADER, 0, 0, R.string.InAppUpdates),
           new ListItem(ListItem.TYPE_SHADOW_TOP),
@@ -553,7 +553,7 @@ public void onRemove (RecyclerView.ViewHolder viewHolder) {
       items.add(new ListItem(ListItem.TYPE_HEADER, 0, 0, R.string.Chats));
       items.add(new ListItem(ListItem.TYPE_SHADOW_TOP));
 
-      boolean sideLoaded = AppInstallationUtil.isAppSideLoaded();
+      boolean sideLoaded = AppInstallationUtil.isAppSideLoaded(UI.getAppContext());
       if (tdlib.canIgnoreSensitiveContentRestriction() && (sideLoaded || tdlib.ignoreSensitiveContentRestrictions())) {
         items.add(new ListItem(ListItem.TYPE_SEPARATOR_FULL));
         items.add(new ListItem(ListItem.TYPE_RADIO_SETTING, R.id.btn_restrictSensitiveContent, 0, R.string.DisplaySensitiveContent));

File: app/src/main/java/org/thunderdog/challegram/unsorted/Settings.java
Patch:
@@ -6203,7 +6203,7 @@ public boolean isEmulatorDetected () {
     }
 
     public String toHumanReadableFormat () {
-      return Long.toString(result, 16);
+      return "0x" + Long.toString(result, 16);
     }
 
     public long[] toLongArray () {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageGiveawayBase.java
Patch:
@@ -100,7 +100,7 @@ protected final void buildContent (int maxWidth) {
   }
 
   @Override
-  public boolean isValidPosition (int x, int y) {
+  public boolean isValidPosition (float x, float y) {
     return y < content.getHeight() && content.isValidPosition(x - (useFullWidthParticles ? getContentX() : 0) - Screen.dp(CONTENT_PADDING_DP), y);
   }
 
@@ -246,7 +246,7 @@ public boolean performLongPress (View view, float x, float y) {
     private final RectF tmpRectF = new RectF();
 
     @Override
-    public boolean isValidPosition (int x, int y) {
+    public boolean isValidPosition (float x, float y) {
       for (ContentPart p : parts) {
         int w = p.getWidth();
         int h = p.getHeight();

File: app/src/main/java/org/thunderdog/challegram/widget/GiftHeaderView.java
Patch:
@@ -79,7 +79,7 @@ private void buildContent () {
   }
 
   @Override
-  public boolean isValidPosition (int x, int y) {
+  public boolean isValidPosition (float x, float y) {
     return content == null || content.isValidPosition(x - Screen.dp(60), y - contentY);
   }
 

File: app/src/main/java/org/thunderdog/challegram/util/EmojiStatusHelper.java
Patch:
@@ -485,6 +485,8 @@ public void onAppear () {
 
     long emojiStatusId = user.emojiStatus.customEmojiId;
     TdApi.TextEntity emoji = new TdApi.TextEntity(0, 1, new TdApi.TextEntityTypeCustomEmoji(emojiStatusId));
-    return new TdApi.FormattedText("*", new TdApi.TextEntity[] {emoji});
+    return new TdApi.FormattedText(EMOJI, new TdApi.TextEntity[] {emoji});
   }
+
+  public static final String EMOJI = "*";
 }

File: app/src/main/java/org/thunderdog/challegram/widget/ForceTouchView.java
Patch:
@@ -315,7 +315,7 @@ public void initWithContext (ForceTouchContext context) {
         headerView.setIgnoreCustomHeight();
         headerView.setInnerMargins(Screen.dp(8f), Screen.dp(8f));
         headerView.setTextColors(Theme.textAccentColor(), Theme.textDecentColor());
-        if (context.boundDataType != 0 && context.boundDataId != 0) {
+        if (context.boundDataType != 0 && (context.boundDataId != 0 || context.boundDataType == DataType.ACCOUNT)) {
           switch (context.boundDataType) {
             case DataType.CHAT:
               setupChat(context.boundDataId, (ThreadInfo) context.boundArg1, headerView);

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -10693,6 +10693,9 @@ public boolean suggestConvertToBroadcastGroup (long chatId) {
     if (supergroup == null || supergroup.isChannel || supergroup.isBroadcastGroup || !TD.isCreator(supergroup.status)) {
       return false;
     }
+    if (isDebugInstance() || BuildConfig.DEBUG) {
+      return true;
+    }
     synchronized (dataLock) {
       for (TdApi.SuggestedAction action : suggestedActions) {
         if (action.getConstructor() == TdApi.SuggestedActionConvertToBroadcastGroup.CONSTRUCTOR) {

File: app/src/main/java/org/thunderdog/challegram/ui/InstantViewController.java
Patch:
@@ -127,8 +127,9 @@ public boolean canSlideBackFrom (NavigationController navigationController, fina
           return child == null || y < child.getTop() || y >= child.getBottom() || wrapView.getViewPagerPosition() == 0f;
         }
         case PageBlockWrapView.MODE_TABLE: {
-          View child = ((ViewGroup) wrapView.getChildAt(0)).getChildAt(0);
-          return child == null || y < child.getTop() || y >= child.getBottom() || child.getLeft() >= 0;
+          ViewGroup vg = (ViewGroup) wrapView.getChildAt(0);
+          View child = vg.getChildAt(0);
+          return child == null || y < child.getTop() || y >= child.getBottom() || vg.getScrollX() == 0;
         }
       }
       return false;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -482,7 +482,7 @@ void onUpdateUser (TdApi.UpdateUser update) {
 
     if (isMe) {
       if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-        TdlibNotificationChannelGroup.updateGroup(newUser);
+        TdlibNotificationChannelGroup.updateGroup(newUser, tdlib.account().isDebug());
       }
       tdlib.context().onUpdateAccountProfile(tdlib.id(), newUser, !hadUser);
     } else {

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -1537,7 +1537,7 @@ public boolean checkChangeLogs (boolean alreadySent, boolean test) {
         makeUpdateText(0, 25, 10, APP_RELEASE_VERSION_2023_AUGUST, "https://telegra.ph/Telegram-X-08-02", functions, updates, false);
       }
       if (checkVersion(prevVersion, APP_RELEASE_VERSION_2023_DECEMBER, test)) {
-        makeUpdateText(0, 25, 10, APP_RELEASE_VERSION_2023_DECEMBER, "https://telegra.ph/Telegram-X-2023-12-31", functions, updates, true);
+        makeUpdateText(0, 26, 3, APP_RELEASE_VERSION_2023_DECEMBER, "https://telegra.ph/Telegram-X-2023-12-31", functions, updates, true);
       }
       if (!updates.isEmpty()) {
         incrementReferenceCount(REFERENCE_TYPE_JOB); // starting task

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -2299,7 +2299,9 @@ public void onMessageContentChanged (long chatId, long messageId, TdApi.MessageC
         MediaItem newItem = MediaItem.valueOf(context(), tdlib, message);
         if (newItem != null) {
           replaceMedia(index, oldItem, newItem);
-          headerCell.setSubtitle(genSubtitle());
+          if (headerCell != null) {
+            headerCell.setSubtitle(genSubtitle());
+          }
         } else if (stack.getCurrentIndex() == index) {
           // if (message.selfDestructType == null || message.selfDestructType.getConstructor() != TdApi.MessageSelfDestructTypeImmediately.CONSTRUCTOR) {
             forceClose();

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -3773,7 +3773,7 @@ public boolean needNext () {
                 public void onPasswordConfirmed (ViewController<?> c, String password) {
                   EditDeleteAccountReasonController target = new EditDeleteAccountReasonController(context.context(), tdlib);
                   target.setArguments(password);
-                  context.navigateTo(target);
+                  c.navigateTo(target);
                 }
               });
             });

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -5617,7 +5617,7 @@ public boolean onMessageSendAcknowledged (long messageId) {
   }
 
   public boolean allowInteraction () {
-    return !isEventLog() && !isThreadHeader();
+    return !isFakeMessage() && !isEventLog() && !isThreadHeader();
   }
 
   public boolean canReplyTo () {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -268,13 +268,13 @@ public void onUiStateChanged (int newState) {
   public void getInviteText (@Nullable final RunnableData<TdApi.Text> callback) {
     getDownloadUrl(httpUrl -> {
       if (callback != null) {
-        String text = Lang.getString(R.string.InviteText, BuildConfig.PROJECT_NAME, httpUrl);
+        String text = Lang.getString(R.string.InviteText, BuildConfig.PROJECT_NAME, httpUrl.url);
         callback.runWithData(new TdApi.Text(text));
       }
     });
   }
 
-  private AppInstallationUtil.DownloadUrl toDownloadUrl (@Nullable TdApi.HttpUrl url) {
+  private @NonNull AppInstallationUtil.DownloadUrl toDownloadUrl (@Nullable TdApi.HttpUrl url) {
     if (url != null && tdlib.hasUrgentInAppUpdate()) {
       return new AppInstallationUtil.DownloadUrl(AppInstallationUtil.InstallerId.UNKNOWN, url.url);
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/ReplyComponent.java
Patch:
@@ -884,6 +884,9 @@ private void setMessage (TdApi.Message msg, boolean forceRequestImage, boolean f
       }
     }
     String title = computeTitleText(null);
+    if (parent != null) {
+      UI.execute(parent::onReplyLoaded);
+    }
     if (Thread.currentThread() == Background.instance().thread() || forceLocal) {
       this.content = new ContentPreview(translatedText, contentPreview);
       setTitleImpl(title);

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/ChatView.java
Patch:
@@ -623,8 +623,8 @@ protected void onDraw (Canvas c) {
       Drawables.drawRtl(c, Icons.getClockIcon(ColorId.iconLight), x, getClockTop(chatListMode) - Screen.dp(Icons.CLOCK_SHIFT_Y), Paints.getIconLightPorterDuffPaint(), viewWidth, rtl);
     } else {
       int x = chat.getChecksRight();
+      int y = getClockTop(chatListMode);
       if (chat.isOutgoing() && !chat.isSelfChat()) {
-        int y = getClockTop(chatListMode);
         if (chat.showViews()) {
           y -= Screen.dp(.5f);
         } else if (chat.isUnread()) {
@@ -637,11 +637,11 @@ protected void onDraw (Canvas c) {
           int iconX = x - Screen.dp(Icons.TICKS_SHIFT_X) - Screen.dp(14f);
           boolean unread = chat.isUnread();
           Drawables.drawRtl(c, unread ? Icons.getSingleTick(ColorId.ticks) : Icons.getDoubleTick(ColorId.ticks), iconX, y - Screen.dp(Icons.TICKS_SHIFT_Y), unread ? Paints.getTicksPaint() : Paints.getTicksReadPaint(), viewWidth, rtl);
-          x -= Screen.dp(24 + 3);
+          x -= Screen.dp(24 - 8 + 3);
         }
       }
       if (chat.needDrawReactionsPreview()) {
-        chat.getReactionsCounterDrawable().draw(c, x - chat.getReactionsWidth(), getClockTop(chatListMode) + Screen.dp(7f));
+        chat.getReactionsCounterDrawable().draw(c, x - chat.getReactionsWidth(), y + Screen.dp(6f));
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSmallView.java
Patch:
@@ -325,7 +325,7 @@ default void onStickerPreviewChanged (StickerSmallView view, TGStickerObj otherO
     default int getStickerViewTop (StickerSmallView v) { return -1; }
     default StickerSmallView getStickerViewUnder (StickerSmallView v, int x, int y) { return null; }
     default TGReaction getReactionForPreview (StickerSmallView v) { return null; }
-    default void onSetEmojiStatusFromPreview (StickerSmallView view, View clickView, TGStickerObj sticker, long emojiId, int duration) { }
+    default void onSetEmojiStatusFromPreview (StickerSmallView view, View clickView, TGStickerObj sticker, long emojiId, long expirationDate) { }
   }
 
   private @Nullable StickerMovementCallback callback;
@@ -578,9 +578,9 @@ public void closePreviewIfNeeded () {
     }
   }
 
-  public void onSetEmojiStatus (View view, TGStickerObj sticker, long emojiId, int duration) {
+  public void onSetEmojiStatus (View view, TGStickerObj sticker, long emojiId, long expirationDate) {
     if (callback != null) {
-      callback.onSetEmojiStatusFromPreview(this, view, sticker, emojiId, duration);
+      callback.onSetEmojiStatusFromPreview(this, view, sticker, emojiId, expirationDate);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGChat.java
Patch:
@@ -969,7 +969,7 @@ public long mediaTextComplexColor () {
   }
 
   public boolean needDrawReactionsPreview () {
-    return isPrivate() && !isSelfChat();
+    return isPrivate() && !isSelfChat() && !showDraft();
   }
 
   public @Nullable EmojiStatusHelper.EmojiStatusDrawable getEmojiStatus () {

File: app/src/main/java/org/thunderdog/challegram/data/TGReactions.java
Patch:
@@ -252,7 +252,8 @@ private TdApi.MessageSender[] getRecentSenderIds (TdApi.MessageReaction reaction
       return sendersPreFiltered.toArray(new TdApi.MessageSender[0]);
     }
 
-    return ArrayUtils.filter(sendersPreFiltered, (item) -> parent.matchesReactionSenderAvatarFilter(reaction, item)).toArray(new TdApi.MessageSender[0]);
+    final TdApi.FormattedText msgText = parent.getMessageText();
+    return ArrayUtils.filter(sendersPreFiltered, (item) -> parent.matchesReactionSenderAvatarFilter(msgText, reaction, item)).toArray(new TdApi.MessageSender[0]);
   }
 
   public void requestAvatarFiles (ComplexReceiver complexReceiver, boolean isUpdate) {

File: app/src/main/java/org/thunderdog/challegram/player/RoundVideoRecorder.java
Patch:
@@ -1446,7 +1446,7 @@ public Surface getInputSurface() {
     }
 
     private void didWriteData(File file, boolean last) {
-      if (videoConvertFirstWrite) {
+      if (videoConvertFirstWrite && !last) {
         videoConvertFirstWrite = false;
       } else if (last) {
         dispatchVideoRecordFinished(workingKey, file.length(), SystemClock.uptimeMillis() - recordStartTime, TimeUnit.MILLISECONDS);

File: app/src/main/java/org/thunderdog/challegram/ui/EmojiStatusSelectorEmojiPage.java
Patch:
@@ -120,7 +120,7 @@ public boolean onTouchEvent (MotionEvent e) {
 
     emojiCustomListController = new EmojiStatusListController(context, tdlib) {
       @Override
-      public void onSetEmojiStatusFromPreview (StickerSmallView view, View clickView, TGStickerObj sticker, long emojiId, int duration) {
+      public void onSetEmojiStatusFromPreview (StickerSmallView view, View clickView, TGStickerObj sticker, long emojiId, long expirationDate) {
         context.replaceReactionPreviewCords(parent.animationDelegate.getDestX(), parent.animationDelegate.getDestY());
         parent.hidePopupWindow(true);
         scheduleClickAnimation(sticker.getCustomEmojiId());

File: app/src/main/java/org/thunderdog/challegram/ui/SettingHolder.java
Patch:
@@ -1260,6 +1260,7 @@ public void getItemOffsets (Rect outRect, View view, RecyclerView parent, Recycl
         settingView.setOnClickListener(onClickListener);
         if (viewType == ListItem.TYPE_RADIO_SETTING_WITH_NEGATIVE_STATE) {
           settingView.getToggler().setUseNegativeState(true);
+          adapter.modifySettingView(viewType, settingView);
         }
         return new SettingHolder(settingView);
       }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsAdapter.java
Patch:
@@ -1796,6 +1796,7 @@ public void updateView (SettingHolder holder, int position, int viewType) {
       case ListItem.TYPE_RADIO_SETTING_WITH_NEGATIVE_STATE: {
         SettingView settingView = (SettingView) holder.itemView;
         settingView.setName(item.getString());
+        settingView.setIcon(item.getIconResource());
         settingView.getToggler().checkRtl(true);
         holder.itemView.setEnabled(true);
         setValuedSetting(item, (SettingView) holder.itemView, false);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsBlockedController.java
Patch:
@@ -221,7 +221,7 @@ protected void setUser (ListItem item, int position, UserView userView, boolean
       }
     };
     buildCells();
-    ViewSupport.setThemedBackground(recyclerView, ColorId.filling, this);
+    // ViewSupport.setThemedBackground(recyclerView, ColorId.filling, this);
     RemoveHelper.attach(recyclerView, new RemoveHelper.Callback() {
       @Override
       public boolean canRemove (RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, int position) {

File: app/src/main/java/org/thunderdog/challegram/widget/EmojiLayout.java
Patch:
@@ -597,8 +597,8 @@ private void scrollToEmojiSection (int sectionIndex) {
     }
   }
 
-  public boolean setEmojiStatus (View view, TGStickerObj sticker, int duration) {
-    return listener != null && listener.onSetEmojiStatus(view, sticker, new TdApi.EmojiStatus(sticker.getCustomEmojiId(), duration));
+  public boolean setEmojiStatus (View view, TGStickerObj sticker, long expirationDate) {
+    return listener != null && listener.onSetEmojiStatus(view, sticker, new TdApi.EmojiStatus(sticker.getCustomEmojiId(), (int) expirationDate));
   }
 
   public boolean sendSticker (View view, TGStickerObj sticker, TdApi.MessageSendOptions sendOptions) {

File: app/src/main/java/org/thunderdog/challegram/emoji/EmojiSpan.java
Patch:
@@ -28,6 +28,9 @@ public interface EmojiSpan {
   default long getCustomEmojiId () {
     return 0;
   }
+  default EmojiInfo getBuiltInEmojiInfo () {
+    return null;
+  }
   default boolean belongsToSurface (CustomEmojiSurfaceProvider customEmojiSurfaceProvider) {
     return false;
   }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -4529,15 +4529,15 @@ public static void handleLegacyClick (TdlibDelegate context, String clickedText,
       //noinspection SwitchIntDef
       switch (type.getConstructor()) {
         case TdApi.TextEntityTypeMentionName.CONSTRUCTOR: {
-          TdApi.TextEntityTypeMentionName mentionName = (TdApi.TextEntityTypeMentionName) span;
+          TdApi.TextEntityTypeMentionName mentionName = (TdApi.TextEntityTypeMentionName) type;
           context.tdlib().ui().openPrivateProfile(context, mentionName.userId, null);
           break;
         }
         case TdApi.TextEntityTypeUrl.CONSTRUCTOR:
           UI.openUrl(clickedText);
           break;
         case TdApi.TextEntityTypeTextUrl.CONSTRUCTOR: {
-          TdApi.TextEntityTypeTextUrl textUrl = (TdApi.TextEntityTypeTextUrl) span;
+          TdApi.TextEntityTypeTextUrl textUrl = (TdApi.TextEntityTypeTextUrl) type;
           UI.openUrl(textUrl.url);
           break;
         }

File: app/src/main/java/org/thunderdog/challegram/theme/ThemeManager.java
Patch:
@@ -408,6 +408,8 @@ public void onFactorChanged (int id, float factor, float fraction, FactorAnimato
 
   @Override
   public void onFactorChangeFinished (int id, float finalFactor, FactorAnimator callee) {
+    if (finalFactor != 1f)
+      return;
     notifyThemeColorsChanged(false, null);
     ThemeDelegate currentTheme = currentThemeImpl(false);
     if (currentTheme instanceof ThemeTemporary) {

File: app/src/main/java/org/thunderdog/challegram/TDLib.java
Patch:
@@ -43,7 +43,7 @@ private static String format (String format, Object... formatArgs) {
   private static void log (int verbosityLevel, String format, Object... formatArgs) {
     try {
       Client.execute(new TdApi.AddLogMessage(verbosityLevel, format(format, formatArgs)));
-    } catch (Client.ExecutionError ignored) { }
+    } catch (Client.ExecutionException ignored) { }
   }
 
   public static void e (String format, Object... formatArgs) {

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomGalleryController.java
Patch:
@@ -72,6 +72,7 @@
 import me.vkryl.android.AnimatorUtils;
 import me.vkryl.android.widget.FrameLayoutFix;
 import me.vkryl.core.lambda.CancellableRunnable;
+import me.vkryl.td.ChatId;
 import me.vkryl.td.Td;
 
 public class MediaBottomGalleryController extends MediaBottomBaseController<MediaBottomGalleryController.Arguments> implements Media.GalleryCallback, MediaGalleryAdapter.Callback, Menu, View.OnClickListener, MediaBottomGalleryBucketAdapter.Callback, MediaViewDelegate, MediaSelectDelegate, MediaSendDelegate {
@@ -237,7 +238,7 @@ protected View onCreateView (Context context) {
 
   @Override
   public boolean allowSpoiler () {
-    return true;
+    return !ChatId.isSecret(getOutputChatId());
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/component/chat/ChatSearchMembersView.java
Patch:
@@ -15,7 +15,6 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import org.drinkless.tdlib.TdApi;
-import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.component.attach.CustomItemAnimator;
 import org.thunderdog.challegram.core.Lang;
@@ -266,8 +265,7 @@ private void processData (final TdApi.Object object) {
         break;
       }
       default: {
-        Log.unexpectedTdlibResponse(object, TdApi.GetChats.class, TdApi.Chats.class);
-        return;
+        throw new UnsupportedOperationException(object.toString());
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -1934,7 +1934,7 @@ private void handleMessageChange (TGMessage msg, int index, long messageId, @TGM
   }
 
   public void updateMessagesDeleted (long chatId, long[] messageIds) {
-    controller.removeReply(messageIds);
+    controller.removeReply(chatId, messageIds);
     controller.onMessagesDeleted(chatId, messageIds);
 
     int removedCount = 0;

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/SearchManager.java
Patch:
@@ -629,8 +629,7 @@ public void onResult (final TdApi.Object object) {
             break;
           }
           default: {
-            Log.unexpectedTdlibResponse(object, TdApi.SearchChats.class, TdApi.Chats.class, TdApi.Users.class, TdApi.Error.class);
-            return;
+            throw new UnsupportedOperationException(object.toString());
           }
         }
 
@@ -640,6 +639,7 @@ public void onResult (final TdApi.Object object) {
           switch (++state[0]) {
             case 1:
               if (sentRequest = foundChatIds.size() < 100) {
+                Log.ensureReturnType(TdApi.SearchChatsOnServer.class, TdApi.Chats.class);
                 tdlib.client().send(new TdApi.SearchChatsOnServer(query, 100 - foundChatIds.size()), this);
               }
               break;

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSetWrap.java
Patch:
@@ -559,7 +559,7 @@ public void initWithInfo (TdApi.StickerSetInfo info) {
   }
 
   public void initWithSet (TdApi.StickerSet set) {
-    TdApi.StickerSetInfo info = new TdApi.StickerSetInfo(set.id, set.title, set.name, set.thumbnail, set.thumbnailOutline, set.isInstalled, set.isArchived, set.isOfficial, set.stickerFormat, set.stickerType, false, set.stickers.length, null);
+    TdApi.StickerSetInfo info = new TdApi.StickerSetInfo(set.id, set.title, set.name, set.thumbnail, set.thumbnailOutline, set.isInstalled, set.isArchived, set.isOfficial, set.stickerFormat, set.stickerType, set.needsRepainting, false, set.stickers.length, null);
     this.stickerSets.put(set.id, new TGStickerSetInfo(tdlib, info));
     updateButton(false);
     stickersController.setStickerSetInfo(info);

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -312,4 +312,7 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean DISABLE_ANONYMOUS_NON_OWNER_REACTIONS = true;
 
   public static final boolean KEEP_ORIGINAL_EMOJI_WHEN_INPUT_CUSTOM_EMOJI = true;
+  public static final boolean FORCE_REPLY_WHEN_FORWARDING_WITH_COMMENT = false;
+  public static final boolean DEBUG_VIEW_MESSAGES = false;
+  public static final boolean ENABLE_TEXT_ANIMATIONS = false;
 }

File: app/src/main/java/org/thunderdog/challegram/data/AvatarInfo.java
Patch:
@@ -17,6 +17,7 @@
 import org.drinkless.tdlib.TdApi;
 import org.thunderdog.challegram.loader.ImageFile;
 import org.thunderdog.challegram.telegram.Tdlib;
+import org.thunderdog.challegram.telegram.TdlibAccentColor;
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.util.text.Letters;
 
@@ -25,7 +26,7 @@ public class AvatarInfo {
   public final long userId;
   public ImageFile imageFile;
 
-  public int avatarColorId;
+  public TdlibAccentColor accentColor;
   public Letters letters;
 
   public float lettersWidth15dp;
@@ -39,7 +40,7 @@ public AvatarInfo (Tdlib tdlib, long userId) {
   public void updateUser () {
     TdApi.User user = tdlib.cache().user(userId);
     letters = TD.getLetters(user);
-    avatarColorId = TD.getAvatarColorId(user, tdlib.myUserId());
+    accentColor = tdlib.cache().userAccentColor(user);
     imageFile = TD.getAvatar(tdlib, user);
     lettersWidth15dp = Paints.measureLetters(letters, 15f);
   }

File: app/src/main/java/org/thunderdog/challegram/data/CallItem.java
Patch:
@@ -21,6 +21,7 @@
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.telegram.Tdlib;
 import org.thunderdog.challegram.theme.ColorId;
+import org.thunderdog.challegram.theme.PorterDuffColorId;
 import org.thunderdog.challegram.tool.Strings;
 
 import java.util.ArrayList;
@@ -94,12 +95,11 @@ public TdApi.Message lastMessage () {
     return isOutgoing ? R.drawable.baseline_call_made_18 : isMissed(call) ? R.drawable.baseline_call_missed_18 : R.drawable.baseline_call_received_18;
   }
 
-  public @ColorId
-  int getSubtitleIconColorId () {
+  public @PorterDuffColorId int getSubtitleIconColorId () {
     return getSubtitleIconColorId((TdApi.MessageCall) lastMessage().content);
   }
 
-  public static @ColorId int getSubtitleIconColorId (TdApi.MessageCall call) {
+  public static @PorterDuffColorId int getSubtitleIconColorId (TdApi.MessageCall call) {
     return isMissedOrCancelled(call) ? ColorId.iconNegative : ColorId.iconPositive;
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/FileComponent.java
Patch:
@@ -43,6 +43,7 @@
 import org.thunderdog.challegram.player.TGPlayerController;
 import org.thunderdog.challegram.telegram.TGLegacyAudioManager;
 import org.thunderdog.challegram.telegram.Tdlib;
+import org.thunderdog.challegram.telegram.TdlibAccentColor;
 import org.thunderdog.challegram.telegram.TdlibFilesManager;
 import org.thunderdog.challegram.telegram.TdlibManager;
 import org.thunderdog.challegram.theme.ColorId;
@@ -163,7 +164,7 @@ public void setDoc (@NonNull TdApi.Document doc) {
     if (hasPreview) {
       this.progress.setBackgroundColor(0x44000000);
     } else {
-      this.progress.setBackgroundColorId(TD.getFileColorId(doc, context.isOutgoingBubble()));
+      this.progress.setBackgroundColorId(TdlibAccentColor.getFileColorId(doc, context.isOutgoingBubble()));
     }
     this.progress.setFile(doc.document, context.getMessage());
     if (viewProvider != null) {

File: app/src/main/java/org/thunderdog/challegram/data/InlineResultCommand.java
Patch:
@@ -94,7 +94,7 @@ protected int getContentHeight () {
 
   @Override
   public void requestContent (ComplexReceiver receiver, boolean isInvalidate) {
-    receiver.clearReceivers((receiverType, receiver1, key) -> receiverType == ComplexReceiver.RECEIVER_TYPE_IMAGE && key == 0);
+    receiver.clearReceivers((receiverType, receiver1, key) -> receiverType == ComplexReceiver.ReceiverType.IMAGE && key == 0);
     receiver.getImageReceiver(0).requestFile(userContext.getImageFile());
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/InlineResultMention.java
Patch:
@@ -110,7 +110,7 @@ protected int getContentHeight () {
 
   @Override
   public void requestContent (ComplexReceiver receiver, boolean isInvalidate) {
-    receiver.clearReceivers((receiverType, receiver1, key) -> receiverType == ComplexReceiver.RECEIVER_TYPE_IMAGE && key == 0);
+    receiver.clearReceivers((receiverType, receiver1, key) -> receiverType == ComplexReceiver.ReceiverType.IMAGE && key == 0);
     receiver.getAvatarReceiver(0).requestUser(tdlib, userContext.getId(), AvatarReceiver.Options.NONE);
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGAvatars.java
Patch:
@@ -143,7 +143,7 @@ public void requestFiles (ComplexReceiver complexReceiver, boolean isUpdate, boo
           receiver.requestMessageSender(tdlib, entry.senderId, AvatarReceiver.Options.NONE);
         }
         if (!isUpdate && !neverClear) {
-          complexReceiver.clearReceivers((receiverType, receiver, key) -> receiverType == ComplexReceiver.RECEIVER_TYPE_AVATAR && entriesIds != null && entriesIds.contains(key));
+          complexReceiver.clearReceivers((receiverType, receiver, key) -> receiverType == ComplexReceiver.ReceiverType.AVATAR && entriesIds != null && entriesIds.contains(key));
         }
       } else if (!neverClear) {
         complexReceiver.clear();

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageBotInfo.java
Patch:
@@ -49,7 +49,7 @@ public TGMessageBotInfo (MessagesManager context, long chatId, String descriptio
   }
 
   private TGMessageBotInfo (MessagesManager context, long chatId, TdApi.FormattedText description) {
-    super(context, TD.newFakeMessage(chatId, context.controller().tdlib().sender(chatId), new TdApi.MessageText(description, null)));
+    super(context, TD.newFakeMessage(chatId, context.controller().tdlib().sender(chatId), new TdApi.MessageText(description, null, null)));
 
     if (!tdlib().isRepliesChat(ChatId.fromUserId(getSender().getUserId()))) {
       String text = Lang.getString(R.string.WhatThisBotCanDo);

File: app/src/main/java/org/thunderdog/challegram/data/TGSource.java
Patch:
@@ -19,8 +19,8 @@
 import androidx.annotation.Nullable;
 
 import org.thunderdog.challegram.loader.AvatarReceiver;
-import org.thunderdog.challegram.loader.ImageFile;
 import org.thunderdog.challegram.loader.Receiver;
+import org.thunderdog.challegram.telegram.TdlibAccentColor;
 import org.thunderdog.challegram.telegram.TdlibUi;
 import org.thunderdog.challegram.util.text.Text;
 import org.thunderdog.challegram.util.text.TextPart;
@@ -36,7 +36,7 @@ public TGSource (TGMessage msg) {
   public abstract boolean open (View view, Text text, TextPart part,  @Nullable TdlibUi.UrlOpenParameters openParameters, Receiver receiver);
   public abstract void load ();
   public abstract String getAuthorName ();
-  public abstract int getAuthorNameColorId ();
+  public abstract TdlibAccentColor getAuthorAccentColor ();
   public abstract void requestAvatar (AvatarReceiver receiver);
   public abstract void destroy ();
 

File: app/src/main/java/org/thunderdog/challegram/data/TGStorageStats.java
Patch:
@@ -249,7 +249,7 @@ public Entry (Tdlib tdlib, long chatId) {
         }
       } else {
         this.isSecret = false;
-        this.avatarPlaceholderMetadata = new AvatarPlaceholder.Metadata();
+        this.avatarPlaceholderMetadata = new AvatarPlaceholder.Metadata(tdlib.chatAccentColor(chatId));
         this.avatarFile = null;
       }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGUser.java
Patch:
@@ -26,6 +26,7 @@
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.loader.ImageFile;
 import org.thunderdog.challegram.telegram.Tdlib;
+import org.thunderdog.challegram.telegram.TdlibAccentColor;
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.Strings;
 import org.thunderdog.challegram.util.UserProvider;
@@ -141,7 +142,7 @@ public boolean needSeparator () {
   }
 
   private void buildContact () {
-    avatarPlaceholderMetadata = new AvatarPlaceholder.Metadata(TD.getAvatarColorId(rawContactId, tdlib.myUserId()), TD.getLetters(firstName, lastName));
+    avatarPlaceholderMetadata = new AvatarPlaceholder.Metadata(TdlibAccentColor.defaultAccentColorForUserId(tdlib, rawContactId), TD.getLetters(firstName, lastName));
     updateName();
     updateStatus();
   }
@@ -262,7 +263,7 @@ public void setUser (@Nullable TdApi.User user, int creatorId) {
       flags &= ~FLAG_GROUP_CREATOR;
     }
     if (user == null || TD.isPhotoEmpty(user.profilePhoto)) {
-      avatarPlaceholderMetadata = new AvatarPlaceholder.Metadata(TD.getAvatarColorId(user, tdlib.myUserId()), TD.getLetters(user));
+      avatarPlaceholderMetadata = new AvatarPlaceholder.Metadata(tdlib.cache().userAccentColor(user), TD.getLetters(user));
     } else {
       imageFile = new ImageFile(tdlib, user.profilePhoto.small);
       imageFile.setSize(ChatView.getDefaultAvatarCacheSize());

File: app/src/main/java/org/thunderdog/challegram/helper/BotHelper.java
Patch:
@@ -350,7 +350,7 @@ private void processReplyMarkup (TdApi.Message message, boolean remember) {
         TdApi.ReplyMarkupShowKeyboard showKeyboard = (TdApi.ReplyMarkupShowKeyboard) markup;
         processShowKeyboard(messageId, showKeyboard);
         if (type == TYPE_GROUP || type == TYPE_SUPERGROUP) {
-          context.showReply(message, false, false); // FIXME?
+          context.showReply(message, null, false, false); // FIXME?
         }
         context.setCustomBotPlaceholder(showKeyboard.inputFieldPlaceholder);
         break;
@@ -371,9 +371,9 @@ private void processHideKeyboard (long messageId, boolean personal) {
   private void processForceReply (TdApi.Message message, boolean personal) {
     if (personal) {
       context.showKeyboard();
-      context.showReply(message, false, false);
+      context.showReply(message, null, false, false);
     } else if (type == TYPE_PRIVATE) {
-      context.showReply(message, false, false);
+      context.showReply(message, null, false, false);
     }
     if (message != null) {
       context.tdlib().client().send(new TdApi.DeleteChatReplyMarkup(chatId, message.id), this);

File: app/src/main/java/org/thunderdog/challegram/mediaview/data/MediaItem.java
Patch:
@@ -940,7 +940,7 @@ public static MediaItem valueOf (BaseActivity context, Tdlib tdlib, TdApi.Messag
             }
           }
           default: {
-            Td.assertChatEventAction_d9a53493();
+            Td.assertChatEventAction_c8306b0f();
           }
         }
         break;

File: app/src/main/java/org/thunderdog/challegram/navigation/TooltipOverlayView.java
Patch:
@@ -1277,11 +1277,12 @@ public TooltipBuilder source (TdlibUi.UrlOpenParameters openParameters) {
       return this;
     }
 
-    public void show (ViewController<?> controller, Tdlib tdlib, int iconRes, CharSequence text) {
+    public TooltipInfo show (ViewController<?> controller, Tdlib tdlib, int iconRes, CharSequence text) {
       if (originalView == null && viewProvider == null && locationProvider == null) {
         UI.showToast(text, Toast.LENGTH_SHORT);
+        return null;
       } else {
-        icon(iconRes).needBlink(iconRes == R.drawable.baseline_info_24 || iconRes == R.drawable.baseline_error_24).controller(controller != null ? controller.getParentOrSelf() : null).show(tdlib, text).hideDelayed(3500, TimeUnit.MILLISECONDS);
+        return icon(iconRes).needBlink(iconRes == R.drawable.baseline_info_24 || iconRes == R.drawable.baseline_error_24).controller(controller != null ? controller.getParentOrSelf() : null).show(tdlib, text).hideDelayed(3500, TimeUnit.MILLISECONDS);
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/player/RecordAudioVideoController.java
Patch:
@@ -1482,7 +1482,7 @@ private void sendVideoNote (TdApi.InputMessageVideoNote videoNote, TdApi.Message
         TdApi.InputMessageVideoNote newVideoNote = tdlib.filegen().createThumbnail(videoNote, isSecretChat, helperFile);
         long chatId = targetController.getChatId();
         long messageThreadId = targetController.getMessageThreadId();
-        TdApi.MessageReplyTo replyTo = targetController.obtainReplyTo();
+        TdApi.InputMessageReplyTo replyTo = targetController.obtainReplyTo();
         final TdApi.MessageSendOptions finalSendOptions = Td.newSendOptions(initialSendOptions, tdlib.chatDefaultDisableNotifications(chatId));
         if (newVideoNote.thumbnail == null && helperFile != null) {
           tdlib.client().send(new TdApi.DownloadFile(helperFile.id, 1, 0, 0, true), result -> {

File: app/src/main/java/org/thunderdog/challegram/player/TGPlayerController.java
Patch:
@@ -1391,8 +1391,7 @@ private Client.ResultHandler newStackHandler (final int contextId, final boolean
           break;
         }
         default: {
-          Log.unexpectedTdlibResponse(object, TdApi.SearchSecretMessages.class, TdApi.SearchChatMessages.class, TdApi.Messages.class, TdApi.Error.class);
-          return;
+          throw new UnsupportedOperationException(object.toString());
         }
       }
       addMessages(contextId, moreMessages, areNew);

File: app/src/main/java/org/thunderdog/challegram/service/PushProcessor.java
Patch:
@@ -64,7 +64,7 @@ private static int determineAccountId (long pushId, String payload, long sentTim
         TDLib.Tag.notifications(pushId, accountId, "Couldn't find account for receiverId: %d. Sending to all accounts, payload: %s, sentTime: %d", pushReceiverId, payload, sentTime);
       }
       return accountId;
-    } catch (Client.ExecutionError error) {
+    } catch (Client.ExecutionException error) {
       TDLib.Tag.notifications(pushId, TdlibAccount.NO_ID, "Couldn't fetch receiverId: %s, payload: %s. Sending to all instances.", TD.toErrorString(error.error), payload);
       return TdlibAccount.NO_ID;
     }

File: app/src/main/java/org/thunderdog/challegram/service/TGCallService.java
Patch:
@@ -720,7 +720,7 @@ private void showNotification () {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
       builder.setColor(tdlib.accountColor());
     }
-    Bitmap bitmap = TdlibNotificationUtils.buildLargeIcon(tdlib, user.profilePhoto != null ? user.profilePhoto.small : null, TD.getAvatarColorId(user, tdlib.myUserId()), TD.getLetters(user), false, true);
+    Bitmap bitmap = TdlibNotificationUtils.buildLargeIcon(tdlib, user.profilePhoto != null ? user.profilePhoto.small : null, tdlib.cache().userAccentColor(user), TD.getLetters(user), false, true);
     if (bitmap != null) {
       builder.setLargeIcon(bitmap);
     }
@@ -840,7 +840,7 @@ private boolean showIncomingNotification () {
       builder.setCategory(Notification.CATEGORY_CALL);
       builder.setFullScreenIntent(PendingIntent.getActivity(this, PendingIntent.FLAG_ONE_SHOT, Intents.valueOfCall(), Intents.mutabilityFlags(false)), true);
     }
-    Bitmap bitmap = user != null ? TdlibNotificationUtils.buildLargeIcon(tdlib, user.profilePhoto != null ? user.profilePhoto.small : null, TD.getAvatarColorId(user, tdlib.myUserId()), TD.getLetters(user), false, true) : null;
+    Bitmap bitmap = user != null ? TdlibNotificationUtils.buildLargeIcon(tdlib, user.profilePhoto != null ? user.profilePhoto.small : null, tdlib.cache().userAccentColor(user), TD.getLetters(user), false, true) : null;
     if (bitmap != null) {
       builder.setLargeIcon(bitmap);
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatListener.java
Patch:
@@ -27,6 +27,9 @@ default void onChatTitleChanged (long chatId, String title) { }
   default void onChatThemeChanged (long chatId, String themeName) { }
 
   default void onChatBackgroundChanged (long chatId, @Nullable TdApi.ChatBackground background) { }
+  default void onChatAccentColorChanged (long chatId, int accentColorId) { }
+
+  default void onChatBackgroundCustomEmojiChanged (long chatId, long customEmojiId) { }
   default void onChatActionBarChanged (long chatId, TdApi.ChatActionBar actionBar) { }
   default void onChatPhotoChanged (long chatId, @Nullable TdApi.ChatPhotoInfo photo) { }
   default void onChatReadInbox (long chatId, long lastReadInboxMessageId, int unreadCount, boolean availabilityChanged) { }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationExtras.java
Patch:
@@ -116,6 +116,7 @@ public TdlibNotificationExtras (int accountId, int category) {
   public final int maxNotificationId;
   public final int notificationGroupId;
   public final boolean needReply;
+  public final boolean forceExternalReply = false; // Keep this flag in case it will be needed in future
   public final boolean areMentions;
   public final long[] messageIds;
   public final long[] userIds;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibOptionListener.java
Patch:
@@ -23,4 +23,5 @@ default void onSuggestedLanguagePackChanged (String suggestedLanguagePackId, TdA
   default void onContactRegisteredNotificationsDisabled (boolean areDisabled) { }
   default void onSuggestedActionsChanged (TdApi.SuggestedAction[] addedActions, TdApi.SuggestedAction[] removedActions) { }
   default void onArchiveAndMuteChatsFromUnknownUsersEnabled (boolean enabled) { }
+  default void onAccentColorsChanged () { }
 }

File: app/src/main/java/org/thunderdog/challegram/tool/TGMimeType.java
Patch:
@@ -34,7 +34,7 @@ public class TGMimeType {
        if (!StringUtils.isEmpty(mimeType.text)) {
          return mimeType.text;
        }
-     } catch (Client.ExecutionError ignored) { }
+     } catch (Client.ExecutionException ignored) { }
      if ("heic".equals(extension)) {
        return "image/heic";
      }
@@ -74,7 +74,7 @@ public class TGMimeType {
       if (!StringUtils.isEmpty(extension.text)) {
         return extension.text;
       }
-    } catch (Client.ExecutionError ignored) { }
+    } catch (Client.ExecutionException ignored) { }
     if ("image/heic".equals(mimeType)) {
       return "heic";
     }

File: app/src/main/java/org/thunderdog/challegram/ui/ChatStatisticsController.java
Patch:
@@ -187,7 +187,7 @@ protected void setMessagePreview (ListItem item, int position, MessagePreviewVie
         }
 
         RippleSupport.setSimpleWhiteBackground(previewView);
-        previewView.setMessage(container.message, null, statString.toString(), false);
+        previewView.setMessage(container.message, null, statString.toString(), MessagePreviewView.Options.NONE);
         previewView.setContentInset(Screen.dp(8));
       }
 

File: app/src/main/java/org/thunderdog/challegram/ui/LanguageController.java
Patch:
@@ -416,8 +416,9 @@ public void onClick (View v) {
 
       String key = string.string.key;
       SpannableStringBuilder b = new SpannableStringBuilder(key);
-
-      b.setSpan(new CustomTypefaceSpan(Fonts.getRobotoItalic(), ColorId.textNeutral).setEntityType(new TdApi.TextEntityTypeItalic()), 0, key.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+      CustomTypefaceSpan italicSpan = new CustomTypefaceSpan(Fonts.getRobotoItalic(), ColorId.textNeutral);
+      italicSpan.setTextEntityType(new TdApi.TextEntityTypeItalic());
+      b.setSpan(italicSpan, 0, key.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
       showOptions(Spannable.Factory.getInstance().newSpannable(b), ids.get(), strings.get(), null, icons.get(), (itemView, id) -> {
         if (id == R.id.btn_string) {
           Intents.openLink(TD.getLanguageKeyLink(string.string.key));

File: app/src/main/java/org/thunderdog/challegram/ui/PasswordController.java
Patch:
@@ -918,10 +918,10 @@ private void onDeadEndReached () {
     if (message instanceof Spannable) {
       CustomTypefaceSpan[] spans = ((Spannable) message).getSpans(0, message.length(), CustomTypefaceSpan.class);
       for (CustomTypefaceSpan span : spans) {
-        if (span.getEntityType() != null && Td.isItalic(span.getEntityType())) {
+        if (span.getTextEntityType() != null && Td.isItalic(span.getTextEntityType())) {
           span.setTypeface(null);
           span.setColorId(ColorId.textLink);
-          span.setEntityType(new TdApi.TextEntityTypeEmailAddress());
+          span.setTextEntityType(new TdApi.TextEntityTypeEmailAddress());
           int start = ((Spannable) message).getSpanStart(span);
           int end = ((Spannable) message).getSpanEnd(span);
           ((Spannable) message).setSpan(new NoUnderlineClickableSpan() {

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -937,10 +937,10 @@ private boolean makeRequest () {
               if (message instanceof Spannable) {
                 CustomTypefaceSpan[] spans = ((Spannable) message).getSpans(0, message.length(), CustomTypefaceSpan.class);
                 for (CustomTypefaceSpan span : spans) {
-                  if (span.getEntityType() != null && Td.isItalic(span.getEntityType())) {
+                  if (span.getTextEntityType() != null && Td.isItalic(span.getTextEntityType())) {
                     span.setTypeface(null);
                     span.setColorId(ColorId.textLink);
-                    span.setEntityType(new TdApi.TextEntityTypeEmailAddress());
+                    span.setTextEntityType(new TdApi.TextEntityTypeEmailAddress());
                     int start = ((Spannable) message).getSpanStart(span);
                     int end = ((Spannable) message).getSpanEnd(span);
                     ((Spannable) message).setSpan(new NoUnderlineClickableSpan() {

File: app/src/main/java/org/thunderdog/challegram/ui/SharedBaseController.java
Patch:
@@ -28,7 +28,6 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import org.drinkless.tdlib.TdApi;
-import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.component.MediaCollectorDelegate;
 import org.thunderdog.challegram.core.Lang;
@@ -701,8 +700,7 @@ protected final void processData (final String query, final long offset, final T
         break;
       }
       default: {
-        Log.unexpectedTdlibResponse(object, TdApi.GetChats.class, TdApi.Chats.class);
-        return;
+        throw new UnsupportedOperationException(object.toString());
       }
     }
     final long nextOffsetFinal = nextOffset;

File: app/src/main/java/org/thunderdog/challegram/ui/ThemeListController.java
Patch:
@@ -1893,7 +1893,9 @@ public void onClick (@NonNull View widget) {
               tdlib.ui().switchInline(ThemeListController.this, username, "", true);
             }
           });
-          spans.add(new CustomTypefaceSpan(null, ColorId.textLink).setEntityType(entity.type).setRemoveUnderline(true));
+          CustomTypefaceSpan span = new CustomTypefaceSpan(null, ColorId.textLink).setRemoveUnderline(true);
+          span.setTextEntityType(entity.type);
+          spans.add(span);
         }
         if (!spans.isEmpty()) {
           if (!(text instanceof SpannableStringBuilder)) {

File: app/src/main/java/org/thunderdog/challegram/unsorted/NLoader.java
Patch:
@@ -68,8 +68,8 @@ public static synchronized boolean loadLibrary () {
       try {
         ReLinkerInstance reLinker = ReLinker.recursively().log(NLoader.instance());
         loadLibraryImpl(reLinker, "c++_shared", BuildConfig.NDK_VERSION);
-        loadLibraryImpl(reLinker, "cryptox", BuildConfig.OPENSSL_VERSION);
-        loadLibraryImpl(reLinker, "sslx", BuildConfig.OPENSSL_VERSION);
+        loadLibraryImpl(reLinker, "cryptox", BuildConfig.OPENSSL_VERSION_FULL);
+        loadLibraryImpl(reLinker, "sslx", BuildConfig.OPENSSL_VERSION_FULL);
         loadLibraryImpl(reLinker, "tdjni", BuildConfig.TDLIB_VERSION);
         loadLibraryImpl(reLinker, "leveldbjni", BuildConfig.LEVELDB_VERSION);
         loadLibraryImpl(reLinker, "tgcallsjni", BuildConfig.JNI_VERSION /*TODO: separate variable?*/);

File: app/src/main/java/org/thunderdog/challegram/widget/JoinedUsersView.java
Patch:
@@ -31,8 +31,8 @@
 import org.thunderdog.challegram.loader.ImageReceiver;
 import org.thunderdog.challegram.navigation.ViewController;
 import org.thunderdog.challegram.telegram.Tdlib;
-import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.theme.ColorId;
+import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.Screen;
@@ -349,7 +349,7 @@ public void onClickAt (View view, float x, float y) {
   // Drawing
 
   private void drawPlaceholder (Canvas c, AvatarInfo info, int cx, int cy, float factor) {
-    c.drawCircle(cx, cy, Screen.dp(AVATAR_RADIUS), Paints.fillingPaint(ColorUtils.alphaColor(factor, Theme.getColor(info.avatarColorId))));
+    c.drawCircle(cx, cy, Screen.dp(AVATAR_RADIUS), Paints.fillingPaint(ColorUtils.alphaColor(factor, info.accentColor.getPrimaryColor())));
     Paint paint = Paints.whiteMediumPaint(15f, info.letters.needFakeBold, false);
     paint.setAlpha((int) (255f * factor));
     c.drawText(info.letters.text, cx - info.lettersWidth15dp / 2, cy + Screen.dp(5.5f), paint);

File: app/src/main/java/org/thunderdog/challegram/widget/TripleAvatarView.java
Patch:
@@ -101,7 +101,7 @@ private void requestUserFile (long[] users, int index, Tdlib tdlib, ImageReceive
       TdApi.User user = tdlib.chatUser(users[index]);
 
       if (user == null || TD.isPhotoEmpty(user.profilePhoto)) {
-        placeholders[index] = new AvatarPlaceholder(AVATAR_SIZE / 2f, new AvatarPlaceholder.Metadata(TD.getAvatarColorId(user, tdlib.myUserId()), TD.getLetters(user)), null);
+        placeholders[index] = new AvatarPlaceholder(AVATAR_SIZE / 2f, new AvatarPlaceholder.Metadata(tdlib.cache().userAccentColor(user), TD.getLetters(user)), null);
         receiver.requestFile(null);
       } else {
         placeholders[index] = null;

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockRichText.java
Patch:
@@ -289,7 +289,7 @@ public void onClickAt (View view, float x, float y) {
             showChatLinkSubtitle(publicChat, time, openParameters);
           } else if (publicChat.type.getConstructor() == TdApi.ChatTypeSupergroup.CONSTRUCTOR) {
             context.tdlib().cache().supergroupFull(ChatId.toSupergroupId(publicChat.id), fullInfo -> {
-              int fullMemberCount = fullInfo.memberCount;
+              int fullMemberCount = fullInfo != null ? fullInfo.memberCount : 0;
               if (fullMemberCount > 1) {
                 showChatLinkSubtitle(publicChat, time, openParameters);
               }

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -433,7 +433,7 @@ public void onCreate (Bundle savedInstanceState) {
 
     if (needTdlib()) {
       TdlibManager.instance().player().addTrackChangeListener(this);
-      TdlibManager.instance().resetBadge();
+      TdlibManager.instance().resetBadge(false);
     }
 
     Lang.addLanguageListener(this);

File: app/src/main/java/org/thunderdog/challegram/data/TGCommentButton.java
Patch:
@@ -511,7 +511,7 @@ private void drawBubble (@NonNull MessageView view, @NonNull Canvas c, @NonNull
   }
 
   private void drawText (@NonNull Canvas c, float x, float cy, float alpha) {
-    DrawAlgorithms.drawCounter(c, x, cy, Gravity.LEFT, counterAnimator, getTextSize(), false, this, null, Gravity.LEFT, 0, 0, alpha, 0, 1f);
+    DrawAlgorithms.drawCounter(c, x, cy, Gravity.LEFT, counterAnimator, getTextSize(), alpha, /* colorSet */ this, /* scale */ 1f);
   }
 
   private void drawSelection (@NonNull Canvas c, float selectionFactor, int selectionColor) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -1969,7 +1969,7 @@ public final void draw (MessageView view, Canvas c, @NonNull AvatarReceiver avat
         int top = bottom - commentButton.getAnimatedHeight(0, commentButton.getVisibility());
         if (needCommentButtonSeparator()) {
           int separatorColor = ColorUtils.alphaColor(0.15f * commentButton.getVisibility(), getDecentColor());
-          Paint separatorPaint = Config.COMMENTS_INLINE_BUTTON_SEPARATOR_1PX ? Paints.strokeSeparatorPaint(separatorColor) : Paints.strokeSmallPaint(separatorColor);
+          Paint separatorPaint = Paints.strokeSmallPaint(separatorColor);
           c.drawLine(left + Screen.dp(7f), top, right - Screen.dp(7f), top, separatorPaint);
         }
         commentButton.draw(view, c, view, left, top, right, bottom);

File: app/src/main/java/org/thunderdog/challegram/navigation/OverlayButtonWrap.java
Patch:
@@ -316,7 +316,8 @@ private void setHideFactor (float factor) {
         mainButton.setScaleY(scale);
         mainButton.setAlpha(1f - factor);
       } else {
-        mainButton.setTranslationY((float) (Screen.dp(16f) * 2 + mainButton.getMeasuredHeight()) * factor);
+        mainButton.setTranslationY((float) (Screen.dp(16f) * 2 + mainButton.getMeasuredHeight() + getPaddingBottom()) * factor);
+        mainButton.setAlpha(factor < 1f ? 1f : 0f);
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/PagerHeaderView.java
Patch:
@@ -14,6 +14,9 @@
  */
 package org.thunderdog.challegram.navigation;
 
+import android.view.View;
+
 public interface PagerHeaderView extends RtlCheckListener {
+  View getView();
   ViewPagerTopView getTopView ();
 }

File: app/src/main/java/org/thunderdog/challegram/navigation/SimpleHeaderView.java
Patch:
@@ -29,7 +29,7 @@
 import me.vkryl.android.widget.FrameLayoutFix;
 
 public class SimpleHeaderView extends FrameLayoutFix implements ColorSwitchPreparator, TextChangeDelegate {
-  private TextView title;
+  private final TextView title;
 
   public SimpleHeaderView (Context context) {
     super(context);

File: app/src/main/java/org/thunderdog/challegram/navigation/TelegramViewController.java
Patch:
@@ -116,6 +116,8 @@ protected boolean filterChatMessageSearchResult (TdApi.Chat chat) {
 
   protected void modifyFoundChat (TGFoundChat chat) { }
 
+  protected void modifyFoundChatView (ListItem item, int position, BetterChatView chatView) { }
+
   protected boolean needChatSearchManagerPreparation () {
     // Disable if it's not needed
     return true;
@@ -404,6 +406,7 @@ protected void setChatData (ListItem item, int position, BetterChatView chatView
         } else if (itemId == R.id.search_message) {
           chatView.setMessage((TGFoundMessage) item.getData());
         }
+        TelegramViewController.this.modifyFoundChatView(item, position, chatView);
       }
 
       @Override

File: app/src/main/java/org/thunderdog/challegram/telegram/CounterChangeListener.java
Patch:
@@ -19,6 +19,6 @@
 import org.drinkless.tdlib.TdApi;
 
 public interface CounterChangeListener {
-  default void onChatCounterChanged (@NonNull TdApi.ChatList chatList, boolean availabilityChanged, int totalCount, int unreadCount, int unreadUnmutedCount) { }
-  default void onMessageCounterChanged (@NonNull TdApi.ChatList chatList, int unreadCount, int unreadUnmutedCount) { }
+  default void onChatCounterChanged (@NonNull TdApi.ChatList chatList, TdlibCounter counter, boolean availabilityChanged, int totalCount, int unreadCount, int unreadUnmutedCount) { }
+  default void onMessageCounterChanged (@NonNull TdApi.ChatList chatList, TdlibCounter counter, int unreadCount, int unreadUnmutedCount) { }
 }

File: app/src/main/java/org/thunderdog/challegram/telegram/GlobalCountersListener.java
Patch:
@@ -23,5 +23,7 @@ public interface GlobalCountersListener {
   @UiThread
   default void onUnreadCountersChanged (Tdlib tdlib, @NonNull TdApi.ChatList chatList, int count, boolean isMuted) { }
   @UiThread
-  void onTotalUnreadCounterChanged (@NonNull TdApi.ChatList chatList, boolean isReset);
+  default void onTotalUnreadCounterChanged (@NonNull TdApi.ChatList chatList, boolean isReset) { }
+  @UiThread
+  default void onBadgeSettingsChanged () { }
 }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationManager.java
Patch:
@@ -1616,7 +1616,7 @@ public void resetNotificationSettings (boolean onlyLocal) {
       updated = Settings.instance().setNeedSplitNotificationCategories(true);
       updated = Settings.instance().setNeedHideSecretChats(false) || updated;
       if (Settings.instance().resetBadge()) {
-        tdlib.context().resetBadge();
+        tdlib.context().resetBadge(true);
       }
       if (updated) {
         tdlib.context().onUpdateAllNotifications();

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsPagerController.java
Patch:
@@ -114,7 +114,7 @@ public MessageOptionsPagerController (Context context, Tdlib tdlib, Options opti
         .drawable(R.drawable.baseline_favorite_16, 16f, 6f, Gravity.LEFT)
         .build(), this, Screen.dp(16));
       counters[ALL_REACTED_POSITION].counter.setCount(message.getMessageReactions().getTotalCount(), false);
-      state.headerAlwaysVisibleCountersWidth += counters[ALL_REACTED_POSITION].calculateWidth(null);
+      state.headerAlwaysVisibleCountersWidth += counters[ALL_REACTED_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING));
     } else {
       ALL_REACTED_POSITION = -1;
     }
@@ -126,7 +126,7 @@ public MessageOptionsPagerController (Context context, Tdlib tdlib, Options opti
         .drawable(R.drawable.baseline_visibility_16, 16f, 6f, Gravity.LEFT)
         .build(), this, Screen.dp(16));
       counters[SEEN_POSITION].counter.setCount(1, false);
-      int itemWidth = counters[SEEN_POSITION].calculateWidth(null); // - Screen.dp(16);
+      int itemWidth = counters[SEEN_POSITION].calculateWidth(null, Screen.dp(ViewPagerTopView.DEFAULT_ITEM_SPACING)); // - Screen.dp(16);
       state.headerAlwaysVisibleCountersWidth += itemWidth;
       counters[SEEN_POSITION].setStaticWidth(itemWidth - Screen.dp(16));
       counters[SEEN_POSITION].counter.setCount(Tdlib.CHAT_LOADING, false);
@@ -302,7 +302,7 @@ protected void onCreateView (Context context, FrameLayoutFix contentView, ViewPa
     prepareControllerForPosition(startPage, null);
     tdlib.ui().post(this::launchOpenAnimation);
 
-    headerCell.getTopView().setTextPadding(Screen.dp(0));
+    headerCell.getTopView().setItemPadding(Screen.dp(0));
     headerCell.getTopView().setItems(Arrays.asList(counters));
     headerCell.getTopView().setOnItemClickListener(this);
     headerCell.getTopView().setSelectionColorId(ColorId.text);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsStickersController.java
Patch:
@@ -288,7 +288,7 @@ protected boolean canTouchAt (float x, float y) {
         return y < getTopView().getMeasuredHeight();
       }
     };
-    searchHeaderCell.getTopView().setTextPadding(Screen.dp(12f));
+    searchHeaderCell.getTopView().setItemPadding(Screen.dp(12f));
     searchHeaderCell.getTopView().setOnItemClickListener(this);
     searchHeaderCell.getTopView().setItems(getPagerSections());
     searchHeaderCell.getTopView().setSelectionFactor(lastSelectionFactor);

File: app/src/main/java/org/thunderdog/challegram/widget/DoubleTextView.java
Patch:
@@ -199,7 +199,7 @@ public void setIsRounded (boolean isRounded) {
   private void checkButton () {
     if (button == null) {
       RelativeLayout.LayoutParams params;
-      params = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, Screen.dp(28f));
+      params = new LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, Screen.dp(28f));
       params.addRule(Lang.rtl() ? RelativeLayout.ALIGN_PARENT_LEFT : RelativeLayout.ALIGN_PARENT_RIGHT);
       params.addRule(RelativeLayout.CENTER_VERTICAL);
       params.rightMargin = params.leftMargin = Screen.dp(19f);

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifReceiver.java
Patch:
@@ -838,6 +838,9 @@ public void draw (Canvas c) {
             c.drawBitmap(frame.bitmap, rect, drawRegion, paint);
           }
           isFirstFrame = frame.no == 0;
+          if (Config.DEBUG_GIF_OPTIMIZATION_MODE) {
+            c.drawText("" + file.getRequestedSize(), (int) drawRegion.left, (int) drawRegion.top + Screen.dp(16), Paints.robotoStyleProvider(12f).getFakeBoldPaint());
+          }
         }
       }
       if (isFirstFrame) {

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -8527,7 +8527,7 @@ private void setTextFormattingLayoutVisible (boolean visible) {
     textFormattingVisible = visible;
     if (emojiLayout != null && textFormattingLayout != null) {
       textFormattingLayout.setVisibility(visible ? View.VISIBLE : View.GONE);
-      emojiLayout.optimizeForDisplayTextFormattingLayout(!visible);
+      emojiLayout.optimizeForDisplayTextFormattingLayout(visible);
       if (visible) {
         textFormattingLayout.checkButtonsActive(false);
       }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerTopView.java
Patch:
@@ -733,7 +733,9 @@ public void draw (Canvas c) {
               item.imageReceiver.drawScaled(c, item.imageReceiverScale);
               item.counter.draw(c, cx + size, viewHeight / 2f, Gravity.LEFT, counterAlpha, item.provider, 0);
             } else {
-              item.counter.draw(c, cx + itemWidth / 2f, viewHeight / 2f, Gravity.CENTER, counterAlpha, imageAlpha, item.provider, 0);
+              float counterWidth = item.counter.getWidth();
+              float addX = -Math.min((itemWidth - counterWidth) / 2f + item.translationX, 0);
+              item.counter.draw(c, cx + itemWidth / 2f + addX, viewHeight / 2f, Gravity.CENTER, counterAlpha, imageAlpha, item.provider, 0);
             }
           } else if (item.ellipsizedString != null) {
             c.drawText(item.ellipsizedString, cx + itemWidth / 2 - item.actualWidth / 2, viewHeight / 2 + Screen.dp(6f), Paints.getViewPagerTextPaint(color, item.needFakeBold));

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsPagerController.java
Patch:
@@ -408,7 +408,7 @@ private void getMessageOptions () {
   private int cachedHintHeight, cachedHintAvailWidth;
 
   private int getOptionItemsHeight () {
-    int optionItemsHeight = Screen.dp(54) * state.options.items.length;
+    int optionItemsHeight = state.options.items != null ? Screen.dp(54) * state.options.items.length : 0;
     int hintHeight;
     if (!StringUtils.isEmpty(state.options.info)) {
       int availWidth = Screen.currentWidth() - Screen.dp(16f) * 2; // FIXME: rely on parent view width
@@ -850,9 +850,8 @@ public boolean onBackgroundTouchDown (PopupLayout popupLayout, MotionEvent e) {
 
   @Override
   public void onFactorChanged (int id, float factor, float fraction, FactorAnimator callee) {
-    float pickerOffset = Math.min(getOptionItemsHeight(), getTargetHeight());
-
     if (id == REACTIONS_PICKER_VISIBILITY_ANIMATOR_ID) {
+      float pickerOffset = Math.min(getOptionItemsHeight(), getTargetHeight());
       invalidatePickerWrapper();
       contentView.setTranslationY(pickerOffset * factor);
       if (headerView != null) {
@@ -865,6 +864,7 @@ public void onFactorChanged (int id, float factor, float fraction, FactorAnimato
     }
 
     if (reactionsPickerBottomHeaderView != null) {
+      float pickerOffset = Math.min(getOptionItemsHeight(), getTargetHeight());
       reactionsPickerBottomHeaderView.setTranslationY(-pickerOffset * (1f - reactionsPickerVisibility.getFloatValue()) - keyboardHeight.getFactor());
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -3311,7 +3311,7 @@ private void setTextFormattingLayoutVisible (boolean visible) {
     textFormattingVisible = visible;
     if (emojiLayout != null && textFormattingLayout != null) {
       textFormattingLayout.setVisibility(visible ? View.VISIBLE : View.GONE);
-      emojiLayout.optimizeForDisplayTextFormattingLayout(!visible);
+      emojiLayout.optimizeForDisplayTextFormattingLayout(visible);
       if (visible) {
         textFormattingLayout.checkButtonsActive(false);
       }

File: app/src/main/java/org/thunderdog/challegram/MainActivity.java
Patch:
@@ -245,7 +245,7 @@ private void cleanupStack (ViewController<?> c, int accountId) {
 
   private void updateCounter () {
     Tdlib tdlib = currentTdlib();
-    boolean animated = getActivityState() == UI.STATE_RESUMED;
+    boolean animated = getActivityState() == UI.State.RESUMED;
     @Tdlib.ResolvableProblem int problemType = tdlib.findResolvableProblem();
     BackHeaderButton backButton = navigation.getHeaderView().getBackButton();
     if (problemType != Tdlib.ResolvableProblem.NONE) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/RaiseHelper.java
Patch:
@@ -398,7 +398,7 @@ private void processRaiseMode () {
     if (inRaise) {
       BaseActivity context = UI.getUiContext();
       inRaise = !TdlibManager.instance().calls().hasActiveCall();
-      if (inRaise && !this.inRaiseMode && (context != null && context.getActivityState() == UI.STATE_RESUMED && !context.isActivityBusyWithSomething())) {
+      if (inRaise && !this.inRaiseMode && (context != null && context.getActivityState() == UI.State.RESUMED && !context.isActivityBusyWithSomething())) {
         ViewController<?> c = context.navigation().getCurrentStackItem();
         inRaise = c instanceof MessagesController && ((MessagesController) c).isEmojiInputEmpty();
       }

File: app/src/main/java/org/thunderdog/challegram/core/WatchDogObserver.java
Patch:
@@ -170,7 +170,7 @@ public void unregister () {
 
   private void onChange (boolean isProbablyImage, boolean isExternal) {
     synchronized (this) {
-      if (isProbablyImage && UI.getUiState() == UI.STATE_RESUMED) {
+      if (isProbablyImage && UI.getUiState() == UI.State.RESUMED) {
         checkScreenshots(isExternal);
       }
     }

File: app/src/main/java/org/thunderdog/challegram/player/ProximityManager.java
Patch:
@@ -69,7 +69,7 @@ public void setPlaybackObject (@Nullable TdApi.Message playbackObject) {
     if (hadObject != hasObject) {
       if (hasObject) {
         Settings.instance().addRaiseToSpeakListener(this);
-        uiPaused = UI.getUiState() != UI.STATE_RESUMED;
+        uiPaused = UI.getUiState() != UI.State.RESUMED;
         UI.addStateListener(this);
         this.isVideo = isPlayingVideo();
         setEarpieceMode(Settings.instance().getEarpieceMode(isVideo));
@@ -126,7 +126,7 @@ private boolean setEarpieceMode (int mode) {
 
   @Override
   public void onUiStateChanged (int newState) {
-    boolean isPaused = newState != UI.STATE_RESUMED;
+    boolean isPaused = newState != UI.State.RESUMED;
     if (this.uiPaused != isPaused) {
       this.uiPaused = isPaused;
       checkProximitySensorEnabled();

File: app/src/main/java/org/thunderdog/challegram/telegram/CallManager.java
Patch:
@@ -85,7 +85,7 @@ private void setCurrentCall (final Tdlib tdlib, @Nullable final TdApi.Call call)
     if (currentCall == null || call == null) {
       this.currentCallTdlib = tdlib;
       this.currentCall = call;
-      this.currentCallAcknowledged = call == null || UI.getUiState() != UI.STATE_RESUMED || UI.isNavigationBusyWithSomething();
+      this.currentCallAcknowledged = call == null || UI.getUiState() != UI.State.RESUMED || UI.isNavigationBusyWithSomething();
       if (currentCallAcknowledged) {
         notifyCallListeners();
       }
@@ -98,7 +98,7 @@ private void setCurrentCall (final Tdlib tdlib, @Nullable final TdApi.Call call)
         intent.putExtra("account_id", tdlib.id());
         intent.putExtra("call_id", call.id);
         serviceCancellationSignal = new CancellationSignal();
-        UI.startService(intent, UI.getUiState() != UI.STATE_RESUMED, true, serviceCancellationSignal);
+        UI.startService(intent, UI.getUiState() != UI.State.RESUMED, true, serviceCancellationSignal);
 
         navigateToCallController(currentCallTdlib, currentCall);
       }
@@ -218,7 +218,7 @@ public void onCallSettingsChanged (Tdlib tdlib, int callId, CallSettings setting
 
   private boolean navigateToCallController (Tdlib tdlib, TdApi.Call call) {
     BaseActivity activity = UI.getUiContext();
-    if (activity != null && activity.getActivityState() == UI.STATE_RESUMED) {
+    if (activity != null && activity.getActivityState() == UI.State.RESUMED) {
       NavigationController navigation = UI.getNavigation();
       if (navigation != null) {
         ViewController<?> c = !navigation.isAnimating() ? navigation.getCurrentStackItem() : null;

File: app/src/main/java/org/thunderdog/challegram/telegram/LiveLocationManager.java
Patch:
@@ -98,7 +98,7 @@ public LiveLocationManager (TdlibManager context) {
     // this.context = context;
     this.handler = new UiHandler(this);
     this.helper = new LocationHelper(UI.getAppContext(), this, false, true);
-    this.isResumed = UI.getUiState() == UI.STATE_RESUMED;
+    this.isResumed = UI.getUiState() == UI.State.RESUMED;
     UI.addStateListener(this);
   }
 
@@ -364,7 +364,7 @@ void notifyOutputMessageEdited (Tdlib tdlib, TdApi.Message message) {
   @Override
   public void onUiStateChanged (int newState) {
     synchronized (this) {
-      boolean isResumed = newState == UI.STATE_RESUMED;
+      boolean isResumed = newState == UI.State.RESUMED;
       if (this.isResumed != isResumed) {
         this.isResumed = isResumed;
         rescheduleLocationWorker(); // changes timeout

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -255,12 +255,12 @@ private void onUserStatusUpdate (long userId, int wasOnline, @Nullable TdApi.Use
     tdlib.listeners().addCleanupListener(this);
 
     UI.addStateListener(this);
-    this.refreshUiPaused = UI.getUiState() != UI.STATE_RESUMED;
+    this.refreshUiPaused = UI.getUiState() != UI.State.RESUMED;
   }
 
   @Override
   public void onUiStateChanged (int newState) {
-    setPauseStatusRefreshers(newState != UI.STATE_RESUMED);
+    setPauseStatusRefreshers(newState != UI.State.RESUMED);
   }
 
   public void getInviteText (@Nullable final RunnableData<TdApi.Text> callback) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -396,7 +396,7 @@ private int findAccountIdByClient (Client client) {
   @Override
   @UiThread
   public void onUiStateChanged (int newState) {
-    boolean hasUi = newState != UI.STATE_DESTROYED && newState != UI.STATE_UNKNOWN;
+    boolean hasUi = newState != UI.State.DESTROYED && newState != UI.State.UNKNOWN;
     if (this.hasUi != hasUi) {
       this.hasUi = hasUi;
       for (TdlibAccount account : accounts) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -2612,7 +2612,7 @@ private boolean installLanguage (final TdlibDelegate context, final String langu
         showLinkTooltip(context.tdlib(), R.drawable.baseline_warning_24, TD.toErrorString(error), openParameters);
       } else {
         tdlib.ui().post(() -> {
-          if (context.context().getActivityState() != UI.STATE_DESTROYED) {
+          if (context.context().getActivityState() != UI.State.DESTROYED) {
             showLanguageInstallPrompt(context, info);
           }
         });

File: app/src/main/java/org/thunderdog/challegram/theme/ThemeManager.java
Patch:
@@ -333,7 +333,7 @@ public boolean changeGlobalTheme (final Tdlib tdlib, final @NonNull ThemeDelegat
       final boolean newDark = newTheme.isDark();
       if (wasDark != newDark && Settings.instance().getNightMode() != Settings.NIGHT_MODE_NONE) {
         BaseActivity activity = UI.getUiContext();
-        if (activity == null || activity.getActivityState() != UI.STATE_RESUMED) {
+        if (activity == null || activity.getActivityState() != UI.State.RESUMED) {
           Settings.instance().setAutoNightMode(Settings.NIGHT_MODE_NONE);
         } else {
           AlertDialog.Builder b = new AlertDialog.Builder(activity, Theme.dialogTheme());
@@ -355,7 +355,7 @@ public boolean changeGlobalTheme (final Tdlib tdlib, final @NonNull ThemeDelegat
     ThemeTemporary tempTheme = new ThemeTemporary(currentTheme(true), newTheme);
     this._currentTheme = tempTheme;
 
-    boolean animated = UI.wasResumedRecently(1000) || UI.getUiState() == UI.STATE_RESUMED;
+    boolean animated = UI.wasResumedRecently(1000) || UI.getUiState() == UI.State.RESUMED;
     if (animated) {
       if (themeAnimator == null)
         themeAnimator = new FactorAnimator(0, this, AnimatorUtils.DECELERATE_INTERPOLATOR, Config.DEBUG_NAV_ANIM ? 1000 : 200);

File: app/src/main/java/org/thunderdog/challegram/tool/Intents.java
Patch:
@@ -282,7 +282,7 @@ private static boolean openLink (Uri uri) {
     if (uri != null) {
       try {
         BaseActivity context = UI.getUiContext();
-        if (UI.getUiState() == UI.STATE_RESUMED && openInAppBrowser(context, uri, false)) {
+        if (UI.getUiState() == UI.State.RESUMED && openInAppBrowser(context, uri, false)) {
           return true;
         }
 

File: app/src/main/java/org/thunderdog/challegram/tool/Invalidator.java
Patch:
@@ -129,7 +129,7 @@ public void onFullnessStateChanged (ReferenceList<?> list, boolean isFull) {
   }
 
   private void checkLooping () {
-    boolean isLooping = this.isFull && context.getActivityState() == UI.STATE_RESUMED;
+    boolean isLooping = this.isFull && context.getActivityState() == UI.State.RESUMED;
     if (this.isLooping != isLooping) {
       this.isLooping = isLooping;
       if (isLooping) {

File: app/src/main/java/org/thunderdog/challegram/ui/GameController.java
Patch:
@@ -102,7 +102,7 @@ public void onActivityResume () {
 
   private void checkPlaying () {
     if (getArgumentsStrict().ownerController != null) {
-      getArgumentsStrict().ownerController.setBroadcastAction(isFocused() && !isDestroyed() && context.getActivityState() == UI.STATE_RESUMED ? TdApi.ChatActionStartPlayingGame.CONSTRUCTOR : TdApi.ChatActionCancel.CONSTRUCTOR);
+      getArgumentsStrict().ownerController.setBroadcastAction(isFocused() && !isDestroyed() && context.getActivityState() == UI.State.RESUMED ? TdApi.ChatActionStartPlayingGame.CONSTRUCTOR : TdApi.ChatActionCancel.CONSTRUCTOR);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/IntroController.java
Patch:
@@ -540,7 +540,7 @@ public void clearPopup () {
      */
     public void setPopup (@Nullable PopupLayout popupLayout, int windowType) {
       if (this.popupLayout != null && !this.popupLayout.isWindowHidden()) {
-        this.popupLayout.hideWindow(UI.getContext(this.popupLayout.getContext()).getActivityState() == UI.STATE_RESUMED);
+        this.popupLayout.hideWindow(UI.getContext(this.popupLayout.getContext()).getActivityState() == UI.State.RESUMED);
       }
       this.popupLayout = popupLayout;
       if (popupLayout != null) {

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -9462,7 +9462,7 @@ public boolean sendPhotosAndVideosCompressed (final ImageGalleryFile[] files, fi
   private CancellableRunnable broadcastActor;
 
   private void checkBroadcastingSomeAction () {
-    boolean needBroadcast = broadcastingAction != 0 && context.getActivityState() == UI.STATE_RESUMED && !isDestroyed();
+    boolean needBroadcast = broadcastingAction != 0 && context.getActivityState() == UI.State.RESUMED && !isDestroyed();
     if (this.broadcastingSomeAction != needBroadcast) {
       if (needBroadcast) {
         broadcastActor = new CancellableRunnable() {

File: app/src/main/java/org/thunderdog/challegram/ui/PasscodeController.java
Patch:
@@ -1026,7 +1026,7 @@ private void setNeedFinger (boolean need) {
   private boolean fingerUsed;
 
   private void checkFingerprintNeeded () {
-    boolean need = this.needFinger && context.getActivityState() == UI.STATE_RESUMED;
+    boolean need = this.needFinger && context.getActivityState() == UI.State.RESUMED;
     if (fingerUsed != need) {
       if (need) {
         FingerprintPassword.authenticate(this);

File: app/src/main/java/org/thunderdog/challegram/unsorted/Passcode.java
Patch:
@@ -136,7 +136,7 @@ public void setDisplayNotifications (boolean display) {
 
   @Override
   public void onUiStateChanged (int newState) {
-    if (newState == UI.STATE_PAUSED) {
+    if (newState == UI.State.PAUSED) {
       trackUserActivity(true);
     }
   }
@@ -268,7 +268,7 @@ public boolean isLocked () {
   public boolean isLockedAndVisible () {
     if (isLocked()) {
       BaseActivity activity = UI.getUiContext();
-      return UI.getUiState() != UI.STATE_RESUMED || activity == null || activity.isPasscodeShowing();
+      return UI.getUiState() != UI.State.RESUMED || activity == null || activity.isPasscodeShowing();
     }
     return false;
   }

File: app/src/main/java/org/thunderdog/challegram/widget/PopupLayout.java
Patch:
@@ -321,7 +321,7 @@ private void showSystemWindow (View anchorView) {
         return;
       }
       int state = context.getActivityState();
-      if (state == UI.STATE_RESUMED) {
+      if (state == UI.State.RESUMED) {
         try {
           window.showAtLocation(windowAnchorView = anchorView, Gravity.NO_GRAVITY, 0, 0);
           window.setBackgroundDrawable(new RootDrawable(UI.getContext(getContext())));
@@ -349,7 +349,7 @@ public void onActivityStateChanged (BaseActivity activity, int newState, int pre
             context.removeSimpleStateListener(this);
             return;
           }
-          if (newState == UI.STATE_RESUMED) {
+          if (newState == UI.State.RESUMED) {
             context.removeSimpleStateListener(this);
             if (!isTemporarilyHidden) {
               showSystemWindow(anchorView);

File: app/src/main/java/org/thunderdog/challegram/widget/ProgressComponent.java
Patch:
@@ -91,7 +91,7 @@ public ProgressComponent (BaseActivity context, int radius) {
 
   @Override
   public void onActivityStateChanged (BaseActivity activity, int newState, int prevState) {
-    setUiResumed(newState == UI.STATE_RESUMED);
+    setUiResumed(newState == UI.State.RESUMED);
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/component/emoji/MediaStickersAdapter.java
Patch:
@@ -288,7 +288,7 @@ public void updateCollapseView (TextView collapseView, TGStickerSetInfo stickerS
         int moreSize = stickerSet.getFullSize() - stickerSet.getSize();
         collapseView.setText(Lang.pluralBold(showMoreRes, moreSize));
       } else {
-        collapseView.setText(R.string.ShowLessStickers);
+        collapseView.setText(Lang.getString(R.string.ShowLessStickers));
       }
       collapseView.setVisibility(View.VISIBLE);
     } else {

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -6189,11 +6189,11 @@ public boolean allowSliderChanges (SliderView view) {
 
           TextView textView = Views.newTextView(context(), 14f, Theme.getColor(ColorId.white), Gravity.LEFT, Views.TEXT_FLAG_SINGLE_LINE);
           textView.setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, Screen.dp(15f), Screen.dp(10f), Screen.dp(15f), 0));
-          textView.setText(R.string.QualityWorse);
+          textView.setText(Lang.getString(R.string.QualityWorse));
           qualityControlWrap.addView(textView);
           textView = Views.newTextView(context(), 14f, Theme.getColor(ColorId.white), Gravity.RIGHT, Views.TEXT_FLAG_SINGLE_LINE);
           textView.setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.RIGHT | Gravity.TOP, Screen.dp(15f), Screen.dp(10f), Screen.dp(15f), 0));
-          textView.setText(R.string.QualityBetter);
+          textView.setText(Lang.getString(R.string.QualityBetter));
           qualityControlWrap.addView(textView);
 
           qualityInfo = Views.newTextView(context(), 15f, Theme.getColor(ColorId.white), Gravity.CENTER, Views.TEXT_FLAG_SINGLE_LINE);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingHolder.java
Patch:
@@ -1489,7 +1489,7 @@ public void getItemOffsets (Rect outRect, View view, RecyclerView parent, Recycl
           secretState.setLayoutParams(params);
           secretState.setCompoundDrawablesWithIntrinsicBounds(secretIcon, null, null, null);
           secretState.setCompoundDrawablePadding(Screen.dp(8));
-          secretState.setText(R.string.SessionSecretChats);
+          secretState.setText(Lang.getString(R.string.SessionSecretChats));
           secretState.setTextColor(Theme.getColor(ColorId.textSecure));
           secretState.setAllCaps(true);
           secretState.setGravity(Gravity.CENTER_VERTICAL);

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -2860,9 +2860,9 @@ public boolean onTouchEvent (View view, MotionEvent e, @Nullable ClickCallback c
           TextEntity entity = part.getClickableEntity();
           boolean done = false;
           if (clickListener != null) {
-            done = clickListener.onClick(view, this, part, entity != null ? entity.openParameters(view, this, part) : new TdlibUi.UrlOpenParameters().tooltip(part.newTooltipBuilder(view)));
+            done = clickListener.onClick(view, this, part, entity != null ? entity.openParameters(view, this, part, false) : new TdlibUi.UrlOpenParameters().tooltip(part.newTooltipBuilder(view)));
           } else if (entity != null) {
-            entity.performClick(view, this, part, callback);
+            entity.performClick(view, this, part, callback, false);
             done = true;
           }
           cancelTouch();

File: app/src/main/java/org/thunderdog/challegram/component/base/SettingView.java
Patch:
@@ -441,6 +441,7 @@ public void setText (TextWrapper text) {
     if (getMeasuredHeight() != getCurrentHeight() && getMeasuredHeight() != 0) {
       requestLayout();
     }
+    checkEmojiListener();
     invalidate();
   }
 
@@ -622,7 +623,7 @@ private void buildLayout (int totalWidth, int totalHeight) {
   private boolean subscribedToEmojiUpdates;
 
   private void checkEmojiListener () {
-    boolean needEmojiListener = this.displayItemNameLayout != null || this.displayItemDataLayout != null || (this.displayItemNameText != null && this.displayItemNameText.hasMedia());
+    boolean needEmojiListener = this.displayItemNameLayout != null || this.displayItemDataLayout != null || (this.displayItemNameText != null && this.displayItemNameText.hasBuiltInEmoji()) || (this.text != null && this.text.hasBuiltInEmoji());
     if (this.subscribedToEmojiUpdates != needEmojiListener) {
       this.subscribedToEmojiUpdates = needEmojiListener;
       if (needEmojiListener) {

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerController.java
Patch:
@@ -598,7 +598,7 @@ public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.For
     context.setExcludeHeader(true);
 
     context.setTdlib(account.tdlib());
-    context.setBoundUserId(account.tdlib().myUserId());
+    context.setBoundAccountId(account.id);
 
     return new ForceTouchView.ActionListener() {
       @Override

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -1334,7 +1334,7 @@ public TdlibAccount account (int accountId) {
     return accounts.get(accountId);
   }
 
-  public int accountIdForUserId (int userId, int startIndex) {
+  public int accountIdForUserId (long userId, int startIndex) {
     for (int i = startIndex; i < accounts.size(); i++) {
       if (accounts.get(i).getKnownUserId() == userId) {
         return i;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationChannelGroup.java
Patch:
@@ -406,7 +406,7 @@ public static void cleanupChannels (Tdlib tdlib) {
           String groupId = channel.getGroup();
           if (StringUtils.isEmpty(groupId) || !groupId.startsWith(groupPrefix))
             continue;
-          int userId = StringUtils.parseInt(groupId.substring(groupPrefix.length()));
+          long userId = StringUtils.parseInt(groupId.substring(groupPrefix.length()));
           if (userId != accountUserId)
             continue;
           String id = channel.getId();
@@ -467,7 +467,7 @@ public static void cleanupChannelGroups (TdlibManager context) {
             android.app.NotificationChannelGroup group = groups.get(i);
             String groupId = group.getId();
             if (!StringUtils.isEmpty(groupId) && groupId.startsWith(prefix)) {
-              int userId = StringUtils.parseInt(groupId.substring(prefix.length()));
+              long userId = StringUtils.parseInt(groupId.substring(prefix.length()));
               if (userId == 0 || Arrays.binarySearch(userIds, userId) < 0) {
                 m.deleteNotificationChannelGroup(groupId);
               }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibMessageViewer.java
Patch:
@@ -847,7 +847,7 @@ public boolean hasPotentiallyVisibleMessages () {
     return false;
   }
 
-  private LongSparseArray<LongSet> screenshotMessages = null;
+  private @Nullable LongSparseArray<LongSet> screenshotMessages = null;
 
   private void addScreenshotMessage (long chatId, long messageId) {
     if (screenshotMessages == null) {
@@ -885,7 +885,7 @@ public void onScreenshotTaken (int timeSeconds) {
         }
       }
     }
-    if (!screenshotMessages.isEmpty()) {
+    if (screenshotMessages != null && !screenshotMessages.isEmpty()) {
       for (int i = 0; i < screenshotMessages.size(); i++) {
         long chatId = screenshotMessages.keyAt(i);
         long[] messageIds = screenshotMessages.valueAt(i).toArray();

File: app/src/main/java/org/thunderdog/challegram/component/chat/MediaPreview.java
Patch:
@@ -19,6 +19,7 @@
 import androidx.annotation.Nullable;
 
 import org.drinkless.tdlib.TdApi;
+import org.thunderdog.challegram.data.ContentPreview;
 import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.loader.ComplexReceiver;
 import org.thunderdog.challegram.telegram.Tdlib;
@@ -133,7 +134,7 @@ public static MediaPreview valueOf (Tdlib tdlib, File file, String mimeType, int
     }
   }
 
-  public static MediaPreview valueOf (Tdlib tdlib, TdApi.Message message, @Nullable TD.ContentPreview preview, int size, int cornerRadius) {
+  public static MediaPreview valueOf (Tdlib tdlib, TdApi.Message message, @Nullable ContentPreview preview, int size, int cornerRadius) {
     Tdlib.Album album = preview != null ? preview.getAlbum() : null;
     if (album != null) {
       // TODO album preview?

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagePreviewView.java
Patch:
@@ -22,7 +22,7 @@
 
 import org.drinkless.tdlib.TdApi;
 import org.thunderdog.challegram.config.Config;
-import org.thunderdog.challegram.data.TD;
+import org.thunderdog.challegram.data.ContentPreview;
 import org.thunderdog.challegram.loader.ComplexReceiver;
 import org.thunderdog.challegram.receiver.RefreshRateLimiter;
 import org.thunderdog.challegram.support.RippleSupport;
@@ -108,7 +108,7 @@ public MessagePreviewView (Context context, Tdlib tdlib) {
   private String forcedTitle;
   private boolean ignoreAlbumRefreshers, useAvatarFallback;
 
-  private TD.ContentPreview contentPreview;
+  private ContentPreview contentPreview;
 
   public void setMessage (@Nullable TdApi.Message message, @Nullable TdApi.SearchMessagesFilter filter, @Nullable String forcedTitle, boolean ignoreAlbumRefreshers) {
     this.ignoreAlbumRefreshers = ignoreAlbumRefreshers;
@@ -171,7 +171,7 @@ public void setLinePadding (float customLinePadding) {
   }
 
   private void buildPreview () {
-    this.contentPreview = TD.getChatListPreview(tdlib, message.chatId, message, true);
+    this.contentPreview = ContentPreview.getChatListPreview(tdlib, message.chatId, message, true);
     if (contentPreview.hasRefresher() && !(ignoreAlbumRefreshers && contentPreview.isMediaGroup())) {
       contentPreview.refreshContent((chatId, messageId, newPreview, oldPreview) -> {
         tdlib.runOnUiThread(() -> {

File: app/src/main/java/org/thunderdog/challegram/component/chat/ReplyView.java
Patch:
@@ -27,6 +27,7 @@
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.core.Lang;
+import org.thunderdog.challegram.data.ContentPreview;
 import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.data.TGWebPage;
 import org.thunderdog.challegram.loader.ComplexReceiver;
@@ -166,7 +167,7 @@ public boolean onTouchEvent (MotionEvent event) {
   public void setWebPage (String link, TdApi.WebPage page) {
     layoutIfNeeded();
     if (page == null) {
-      reply.set(Lang.getString(R.string.GettingLinkInfo), new TD.ContentPreview(link, false), null, null);
+      reply.set(Lang.getString(R.string.GettingLinkInfo), new ContentPreview(link, false), null, null);
     } else {
       String title = Strings.any(page.title, page.siteName);
       if (StringUtils.isEmpty(title)) {
@@ -188,7 +189,7 @@ public void setWebPage (String link, TdApi.WebPage page) {
         }
       }
       String desc = !Td.isEmpty(page.description) ? page.description.text : page.displayUrl;
-      reply.set(title, new TD.ContentPreview(desc, false), page.photo != null ? page.photo.minithumbnail : null, TD.getWebPagePreviewImage(page));
+      reply.set(title, new ContentPreview(desc, false), page.photo != null ? page.photo.minithumbnail : null, TD.getWebPagePreviewImage(page));
     }
     invalidate();
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGFoundMessage.java
Patch:
@@ -28,7 +28,7 @@ public TGFoundMessage (Tdlib tdlib, TdApi.ChatList chatList, TdApi.Chat chat, Td
     this.chat = new TGFoundChat(tdlib, chatList, chat, null);
     this.message = message;
     // Strings.highlightWords(Strings.replaceNewLines(copyText), query, 0, InlineResultEmojiSuggestion.SPECIAL_SPLITTERS);
-    TD.ContentPreview preview = TD.getChatListPreview(tdlib, message.chatId, message, true);
+    ContentPreview preview = ContentPreview.getChatListPreview(tdlib, message.chatId, message, true);
     this.text = preview.buildFormattedText(false);
     this.highlight = Highlight.valueOf(text.text, query);
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageMedia.java
Patch:
@@ -210,7 +210,7 @@ private boolean checkCommonCaption (boolean force) {
     synchronized (this) {
       ArrayList<TdApi.Message> combinedMessages = getCombinedMessagesUnsafely();
       if (combinedMessages != null && !combinedMessages.isEmpty()) {
-        TdApi.Message captionMessage = TD.getAlbumCaptionMessage(tdlib, combinedMessages);
+        TdApi.Message captionMessage = ContentPreview.getAlbumCaptionMessage(tdlib, combinedMessages);
         if (captionMessage != null) {
           caption = tdlib.getPendingFormattedText(captionMessage.chatId, captionMessage.id);
           if (caption != null) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageSticker.java
Patch:
@@ -834,12 +834,12 @@ public boolean onTouchEvent (MessageView view, MotionEvent e) {
                   GifReceiver receiver = ((MessageView) targetView).getComplexReceiver().getGifReceiver(0);
                   if (receiver != null) {
                     outRect.set(receiver.getLeft(), receiver.getTop(), receiver.getRight(), receiver.getBottom());
-                    outRect.top += outRect.height() * (TD.EMOJI_DICE.textRepresentation.equals(dice.emoji) ? .35f : .20f);
+                    outRect.top += outRect.height() * (ContentPreview.EMOJI_DICE.textRepresentation.equals(dice.emoji) ? .35f : .20f);
                   }
                 })
                 .gif(gifFile, imageFile)
                 .controller(controller())
-                .show(tdlib, Lang.getString(TD.EMOJI_DART.textRepresentation.equals(dice.emoji) ? R.string.SendDartHint : TD.EMOJI_DICE.textRepresentation.equals(dice.emoji) ? R.string.SendDiceHint : R.string.SendUnknownDiceHint, dice.emoji));
+                .show(tdlib, Lang.getString(ContentPreview.EMOJI_DART.textRepresentation.equals(dice.emoji) ? R.string.SendDartHint : ContentPreview.EMOJI_DICE.textRepresentation.equals(dice.emoji) ? R.string.SendDiceHint : R.string.SendUnknownDiceHint, dice.emoji));
               break;
             }
             case SPECIAL_TYPE_ANIMATED_EMOJI:

File: app/src/main/java/org/thunderdog/challegram/widget/ChartLayout.java
Patch:
@@ -34,7 +34,7 @@
 import org.thunderdog.challegram.charts.data.ChartDataUtil;
 import org.thunderdog.challegram.charts.data.DoubleLinearChartData;
 import org.thunderdog.challegram.charts.data.StackBarChartData;
-import org.thunderdog.challegram.data.TD;
+import org.thunderdog.challegram.data.ContentPreview;
 import org.thunderdog.challegram.loader.gif.GifFile;
 import org.thunderdog.challegram.loader.gif.GifReceiver;
 import org.thunderdog.challegram.navigation.ViewController;
@@ -200,7 +200,7 @@ public void initWithType (Tdlib tdlib, int type, Delegate delegate, @Nullable Vi
     this.chartType = type;
     ViewSupport.setThemedBackground(this, ColorId.filling, themeProvider);
 
-    tdlib.client().send(new TdApi.GetAnimatedEmoji(TD.EMOJI_ABACUS.textRepresentation), result -> {
+    tdlib.client().send(new TdApi.GetAnimatedEmoji(ContentPreview.EMOJI_ABACUS.textRepresentation), result -> {
       if (result.getConstructor() == TdApi.AnimatedEmoji.CONSTRUCTOR) {
         TdApi.AnimatedEmoji emoji = (TdApi.AnimatedEmoji) result;
         tdlib.runOnUiThread(() -> {

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -616,6 +616,7 @@ private void openEmojiKeyboard () {
       if (emojiLayout == null) {
         emojiLayout = new EmojiLayout(context());
         emojiLayout.initWithMediasEnabled(this, false, this, this, false); // FIXME shall we use dark mode?
+        emojiLayout.setAllowPremiumFeatures(tdlib.isSelfChat(getOutputChatId()));
         emojiLayout.setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.BOTTOM));
         bottomWrap.addView(emojiLayout);
         if (inputView != null) {
@@ -7879,6 +7880,8 @@ public void onClick (View v) {
     } else if (viewId == R.id.btn_send) {
       if (currentSection != SECTION_CAPTION) {
         changeSection(SECTION_CAPTION, MODE_OK);
+      } else if (inputView != null && !tdlib.isSelfChat(getOutputChatId()) && !tdlib.hasPremium() && inputView.hasOnlyPremiumFeatures()) {
+        context().tooltipManager().builder(sendButton).show(tdlib, Strings.buildMarkdown(this, Lang.getString(R.string.MessageContainsPremiumFeatures), null)).hideDelayed();
       } else {
         send(v, Td.newSendOptions(), false, false);
       }

File: app/src/main/java/org/thunderdog/challegram/ui/EmojiListController.java
Patch:
@@ -133,7 +133,7 @@ public void onScrolled (@NonNull RecyclerView recyclerView, int dx, int dy) {
         if (contentView.isSectionStable() && contentView.getCurrentSection() == SECTION_STICKERS && getArguments() != null && getArguments().isWatchingMovements() && getArguments().getCurrentItem() == 0) {
           int y = emojiController.getStickersScrollY(false);
           getArguments().moveHeader(y);
-          getArguments().setCurrentStickerSectionByPosition(EmojiLayout.EMOJI_INSTALLED_CONTROLLER_ID, emojiController.getStickerSetSection(), true, true);
+          getArguments().setCurrentStickerSectionByPosition(EmojiLayout.EMOJI_INSTALLED_CONTROLLER_ID, emojiController.getStickerSetSection(EmojiLayout.getHeaderSize() / 2), true, true);
          //  getArguments().onSectionScroll(EmojiMediaType.STICKER, dy != 0);
         }
 

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -2621,6 +2621,9 @@ public static String toErrorString (@Nullable TdApi.Object object) {
       return "Unknown error (null)";
     if (object.getConstructor() == TdApi.Error.CONSTRUCTOR) {
       TdApi.Error error = (TdApi.Error) object;
+      if (StringUtils.isEmpty(error.message)) {
+        return "Empty error " + error.code;
+      }
       return translateError(error.code, error.message);
     }
     return "not an error";

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLoader.java
Patch:
@@ -184,7 +184,7 @@ public TdApi.MessageSource messageSource () {
   }
 
   private TdApi.MessageSource newMessageSource () {
-    if (manager.controller().isInForceTouchMode() || (BuildConfig.DEBUG && Settings.instance().dontReadMessages())) {
+    if (manager.readMessagesDisabled()) {
       return new TdApi.MessageSourceHistoryPreview();
     } else if (specialMode == MessagesLoader.SPECIAL_MODE_EVENT_LOG) {
       return new TdApi.MessageSourceChatEventLog();

File: app/src/main/java/org/thunderdog/challegram/widget/BaseView.java
Patch:
@@ -347,6 +347,7 @@ public boolean onLongPressRequestedAt (View view, float x, float y) {
           if (customControllerProvider != null) {
             ViewController<?> controller = customControllerProvider.createForceTouchPreview(this, x, y);
             if (controller != null) {
+              controller.setInForceTouchMode(true);
               if (controller.needAsynchronousAnimation()) {
                 openPreviewAsync(controller, x, y);
               } else {
@@ -468,6 +469,7 @@ private void openChatPreviewAsync (TdApi.ChatList chatList, TdApi.Chat chat, @Nu
     }
     cancelAsyncPreview();
     final MessagesController controller = new MessagesController(getContext(), tdlib);
+    controller.setInForceTouchMode(true);
     controller.setArguments(createChatPreviewArguments(chatList, chat, messageThread, filter));
     openPreviewAsync(controller, x, y);
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatListener.java
Patch:
@@ -44,7 +44,7 @@ default void onChatPendingJoinRequestsChanged (long chatId, TdApi.ChatJoinReques
   default void onChatReplyMarkupChanged (long chatId, long replyMarkupMessageId) { }
   default void onChatDraftMessageChanged (long chatId, @Nullable TdApi.DraftMessage draftMessage) { }
   default void onChatUnreadMentionCount(long chatId, int unreadMentionCount, boolean availabilityChanged) { }
-  default void onChatUnreadReactionCount(long chatId, int unreadReactionCount, boolean availabilityChanged) { }
+  default void onChatUnreadReactionCount (long chatId, int unreadReactionCount, boolean availabilityChanged) { }
   default void onChatDefaultDisableNotifications (long chatId, boolean defaultDisableNotifications) { }
   default void onChatDefaultMessageSenderIdChanged (long chatId, TdApi.MessageSender senderId) { }
   default void onChatClientDataChanged (long chatId, @Nullable String clientData)                             { }

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -1835,7 +1835,7 @@ public int getControllerWidth (View view) {
   private StickerPreviewView stickerPreview;
   private StickerSmallView stickerPreviewControllerView;
 
-  public void openStickerPreview (Tdlib tdlib, StickerSmallView stickerView, TGStickerObj sticker, int cx, int cy, int maxWidth, int viewportHeight, boolean disableEmojis, boolean isEmojiStatus) {
+  public void openStickerPreview (Tdlib tdlib, StickerSmallView stickerView, TGStickerObj sticker, int cx, int cy, int maxWidth, int viewportHeight, boolean disableEmojis) {
     if (stickerPreview != null) {
       return;
     }
@@ -1845,7 +1845,6 @@ public void openStickerPreview (Tdlib tdlib, StickerSmallView stickerView, TGSti
     stickerPreview = new StickerPreviewView(this);
     stickerPreview.setControllerView(stickerPreviewControllerView);
     stickerPreview.setSticker(tdlib, sticker, cx, cy, maxWidth, viewportHeight, disableEmojis);
-    stickerPreview.setIsEmojiStatus(isEmojiStatus);
 
     stickerPreviewWindow = new PopupLayout(this);
     stickerPreviewWindow.setBackListener(stickerPreview);

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLayout.java
Patch:
@@ -71,6 +71,7 @@
 import org.thunderdog.challegram.tool.Fonts;
 import org.thunderdog.challegram.tool.Intents;
 import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.tool.Views;
@@ -1838,7 +1839,7 @@ protected void onDraw (Canvas c) {
       if (isAnonymous) {
         c.drawCircle(cx, cy, Screen.dp(15f / 2f), Paints.fillingPaint(Theme.iconLightColor()));
         Drawable drawable = Drawables.get(getResources(), R.drawable.infanf_baseline_incognito_11);
-        Drawables.draw(c, drawable, cx - Screen.dp(5.5f), cy - Screen.dp(5.5f), Paints.getPorterDuffPaint(Theme.getColor(ColorId.badgeMutedText)));
+        Drawables.draw(c, drawable, cx - Screen.dp(5.5f), cy - Screen.dp(5.5f), PorterDuffPaint.get(ColorId.badgeMutedText));
       }
 
       super.onDraw(c);

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLocationPlaceView.java
Patch:
@@ -34,8 +34,8 @@
 import org.thunderdog.challegram.loader.ImageReceiver;
 import org.thunderdog.challegram.navigation.ViewController;
 import org.thunderdog.challegram.support.RippleSupport;
-import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.theme.ColorId;
+import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.DrawAlgorithms;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Fonts;
@@ -371,7 +371,7 @@ protected void onDraw (Canvas c) {
       c.drawCircle(cx, cy, Screen.dp(IMAGE_RADIUS), Paints.fillingPaint(ColorUtils.alphaColor(alpha, Theme.getColor(ColorId.fileRed))));
 
       if (progressFactor < 1f) {
-        Paint bitmapPaint = Paints.getPorterDuffPaint(0xffffffff);
+        Paint bitmapPaint = Paints.whitePorterDuffPaint();
         bitmapPaint.setAlpha((int) (255f * (1f - progressFactor) * alpha));
         Drawables.draw(c, iconSmall, cx - iconSmall.getMinimumWidth() / 2, cy - iconSmall.getMinimumHeight() / 2, bitmapPaint);
         bitmapPaint.setAlpha(255);
@@ -404,7 +404,7 @@ protected void onDraw (Canvas c) {
     if (letters == null || receiver.getCurrentFile() != null) {
       if (receiver.needPlaceholder()) {
         float iconAlpha = alpha - receiver.getDisplayAlpha();
-        Paint paint = Paints.getPorterDuffPaint(0xffffffff);
+        Paint paint = Paints.whitePorterDuffPaint();
         paint.setAlpha((int) (255f * iconAlpha));
         Drawables.draw(c, iconBig, cx - iconBig.getMinimumWidth() / 2, cy - iconBig.getMinimumHeight() / 2, paint);
         paint.setAlpha(255);

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLocationPointView.java
Patch:
@@ -101,13 +101,13 @@ protected void onDraw (Canvas c) {
     c.drawCircle(cx, cy, Screen.dp(20f), Paints.fillingPaint(color));
     progressComponent.draw(c);
     if (activeFactor > 0f && placeFactor < 1f) {
-      Paint paint = Paints.getPorterDuffPaint(0xffffffff);
+      Paint paint = Paints.whitePorterDuffPaint();
       paint.setAlpha((int) (255f * activeFactor * (1f - placeFactor)));
       Drawables.draw(c, locationIcon, cx - locationIcon.getMinimumWidth() / 2, cy - locationIcon.getMinimumHeight() / 2, paint);
       paint.setAlpha(255);
     }
     if (placeFactor > 0f) {
-      Paint paint = Paints.getPorterDuffPaint(0xffffffff);
+      Paint paint = Paints.whitePorterDuffPaint();
       paint.setAlpha((int) (255f * placeFactor));
       c.save();
       c.scale(.7f, .7f, cx, cy);

File: app/src/main/java/org/thunderdog/challegram/component/chat/EmojiToneHelper.java
Patch:
@@ -44,8 +44,8 @@
 import org.thunderdog.challegram.tool.Views;
 import org.thunderdog.challegram.unsorted.Settings;
 import org.thunderdog.challegram.widget.BubbleLayout;
-import org.thunderdog.challegram.widget.EmojiMediaLayout.EmojiToneListView;
 import org.thunderdog.challegram.widget.NoScrollTextView;
+import org.thunderdog.challegram.widget.emoji.EmojiToneListView;
 
 import me.vkryl.android.AnimatorUtils;
 import me.vkryl.android.animator.BoolAnimator;
@@ -335,12 +335,12 @@ public void onFactorChangeFinished (int id, float finalFactor, FactorAnimator ca
 
   private void updateApplyPosition () {
     if (applyButton != null) {
-      int totalWidth = Screen.dp(EmojiToneListView.ITEM_SIZE * 6);
+      int totalWidth = Screen.dp(EmojiToneListView.ITEM_SIZE * 6 + (EmojiToneListView.VIEW_PADDING_HORIZONTAL + EmojiToneListView.ITEM_PADDING) * 2);
       int itemWidth = totalWidth / EmojiData.emojiColors.length;
 
       float factor = positionFactor / (float) (EmojiData.emojiColors.length - 1);
       int buttonWidth = applyButton.getMeasuredWidth();
-      int margin = itemWidth / 2;
+      int margin = itemWidth / 2 + Screen.dp(EmojiToneListView.VIEW_PADDING_HORIZONTAL + EmojiToneListView.ITEM_PADDING);
       applyButton.setCornerCenterX(margin + (int) ((float) (buttonWidth - margin * 2) * factor));
       applyButton.setTranslationX((float) (totalWidth - buttonWidth) * factor);
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MediaPreviewSimple.java
Patch:
@@ -156,7 +156,7 @@ public MediaPreviewSimple (Tdlib tdlib, int size, int cornerRadius, TdApi.Locati
         previewReceiver.drawPlaceholder(c);
         if (needPinIcon) {
           Drawable drawable = view.getSparseDrawable(R.drawable.baseline_location_on_24, 0);
-          Drawables.draw(c, drawable, receiver.centerX() - drawable.getMinimumWidth() / 2, receiver.centerY() - drawable.getMinimumHeight() / 2, Paints.getPorterDuffPaint(0xffffffff));
+          Drawables.draw(c, drawable, receiver.centerX() - drawable.getMinimumWidth() / 2, receiver.centerY() - drawable.getMinimumHeight() / 2, Paints.whitePorterDuffPaint());
         }
       }
       previewReceiver.draw(c);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -121,11 +121,11 @@ public MessageView (Context context) {
     this.highRefreshRateLimiter.attachOtherRefreshLimiter(refreshRateLimiter);
 
     avatarReceiver = new AvatarReceiver(this)
-      .setUpdateListener(refreshRateLimiter);
+      .setUpdateListener(refreshRateLimiter.passThroughUpdateListener());
     avatarsReceiver = new ComplexReceiver(this)
-      .setUpdateListener(refreshRateLimiter);
+      .setUpdateListener(refreshRateLimiter.passThroughComplexUpdateListener());
     reactionAvatarsReceiver = new ComplexReceiver(this)
-      .setUpdateListener(refreshRateLimiter);
+      .setUpdateListener(refreshRateLimiter.passThroughComplexUpdateListener());
     gifReceiver = new GifReceiver(this)
       .setUpdateListener(refreshRateLimiter.passThroughUpdateListener());
     reactionsComplexReceiver = new ComplexReceiver()

File: app/src/main/java/org/thunderdog/challegram/component/chat/WallpaperAdapter.java
Patch:
@@ -512,10 +512,10 @@ public void setWallpaper (TGBackground wallpaper, boolean isSelected) {
       if (wallpaper != null) {
         if (wallpaper.isPattern()) {
           int color = wallpaper.getPatternColor();
-          receiver.setColorFilter(color);
+          receiver.setPorterDuffColorFilter(color);
           preview.requestFile(null);
         } else {
-          receiver.disableColorFilter();
+          receiver.disablePorterDuffColorFilter();
           preview.requestFile(wallpaper.getPreview(true));
         }
         receiver.requestFile(wallpaper.getPreview(false));
@@ -647,7 +647,7 @@ protected void onDraw (Canvas c) {
         c.drawCircle(centerX, centerY, Screen.dp(28f), Paints.fillingPaint(ColorUtils.color((int) (86f * circleFactor), 0)));
 
         if (isCustom) {
-          Paint paint = Paints.getPorterDuffPaint(0xffffffff);
+          Paint paint = Paints.whitePorterDuffPaint();
           paint.setAlpha((int) (255f * (1f - factor)));
           Drawable drawable = getSparseDrawable(R.drawable.baseline_image_24, 0);
           Drawables.draw(c, drawable, centerX - drawable.getMinimumWidth() / 2, centerY - drawable.getMinimumHeight() / 2, paint);

File: app/src/main/java/org/thunderdog/challegram/component/chat/WallpaperView.java
Patch:
@@ -298,7 +298,7 @@ private static void drawWallpaper (TGBackground wallpaper, Canvas c, DrawAlgorit
       } else {
         c.drawColor(ColorUtils.alphaColor(alpha, wallpaper.getBackgroundColor(defaultColor)));
       }
-      receiver.getReceiver().setColorFilter(wallpaper.getPatternColor());
+      receiver.getReceiver().setPorterDuffColorFilter(wallpaper.getPatternColor());
       alpha *= wallpaper.getPatternIntensity();
       if (alpha != 1f)
         receiver.setPaintAlpha(alpha);
@@ -309,7 +309,7 @@ private static void drawWallpaper (TGBackground wallpaper, Canvas c, DrawAlgorit
       if (receiver.needPlaceholder()) {
         c.drawColor(ColorUtils.alphaColor(alpha, defaultColor));
       }
-      receiver.disableColorFilter();
+      receiver.disablePorterDuffColorFilter();
       if (alpha != 1f) {
         receiver.setPaintAlpha(alpha);
       }

File: app/src/main/java/org/thunderdog/challegram/component/passcode/PinButtonView.java
Patch:
@@ -25,6 +25,7 @@
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.Views;
 
@@ -124,7 +125,7 @@ private void buildLayout () {
   @Override
   protected void onDraw (Canvas c) {
     if (number == -1) {
-      Drawables.draw(c, icon, bigLeft, bigTop, Paints.getPorterDuffPaint(Theme.getColor(ColorId.passcodeText)));
+      Drawables.draw(c, icon, bigLeft, bigTop, PorterDuffPaint.get(ColorId.passcodeText));
     } else {
       c.drawText(getNumber(), bigLeft, bigTop, Paints.getRegularTextPaint(TEXT_SIZE_BIG, Theme.getColor(ColorId.passcodeText)));
       c.drawText(getCodes(), smallLeft, smallTop, Paints.getRegularTextPaint(TEXT_SIZE_SMALL, Theme.passcodeSubtitleColor()));

File: app/src/main/java/org/thunderdog/challegram/component/user/RemoveHelper.java
Patch:
@@ -138,7 +138,7 @@ public void draw (Canvas c) {
 
 
     float alpha = (1f - fadeFactor);
-    Paint bitmapPaint = Paints.getPorterDuffPaint(0xffffffff);
+    Paint bitmapPaint = Paints.whitePorterDuffPaint();
     if (alpha < 1f) {
       bitmapPaint.setAlpha((int) (255f * alpha));
     }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -269,6 +269,7 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean DISABLE_PASSWORD_INVISIBILITY = true;
 
   public static final boolean DEBUG_STICKER_OUTLINES = false; // BuildConfig.DEBUG;
+  public static final boolean DEBUG_GIF_OPTIMIZATION_MODE = false;
 
   public static final int SUPPORTED_INSTANT_VIEW_VERSION = 2;
   public static final boolean INSTANT_VIEW_WRONG_LAYOUT = false;
@@ -280,7 +281,6 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean VIDEO_CLOUD_PLAYBACK_AVAILABLE = true;
 
   public static final float MAX_ANIMATED_EMOJI_REFRESH_RATE = 30.0f;
-  public static final boolean LOOP_BIG_CUSTOM_EMOJI = false;
 
   public static final String FILE_PROVIDER_AUTHORITY = BuildConfig.APPLICATION_ID + ".provider";
 
@@ -304,4 +304,6 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean ALLOW_SPONSORED_MESSAGE_LINK_COPY = true;
   public static final boolean PROTECT_ANONYMOUS_VOTING = false;
   public static final boolean PROTECT_ANONYMOUS_REACTIONS = false;
+
+  public static final boolean KEEP_ORIGINAL_EMOJI_WHEN_INPUT_CUSTOM_EMOJI = true;
 }

File: app/src/main/java/org/thunderdog/challegram/data/InlineResultCommon.java
Patch:
@@ -565,7 +565,7 @@ protected void drawInternal (CustomResultView view, Canvas c, ComplexReceiver re
         c.drawCircle(cx, cy, Screen.dp(25f), Paints.fillingPaint(Theme.getColor(customColorId)));
       }
       if (customIcon != null) {
-        Drawables.draw(c, customIcon, cx - customIcon.getMinimumWidth() / 2f, cy - customIcon.getMinimumHeight() / 2f, Paints.getPorterDuffPaint(0xffffffff));
+        Drawables.draw(c, customIcon, cx - customIcon.getMinimumWidth() / 2f, cy - customIcon.getMinimumHeight() / 2f, Paints.whitePorterDuffPaint());
       }
     } else if (fileProgress == null || getMediaPreview() != null) {
       if (getMediaPreview() != null) {

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockMedia.java
Patch:
@@ -453,7 +453,7 @@ protected <T extends View & DrawableProvider> void drawInternal (T view, Canvas
       final int x = ((view.getMeasuredWidth() - getMinimumContentPadding(true) - getMinimumContentPadding(false)) / 2 - wrapper.getCellWidth() / 2) + getMinimumContentPadding(true);
       wrapper.draw(view, c, x, getContentTop(), preview, receiver, 1f);
       if (!StringUtils.isEmpty(url)) {
-        Drawables.draw(c, linkIcon, receiver.getRight() - linkIcon.getMinimumWidth() - Screen.dp(9f), receiver.getTop() + Screen.dp(9f), Paints.getPorterDuffPaint(0xffffffff));
+        Drawables.draw(c, linkIcon, receiver.getRight() - linkIcon.getMinimumWidth() - Screen.dp(9f), receiver.getTop() + Screen.dp(9f), Paints.whitePorterDuffPaint());
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageCall.java
Patch:
@@ -100,14 +100,14 @@ protected void drawContent (MessageView view, Canvas c, int startX, int startY,
     } else {
       int radius = Screen.dp(FileProgressComponent.DEFAULT_FILE_RADIUS);
       c.drawCircle(startX + radius, startY + radius, radius, Paints.fillingPaint(Theme.getColor(ColorId.file)));
-      Drawables.draw(c, phoneIcon, startX + radius - phoneIcon.getMinimumWidth() / 2f, startY + radius - phoneIcon.getMinimumHeight() / 2f, Paints.getPorterDuffPaint(0xffffffff));
+      Drawables.draw(c, phoneIcon, startX + radius - phoneIcon.getMinimumWidth() / 2f, startY + radius - phoneIcon.getMinimumHeight() / 2f, Paints.whitePorterDuffPaint());
       startX += radius * 2 + Screen.dp(11f);
     }
     if (useBubbles()) {
       startY -= Screen.dp(4f);
     }
     c.drawText(trimmedTitle, startX, startY + Screen.dp(21f), Paints.getMediumTextPaint(15f, getTextColor(), needFakeTitle));
-    Drawables.draw(c, callIcon, startX, startY + Screen.dp(callIconId == R.drawable.baseline_call_missed_18 ? 27.5f : callIconId == R.drawable.baseline_call_made_18 ? 26.5f : 27f), Paints.getPorterDuffPaint(Theme.getColor(callIconColorId)));
+    Drawables.draw(c, callIcon, startX, startY + Screen.dp(callIconId == R.drawable.baseline_call_missed_18 ? 27.5f : callIconId == R.drawable.baseline_call_made_18 ? 26.5f : 27f), PorterDuffPaint.get(callIconColorId));
     c.drawText(trimmedSubtitle, startX + Screen.dp(20f), startY + Screen.dp(41f), Paints.getRegularTextPaint(13f, getDecentColor()));
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageFile.java
Patch:
@@ -710,6 +710,9 @@ private TdApi.FormattedText getTranslationSafeText (TdApi.FormattedText text) {
   @Nullable
   @Override
   public TdApi.FormattedText getTextToTranslateImpl () {
+    if (filesList == null) {
+      return null;
+    }
     if (filesList.size() == 1) {
       CaptionedFile file = filesList.get(0);
       return file.hasCaption() ? getTranslationSafeText(file.serverCaption) : null;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageLocation.java
Patch:
@@ -773,7 +773,7 @@ protected void drawContent (MessageView view, Canvas c, final int startX, int st
 
       if (iconReceiver.needPlaceholder()) {
         float iconAlpha = 1f - ((ImageReceiver) iconReceiver).getDisplayAlpha();
-        Paint paint = Paints.getPorterDuffPaint(0xffffffff);
+        Paint paint = Paints.whitePorterDuffPaint();
         if (iconAlpha != 1f) {
           paint.setAlpha((int) (255f * iconAlpha));
         }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessagePoll.java
Patch:
@@ -1577,6 +1577,9 @@ private TooltipOverlayView.LocationProvider makeButtonLocationProvider (int sele
   @Nullable
   @Override
   public TdApi.FormattedText getTextToTranslateImpl () {
+    if (state == null || state.poll == null) {
+      return null;
+    }
     StringBuilder pollText = new StringBuilder(state.poll.question.replaceAll("•", " "));
     for (TdApi.PollOption option : state.poll.options) {
       pollText.append("\n\n• ").append(option.text.replaceAll("•", " "));

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageVideo.java
Patch:
@@ -403,7 +403,7 @@ protected void drawOverlay (MessageView view, Canvas c, int startX, int startY,
         restoreToCount = -1;
       }
       c.drawCircle(centerX, centerY, radius, Paints.fillingPaint(ColorUtils.alphaColor(alpha, 0x40000000)));
-      Paint paint = Paints.getPorterDuffPaint(0xffffffff);
+      Paint paint = Paints.whitePorterDuffPaint();
       paint.setAlpha((int) (255f * alpha));
       Drawable drawable = view.getSparseDrawable(R.drawable.deproko_baseline_sound_muted_24, 0);
       Drawables.draw(c, drawable, centerX - drawable.getMinimumWidth() / 2f, centerY - drawable.getMinimumHeight() / 2f, paint);

File: app/src/main/java/org/thunderdog/challegram/data/WallpaperComponent.java
Patch:
@@ -242,10 +242,10 @@ private void drawBackground (Canvas c, TGBackground wallpaper, int startX, int s
       } else {
         c.drawColor(ColorUtils.alphaColor(alpha, wallpaper.getBackgroundColor(defaultColor)));
       }
-      receiver.setColorFilter(wallpaper.getPatternColor());
+      receiver.setPorterDuffColorFilter(wallpaper.getPatternColor());
       receiver.setPaintAlpha(alpha * wallpaper.getPatternIntensity());
     } else {
-      receiver.disableColorFilter();
+      receiver.disablePorterDuffColorFilter();
       if (alpha != 1f) {
         receiver.setPaintAlpha(alpha);
       }

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifActor.java
Patch:
@@ -342,6 +342,9 @@ public void startDecoding (String path) {
         case GifFile.OptimizationMode.STICKER_PREVIEW:
           resolution = Math.min(Math.max(EmojiMediaListController.getEstimateColumnResolution(), StickersListController.getEstimateColumnResolution()), 160);
           break;
+        case GifFile.OptimizationMode.EMOJI_PREVIEW:
+          resolution = Math.min(Screen.dp(40), 120);
+          break;
         case GifFile.OptimizationMode.NONE:
           resolution = Math.min(Screen.dp(TGMessageSticker.MAX_STICKER_SIZE), 384);
           break;

File: app/src/main/java/org/thunderdog/challegram/loader/gif/LottieCache.java
Patch:
@@ -48,7 +48,7 @@ public static LottieCache instance () {
   }
 
   private final BaseThread gcThread = new BaseThread("LottieCacheGcThread");
-  private final BaseThread[] threadPool = new BaseThread[3];
+  private final BaseThread[] threadPool = new BaseThread[4];
 
   private LottieCache () { }
 

File: app/src/main/java/org/thunderdog/challegram/mediaview/EditButton.java
Patch:
@@ -163,7 +163,7 @@ private void setIconInternal (int iconRes) {
   private void drawSoundOn () {
     Canvas c = specialIconCanvas;
     specialIcon.eraseColor(0);
-    Drawables.draw(c, icon, 0, 0, Paints.getPorterDuffPaint(0xffffffff));
+    Drawables.draw(c, icon, 0, 0, Paints.whitePorterDuffPaint());
     if (activeFactor != 0f) {
       int width = Screen.dp(2f);
       int height = Screen.dp(24f);

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -2913,10 +2913,10 @@ protected void onDraw (Canvas c) {
       if (isLeft) {
         c.save();
         c.rotate(180, getMeasuredWidth() / 2, getMeasuredHeight() / 2);
-        Drawables.draw(c, backIcon, 0, y, Paints.getPorterDuffPaint(0xffffffff));
+        Drawables.draw(c, backIcon, 0, y, Paints.whitePorterDuffPaint());
         c.restore();
       } else {
-        Drawables.draw(c, backIcon, 0, y, Paints.getPorterDuffPaint(0xffffffff));
+        Drawables.draw(c, backIcon, 0, y, Paints.whitePorterDuffPaint());
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/EditHeaderView.java
Patch:
@@ -258,7 +258,7 @@ protected void onDraw (Canvas c) {
     int cx = receiver.centerX();
     int cy = receiver.centerY();
     c.drawCircle(cx, cy, avatarRadius, Paints.fillingPaint(0x20000000));
-    Drawables.draw(c, icon, cx - (int) (icon.getMinimumWidth() * .5f), cy - (int) (icon.getMinimumHeight() * .5f), Paints.getPorterDuffPaint(0xffffffff));
+    Drawables.draw(c, icon, cx - (int) (icon.getMinimumWidth() * .5f), cy - (int) (icon.getMinimumHeight() * .5f), Paints.whitePorterDuffPaint());
   }
 
   public void setInputEnabled (boolean enabled) {

File: app/src/main/java/org/thunderdog/challegram/navigation/HeaderFilling.java
Patch:
@@ -999,7 +999,7 @@ private void drawOngoingCall (Canvas c, int playerTop, float rectWidth, int play
 
     c.drawRect(0, playerTop, rectWidth, playerBottom, Paints.fillingPaint(playerFillingColor));
 
-    Paint iconPaint = Paints.getPorterDuffPaint(0xffffffff);
+    Paint iconPaint = Paints.whitePorterDuffPaint();
 
     // Mute button
     iconPaint.setAlpha((int) (255f * dropShadowAlpha * callActiveFactor * (1f - callIncomingFactor)));

File: app/src/main/java/org/thunderdog/challegram/navigation/MenuMoreWrap.java
Patch:
@@ -208,7 +208,7 @@ protected void onDraw (Canvas canvas) {
           if (icon != null) {
             float x = getMeasuredWidth() - Screen.dp(17 + 16);
             float y = (getMeasuredHeight() - icon.getMinimumHeight()) / 2f;
-            Drawables.draw(canvas, icon, x, y, Paints.getPorterDuffPaint(Theme.getColor(ColorId.text)));
+            Drawables.draw(canvas, icon, x, y, PorterDuffPaint.get(ColorId.text));
           }
         }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/ToggleHeaderView2.java
Patch:
@@ -13,6 +13,7 @@
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 
 import me.vkryl.android.AnimatorUtils;
@@ -89,7 +90,7 @@ protected void onDraw (Canvas c) {
       entry.item.draw(c, getPaddingLeft(), textTop + Screen.dp(19) + offset2, entry.getVisibility(), Paints.getRegularTextPaint(14f, Theme.getColor(ColorId.textLight)));
     }
 
-    Drawables.draw(c, arrowDrawable, getTitleWidth() + Screen.dp(2), triangleTop, Paints.getPorterDuffPaint(Theme.getColor(ColorId.icon)));
+    Drawables.draw(c, arrowDrawable, getTitleWidth() + Screen.dp(2), triangleTop, PorterDuffPaint.get(ColorId.icon));
   }
 
 

File: app/src/main/java/org/thunderdog/challegram/navigation/TooltipOverlayView.java
Patch:
@@ -51,6 +51,7 @@
 import org.thunderdog.challegram.theme.ThemeDelegate;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.unsorted.Settings;
@@ -312,7 +313,7 @@ public void requestIcons (ComplexReceiver iconReceiver) {
     public void draw (Canvas c, ColorProvider colorProvider, int left, int top, int right, int bottom, float alpha, ComplexReceiver iconReceiver) {
       c.drawText(originalLanguage, left, top + Screen.dp(14), Paints.getRegularTextPaint(14, Theme.getColor(ColorId.tooltip_text)));
       c.drawText(translatedLanguage, left + arrowX + Screen.dp(18), top + Screen.dp(14), Paints.getRegularTextPaint(14, Theme.getColor(ColorId.tooltip_textLink)));
-      Drawables.draw(c, arrow, left + arrowX + Screen.dp(1), top, Paints.getPorterDuffPaint(Theme.getColor(ColorId.tooltip_text)));
+      Drawables.draw(c, arrow, left + arrowX + Screen.dp(1), top, PorterDuffPaint.get(ColorId.tooltip_text));
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewController.java
Patch:
@@ -1126,7 +1126,7 @@ public final String getLastSearchInput () {
 
   private String lastSearchInput = "";
 
-  protected void clearSearchInput () {
+  public void clearSearchInput () {
     clearSearchInput("", false);
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsController.java
Patch:
@@ -233,13 +233,13 @@ public void onBindViewHolder (@NonNull OptionHolder holder, int position) {
 
       if (type == TYPE_EMOJI_PACK_INFO) {
         EmojiPacksInfoView textView = ((EmojiPacksInfoView) holder.itemView);
+        textView.setId(R.id.btn_emojiPackInfoButton);
         textView.setTextSize(15f);
         textView.setTextColorId(ColorId.textLight);
         textView.update(emojiPackFirstEmoji, emojiPackIds, new ClickableSpan() {
           @Override
           public void onClick (@NonNull View widget) {
-            tdlib.ui().showStickerSets(parent, emojiPackIds, true, null);
-            parent.hideWindowDelegate.run();
+            parent.listener.onClick(textView);
           }
         }, false);
       }

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -49,6 +49,7 @@
 import org.thunderdog.challegram.telegram.TdlibAccount;
 import org.thunderdog.challegram.telegram.TdlibManager;
 import org.thunderdog.challegram.theme.ColorId;
+import org.thunderdog.challegram.theme.PorterDuffColorId;
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Intents;
 import org.thunderdog.challegram.tool.Keyboard;
@@ -792,7 +793,7 @@ private void setInCountryMode (final boolean inCountryMode) {
 
   private void updateHint (boolean useOffsetLeft, CharSequence text, boolean isError) {
     int offsetLeft = useOffsetLeft ? Screen.dp(89f) : 0;
-    int textColorId = isError ? ColorId.textNegative : ColorId.textLight;
+    @PorterDuffColorId int textColorId = isError ? ColorId.textNegative : ColorId.textLight;
     if (offsetLeft != hintItem.getTextPaddingLeft() || hintItem.getTextColorId(ColorId.background_textLight) != textColorId || !StringUtils.equalsOrBothEmpty(hintItem.getString(), text)) {
       hintItem.setTextPaddingLeft(offsetLeft);
       hintItem.setTextColorId(textColorId);

File: app/src/main/java/org/thunderdog/challegram/ui/PrivacyExceptionController.java
Patch:
@@ -314,7 +314,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
           view.setTextColorId(item.getTextColorId(ColorId.text));
           view.setIcon(item.getIconResource());
           if (!isMultiChat) {
-            view.setIconColorId(tdlib.cache().userContact(userId) ? ColorId.iconNegative : 0);
+            view.setIconColorId(tdlib.cache().userContact(userId) ? ColorId.iconNegative : ColorId.NONE);
           }
         }
       }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsLogOutController.java
Patch:
@@ -70,7 +70,7 @@ protected void onCreateView (Context context, CustomRecyclerView recyclerView) {
     adapter = new SettingsAdapter(this) {
       @Override
       protected void setValuedSetting (ListItem item, SettingView view, boolean isUpdate) {
-        view.setIconColorId(item.getId() == R.id.btn_logout ? ColorId.iconNegative : 0);
+        view.setIconColorId(item.getId() == R.id.btn_logout ? ColorId.iconNegative : ColorId.NONE);
       }
     };
 

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsSessionsController.java
Patch:
@@ -34,6 +34,7 @@
 import org.thunderdog.challegram.telegram.SessionListener;
 import org.thunderdog.challegram.telegram.Tdlib;
 import org.thunderdog.challegram.theme.ColorId;
+import org.thunderdog.challegram.theme.PorterDuffColorId;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.Strings;
 import org.thunderdog.challegram.tool.UI;
@@ -255,7 +256,7 @@ public void setValuedSetting (ListItem item, SettingView view, boolean isUpdate)
         if (item.getViewType() == ListItem.TYPE_VALUED_SETTING_COMPACT) {
           view.forcePadding(Screen.dp(63f), 0);
         }
-        int iconColorId = item.getTextColorId(ColorId.NONE);
+        @PorterDuffColorId int iconColorId = item.getTextColorId(ColorId.NONE);
         if (iconColorId == ColorId.textNegative) {
           iconColorId = ColorId.iconNegative;
         }

File: app/src/main/java/org/thunderdog/challegram/ui/ThemeListController.java
Patch:
@@ -1662,7 +1662,7 @@ public void afterDraw (View view, Canvas c) {
             rectF.set(cx, cy, cx + width, cy + avatarRadius + avatarRadius);
             c.drawRoundRect(rectF, avatarRadius, avatarRadius, Paints.fillingPaint(theme.getColor(ColorId.headerRemoveBackground)));
             c.drawCircle(cx + avatarRadius, cy + avatarRadius, avatarRadius, Paints.fillingPaint(theme.getColor(ColorId.headerRemoveBackgroundHighlight)));
-            Drawables.draw(c, icon, cx + avatarRadius - icon.getMinimumWidth() / 2, cy + avatarRadius - icon.getMinimumHeight() / 2, Paints.getPorterDuffPaint(0xffffffff));
+            Drawables.draw(c, icon, cx + avatarRadius - icon.getMinimumWidth() / 2, cy + avatarRadius - icon.getMinimumHeight() / 2, Paints.whitePorterDuffPaint());
             c.drawText(text, cx + avatarRadius * 2 + padding, cy + avatarRadius + Screen.dp(5f), paint);
           }
         });

File: app/src/main/java/org/thunderdog/challegram/ui/TranslationControllerV2.java
Patch:
@@ -44,7 +44,7 @@
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Fonts;
-import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.tool.Views;
@@ -931,7 +931,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
     protected void dispatchDraw (Canvas canvas) {
       super.dispatchDraw(canvas);
       if (drawable != null) {
-        Drawables.draw(canvas, drawable, getMeasuredWidth() - Screen.dp(40), Screen.dp(13), Paints.getPorterDuffPaint(Theme.getColor(isSelected ? ColorId.iconActive : ColorId.icon)));
+        Drawables.draw(canvas, drawable, getMeasuredWidth() - Screen.dp(40), Screen.dp(13), PorterDuffPaint.get(isSelected ? ColorId.iconActive : ColorId.icon));
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraControlButton.java
Patch:
@@ -281,7 +281,7 @@ protected void onDraw (Canvas c) {
       }
     }
 
-    Paint paint = isSmall ? Paints.getIconGrayPorterDuffPaint() : Paints.getPorterDuffPaint(0xffffffff);
+    Paint paint = isSmall ? Paints.getIconGrayPorterDuffPaint() : Paints.whitePorterDuffPaint();
     if (changeFactor == 0f) {
       Drawables.draw(c, icon, cx - icon.getMinimumWidth() / 2, cy - icon.getMinimumHeight() / 2, paint);
     } else {

File: app/src/main/java/org/thunderdog/challegram/widget/AvatarView.java
Patch:
@@ -406,7 +406,7 @@ protected void onDraw (Canvas c) {
         drawPlaceholder(c, ColorId.statusBar);
       }
       if (overlayIcon != null)
-        Drawables.draw(c, overlayIcon, receiver.centerX() - overlayIcon.getMinimumWidth() / 2, receiver.centerY() - overlayIcon.getMinimumHeight() / 2, Paints.getPorterDuffPaint(0xffffffff));
+        Drawables.draw(c, overlayIcon, receiver.centerX() - overlayIcon.getMinimumWidth() / 2, receiver.centerY() - overlayIcon.getMinimumHeight() / 2, Paints.whitePorterDuffPaint());
     }
   }
 }

File: app/src/main/java/org/thunderdog/challegram/widget/FileProgressComponent.java
Patch:
@@ -1483,7 +1483,7 @@ public <T extends View & DrawableProvider> void draw (T view, final Canvas c) {
         drawPlayPause(c, cx, cy, playPauseAlpha, true);
       } else if (currentBitmapRes != 0 && (currentBitmapRes != downloadedIconRes || !hideDownloadedIcon) && !(isVideoStreaming() && isVideoStreamingCloudNeeded)) {
         boolean ignoreScale = isVideoStreaming() && !isVideoStreamingSmallUi() && vsOnDownloadedAnimator != null && vsOnDownloadedAnimator.isAnimating();
-        Paint bitmapPaint = Paints.getPorterDuffPaint(0xffffffff);
+        Paint bitmapPaint = Paints.whitePorterDuffPaint();
 
         final float initScaleFactor = bitmapChangeFactor <= .5f ? (bitmapChangeFactor / .5f) : (1f - (bitmapChangeFactor - .5f) / .5f);
         final float scaleFactor = (ignoreScale) ? 0f : initScaleFactor;

File: app/src/main/java/org/thunderdog/challegram/widget/LiveLocationView.java
Patch:
@@ -54,7 +54,7 @@ protected void onDraw (Canvas c) {
     }
     int cx = getMeasuredWidth() / 2;
     int cy = getMeasuredHeight() / 2;
-    Drawables.draw(c, liveLocationBmp, cx - liveLocationBmp.getMinimumWidth() / 2, cy - liveLocationBmp.getMinimumHeight() / 2, Paints.getPorterDuffPaint(0xffffffff));
+    Drawables.draw(c, liveLocationBmp, cx - liveLocationBmp.getMinimumWidth() / 2, cy - liveLocationBmp.getMinimumHeight() / 2, Paints.whitePorterDuffPaint());
     long delay = DrawAlgorithms.drawWaves(c, cx, cy - Screen.dp(4f), 0xffffffff, true, nextScheduleTime);
     if (delay != -1) {
       nextScheduleTime = SystemClock.uptimeMillis() + delay;

File: app/src/main/java/org/thunderdog/challegram/widget/TrendingPackHeaderView.java
Patch:
@@ -36,7 +36,7 @@
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Fonts;
-import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.Views;
 import org.thunderdog.challegram.util.text.Highlight;
@@ -99,7 +99,7 @@ public TrendingPackHeaderView (Context context) {
       @Override
       protected void dispatchDraw (Canvas canvas) {
         super.dispatchDraw(canvas);
-        Drawables.draw(canvas, lockDrawable, 0, 0, Paints.getPorterDuffPaint(Theme.getColor(ColorId.text)));
+        Drawables.draw(canvas, lockDrawable, 0, 0, PorterDuffPaint.get(ColorId.text));
       }
     };
     premiumLockIcon.setId(R.id.btn_addStickerSet);

File: app/src/main/java/org/thunderdog/challegram/widget/VerticalChatView.java
Patch:
@@ -44,6 +44,7 @@
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Icons;
 import org.thunderdog.challegram.tool.Paints;
+import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.Views;
 import org.thunderdog.challegram.util.text.Counter;
@@ -373,7 +374,7 @@ protected void onDraw (Canvas c) {
 
       if (drawAnonymousSender) {
         identityAvatarReceiver.drawPlaceholderRounded(c, identityAvatarReceiver.getDisplayRadius(), Theme.getColor(ColorId.iconLight));
-        Drawables.draw(c, Drawables.get(R.drawable.infanf_baseline_incognito_14), identityAvatarReceiver.centerX() - Screen.dp(7), identityAvatarReceiver.centerY() - Screen.dp(7), Paints.getPorterDuffPaint(Theme.getColor(ColorId.badgeMutedText)));
+        Drawables.draw(c, Drawables.get(R.drawable.infanf_baseline_incognito_14), identityAvatarReceiver.centerX() - Screen.dp(7), identityAvatarReceiver.centerY() - Screen.dp(7), PorterDuffPaint.get(ColorId.badgeMutedText));
       } else {
         identityAvatarReceiver.draw(c);
       }

File: app/src/main/java/org/thunderdog/challegram/widget/emoji/EmojiHeaderCollapsibleSectionView.java
Patch:
@@ -12,7 +12,7 @@
  *
  * File created on 18/08/2023
  */
-package org.thunderdog.challegram.widget.EmojiMediaLayout;
+package org.thunderdog.challegram.widget.emoji;
 
 import android.annotation.SuppressLint;
 import android.content.Context;
@@ -27,8 +27,8 @@
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.Screen;
-import org.thunderdog.challegram.widget.EmojiMediaLayout.Sections.EmojiSection;
-import org.thunderdog.challegram.widget.EmojiMediaLayout.Sections.EmojiSectionView;
+import org.thunderdog.challegram.widget.emoji.section.EmojiSection;
+import org.thunderdog.challegram.widget.emoji.section.EmojiSectionView;
 
 import java.util.ArrayList;
 

File: app/src/main/java/org/thunderdog/challegram/widget/emoji/EmojiLayoutSectionPager.java
Patch:
@@ -12,7 +12,7 @@
  *
  * File created on 18/08/2023
  */
-package org.thunderdog.challegram.widget.EmojiMediaLayout;
+package org.thunderdog.challegram.widget.emoji;
 
 import android.content.Context;
 import android.view.View;

File: app/src/main/java/org/thunderdog/challegram/widget/emoji/EmojiToneListView.java
Patch:
@@ -12,7 +12,7 @@
  *
  * File created on 21/08/2023
  */
-package org.thunderdog.challegram.widget.EmojiMediaLayout;
+package org.thunderdog.challegram.widget.emoji;
 
 import android.content.Context;
 import android.graphics.Canvas;
@@ -160,7 +160,7 @@ public void setCustomEmoji (@Nullable TdApi.Sticker[] stickersFromLocal, @Nullab
   }
 
   public boolean changeIndex (float x, float y) {
-    final int resV = MathUtils.clamp((int)((y - Screen.dp(VIEW_PADDING_TOP + ITEM_PADDING)) / Screen.dp(ITEM_SIZE)), 0, Math.max(getRowsCount() - 1, 0));
+    final int resV = MathUtils.clamp((int)((y - Screen.dp(VIEW_PADDING_TOP + ITEM_PADDING)) / Screen.dp(ITEM_SIZE + ITEM_PADDING * 3)), 0, Math.max(getRowsCount() - 1, 0));
     final int resH = MathUtils.clamp((int)((x - getRowX(resV)) / Screen.dp(ITEM_SIZE)), 0, Math.max(getRowSize(resV) - 1, 0));
 
     if (resH != toneIndex || resV != toneIndexVertical) {

File: app/src/main/java/org/thunderdog/challegram/widget/emoji/section/EmojiSectionView.java
Patch:
@@ -12,7 +12,7 @@
  *
  * File created on 18/08/2023
  */
-package org.thunderdog.challegram.widget.EmojiMediaLayout.Sections;
+package org.thunderdog.challegram.widget.emoji.section;
 
 import android.content.Context;
 import android.graphics.Canvas;

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -1929,6 +1929,9 @@ public boolean openForceTouch (ForceTouchView.ForceTouchContext context) {
       forceTouchView.initWithContext(context);
     } catch (Throwable t) {
       Log.e("Unable to open force touch preview", t);
+      if (BuildConfig.DEBUG && t instanceof RuntimeException) {
+        throw (RuntimeException) t;
+      }
       return false;
     }
 

File: app/src/main/java/org/thunderdog/challegram/ui/PrivacyExceptionController.java
Patch:
@@ -238,7 +238,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
                   view.setData(R.string.PrivacyShowNumberExceptionContacts);
                   break;
                 case TdApi.UserPrivacySettingShowBio.CONSTRUCTOR:
-                  view.setData(R.string.PrivacyShowNumberExceptionContacts);
+                  view.setData(R.string.PrivacyShowBioExceptionContacts);
                   break;
                 case TdApi.UserPrivacySettingShowProfilePhoto.CONSTRUCTOR:
                   view.setData(R.string.PrivacyPhotoExceptionContacts);

File: app/src/main/java/org/thunderdog/challegram/MainActivity.java
Patch:
@@ -536,6 +536,7 @@ private void showExperimentalAlert () {
       if (c != null) {
         c.openAlert(R.string.ExperimentalBuildTitle,
           Strings.buildMarkdown(c, Lang.getStringSecure(R.string.ExperimentalBuildInfo), (view, span, clickedText) -> {
+            //noinspection SwitchIntDef
             switch (span.getEntityType().getConstructor()) {
               case TdApi.TextEntityTypeUrl.CONSTRUCTOR:
                 UI.openUrl(clickedText);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -650,6 +650,7 @@ public static Object fillMessageOptions (MessagesController m, TGMessage msg, @N
         icons.append(R.drawable.outline_forum_24);
       }
 
+      //noinspection SwitchIntDef
       switch (content.getConstructor()) {
         case TdApi.MessagePoll.CONSTRUCTOR: {
           TdApi.Poll poll = ((TdApi.MessagePoll) content).poll;

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLoader.java
Patch:
@@ -1746,7 +1746,7 @@ private boolean isEndReached (MessageId messageId) {
             return true;
           }
         }
-        if (searchFilter != null && searchFilter.getConstructor() == TdApi.SearchMessagesFilterPinned.CONSTRUCTOR && manager.maxPinnedMessageId() != 0 && messageId.getMessageId() >= manager.maxPinnedMessageId()) {
+        if (searchFilter != null && Td.isPinnedFilter(searchFilter) && manager.maxPinnedMessageId() != 0 && messageId.getMessageId() >= manager.maxPinnedMessageId()) {
           return true;
         }
       }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -600,7 +600,7 @@ public void openSearch (TdApi.Chat chat, String query, TdApi.MessageSender sende
     loader.setChat(chat, null, MessagesLoader.SPECIAL_MODE_SEARCH, filter);
     loader.setSearchParameters(query, sender, filter);
     adapter.setChatType(chat.type);
-    if (filter != null && filter.getConstructor() == TdApi.SearchMessagesFilterPinned.CONSTRUCTOR) {
+    if (filter != null && Td.isPinnedFilter(filter)) {
       initPinned(chat.id, 1, 1);
     }
     if (highlightMessageId != null) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesSearchManagerMiddleware.java
Patch:
@@ -487,7 +487,7 @@ private void reset () {
 
   private static TdApi.Function<?> safeSearchSecretQuery (TdApi.SearchSecretMessages query) {
     final TdApi.SearchMessagesFilter safeFilter = safeFilter(query.filter);
-    final boolean hasMediaFilter = query.filter != null && safeFilter != null && safeFilter.getConstructor() != TdApi.SearchMessagesFilterEmpty.CONSTRUCTOR;
+    final boolean hasMediaFilter = query.filter != null && safeFilter != null && !Td.isEmptyFilter(safeFilter);
     final boolean queryIsEmpty = StringUtils.isEmpty(query.query);
 
     if (queryIsEmpty) {

File: app/src/main/java/org/thunderdog/challegram/component/popups/MessageSeenController.java
Patch:
@@ -48,6 +48,7 @@ public class MessageSeenController extends MediaBottomBaseController<Void> imple
   private final TdApi.MessageViewers viewers;
 
   public static CharSequence getViewString (TGMessage msg, int count) {
+    //noinspection SwitchIntDef
     switch (msg.getMessage().content.getConstructor()) {
       case TdApi.MessageVoiceNote.CONSTRUCTOR: {
         return Lang.pluralBold(R.string.MessageSeenXListened, count);
@@ -62,6 +63,7 @@ public static CharSequence getViewString (TGMessage msg, int count) {
   }
 
   public static String getNobodyString (TGMessage msg) {
+    //noinspection SwitchIntDef
     switch (msg.getMessage().content.getConstructor()) {
       case TdApi.MessageVoiceNote.CONSTRUCTOR: {
         return Lang.getString(R.string.MessageSeenNobodyListened);

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -186,6 +186,7 @@ public static boolean useBundledWebp () {
 
   public static boolean useCloudPlayback (TdApi.Message playPauseFile) {
     if (USE_CLOUD_PLAYER && playPauseFile != null) {
+      //noinspection SwitchIntDef
       switch (playPauseFile.content.getConstructor()) {
         case TdApi.MessageAudio.CONSTRUCTOR:
           TdApi.Audio audio = ((TdApi.MessageAudio) playPauseFile.content).audio;

File: app/src/main/java/org/thunderdog/challegram/data/InlineResult.java
Patch:
@@ -400,6 +400,7 @@ public boolean setThumbLocation (MediaViewThumbLocation location, View view, int
   // Static stuff
 
   public static InlineResult<?> valueOf (BaseActivity context, Tdlib tdlib, TdApi.Message message) {
+    //noinspection SwitchIntDef
     switch (message.content.getConstructor()) {
       case TdApi.MessageAudio.CONSTRUCTOR: {
         return new InlineResultCommon(context, tdlib, message, (TdApi.MessageAudio) message.content, null).setMessage(message);

File: app/src/main/java/org/thunderdog/challegram/data/InlineResultMultiline.java
Patch:
@@ -90,7 +90,7 @@ public InlineResultMultiline (BaseActivity context, Tdlib tdlib, TdApi.Message m
     setMessage(message);
 
     TdApi.FormattedText text = Td.textOrCaption(message.content);
-    TdApi.WebPage webPage = message.content.getConstructor() == TdApi.MessageText.CONSTRUCTOR ? ((TdApi.MessageText) message.content).webPage : null;
+    TdApi.WebPage webPage = Td.isText(message.content) ? ((TdApi.MessageText) message.content).webPage : null;
 
     if (webPage != null) {
       this.title = Strings.any(webPage.title, webPage.document != null ? webPage.document.fileName : null, webPage.audio != null ? webPage.audio.title : null, webPage.siteName);
@@ -102,6 +102,7 @@ public InlineResultMultiline (BaseActivity context, Tdlib tdlib, TdApi.Message m
     } else if (text != null) {
       TdApi.TextEntity effectiveEntity = null;
       main: for (TdApi.TextEntity entity : text.entities) {
+        //noinspection SwitchIntDef
         switch (entity.type.getConstructor()) {
           case TdApi.TextEntityTypeTextUrl.CONSTRUCTOR: {
             if (effectiveEntity == null) {
@@ -138,7 +139,7 @@ public InlineResultMultiline (BaseActivity context, Tdlib tdlib, TdApi.Message m
         }
       }
       if (effectiveEntity != null) {
-        if (effectiveEntity.type.getConstructor() == TdApi.TextEntityTypeUrl.CONSTRUCTOR) {
+        if (Td.isUrl(effectiveEntity.type)) {
           TdApi.FormattedText part1 = effectiveEntity.offset > 0 ? Td.substring(text, 0, effectiveEntity.offset) : null;
           TdApi.FormattedText part2 = effectiveEntity.offset + effectiveEntity.length < text.text.length() ? Td.substring(text, effectiveEntity.offset + effectiveEntity.length) : null;
           TdApi.FormattedText finalText = Td.trim(part1 != null && part2 != null ? Td.concat(part1, new TdApi.FormattedText("…", new TdApi.TextEntity[]{new TdApi.TextEntity(0, 1, new TdApi.TextEntityTypeTextUrl(url))}), part2) : part1 != null ? part1 : part2);

File: app/src/main/java/org/thunderdog/challegram/data/TGChat.java
Patch:
@@ -1150,7 +1150,7 @@ private void setPrefix () {
       } else if (isOutgoing()) {
         prefix = Lang.getString(listMode != Settings.CHAT_MODE_2LINE && tdlib.isMultiChat(chat) && Td.getSenderId(chat.lastMessage) == chat.id ? R.string.FromYouAnonymous : R.string.FromYou);
         flags |= FLAG_CONTENT_STRING;
-      } else if (chat.lastMessage != null && chat.lastMessage.content.getConstructor() != TdApi.MessageProximityAlertTriggered.CONSTRUCTOR) {
+      } else if (chat.lastMessage != null && !Td.isProximityAlertTriggered(chat.lastMessage.content)) {
         prefix = listMode == Settings.CHAT_MODE_2LINE && Td.getMessageAuthorId(chat.lastMessage) == chat.lastMessage.chatId && StringUtils.isEmpty(chat.lastMessage.authorSignature) ?
           Lang.getString(R.string.FromAnonymous) :
           tdlib.senderName(chat.lastMessage, false, listMode == Settings.CHAT_MODE_2LINE);
@@ -1357,7 +1357,7 @@ private void setContentPreview (TD.ContentPreview preview) {
 
     if ((isGroup() || isSupergroup()) && !preview.hideAuthor) {
       flags |= FLAG_HAS_PREFIX;
-    } else if (chat.lastMessage != null && chat.lastMessage.content.getConstructor() == TdApi.MessageCall.CONSTRUCTOR) {
+    } else if (chat.lastMessage != null && Td.isCall(chat.lastMessage.content)) {
       if (textIconIds != null)
         textIconIds.clear();
       addIcon(CallItem.getSubtitleIcon((TdApi.MessageCall) chat.lastMessage.content, TD.isOut(chat.lastMessage)));

File: app/src/main/java/org/thunderdog/challegram/data/TGInlineKeyboard.java
Patch:
@@ -606,6 +606,7 @@ public void draw (MessageView view, Canvas c, int cx, int cy, int buttonWidth, i
 
       if (type != null) {
         int iconColor = Theme.inlineIconColor(isOutBubble);
+        //noinspection SwitchIntDef
         switch (type.getConstructor()) {
           case TdApi.InlineKeyboardButtonTypeSwitchInline.CONSTRUCTOR:
           case TdApi.InlineKeyboardButtonTypeCallbackWithPassword.CONSTRUCTOR:
@@ -626,7 +627,7 @@ public void draw (MessageView view, Canvas c, int cx, int cy, int buttonWidth, i
                 paddingDp = 4f;
                 break;
               default:
-                throw new UnsupportedOperationException();
+                throw new RuntimeException();
             }
             Drawable icon = getSparseDrawable(iconRes, ColorId.NONE);
             int padding = Screen.dp(paddingDp);
@@ -1145,7 +1146,7 @@ public void onOwnershipTransferConfirmed (String password) {
           break;
         }
         case TdApi.InlineKeyboardButtonTypeCallbackGame.CONSTRUCTOR: {
-          if (parent.getMessage().content.getConstructor() != TdApi.MessageGame.CONSTRUCTOR) {
+          if (!Td.isGame(parent.getMessage().content)) {
             break;
           }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageFile.java
Patch:
@@ -252,6 +252,7 @@ private CaptionedFile newFile (TGMessage context, TdApi.Message message) {
     FileComponent component;
     TdApi.FormattedText caption;
     boolean disallowTouch = true;
+    //noinspection SwitchIntDef
     switch (message.content.getConstructor()) {
       case TdApi.MessageDocument.CONSTRUCTOR: {
         TdApi.MessageDocument document = (TdApi.MessageDocument) message.content;
@@ -351,6 +352,7 @@ protected boolean updateMessageContent (TdApi.Message message, TdApi.MessageCont
       boolean fileChanged = false;
       TdApi.FormattedText serverCaption;
       FileComponent component = file.component;
+      //noinspection SwitchIntDef
       switch (newContent.getConstructor()) {
         case TdApi.MessageAudio.CONSTRUCTOR: {
           TdApi.MessageAudio audio = (TdApi.MessageAudio) newContent;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageLocation.java
Patch:
@@ -64,6 +64,7 @@
 import me.vkryl.core.ColorUtils;
 import me.vkryl.core.MathUtils;
 import me.vkryl.core.StringUtils;
+import me.vkryl.td.Td;
 
 public class TGMessageLocation extends TGMessage implements LiveLocationManager.UserLocationChangeListener {
   private final TdApi.Location point;
@@ -121,7 +122,7 @@ private void setLivePeriod (int livePeriod, int expiresInSeconds, boolean isInit
       updateTimer();
     }
     if (!isInitial) {
-      if (msg.content.getConstructor() == TdApi.MessageLocation.CONSTRUCTOR) {
+      if (Td.isLocation(msg.content)) {
         ((TdApi.MessageLocation) msg.content).expiresIn = expiresInSeconds;
       }
       checkAlive(true);

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageMedia.java
Patch:
@@ -178,7 +178,7 @@ public MediaViewThumbLocation getMediaThumbLocation (long messageId, View view,
 
   @Override
   protected boolean preferFullWidth () {
-    return UI.isPortrait() && !UI.isTablet() && isChannel() && !isEventLog() && msg.content.getConstructor() != TdApi.MessageAnimation.CONSTRUCTOR && (!mosaicWrapper.isSingular() || mosaicWrapper.getAspectRatio() >= (mosaicWrapper.getSingularItem().isGif() ? MIN_RATIO_GIF : MIN_RATIO));
+    return UI.isPortrait() && !UI.isTablet() && isChannel() && !isEventLog() && !Td.isAnimation(msg.content) && (!mosaicWrapper.isSingular() || mosaicWrapper.getAspectRatio() >= (mosaicWrapper.getSingularItem().isGif() ? MIN_RATIO_GIF : MIN_RATIO));
   }
 
   @Override
@@ -344,7 +344,7 @@ protected boolean isSupportedMessageContent (TdApi.Message message, TdApi.Messag
 
   @Override
   protected boolean onMessageContentChanged (TdApi.Message message, TdApi.MessageContent oldContent, TdApi.MessageContent newContent, boolean isBottomMessage) {
-    if (message.viaBotUserId != 0 && oldContent.getConstructor() == TdApi.MessagePhoto.CONSTRUCTOR) {
+    if (message.viaBotUserId != 0 && Td.isPhoto(oldContent)) {
       updateMessageContent(message, newContent, isBottomMessage);
       return true;
     }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessagePoll.java
Patch:
@@ -1012,7 +1012,7 @@ private void applyPoll (TdApi.Poll updatedPoll, boolean force) {
 
   @Override
   protected boolean onMessageContentChanged (TdApi.Message message, TdApi.MessageContent oldContent, TdApi.MessageContent newContent, boolean isBottomMessage) {
-    if (newContent.getConstructor() == TdApi.MessagePoll.CONSTRUCTOR) {
+    if (Td.isPoll(newContent)) {
       TdApi.Poll updatedPoll = ((TdApi.MessagePoll) newContent).poll;
       applyPoll(updatedPoll, false);
       return true;

File: app/src/main/java/org/thunderdog/challegram/data/TGUser.java
Patch:
@@ -165,6 +165,7 @@ public void setRole (int role) {
   public static String getActionDateStatus (Tdlib tdlib, int actionDateSeconds, TdApi.Message viewedMessage) {
     int stringRes = R.string.viewed;
     if (viewedMessage != null) {
+      //noinspection SwitchIntDef
       switch (viewedMessage.content.getConstructor()) {
         case TdApi.MessageVoiceNote.CONSTRUCTOR:
           stringRes = R.string.opened_voice;

File: app/src/main/java/org/thunderdog/challegram/helper/InlineSearchContext.java
Patch:
@@ -692,7 +692,7 @@ public TGPlayerController.PlayList buildPlayList (TdApi.Message fromMessage) {
         return null;
       }
 
-      int contentType = fromMessage.content.getConstructor();
+      @TdApi.MessageContent.Constructors int contentType = fromMessage.content.getConstructor();
       ArrayList<TdApi.Message> items = null;
       int foundIndex = -1;
 

File: app/src/main/java/org/thunderdog/challegram/player/ProximityManager.java
Patch:
@@ -42,6 +42,8 @@
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.unsorted.Settings;
 
+import me.vkryl.td.Td;
+
 public class ProximityManager implements Settings.RaiseToSpeakListener, SensorEventListener, UI.StateListener {
   public interface Delegate {
     void onUpdateAttributes ();
@@ -57,7 +59,7 @@ public ProximityManager (TGPlayerController player, Delegate delegate) {
   }
 
   private boolean isPlayingVideo () {
-    return playbackObject != null && playbackObject.content.getConstructor() == TdApi.MessageVideoNote.CONSTRUCTOR;
+    return playbackObject != null && Td.isVideoNote(playbackObject.content);
   }
 
   public void setPlaybackObject (@Nullable TdApi.Message playbackObject) {

File: app/src/main/java/org/thunderdog/challegram/player/RecordAudioVideoController.java
Patch:
@@ -921,7 +921,7 @@ public boolean startRecording (View view, boolean inRaiseMode) {
       return false;
     }
 
-    CharSequence restrictionText = tdlib.getVoiceVideoRestricitonText(tdlib.chat(targetChatId), needVideo);
+    CharSequence restrictionText = tdlib.getVoiceVideoRestrictionText(tdlib.chat(targetChatId), needVideo);
     if (restrictionText != null) {
       if (view != null) {
         context.tooltipManager().builder(view).controller(targetController).icon(R.drawable.baseline_warning_24).show(tdlib, restrictionText).hideDelayed();

File: app/src/main/java/org/thunderdog/challegram/player/RoundVideoController.java
Patch:
@@ -99,7 +99,7 @@ public RoundVideoController (BaseActivity context) {
 
   @Override
   protected boolean isSupported (TdApi.Message message) {
-    return message.content.getConstructor() == TdApi.MessageVideoNote.CONSTRUCTOR;
+    return Td.isVideoNote(message.content);
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/service/AudioService.java
Patch:
@@ -64,6 +64,7 @@
 import java.util.List;
 
 import me.vkryl.core.ArrayUtils;
+import me.vkryl.td.Td;
 
 public class AudioService extends Service implements TGPlayerController.TrackListChangeListener, TGPlayerController.TrackListener, AudioController.ApicListener, AudioManager.OnAudioFocusChangeListener {
 
@@ -134,7 +135,7 @@ public int onStartCommand (Intent intent, int flags, int startId) {
   // List management
 
   private static boolean isSupportedTrack (TdApi.Message message) {
-    return message != null && message.content.getConstructor() == TdApi.MessageAudio.CONSTRUCTOR;
+    return message != null && Td.isAudio(message.content);
   }
 
   private boolean isInitialized () {

File: app/src/main/java/org/thunderdog/challegram/telegram/MessageListManager.java
Patch:
@@ -409,7 +409,7 @@ public void onMessagePinned (long chatId, long messageId, boolean isPinned) {
               removeMessageAt(index);
             }
           }
-        } else if (filter != null && filter.getConstructor() == TdApi.SearchMessagesFilterPinned.CONSTRUCTOR && isPinned) {
+        } else if (filter != null && Td.isPinnedFilter(filter) && isPinned) {
           fetchMessage(messageId, true);
         }
       });

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -1385,7 +1385,7 @@ void onScheduledRemove (TdApi.Message outputLocation) {
   }
 
   void addOutputLocationMessage (TdApi.Message message) {
-    if (message.sendingState != null || !message.canBeEdited || !message.isOutgoing || message.content.getConstructor() != TdApi.MessageLocation.CONSTRUCTOR) {
+    if (message.sendingState != null || !message.canBeEdited || !message.isOutgoing || !Td.isLocation(message.content)) {
       return;
     }
     TdApi.MessageLocation location = (TdApi.MessageLocation) message.content;
@@ -1551,7 +1551,7 @@ public void onLiveLocationBroadcast (@Nullable TdApi.Location location, int head
             case TdApi.Message.CONSTRUCTOR: {
               TdApi.Message resultMessage = (TdApi.Message) object;
               message.editDate = resultMessage.editDate;
-              if (resultMessage.content.getConstructor() == TdApi.MessageLocation.CONSTRUCTOR) {
+              if (Td.isLocation(resultMessage.content)) {
                 TdApi.MessageLocation in = (TdApi.MessageLocation) resultMessage.content;
                 TdApi.MessageLocation out = (TdApi.MessageLocation) message.content;
                 out.expiresIn = in.livePeriod;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationManager.java
Patch:
@@ -2102,6 +2102,7 @@ void onUpdateMessageSendSucceeded (TdApi.UpdateMessageSendSucceeded update) {
       c = UI.getCurrentStackItem();
     } catch (IndexOutOfBoundsException ignored) { }
     if (((c instanceof MessagesController && ((MessagesController) c).compareChat(sentMessage.chatId)) || (c instanceof MainController)) && !c.isPaused()) {
+      //noinspection SwitchIntDef
       switch (sentMessage.content.getConstructor()) {
         case TdApi.MessageScreenshotTaken.CONSTRUCTOR:
         case TdApi.MessageChatSetMessageAutoDeleteTime.CONSTRUCTOR: {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationStyle.java
Patch:
@@ -80,6 +80,7 @@
 import me.leolin.shortcutbadger.ShortcutBadger;
 import me.vkryl.core.StringUtils;
 import me.vkryl.td.ChatId;
+import me.vkryl.td.Td;
 
 public class TdlibNotificationStyle implements TdlibNotificationStyleDelegate, FileUpdateListener {
   private static final boolean USE_GROUPS = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT_WATCH;
@@ -137,7 +138,8 @@ public final void rebuildNotificationsSilently (@NonNull Context context, @NonNu
               matches = tdlib.isChannelFast(group.getChatId());
               break;
             default:
-              throw new UnsupportedOperationException(scope.toString());
+              Td.assertNotificationSettingsScope_edff9c28();
+              throw Td.unsupported(scope);
           }
           if (matches) {
             if (displayChildNotification(manager, context, helper, badgeCount, allowPreview, group, null, true) != DISPLAY_STATE_FAIL) {

File: app/src/main/java/org/thunderdog/challegram/ui/CallListController.java
Patch:
@@ -57,6 +57,7 @@
 import me.vkryl.android.AnimatorUtils;
 import me.vkryl.core.StringUtils;
 import me.vkryl.core.collection.IntList;
+import me.vkryl.td.Td;
 
 public class CallListController extends RecyclerViewController<Void> implements
   View.OnClickListener,
@@ -696,7 +697,7 @@ public void onResult (final TdApi.Object object) {
   }
 
   private static boolean filter (TdApi.Message message) {
-    return message.content.getConstructor() == TdApi.MessageCall.CONSTRUCTOR && message.sendingState == null && message.schedulingState == null;
+    return Td.isCall(message.content) && message.sendingState == null && message.schedulingState == null;
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/ui/InstantViewController.java
Patch:
@@ -543,6 +543,7 @@ public TGPlayerController.PlayList buildPlayList (TdApi.Message fromMessage) {
     ArrayList<TdApi.Message> out = new ArrayList<>();
     int foundIndex = -1;
     int desiredType;
+    //noinspection SwitchIntDef
     switch (fromMessage.content.getConstructor()) {
       case TdApi.MessageAudio.CONSTRUCTOR:
         desiredType = InlineResult.TYPE_AUDIO;

File: app/src/main/java/org/thunderdog/challegram/ui/MapController.java
Patch:
@@ -1705,7 +1705,7 @@ public void onResult (TdApi.Object object) {
         if (messages.length > 0) {
           final ArrayList<LocationPoint<T>> list = new ArrayList<>(messages.length);
           for (TdApi.Message message : messages) {
-            if (message.content.getConstructor() != TdApi.MessageLocation.CONSTRUCTOR) {
+            if (!Td.isLocation(message.content)) {
               continue;
             }
             if (message.isOutgoing || tdlib.isSelfSender(message)) {
@@ -1742,7 +1742,7 @@ private void addMessageIfNeeded (final TdApi.Message message) {
     if (isDestroyed()) {
       return;
     }
-    if (message.content.getConstructor() != TdApi.MessageLocation.CONSTRUCTOR) {
+    if (!Td.isLocation(message.content)) {
       return;
     }
     if (message.schedulingState != null || tdlib.isSelfSender(message)) {
@@ -1787,7 +1787,7 @@ public void onMessageSendSucceeded (TdApi.Message message, long oldMessageId) {
 
   @Override
   public void onMessageContentChanged (long chatId, long messageId, TdApi.MessageContent newContent) {
-    if (newContent.getConstructor() == TdApi.MessageLocation.CONSTRUCTOR) {
+    if (Td.isLocation(newContent)) {
       updateMessageIfNeeded(chatId, messageId, (TdApi.MessageLocation) newContent);
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/PasswordController.java
Patch:
@@ -74,6 +74,7 @@
 import me.vkryl.android.widget.FrameLayoutFix;
 import me.vkryl.core.StringUtils;
 import me.vkryl.core.lambda.RunnableData;
+import me.vkryl.td.Td;
 
 public class PasswordController extends ViewController<PasswordController.Args> implements View.OnClickListener, FactorAnimator.Target, MaterialEditTextGroup.EmptyListener, MaterialEditTextGroup.DoneListener, MaterialEditTextGroup.TextChangeListener, AuthorizationListener, Handler.Callback {
   public static final int MODE_EDIT = 0;
@@ -917,7 +918,7 @@ private void onDeadEndReached () {
     if (message instanceof Spannable) {
       CustomTypefaceSpan[] spans = ((Spannable) message).getSpans(0, message.length(), CustomTypefaceSpan.class);
       for (CustomTypefaceSpan span : spans) {
-        if (span.getEntityType() != null && span.getEntityType().getConstructor() == TdApi.TextEntityTypeItalic.CONSTRUCTOR) {
+        if (span.getEntityType() != null && Td.isItalic(span.getEntityType())) {
           span.setTypeface(null);
           span.setColorId(ColorId.textLink);
           span.setEntityType(new TdApi.TextEntityTypeEmailAddress());

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -71,6 +71,7 @@
 import me.vkryl.core.MathUtils;
 import me.vkryl.core.StringUtils;
 import me.vkryl.core.lambda.RunnableBool;
+import me.vkryl.td.Td;
 
 public class PhoneController extends EditBaseController<Void> implements SettingsAdapter.TextChangeListener, MaterialEditTextGroup.FocusListener, MaterialEditTextGroup.TextChangeListener, View.OnClickListener, Menu {
 
@@ -935,7 +936,7 @@ private boolean makeRequest () {
               if (message instanceof Spannable) {
                 CustomTypefaceSpan[] spans = ((Spannable) message).getSpans(0, message.length(), CustomTypefaceSpan.class);
                 for (CustomTypefaceSpan span : spans) {
-                  if (span.getEntityType() != null && span.getEntityType().getConstructor() == TdApi.TextEntityTypeItalic.CONSTRUCTOR) {
+                  if (span.getEntityType() != null && Td.isItalic(span.getEntityType())) {
                     span.setTypeface(null);
                     span.setColorId(ColorId.textLink);
                     span.setEntityType(new TdApi.TextEntityTypeEmailAddress());

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -2222,7 +2222,7 @@ private static int getTextWidth (int width) {
   }
 
   private boolean setDescription (String text) {
-    TdApi.TextEntity[] entities = Td.findEntities(text, (e) -> e.type.getConstructor() != TdApi.TextEntityTypeBotCommand.CONSTRUCTOR);
+    TdApi.TextEntity[] entities = Td.findEntities(text, (e) -> !Td.isBotCommand(e.type));
     return setDescription(new TdApi.FormattedText(text, entities));
   }
 
@@ -5618,6 +5618,7 @@ private boolean hasTab (TdApi.SearchMessagesFilter filter, int indexGuess) {
   private static TdApi.SearchMessagesFilter[] filtersOrder, filtersOrder2;
 
   private static boolean isSyncTab (TdApi.SearchMessagesFilter filter) {
+    //noinspection SwitchIntDef
     switch (filter.getConstructor()) {
       case TdApi.SearchMessagesFilterPhotoAndVideo.CONSTRUCTOR:
       case TdApi.SearchMessagesFilterPhoto.CONSTRUCTOR:

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsBlockedController.java
Patch:
@@ -47,6 +47,7 @@
 
 import me.vkryl.core.ArrayUtils;
 import me.vkryl.td.ChatId;
+import me.vkryl.td.Td;
 
 public class SettingsBlockedController extends RecyclerViewController<TdApi.BlockList> implements View.OnClickListener, Menu, TdlibCache.UserDataChangeListener, TdlibCache.UserStatusChangeListener, SenderPickerDelegate, Client.ResultHandler, ChatListener {
   public SettingsBlockedController (Context context, Tdlib tdlib) {
@@ -192,7 +193,8 @@ private static TGUser parseSender (Tdlib tdlib, TdApi.MessageSender sender, Arra
         break;
       }
       default: {
-        throw new UnsupportedOperationException(sender.toString());
+        Td.assertMessageSender_439d4c9c();
+        throw Td.unsupported(sender);
       }
     }
     parsedUser.setNoBotState();

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsPrivacyController.java
Patch:
@@ -146,6 +146,7 @@ public void setValuedSetting (ListItem item, SettingView v, boolean isUpdate) {
     TdApi.UserPrivacySetting[] privacySettings = new TdApi.UserPrivacySetting[] {
       new TdApi.UserPrivacySettingShowStatus(),
       new TdApi.UserPrivacySettingShowProfilePhoto(),
+      new TdApi.UserPrivacySettingShowBio(),
       new TdApi.UserPrivacySettingShowPhoneNumber(),
       new TdApi.UserPrivacySettingAllowFindingByPhoneNumber(),
       new TdApi.UserPrivacySettingShowLinkInForwardedMessages(),

File: app/src/main/java/org/thunderdog/challegram/ui/SharedCommonController.java
Patch:
@@ -167,7 +167,7 @@ protected InlineResult<?> parseObject (TdApi.Object object) {
     if (result != null) {
       result.setQueryId(message.id);
       result.setDate(message.date);
-      if (result instanceof InlineResultCommon && message.content.getConstructor() == TdApi.MessageAudio.CONSTRUCTOR) {
+      if (result instanceof InlineResultCommon && Td.isAudio(message.content)) {
         ((InlineResultCommon) result).setIsTrack(false);
       }
     }
@@ -247,6 +247,7 @@ public TGPlayerController.PlayList buildPlayList (TdApi.Message fromMessage) {
     int foundIndex = -1;
 
     int desiredType;
+    //noinspection SwitchIntDef
     switch (fromMessage.content.getConstructor()) {
       case TdApi.MessageAudio.CONSTRUCTOR:
         desiredType = InlineResult.TYPE_AUDIO;

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMediaController.java
Patch:
@@ -452,7 +452,7 @@ public boolean onLongPressRequestedAt (View v, float x, float y) {
     if (item != null && item.getViewType() == ListItem.TYPE_SMALL_MEDIA) {
       MediaItem mediaItem = (MediaItem) item.getData();
       TdApi.Message message = mediaItem.getMessage();
-      if (message == null || message.content.getConstructor() == TdApi.MessageVideoNote.CONSTRUCTOR) {
+      if (message == null || Td.isVideoNote(message.content)) {
         return super.onLongClick(v);
       }
 

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -599,6 +599,9 @@ private static boolean acceptEntity (TdApi.TextEntity entity, int flags) {
       case TdApi.TextEntityTypeCustomEmoji.CONSTRUCTOR:
       case TdApi.TextEntityTypeSpoiler.CONSTRUCTOR:
         break;
+      default:
+        Td.assertTextEntityType_542d164b();
+        throw Td.unsupported(entity.type);
     }
     return false;
   }

File: app/src/main/java/org/thunderdog/challegram/widget/FileProgressComponent.java
Patch:
@@ -403,7 +403,7 @@ public void setFile (@Nullable TdApi.File file, @Nullable TdApi.Message message)
     this.file = file;
     if (file != null && file.local != null) {
       this.isDownloaded = file.local.isDownloadingCompleted;
-      this.useGenerationProgress = !file.local.isDownloadingCompleted && !file.remote.isUploadingCompleted && message != null && message.content.getConstructor() != TdApi.MessagePhoto.CONSTRUCTOR;
+      this.useGenerationProgress = !file.local.isDownloadingCompleted && !file.remote.isUploadingCompleted && message != null && !Td.isPhoto(message.content);
     } else {
       this.isDownloaded = this.useGenerationProgress = false;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -10793,7 +10793,7 @@ public boolean callNonAnonymousProtection (long hash, View view, @NonNull Toolti
   }
 
   public boolean callNonAnonymousProtection (long hash, @Nullable TooltipOverlayView.TooltipBuilder tooltipBuilder) {
-    if (chat == null || chat.messageSenderId == null || tdlib.isSelfSender(chat.messageSenderId)) {
+    if (chat == null || tdlib.isSelfSender(chat.messageSenderId) || (chat.messageSenderId == null && !tdlib.isAnonymousAdmin(chat.id))) {
       return true;
     }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGMessagePoll.java
Patch:
@@ -458,7 +458,7 @@ public void requestMediaContent (ComplexReceiver complexReceiver, boolean invali
       for (ListAnimator.Entry<SenderEntry> entry : recentVoters) {
         long senderId = Td.getSenderId(entry.item.senderId);
         AvatarReceiver receiver = complexReceiver.getAvatarReceiver(senderId);
-        receiver.requestUser(tdlib, senderId, AvatarReceiver.Options.NONE);
+        receiver.requestMessageSender(tdlib, entry.item.senderId, AvatarReceiver.Options.NONE);
       }
     }
     complexReceiver.clearReceivers(this);

File: app/src/main/java/org/thunderdog/challegram/loader/ImageReceiver.java
Patch:
@@ -1086,7 +1086,8 @@ public float getPaintAlpha () {
 
   @Override
   public void setPaintAlpha (float factor) {
-    savedAlpha = Color.rgb(repeatPaint != null ? repeatPaint.getAlpha() : 0, roundPaint != null ? roundPaint.getAlpha() : 0, bitmapPaint.getAlpha());
+    int bitmapAlpha = bitmapPaint.getAlpha();
+    savedAlpha = Color.rgb(repeatPaint != null ? repeatPaint.getAlpha() : bitmapAlpha, roundPaint != null ? roundPaint.getAlpha() : bitmapAlpha, bitmapAlpha);
     final int alpha = (int) (255f * MathUtils.clamp(factor));
     if (roundPaint != null)
       roundPaint.setAlpha(alpha);

File: app/src/main/java/org/thunderdog/challegram/telegram/MessageListManager.java
Patch:
@@ -30,7 +30,7 @@
 import me.vkryl.core.lambda.RunnableInt;
 import me.vkryl.td.Td;
 
-public class MessageListManager extends ListManager<TdApi.Message> implements MessageListener, Comparator<TdApi.Message> {
+public final class MessageListManager extends ListManager<TdApi.Message> implements MessageListener, Comparator<TdApi.Message> {
   public interface ChangeListener extends ListManager.ListChangeListener<TdApi.Message> { }
 
   private final long chatId;

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -3896,14 +3896,14 @@ private void saveDraft () {
         // TODO save local draft
       } else if (inputView != null && inputView.textChangedSinceChatOpened() && isFocused()) {
         final TdApi.FormattedText outputText = inputView.getOutputText(false);
-        final TdApi.MessageReplyToMessage replyTo = getCurrentReplyId();
+        final @Nullable TdApi.MessageReplyToMessage replyTo = getCurrentReplyId();
         final long date = tdlib.currentTime(TimeUnit.SECONDS);
         final TdApi.InputMessageText inputMessageText = new TdApi.InputMessageText(
           outputText,
           getCurrentAllowLinkPreview(),
           false
         );
-        final TdApi.DraftMessage draftMessage = new TdApi.DraftMessage(replyTo.messageId, (int) date, inputMessageText);
+        final TdApi.DraftMessage draftMessage = new TdApi.DraftMessage(replyTo != null ? replyTo.messageId : 0, (int) date, inputMessageText);
         final long outputChatId = messageThread != null ? messageThread.getChatId() : getChatId();
         final long messageThreadId = messageThread != null ? messageThread.getMessageThreadId() : 0;
         if (messageThread != null) {
@@ -8777,7 +8777,7 @@ private void sendText (TdApi.FormattedText msg, boolean clearInput, boolean allo
 
     long chatId = getChatId();
     long messageThreadId = getMessageThreadId();
-    TdApi.MessageReplyTo replyTo = allowReply ? (clearInput ? getCurrentReplyId() : obtainReplyTo()) : null;
+    final @Nullable TdApi.MessageReplyTo replyTo = allowReply ? (clearInput ? getCurrentReplyId() : obtainReplyTo()) : null;
 
     TdApi.InputMessageContent content;
     if (allowDice && tdlib.shouldSendAsDice(msg)) {

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -412,7 +412,7 @@ private static File getRootOfInnerSdCardFolder (File file) {
       String output = out.toString();
       if (!output.trim().isEmpty()) {
         String[] devicePoints = output.split("\n");
-        for (String voldPoint: devicePoints) {
+        for (String voldPoint : devicePoints) {
           String path = voldPoint.split(" ")[2];
           if (!StringUtils.equalsOrBothEmpty(ignorePath, path)) {
             if (results == null) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/ChatHeaderView.java
Patch:
@@ -111,7 +111,7 @@ public void setChat (Tdlib tdlib, TdApi.Chat chat, @Nullable ThreadInfo messageT
       setUseRedHighlight(false);
       attachChatStatus(messageThread.getChatId(), messageThread.getMessageThreadId());
     } else {
-      setEmojiStatus(tdlib.isSelfChat(chat) ? null: tdlib.chatUser(chat));
+      setEmojiStatus(tdlib.isSelfChat(chat) ? null : tdlib.chatUser(chat));
       setText(tdlib.chatTitle(chat), !StringUtils.isEmpty(forcedSubtitle) ? forcedSubtitle : tdlib.status().chatStatus(chat));
       setExpandedSubtitle(tdlib.status().chatStatusExpanded(chat));
       setUseRedHighlight(tdlib.isRedTeam(chat.id));

File: app/src/main/java/org/thunderdog/challegram/component/chat/ChatMembersSearcher.java
Patch:
@@ -209,7 +209,7 @@ private boolean queryUserCheck (long userId, String query) {
   }
 
   private void performRequestForUserChat (long userId, String query, Handler handler) {
-    long otherUserId = ChatId.isSecret(userId) ? tdlib.chatUserId(userId): userId;
+    long otherUserId = ChatId.isSecret(userId) ? tdlib.chatUserId(userId) : userId;
     long myUserId = tdlib.myUserId();
 
     boolean otherUserOk = queryUserCheck(otherUserId, query);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageQuickActionSwipeHelper.java
Patch:
@@ -1,7 +1,5 @@
 package org.thunderdog.challegram.component.chat;
 
-import android.util.Log;
-
 import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.tool.Screen;
 
@@ -37,7 +35,7 @@ public void translate (float dx, float dy, boolean bySwipe) {
     final boolean lockedVerticalSwipe = isLockedVerticalSwipe();
     final boolean isLeft = dx > 0;
     final float ddx = dx - currentDx;
-    final float ddy = lockedVerticalSwipe ? 0f: dy - currentDy;
+    final float ddy = lockedVerticalSwipe ? 0f : dy - currentDy;
     currentDx = dx; actualDx += ddx;
     currentDy = dy; actualDy += ddy;
     actualDy = clampActualDy(isLeft, actualDy);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageSenderButton.java
Patch:
@@ -216,7 +216,7 @@ private void update (TdApi.MessageSender sender, boolean isPersonal, boolean isA
     currentButtonView = oldButtonView;
     oldButtonView = swap;
 
-    currentButtonView.setDrawMode(tdlib, sender, sender != null ? MODE_CHAT_BUTTON: isAnonymous ? MODE_ANONYMOUS_BUTTON: MODE_PERSON_BUTTON);
+    currentButtonView.setDrawMode(tdlib, sender, sender != null ? MODE_CHAT_BUTTON : isAnonymous ? MODE_ANONYMOUS_BUTTON : MODE_PERSON_BUTTON);
     replaceAnimator.replace(currentButtonView, animated);
 
     invalidate();
@@ -305,7 +305,7 @@ public ButtonView (@NonNull Context context) {
 
     public void setDrawMode (Tdlib tdlib, TdApi.MessageSender sender, int mode) {
       this.avatarView.setMessageSender(tdlib, sender);
-      this.avatarView.setVisibility(mode == MODE_CHAT_BUTTON ? View.VISIBLE: View.GONE);
+      this.avatarView.setVisibility(mode == MODE_CHAT_BUTTON ? View.VISIBLE : View.GONE);
       this.sender = sender;
       this.mode = mode;
 

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLoader.java
Patch:
@@ -1448,7 +1448,7 @@ private void processMessages (final long currentContextId, TdApi.Message[] messa
     if (scrollItemIndex == -1 && scrollMessageId != null && (scrollHighlightMode == MessagesManager.HIGHLIGHT_MODE_NORMAL || scrollHighlightMode == MessagesManager.HIGHLIGHT_MODE_NORMAL_NEXT) && specialMode == SPECIAL_MODE_SEARCH) {
       TGMessage highlightItem = null;
       long minDistance = -1;
-      for (TGMessage item: items) {
+      for (TGMessage item : items) {
         long distance = (item.getId() - scrollMessageId.getMessageId());
         if (distance >= 0 && (minDistance == -1 || distance < minDistance)) {
           minDistance = distance;

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/ChatView.java
Patch:
@@ -620,7 +620,7 @@ protected void onDraw (Canvas c) {
     counterRight -= mentionCounter.getScaledWidth(getTimePaddingLeft());
 
     Counter reactionCounter = chat.getReactionsCounter();
-    reactionCounter.draw(c, counterRight - counterRadius, counterCenterY, Gravity.RIGHT, 1f, this, chat.notificationsEnabled() ? ColorId.badgeText: ColorId.badgeMutedText);
+    reactionCounter.draw(c, counterRight - counterRadius, counterCenterY, Gravity.RIGHT, 1f, this, chat.notificationsEnabled() ? ColorId.badgeText : ColorId.badgeMutedText);
     counterRight -= reactionCounter.getScaledWidth(getTimePaddingLeft());
 
     TdlibStatusManager.Helper status = chat.statusHelper();

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/SearchManager.java
Patch:
@@ -420,7 +420,7 @@ private void loadTopChats (final int currentContextId, final TdApi.ChatList chat
   private void setTopChats (final int currentContextId, final @Nullable TdApi.ChatList chatList, final @Nullable String query, final @Nullable ArrayList<TGFoundChat> topChats, final long[] topChatIds, final boolean isCheck) {
     boolean isSilent = this.contextId != currentContextId || isCheck;
     final int oldChatsCount = this.topChats != null ? this.topChats.size() : 0;
-    final int newChatsCount = topChats != null ? topChats.size(): 0;
+    final int newChatsCount = topChats != null ? topChats.size() : 0;
 
     if (oldChatsCount == 0 && newChatsCount == 0) {
       if (!isSilent) {
@@ -442,7 +442,7 @@ private void processTopChats (final int currentContextId, final ArrayList<TGFoun
     }
 
     final int oldChatsCount = this.topChats != null ? this.topChats.size() : 0;
-    final int newChatsCount = topChats != null ? topChats.size(): 0;
+    final int newChatsCount = topChats != null ? topChats.size() : 0;
 
     if (oldChatsCount != newChatsCount) {
       if (oldChatsCount == 0) {

File: app/src/main/java/org/thunderdog/challegram/core/Lang.java
Patch:
@@ -3774,7 +3774,7 @@ public static String[] getSupportedLanguagesForTranslate () {
       };
 
       StringList list = new StringList(supportedLanguagesForTranslate.length);
-      for (String lang: supportedLanguagesForTranslate) {
+      for (String lang : supportedLanguagesForTranslate) {
         if (Lang.getLanguageName(lang, null) != null) {
           list.append(lang);
         }
@@ -3786,7 +3786,7 @@ public static String[] getSupportedLanguagesForTranslate () {
 
   public static @Nullable String getDefaultLanguageToTranslateV2 (@Nullable String sourceLanguage) {
     ArrayList<String> recents = Settings.instance().getTranslateLanguageRecents();
-    for (String lang: recents) {
+    for (String lang : recents) {
       if (!StringUtils.equalsOrBothEmpty(lang, sourceLanguage)) {
         return lang;
       }
@@ -3802,7 +3802,7 @@ public static String[] getSupportedLanguagesForTranslate () {
     }
 
     String[] notTranslatableLanguages = Settings.instance().getAllNotTranslatableLanguages();
-    for (String lang: notTranslatableLanguages) {
+    for (String lang : notTranslatableLanguages) {
       if (!StringUtils.equalsOrBothEmpty(lang, sourceLanguage)) {
         return lang;
       }

File: app/src/main/java/org/thunderdog/challegram/data/ChatEventUtil.java
Patch:
@@ -252,12 +252,12 @@ private static TGMessage fullMessage (MessagesManager context, TdApi.Message msg
         if (StringUtils.isEmpty(changed.newUsername)) {
           text = new TdApi.FormattedText("", null);
         } else {
-          String link = TD.getLink(changed.newUsername);
+          String link = tdlib.tMeUrl(changed.newUsername);
           text = new TdApi.FormattedText(link, new TdApi.TextEntity[] {new TdApi.TextEntity(0, link.length(), new TdApi.TextEntityTypeUrl())});
         }
         fullMessage = new TGMessageText(context, msg, text);
         if (!StringUtils.isEmpty(changed.oldUsername)) {
-          String link = TD.getLink(changed.oldUsername);
+          String link = tdlib.tMeUrl(changed.oldUsername);
           fullMessage.setFooter(Lang.getString(R.string.EventLogPreviousLink), link, new TdApi.TextEntity[] {new TdApi.TextEntity(0, link.length(), new TdApi.TextEntityTypeUrl())});
         }
         break;

File: app/src/main/java/org/thunderdog/challegram/data/DoubleTextWrapper.java
Patch:
@@ -299,7 +299,7 @@ public boolean isPremiumLocked () {
   public void setForcedSubtitle (CharSequence newSubtitle) {
     this.forcedSubtitle  = newSubtitle;
     setIgnoreOnline(true);
-    setSubtitle(!StringUtils.isEmpty(forcedSubtitle) ? forcedSubtitle: subtitle);
+    setSubtitle(!StringUtils.isEmpty(forcedSubtitle) ? forcedSubtitle : subtitle);
   }
 
   public void setSubtitle (CharSequence newSubtitle) {

File: app/src/main/java/org/thunderdog/challegram/data/TGChat.java
Patch:
@@ -917,7 +917,7 @@ public int emojiStatusColor () {
     int titleWidth = getTitleWidth();
     verifyLeft = ChatView.getLeftPadding(listMode) + titleWidth;
     muteLeft = ChatView.getLeftPadding(listMode) + titleWidth + ChatView.getMutePadding();
-    emojiStatusLeft = ChatView.getLeftPadding(listMode) + titleWidth + Screen.dp(6);
+    emojiStatusLeft = ChatView.getLeftPadding(listMode) + titleWidth + Screen.dp(3);
     if (emojiStatusDrawable != null) {
       muteLeft += emojiStatusDrawable.getWidth(Screen.dp(6));
       verifyLeft += emojiStatusDrawable.getWidth(Screen.dp(6));
@@ -1050,7 +1050,7 @@ public int getVerifyLeft () {
   }
 
   public int getEmojiStatusLeft () {
-    return emojiStatusLeft + (isSecretChat() ? Screen.dp(12): 0);
+    return emojiStatusLeft + (isSecretChat() ? Screen.dp(12) : 0);
   }
 
   public int getChecksRight () {

File: app/src/main/java/org/thunderdog/challegram/data/TGCommentButton.java
Patch:
@@ -136,7 +136,7 @@ public void onInvalidateMedia (TGAvatars avatars) {
   }
 
   public void requestResources (@Nullable ComplexReceiver complexReceiver, boolean isUpdate) {
-    this.avatars.requestFiles(complexReceiver, isUpdate);
+    this.avatars.requestFiles(complexReceiver, isUpdate, false);
   }
 
   public void setViewMode (@ViewMode int viewMode, boolean animated) {
@@ -436,7 +436,7 @@ private void drawInline (@NonNull MessageView view, @NonNull Canvas c, @NonNull
 
     int avatarsX = right - (useBubbles ? Screen.dp(16f) : Screen.dp(38f));
     int avatarsY = rect.centerY();
-    avatars.draw(view, c, avatarsX, avatarsY, Gravity.RIGHT, alpha);
+    avatars.draw(view, c, view.getAvatarsReceiver(), avatarsX, avatarsY, Gravity.RIGHT, alpha);
 
     int badgeX = avatarsX - Math.round(avatars.getAnimatedWidth()) - Screen.dp(8f) - Screen.dp(BADGE_RADIUS);
     int badgeY = rect.centerY();
@@ -497,7 +497,7 @@ private void drawBubble (@NonNull MessageView view, @NonNull Canvas c, @NonNull
 
     int avatarsX = right - Screen.dp(6f);
     int avatarsY = rect.centerY();
-    avatars.draw(view, c, avatarsX, avatarsY, Gravity.RIGHT, alpha);
+    avatars.draw(view, c, view.getAvatarsReceiver(), avatarsX, avatarsY, Gravity.RIGHT, alpha);
 
     float badgeX = avatarsX - avatars.getAnimatedWidth() - Screen.dp(8f) - Screen.dp(BADGE_RADIUS);
     float badgeY = rect.centerY();

File: app/src/main/java/org/thunderdog/challegram/data/TGFoundChat.java
Patch:
@@ -410,7 +410,7 @@ public boolean isSelfChat () {
   }
 
   public @Nullable TdApi.MessageSender getMessageSenderId () {
-    return chat != null ? chat.messageSenderId: null;
+    return chat != null ? chat.messageSenderId : null;
   }
 
   public boolean isAnonymousAdmin () {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageMedia.java
Patch:
@@ -278,7 +278,7 @@ private boolean setCaption (TdApi.FormattedText caption, long messageId, boolean
         this.wrapper.performDestroy();
       }
       if (!Td.isEmpty(caption)) {
-        TdApi.FormattedText fText = translatedText != null ? translatedText: caption;
+        TdApi.FormattedText fText = translatedText != null ? translatedText : caption;
         this.wrapper = new TextWrapper(fText.text, getTextStyleProvider(), getTextColorSet())
           .setEntities(TextEntity.valueOf(tdlib, fText, openParameters()), (wrapper, text, specificMedia) -> {
             if (this.wrapper == wrapper) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessagePoll.java
Patch:
@@ -355,7 +355,7 @@ public TGMessagePoll (MessagesManager manager, TdApi.Message msg, TdApi.Poll pol
   }
 
   private void setQuestion (String question) {
-    String questionToSet = (translatedTexts != null ? StringUtils.trim(translatedTexts[0]): question);
+    String questionToSet = (translatedTexts != null ? StringUtils.trim(translatedTexts[0]) : question);
     if (this.questionText == null || !StringUtils.equalsOrBothEmpty(this.questionText.getText(), questionToSet)) {
       this.questionText = new TextWrapper(questionToSet, getBiggerTextStyleProvider(), getTextColorSet())
         .setEntities(new TextEntity[] {TextEntity.valueOf(tdlib, questionToSet, new TdApi.TextEntity(0, questionToSet.length(), new TdApi.TextEntityTypeBold()), null)}, null)
@@ -367,7 +367,7 @@ private void setOptions (TdApi.PollOption[] options) {
     prepareOptions(options);
     int optionId = 0;
     for (TdApi.PollOption option : options) {
-      String optionToSet = (translatedTexts != null ? StringUtils.trim(translatedTexts[optionId + 1]): option.text);
+      String optionToSet = (translatedTexts != null ? StringUtils.trim(translatedTexts[optionId + 1]) : option.text);
       if (this.options[optionId].text == null || !StringUtils.equalsOrBothEmpty(this.options[optionId].text.getText(), optionToSet)) {
         this.options[optionId].text = new TextWrapper(optionToSet, getTextStyleProvider(), getTextColorSet())
           .setViewProvider(currentViews);

File: app/src/main/java/org/thunderdog/challegram/data/TGReactions.java
Patch:
@@ -150,7 +150,7 @@ public void setReactions (ArrayList<TdApi.Message> combinedMessages) {
 
       for (TdApi.MessageReaction reaction : message.interactionInfo.reactions) {
         final String reactionKey = TD.makeReactionKey(reaction.type);
-         TdApi.MessageReaction fakeReaction = reactionsHashMap.get(reactionKey);
+        TdApi.MessageReaction fakeReaction = reactionsHashMap.get(reactionKey);
         if (fakeReaction == null) {
           fakeReaction = new TdApi.MessageReaction(reaction.type, 0, false, new TdApi.MessageSender[0]);
           reactionsHashMap.put(reactionKey, fakeReaction);
@@ -996,4 +996,4 @@ public void onReactionLoaded (String reactionKey) {
       delegate.onRebuildRequested();
     }
   }
-}
+}
\ No newline at end of file

File: app/src/main/java/org/thunderdog/challegram/data/TGUser.java
Patch:
@@ -209,6 +209,7 @@ public void setCustomStatus (String statusText) {
         updateStatus();
       } else {
         this.statusText = statusText;
+        this.statusWidth = U.measureText(statusText, UserView.getStatusPaint());
         this.flags |= FLAG_CUSTOM_STATUS_TEXT;
         this.flags &= ~FLAG_ONLINE;
       }

File: app/src/main/java/org/thunderdog/challegram/data/TranslationsManager.java
Patch:
@@ -124,7 +124,7 @@ public TranslatedCachedValue (String originalLanguage) {
 
   public @Nullable String getCachedTextLanguage (String text) {
     TranslatedCachedValue cachedValue = mTranslationsCache2.get(text);
-    return (cachedValue != null ? cachedValue.originalLanguage: null);
+    return (cachedValue != null ? cachedValue.originalLanguage : null);
   }
 
   public void saveCachedTextLanguage (String text, String language) {
@@ -135,7 +135,7 @@ public void saveCachedTextLanguage (String text, String language) {
 
   public @Nullable TdApi.FormattedText getCachedTextTranslation (String text, String language) {
     TranslatedCachedValue cachedValue = mTranslationsCache2.get(text);
-    return (cachedValue != null ? cachedValue.translationsCache.get(language): null);
+    return (cachedValue != null ? cachedValue.translationsCache.get(language) : null);
   }
 
   public void saveCachedTextTranslation (String text, String language, TdApi.FormattedText translated) {

File: app/src/main/java/org/thunderdog/challegram/loader/gif/LottieCache.java
Patch:
@@ -258,7 +258,7 @@ public static File getCacheFile (GifFile file, boolean optimize, int size, int f
       keepAliveMs = 0;
     }
     String colorKey = fitzpatrickType != 0 ? Integer.toString(fitzpatrickType) : null;
-    int accountId = file.tdlib() != null ? file.tdlib().id(): TdlibAccount.NO_ID;
+    int accountId = file.tdlib() != null ? file.tdlib().id() : TdlibAccount.NO_ID;
     File cacheDir = getCacheDir(accountId, size, optimize, colorKey);
     if (cacheDir == null)
       return null;
@@ -285,7 +285,7 @@ public void checkFile (GifFile file, File cacheFile, boolean optimize, int size,
         cacheFile.delete();
       } else {
         String colorKey = fitzpatrickType != 0 ? Integer.toString(fitzpatrickType) : null;
-        String key = getCacheFileKey(file.tdlib != null ? file.tdlib.accountId(): TdlibAccount.NO_ID, optimize, size, colorKey, new File(file.getFilePath()).getName());
+        String key = getCacheFileKey(file.tdlib != null ? file.tdlib.accountId() : TdlibAccount.NO_ID, optimize, size, colorKey, new File(file.getFilePath()).getName());
         long time = Settings.instance().getLong(key, 0);
         if (time == 0 || System.currentTimeMillis() >= time) {
           cacheFile.delete();

File: app/src/main/java/org/thunderdog/challegram/navigation/ComplexHeaderView.java
Patch:
@@ -898,7 +898,7 @@ protected void onDraw (Canvas c) {
 
         float baseIconLeft = trimmedTitle.getWidth()
           + (showLock ? Screen.dp(16f) : 0)
-          + (emojiStatusHelper.needDrawEmojiStatus() ? emojiStatusHelper.getWidth() + Screen.dp(6): 0);
+          + (emojiStatusHelper.needDrawEmojiStatus() ? emojiStatusHelper.getWidth() + Screen.dp(6) : 0);
         float toIconLeft = trimmedTitleExpanded != null ? trimmedTitleExpanded.getLastLineWidth() : baseIconLeft;
         float iconLeft = baseIconLeft + (toIconLeft - baseIconLeft) * avatarExpandFactor;
         float iconTop = trimmedTitleExpanded != null ? (trimmedTitleExpanded.getHeight() - trimmedTitle.getHeight()) * avatarExpandFactor : 0;

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerItemView.java
Patch:
@@ -323,7 +323,7 @@ public void onDraw (Canvas c) {
     if (trimmedText != null) {
       trimmedText.draw(c, textLeft, textLeft + trimmedText.getWidth(), 0, Screen.dp(17f));
     }
-    emojiStatusHelper.draw(c, textLeft + (trimmedText != null ? trimmedText.getWidth() + Screen.dp(6): 0), Screen.dp(17f));
+    emojiStatusHelper.draw(c, textLeft + (trimmedText != null ? trimmedText.getWidth() + Screen.dp(6) : 0), Screen.dp(17f));
     if (receiver != null) {
       layoutReceiver();
       if (receiver.needPlaceholder()) {

File: app/src/main/java/org/thunderdog/challegram/navigation/MenuMoreWrap.java
Patch:
@@ -186,7 +186,7 @@ public View addItem (@Nullable Tdlib tdlib, HapticMenuHelper.MenuItem menuItem,
     }
 
     final int maxWidth = Screen.dp(250);
-    final int textRightOffset = Screen.dp(menuItem.isLocked ? 41: 17);
+    final int textRightOffset = Screen.dp(menuItem.isLocked ? 41 : 17);
     final Drawable finalIcon = menuItem.iconResId != 0 ? Drawables.get(getResources(), menuItem.iconResId) : menuItem.icon;
     final AvatarReceiver receiver = (menuItem.messageSenderId != null && menuItem.iconResId == 0) ?
       complexAvatarReceiver.getAvatarReceiver(Td.getSenderId(menuItem.messageSenderId)) : null;
@@ -474,7 +474,7 @@ public void processMoveEvent (View v, float x, float y, float startX, float star
     int innerY = sourceY - location[1];
 
     int index = Math.floorDiv(innerY - Screen.dp(PADDING), Screen.dp(ITEM_HEIGHT));
-    setSelectedIndex(index == MathUtils.clamp(index, 0, getChildCount() - 1) ? index: -1);
+    setSelectedIndex(index == MathUtils.clamp(index, 0, getChildCount() - 1) ? index : -1);
 
     // Log.i("HAPTIC INNER", String.format("INDEX %d", index));
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/ReactionsOverlayView.java
Patch:
@@ -339,7 +339,7 @@ public void draw (Canvas canvas) {
           gifReceiver.getTop() - gifReceiver.getHeight() / 4f,
           gifReceiver.getRight() + gifReceiver.getWidth() / 4f,
           gifReceiver.getBottom() + gifReceiver.getHeight() / 4f,
-          Paints.getSrcInPaint(ColorUtils.fromToArgb(repaintingColorStart, repaintingColorEnd, positionAnimator != null ? positionAnimator.getFactor(): 1f)));
+          Paints.getSrcInPaint(ColorUtils.fromToArgb(repaintingColorStart, repaintingColorEnd, positionAnimator != null ? positionAnimator.getFactor() : 1f)));
         canvas.restore();
       }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/TooltipOverlayView.java
Patch:
@@ -269,7 +269,7 @@ public TooltipLanguageSelectorView (TooltipOverlayView parentView, TGMessage mes
       this.listener = listener;
       final String currentLang = message.getCurrentTranslatedLanguage();
       originalLanguage = Lang.getLanguageName(message.getOriginalMessageLanguage(), Lang.getString(R.string.TranslateLangUnknown));
-      translatedLanguage = Lang.getLanguageName(message.getCurrentTranslatedLanguage(), currentLang != null ? currentLang: originalLanguage);
+      translatedLanguage = Lang.getLanguageName(message.getCurrentTranslatedLanguage(), currentLang != null ? currentLang : originalLanguage);
       arrowX = (int) U.measureText(originalLanguage, Paints.getRegularTextPaint(14));
       width = (int)(arrowX + U.measureText(translatedLanguage, Paints.getRegularTextPaint(14)) + Screen.dp(18));
       arrow = Drawables.get(R.drawable.round_keyboard_arrow_right_16);

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerHeaderView.java
Patch:
@@ -18,7 +18,6 @@
 import android.view.Gravity;
 import android.view.ViewGroup;
 
-import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.theme.ColorId;
 import org.thunderdog.challegram.unsorted.Size;
 

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerHeaderViewCompact.java
Patch:
@@ -229,7 +229,7 @@ public boolean onTouchEvent (MotionEvent e) {
     return !(e.getAction() == MotionEvent.ACTION_DOWN && !canTouchAt(e.getX(), e.getY())) && super.onTouchEvent(e);
   }
 
-  private boolean canTouchAt (float x, float y) {
+  protected boolean canTouchAt (float x, float y) {
     y -= recyclerView.getTop() + (int) recyclerView.getTranslationY();
     return y >= 0 && y < adapter.topView.getMeasuredHeight();
   }

File: app/src/main/java/org/thunderdog/challegram/ui/CallController.java
Patch:
@@ -644,7 +644,7 @@ public int emojiStatusColor () {
     }
     if (nameView != null) {
       this.nameView.setText(TD.getUserName(user));
-      this.nameView.setPadding(0, 0, user != null && user.isPremium ? emojiStatusHelper.getWidth(Screen.dp(7)): 0, 0);
+      this.nameView.setPadding(0, 0, user != null && user.isPremium ? emojiStatusHelper.getWidth(Screen.dp(7)) : 0, 0);
       this.nameView.requestLayout();
     }
     if (emojiViewHint != null)

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -118,7 +118,6 @@
 import org.thunderdog.challegram.util.text.TextColorSets;
 import org.thunderdog.challegram.util.text.TextWrapper;
 import org.thunderdog.challegram.v.CustomRecyclerView;
-import org.thunderdog.challegram.v.HeaderEditText;
 import org.thunderdog.challegram.widget.AvatarView;
 import org.thunderdog.challegram.widget.BetterChatView;
 import org.thunderdog.challegram.widget.CircleButton;
@@ -777,7 +776,7 @@ public boolean onOptionItemPressed (View optionItemView, int id) {
     } else if (id == R.id.btn_copyLink) {
       String username = getProfileUsername();
       if (!StringUtils.isEmpty(username)) {
-        UI.copyText(TD.getLink(username), R.string.CopiedLink);
+        UI.copyText(tdlib.tMeUrl(username), R.string.CopiedLink);
       }
     } else if (id == R.id.btn_share) {
       if (!share(false)) {
@@ -1266,7 +1265,7 @@ private void setTopTranslationY (float y) {
       lickView.setTranslationY(y - headerHeight + getTopViewTopPadding());
       lickShadow.setTranslationY(y - (headerHeight * expandFactor));
       if (getSearchTransformFactor() != 0f) {
-        HeaderEditText editText = getSearchHeaderView(headerView);
+        View editText = getSearchHeaderView(headerView).view();
         editText.setTranslationY(Math.max(0f, lickShadow.getTranslationY() - HeaderView.getSize(false)));
       }
     }

File: app/src/main/java/org/thunderdog/challegram/ui/SetSenderControllerPage.java
Patch:
@@ -81,7 +81,7 @@ protected void onCreateView (Context context, CustomRecyclerView recyclerView) {
       @Override
       public void getItemOffsets (@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         super.getItemOffsets(outRect, view, parent, state);
-        int bottom = view instanceof EmptySmartView && getKeyboardState() ? -Keyboard.getSize(Keyboard.getSize()): 0;
+        int bottom = view instanceof EmptySmartView && getKeyboardState() ? -Keyboard.getSize(Keyboard.getSize()) : 0;
         outRect.set(0, bottom, 0, 0);
       }
     });

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsCloudEmojiController.java
Patch:
@@ -54,8 +54,8 @@ protected void getSettings (RunnableData<List<Settings.EmojiPack>> callback) {
   @Override
   protected void applySetting (Settings.EmojiPack setting) {
     Emoji.instance().changeEmojiPack(setting);
-    if (getThemeController() != null) {
-      getThemeController().updateSelectedEmoji();
+    if (getStickersAndEmojiController() != null) {
+      getStickersAndEmojiController().updateSelectedEmoji();
     }
   }
 }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsLanguageController.java
Patch:
@@ -298,7 +298,7 @@ private void showRemoveLanguagePrompt (ListItem item) {
     if (languageInfo == null || languageInfo.isOfficial)
       return;
     boolean isCustom = Td.isLocal(languageInfo);
-    showOptions(Lang.getStringBold(isCustom ? R.string.DeleteLanguageConfirm : R.string.LanguageDeleteConfirm, languageInfo.nativeName, languageInfo.name, TD.getLink(languageInfo)), new int[]{R.id.btn_delete, R.id.btn_cancel}, new String[]{Lang.getString(isCustom ? R.string.RemoveLanguage : R.string.LanguageDelete), Lang.getString(R.string.Cancel)}, new int[]{OPTION_COLOR_RED, OPTION_COLOR_NORMAL}, new int[]{R.drawable.baseline_delete_forever_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
+    showOptions(Lang.getStringBold(isCustom ? R.string.DeleteLanguageConfirm : R.string.LanguageDeleteConfirm, languageInfo.nativeName, languageInfo.name, tdlib.tMeLanguageUrl(languageInfo.id)), new int[]{R.id.btn_delete, R.id.btn_cancel}, new String[]{Lang.getString(isCustom ? R.string.RemoveLanguage : R.string.LanguageDelete), Lang.getString(R.string.Cancel)}, new int[]{OPTION_COLOR_RED, OPTION_COLOR_NORMAL}, new int[]{R.drawable.baseline_delete_forever_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
       if (id == R.id.btn_delete) {
         removeLanguage(item, languageInfo);
       }

File: app/src/main/java/org/thunderdog/challegram/ui/ThemeListController.java
Patch:
@@ -324,7 +324,7 @@ private int parseAnyColor (String v) {
     String arg1 = matcher.group(2);
     String arg2 = matcher.group(3);
     String arg3 = matcher.group(4);
-    String arg4 = groupCount > 5 ? matcher.group(5): null;
+    String arg4 = groupCount > 5 ? matcher.group(5) : null;
     int alpha = arg4 != null ? parseAlpha(arg4) : 255;
     switch (type) {
       case "rgb":
@@ -1490,7 +1490,7 @@ private ListItem newItem (ThemeDelegate theme, int id, boolean isProperty) {
       case ColorId.badge:
       case ColorId.badgeMuted:
       case ColorId.badgeFailed:
-        modifier.setCounter(id == ColorId.badgeFailed ? Tdlib.CHAT_FAILED: 1);
+        modifier.setCounter(id == ColorId.badgeFailed ? Tdlib.CHAT_FAILED : 1);
         modifier.noColorPreview = true;
         break;
       case ColorId.textSelectionHighlight:

File: app/src/main/java/org/thunderdog/challegram/util/HapticMenuHelper.java
Patch:
@@ -310,9 +310,9 @@ private void openMenu (View view, List<MenuItem> items, int anchorMode) {
       int centerY = out[1] + viewHeight / 2;
 
       int resultCenterX = Math.max(viewWidth / 2, Math.min(parentWidth - viewWidth / 2, targetCenterX));
-      int resultCenterY = targetCenterY - targetHeight / 2 - (anchorMode == MenuMoreWrap.ANCHOR_MODE_CENTER ? Screen.dp(12): viewHeight / 2);
+      int resultCenterY = targetCenterY - targetHeight / 2 - (anchorMode == MenuMoreWrap.ANCHOR_MODE_CENTER ? Screen.dp(12) : viewHeight / 2);
 
-      v.setTranslationX(resultCenterX - centerX + (anchorMode == MenuMoreWrap.ANCHOR_MODE_CENTER ? Screen.dp(8): 0));
+      v.setTranslationX(resultCenterX - centerX + (anchorMode == MenuMoreWrap.ANCHOR_MODE_CENTER ? Screen.dp(8) : 0));
       v.setTranslationY(resultCenterY - centerY);
 
       if (anchorMode == MenuMoreWrap.ANCHOR_MODE_CENTER) {

File: app/src/main/java/org/thunderdog/challegram/util/ReactionsListAnimator.java
Patch:
@@ -355,7 +355,7 @@ public void measureImpl (boolean animated) {
     for (Entry entry : actualList) {
       TGReactions.MessageReactionEntry item = entry.item;
 
-      int itemWidth = item.getBubbleWidth();
+      int itemWidth = item.getBubbleTargetWidth(); // item.getBubbleWidth();
       int itemHeight = item.getBubbleHeight();
 
       int left = item.getX();

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntityMessage.java
Patch:
@@ -596,7 +596,7 @@ public boolean performLongPress (final View view, final Text text, final TextPar
       ids.append(R.id.btn_copyLink);
       strings.append(R.string.CopyLink);
       icons.append(R.drawable.baseline_link_24);
-      copyLink = TD.getLink(copyText.substring(1));
+      copyLink = tdlib.tMeUrl(copyText.substring(1));
     } else {
       copyLink = null;
     }

File: app/src/main/java/org/thunderdog/challegram/widget/BetterChatView.java
Patch:
@@ -527,7 +527,7 @@ private void updateChat (boolean update) {
       lastChat.updateChat();
     }
     setTitle(lastChat.getTitle(), lastChat.getTitleHighlight());
-    setEmojiStatus(lastChat.getChat() != null ? tdlib.chatUser(lastChat.getChat()): (lastChat.getUserId() != 0 ? tdlib.cache().user(lastChat.getUserId()): null));
+    setEmojiStatus(lastChat.getChat() != null ? tdlib.chatUser(lastChat.getChat()) : (lastChat.getUserId() != 0 ? tdlib.cache().user(lastChat.getUserId()) : null));
     updateSubtitle();
     lastChat.requestAvatar(avatarReceiver, AvatarReceiver.Options.SHOW_ONLINE);
     setTime(null);

File: app/src/main/java/org/thunderdog/challegram/widget/CustomTextView.java
Patch:
@@ -23,7 +23,6 @@
 
 import androidx.annotation.Nullable;
 
-import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.core.Background;
 import org.thunderdog.challegram.core.Lang;
@@ -478,6 +477,7 @@ public void detach () {
 
   @Override
   public void performDestroy () {
+    TGLegacyManager.instance().removeEmojiListener(this);
     for (ListAnimator.Entry<TextEntry> entry : text) {
       entry.item.performDestroy();
     }

File: app/src/main/java/org/thunderdog/challegram/widget/ForceTouchView.java
Patch:
@@ -439,7 +439,7 @@ public int getOpacity () {
 
       View offsetView;
 
-      final int offsetWeight = context.shrunkenFooter ? 4: 1;
+      final int offsetWeight = context.shrunkenFooter ? 4 : 1;
 
       if (context.actionItems.size() > 1) {
         offsetView = new View(getContext());

File: app/src/main/java/org/thunderdog/challegram/widget/TextFormattingLayout.java
Patch:
@@ -416,7 +416,7 @@ private static int checkSpans (TdApi.FormattedText text, int start, int end) {
     if (text == null || text.entities == null) return 0;
     int flags = 0;
 
-    for (TdApi.TextEntity entity: text.entities) {
+    for (TdApi.TextEntity entity : text.entities) {
       final int entityStart = entity.offset, entityEnd = entity.offset + entity.length;
 
       if (!(entityStart >= end || start >= entityEnd)) {
@@ -560,7 +560,7 @@ protected void dispatchDraw (Canvas canvas) {
       super.dispatchDraw(canvas);
       if (drawable != null) {
         int color = ColorUtils.fromToArgb(Theme.iconColor(), Theme.getColor(ColorId.iconActive), isActive.getFloatValue());
-        Drawables.drawCentered(canvas, drawable, getMeasuredWidth() / 2f, getMeasuredHeight() / 2f, needDrawWithoutRepainting ? null: Paints.getPorterDuffPaint(color));
+        Drawables.drawCentered(canvas, drawable, getMeasuredWidth() / 2f, getMeasuredHeight() / 2f, needDrawWithoutRepainting ? null : Paints.getPorterDuffPaint(color));
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -5129,6 +5129,9 @@ public void afterTextChanged (Editable s) {
           if (!ignoreCaptionUpdate) {
             stack.getCurrent().setCaption(v.getOutputText(false));
           }
+          if (textFormattingLayout != null) {
+            textFormattingLayout.onInputViewSpansChanged();
+          }
         });
         captionView.setHint(Lang.getString(R.string.AddCaption));
         captionView.setMaxLines(4);

File: app/src/main/java/org/thunderdog/challegram/component/emoji/AnimatedEmojiEffect.java
Patch:
@@ -21,6 +21,7 @@
 import org.thunderdog.challegram.charts.CubicBezierInterpolator;
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.Screen;
+import org.thunderdog.challegram.tool.Views;
 
 import java.util.ArrayList;
 
@@ -213,7 +214,7 @@ public void draw(Canvas canvas) {
         }
       }
       float sizeHalf = size / 2f * outAlpha;
-      canvas.save();
+      final int saveCount = Views.save(canvas);
       if (mirror) {
         canvas.scale(-1f, 1f, cx, cy);
       }
@@ -222,7 +223,7 @@ public void draw(Canvas canvas) {
       animatedEmojiDrawable.setBounds((int) (cx - sizeHalf), (int) (cy - sizeHalf), (int) (cx + sizeHalf), (int) (cy + sizeHalf));
       animatedEmojiDrawable.draw(canvas);
       animatedEmojiDrawable.setAlpha(255);
-      canvas.restore();
+      Views.restore(canvas, saveCount);
     }
   }
 }
\ No newline at end of file

File: app/src/main/java/org/thunderdog/challegram/ui/EditRightsController.java
Patch:
@@ -623,9 +623,9 @@ private CharSequence getHintForToggleUnavailability (ListItem item) {
         if (args.senderId.getConstructor() == TdApi.MessageSenderChat.CONSTRUCTOR) {
           return Lang.getString(tdlib.isChannel(Td.getSenderId(args.senderId)) ? R.string.BanChannelHint : R.string.BanChatHint);
         }
-        if (item.getId() == R.id.btn_date && !TD.checkRight(tdlib.chatPermissions(args.chatId), rightId)) {
+        /*if (item.getId() == R.id.btn_date && !TD.checkRight(tdlib.chatPermissions(args.chatId), rightId)) {
           return Lang.getString(R.string.ChatPermissionsRestrictHint);
-        }
+        }*/
         break;
       }
     }

File: app/src/main/java/org/thunderdog/challegram/data/TGStickerSetInfo.java
Patch:
@@ -80,8 +80,7 @@ public TGStickerSetInfo (Tdlib tdlib, TdApi.Sticker[] stickers, boolean areFavor
   public TGStickerSetInfo (Tdlib tdlib, @NonNull TdApi.StickerSetInfo info) {
     this.tdlib = tdlib;
     this.info = info;
-    boolean ignoreThumbnailAnimation = info.id == 7489288727785635874L;
-    if (info.thumbnail != null && !ignoreThumbnailAnimation) {
+    if (info.thumbnail != null) {
       this.previewOutline = info.thumbnailOutline;
       this.previewWidth = info.thumbnail.width;
       this.previewHeight = info.thumbnail.height;
@@ -117,7 +116,7 @@ public TGStickerSetInfo (Tdlib tdlib, @NonNull TdApi.StickerSetInfo info) {
       this.previewOutline = info.covers[0].outline;
       this.previewWidth = info.covers[0].width;
       this.previewHeight = info.covers[0].height;
-      if (Td.isAnimated(info.covers[0].format) && !ignoreThumbnailAnimation) {
+      if (Td.isAnimated(info.covers[0].format)) {
         this.previewImage = null;
         this.previewAnimation = new GifFile(tdlib, info.covers[0].sticker, info.covers[0].format);
         this.previewAnimation.setOptimizationMode(GifFile.OptimizationMode.STICKER_PREVIEW);

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -647,7 +647,7 @@ private void forceCloseEmojiKeyboard () {
     if (emojiShown) {
       removeEmojiView();
       setEmojiShown(false);
-      captionEmojiButton.setImageResource(R.drawable.deproko_baseline_insert_emoticon_26);
+      captionEmojiButton.setImageResource(getTargetIcon());
       setInCaption();
     }
   }
@@ -661,7 +661,7 @@ private void closeEmojiKeyboard () {
         }
       }
       setEmojiShown(false);
-      captionEmojiButton.setImageResource(R.drawable.deproko_baseline_insert_emoticon_26);
+      captionEmojiButton.setImageResource(getTargetIcon());
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -2725,7 +2725,7 @@ private void forceCloseEmojiKeyboard () {
         emojiLayout.setVisibility(View.GONE);
       }
       setEmojiShown(false);
-      emojiButton.setImageResource(R.drawable.deproko_baseline_insert_emoticon_26);
+      emojiButton.setImageResource(getTargetIcon());
 
       checkKeyboardVisible();
     }
@@ -2740,7 +2740,7 @@ private void closeEmojiKeyboard () {
         }
       }
       setEmojiShown(false);
-      emojiButton.setImageResource(R.drawable.deproko_baseline_insert_emoticon_26);
+      emojiButton.setImageResource(getTargetIcon());
       checkKeyboardVisible();
     }
   }

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifActor.java
Patch:
@@ -349,7 +349,7 @@ public void startDecoding (String path) {
           throw new UnsupportedOperationException();
       }
       width = height = file.getRequestedSize() != 0 ? Math.min(file.getRequestedSize(), resolution) : resolution;
-      error = totalFrameCount <= 0 || frameRate <= 0 || durationSeconds <= 0;
+      error = totalFrameCount <= 0 || frameRate <= 0 || (durationSeconds <= 0 && totalFrameCount > 1);
       if (totalFrameCount == 1) {
         file.setIsStill(true);
       }

File: app/src/main/java/org/thunderdog/challegram/util/text/TextMedia.java
Patch:
@@ -325,7 +325,7 @@ public void draw (Canvas c, ComplexReceiver receiver, int left, int top, int rig
       preview.restorePaintAlpha();
     }
     if (content != null) {
-      if (outline != null && content.needPlaceholder()) {
+      if (preview == null && outline != null && content.needPlaceholder()) {
         content.drawPlaceholderContour(c, outline, alpha);
       }
       content.draw(c);

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -3046,7 +3046,7 @@ public int emojiStatusColor () {
       }
     };
 
-    if (!(tdlib.isSelfChat(chat) && forwardInfo != null) && !hasBot) {
+    if (!(tdlib.isSelfChat(chat) && forwardInfo != null) && !hasBot && !isForward && sender.isUser()) {
       hAuthorEmojiStatus = EmojiStatusHelper.makeDrawable(null, tdlib, tdlib.cache().user(sender.getUserId()), colorTheme, (text1, specificMedia) -> invalidateEmojiStatusReceiver());
       hAuthorEmojiStatus.invalidateTextMedia();
       maxWidth -= hAuthorEmojiStatus.getWidth(Screen.dp(3));

File: app/src/main/java/org/thunderdog/challegram/widget/BaseView.java
Patch:
@@ -475,7 +475,7 @@ private void openChatPreviewAsync (TdApi.ChatList chatList, TdApi.Chat chat, @Nu
   public final MessagesController.Arguments createChatPreviewArguments (TdApi.ChatList chatList, TdApi.Chat chat, @Nullable ThreadInfo messageThread, TdApi.SearchMessagesFilter filter) {
     ViewController<?> controller = context().navigation().getCurrentStackItem();
     if (controller != null) {
-      String query = controller.getLastSearchInput();
+      String query = controller.inSearchMode() ? controller.getLastSearchInput() : null;
       if (!StringUtils.isEmpty(query) && highlightMode != MessagesManager.HIGHLIGHT_MODE_NONE) {
         controller.preventLeavingSearchMode();
         return new MessagesController.Arguments(chatList, chat, messageThread, highlightMessageId, highlightMode, filter, highlightMessageId, query);

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -1817,7 +1817,7 @@ public int getControllerWidth (View view) {
   private StickerPreviewView stickerPreview;
   private StickerSmallView stickerPreviewControllerView;
 
-  public void openStickerPreview (Tdlib tdlib, StickerSmallView stickerView, TGStickerObj sticker, int cx, int cy, int maxWidth, int viewportHeight, boolean disableEmojis) {
+  public void openStickerPreview (Tdlib tdlib, StickerSmallView stickerView, TGStickerObj sticker, int cx, int cy, int maxWidth, int viewportHeight, boolean disableEmojis, boolean isEmojiStatus) {
     if (stickerPreview != null) {
       return;
     }
@@ -1827,6 +1827,7 @@ public void openStickerPreview (Tdlib tdlib, StickerSmallView stickerView, TGSti
     stickerPreview = new StickerPreviewView(this);
     stickerPreview.setControllerView(stickerPreviewControllerView);
     stickerPreview.setSticker(tdlib, sticker, cx, cy, maxWidth, viewportHeight, disableEmojis);
+    stickerPreview.setIsEmojiStatus(isEmojiStatus);
 
     stickerPreviewWindow = new PopupLayout(this);
     stickerPreviewWindow.setBackListener(stickerPreview);

File: app/src/main/java/org/thunderdog/challegram/component/chat/ChatHeaderView.java
Patch:
@@ -105,11 +105,13 @@ public void setChat (Tdlib tdlib, TdApi.Chat chat, @Nullable ThreadInfo messageT
     setShowMute(tdlib.chatNeedsMuteIcon(chat));
     setShowLock(ChatId.isSecret(chat.id));
     if (messageThread != null) {
+      setEmojiStatus(null);
       setText(messageThread.chatHeaderTitle(), !StringUtils.isEmpty(forcedSubtitle) ? forcedSubtitle : messageThread.chatHeaderSubtitle());
       setExpandedSubtitle(null);
       setUseRedHighlight(false);
       attachChatStatus(messageThread.getChatId(), messageThread.getMessageThreadId());
     } else {
+      setEmojiStatus(tdlib.isSelfChat(chat) ? null: tdlib.chatUser(chat));
       setText(tdlib.chatTitle(chat), !StringUtils.isEmpty(forcedSubtitle) ? forcedSubtitle : tdlib.status().chatStatus(chat));
       setExpandedSubtitle(tdlib.status().chatStatusExpanded(chat));
       setUseRedHighlight(tdlib.isRedTeam(chat.id));

File: app/src/main/java/org/thunderdog/challegram/component/popups/JoinRequestsComponent.java
Patch:
@@ -173,6 +173,7 @@ protected void setJoinRequest (ListItem item, int position, DoubleTextViewWithIc
         group.text().setSenderAvatar(tdlib(), user.getSenderId());
         group.text().setText(user.getName(), user.getStatus());
         group.text().setIcon(R.drawable.baseline_person_add_16, (v) -> acceptRequest(user));
+        group.text().setEmojiStatus(tdlib(), user.getUser());
         group.icon().setImageResource(R.drawable.baseline_close_24);
         group.setIconClickListener((v) -> declineRequest(user));
         group.setTextClickListener((v) -> onClick(group));

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -79,6 +79,8 @@ public static boolean useBundledWebp () {
 
   public static final boolean NEED_NETWORK_SYNC_REQUEST = false;
 
+  public static final boolean AWAKE_ALL_TDLIB_INSTANCES = !BuildConfig.DEBUG;
+
   // Fields from default config.
 
   public static final int STATUS_BAR_COLOR_ID = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? ColorId.statusBar : ColorId.statusBarLegacy;

File: app/src/main/java/org/thunderdog/challegram/loader/ImageActor.java
Patch:
@@ -90,7 +90,7 @@ public boolean act () {
 
     final TdApi.File rawFile = file.getFile();
 
-    if (isCustomFile(file) || TD.isFileLoadedAndExists(rawFile)) {
+    if (isCustomFile(file) || ImageLoader.isFileLoaded(file.tdlib(), rawFile)) {
       act(file.getFilePath());
       return false;
     }

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifActor.java
Patch:
@@ -183,7 +183,8 @@ public void onTrackChanged (Tdlib tdlib, @Nullable TdApi.Message newTrack, int f
   public void act () {
     TdApi.File file = this.file.getFile();
 
-    if (TD.isFileLoadedAndExists(file)) {
+    boolean isLoaded = this.file.tdlib() == null ? TD.isFileLoaded(file) : TD.isFileLoadedAndExists(file);
+    if (isLoaded) {
       onLoad(file);
       return;
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/GlobalAccountListener.java
Patch:
@@ -19,6 +19,7 @@
 public interface GlobalAccountListener {
   default void onAccountProfileChanged (TdlibAccount account, TdApi.User profile, boolean isCurrent, boolean isLoaded) { }
   default void onAccountProfilePhotoChanged (TdlibAccount account, boolean big, boolean isCurrent) { }
+  default void onAccountProfileEmojiStatusChanged (TdlibAccount account, boolean isCurrent) { }
   default void onAccountSwitched (TdlibAccount newAccount, TdApi.User profile, int reason, TdlibAccount oldAccount) { }
   default void onAuthorizationStateChanged (TdlibAccount account, TdApi.AuthorizationState authorizationState, int status) { }
   default void onTdlibOptimizing (Tdlib tdlib, boolean isOptimizing) { }

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -4872,6 +4872,7 @@ private void setHeaderText () {
     if (headerCell != null && chat != null) {
       headerCell.setUseRedHighlight(tdlib.isRedTeam(chat.id));
       headerCell.setText(tdlib.chatTitle(chat, false), makeSubtitle(false));
+      headerCell.setEmojiStatus(tdlib.chatUser(chat));
       headerCell.setExpandedSubtitle(makeSubtitle(true));
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/StickersTrendingController.java
Patch:
@@ -229,7 +229,7 @@ private void loadTrending (int offset, int limit, int cellCount) {
             TdApi.StickerSetInfo[] sets = trendingStickerSets.sets;
             if (sets.length > 0) {
               stickerSets = new ArrayList<>(sets.length);
-              EmojiMediaListController.parseTrending(tdlib, stickerSets, stickerItems, cellCount, sets, this, this, true);
+              EmojiMediaListController.parseTrending(tdlib, stickerSets, stickerItems, cellCount, sets, this, this, true, false);
             } else {
               stickerSets = null;
               if (offset == 0)

File: app/src/main/java/org/thunderdog/challegram/ui/TranslationControllerV2.java
Patch:
@@ -24,7 +24,6 @@
 import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.charts.LayoutHelper;
-import org.thunderdog.challegram.component.chat.MessagesManager;
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.data.TGSource;
@@ -50,6 +49,7 @@
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.tool.Views;
 import org.thunderdog.challegram.unsorted.Settings;
+import org.thunderdog.challegram.util.ScrollJumpCompensator;
 import org.thunderdog.challegram.util.StringList;
 import org.thunderdog.challegram.util.TranslationCounterDrawable;
 import org.thunderdog.challegram.util.text.Text;
@@ -293,7 +293,7 @@ private void updateTexts (ReplaceAnimator<?> animator) {
   }
 
   private void scrollCompensation (int heightDiff) {
-    MessagesManager.OnGlobalLayoutListener listener = new MessagesManager.OnGlobalLayoutListener(recyclerView, messageTextView, heightDiff);
+    ScrollJumpCompensator listener = new ScrollJumpCompensator(recyclerView, messageTextView, heightDiff);
     listener.add();
   }
 

File: app/src/main/java/org/thunderdog/challegram/widget/ExpanderView.java
Patch:
@@ -109,7 +109,7 @@ public final void draw (Canvas c, int cx, int cy, int color) {
     if (counter != null && expandFactor < 1f) {
       boolean rtl = Lang.rtl();
       cx += Screen.dp(24f) * (rtl ? 1 : -1);
-      // cy -= Screen.dp(13f);
+      cy -= Screen.dp(2f);
       c.save();
       c.scale(.85f, .85f, cx, cy);
       counter.draw(c, cx, cy, rtl ? Gravity.LEFT : Gravity.RIGHT, 1f - expandFactor);

File: app/src/main/java/org/thunderdog/challegram/widget/ForceTouchView.java
Patch:
@@ -1238,6 +1238,7 @@ private void setHeaderUser (TdApi.User user) {
     headerView.setShowVerify(user.isVerified);
     headerView.setShowScam(user.isScam);
     headerView.setShowFake(user.isFake);
+    headerView.setEmojiStatus(user);
     headerView.setText(TD.getUserName(user), tdlib.status().getPrivateChatSubtitle(user.id, user, false));
     setChatAvatar();
   }
@@ -1258,6 +1259,7 @@ private void setupChat (long chatId, @Nullable ThreadInfo messageThread, Complex
     headerView.setShowScam(tdlib.chatScam(chat));
     headerView.setShowFake(tdlib.chatFake(chat));
     headerView.setShowMute(tdlib.chatNeedsMuteIcon(chat));
+    headerView.setEmojiStatus(tdlib.chatUser(chat));
     if (messageThread != null) {
       headerView.setText(messageThread.chatHeaderTitle(), messageThread.chatHeaderSubtitle());
     } else {

File: app/src/main/java/org/thunderdog/challegram/unsorted/NLoader.java
Patch:
@@ -73,6 +73,8 @@ public static synchronized boolean loadLibrary () {
         if (Config.SO_SHARED) {
           libraries.add("c++_shared");
         }
+        libraries.add("crypto");
+        libraries.add("ssl");
         libraries.add("tdjni");
         libraries.add("leveldbjni");
         libraries.add("challegram.23");

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -381,7 +381,6 @@ private static void notifyLogFilesAltered () {
   public static final int TAG_PLAYER = 1 << 19;
   public static final int TAG_NDK = 1 << 20;
   public static final int TAG_ACCOUNTS = 1 << 21;
-  public static final int TAG_LANGUAGE = 1 << 22;
 
   public static final int TAG_TDLIB_FILES = 1 << 29;
   public static final int TAG_TDLIB_OPTIONS = 1 << 30;
@@ -408,7 +407,6 @@ private static void notifyLogFilesAltered () {
     TAG_YOUTUBE,
     TAG_CAMERA,
     TAG_EMOJI,
-    TAG_LANGUAGE,
     TAG_TDLIB_FILES,
     TAG_TDLIB_OPTIONS
   };

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -381,6 +381,7 @@ private static void notifyLogFilesAltered () {
   public static final int TAG_PLAYER = 1 << 19;
   public static final int TAG_NDK = 1 << 20;
   public static final int TAG_ACCOUNTS = 1 << 21;
+  public static final int TAG_LANGUAGE = 1 << 22;
 
   public static final int TAG_TDLIB_FILES = 1 << 29;
   public static final int TAG_TDLIB_OPTIONS = 1 << 30;
@@ -407,7 +408,7 @@ private static void notifyLogFilesAltered () {
     TAG_YOUTUBE,
     TAG_CAMERA,
     TAG_EMOJI,
-
+    TAG_LANGUAGE,
     TAG_TDLIB_FILES,
     TAG_TDLIB_OPTIONS
   };

File: app/src/main/java/org/thunderdog/challegram/ui/ListItem.java
Patch:
@@ -115,8 +115,10 @@ public class ListItem {
   public static final int TYPE_DRAWER_ITEM_WITH_RADIO_SEPARATED = 88;
   public static final int TYPE_VALUED_SETTING_COMPACT = 89;
   public static final int TYPE_VALUED_SETTING_COMPACT_WITH_RADIO = 90;
+  public static final int TYPE_VALUED_SETTING_COMPACT_WITH_RADIO_2 = 390;
   public static final int TYPE_VALUED_SETTING_COMPACT_WITH_COLOR = 91;
   public static final int TYPE_VALUED_SETTING_COMPACT_WITH_TOGGLER = 92;
+  public static final int TYPE_VALUED_SETTING_COMPACT_WITH_CHECKBOX = 393;
   public static final int TYPE_DESCRIPTION_SMALL = 93;
   public static final int TYPE_COLOR_PICKER = 94;
   public static final int TYPE_EDITTEXT_REUSABLE = 95;

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -297,5 +297,5 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean REQUIRE_FIREBASE_SERVICES_FOR_SAFETYNET = false;
 
   public static final int VOIP_CONNECTION_MIN_LAYER = 65;
-  public static final boolean ALLOW_DIRECT_TGVOIP = false;
+  public static final boolean FORCE_DIRECT_TGVOIP = false;
 }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -165,7 +165,7 @@ public static boolean useBundledWebp () {
   public static final boolean USE_GROUP_NAMES = Build.VERSION.SDK_INT >= Build.VERSION_CODES.O;
 
   public static final boolean FORCE_SHOW_RECENTS_STICKERS_TITLE = false;
-  public static final int DEFAULT_SHOW_RECENT_STICKERS_COUNT = BuildConfig.DEBUG ? 5 : 20;
+  public static final int DEFAULT_SHOW_RECENT_STICKERS_COUNT = 10;
 
   public static final boolean USE_TEXT_ADVANCE = true; // Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
 

File: app/src/main/java/org/thunderdog/challegram/MainActivity.java
Patch:
@@ -247,7 +247,7 @@ private void updateCounter () {
     if (problemType != Tdlib.ResolvableProblem.NONE) {
       backButton.setMenuBadge(R.id.theme_color_headerBadgeFailed, animated);
     } else {
-      TdlibBadgeCounter counter = TdlibManager.instance().getTotalUnreadBadgeCounter(tdlib.id());
+      TdlibBadgeCounter counter = TdlibManager.instance().getTotalUnreadBadgeCounter(tdlib.accountId());
       if (counter.getCount() > 0) {
         backButton.setMenuBadge(
           counter.isMuted() ? R.id.theme_color_headerBadgeMuted : R.id.theme_color_headerBadge,

File: app/src/main/java/org/thunderdog/challegram/navigation/BackHeaderButton.java
Patch:
@@ -201,7 +201,7 @@ public void onDraw (Canvas c) {
 
       float badgeCenterX = endX;
       float badgeCenterY = -endY - Screen.dp(1.5f);
-      float badgeVisibility = MathUtils.clamp(1f - factor); // * menuHintBadgeVisible.getFloatValue();
+      float badgeVisibility = MathUtils.clamp(1f - factor) * menuHintBadgeVisible.getFloatValue();
       if (badgeVisibility > 0f) {
         int cutoutColor = parentHeader.getFilling().getColor();
         int badgeColor = ColorUtils.alphaColor(MathUtils.clamp(badgeVisibility), menuHintBadgeColor.getIntValue());

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -8272,8 +8272,8 @@ private boolean setUnreadCounters (@NonNull TdApi.ChatList chatList, int unreadM
     counter.messageCount = unreadMessageCount;
     counter.messageUnmutedCount = unreadUnmutedCount;
 
-    context.incrementBadgeCounters(chatList, unreadMessageCount - oldUnreadCount, unreadUnmutedCount - oldUnreadUnmutedCount, false);
     account().storeCounter(chatList, counter, false);
+    context.incrementBadgeCounters(chatList, unreadMessageCount - oldUnreadCount, unreadUnmutedCount - oldUnreadUnmutedCount, false);
     listeners().notifyMessageCountersChanged(chatList, unreadMessageCount, unreadUnmutedCount);
 
     return true;
@@ -8293,8 +8293,8 @@ private boolean setUnreadChatCounters(@NonNull TdApi.ChatList chatList, int tota
     int oldTotalChatCount = counter.totalChatCount;
 
     if (counter.setChatCounters(totalCount, unreadChatCount, unreadUnmutedCount, markedAsUnreadCount, markedAsUnreadUnmutedCount)) {
-      context.incrementBadgeCounters(chatList, unreadChatCount - oldUnreadCount, unreadUnmutedCount - oldUnreadUnmutedCount, true);
       account().storeCounter(chatList, counter, true);
+      context.incrementBadgeCounters(chatList, unreadChatCount - oldUnreadCount, unreadUnmutedCount - oldUnreadUnmutedCount, true);
       listeners().notifyChatCountersChanged(chatList, (totalCount > 0) != (oldTotalChatCount > 0), totalCount, unreadChatCount, unreadUnmutedCount);
       return true;
     }

File: app/src/main/java/org/thunderdog/challegram/navigation/HeaderView.java
Patch:
@@ -307,6 +307,7 @@ public void resetColors (ViewController<?> c, ViewController<?> preview) {
     if (!animating || preview.getHeaderColorId() == c.getHeaderColorId()) {
       filling.setColor(getHeaderColor(c, true));
       invalidateHeader();
+      backButton.invalidate();
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -1276,6 +1276,7 @@ private void onAccountSwitched (TdlibAccount account, @AccountSwitchReason int r
     account.markAsUsed();
     Tdlib tdlib = account.tdlib();
     global().notifyAccountSwitched(account, tdlib.myUser(), reason, oldAccount);
+    global().notifyResolvableProblemAvailabilityMightHaveChanged();
     onConnectionStateChanged(tdlib, tdlib.connectionState());
     onConnectionDisplayStatusChanged(tdlib);
     if (Settings.instance().checkNotificationFlag(Settings.NOTIFICATION_FLAG_ONLY_ACTIVE_ACCOUNT)) {

File: app/src/main/java/org/thunderdog/challegram/component/popups/ModernActionedLayout.java
Patch:
@@ -38,7 +38,7 @@ public ModernActionedLayout (ViewController<?> context) {
   }
 
   public void setController (MediaBottomBaseController<?> controller) {
-    controller.get();
+    controller.getValue();
     curController = controller;
   }
 

File: app/src/main/java/org/thunderdog/challegram/component/preview/YouTubePreviewLayout.java
Patch:
@@ -94,7 +94,7 @@ protected int computeHeight (int currentWidth) {
 
     int playerWidth, playerHeight;
     final NavigationController navigation = UI.getNavigation();
-    int navigationHeight = navigation != null ? navigation.get().getMeasuredHeight() : 0;
+    int navigationHeight = navigation != null ? navigation.getValue().getMeasuredHeight() : 0;
     int fullHeight = navigationHeight == 0 || inFullscreen ? Screen.currentActualHeight() : navigationHeight;
 
     if (minimized) {

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSetWrap.java
Patch:
@@ -25,8 +25,6 @@
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
-import androidx.annotation.Nullable;
-
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.thunderdog.challegram.BaseActivity;
 import org.thunderdog.challegram.R;
@@ -473,7 +471,7 @@ public void initWithSet (TdApi.StickerSet set) {
 
   private void addViews () {
     headerView.initWithSingleController(stickersController, false);
-    addView(stickersController.get());
+    addView(stickersController.getValue());
     addView(topShadow);
     if (topLick != null) {
       addView(topLick);

File: app/src/main/java/org/thunderdog/challegram/data/ComplexMediaHolder.java
Patch:
@@ -46,7 +46,7 @@ public Entry (String key, long mediaKey) {
     }
 
     @Override
-    public List<T> get () {
+    public List<T> getValue () {
       return usages;
     }
   }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -4300,16 +4300,16 @@ public static TdApi.PhotoSize findClosest (TdApi.Photo photo, int width, int hei
     if (string != null && string.value instanceof TdApi.LanguagePackStringValueOrdinary) {
       return ((TdApi.LanguagePackStringValueOrdinary) string.value).value;
     }
-    return defaultValue != null ? defaultValue.get() : null;
+    return defaultValue != null ? defaultValue.getValue() : null;
   }
 
   public static @Nullable String findOrdinary (TdApi.LanguagePackString[] strings, String key, Future<String> defaultValue) {
     for (TdApi.LanguagePackString string : strings) {
       if (key.equals(string.key)) {
-        return string.value instanceof TdApi.LanguagePackStringValueOrdinary ? ((TdApi.LanguagePackStringValueOrdinary) string.value).value : defaultValue != null ? defaultValue.get() : null;
+        return string.value instanceof TdApi.LanguagePackStringValueOrdinary ? ((TdApi.LanguagePackStringValueOrdinary) string.value).value : defaultValue != null ? defaultValue.getValue() : null;
       }
     }
-    return defaultValue != null ? defaultValue.get() : null;
+    return defaultValue != null ? defaultValue.getValue() : null;
   }
 
   public static TdApi.PhotoSize findClosest (TdApi.PhotoSize[] sizes, int width, int height) {

File: app/src/main/java/org/thunderdog/challegram/data/TGCommentButton.java
Patch:
@@ -720,7 +720,7 @@ private void openPreviewAsync (@NonNull MessagesController controller, int x, in
     };
     pendingPreviewTask.removeOnCancel(UI.getAppHandler());
     controller.scheduleAnimation(pendingPreviewTask, 600l);
-    controller.get();
+    controller.getValue();
   }
 
   private void cancelAsyncPreview () {
@@ -748,7 +748,7 @@ private void openPreview (MessagesController controller, int x, int y) {
     int[] location = Views.getLocationOnScreen(sourceView);
     int sourceX = location[0] + x;
     int sourceY = location[1] + y;
-    ForceTouchView.ForceTouchContext forceTouchContext = new ForceTouchView.ForceTouchContext(tdlib, sourceView, controller.get(), controller);
+    ForceTouchView.ForceTouchContext forceTouchContext = new ForceTouchView.ForceTouchContext(tdlib, sourceView, controller.getValue(), controller);
     forceTouchContext.setAnimationSourcePoint(sourceX, sourceY);
     forceTouchContext.setStateListener(controller);
     forceTouchContext.setStateListenerArgument(controller);

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageSticker.java
Patch:
@@ -685,7 +685,7 @@ public boolean onTouchEvent (MessageView view, MotionEvent e) {
             case SPECIAL_TYPE_ANIMATED_EMOJI: {
               GifFile animatedFile = view.getComplexReceiver() != null ? view.getComplexReceiver().getGifReceiver(0).getCurrentFile() : null;
               if (Config.LOOP_BIG_CUSTOM_EMOJI && Td.customEmojiId(sticker) != 0) {
-                tapProcessed = fallbackAct.get();
+                tapProcessed = fallbackAct.getBoolValue();
               } else if (animatedFile != null) {
                 tapProcessed = animatedFile.setVibrationPattern(Emoji.instance().getVibrationPatternType(sticker.emoji));
                 if (animatedFile.setLooped(false)) {
@@ -696,7 +696,7 @@ public boolean onTouchEvent (MessageView view, MotionEvent e) {
               break;
             }
             default: {
-              tapProcessed = fallbackAct.get();
+              tapProcessed = fallbackAct.getBoolValue();
               break;
             }
           }

File: app/src/main/java/org/thunderdog/challegram/loader/AvatarReceiver.java
Patch:
@@ -462,7 +462,7 @@ public void onBasicGroupFullUpdated (long basicGroupId, TdApi.BasicGroupFullInfo
   @AnyThread
   private void runOnUiThread (FutureBool condition, Runnable act) {
     UI.post(() -> {
-      if (condition.get()) {
+      if (condition.getBoolValue()) {
         act.run();
       }
     });

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -8098,7 +8098,7 @@ private void showTTLOptions () {
   // Etc
 
   public void open () {
-    get();
+    getValue();
     popupView.showAnimatedPopupView(contentView, this);
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerController.java
Patch:
@@ -1091,7 +1091,7 @@ public void onAnimationEnd (Animator animation) {
     });
 
     ViewController<?> c = UI.getCurrentStackItem(context());
-    View view = c != null ? c.get() : null;
+    View view = c != null ? c.getValue() : null;
     if (view != null && view instanceof ContentFrameLayout) {
       currentView = (ContentFrameLayout) view;
     } else {
@@ -1226,7 +1226,7 @@ public boolean prepare () {
   }
 
   private float getScreenWidth () {
-    return context.navigation().get().getMeasuredWidth();
+    return context.navigation().getValue().getMeasuredWidth();
   }
 
   public void translate (int lastScrollX) {

File: app/src/main/java/org/thunderdog/challegram/navigation/NavigationGestureController.java
Patch:
@@ -151,7 +151,7 @@ public boolean onUp (MotionEvent event) {
     if (listenSlidingBack && drawer != null && drawer.isVisible()) {
       boolean ok;
       if (Lang.rtl()) {
-        ok = event.getX() < navigation.get().getMeasuredWidth() - drawer.getWidth() + drawer.getShadowWidth();
+        ok = event.getX() < navigation.getValue().getMeasuredWidth() - drawer.getWidth() + drawer.getShadowWidth();
       } else {
         ok = event.getX() >= drawer.getWidth();
       }
@@ -162,9 +162,9 @@ public boolean onUp (MotionEvent event) {
       boolean close;
 
       if (slidingVertical) {
-        close = lastScrollY < (float) navigation.get().getMeasuredHeight() * Size.NAVIGATION_DROP_FACTOR;
+        close = lastScrollY < (float) navigation.getValue().getMeasuredHeight() * Size.NAVIGATION_DROP_FACTOR;
       } else {
-        close = lastScrollX < (float) navigation.get().getMeasuredWidth() * Size.NAVIGATION_DROP_FACTOR;
+        close = lastScrollX < (float) navigation.getValue().getMeasuredWidth() * Size.NAVIGATION_DROP_FACTOR;
       }
 
       if (close) {

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -2486,7 +2486,7 @@ public void chat (long chatId, Future<TdApi.Function<?>> createFunction, @NonNul
         if (chat != null) {
           callback.runWithData(chat);
         } else {
-          client().send(createFunction.get(), ignored -> {
+          client().send(createFunction.getValue(), ignored -> {
             TdApi.Chat createdChat = chat(chatId);
             callback.runWithData(createdChat);
           });
@@ -9516,7 +9516,7 @@ public <T extends Settings.CloudSetting> void fetchCloudSettings (@NonNull Runna
       Map<String, TdApi.File> pendingPreviews = new HashMap<>();
 
         boolean foundBuiltIn = false;
-        T currentSetting = currentSettingProvider.get();
+        T currentSetting = currentSettingProvider.getValue();
         boolean foundCurrent = currentSetting.isBuiltIn();
 
         for (TdApi.Message message : messages) {
@@ -9537,7 +9537,7 @@ else if (!foundCurrent && setting.identifier.equals(currentSetting.identifier))
         }
 
         if (!foundBuiltIn)
-          settings.add(0, builtinItemProvider.get());
+          settings.add(0, builtinItemProvider.getValue());
         if (!foundCurrent)
           settings.add(currentSetting);
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibSingleton.java
Patch:
@@ -64,7 +64,7 @@ public void get (RunnableData<T> after) {
       return;
     }
     if (needRequest) {
-      TdApi.Function<T> request = getterCreator.get();
+      TdApi.Function<T> request = getterCreator.getValue();
       tdlib.client().send(request, result -> {
         if (result.getConstructor() == TdApi.Error.CONSTRUCTOR) {
           Log.e("TdlibSingleton failed for request: %s, error: %s", request, TD.toErrorString(result));

File: app/src/main/java/org/thunderdog/challegram/tool/Fonts.java
Patch:
@@ -72,7 +72,7 @@ private static synchronized Typeface loadFont (String path, @NonNull Future<Type
       firstFont = true;
     }
     if (needSystemFonts) {
-      Typeface typeface = fallback.get();
+      Typeface typeface = fallback.getValue();
       if (typeface != null) {
         return typeface;
       }
@@ -83,7 +83,7 @@ private static synchronized Typeface loadFont (String path, @NonNull Future<Type
       if (firstFont)
         needSystemFonts = true;
       Log.e("Unable to load built-in font", t);
-      return fallback.get();
+      return fallback.getValue();
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/BottomSheetViewController.java
Patch:
@@ -380,7 +380,7 @@ public void onCustomShowComplete () {
     };
 
     setupPopupLayout(popupLayout);
-    get();
+    getValue();
     context().addFullScreenView(this, false);
   }
 
@@ -394,7 +394,7 @@ protected void setupPopupLayout (PopupLayout popupLayout) {
   protected void launchOpenAnimation () {
     if (!openLaunched) {
       openLaunched = true;
-      popupLayout.showSimplePopupView(get(), calculateTotalHeight());
+      popupLayout.showSimplePopupView(getValue(), calculateTotalHeight());
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/FeatureToggles.java
Patch:
@@ -56,7 +56,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
           if (view.getToggler() != null) {
             FutureBool valueSupplier = valueSuppliers.get(view.getId());
             if (valueSupplier != null) {
-              view.getToggler().setRadioEnabled(valueSupplier.get(), isUpdate);
+              view.getToggler().setRadioEnabled(valueSupplier.getBoolValue(), isUpdate);
             }
           }
         }

File: app/src/main/java/org/thunderdog/challegram/ui/HashtagChatController.java
Patch:
@@ -186,7 +186,7 @@ public void onPageScrolled (int position, int actualPosition, float positionOffs
     float totalFactor = (float) actualPosition + positionOffset;
     View v1 = headerCell.getChildAt(0);
     View v2 = headerCell.getChildAt(1);
-    float distance = (float) get().getMeasuredWidth() * .14f /*HeaderView.TRANSLATION_FACTOR*/;
+    float distance = (float) getValue().getMeasuredWidth() * .14f /*HeaderView.TRANSLATION_FACTOR*/;
     v1.setTranslationX(totalFactor == 1f ? 0 : -distance * totalFactor);
     v1.setAlpha(1f - totalFactor);
     if (v2 != null) {

File: app/src/main/java/org/thunderdog/challegram/ui/InstantViewController.java
Patch:
@@ -114,8 +114,8 @@ public void fillMenuItems (int id, HeaderView header, LinearLayout menu) {
 
   @Override
   public boolean canSlideBackFrom (NavigationController navigationController, final float originalX, final float originalY) {
-    float x = originalX - (Views.getLocationInWindow(recyclerView)[0] - Views.getLocationInWindow(navigationController.get())[0]);
-    float y = originalY - (Views.getLocationInWindow(recyclerView)[1] - Views.getLocationInWindow(navigationController.get())[1]);
+    float x = originalX - (Views.getLocationInWindow(recyclerView)[0] - Views.getLocationInWindow(navigationController.getValue())[0]);
+    float y = originalY - (Views.getLocationInWindow(recyclerView)[1] - Views.getLocationInWindow(navigationController.getValue())[1]);
 
     View view = recyclerView.findChildViewUnder(x, y);
     if (view instanceof PageBlockWrapView) {
@@ -592,7 +592,7 @@ public void show () throws UnsupportedOperationException {
     if (context.navigation().isEmpty()) {
       destroy();
     } else {
-      get();
+      getValue();
       context.navigation().navigateTo(this);
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/MainController.java
Patch:
@@ -1053,7 +1053,7 @@ private int getMenuSectionName () {
 
   private void modifyNewPagerItemController (final ViewController<?> c, final int position) {
     if (c instanceof RecyclerViewProvider) {
-      c.get();
+      c.getValue();
       ((RecyclerViewProvider) c).provideRecyclerView().addOnScrollListener(new RecyclerView.OnScrollListener() {
         private float lastY;
         private float lastShowY;

File: app/src/main/java/org/thunderdog/challegram/ui/PasscodeController.java
Patch:
@@ -230,7 +230,7 @@ public boolean onInterceptTouchEvent (MotionEvent ev) {
   }
 
   public void fadeOut (Animator.AnimatorListener listener) {
-    Views.animateAlpha(get(), 0f, 100l, AnimatorUtils.DECELERATE_INTERPOLATOR, listener);
+    Views.animateAlpha(getValue(), 0f, 100l, AnimatorUtils.DECELERATE_INTERPOLATOR, listener);
   }
 
   private void setMode (int mode) {

File: app/src/main/java/org/thunderdog/challegram/ui/PollResultsController.java
Patch:
@@ -170,8 +170,8 @@ public void onClick (View v) {
 
   @Override
   public boolean canSlideBackFrom(NavigationController navigationController, float originalX, float originalY) {
-    float x = originalX - (Views.getLocationInWindow(getRecyclerView())[0] - Views.getLocationInWindow(navigationController.get())[0]);
-    float y = originalY - (Views.getLocationInWindow(getRecyclerView())[1] - Views.getLocationInWindow(navigationController.get())[1]);
+    float x = originalX - (Views.getLocationInWindow(getRecyclerView())[0] - Views.getLocationInWindow(navigationController.getValue())[0]);
+    float y = originalY - (Views.getLocationInWindow(getRecyclerView())[1] - Views.getLocationInWindow(navigationController.getValue())[1]);
     if (x >= 0 && y >= 0 && x < getRecyclerView().getMeasuredWidth() && y < getRecyclerView().getMeasuredHeight()) {
       View view = getRecyclerView().findChildViewUnder(x, y);
       if (view instanceof RecyclerView) {

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -3138,7 +3138,7 @@ private interface SupergroupFeatureRunnable {
   }
 
   private void toggleSupergroupGroupFeature (FutureBool currentValue, SupergroupFeatureRunnable runnable, @IdRes int toggleViewId) {
-    boolean newValue = !currentValue.get();
+    boolean newValue = !currentValue.getBoolValue();
     if (supergroupFull != null) {
       runnable.setSupergroupFeatureValue(supergroup.id, supergroupFull, newValue);
       baseAdapter.updateValuedSettingById(toggleViewId);
@@ -5427,15 +5427,15 @@ public void onScrolled (@NonNull RecyclerView recyclerView, int dx, int dy) {
   private void scrollPagerRecyclerBy (int dy) {
     ViewController<?> c = findCurrentCachedController();
     if (c != null) {
-      RecyclerView recyclerView = (RecyclerView) c.get();
+      RecyclerView recyclerView = (RecyclerView) c.getValue();
       recyclerView.scrollBy(0, dy);
     }
   }
 
   private void dispatchPagerRecyclerEvent (MotionEvent e) {
     ViewController<?> c = findCurrentCachedController();
     if (c != null) {
-      c.get().dispatchTouchEvent(e);
+      c.getValue().dispatchTouchEvent(e);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/RecyclerViewController.java
Patch:
@@ -365,7 +365,7 @@ protected final DoneButton getDoneButton () {
         }
       });
       doneButton.setLayoutParams(params);
-      ((ViewGroup) get()).addView(doneButton);
+      ((ViewGroup) getValue()).addView(doneButton);
     }
     return doneButton;
   }

File: app/src/main/java/org/thunderdog/challegram/ui/SetSenderController.java
Patch:
@@ -36,7 +36,7 @@ public void setDelegate (SetSenderControllerPage.Delegate delegate) {
   @Override
   protected void onBeforeCreateView () {
     setSenderControllerPage.setArguments(getArguments());
-    setSenderControllerPage.get();
+    setSenderControllerPage.getValue();
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsCacheController.java
Patch:
@@ -400,11 +400,11 @@ public void onDataErased () {
     if (navigationController != null) {
       SettingsDataController dataController = new SettingsDataController(context, tdlib);
       setArguments(dataController);
-      dataController.get();
+      dataController.getValue();
       navigationController.insertController(dataController, 0);
       SettingsController c = new SettingsController(context, tdlib);
       navigationController.insertController(c, 0);
-      c.get();
+      c.getValue();
     }
     tdlib.client().send(new TdApi.GetStorageStatisticsFast(), this);
     getStats(false);
@@ -987,7 +987,7 @@ public void onPrepareEraseData() {
             public void onEraseDataCompleted() {
               MainController c = new MainController(context, tdlib);
               onDataErased();
-              c.get();
+              c.getValue();
               navigationController().insertController(c, 0);
             }
           });

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -1092,7 +1092,7 @@ public void getItemOffsets (Rect outRect, View view, RecyclerView parent, Recycl
           if (i >= itemCount - addSize) {
             int rowCount = (int) Math.ceil((float) itemCount / (float) spanCount);
             int itemsHeight = rowCount * Screen.dp(86f) + Screen.dp(HORIZONTAL_PADDING_SIZE) + Screen.dp(VERTICAL_PADDING_SIZE);
-            outRect.bottom = Math.max(0, get().getMeasuredHeight() == 0 ? Screen.currentHeight() : get().getMeasuredHeight() - HeaderView.getSize(true) - itemsHeight - (canShareLink ? Screen.dp(56f) : 0));
+            outRect.bottom = Math.max(0, getValue().getMeasuredHeight() == 0 ? Screen.currentHeight() : getValue().getMeasuredHeight() - HeaderView.getSize(true) - itemsHeight - (canShareLink ? Screen.dp(56f) : 0));
           }
         }
       }
@@ -2198,7 +2198,7 @@ public void onCustomShowComplete () {
     popupLayout.setNeedRootInsets();
     popupLayout.setTouchProvider(this);
     popupLayout.setIgnoreHorizontal();
-    get();
+    getValue();
     context().addFullScreenView(this, false);
   }
 
@@ -2212,7 +2212,7 @@ protected boolean useDropShadow () {
   private void launchOpenAnimation () {
     if (!openLaunched) {
       openLaunched = true;
-      popupLayout.showSimplePopupView(get(), calculateTotalHeight());
+      popupLayout.showSimplePopupView(getValue(), calculateTotalHeight());
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/ThemeListController.java
Patch:
@@ -3363,7 +3363,7 @@ private void setInTransparentMode (boolean inTransparentMode, View ignoreView) {
           setChildAlpha(view);
         }
         FillingDrawable drawable;
-        drawable = Theme.findFillingDrawable(get());
+        drawable = Theme.findFillingDrawable(getValue());
         if (drawable != null)
           drawable.setAlphaFactor(1f - factor);
         setForcePreview(factor > 0f);

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraController.java
Patch:
@@ -302,13 +302,13 @@ public void checkLegacyMode () {
   }
 
   public void takeCameraLayout (ViewGroup toGroup, int index) {
-    get();
+    getValue();
     Views.moveView(contentView, toGroup, index);
     manager.getView().requestLayout();
   }
 
   public void releaseCameraLayout () {
-    get();
+    getValue();
     Views.moveView(contentView, rootLayout, 0);
     manager.getView().requestLayout();
   }

File: app/src/main/java/org/thunderdog/challegram/util/Permissions.java
Patch:
@@ -296,7 +296,7 @@ public boolean requestAccessCameraPermission (@Nullable RunnableBool after) {
   }
 
   private boolean requestExternalStoragePermission (@ReadType int readType, @NonNull FutureBoolWithArg<RunnableBool> mainPermissionRequest, @Nullable RunnableBool after) {
-    if (mainPermissionRequest.get((granted) -> {
+    if (mainPermissionRequest.getBoolValue((granted) -> {
       if (granted) {
         requestExternalStoragePermission(readType, mainPermissionRequest, after);
       } else if (after != null) {

File: app/src/main/java/org/thunderdog/challegram/widget/BaseView.java
Patch:
@@ -15,7 +15,6 @@
 package org.thunderdog.challegram.widget;
 
 import android.content.Context;
-import android.graphics.drawable.Drawable;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewConfiguration;
@@ -536,7 +535,7 @@ public void act () {
     };
     pendingTask.removeOnCancel(UI.getAppHandler());
     controller.scheduleAnimation(pendingTask, 600l);
-    controller.get();
+    controller.getValue();
   }
 
   private void cancelAsyncPreview () {
@@ -560,7 +559,7 @@ private void openPreview (ViewController<?> controller, float x, float y) {
     int[] location = Views.getLocationOnScreen(this);
     int sourceX = location[0] + Math.round(x);
     int sourceY = location[1] + Math.round(y);
-    ForceTouchView.ForceTouchContext context = new ForceTouchView.ForceTouchContext(tdlib, this, controller.get(), controller);
+    ForceTouchView.ForceTouchContext context = new ForceTouchView.ForceTouchContext(tdlib, this, controller.getValue(), controller);
     context.setStateListener(controller);
     context.setAnimationSourcePoint(sourceX, sourceY);
 

File: app/src/main/java/org/thunderdog/challegram/widget/CollapseListView.java
Patch:
@@ -58,7 +58,7 @@ public int getVisualHeight () {
     }
 
     @Override
-    public View get () {
+    public View getValue () {
       return view;
     }
   }
@@ -110,7 +110,7 @@ public void initWithList (Item[] items, @Nullable ViewController<?> themeProvide
         themeProvider.addThemeInvalidateListener(shadowView);
       }
 
-      View view = item.get();
+      View view = item.getValue();
       view.setVisibility(View.GONE);
       addView(view, 0);
 

File: app/src/main/java/org/thunderdog/challegram/widget/EmojiLayout.java
Patch:
@@ -1672,7 +1672,7 @@ public int getCount () {
 
     @Override
     public void destroyItem (ViewGroup container, int position, @NonNull Object object) {
-      container.removeView(((ViewController<?>) object).get());
+      container.removeView(((ViewController<?>) object).getValue());
     }
 
     @Override
@@ -1695,13 +1695,13 @@ public Object instantiateItem (@NonNull ViewGroup container, int position) {
           c.bindThemeListeners(themeProvider);
         }
       }
-      container.addView(c.get());
+      container.addView(c.getValue());
       return c;
     }
 
     @Override
     public boolean isViewFromObject (@NonNull View view, @NonNull Object object) {
-      return object instanceof ViewController && ((ViewController<?>) object).get() == view;
+      return object instanceof ViewController && ((ViewController<?>) object).getValue() == view;
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/widget/PopupLayout.java
Patch:
@@ -630,7 +630,7 @@ public void hideWindow (boolean animated) {
 
   @Override
   protected View getMeasureTarget () {
-    return boundController != null ? boundController.get() : this;
+    return boundController != null ? boundController.getValue() : this;
   }
 
   private static final int ANIMATION_TYPE_NONE = -1;

File: app/src/main/java/org/thunderdog/challegram/widget/ViewControllerPagerAdapter.java
Patch:
@@ -121,7 +121,7 @@ public Object instantiateItem (@NonNull ViewGroup container, int position) {
       c = provider.createControllerForPosition(position);
       controllers.put(position, c);
     }
-    View view = c.get();
+    View view = c.getValue();
     if (view.getParent() != null) {
       ((ViewGroup) view.getParent()).removeView(view);
     }
@@ -134,7 +134,7 @@ public Object instantiateItem (@NonNull ViewGroup container, int position) {
   @Override
   public void destroyItem (ViewGroup container, int position, @NonNull Object object) {
     ViewController<?> c = (ViewController<?>) object;
-    container.removeView(c.get());
+    container.removeView(c.getValue());
     provider.onAfterHide(position, c);
     c.onCleanAfterHide();
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -1268,6 +1268,7 @@ public void changePreferredAccountId (int accountId, @AccountSwitchReason int re
     });
   }
 
+  @UiThread
   private void onAccountSwitched (TdlibAccount account, @AccountSwitchReason int reason, TdlibAccount oldAccount) {
     this.currentAccount = account;
     if (oldAccount != null)

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -65,7 +65,7 @@
 
 public class TdlibCache implements LiveLocationManager.OutputDelegate, CleanupStartupDelegate, UI.StateListener {
   public interface UserDataChangeListener {
-    void onUserUpdated (TdApi.User user);
+    default void onUserUpdated (TdApi.User user) { }
     default void onUserFullUpdated (long userId, TdApi.UserFullInfo userFull) { }
   }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibRouteSelector.java
Patch:
@@ -181,7 +181,7 @@ public void act () {
             sortAndSelectRoute(false);
           }
         };
-        tdlib.runOnTdlibThread(onTimeout, Math.min(5.0, Math.max(1.5, (double) time / 1000.0)));
+        tdlib.runOnTdlibThread(onTimeout, Math.min(5.0, Math.max(1.5, (double) time / 1000.0)), false);
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/charts/Chart.java
Patch:
@@ -182,7 +182,7 @@ public void detach (Listener listener) {
   }
 
   public boolean isNoDate () {
-    return BitwiseUtils.getFlag(flags, FLAG_NO_DATE);
+    return BitwiseUtils.hasFlag(flags, FLAG_NO_DATE);
   }
 
   public void attach (DateListener listener) {

File: app/src/main/java/org/thunderdog/challegram/component/base/SettingView.java
Patch:
@@ -249,7 +249,7 @@ public void setDataColorId (int dataColorId) {
   }
 
   public void setDataColorId (int dataColorId, boolean isSubtitle) {
-    if (this.dataColorId != dataColorId || isSubtitle != BitwiseUtils.getFlag(flags, FLAG_DATA_SUBTITLE)) {
+    if (this.dataColorId != dataColorId || isSubtitle != BitwiseUtils.hasFlag(flags, FLAG_DATA_SUBTITLE)) {
       this.dataColorId = dataColorId;
       this.flags = BitwiseUtils.setFlag(flags, FLAG_DATA_SUBTITLE, isSubtitle);
       invalidate();

File: app/src/main/java/org/thunderdog/challegram/component/chat/InputView.java
Patch:
@@ -459,7 +459,7 @@ private static boolean canBeNested (TdApi.TextEntityType type) {
   }
 
   private static boolean isComposingSpan (Spanned spanned, Object span) {
-    return BitwiseUtils.getFlag(spanned.getSpanFlags(span), Spanned.SPAN_COMPOSING);
+    return BitwiseUtils.hasFlag(spanned.getSpanFlags(span), Spanned.SPAN_COMPOSING);
   }
 
   private boolean setSpanImpl (int start, int end, TdApi.TextEntityType newType) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/ReplyComponent.java
Patch:
@@ -349,7 +349,7 @@ public int clickableTextColor (boolean isPressed) {
         }
       };
     }
-    if (BitwiseUtils.getFlag(flags, FLAG_ALLOW_TOUCH_EVENTS)) {
+    if (BitwiseUtils.hasFlag(flags, FLAG_ALLOW_TOUCH_EVENTS)) {
       return TextColorSets.Regular.NORMAL;
     }
     return new TextColorSet() {
@@ -768,7 +768,7 @@ private void setMessage (TdApi.Message msg, boolean forceRequestImage, boolean f
       sender = msg.senderId;
       senderName = tdlib.isFromAnonymousGroupAdmin(msg) ? msg.authorSignature : null;
     }
-    String title = BitwiseUtils.getFlag(flags, FLAG_FORCE_TITLE) ? this.title :
+    String title = BitwiseUtils.hasFlag(flags, FLAG_FORCE_TITLE) ? this.title :
       sender == null ? senderName :
       StringUtils.isEmpty(senderName) ? tdlib.senderName(sender, isMessageComponent()) :
       Lang.getString(isChannel() ? R.string.format_channelAndSignature : R.string.format_chatAndSignature, tdlib.senderName(sender, isMessageComponent()), senderName);

File: app/src/main/java/org/thunderdog/challegram/data/TGCommentButton.java
Patch:
@@ -246,11 +246,11 @@ public boolean contains (float x, float y) {
   private int anchorX, anchorY;
 
   private boolean isCaught () {
-    return BitwiseUtils.getFlag(flags, FLAG_CAUGHT);
+    return BitwiseUtils.hasFlag(flags, FLAG_CAUGHT);
   }
 
   private boolean isBlocked () {
-    return BitwiseUtils.getFlag(flags, FLAG_BLOCKED);
+    return BitwiseUtils.hasFlag(flags, FLAG_BLOCKED);
   }
 
   public boolean onTouchEvent (View view, MotionEvent event) {

File: app/src/main/java/org/thunderdog/challegram/data/TGFoundChat.java
Patch:
@@ -114,7 +114,7 @@ public TGFoundChat setForceUsername () {
   }
 
   public boolean needForceUsername () {
-    return BitwiseUtils.getFlag(flags, FLAG_FORCE_USERNAME);
+    return BitwiseUtils.hasFlag(flags, FLAG_FORCE_USERNAME);
   }
 
   public TGFoundChat setForcedSubtitle (String forcedSubtitle) {

File: app/src/main/java/org/thunderdog/challegram/data/TGReactions.java
Patch:
@@ -827,8 +827,8 @@ private void drawReceiver (Canvas c, int l, int t, int r, int b, float alpha) {
     }
 
     public void drawReactionInBubble (MessageView view, Canvas c, float x, float y, float visibility, int appearTypeFlags) {
-      final boolean hasScaleSaved = visibility != 1f && (BitwiseUtils.getFlag(appearTypeFlags, TYPE_APPEAR_SCALE_FLAG));
-      final float alpha = BitwiseUtils.getFlag(appearTypeFlags, TYPE_APPEAR_OPACITY_FLAG) ? visibility : 1f;
+      final boolean hasScaleSaved = visibility != 1f && (BitwiseUtils.hasFlag(appearTypeFlags, TYPE_APPEAR_SCALE_FLAG));
+      final float alpha = BitwiseUtils.hasFlag(appearTypeFlags, TYPE_APPEAR_OPACITY_FLAG) ? visibility : 1f;
 
       c.save();
       c.translate(x, y);

File: app/src/main/java/org/thunderdog/challegram/data/ThreadInfo.java
Patch:
@@ -360,7 +360,7 @@ public void updateMessagesDeleted (long[] messageIds, int removedCount, int remo
           int newIndex = 0;
           for (int index = 0; index < messageCount; index++) {
             TdApi.Message message = threadInfo.messages[index];
-            if (!BitwiseUtils.getFlag(deleted, 1 << index)) {
+            if (!BitwiseUtils.hasFlag(deleted, 1 << index)) {
               newMessages[newIndex++] = message;
             } else if (message.canGetMessageThread) {
               isMessageThreadDeleted = true;

File: app/src/main/java/org/thunderdog/challegram/filegen/TdlibFileGenerationManager.java
Patch:
@@ -386,7 +386,7 @@ private void startGeneration (long generationId, String originalPath, String des
       String[] args = arg.split(",");
       final int themeId = StringUtils.parseInt(args[0]);
       final int flags = args.length > 1 ? StringUtils.parseInt(args[1]) : 0;
-      if (ThemeManager.isCustomTheme(themeId) || BitwiseUtils.getFlag(flags, Theme.EXPORT_FLAG_INCLUDE_DEFAULT_VALUES) || ThemeSet.getProperty(themeId, ThemeProperty.PARENT_THEME) != 0) {
+      if (ThemeManager.isCustomTheme(themeId) || BitwiseUtils.hasFlag(flags, Theme.EXPORT_FLAG_INCLUDE_DEFAULT_VALUES) || ThemeSet.getProperty(themeId, ThemeProperty.PARENT_THEME) != 0) {
         String author = args.length > 2 ? args[2] : null;
         exportTheme(generationId, themeId, flags, author, destinationPath);
       } else {

File: app/src/main/java/org/thunderdog/challegram/filegen/VideoData.java
Patch:
@@ -149,7 +149,7 @@ public VideoData (String sourcePath) throws Throwable {
             long firstSampleTime = extractor.getSampleTime();
             if (extractor.advance()) {
               long nextSampleTime = extractor.getSampleTime();
-              if (!BitwiseUtils.getFlag(extractor.getSampleFlags(), MediaExtractor.SAMPLE_FLAG_SYNC)) {
+              if (!BitwiseUtils.hasFlag(extractor.getSampleFlags(), MediaExtractor.SAMPLE_FLAG_SYNC)) {
                 extractor.seekTo(nextSampleTime, MediaExtractor.SEEK_TO_NEXT_SYNC);
                 nextSampleTime = extractor.getSampleTime();
               }
@@ -435,7 +435,7 @@ private double correctTimeToSyncSample (final double cutHere, int mode) {
               long nextSampleTime = extractor.getSampleTime();
               if (nextSampleTime == -1)
                 return accurateDuration;
-              if (!BitwiseUtils.getFlag(extractor.getSampleFlags(), MediaExtractor.SAMPLE_FLAG_SYNC)) {
+              if (!BitwiseUtils.hasFlag(extractor.getSampleFlags(), MediaExtractor.SAMPLE_FLAG_SYNC)) {
                 extractor.seekTo(nextSampleTime, MediaExtractor.SEEK_TO_NEXT_SYNC);
                 nextSampleTime = extractor.getSampleTime();
                 if (nextSampleTime == -1)

File: app/src/main/java/org/thunderdog/challegram/loader/ImageFile.java
Patch:
@@ -130,7 +130,7 @@ public void setSwOnly (boolean swOnly) {
   }
 
   public boolean needPalette () {
-    return BitwiseUtils.getFlag(flags, FLAG_NEED_PALETTE);
+    return BitwiseUtils.hasFlag(flags, FLAG_NEED_PALETTE);
   }
 
   public void setNeedPalette (boolean needPalette) {

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifActor.java
Patch:
@@ -622,8 +622,8 @@ public void prepareNextFrame () {
   // GifStage thread
   public void nextFrameReady (boolean restarted) {
     synchronized (this) {
-      if (BitwiseUtils.getFlag(flags, FLAG_AWAITING)) {
-        boolean fromRestart = BitwiseUtils.getFlag(flags, FLAG_AWAITING_FROM_RESTART);
+      if (BitwiseUtils.hasFlag(flags, FLAG_AWAITING)) {
+        boolean fromRestart = BitwiseUtils.hasFlag(flags, FLAG_AWAITING_FROM_RESTART);
         flags &= ~FLAG_AWAITING;
         flags &= ~FLAG_AWAITING_FROM_RESTART;
         onNextFrame(false, fromRestart || restarted);

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifFile.java
Patch:
@@ -216,7 +216,7 @@ public void setPlayOnce () {
   }
 
   public boolean isPlayOnce () {
-    return BitwiseUtils.getFlag(flags, FLAG_PLAY_ONCE);
+    return BitwiseUtils.hasFlag(flags, FLAG_PLAY_ONCE);
   }
 
   public void setDecodeLastFrame (boolean decodeLastFrame) {
@@ -250,7 +250,7 @@ public void onLoop () {
   }
 
   public boolean needDecodeLastFrame () {
-    return BitwiseUtils.getFlag(flags, FLAG_DECODE_LAST_FRAME);
+    return BitwiseUtils.hasFlag(flags, FLAG_DECODE_LAST_FRAME);
   }
 
   public boolean hasLooped () {
@@ -262,7 +262,7 @@ public void setUnique (boolean isUnique) {
   }
 
   public boolean isUnique () {
-    return BitwiseUtils.getFlag(flags, FLAG_UNIQUE);
+    return BitwiseUtils.hasFlag(flags, FLAG_UNIQUE);
   }
 
   public boolean isStill () {

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifReceiver.java
Patch:
@@ -729,7 +729,7 @@ public void beginDrawBatch () {
 
   public void finishDrawBatch () {
     int flags = drawBatchFlags;
-    if (gif != null && BitwiseUtils.getFlag(flags, DRAW_BATCH_STARTED) && BitwiseUtils.getFlag(flags, DRAW_BATCH_DRAWN)) {
+    if (gif != null && BitwiseUtils.hasFlag(flags, DRAW_BATCH_STARTED) && BitwiseUtils.hasFlag(flags, DRAW_BATCH_DRAWN)) {
       synchronized (gif.getBusyList()) {
         if (gif.hasBitmap()) {
           gif.getDrawFrame(true);
@@ -748,8 +748,8 @@ public void draw (Canvas c) {
       boolean isFirstFrame = false;
       synchronized (gif.getBusyList()) {
         if (gif.hasBitmap()) {
-          final boolean inBatch = BitwiseUtils.getFlag(drawBatchFlags, DRAW_BATCH_STARTED);
-          if (!inBatch || !BitwiseUtils.getFlag(drawBatchFlags, DRAW_BATCH_DRAWN)) {
+          final boolean inBatch = BitwiseUtils.hasFlag(drawBatchFlags, DRAW_BATCH_STARTED);
+          if (!inBatch || !BitwiseUtils.hasFlag(drawBatchFlags, DRAW_BATCH_DRAWN)) {
             gif.applyNext();
             if (inBatch) {
               drawBatchFlags |= DRAW_BATCH_DRAWN;

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifState.java
Patch:
@@ -163,7 +163,7 @@ private void recycleImpl () {
   }
 
   public boolean setCanApplyNext () {
-    if (!BitwiseUtils.getFlag(flags, FLAG_APPLY_NEXT)) {
+    if (!BitwiseUtils.hasFlag(flags, FLAG_APPLY_NEXT)) {
       flags |= FLAG_APPLY_NEXT;
       return true;
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotification.java
Patch:
@@ -88,11 +88,11 @@ public void markAsEdited (boolean needDisplay) {
   }
 
   public boolean isEdited () {
-    return BitwiseUtils.getFlag(this.flags, FLAG_EDITED);
+    return BitwiseUtils.hasFlag(this.flags, FLAG_EDITED);
   }
 
   public boolean isEditedVisible () {
-    return BitwiseUtils.getFlag(this.flags, FLAG_EDITED_VISIBLE);
+    return BitwiseUtils.hasFlag(this.flags, FLAG_EDITED_VISIBLE);
   }
 
   public static CharSequence wrapEdited (CharSequence content, boolean isEdited, boolean isEditedVisible) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibSettingsManager.java
Patch:
@@ -728,7 +728,7 @@ private long getUserPreferences () {
   }
 
   private boolean getUserPreference (long key) {
-    return BitwiseUtils.getFlag(getUserPreferences(), key);
+    return BitwiseUtils.hasFlag(getUserPreferences(), key);
   }
 
   public boolean setUserPreference (long key, boolean value) {
@@ -892,11 +892,11 @@ public NotificationError (long id) {
     }
 
     public boolean isDisplayError () {
-      return BitwiseUtils.getFlag(flags, FLAG_DISPLAY);
+      return BitwiseUtils.hasFlag(flags, FLAG_DISPLAY);
     }
 
     public boolean isChannelError () {
-      return BitwiseUtils.getFlag(flags, FLAG_CHANNELS);
+      return BitwiseUtils.hasFlag(flags, FLAG_CHANNELS);
     }
 
     public long getChatId () {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -1846,7 +1846,7 @@ public ChatOpenParameters chatList (TdApi.ChatList chatList) {
     }
 
     public ChatOpenParameters messageThread (ThreadInfo threadInfo) {
-      if (threadInfo != null && BitwiseUtils.getFlag(options, CHAT_OPTION_SCHEDULED_MESSAGES)) {
+      if (threadInfo != null && BitwiseUtils.hasFlag(options, CHAT_OPTION_SCHEDULED_MESSAGES)) {
         throw new IllegalArgumentException();
       }
       this.threadInfo = threadInfo;

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -2506,7 +2506,7 @@ public void onChatListStateChanged (TdlibChatList chatList, @TdlibChatList.State
   @Override
   public void onChatListChanged (TdlibChatList chatList, @ChangeFlags int changeFlags) {
     runOnUiThreadOptional(() -> {
-      if (BitwiseUtils.getFlag(changeFlags, ChangeFlags.ITEM_MOVED | ChangeFlags.ITEM_ADDED)) {
+      if (BitwiseUtils.hasFlag(changeFlags, ChangeFlags.ITEM_MOVED | ChangeFlags.ITEM_ADDED)) {
         checkListState();
       }
     });

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraController.java
Patch:
@@ -264,7 +264,7 @@ protected View onCreateView (Context context) {
 
   @Override
   public void onSettingsChanged (long newSettings, long oldSettings) {
-    cameraOverlayView.setGridVisible(cameraMode == MODE_MAIN && BitwiseUtils.getFlag(newSettings, Settings.SETTING_FLAG_CAMERA_SHOW_GRID), isFocused());
+    cameraOverlayView.setGridVisible(cameraMode == MODE_MAIN && BitwiseUtils.hasFlag(newSettings, Settings.SETTING_FLAG_CAMERA_SHOW_GRID), isFocused());
   }
 
   public boolean isLegacy () {

File: app/src/main/java/org/thunderdog/challegram/util/CharacterStyleFilter.java
Patch:
@@ -76,7 +76,7 @@ protected boolean isServiceSpan (Spanned spanned, CharacterStyle span) {
       span instanceof SuggestionSpan ||
       span instanceof NoCopySpan ||
       span instanceof EmojiSpan ||
-      BitwiseUtils.getFlag(spanned.getSpanFlags(span), Spanned.SPAN_COMPOSING);
+      BitwiseUtils.hasFlag(spanned.getSpanFlags(span), Spanned.SPAN_COMPOSING);
   }
 
   protected boolean shouldRemoveSpan (Spanned spanned, CharacterStyle span) {

File: app/src/main/java/org/thunderdog/challegram/util/CustomTypefaceSpan.java
Patch:
@@ -215,7 +215,7 @@ public OnClickListener getOnClickListener () {
 
   private void apply (final TextPaint paint) {
     paint.setFakeBoldText((flags & FLAG_FAKE_BOLD) != 0);
-    if (BitwiseUtils.getFlag(flags, FLAG_NEED_REVEAL_ON_TAP)) {
+    if (BitwiseUtils.hasFlag(flags, FLAG_NEED_REVEAL_ON_TAP)) {
       // TODO paint.bgColor = ...;
     }
     if (backgroundColorId != 0) {

File: app/src/main/java/org/thunderdog/challegram/util/text/TextWrapper.java
Patch:
@@ -222,7 +222,7 @@ private Text getInternal (int index, int maxWidth) {
 
     boolean sizeChanged = textSizes[index] != textSizePx || (texts[index] != null && texts[index].getMaxLineCount() != maxLines);
     if (sizeChanged || texts[index] == null || sizes[index] != maxWidth) {
-      boolean needBigEmoji = BitwiseUtils.getFlag(textFlags, Text.FLAG_BIG_EMOJI) && Settings.instance().useBigEmoji();
+      boolean needBigEmoji = BitwiseUtils.hasFlag(textFlags, Text.FLAG_BIG_EMOJI) && Settings.instance().useBigEmoji();
       final Text oldText = texts[index];
       Text text = oldText;
       if (text != null && !sizeChanged && !needBigEmoji) {

File: app/src/main/java/org/thunderdog/challegram/widget/BetterChatView.java
Patch:
@@ -379,7 +379,7 @@ protected void onDraw (Canvas c) {
         subtitleLeft += Screen.dp(20f);
       }
       int subtitleTop = Screen.dp(39f) + subtitleOffset;
-      TextColorSet colorSet = BitwiseUtils.getFlag(flags, FLAG_ONLINE) ? TextColorSets.Regular.NEUTRAL : null;
+      TextColorSet colorSet = BitwiseUtils.hasFlag(flags, FLAG_ONLINE) ? TextColorSets.Regular.NEUTRAL : null;
       displaySubtitle.draw(c, subtitleLeft, subtitleTop,  colorSet, 1f, subtitleMediaReceiver);
     }
     if (subtitleIcon != 0) {

File: app/src/main/java/org/thunderdog/challegram/widget/FileProgressComponent.java
Patch:
@@ -56,7 +56,6 @@
 import org.thunderdog.challegram.tool.Drawables;
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.Screen;
-import org.thunderdog.challegram.tool.TGMimeType;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.tool.Views;
 import org.thunderdog.challegram.util.DrawableProvider;
@@ -548,11 +547,11 @@ public boolean openFile (ViewController<?> c, Runnable defaultOpen) {
             case TdApi.File.CONSTRUCTOR: {
               TdApi.File downloadedFile = (TdApi.File) result;
               if (TD.isFileLoaded(downloadedFile)) {
-                if (BitwiseUtils.getFlag(flags, FLAG_THEME)) {
+                if (BitwiseUtils.hasFlag(flags, FLAG_THEME)) {
                   runOnUiThreadOptional(c, () -> {
                     c.tdlib().ui().readCustomTheme(c, file, null, defaultOpen);
                   });
-                } else if (BitwiseUtils.getFlag(flags, FLAG_MEDIA_DOCUMENT)) {
+                } else if (BitwiseUtils.hasFlag(flags, FLAG_MEDIA_DOCUMENT)) {
                   Background.instance().post(() -> {
                     MediaItem item = MediaItem.valueOf(context, tdlib, originalDocument, null);
                     if (item != null) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -7609,7 +7609,7 @@ public final boolean useReactionBubbles () {
   //
 
   public final void checkAvailableReactions (Runnable after) {
-    tdlib().client().send(new TdApi.GetMessageAvailableReactions(msg.chatId, getSmallestId(), 5), result -> {
+    tdlib().client().send(new TdApi.GetMessageAvailableReactions(msg.chatId, getSmallestId(), 25), result -> {
       switch (result.getConstructor()) {
         case TdApi.AvailableReactions.CONSTRUCTOR: {
           TdApi.AvailableReactions availableReactions = (TdApi.AvailableReactions) result;

File: app/src/main/java/org/thunderdog/challegram/ui/EditRightsController.java
Patch:
@@ -1458,9 +1458,9 @@ private boolean getValueForId (@RightId int id) {
         return R.string.RightSendPhoto;
       case RightId.SEND_VIDEOS:
         return R.string.RightSendVideo;
-      case RightId.SEND_VIDEO_NOTES:
-        return R.string.RightSendVoiceNote;
       case RightId.SEND_VOICE_NOTES:
+        return R.string.RightSendVoiceNote;
+      case RightId.SEND_VIDEO_NOTES:
         return R.string.RightSendVideoNote;
       case RightId.SEND_OTHER_MESSAGES:
         return R.string.UserRestrictionsSendStickers;

File: app/src/main/java/org/thunderdog/challegram/navigation/NavigationController.java
Patch:
@@ -254,6 +254,9 @@ public void addChildWrapper (ViewController<?> controller, int index) {
   }
 
   public void removeChildWrapper (ViewController<?> controller) {
+    if (controller == null)
+      throw new NullPointerException();
+
     if (childWrappers != null) {
       childWrappers.remove(controller);
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -92,7 +92,7 @@ public class MessageView extends SparseDrawableView implements Destroyable, Draw
   private static final int FLAG_DISABLE_MEASURE = 1 << 6;
   private static final int FLAG_USE_COMPLEX_RECEIVER = 1 << 7;
 
-  private TGMessage msg;
+  private @Nullable TGMessage msg;
 
   private int flags;
 
@@ -186,15 +186,15 @@ public void setUseComplexReceiver () {
   @Override
   public void invalidate () {
     super.invalidate();
-    if (msg.needViewGroup()) {
+    if (msg != null && msg.needViewGroup()) {
       msg.invalidateOverlay();
     }
   }
 
   @Override
   public void invalidate (int l, int t, int r, int b) {
     super.invalidate(l, t, r, b);
-    if (msg.needViewGroup()) {
+    if (msg != null && msg.needViewGroup()) {
       msg.invalidateOverlay();
     }
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -1181,7 +1181,7 @@ private void updateAuthState (ClientHolder context, TdApi.AuthorizationState new
     final int newStatus = authorizationStatus();
 
     closeListeners.notifyConditionChanged(true);
-    readyOrWaitingForDataListeners.notifyConditionChanged(true);
+    readyOrWaitingForDataListeners.notifyConditionChanged(false);
 
     if (prevStatus == STATUS_UNKNOWN && newStatus != STATUS_UNKNOWN) {
       synchronized (dataLock) {

File: app/src/main/java/org/thunderdog/challegram/ui/PlaybackController.java
Patch:
@@ -768,6 +768,8 @@ public void onTrackListReset (Tdlib tdlib, @NonNull TdApi.Message currentTrack,
     ListItem footerItem = tracks.get(tracks.size() - 1);
     int prevSize = tracks.size() - 2;
 
+    canRestoreList = false;
+
     tracks.clear();
     ArrayUtils.ensureCapacity(tracks, trackList.size() + 1);
 

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -255,7 +255,7 @@ public static boolean useCloudPlayback (TdApi.Message playPauseFile) {
 
   public static final boolean REVEAL_ANIMATION_AVAILABLE = Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
 
-  public static final boolean REMOVE_INTRO = !BuildConfig.DEBUG; // true;
+  public static final boolean REMOVE_INTRO = true;
 
   public static final boolean TEST_CHAT_COUNTERS = false;
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibAccount.java
Patch:
@@ -87,7 +87,7 @@ public class TdlibAccount implements Comparable<TdlibAccount>, TdlibProvider {
     this.flags = FLAG_UNAUTHORIZED;
     Settings.instance().setAllowSpecialTdlibInstanceMode(id, instanceMode);
     if (instanceMode == Tdlib.Mode.DEBUG) {
-      this.flags |= Tdlib.Mode.DEBUG;
+      this.flags |= FLAG_DEBUG;
     } else if (instanceMode == Tdlib.Mode.SERVICE) {
       this.flags |= FLAG_SERVICE | FLAG_NO_PRIVATE_DATA;
     }

File: app/src/main/java/org/thunderdog/challegram/tool/UI.java
Patch:
@@ -458,7 +458,8 @@ public static void showError (TdApi.Object obj) {
     String string = TD.toErrorString(obj);
     if (string != null) {
       Log.critical("TDLib Error: %s", Log.generateException(2), string);
-      if (TD.errorCode(obj) != 401) {
+      int errorCode = TD.errorCode(obj);
+      if (errorCode != 401 && !(errorCode == 500 && "Client is closed".equals(TD.errorText(obj)))) {
         showToast(string, Toast.LENGTH_SHORT);
       }
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationHelper.java
Patch:
@@ -356,7 +356,7 @@ public TdlibNotificationGroup findGroup (int groupId) {
   }
 
   @TargetApi(Build.VERSION_CODES.O)
-  public String findCommonChannelId (int category) {
+  public String findCommonChannelId (int category) throws TdlibNotificationChannelGroup.ChannelCreationFailureException {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
       TdlibNotificationChannelGroup channelGroup = tdlib.notifications().getChannelCache();
       android.app.NotificationChannel channel = null;

File: app/src/main/java/org/thunderdog/challegram/player/RoundVideoController.java
Patch:
@@ -926,7 +926,7 @@ protected void displayPlaybackError (PlaybackException e) {
   @Override
   public void onPlayerError (@NonNull PlaybackException e) {
     super.onPlayerError(e);
-    stopPlayback();
+    UI.execute(this::stopPlayback);
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -4234,7 +4234,7 @@ private void showClearHistoryConfirm (ViewController<?> context, final long chat
             ListItem.TYPE_CHECKBOX_OPTION,
             R.id.btn_clearChatHistory,
             0,
-            ChatId.isPrivate(chatId) ? Lang.getString(R.string.DeleteSecretChatHistoryForOtherParty, tdlib.cache().userFirstName(ChatId.toUserId(chatId))) : Lang.getString(R.string.DeleteChatHistoryForAllUsers),
+            ChatId.isUserChat(chatId) ? Lang.getStringBold(R.string.DeleteSecretChatHistoryForOtherParty, tdlib.cache().userFirstName(tdlib.chatUserId(chatId))) : Lang.getString(R.string.DeleteChatHistoryForAllUsers),
             R.id.btn_clearChatHistory,
             tdlib.canRevokeChat(chatId) && tdlib.isUserChat(chatId) && tdlib.cache().userDeleted(tdlib.chatUserId(chatId))
           )
@@ -4389,11 +4389,11 @@ private void showDeleteChatConfirm (final ViewController<?> context, final long
               .setIntDelegate((id, result) -> {
                 boolean clearHistory = result.get(R.id.btn_clearChatHistory) == R.id.btn_clearChatHistory;
                 if (clearHistory) {
-                  tdlib.client().send(new TdApi.DeleteChatHistory(chatId, false, false), object -> {
+                  tdlib.client().send(new TdApi.DeleteChatHistory(chatId, true, true), object -> {
                     if (object.getConstructor() == TdApi.Error.CONSTRUCTOR) {
                       Log.e("Cannot clear secret chat history, secretChatId:%d, error: %s", ChatId.toSecretChatId(chatId), TD.toErrorString(object));
                     }
-                    deleter.runWithBool(false);
+                    deleter.runWithBool(true);
                   });
                 } else {
                   deleter.runWithBool(false);

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -43,10 +43,11 @@
 import java.util.Locale;
 
 import me.vkryl.android.SdkVersion;
+import me.vkryl.core.BitwiseUtils;
+import me.vkryl.core.FileUtils;
 import me.vkryl.core.StringUtils;
 import me.vkryl.core.lambda.RunnableData;
 import me.vkryl.core.reference.ReferenceList;
-import me.vkryl.core.BitwiseUtils;
 import me.vkryl.core.util.Blob;
 
 public class Log {
@@ -66,7 +67,7 @@ public static boolean needMeasureLaunchSpeed () {
    */
   public static @Nullable File getLogDir () {
     File file = new File(UI.getAppContext().getFilesDir(), "logs");
-    if (!file.exists() && !file.mkdir()) {
+    if (!(file.exists() ? file.isDirectory() : FileUtils.mkdirs(file))) {
       android.util.Log.e(LOG_TAG, "Couldn't open logs directory: " + file.getAbsolutePath());
       return null;
     }

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerController.java
Patch:
@@ -824,7 +824,7 @@ public void onClick (View v) {
         break;
       }
       case R.id.btn_tdlib_shareLogs: {
-        TdlibUi.sendLogs(context.navigation().getCurrentStackItem(), false, false);
+        TdlibUi.sendTdlibLogs(context.navigation().getCurrentStackItem(), false, false);
         break;
       }
       case R.id.btn_wallet: {

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomBaseController.java
Patch:
@@ -359,7 +359,7 @@ public void updateExtraSpacingDecoration () {
   }
 
   protected final void showError (@StringRes int errorRes, @StringRes int resolveErrorButtonRes, View.OnClickListener onResolveButtonClick, boolean animated) {
-    showError(Lang.getString(errorRes), Lang.getString(resolveErrorButtonRes), onResolveButtonClick, animated);
+    showError(Lang.getString(errorRes), resolveErrorButtonRes != 0 ? Lang.getString(resolveErrorButtonRes) : null, onResolveButtonClick, animated);
   }
 
   protected void hideError () {

File: app/src/main/java/org/thunderdog/challegram/emoji/Emoji.java
Patch:
@@ -540,6 +540,9 @@ public boolean isSingleEmoji (CharSequence cs) {
   }
 
   public boolean isSingleEmoji (CharSequence cs, boolean allowCustom) {
+    if (StringUtils.isEmpty(cs)) {
+      return false;
+    }
     if (cs instanceof Spanned) {
       Spanned spanned = (Spanned) cs;
       EmojiSpan[] spans = spanned.getSpans(0, cs.length(), EmojiSpan.class);

File: app/src/main/java/org/thunderdog/challegram/helper/InlineSearchContext.java
Patch:
@@ -150,6 +150,7 @@ public InlineSearchContext (BaseActivity context, Tdlib tdlib, @NonNull Callback
     this.tdlib = tdlib;
     this.callback = callback;
     this.currentText = "";
+    this.currentCs = "";
   }
 
   public void setIsCaption (boolean isCaption) {
@@ -215,6 +216,7 @@ public void onTextChanged (CharSequence newCs, String newText, @IntRange(from =
       return;
     }
     this.currentText = newText;
+    this.currentCs = newCs;
     this.canHandlePositionChange = false;
     cancelPendingQueries();
 
@@ -1289,7 +1291,7 @@ public void act () {
             case 'S': // :S
             case 'O': // :O
               query = null;
-            break;
+              break;
           }
         }
         final ArrayList<InlineResult<?>> inlineResults;

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -224,8 +224,8 @@ public static void deleteAll (LogFiles list, @Nullable RunnableData<LogFiles> af
     }
   }
 
-  private static void deleteAllImpl (LogFiles list, @Nullable RunnableData<LogFiles> after, @Nullable RunnableData<LogFiles> onProgress) {
-    final int count = list.files.size();
+  private static void deleteAllImpl (@Nullable LogFiles list, @Nullable RunnableData<LogFiles> after, @Nullable RunnableData<LogFiles> onProgress) {
+    final int count = list != null ? list.files.size() : 0;
     for (int i = count - 1; i >= 0; i--) {
       File file = list.files.get(i);
       long size = file.length();

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -1423,10 +1423,10 @@ public boolean checkChangeLogs (boolean alreadySent, boolean test) {
         makeUpdateText(0, 24, 2, APP_RELEASE_VERSION_2021_NOVEMBER, "https://telegra.ph/Telegram-X-11-08", functions, updates, false);
       }
       if (checkVersion(prevVersion, APP_RELEASE_VERSION_2022_JUNE, test)) {
-        makeUpdateText(0, 24, 9, APP_RELEASE_VERSION_2022_JUNE, "https://telegra.ph/Telegram-X-06-11", functions, updates, true);
+        makeUpdateText(0, 24, 9, APP_RELEASE_VERSION_2022_JUNE, "https://telegra.ph/Telegram-X-06-11", functions, updates, false);
       }
       if (checkVersion(prevVersion, APP_RELEASE_VERSION_2022_OCTOBER, test)) {
-        makeUpdateText(0, 25, 1, APP_RELEASE_VERSION_2022_OCTOBER, "https://telegra.ph/Telegram-X-10-06", functions, updates, true);
+        makeUpdateText(0, 25, 1, APP_RELEASE_VERSION_2022_OCTOBER, "https://telegra.ph/Telegram-X-10-06", functions, updates, false);
       }
       if (checkVersion(prevVersion, APP_RELEASE_VERSION_2023_MARCH, test)) {
         makeUpdateText(0, 25, 6, APP_RELEASE_VERSION_2023_MARCH, "https://telegra.ph/Telegram-X-03-08", functions, updates, true);

File: app/src/main/java/org/thunderdog/challegram/util/HapticMenuHelper.java
Patch:
@@ -381,7 +381,7 @@ private void onMenuItemClick (MenuItem item, View view, View parentView) {
       if (item.onClickListener != null && !item.onClickListener.onHapticMenuItemClick(view, parentView, item)) {
         res = false;
       }
-      if (!item.isCheckbox && !res) {
+      if (!item.isCheckbox && res) {
         hideMenu();
       }
     }

File: app/src/main/java/org/thunderdog/challegram/player/RecordAudioVideoController.java
Patch:
@@ -962,7 +962,7 @@ public boolean startRecording (View view, boolean inRaiseMode) {
     if (sendHelper != null)
       sendHelper.detachFromView(sendButton);
     sendHelper = tdlib.ui()
-      .createSimpleHapticMenu(targetController, targetChatId, () -> editFactor == 1f, null, null, (sendOptions, disableMarkdown) -> sendVideo(sendOptions), null)
+      .createSimpleHapticMenu(targetController, targetChatId, () -> editFactor == 1f, null, null, null, (sendOptions, disableMarkdown) -> sendVideo(sendOptions), null)
       .attachToView(sendButton);
     if (!inRaiseMode) {
       context.setScreenFlagEnabled(BaseActivity.SCREEN_FLAG_RECORDING, true);

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -6207,7 +6207,7 @@ public interface SimpleSendCallback {
     void onSendRequested (TdApi.MessageSendOptions sendOptions, boolean disableMarkdown);
   }
 
-  public HapticMenuHelper createSimpleHapticMenu (ViewController<?> context, long chatId, @Nullable FutureBool availabilityCallback, @Nullable FutureBool canDisableMarkdownCallback, RunnableData<List<HapticMenuHelper.MenuItem>> customItemProvider, SimpleSendCallback sendCallback, @Nullable ThemeDelegate forcedTheme) {
+  public HapticMenuHelper createSimpleHapticMenu (ViewController<?> context, long chatId, @Nullable FutureBool availabilityCallback, @Nullable FutureBool canDisableMarkdownCallback, @Nullable FutureBool canHideMedia, RunnableData<List<HapticMenuHelper.MenuItem>> customItemProvider, SimpleSendCallback sendCallback, @Nullable ThemeDelegate forcedTheme) {
     return new HapticMenuHelper(list -> {
       if (availabilityCallback == null || availabilityCallback.get()) {
         List<HapticMenuHelper.MenuItem> items = fillDefaultHapticMenu(chatId, false, canDisableMarkdownCallback != null && canDisableMarkdownCallback.get(), true);
@@ -6239,6 +6239,7 @@ public HapticMenuHelper createSimpleHapticMenu (ViewController<?> context, long
           sendCallback.onSendRequested(Td.newSendOptions(new TdApi.MessageSchedulingStateSendWhenOnline()), false);
           break;
       }
+      return true;
     }, context != null ? context.getThemeListeners() : null, forcedTheme);
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/CreatePollController.java
Patch:
@@ -16,7 +16,6 @@
 
 import android.content.Context;
 import android.graphics.Rect;
-import android.text.Editable;
 import android.text.InputFilter;
 import android.text.InputType;
 import android.view.View;
@@ -44,7 +43,6 @@
 import org.thunderdog.challegram.util.CharacterStyleFilter;
 import org.thunderdog.challegram.util.HapticMenuHelper;
 import org.thunderdog.challegram.v.CustomRecyclerView;
-import org.thunderdog.challegram.v.EditText;
 import org.thunderdog.challegram.widget.FillingDecoration;
 import org.thunderdog.challegram.widget.MaterialEditTextGroup;
 import org.thunderdog.challegram.widget.RadioView;
@@ -292,7 +290,7 @@ public void onFocus () {
       currentMenu = tdlib.ui().createSimpleHapticMenu(this, getArgumentsStrict().chatId, this::canSendPoll, () -> {
         TdApi.FormattedText explanation = getExplanation(false);
         return explanation != null && explanation.text.trim().length() <= TdConstants.MAX_QUIZ_EXPLANATION_LENGTH && Td.parseMarkdown(explanation);
-      }, null, this::send, null)
+      }, null, null, this::send, null)
               .attachToView(getDoneButton());
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -1164,7 +1164,7 @@ public void getItemOffsets (Rect outRect, View view, RecyclerView parent, Recycl
       return items;
     }, (view, parentView, item) -> {
       if (selectedChats == null || selectedChats.size() == 0)
-        return;
+        return false;
       TdApi.MessageSendOptions defaultSendOptions = getArgumentsStrict().defaultSendOptions;
       boolean needHideKeyboard = parentView.getId() == R.id.btn_done;
       switch (view.getId()) {
@@ -1184,6 +1184,7 @@ public void getItemOffsets (Rect outRect, View view, RecyclerView parent, Recycl
           performSend(needHideKeyboard, Td.newSendOptions(defaultSendOptions), true);
           break;
       }
+      return true;
     }, getThemeListeners(), null).attachToView(sendButton.getChildAt(0));
 
     // Bottom wrap

File: app/src/main/java/org/thunderdog/challegram/util/Crash.java
Patch:
@@ -26,6 +26,7 @@
 import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.telegram.TdlibAccount;
+import org.thunderdog.challegram.telegram.TdlibManager;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.unsorted.AppState;
 
@@ -249,6 +250,8 @@ public Map<String, Object> toMap (final String crashDeviceId) {
     result.put("cpu", U.getCpuArchitecture());
     result.put("crash_id", id);
     result.put("package_id", UI.getAppContext().getPackageName());
+    result.put("device", TdlibManager.deviceInformation());
+    result.put("fingerprint", U.getApkFingerprint("SHA1"));
     result.put("device_id", crashDeviceId);
     return result;
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -328,7 +328,9 @@ public void onLongClick (View v, TGReactions.MessageReactionEntry entry) {
       @Override
       public void onRebuildRequested () {
         runOnUiThreadOptional(() -> {
-          updateInteractionInfo(true);
+          if (isLayoutBuilt()) {
+            updateInteractionInfo(true);
+          }
         });
       }
     });

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationMediaFile.java
Patch:
@@ -76,7 +76,7 @@ public static TdlibNotificationMediaFile newFile (Tdlib tdlib, TdApi.Chat chat,
         switch (message.content.getConstructor()) {
           case TdApi.MessagePhoto.CONSTRUCTOR: {
             TdApi.MessagePhoto photo = (TdApi.MessagePhoto) message.content;
-            if (!photo.isSecret) {
+            if (!photo.isSecret && !photo.hasSpoiler) {
               TdApi.PhotoSize target = MediaWrapper.buildTargetFile(photo.photo);
               if (target != null && (TD.isFileLoaded(target.photo) || tdlib.files().canAutomaticallyDownload(target.photo, TdlibFilesManager.DOWNLOAD_FLAG_PHOTO, chat.type))) {
                 photoFile = target.photo;

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -9390,6 +9390,7 @@ public boolean canChangeMessageAutoDeleteTime (long chatId) {
       return false;
     }
     TdApi.ChatMemberStatus status = chatStatus(chatId);
+    TdApi.Chat chat = chat(chatId);
     if (status != null) {
       switch (status.getConstructor()) {
         case TdApi.ChatMemberStatusCreator.CONSTRUCTOR:
@@ -9407,9 +9408,9 @@ public boolean canChangeMessageAutoDeleteTime (long chatId) {
         case TdApi.ChatMemberStatusLeft.CONSTRUCTOR:
           return false;
       }
+      return chat != null && chat.permissions.canChangeInfo;
     }
-    TdApi.Chat chat = chat(chatId);
-    return chat != null && chat.permissions.canChangeInfo;
+    return chat != null && chat.permissions.canSendBasicMessages;
   }
 
   public boolean canPinMessages (TdApi.Chat chat) {

File: app/src/main/java/org/thunderdog/challegram/helper/InlineSearchContext.java
Patch:
@@ -684,7 +684,7 @@ public boolean wouldReusePlayList (TdApi.Message fromMessage, boolean isReverse,
 
   private static ArrayList<InlineResult<?>> parseInlineResults (BaseActivity context, Tdlib tdlib, long inlineBotUserId, String inlineQuery, TdApi.InlineQueryResults results, TdApi.GetInlineQueryResults queryResults, String inlineNextOffset) {
     // TODO support other button types
-    boolean hasButton = results.button != null && results.button.getConstructor() == TdApi.InlineQueryResultsButtonTypeStartBot.CONSTRUCTOR;
+    boolean hasButton = results.button != null && results.button.type.getConstructor() == TdApi.InlineQueryResultsButtonTypeStartBot.CONSTRUCTOR;
     final ArrayList<InlineResult<?>> items = new ArrayList<>(results.results.length + (hasButton ? 1 : 0));
     if (hasButton) {
       items.add(new InlineResultButton(context, tdlib, inlineBotUserId, results.button));

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -2052,7 +2052,7 @@ public MediaStack collectMedias (final long fromMessageId, @Nullable TdApi.Searc
   // Reading messages
 
   boolean viewMessagesInternal (final long chatId, final long messageThreadId, final LongSet viewed) {
-    if (allowReadMessages()) {
+    if (allowReadMessages() && !viewed.isEmpty()) {
       final long[] messageIds = viewed.toArray();
       if (Log.isEnabled(Log.TAG_MESSAGES_LOADER)) {
         Log.i(Log.TAG_MESSAGES_LOADER, "Reading %d messages: %s", messageIds.length, Arrays.toString(messageIds));

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -792,7 +792,7 @@ public String toString () {
   public boolean updateTTLButton (int menuId, HeaderView headerView, TdApi.Chat chat, boolean force) {
     boolean isVisible = false;
     if (headerView != null) {
-      headerView.updateMenuStopwatch(menuId, R.id.menu_btn_stopwatch, getTTLShort(chat != null ? chat.id : 0), isVisible = tdlib.canChangeMessageAutoDeleteTime(chat.id), force);
+      headerView.updateMenuStopwatch(menuId, R.id.menu_btn_stopwatch, getTTLShort(chat != null ? chat.id : 0), isVisible = tdlib.canChangeMessageAutoDeleteTime(chat != null ? chat.id : 0), force);
     }
     return isVisible;
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -2240,7 +2240,7 @@ private static long deleteLogFiles (int mode) {
         return -1;
     }
 
-    Settings.instance().applyLogSettings();
+    Settings.instance().applyLogSettings(false);
 
     return removedSize;
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -5368,7 +5368,7 @@ private Map<String, Object> newConnectionParams () {
     }
     long timeZoneOffset = TimeUnit.MILLISECONDS.toSeconds(
       TimeZone.getDefault().getRawOffset() +
-        TimeZone.getDefault().getDSTSavings()
+      TimeZone.getDefault().getDSTSavings()
     );
     params.put("package_id", UI.getAppContext().getPackageName());
     String installerName = U.getInstallerPackageName();
@@ -5407,6 +5407,7 @@ private Map<String, Object> newConnectionParams () {
 
     return params;
   }
+
   private void checkConnectionParams (Client client, boolean force) {
     Map<String, Object> params = newConnectionParams();
     String connectionParams = JSON.stringify(JSON.toObject(params));

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -292,4 +292,6 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean NEED_TEMPORARY_TOPICS_WORKAROUND = true;
 
   public static final boolean USE_HARDWARE_PHOTO_VIEWER_CONFIG = false;
+
+  public static final boolean REQUIRE_FIREBASE_SERVICES_FOR_SAFETYNET = false;
 }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -3412,7 +3412,7 @@ public void onResult (TdApi.Object result) {
             }
             case TdApi.InternalLinkTypePhoneNumberConfirmation.CONSTRUCTOR: {
               TdApi.InternalLinkTypePhoneNumberConfirmation confirmPhone = (TdApi.InternalLinkTypePhoneNumberConfirmation) linkType;
-              TdApi.PhoneNumberAuthenticationSettings authenticationSettings = TD.phoneNumberAuthenticationSettings(context.context());
+              TdApi.PhoneNumberAuthenticationSettings authenticationSettings = context.tdlib().phoneNumberAuthenticationSettings(context.context());
               // TODO progress?
               ViewController<?> currentController = context.context().navigation().getCurrentStackItem();
               tdlib.client().send(new TdApi.SendPhoneNumberConfirmationCode(confirmPhone.hash, confirmPhone.phoneNumber, authenticationSettings), confirmationResult -> {

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -910,10 +910,10 @@ private boolean makeRequest () {
         function = new TdApi.ImportContacts(new TdApi.Contact[] {new TdApi.Contact(phone, getFirstName(), getLastName(), null, 0)});
         break;
       case MODE_CHANGE_NUMBER:
-        function = new TdApi.ChangePhoneNumber(phone, TD.phoneNumberAuthenticationSettings(context));
+        function = new TdApi.ChangePhoneNumber(phone, tdlib.phoneNumberAuthenticationSettings(context));
         break;
       case MODE_LOGIN:
-        function = new TdApi.SetAuthenticationPhoneNumber(phone, TD.phoneNumberAuthenticationSettings(context));
+        function = new TdApi.SetAuthenticationPhoneNumber(phone, tdlib.phoneNumberAuthenticationSettings(context));
         tdlib.setAuthPhoneNumber(phoneCode, phoneNumber);
         break;
       default:

File: app/src/main/java/org/thunderdog/challegram/component/chat/InlineResultsWrap.java
Patch:
@@ -855,7 +855,7 @@ public void processResult (final TdApi.Object object) {
           UI.post(() -> {
             if (!isCancelled()) {
               setItems(null);
-              delegate.tdlib().ui().openChat(c, chatId, new TdlibUi.ChatOpenParameters().keepStack().shareItem(new TGBotStart(delegate.tdlib().chatUserId(chatId), button.data(), false)));
+              delegate.tdlib().ui().openChat(c, chatId, new TdlibUi.ChatOpenParameters().keepStack().shareItem(new TGBotStart(delegate.tdlib().chatUserId(chatId), button.botStartParameter(), false)));
             }
           });
         } else {

File: app/src/main/java/org/thunderdog/challegram/component/popups/ModernActionedLayout.java
Patch:
@@ -21,8 +21,8 @@
 public class ModernActionedLayout extends MediaLayout {
   private MediaBottomBaseController<?> curController;
 
-  public static void showMessageSeen (ViewController<?> context, TGMessage msg, long[] userIds) {
-    showMal(context, (mal) -> new MessageSeenController(mal, msg, userIds));
+  public static void showMessageSeen (ViewController<?> context, TGMessage msg, TdApi.MessageViewers viewers) {
+    showMal(context, (mal) -> new MessageSeenController(mal, msg, viewers));
   }
 
   public static void showJoinRequests (ViewController<?> context, long chatId, TdApi.ChatJoinRequestsInfo requestsInfo) {

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -80,8 +80,6 @@ public static boolean useBundledWebp () {
 
   public static final boolean NEED_NETWORK_SYNC_REQUEST = false;
 
-  public static final boolean VIEW_MESSAGES_BEFORE_SCROLL = false;
-
   // Fields from default config.
 
   public static final int STATUS_BAR_COLOR_ID = Build.VERSION.SDK_INT >= Build.VERSION_CODES.M ? R.id.theme_color_statusBar : R.id.theme_color_statusBarLegacy;

File: app/src/main/java/org/thunderdog/challegram/data/ChatEventUtil.java
Patch:
@@ -547,7 +547,7 @@ private static TGMessage fullMessage (MessagesManager context, TdApi.Message msg
           if (memberId.getConstructor() == TdApi.MessageSenderUser.CONSTRUCTOR) {
             appendRight(b, R.string.EventLogRestrictedReadMessages, oldCanReadMessages, newCanReadMessages, false);
           }
-          appendRight(b, R.string.EventLogRestrictedSendMessages, oldBan != null ? oldBan.permissions.canSendMessages : oldCanReadMessages, newBan != null ? newBan.permissions.canSendMessages : newCanReadMessages, false);
+          appendRight(b, R.string.EventLogRestrictedSendMessages, oldBan != null ? oldBan.permissions.canSendBasicMessages : oldCanReadMessages, newBan != null ? newBan.permissions.canSendBasicMessages : newCanReadMessages, false);
           appendRight(b, R.string.EventLogRestrictedSendPhoto, oldBan != null ? oldBan.permissions.canSendPhotos : oldCanReadMessages, newBan != null ? newBan.permissions.canSendPhotos : newCanReadMessages, false);
           appendRight(b, R.string.EventLogRestrictedSendVideo, oldBan != null ? oldBan.permissions.canSendVideos : oldCanReadMessages, newBan != null ? newBan.permissions.canSendVideos : newCanReadMessages, false);
           appendRight(b, R.string.EventLogRestrictedSendAudio, oldBan != null ? oldBan.permissions.canSendAudios : oldCanReadMessages, newBan != null ? newBan.permissions.canSendAudios : newCanReadMessages, false);
@@ -668,7 +668,7 @@ private static TdApi.MessageContent convertToNativeMessageContent (TdApi.ChatEve
 
         TdApi.ChatEventPermissionsChanged permissions = (TdApi.ChatEventPermissionsChanged) event.action;
 
-        appendRight(b, R.string.EventLogPermissionSendMessages, permissions.oldPermissions.canSendMessages, permissions.newPermissions.canSendMessages, true);
+        appendRight(b, R.string.EventLogPermissionSendMessages, permissions.oldPermissions.canSendBasicMessages, permissions.newPermissions.canSendBasicMessages, true);
         appendRight(b, R.string.EventLogPermissionSendPhoto, permissions.oldPermissions.canSendPhotos, permissions.newPermissions.canSendPhotos, true);
         appendRight(b, R.string.EventLogPermissionSendVideo, permissions.oldPermissions.canSendVideos, permissions.newPermissions.canSendVideos, true);
         appendRight(b, R.string.EventLogPermissionSendAudio, permissions.oldPermissions.canSendAudios, permissions.newPermissions.canSendAudios, true);

File: app/src/main/java/org/thunderdog/challegram/data/TGChat.java
Patch:
@@ -278,7 +278,7 @@ public void syncCounter () {
       if (viewedMessageId != chat.lastMessage.id || time - lastSyncTime > 60000 * 5 + (1f - MathUtils.clamp((float) TD.getViewCount(chat.lastMessage.interactionInfo) / 1000.0f)) * 1800000 ) {
         lastSyncTime = time;
         viewedMessageId = chat.lastMessage.id;
-        tdlib.client().send(new TdApi.ViewMessages(chat.id, 0, new long[] {viewedMessageId}, false), tdlib.okHandler());
+        tdlib.client().send(new TdApi.ViewMessages(chat.id, new long[] {viewedMessageId}, new TdApi.MessageSourceChatList(), false), tdlib.okHandler());
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGInlineKeyboard.java
Patch:
@@ -1222,7 +1222,7 @@ private Client.ResultHandler getLoginCallback (final int currentContextId, final
             context.context.tdlib().ui()
               .openUrl(context.context.controller(), open.url, openParameters(currentContextId, view)
               .disableInstantView()
-              .requireOpenPrompt(!open.skipConfirm));
+              .requireOpenPrompt(!open.skipConfirmation));
             break;
           }
           case TdApi.LoginUrlInfoRequestConfirmation.CONSTRUCTOR:

File: app/src/main/java/org/thunderdog/challegram/navigation/TelegramViewController.java
Patch:
@@ -285,7 +285,7 @@ public void onForceTouchAction (ForceTouchView.ForceTouchContext context, int ac
             case R.id.btn_markChatAsUnread:
             case R.id.btn_removeChatFromListOrClearHistory:
             case R.id.btn_removePsaChatFromList: {
-              tdlib.ui().processChatAction(TelegramViewController.this, chat.getList(), chat.getChatId(), chat.getMessageThread(), actionId, null);
+              tdlib.ui().processChatAction(TelegramViewController.this, chat.getList(), chat.getChatId(), chat.getMessageThread(), new TdApi.MessageSourceSearch(), actionId, null);
               break;
             }
             case R.id.btn_selectChat: {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationExtras.java
Patch:
@@ -179,7 +179,7 @@ public void read (Tdlib tdlib) {
     if (areMentions) {
       tdlib.client().send(new TdApi.ReadAllChatMentions(chatId), tdlib.silentHandler());
     } else {
-      tdlib.readMessages(chatId, messageThreadId, messageIds);
+      tdlib.readMessages(chatId, messageIds, new TdApi.MessageSourceNotification());
     }
     hide(tdlib);
     if (needToast) {

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -2433,7 +2433,7 @@ private void buildUserCells () {
     }
 
     if (TD.isBot(user)) {
-      if (userFull != null && (!Td.isEmpty(userFull.bio) || (userFull.botInfo != null && !StringUtils.isEmpty(userFull.botInfo.shareText)))) {
+      if (userFull != null && (!Td.isEmpty(userFull.bio) || (userFull.botInfo != null && !StringUtils.isEmpty(userFull.botInfo.shortDescription)))) {
         items.add(newDescriptionItem());
         addedCount++;
       }
@@ -2690,7 +2690,7 @@ private void removeInviteLink () {
 
   private String getDescriptionValue () {
     if (userFull != null) {
-      return !Td.isEmpty(userFull.bio) ? userFull.bio.text : userFull.botInfo != null && !StringUtils.isEmpty(userFull.botInfo.shareText) ? userFull.botInfo.shareText : "";
+      return !Td.isEmpty(userFull.bio) ? userFull.bio.text : userFull.botInfo != null && !StringUtils.isEmpty(userFull.botInfo.shortDescription) ? userFull.botInfo.shortDescription : "";
     }
     if (supergroupFull != null) {
       return !StringUtils.isEmpty(supergroupFull.description) ? supergroupFull.description : "";
@@ -2711,7 +2711,7 @@ private boolean setDescription () {
         return setDescription(userFull.bio);
       }
       if (userFull.botInfo != null) {
-        return setDescription(userFull.botInfo.shareText);
+        return setDescription(userFull.botInfo.shortDescription);
       }
       return setDescription("");
     }

File: app/src/main/java/org/thunderdog/challegram/widget/BaseView.java
Patch:
@@ -604,7 +604,7 @@ public void onAfterForceTouchAction (ForceTouchView.ForceTouchContext context, i
         IntList ids = new IntList(5);
         IntList icons = new IntList(5);
         StringList strings = new StringList(5);
-        listener = ancestor.tdlib().ui().createSimpleChatActions(ancestor, getPreviewChatList(), getPreviewChatId(), ((MessagesController) controller).getMessageThread(), ids, icons, strings, ancestor instanceof MainController || ancestor instanceof ChatsController, false, false, null);
+        listener = ancestor.tdlib().ui().createSimpleChatActions(ancestor, getPreviewChatList(), getPreviewChatId(), ((MessagesController) controller).getMessageThread(), new TdApi.MessageSourceOther(), ids, icons, strings, ancestor instanceof MainController || ancestor instanceof ChatsController, false, false, null);
         for (int i = 0; i < ids.size(); i++) {
           actions.add(new ActionItem(ids.get(i), icons.get(i), strings.get()[i]));
         }

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/SearchManager.java
Patch:
@@ -1057,7 +1057,7 @@ public void onResult (TdApi.Object object) {
               break;
             }
             default: {
-              Log.unexpectedTdlibResponse(object, TdApi.SearchMessages.class, TdApi.Messages.class, TdApi.Error.class);
+              Log.unexpectedTdlibResponse(object, TdApi.SearchMessages.class, TdApi.FoundMessages.class, TdApi.Error.class);
               return;
             }
           }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibResourceManager.java
Patch:
@@ -88,8 +88,8 @@ public void findResource (RunnableData<TdApi.Message> onDone, String query, long
       tdlib.openChat(chatId, null, () -> {
         tdlib.client().send(new TdApi.SearchChatMessages(chatId, query, null, 0, 0, 1, new TdApi.SearchMessagesFilterDocument(), 0), result -> {
           switch (result.getConstructor()) {
-            case TdApi.Messages.CONSTRUCTOR: {
-              TdApi.Messages messages = (TdApi.Messages) result;
+            case TdApi.FoundChatMessages.CONSTRUCTOR: {
+              TdApi.FoundChatMessages messages = (TdApi.FoundChatMessages) result;
               if (messages.messages.length > 0 && TimeUnit.SECONDS.toMillis(messages.messages[0].date) > afterDateMs) {
                 onDone.runWithData(messages.messages[0]);
               } else {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -388,8 +388,8 @@ private static boolean deleteSuperGroupMessages (final ViewController<?> context
       });
       // TODO TDLib / server: ability to get totalCount with limit=0
       tdlib.client().send(new TdApi.SearchChatMessages(chatId, null, senderId, 0, 0, 1, null, 0), result -> {
-        if (result.getConstructor() == TdApi.Messages.CONSTRUCTOR) {
-          int moreCount = ((TdApi.Messages) result).totalCount - deletingMessages.length;
+        if (result.getConstructor() == TdApi.FoundChatMessages.CONSTRUCTOR) {
+          int moreCount = ((TdApi.FoundChatMessages) result).totalCount - deletingMessages.length;
           if (moreCount > 0) {
             tdlib.ui().post(() -> {
               int i = wrap.adapter.indexOfViewById(R.id.btn_deleteAll);

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -3412,9 +3412,10 @@ public void onResult (TdApi.Object result) {
             }
             case TdApi.InternalLinkTypePhoneNumberConfirmation.CONSTRUCTOR: {
               TdApi.InternalLinkTypePhoneNumberConfirmation confirmPhone = (TdApi.InternalLinkTypePhoneNumberConfirmation) linkType;
+              TdApi.PhoneNumberAuthenticationSettings authenticationSettings = TD.phoneNumberAuthenticationSettings(context.context());
               // TODO progress?
               ViewController<?> currentController = context.context().navigation().getCurrentStackItem();
-              tdlib.client().send(new TdApi.SendPhoneNumberConfirmationCode(confirmPhone.hash, confirmPhone.phoneNumber, TD.defaultPhoneNumberAuthenticationSettings()), confirmationResult -> {
+              tdlib.client().send(new TdApi.SendPhoneNumberConfirmationCode(confirmPhone.hash, confirmPhone.phoneNumber, authenticationSettings), confirmationResult -> {
                 switch (confirmationResult.getConstructor()) {
                   case TdApi.AuthenticationCodeInfo.CONSTRUCTOR: {
                     TdApi.AuthenticationCodeInfo info = (TdApi.AuthenticationCodeInfo) confirmationResult;

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -910,10 +910,10 @@ private boolean makeRequest () {
         function = new TdApi.ImportContacts(new TdApi.Contact[] {new TdApi.Contact(phone, getFirstName(), getLastName(), null, 0)});
         break;
       case MODE_CHANGE_NUMBER:
-        function = new TdApi.ChangePhoneNumber(phone, TD.defaultPhoneNumberAuthenticationSettings());
+        function = new TdApi.ChangePhoneNumber(phone, TD.phoneNumberAuthenticationSettings(context));
         break;
       case MODE_LOGIN:
-        function = new TdApi.SetAuthenticationPhoneNumber(phone, TD.defaultPhoneNumberAuthenticationSettings());
+        function = new TdApi.SetAuthenticationPhoneNumber(phone, TD.phoneNumberAuthenticationSettings(context));
         tdlib.setAuthPhoneNumber(phoneCode, phoneNumber);
         break;
       default:

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -4049,7 +4049,7 @@ public boolean isDiceEmoji (String text) {
       return false;
     synchronized (dataLock) {
       if (diceEmoji != null) {
-        return ArrayUtils.contains(diceEmoji, emoji);
+        return ArrayUtils.contains(diceEmoji, text);
       }
     }
     return false;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -3755,6 +3755,8 @@ public final void requestAvatar (AvatarReceiver receiver) {
       final float avatarRadiusDp = useBubbles() ? BUBBLE_AVATAR_RADIUS : AVATAR_RADIUS;
       if (forceForwardedInfo()) {
         forwardInfo.requestAvatar(receiver);
+      } else if (sender.isDemo()) {
+        receiver.requestPlaceholder(tdlib, sender.getPlaceholderMetadata(), AvatarReceiver.Options.NONE);
       } else {
         receiver.requestMessageSender(tdlib, sender.toSender(), AvatarReceiver.Options.NONE);
       }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsThemeController.java
Patch:
@@ -1601,9 +1601,8 @@ public void onClick (View v) {
         if (!context().permissions().requestReadExternalStorage(Permissions.ReadType.IMAGES, grantType ->
           openWallpaperSetup()
         )) {
-          return;
+          openWallpaperSetup();
         }
-        openWallpaperSetup();
         break;
       }
       case R.id.btn_previewChat: {

File: app/src/main/java/org/thunderdog/challegram/data/FileComponent.java
Patch:
@@ -681,7 +681,7 @@ public <T extends View & DrawableProvider> void draw (T view, Canvas c, int star
       preview.setPaintAlpha(alpha * preview.getAlpha());
       receiver.setPaintAlpha(alpha * receiver.getAlpha());
       if (mayBeTransparent) {
-        receiver.drawPlaceholderRounded(c, previewSize / 2f, ColorUtils.alphaColor(alpha, Color.WHITE));
+        c.drawCircle(startX + previewSize / 2f, startY + previewSize / 2f, previewSize / 2f, Paints.fillingPaint(ColorUtils.alphaColor(alpha, Color.WHITE)));
       }
       DrawAlgorithms.drawReceiver(c, preview, receiver, true, true, startX, startY, startX + previewSize, startY + previewSize);
       receiver.restorePaintAlpha();

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -81,7 +81,6 @@ public static boolean useBundledWebp () {
   public static final boolean NEED_NETWORK_SYNC_REQUEST = false;
 
   public static final boolean VIEW_MESSAGES_BEFORE_SCROLL = false;
-  public static final boolean READ_MESSAGES_BEFORE_FOCUS = false;
 
   // Fields from default config.
 

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -2361,7 +2361,7 @@ private void setViewAttached (boolean isAttached) {
     if (isAttached != nowIsAttached) {
       flags = BitwiseUtils.setFlag(flags, FLAG_ATTACHED, isAttached);
       onMessageAttachStateChange(isAttached);
-      if (!Config.READ_MESSAGES_BEFORE_FOCUS && isAttached) {
+      if (isAttached) {
         manager.viewMessages();
       }
     }

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaCellViewDetector.java
Patch:
@@ -18,6 +18,7 @@
 import android.graphics.Matrix;
 import android.graphics.Rect;
 import android.graphics.RectF;
+import android.os.SystemClock;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewConfiguration;
@@ -137,7 +138,7 @@ private void onClick (float x, float y) {
       callback.onClick(x, y);
       return;
     }
-    long now = System.currentTimeMillis();
+    long now = SystemClock.uptimeMillis();
     if (now - lastClickTime <= DOUBLE_TAP_DELAY) {
       performDoubleTap(x, y);
       return;
@@ -231,7 +232,7 @@ private void animatePosition (float toZoom, float toPivotX, float toPivotY, floa
 
     if (animate && changed) {
       if (positionAnimator == null) {
-        positionAnimator = new FactorAnimator(ANIMATOR_POSITION, this, AnimatorUtils.DECELERATE_INTERPOLATOR, 140l);
+        positionAnimator = new FactorAnimator(ANIMATOR_POSITION, this, AnimatorUtils.QUADRATIC_EASE_IN_OUT_INTERPOLATOR, MediaCellView.ZOOM_DURATION);
       }
       positionAnimator.animateTo(1f);
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -2205,7 +2205,7 @@ private void cancelRefresh () {
 
   private void scheduleRefresh () {
     cancelRefresh();
-    if (refreshChatId != 0 && refreshMessageIds != null && refreshMessageIds.size() > 0) {
+    if (refreshChatId != 0 && refreshMessageIds != null && refreshMessageIds.size() > 0 && isFocused) {
       long ms = refreshMaxDate != 0 ? timeTillNextRefresh(tdlib.currentTimeMillis() - TimeUnit.SECONDS.toMillis(refreshMaxDate)) : 60000;
       refreshViewsRunnable = new CancellableRunnable() {
         @Override
@@ -2370,6 +2370,7 @@ private void onFocus () {
     }
     viewMessages();
     saveScrollPosition();
+    scheduleRefresh();
   }
 
   // Highlight message id

File: app/src/google/java/org/thunderdog/challegram/ui/MapGoogleController.java
Patch:
@@ -385,7 +385,7 @@ public void onMapReady (GoogleMap googleMap) {
 
     googleMap.setOnCameraMoveStartedListener(this);
 
-    if (U.checkLocationPermission(context)) {
+    if (context.permissions().canAccessLocation()) {
       try { googleMap.setMyLocationEnabled(true); } catch (Throwable ignored) { }
     }
 

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomContactsController.java
Patch:
@@ -112,7 +112,7 @@ protected View onCreateView (Context context) {
 
   protected void displayContacts (final ArrayList<TGUser> users) {
     if (users.isEmpty()) {
-      showError(this.users == null ? R.string.NoContacts : R.string.NothingFound, this.users == null);
+      showError(this.users == null ? R.string.NoContacts : R.string.NothingFound, 0, null, this.users == null);
       adapter.setUsers(null);
     } else if (this.users == null) {
       hideProgress();
@@ -150,7 +150,7 @@ protected void onCancelMultiSelection () {
   public void onResult (TdApi.Object object) {
     switch (object.getConstructor()) {
       case TdApi.Error.CONSTRUCTOR: {
-        dispatchError(TD.toErrorString(object), true);
+        dispatchError(TD.toErrorString(object), null, null, true);
         break;
       }
       case TdApi.Users.CONSTRUCTOR: {
@@ -166,7 +166,7 @@ public void onResult (TdApi.Object object) {
         break;
       }
       default: {
-        dispatchError("Unknown constructor: " + object.getConstructor(), true);
+        dispatchError("Unknown constructor: " + object.getConstructor(), null, null, true);
         break;
       }
     }

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomInlineBotsController.java
Patch:
@@ -53,7 +53,7 @@ protected View onCreateView (Context context) {
 
   protected void displayBots (final List<TGUser> users) {
     if (users.isEmpty()) {
-      showError(R.string.NothingFound, true);
+      showError(R.string.NothingFound, 0, null, true);
     } else {
       hideProgress(() -> {
         adapter.setUsers(users);
@@ -99,7 +99,7 @@ private void addDefaultBot (TdApi.User user) {
   public void onResult (TdApi.Object object) {
     switch (object.getConstructor()) {
       case TdApi.Error.CONSTRUCTOR: {
-        dispatchError(TD.toErrorString(object), true);
+        dispatchError(TD.toErrorString(object), null, null, true);
         break;
       }
       case TdApi.Chat.CONSTRUCTOR: {

File: app/src/main/java/org/thunderdog/challegram/component/chat/WallpaperAdapter.java
Patch:
@@ -446,7 +446,7 @@ public void onClick (View v) {
     TGBackground wallpaper = ((WallpaperView) v).getWallpaper();
     if (wallpaper != null) {
       if (wallpaper.isCustom()) {
-        Intents.openGallery(false);
+        Intents.openGallery(context.context(), false);
       } else {
         context.tdlib().settings().setWallpaper(wallpaper, true, Theme.getWallpaperIdentifier());
       }

File: app/src/main/java/org/thunderdog/challegram/filegen/TdlibFileGenerationManager.java
Patch:
@@ -1138,7 +1138,7 @@ public int onPostProcess (@NonNull Canvas c) {
     compress(info, bitmap, info.isFiltered() ? 100 : applyLessCompression ? COMPRESSION_LEVEL_LESS : COMPRESSION_LEVEL, isTransparent && info.getAllowTransparency());
 
     if (saveToGallery) {
-      Background.instance().post(() -> U.savePhotoToGallery(originalBitmap, isTransparent), 750);
+      Background.instance().post(() -> U.savePhotoToGallery(UI.getUiContext(), originalBitmap, isTransparent), 750);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/helper/InlineSearchContext.java
Patch:
@@ -607,7 +607,7 @@ public void onLocationResult (LocationHelper context, @NonNull String arg, @Null
   public void onLocationRequestFailed (LocationHelper context, int errorCode, @NonNull String arg, @Nullable Location savedLocation) {
     String inlineQuery = getInlineQuery();
 
-    if (errorCode == LocationHelper.ERROR_CODE_PERMISSION && (inlineQuery == null || inlineQuery.isEmpty()) && !U.shouldShowPermissionRationale(Manifest.permission.ACCESS_FINE_LOCATION)) {
+    if (errorCode == LocationHelper.ERROR_CODE_PERMISSION && (inlineQuery == null || inlineQuery.isEmpty()) && !this.context.permissions().shouldShowAccessLocationRationale()) {
       Intents.openPermissionSettings();
     }
 

File: app/src/main/java/org/thunderdog/challegram/helper/LocationHelper.java
Patch:
@@ -180,11 +180,11 @@ private void receiveLocationInternal (final BaseActivity activity, final boolean
           if (activity != null) {
             Runnable onCancel = () -> onReceiveLocationFailure(ERROR_CODE_PERMISSION_CANCEL);
 
-            ActivityPermissionResult callback = (code, granted) -> {
+            ActivityPermissionResult callback = (code, permissions, grantResults, grantCount) -> {
               if (sendStatus[0]) {
                 return;
               }
-              if (granted) {
+              if (grantCount == permissions.length) {
                 receiveLocationInternal(activity, true, onlyCheck, skipAlert);
               } else {
                 onReceiveLocationFailure(ERROR_CODE_PERMISSION);

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -14,6 +14,7 @@
  */
 package org.thunderdog.challegram.mediaview;
 
+import android.Manifest;
 import android.annotation.TargetApi;
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -1577,7 +1578,7 @@ public void onMoreItemPressed (int id) {
       case R.id.btn_saveToGallery: {
         TdApi.File file = item.getTargetFile();
         if (TD.isFileLoadedAndExists(file)) {
-          U.copyToGallery(file.local.path, item.isAnimatedAvatar() || item.isGifType() ? U.TYPE_GIF : item.isVideo() ? U.TYPE_VIDEO : U.TYPE_PHOTO);
+          U.copyToGallery(context, file.local.path, item.isAnimatedAvatar() || item.isGifType() ? U.TYPE_GIF : item.isVideo() ? U.TYPE_VIDEO : U.TYPE_PHOTO);
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/telegram/CallManager.java
Patch:
@@ -42,6 +42,7 @@
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.ui.CallController;
 import org.thunderdog.challegram.unsorted.Settings;
+import org.thunderdog.challegram.util.ActivityPermissionResult;
 import org.thunderdog.challegram.voip.VoIPController;
 import org.thunderdog.challegram.voip.VoIPServerConfig;
 import org.thunderdog.challegram.voip.gui.CallSettings;
@@ -290,8 +291,8 @@ public boolean checkRecordPermissions (final Context context, final Tdlib tdlib,
       if (UI.getAppContext().checkSelfPermission(Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {
         BaseActivity activity = UI.getUiContext();
         if (activity != null) {
-          activity.requestMicPermissionForCall((code, granted) -> {
-            if (granted) {
+          activity.requestMicPermissionForCall((code, permissions, grantResults, grantCount) -> {
+            if (grantCount == permissions.length) {
               if (makeCallContext != null) {
                 makeCall(makeCallContext, userId, null, false);
               } else {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -1535,7 +1535,7 @@ public void showChangePhotoOptions (ViewController<?> context, boolean canDelete
     }
   }
 
-  public boolean handlePhotoOption (Context context, int id, TdApi.User user, EditHeaderView headerView) {
+  public boolean handlePhotoOption (BaseActivity context, int id, TdApi.User user, EditHeaderView headerView) {
     if (user == null && id == R.id.btn_changePhotoDelete && headerView == null) {
       return false;
     }
@@ -1545,7 +1545,7 @@ public boolean handlePhotoOption (Context context, int id, TdApi.User user, Edit
         return true;
       }
       case R.id.btn_changePhotoGallery: {
-        UI.openGalleryDelayed(false);
+        UI.openGalleryDelayed(context, false);
         return true;
       }
       case R.id.btn_changePhotoDelete: {

File: app/src/main/java/org/thunderdog/challegram/ui/MapController.java
Patch:
@@ -37,7 +37,6 @@
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.component.attach.CustomItemAnimator;
 import org.thunderdog.challegram.component.attach.MediaLocationPlaceView;
-import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.data.TGMessageLocation;
@@ -514,7 +513,7 @@ public void run () {
     }
 
     checkDirectionHidden();
-    isLoadingLocation = U.checkLocationPermission(context);
+    isLoadingLocation = context().permissions().canAccessLocation();
 
     if (needBackgroundMapInitialization(mapView)) {
       runOnBackgroundThread(() -> {
@@ -757,7 +756,7 @@ public void onLocationResult (LocationHelper context, @NonNull String arg, @Null
     }
     myLocationButton.setInProgress(false);
     if (location == null) {
-      if (U.checkLocationPermission(this.context) && mapView != null) {
+      if (context().permissions().canAccessLocation() && mapView != null) {
         setLoadingLocation(true);
         boolean willReceiveLocation = displayMyLocation(mapView);
         if (!willReceiveLocation) {

File: app/src/main/java/org/thunderdog/challegram/ui/PlaybackController.java
Patch:
@@ -2358,7 +2358,7 @@ public void onMoreItemPressed (int id) {
       case R.id.btn_saveFile: {
         TD.DownloadedFile downloadedFile = TD.getDownloadedFile(currentItem.getMessage());;
         if (downloadedFile != null) {
-          TD.saveFile(downloadedFile);
+          TD.saveFile(context, downloadedFile);
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -4463,7 +4463,7 @@ private void changeProfilePhoto () {
           break;
         }
         case R.id.btn_changePhotoGallery: {
-          UI.openGalleryDelayed(false);
+          UI.openGalleryDelayed(context, false);
           break;
         }
         case R.id.btn_changePhotoDelete: {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsController.java
Patch:
@@ -297,7 +297,7 @@ private void changeProfilePhoto () {
           break;
         }
         case R.id.btn_changePhotoGallery: {
-          UI.openGalleryDelayed(false);
+          UI.openGalleryDelayed(context, false);
           break;
         }
         case R.id.btn_changePhotoDelete: {

File: app/src/main/java/org/thunderdog/challegram/ui/TextController.java
Patch:
@@ -174,7 +174,7 @@ public void onMoreItemPressed (int id) {
     switch (id) {
       case R.id.btn_openLink: {
         File file = new File(filePath);
-        Intents.openFile(file, mimeType);
+        Intents.openFile(context, file, mimeType);
         break;
       }
       case R.id.btn_share: {

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraManager.java
Patch:
@@ -282,7 +282,7 @@ public void onTakeMediaResult (final ImageGalleryFile resultFile, boolean isVide
 
     if (!delegate.usePrivateFolder()) {
       if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-        U.copyToGallery(resultFile.getFilePath(), U.TYPE_PHOTO, false, resultFile::trackCopy);
+        U.copyToGallery(UI.getContext(context), resultFile.getFilePath(), U.TYPE_PHOTO, false, resultFile::trackCopy);
       } else {
         U.addToGallery(new File(resultFile.getFilePath()));
       }

File: app/src/main/java/org/thunderdog/challegram/util/ActivityPermissionResult.java
Patch:
@@ -15,5 +15,5 @@
 package org.thunderdog.challegram.util;
 
 public interface ActivityPermissionResult {
-  void onPermissionResult (int code, boolean granted);
+  void onPermissionResult (int code, String[] permissions, int[] grantResults, int grantCount);
 }

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -4628,6 +4628,7 @@ public void onActivityPermissionResult (int code, boolean granted) { }
       popupView.setHideKeyboard();
       popupView.init(false);
     } else {
+      popupView.setNeedRootInsets();
       popupView.init(true);
       popupView.setIgnoreAllInsets(true);
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -472,6 +472,7 @@ void onUpdateUser (TdApi.UpdateUser update) {
     if (isMe = (newUser.id == myUserId)) {
       notifyMyUserListeners(myUserListeners.iterator(), newUser);
       tdlib.downloadMyUser(newUser);
+      tdlib.context().onUpdateAccountProfile(tdlib.id(), newUser, true);
       tdlib.notifications().onUpdateMyUser(newUser);
     }
 

File: app/src/main/java/org/thunderdog/challegram/tool/UIHandler.java
Patch:
@@ -15,6 +15,7 @@
 package org.thunderdog.challegram.tool;
 
 import android.content.Context;
+import android.os.Build;
 import android.os.Handler;
 import android.os.Message;
 import android.view.Gravity;
@@ -357,7 +358,7 @@ public void handleMessage (Message msg) {
       case COPY_TEXT: {
         try {
           U.copyText((CharSequence) msg.obj);
-          if (msg.arg1 != 0) {
+          if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.S_V2 && msg.arg1 != 0) {
             showCustomToast(msg.arg1, Toast.LENGTH_SHORT, 0);
           }
         } catch (Throwable t) {

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -5126,6 +5126,7 @@ public boolean onTouchEvent (MotionEvent event) {
         videoSliderView.setInnerAlpha(0f);
         videoSliderView.setTranslationY(Screen.dp(56f));
         videoSliderView.setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+        videoSliderView.setSlideEnabled(stack.getCurrent().canSeekVideo());
         bottomWrap.addView(videoSliderView);
         if (needTrim()) {
           videoSliderView.addTrim(new VideoTimelineView.TimelineDelegate() {
@@ -5414,6 +5415,7 @@ public boolean onTouchEvent (MotionEvent event) {
         videoSliderView.setAlpha(0f);
         videoSliderView.setTranslationY(Screen.dp(56f));
         videoSliderView.setLayoutParams(FrameLayoutFix.newParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+        videoSliderView.setSlideEnabled(stack.getCurrent().canSeekVideo());
         bottomWrap.addView(videoSliderView);
 
         contentView.addView(bottomWrap);

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -1550,7 +1550,7 @@ public void onMenuItemPressed (int id, View view) {
         }
 
         if (!ids.isEmpty()) {
-          showMore(ids.get(), strings.get(), 0);
+          showMore(ids.get(), strings.get(), 0, canRunFullscreen());
         }
 
         break;

File: app/src/main/java/org/thunderdog/challegram/ui/StickersListController.java
Patch:
@@ -151,7 +151,7 @@ public void onMenuItemPressed (int id, View view) {
             }
           }
 
-          showMore(ids.get(), strings.get(), icons.get(), 0, true);
+          showMore(ids.get(), strings.get(), icons.get(), 0);
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageFile.java
Patch:
@@ -253,19 +253,19 @@ private CaptionedFile newFile (TGMessage context, TdApi.Message message) {
     switch (message.content.getConstructor()) {
       case TdApi.MessageDocument.CONSTRUCTOR: {
         TdApi.MessageDocument document = (TdApi.MessageDocument) message.content;
-        component = new FileComponent(context, document.document);
+        component = new FileComponent(context, message, document.document);
         caption = document.caption;
         break;
       }
       case TdApi.MessageAudio.CONSTRUCTOR: {
         TdApi.MessageAudio audio = (TdApi.MessageAudio) message.content;
-        component = new FileComponent(context, audio.audio, message, context.manager);
+        component = new FileComponent(context, message, audio.audio, message, context.manager);
         caption = audio.caption;
         break;
       }
       case TdApi.MessageVoiceNote.CONSTRUCTOR: {
         TdApi.MessageVoiceNote voiceNote = (TdApi.MessageVoiceNote) message.content;
-        component = new FileComponent(context, voiceNote.voiceNote, message, context.manager);
+        component = new FileComponent(context, message, voiceNote.voiceNote, message, context.manager);
         caption = voiceNote.caption;
         disallowTouch = false;
         break;

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -56,7 +56,6 @@
 import org.drinkless.td.libcore.telegram.Client;
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.thunderdog.challegram.BaseActivity;
-import org.thunderdog.challegram.BuildConfig;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.component.MediaCollectorDelegate;

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaView.java
Patch:
@@ -634,7 +634,7 @@ public boolean isMovingItem () {
 
   @Override
   public boolean onInterceptTouchEvent (MotionEvent e) {
-    if ((disallowIntercept && (e.getAction() != MotionEvent.ACTION_DOWN || !ignoreDisallowInterceptTouchEvent)) || disallowMove || disableTouch || detector == null) {
+    if ((disallowIntercept && (e.getAction() != MotionEvent.ACTION_DOWN /*|| !ignoreDisallowInterceptTouchEvent*/)) || disallowMove || disableTouch || detector == null) {
       // Logger.v("no intercept %s %b", MotionEvent.actionToString(e.getAction()), isMoving);
       return false;
     }

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -1646,6 +1646,9 @@ public void onMoreItemPressed (int id) {
         if (item.getSourceVideo() != null) {
           TdApi.Video video = item.getSourceVideo();
           U.openFile(this, video);
+        } else if (item.getSourceDocument() != null) {
+          TdApi.Document document = item.getSourceDocument();
+          U.openFile(this, document.fileName, new File(document.document.local.path), document.mimeType, 0);
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -2048,6 +2048,8 @@ public MediaStack collectMedias (final long fromMessageId, @Nullable TdApi.Searc
     MediaStack stack;
     stack = new MediaStack(controller.context(), tdlib);
     stack.set(addedAfter.get(), result);
+    stack.setReverseModeHint(false);
+    stack.setForceThumbsHint(false);
 
     return stack;
   }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1308,6 +1308,9 @@ public static TdApi.Photo convertToPhoto (TdApi.Document document, @Nullable Bit
     } else if (document.thumbnail != null) {
       width = document.thumbnail.width;
       height = document.thumbnail.height;
+      float scale = 2f;
+      width *= scale;
+      height *= scale;
     } else {
       width = height = 0;
     }

File: app/src/main/java/org/thunderdog/challegram/widget/FileProgressComponent.java
Patch:
@@ -14,7 +14,6 @@
  */
 package org.thunderdog.challegram.widget;
 
-import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.graphics.Path;
@@ -43,7 +42,6 @@
 import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.data.TGMessage;
 import org.thunderdog.challegram.filegen.VideoGen;
-import org.thunderdog.challegram.loader.ImageReader;
 import org.thunderdog.challegram.mediaview.MediaViewController;
 import org.thunderdog.challegram.mediaview.data.MediaItem;
 import org.thunderdog.challegram.navigation.ViewController;
@@ -557,7 +555,7 @@ public boolean openFile (ViewController<?> c, Runnable defaultOpen) {
                     if (item != null && item.getWidth() > 0 && item.getHeight() > 0) {
                       runOnUiThreadOptional(c, () -> {
                         item.setSourceMessageId(chatId, messageId);
-                        MediaViewController.openFromMedia(c, item, new TdApi.SearchMessagesFilterDocument());
+                        MediaViewController.openFromMedia(c, item, new TdApi.SearchMessagesFilterDocument(), true);
                       });
                     } else {
                       runOnUiThreadOptional(c, defaultOpen);

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaStackCallback.java
Patch:
@@ -17,5 +17,5 @@
 import org.thunderdog.challegram.mediaview.data.MediaItem;
 
 public interface MediaStackCallback {
-  void onMediaChanged (int index, int estimatedTotalSize, MediaItem currentItem, boolean itemsAdded);
+  void onMediaChanged (int index, int estimatedTotalSize, MediaItem currentItem, boolean itemCountChanged);
 }

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -2314,7 +2314,7 @@ public void requestLocationPermission (boolean needBackground, boolean skipAlert
       if (skipAlert) {
         requestLocationPermissionImpl(needBackground, handler);
       } else {
-        ModernOptions.showLocationAlert(this, needBackground, onCancel, () -> {
+        ModernOptions.showLocationAlert(navigation.getCurrentStackItem(), needBackground, onCancel, () -> {
           requestLocationPermissionImpl(needBackground, handler);
         });
       }

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -4833,7 +4833,7 @@ public void getOutline (View view, android.graphics.Outline outline) {
         bottomWrap.setLayoutParams(fp);
         checkBottomWrapY();
 
-        InputView captionView = new InputView(context, tdlib) {
+        InputView captionView = new InputView(context, tdlib, this) {
           @Override
           protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
             super.onMeasure(widthMeasureSpec, heightMeasureSpec);

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -679,7 +679,7 @@ protected void onLayout (boolean changed, int l, int t, int r, int b) {
     bottomWrap.setLayoutParams(params);
 
     if (previewMode == PREVIEW_MODE_NONE && !isInForceTouchMode()) {
-      inputView = new InputView(context, tdlib) {
+      inputView = new InputView(context, tdlib, this) {
         @Override
         protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
           super.onMeasure(widthMeasureSpec, heightMeasureSpec);

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -1206,7 +1206,7 @@ protected void onLayout (boolean changed, int l, int t, int r, int b) {
     bottomWrap.setOrientation(LinearLayout.VERTICAL);
     contentView.addView(bottomWrap);
 
-    inputView = new InputView(context, tdlib) {
+    inputView = new InputView(context, tdlib, this) {
       @Override
       protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -1138,7 +1138,7 @@ public static String tryResolveFilePath (final Uri uri) {
       if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && DocumentsContract.isDocumentUri(UI.getContext(), uri)) {
         if (isExternalStorageDocument(uri)) {
           final String docId = DocumentsContract.getDocumentId(uri);
-          final String[] split = docId.split(":");
+          final String[] split = docId.split(":", 2);
           final String type = split[0];
           if ("primary".equalsIgnoreCase(type)) {
             result = Environment.getExternalStorageDirectory() + "/" + split[1];
@@ -1149,7 +1149,7 @@ public static String tryResolveFilePath (final Uri uri) {
           result = getDataColumn(UI.getContext(), contentUri, null, null);
         } else if (isMediaDocument(uri)) {
           final String docId = DocumentsContract.getDocumentId(uri);
-          final String[] split = docId.split(":");
+          final String[] split = docId.split(":", 2);
           final String type = split[0];
 
           Uri contentUri = null;

File: app/src/main/java/org/thunderdog/challegram/core/Lang.java
Patch:
@@ -678,7 +678,7 @@ private static String systemDate (long timeInMillis, int style, String fallbackP
 
   private static String systemTime (long timeInMillis, int style, String fallbackPattern) {
     try {
-      String language = dateFormatLocale().getLanguage();
+      /*String language = dateFormatLocale().getLanguage();
       if (language.equals(Locale.getDefault().getLanguage())) {
         Formatter f = new Formatter(new StringBuilder(50), dateFormatLocale());
         return android.text.format.DateUtils.formatDateRange(UI.getAppContext(), f, timeInMillis, timeInMillis, android.text.format.DateUtils.FORMAT_SHOW_TIME).toString();
@@ -690,7 +690,7 @@ private static String systemTime (long timeInMillis, int style, String fallbackP
         try {
           return android.icu.text.DateFormat.getTimeInstance(translateStyle(style, true), dateFormatLocale()).format(DateUtils.dateInstance(timeInMillis));
         } catch (Throwable ignored) { }
-      }
+      }*/
       return java.text.DateFormat.getTimeInstance(translateStyle(style, false), dateFormatLocale()).format(DateUtils.dateInstance(timeInMillis));
     } catch (Throwable ignored) {
       return dateFormat(fallbackPattern, timeInMillis);

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -2554,7 +2554,7 @@ public static void notifyItemsReplaced (final RecyclerView.Adapter<?> adapter, f
 
   public static void notifyItemsReplaced (final RecyclerView.Adapter<?> adapter, final int oldItemCount, final int headerItemCount) {
     int newItemCount = adapter.getItemCount();
-    if (headerItemCount < newItemCount)
+    if (newItemCount < headerItemCount)
       throw new IllegalStateException();
     if (oldItemCount == newItemCount) {
       if (oldItemCount != 0) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -7785,7 +7785,7 @@ private void computeQuickButtons () {
         final boolean isOdd = a % 2 == 1;
         final SwipeQuickAction quickReaction = new SwipeQuickAction(reactionObj.getTitle(), reactionDrawable, () -> {
           boolean hasReaction = messageReactions.hasReaction(reactionType);
-          if (hasReaction || messagesController().callNonAnonymousProtection(getId() + reactionObj.hashCode(), null)) {
+          if (hasReaction || !canGetAddedReactions() || messagesController().callNonAnonymousProtection(getId() + reactionObj.hashCode(), null)) {
             if (messageReactions.toggleReaction(reactionType, false, false, handler(findCurrentView(), null, () -> {}))) {
               scheduleSetReactionAnimation(new NextReactionAnimation(reactionObj, NextReactionAnimation.TYPE_QUICK));
             }

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLayout.java
Patch:
@@ -981,7 +981,7 @@ public void performDestroy () {
 
   public void chooseInlineBot (TGUser user) {
     if (user.getUser() != null && target != null) {
-      target.onUsernamePick(user.getUser().username);
+      target.onUsernamePick(Td.primaryUsername(user.getUser()));
     }
     showKeyboardOnHide = true;
     hide(false);

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLocationPlaceView.java
Patch:
@@ -361,8 +361,8 @@ public void setChecked (boolean isChecked, boolean animated) {
 
   @Override
   protected void onDraw (Canvas c) {
-    int cx = receiver.getCenterX();
-    int cy = receiver.getCenterY();
+    int cx = receiver.centerX();
+    int cy = receiver.centerY();
 
     float alpha = (flags & FLAG_FADED) != 0 ? .6f : 1f;
 

File: app/src/main/java/org/thunderdog/challegram/component/popups/JoinRequestsComponent.java
Patch:
@@ -174,7 +174,7 @@ protected void setEmbedSticker (ListItem item, int position, EmbeddableStickerVi
       protected void setJoinRequest (ListItem item, int position, DoubleTextViewWithIcon group, boolean isUpdate) {
         TGUser user = joinRequests.get((isBottomSheet || isSeparateLink || inSearchMode()) ? position : position - 3);
         group.setTag(user);
-        group.text().setAvatar(user.getAvatar(), user.getAvatarPlaceholderMetadata());
+        group.text().setSenderAvatar(tdlib(), user.getSenderId());
         group.text().setText(user.getName(), user.getStatus());
         group.text().setIcon(R.drawable.baseline_person_add_16, (v) -> acceptRequest(user));
         group.icon().setImageResource(R.drawable.baseline_close_24);

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -291,4 +291,6 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean TEST_GENERIC_REACTION_EFFECTS = false;
 
   public static final boolean REORDER_INSTALLED_STICKER_SETS = false;
+
+  public static final boolean NEED_TEMPORARY_TOPICS_WORKAROUND = true;
 }

File: app/src/main/java/org/thunderdog/challegram/data/TGSource.java
Patch:
@@ -18,6 +18,7 @@
 
 import androidx.annotation.Nullable;
 
+import org.thunderdog.challegram.loader.AvatarReceiver;
 import org.thunderdog.challegram.loader.ImageFile;
 import org.thunderdog.challegram.loader.Receiver;
 import org.thunderdog.challegram.telegram.TdlibUi;
@@ -35,8 +36,8 @@ public TGSource (TGMessage msg) {
   public abstract boolean open (View view, Text text, TextPart part,  @Nullable TdlibUi.UrlOpenParameters openParameters, Receiver receiver);
   public abstract void load ();
   public abstract String getAuthorName ();
-  public abstract ImageFile getAvatar ();
-  public abstract AvatarPlaceholder.Metadata getAvatarPlaceholderMetadata ();
+  public abstract int getAuthorNameColorId ();
+  public abstract void requestAvatar (AvatarReceiver receiver);
   public abstract void destroy ();
 
   public boolean isReady () {

File: app/src/main/java/org/thunderdog/challegram/data/TGWebPage.java
Patch:
@@ -251,7 +251,7 @@ public void buildLayout (int width) {
           this.type = TYPE_TELEGRAM_BACKGROUND;
           break;
         }
-        case "telegram_adx": {
+        case SponsoredMessageUtils.TELEGRAM_AD_TYPE: {
           this.type = TYPE_TELEGRAM_AD;
           break;
         }

File: app/src/main/java/org/thunderdog/challegram/helper/LiveLocationHelper.java
Patch:
@@ -32,7 +32,6 @@
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.core.Lang;
-import org.thunderdog.challegram.data.TD;
 import org.thunderdog.challegram.navigation.NavigationController;
 import org.thunderdog.challegram.navigation.SettingsWrap;
 import org.thunderdog.challegram.navigation.SettingsWrapBuilder;
@@ -628,7 +627,7 @@ public LiveLocationHelper openLiveLocationList (boolean forceList) {
     b.setDrawerProcessor((item, view, timerView, isUpdate) -> {
       TdApi.Message message = (TdApi.Message) item.getData();
       TdApi.Chat chat = tdlib.chat(message.chatId);
-      view.setAvatar(tdlib.chatPlaceholderMetadata(message.chatId, chat, false), TD.getAvatar(tdlib, chat));
+      view.setAvatar(tdlib, message.chatId);
       view.setText(tdlib.chatTitle(chat));
       view.setPreviewChatId(null, message.chatId, null, new MessageId(message.chatId, message.id), null);
       view.setPreviewActionListProvider(LiveLocationHelper.this);

File: app/src/main/java/org/thunderdog/challegram/loader/DoubleImageReceiver.java
Patch:
@@ -50,7 +50,7 @@ public void setAnimationDisabled (boolean disabled) {
   }
 
   @Override
-  public void setRadius (int radius) {
+  public void setRadius (float radius) {
     if (isAnimated)
       throw new UnsupportedOperationException();
     this.preview.setRadius(radius);
@@ -200,7 +200,7 @@ public int getLeft () {
     return receiver.getLeft();
   }
 
-  public int getRadius () {
+  public float getRadius () {
     return isAnimated ? 0 : getImageReceiver().getRadius();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerController.java
Patch:
@@ -298,7 +298,7 @@ protected void setDrawerItem (ListItem item, DrawerItemView view, TimerView time
             TdlibBadgeCounter badge = account.getUnreadBadge();
             view.setChecked(account.id == account.context().preferredAccountId(), isUpdate);
             view.setUnreadCount(badge.getCount(), badge.isMuted(), isUpdate);
-            view.setAvatar(account.getAvatarPlaceholderMetadata(), account.getAvatarFile(false));
+            view.setAvatar(account);
             view.setText(Lang.getDebugString(account.getName(), account.isDebug()));
             view.setCustomControllerProvider(DrawerController.this);
             view.setPreviewActionListProvider(DrawerController.this);

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerHeaderView.java
Patch:
@@ -308,7 +308,7 @@ public void draw (Canvas c, DoubleImageReceiver receiver, int viewWidth, int vie
       int cy = startCy + (int) ((float) (targetCy - startCy) * avatarFactor);
 
       if (drawMode == DRAW_MODE_IMAGES || drawMode == DRAW_MODE_REGULAR) {
-        final int cornerRadius = (int) ((float) startRadius * (1f - avatarFactor));
+        final int cornerRadius = (int) ((float) startRadius * (1f - avatarFactor) * Theme.avatarRadiusDefault());
         final int avatarAlpha = (int) (255f * avatarAlphaFactor);
 
         int left = cx - radius;

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatListener.java
Patch:
@@ -18,7 +18,7 @@
 
 import org.drinkless.td.libcore.telegram.TdApi;
 
-public interface ChatListener {
+public interface ChatListener extends ForumTopicInfoListener {
   default void onChatTopMessageChanged (long chatId, @Nullable TdApi.Message topMessage) { }
   default void onChatPositionChanged (long chatId, TdApi.ChatPosition position, boolean orderChanged, boolean sourceChanged, boolean pinStateChanged) { }
   default void onChatPermissionsChanged (long chatId, TdApi.ChatPermissions permissions) { }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationChannelGroup.java
Patch:
@@ -41,6 +41,7 @@
 import me.vkryl.core.StringUtils;
 import me.vkryl.core.collection.SparseLongArray;
 import me.vkryl.td.ChatId;
+import me.vkryl.td.Td;
 
 @TargetApi(Build.VERSION_CODES.O)
 public class TdlibNotificationChannelGroup {
@@ -297,10 +298,10 @@ private static void setChannelDescription (Tdlib tdlib, Object channelObj, long
         TdApi.Supergroup supergroup = tdlib.chatToSupergroup(chatId);
         if (supergroup == null) {
           channel.setDescription(Lang.getString(R.string.NotificationChannelGroupChat, tdlib.chatTitle(chatId)));
-        } else if (StringUtils.isEmpty(supergroup.username)) {
+        } else if (!Td.hasUsername(supergroup)) {
           channel.setDescription(Lang.getString(supergroup.isChannel ? R.string.NotificationChannelChannelChat : R.string.NotificationChannelGroupChat, tdlib.chatTitle(chatId)));
         } else {
-          channel.setDescription(Lang.getString(supergroup.isChannel ? R.string.NotificationChannelChannelChatPublic : R.string.NotificationChannelGroupChatPublic, tdlib.chatTitle(chatId), tdlib.tMeHost() + supergroup.username));
+          channel.setDescription(Lang.getString(supergroup.isChannel ? R.string.NotificationChannelChannelChatPublic : R.string.NotificationChannelGroupChatPublic, tdlib.chatTitle(chatId), tdlib.tMeHost() + Td.primaryUsername(supergroup)));
         }
         break;
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibStatusManager.java
Patch:
@@ -704,7 +704,7 @@ private CharSequence getSupergroupChatSubtitle (long supergroupId) {
     if (supergroup == null) {
       return "channel unavailable";
     }
-    int resource = supergroup.isChannel ? (StringUtils.isEmpty(supergroup.username) ? R.string.ChannelPrivate : R.string.Channel) : (!StringUtils.isEmpty(supergroup.username) ? R.string.PublicGroup : R.string.Group);
+    int resource = supergroup.isChannel ? (!Td.hasUsername(supergroup) ? R.string.ChannelPrivate : R.string.Channel) : (!Td.isEmpty(supergroup.usernames) ? R.string.PublicGroup : R.string.Group);
     return Lang.lowercase(Lang.getString(resource));
   }
 }

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -2040,7 +2040,7 @@ public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.For
       }
 
       context.setTdlib(tdlib);
-      context.setHeaderAvatar(null, new AvatarPlaceholder(ComplexHeaderView.getBaseAvatarRadiusDp(), new AvatarPlaceholder.Metadata(R.id.theme_color_avatarArchive, R.drawable.baseline_archive_24), null));
+      context.setHeaderAvatar(null, new AvatarPlaceholder.Metadata(R.id.theme_color_avatarArchive, R.drawable.baseline_archive_24));
       context.setHeader(Lang.getString(R.string.ArchiveTitle), Lang.plural(R.string.xChats, tdlib.getTotalChatsCount(ChatPosition.CHAT_LIST_ARCHIVE)));
 
       context.setMaximizeListener((target1, animateToWhenReady, arg) -> {

File: app/src/main/java/org/thunderdog/challegram/ui/CreateChannelController.java
Patch:
@@ -295,7 +295,7 @@ public void createChannel () {
 
     UI.showProgress(Lang.getString(R.string.ProgressCreateChannel), null, 300l);
 
-    tdlib.client().send(new TdApi.CreateNewSupergroupChat(title, true, desc, null, false), this);
+    tdlib.client().send(new TdApi.CreateNewSupergroupChat(title, true, desc, null, 0, false), this);
   }
 
   public void channelCreated (TdApi.Chat chat) {

File: app/src/main/java/org/thunderdog/challegram/ui/CreateGroupController.java
Patch:
@@ -426,9 +426,9 @@ public void createGroup () {
     currentIsChannel = currentMemberIds.length > tdlib.basicGroupMaxSize();
 
     if (currentIsChannel) {
-      tdlib.client().send(new TdApi.CreateNewSupergroupChat(title, false, null, null, false), this);
+      tdlib.client().send(new TdApi.CreateNewSupergroupChat(title, false, null, null, 0, false), this);
     } else if (groupCreationCallback != null && groupCreationCallback.forceSupergroupChat()) {
-      tdlib.client().send(new TdApi.CreateNewSupergroupChat(title, false, null, null, false), result -> {
+      tdlib.client().send(new TdApi.CreateNewSupergroupChat(title, false, null, null, 0, false), result -> {
         switch (result.getConstructor()) {
           case TdApi.Chat.CONSTRUCTOR: {
             TdApi.Chat createdGroup = (TdApi.Chat) result;
@@ -444,7 +444,7 @@ public void createGroup () {
         }
       });
     } else {
-      tdlib.client().send(new TdApi.CreateNewBasicGroupChat(currentMemberIds, title), this);
+      tdlib.client().send(new TdApi.CreateNewBasicGroupChat(currentMemberIds, title, 0), this);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/EditRightsController.java
Patch:
@@ -131,7 +131,7 @@ public void setArguments (Args args) {
           if (args.member.status.getConstructor() == TdApi.ChatMemberStatusCreator.CONSTRUCTOR) {
             TdApi.ChatMemberStatusCreator creator = (TdApi.ChatMemberStatusCreator) args.member.status;
             // TODO bot defaults
-            targetAdmin = new TdApi.ChatMemberStatusAdministrator(creator.customTitle, true, new TdApi.ChatAdministratorRights(true, true, true, true, true, true, true, true, true, true, creator.isAnonymous));
+            targetAdmin = new TdApi.ChatMemberStatusAdministrator(creator.customTitle, true, new TdApi.ChatAdministratorRights(true, true, true, true, true, true, true, true, true, true, true, creator.isAnonymous));
           } else if (args.member.status.getConstructor() == TdApi.ChatMemberStatusAdministrator.CONSTRUCTOR) {
             TdApi.ChatMemberStatusAdministrator admin = (TdApi.ChatMemberStatusAdministrator) args.member.status;
             targetAdmin = (TdApi.ChatMemberStatusAdministrator) Td.copyOf(admin);
@@ -159,7 +159,7 @@ private TdApi.ChatMemberStatusAdministrator newTargetAdmin () {
         return new TdApi.ChatMemberStatusAdministrator(null, true, Td.copyOf(me.rights));
       }
     }
-    return new TdApi.ChatMemberStatusAdministrator(null, true, new TdApi.ChatAdministratorRights(true, true, true, true, true, true, true, true, false, true, false));
+    return new TdApi.ChatMemberStatusAdministrator(null, true, new TdApi.ChatAdministratorRights(true, true, true, true, true, true, true, true, false, true, true, false));
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsCacheController.java
Patch:
@@ -226,7 +226,7 @@ protected void setDoubleText (ListItem item, int position, DoubleTextView textVi
         if (entry != null) {
           textView.setText(entry.getTitle(), isCleaningUp && ArrayUtils.contains(busyChatIds, item.getLongId()) ? Lang.getString(R.string.CleaningUp) : Strings.buildSize(entry.getSize()));
           textView.setTitleColorId(entry.isSecret() ? R.id.theme_color_textSecure : entry.isSelfChat() ? R.id.theme_color_textNeutral : R.id.theme_color_text);
-          textView.setAvatar(entry.getAvatarFile(), entry.getAvatarPlaceholderMetadata());
+          textView.setChatAvatar(tdlib, entry.getId());
         }
       }
     };

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMediaController.java
Patch:
@@ -573,7 +573,7 @@ public boolean onLongPressRequestedAt (View v, float x, float y) {
         TdlibSender sender = new TdlibSender(tdlib, message.chatId, message.senderId);
         String title = sender.isSelf() ? Lang.getString(R.string.FromYou) : sender.getName();
         context.setHeader(title, Lang.getRelativeTimestamp(mediaItemCopy.getSourceDate(), TimeUnit.SECONDS));
-        context.setHeaderAvatar(sender.getAvatar(), new AvatarPlaceholder(ComplexHeaderView.getBaseAvatarRadiusDp(), sender.getPlaceholderMetadata(), null));
+        context.setHeaderAvatar(sender.toSender(), null);
       }
       if (parent != null) {
         context.setAllowFullscreen(!parent.inSearchMode());

File: app/src/main/java/org/thunderdog/challegram/v/ChatsRecyclerView.java
Patch:
@@ -224,7 +224,7 @@ public void updateUserStatus (long userId) {
         break;
       View view = manager.findViewByPosition(updated);
       if (view instanceof ChatView && ((ChatView) view).getChatId() == adapter.getChatAt(updated).getChatId()) {
-        ((ChatView) view).updateOnline();
+        // ((ChatView) view).updateOnline();
         view.invalidate();
       } else {
         adapter.notifyItemChanged(updated);

File: app/src/main/java/org/thunderdog/challegram/widget/SimplestCheckBoxHelper.java
Patch:
@@ -16,14 +16,14 @@
 
 import android.view.View;
 
-import org.thunderdog.challegram.loader.ImageReceiver;
+import org.thunderdog.challegram.loader.Receiver;
 
 import me.vkryl.android.AnimatorUtils;
 import me.vkryl.android.animator.FactorAnimator;
 
 public class SimplestCheckBoxHelper implements FactorAnimator.Target {
   private final View target;
-  private final ImageReceiver receiver;
+  private final Receiver receiver;
 
   private float factor;
   private FactorAnimator animator;
@@ -33,7 +33,7 @@ public interface Listener {
     void onCheckFactorChanged (float factor);
   }
 
-  public SimplestCheckBoxHelper (View target, ImageReceiver receiver) {
+  public SimplestCheckBoxHelper (View target, Receiver receiver) {
     this.target = target;
     this.receiver = receiver;
   }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -173,8 +173,6 @@ public static boolean useBundledWebp () {
 
   public static final boolean SMOOTH_SCROLL_TO_BOTTOM_ENABLED = false; // Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP;
 
-  public static final boolean SEARCH_BY_AVAILABLE = false;
-
   public static final boolean ALLOW_DEBUG_DC = BuildConfig.DEBUG || BuildConfig.EXPERIMENTAL;
 
   public static final boolean DEBUG_DISABLE_DOWNLOAD = false; // BuildConfig.DEBUG;

File: app/src/main/java/org/thunderdog/challegram/navigation/TelegramViewController.java
Patch:
@@ -386,7 +386,8 @@ protected void setChatData (ListItem item, VerticalChatView chatView) {
           TGFoundMessage message = (TGFoundMessage) listItem.getData();
           TdApi.Message rawMessage = message.getMessage();
           preventLeavingSearchMode();
-          tdlib.ui().openChat(TelegramViewController.this, rawMessage.chatId, new TdlibUi.ChatOpenParameters().highlightMessage(rawMessage).keepStack());
+          String query = getLastSearchInput();
+          tdlib.ui().openChat(TelegramViewController.this, rawMessage.chatId, new TdlibUi.ChatOpenParameters().foundMessage(query, rawMessage).keepStack());
           break;
         }
       }

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -1467,6 +1467,7 @@ public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.For
     final TdApi.Chat tdChat = chat.getChat();
 
     context.setExcludeHeader(true);
+    context.setShrunkenFooter(true);
 
     if (tdChat != null && tdChat.messageSenderId != null) {
       if (tdlib.isSelfSender(tdChat.messageSenderId)) {

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMembersController.java
Patch:
@@ -394,8 +394,9 @@ protected boolean onLongClick (View v, ListItem item) {
       showOptions(result, ids.get(), strings.get(), colors.get(), icons.get(), (itemView, id) -> {
         switch (id) {
           case R.id.btn_messageViewList:
-            HashtagChatController c = new HashtagChatController(context, tdlib);
-            c.setArguments(new HashtagChatController.Arguments(null, chatId, null, new TdApi.MessageSenderUser(content.getUserId()), false));
+            TdApi.Chat chat = tdlib.chat(chatId);
+            MessagesController c = new MessagesController(context, tdlib);
+            c.setArguments(new MessagesController.Arguments(null, chat, content.getSenderId()));
             if (parent != null) {
               parent.navigateTo(c);
             } else {

File: app/src/main/java/org/thunderdog/challegram/util/text/FormattedText.java
Patch:
@@ -122,14 +122,14 @@ public FormattedText highlight (Highlight highlight) {
       TextEntity[] entities = new TextEntity[highlight.parts.size()];
       for (int i = 0; i < entities.length; i++) {
         Highlight.Part part = highlight.parts.get(i);
-        entities[i] = TextEntity.valueOf(text, part, TextColorSets.Regular.SEARCH_HIGHLIGHT);
+        entities[i] = TextEntity.valueOf(text, part, highlight.getColorSet());
       }
       return new FormattedText(text, entities);
     }
     List<TextEntity> newEntities = new ArrayList<>();
     Collections.addAll(newEntities, entities);
     for (Highlight.Part part : highlight.parts) {
-      addHighlight(newEntities, part, TextColorSets.Regular.SEARCH_HIGHLIGHT);
+      addHighlight(newEntities, part, highlight.getColorSet());
     }
     return new FormattedText(text, newEntities.toArray(new TextEntity[0]));
   }

File: app/src/main/java/org/thunderdog/challegram/widget/AvatarView.java
Patch:
@@ -262,8 +262,7 @@ public void setMessageSender (Tdlib tdlib, @Nullable TdApi.MessageSender sender)
     if (sender == null) {
       receiver.clear();
       return;
-    }
-    
+    };
     if (sender.getConstructor() == TdApi.MessageSenderUser.CONSTRUCTOR) {
       long userId = ((TdApi.MessageSenderUser) sender).userId;
       setUser(tdlib, tdlib.cache().user(userId), userId, false, true);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -662,7 +662,7 @@ public static Object fillMessageOptions (MessagesController m, TGMessage msg, @N
         }
       }
 
-      if (!msg.isChannel() && !msg.isRepliesChat() && msg.canGetMessageThread() && msg.getMessageThreadId() != m.getMessageThreadId()) {
+      if (!msg.isChannel() && !msg.isRepliesChat() && !msg.isThreadHeader() && msg.canGetMessageThread() && msg.getMessageThreadId() != m.getMessageThreadId()) {
         if (msg.isMessageThreadRoot()) {
           int replyCount = msg.getReplyCount();
           if (replyCount > 0) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -2647,6 +2647,8 @@ public void onClickAt (View view, float x, float y) {
               } else {
                 openMessageThread(new MessageId(msg.replyInChatId, msg.replyToMessageId));
               }
+            } else if (isScheduled()) {
+              tdlib.ui().openMessage(controller(), msg.replyInChatId, new MessageId(msg.replyInChatId, msg.replyToMessageId), openParameters());
             } else {
               highlightOtherMessage(msg.replyToMessageId);
             }
@@ -4119,7 +4121,7 @@ public final boolean isMessageThreadRoot () {
   }
 
   public final long getMessageThreadId () {
-    return msg.messageThreadId;
+    return getOldestMessage().messageThreadId;
   }
 
   public final long[] getOtherMessageIds (long exceptMessageId) {

File: app/src/main/java/org/thunderdog/challegram/ui/CreatePollController.java
Patch:
@@ -698,7 +698,7 @@ private void send (TdApi.MessageSendOptions sendOptions, boolean disableMarkdown
               NavigationStack stack = navigationStack();
               if (stack != null) {
                 MessagesController c = new MessagesController(context, tdlib);
-                c.setArguments(new MessagesController.Arguments(args.callback.provideChatList(this), tdlib.chatStrict(args.chatId), messageThread, null, MessagesManager.HIGHLIGHT_MODE_NONE, null).setScheduled(true));
+                c.setArguments(new MessagesController.Arguments(args.callback.provideChatList(this), tdlib.chatStrict(args.chatId), /* messageThread */ null, null, MessagesManager.HIGHLIGHT_MODE_NONE, null).setScheduled(true));
                 stack.insertBack(c);
               }
             }

File: app/src/main/java/org/thunderdog/challegram/data/TGReactions.java
Patch:
@@ -491,7 +491,7 @@ public boolean hasReaction (TdApi.ReactionType reactionType) {
   }
 
   public boolean toggleReaction (TdApi.ReactionType reactionType, boolean isBig, boolean updateRecentReactions, Client.ResultHandler handler) {
-    TdApi.Message message = parent.getFirstMessageInCombined();
+    TdApi.Message message = parent.getOldestMessage();
     boolean hasReaction = !hasReaction(reactionType);
     if (hasReaction) {
       tdlib.client().send(new TdApi.AddMessageReaction(parent.getChatId(), message.id, reactionType, isBig, updateRecentReactions), handler);

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -1702,7 +1702,7 @@ public void onMoreItemPressed (int id) {
         forceAnimationType = ANIMATION_TYPE_FADE;
 
         ViewController<?> c = context.navigation().getCurrentStackItem();
-        if (c instanceof MessagesController && c.getChatId() == item.getSourceChatId()) {
+        if (c instanceof MessagesController && c.getChatId() == item.getSourceChatId() && ((MessagesController) c).getMessageThreadId() == messageThreadId) {
           ((MessagesController) c).highlightMessage(new MessageId(item.getSourceChatId(), item.getSourceMessageId()));
         } else {
           tdlib.ui().openMessage(this, item.getSourceChatId(), new MessageId(item.getSourceChatId(), item.getSourceMessageId()), null);
@@ -8100,6 +8100,7 @@ public static void openFromMessage (TGMessageText msg) {
     if (context instanceof MediaCollectorDelegate) {
       ((MediaCollectorDelegate) context).modifyMediaArguments(msg, args);
     }
+    args.setMessageThreadId(msg.messagesController().getMessageThreadId());
 
     openWithArgs(context, args);
   }
@@ -8160,6 +8161,7 @@ public static void openFromMessage (TGMessageMedia messageContainer, long messag
       ((MediaCollectorDelegate) context).modifyMediaArguments(msg, args);
     }
     args.setFilter(filter);
+    args.setMessageThreadId(messageContainer.messagesController().getMessageThreadId());
 
     openWithArgs(context, args);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/PasscodeController.java
Patch:
@@ -112,7 +112,9 @@ public boolean restoreInstanceState (Bundle in, String keyPrefix) {
     if (passcode == null)
       return false;
     super.restoreInstanceState(in, keyPrefix);
-    TdlibUi.ChatOpenParameters parameters = TdlibUi.ChatOpenParameters.restoreInstanceState(in, keyPrefix);
+    TdlibUi.ChatOpenParameters parameters = TdlibUi.ChatOpenParameters.restoreInstanceState(tdlib, in, keyPrefix);
+    if (parameters == null)
+      return false;
     setArguments(new Args(chat, passcode, parameters));
     return true;
   }

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -2490,7 +2490,7 @@ public void onFactorChangeFinished (int id, float finalFactor, FactorAnimator ca
 
   private boolean canOpenCamera () {
     return !(
-      getCurrentPopupWindow() != null ||
+      // getCurrentPopupWindow() != null ||
       (cameraAnimator != null && cameraAnimator.isAnimating()) ||
       activityState != UI.STATE_RESUMED ||
       recordAudioVideoController.isOpen() ||
@@ -2561,7 +2561,7 @@ private static boolean isAndroidOrientationPortrait (int orientation) {
   }
 
   public boolean startCameraDrag (ViewController.CameraOpenOptions options, boolean isOpen) { // User has slided enough to start dragging
-    if (isCameraOpen == isOpen || !canOpenCamera() || isKeyboardVisible()) {
+    if (isCameraOpen == isOpen || !canOpenCamera() /*|| isKeyboardVisible()*/) {
       return false;
     }
     if (isOpen) {

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomBaseController.java
Patch:
@@ -503,6 +503,9 @@ private void setCurrentHeight (int height, boolean updateMediaLayout) {
     }
   }
 
+  protected void onUpdateBottomBarFactor (float bottomBarFactor, float counterFactor, float y) {
+  }
+
   private boolean animatingHeight;
   private ValueAnimator heightAnimator;
 

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerController.java
Patch:
@@ -314,7 +314,7 @@ public View getCustomHeaderCell () {
   }
 
   @Override
-  protected final int getHeaderHeight () {
+  protected int getHeaderHeight () {
     switch (getTitleStyle()) {
       case TITLE_STYLE_BIG:
       case TITLE_STYLE_COMPACT_BIG:

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -6090,7 +6090,7 @@ public HapticMenuHelper createSimpleHapticMenu (ViewController<?> context, long
         return items;
       }
       return null;
-    }, (menuView, parentView) -> {
+    }, (menuView, parentView, item) -> {
       switch (menuView.getId()) {
         case R.id.btn_sendScheduled:
           if (context != null) {

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsReactedController.java
Patch:
@@ -27,7 +27,7 @@
 
 import me.vkryl.core.StringUtils;
 
-public class MessageOptionsReactedController extends MessageOptionsPagerController.MessageBottomSheetBaseController<Void> implements View.OnClickListener {
+public class MessageOptionsReactedController extends BottomSheetViewController.BottomSheetBaseRecyclerViewController<Void> implements View.OnClickListener {
   private SettingsAdapter adapter;
   private PopupLayout popupLayout;
   private TGMessage message;

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsSeenController.java
Patch:
@@ -20,7 +20,7 @@
 
 import java.util.ArrayList;
 
-public class MessageOptionsSeenController extends MessageOptionsPagerController.MessageBottomSheetBaseController<Void> implements View.OnClickListener {
+public class MessageOptionsSeenController extends BottomSheetViewController.BottomSheetBaseRecyclerViewController<Void> implements View.OnClickListener {
   private SettingsAdapter adapter;
   private PopupLayout popupLayout;
   private TGMessage message;

File: app/src/main/java/org/thunderdog/challegram/ui/RecyclerViewController.java
Patch:
@@ -231,7 +231,7 @@ public View getViewForApplyingOffsets () {
     return recyclerView;
   }
 
-  protected CustomRecyclerView getRecyclerView () {
+  public CustomRecyclerView getRecyclerView () {
     return recyclerView;
   }
 

File: app/src/main/java/org/thunderdog/challegram/util/text/TextColorSets.java
Patch:
@@ -17,6 +17,7 @@
 
 public final class TextColorSets {
   public static final TextColorSetThemed WHITE = () -> R.id.theme_color_white;
+  public static final TextColorSetThemed PLACEHOLDER = () -> R.id.theme_color_textPlaceholder;
 
   // Instant View
   public interface InstantView extends TextColorSetThemed {

File: app/src/main/java/org/thunderdog/challegram/unsorted/Settings.java
Patch:
@@ -6311,7 +6311,7 @@ public void trackInstalledApkVersion () {
     AppBuildInfo buildInfo = new AppBuildInfo(installationId);
     pmc.edit()
       .putLong(KEY_APP_INSTALLATION_ID, installationId)
-      .putLong(KEY_APP_COMMIT_DATE, buildInfo.getCommitDate());
+      .putLong(KEY_APP_COMMIT_DATE, buildInfo.maxCommitDate());
     buildInfo.saveTo(pmc, KEY_APP_INSTALLATION_PREFIX + installationId);
     pmc.apply();
     this.currentBuildInformation = buildInfo;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -7875,7 +7875,7 @@ public void startReactionBubbleAnimation (TdApi.ReactionType reactionType) {
     RunnableData<TGStickerObj> act = overlaySticker -> {
       context().reactionsOverlayManager().addOverlay(
         new ReactionsOverlayView.ReactionInfo(context().reactionsOverlayManager())
-          .setSticker(overlaySticker)
+          .setSticker(overlaySticker, true)
           .setUseDefaultSprayAnimation(tgReaction.isCustom())
           .setPosition(new Point(bubbleX, bubbleY), Screen.dp(90))
           .setAnimatedPositionOffsetProvider(new QuickReactionAnimatedPositionOffsetProvider())

File: app/src/main/java/org/thunderdog/challegram/ui/EditEnabledReactionsController.java
Patch:
@@ -438,7 +438,7 @@ public void onClick (View v) {
             positionCords[0] += v.getMeasuredWidth() / 2;
             positionCords[1] += Screen.dp(40);
             context().reactionsOverlayManager().addOverlay(new ReactionsOverlayView.ReactionInfo(context().reactionsOverlayManager())
-              .setSticker(overlaySticker)
+              .setSticker(overlaySticker, true)
               .setUseDefaultSprayAnimation(overlaySticker.isCustomReaction())
               .setPosition(new Rect(
               positionCords[0] - Screen.dp(50),

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSmallView.java
Patch:
@@ -34,6 +34,7 @@
 import org.thunderdog.challegram.loader.gif.GifFile;
 import org.thunderdog.challegram.loader.gif.GifReceiver;
 import org.thunderdog.challegram.telegram.Tdlib;
+import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.UI;
 
@@ -188,8 +189,8 @@ protected void onDraw (Canvas c) {
     if (saved) {
       c.save();
       float scale = originalScale * (MIN_SCALE + (1f - MIN_SCALE) * (1f - factor));
-      int cx = getMeasuredWidth() / 2;
-      int cy = getPaddingTop() + (getMeasuredHeight() - getPaddingBottom() - getPaddingBottom()) / 2;
+      int cx = imageReceiver.centerX();
+      int cy = imageReceiver.centerY();
       c.scale(scale, scale, cx, cy);
     }
     if (isAnimation) {

File: app/src/main/java/org/thunderdog/challegram/loader/Receiver.java
Patch:
@@ -70,8 +70,9 @@ default void drawPlaceholderContour (Canvas c, Path path) {
 
   default void drawPlaceholderContour (Canvas c, Path path, float alpha) {
     if (path != null) {
-      int left = getLeft();
-      int top = getTop();
+      int size = Math.min(getWidth(), getHeight());
+      int left = centerX() - size / 2;
+      int top = centerY() - size / 2;
       final boolean translate = left != 0 || top != 0;
       final int restoreToCount;
       if (translate) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -6205,7 +6205,7 @@ public boolean pickSchedulingState (ViewController<?> context, RunnableData<TdAp
         }
       }
       if (seconds > 0) {
-        int sendDate = (int) (tdlib.currentTimeMillis() / 1000l + seconds);
+        int sendDate = (int) (tdlib.currentTime(TimeUnit.SECONDS) + seconds);
         callback.runWithData(Td.newSendOptions(defaultSendOptions, new TdApi.MessageSchedulingStateSendAtDate(sendDate)));
       }
       return true;

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -455,7 +455,7 @@ public static void load (SharedPreferences prefs) {
         tags = TAG_NDK | TAG_CRASH;
       } else {
         settings = prefs.getInt(Settings.KEY_LOG_SETTINGS, 0);
-        level = prefs.getInt(Settings.KEY_LOG_LEVEL, Log.LEVEL_WARNING);
+        level = prefs.getInt(Settings.KEY_LOG_LEVEL, Log.LEVEL_VERBOSE);
         long defaultTags = Log.TAG_CRASH | Log.TAG_FCM | Log.TAG_ACCOUNTS;
         if (Config.DEBUG_GALAXY_TAB_2) {
           defaultTags |= Log.TAG_INTRO;

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -1833,7 +1833,7 @@ public void closeStickerPreview () {
 
   // ReactionPreview
 
-  public void openReactionPreview (Tdlib tdlib, StickerSmallView stickerView, TGReaction reaction, int cx, int cy, int maxWidth, int viewportHeight, boolean disableEmojis) {
+  public void openReactionPreview (Tdlib tdlib, StickerSmallView stickerView, TGReaction reaction, @Nullable TGStickerObj effectAnimation, int cx, int cy, int maxWidth, int viewportHeight, boolean disableEmojis) {
     if (stickerPreview != null) {
       return;
     }
@@ -1842,7 +1842,7 @@ public void openReactionPreview (Tdlib tdlib, StickerSmallView stickerView, TGRe
 
     stickerPreview = new StickerPreviewView(this);
     stickerPreview.setControllerView(stickerPreviewControllerView);
-    stickerPreview.setReaction(tdlib, reaction, cx, cy, maxWidth, viewportHeight, disableEmojis);
+    stickerPreview.setReaction(tdlib, reaction, effectAnimation, cx, cy, maxWidth, viewportHeight, disableEmojis);
 
     stickerPreviewWindow = new PopupLayout(this);
     stickerPreviewWindow.setBackListener(stickerPreview);

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerPreviewView.java
Patch:
@@ -357,14 +357,14 @@ public void setSticker (Tdlib tdlib, TGStickerObj sticker, int cx, int cy, int w
     setSticker(sticker, false);
   }
 
-  public void setReaction (Tdlib tdlib, TGReaction reaction, int cx, int cy, int width, int viewportHeight, boolean disableEmojis) {
+  public void setReaction (Tdlib tdlib, TGReaction reaction, @Nullable TGStickerObj effectAnimation, int cx, int cy, int width, int viewportHeight, boolean disableEmojis) {
     this.tdlib = tdlib;
     this.disableEmojis = disableEmojis;
     this.fromCx = cx;
     this.fromCy = cy;
     this.fromWidth = width;
     this.viewportHeight = viewportHeight;
-    setSticker(reaction.activateAnimationSicker(), reaction.effectAnimationSicker(), false);
+    setSticker(reaction.activateAnimationSicker(), effectAnimation != null ? effectAnimation : reaction.effectAnimationSicker(), false);
   }
 
   private LinearLayout menu;

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -286,5 +286,5 @@ public static boolean isThemeDoc (TdApi.Document doc) {
 
   public static final boolean DEBUG_REACTIONS_ANIMATIONS = false;
   public static final boolean TEST_STATIC_REACTIONS = false;
-  public static final boolean TEST_GENERIC_REACTION_EFFECTS = BuildConfig.DEBUG;
+  public static final boolean TEST_GENERIC_REACTION_EFFECTS = false;
 }

File: app/src/main/java/org/thunderdog/challegram/data/TGReaction.java
Patch:
@@ -16,6 +16,7 @@
 import org.thunderdog.challegram.loader.ImageReceiver;
 import org.thunderdog.challegram.loader.gif.GifFile;
 import org.thunderdog.challegram.telegram.Tdlib;
+import org.thunderdog.challegram.util.text.TextMedia;
 
 public class TGReaction {
   private final Tdlib tdlib;
@@ -138,7 +139,8 @@ private TGStickerObj newStaticIconSicker () {
     if (emojiReaction != null) {
       return new TGStickerObj(tdlib, emojiReaction.staticIcon, emojiReaction.emoji, emojiReaction.staticIcon.type).setReactionType(type).setDisplayScale(.5f);
     } else {
-      return new TGStickerObj(tdlib, customReaction, null, customReaction.type).setReactionType(type).setDisplayScale(.5f).setPreviewOptimizationMode(GifFile.OptimizationMode.EMOJI);
+      float displayScale = TextMedia.getScale(customReaction, 0) * .5f;
+      return new TGStickerObj(tdlib, customReaction, null, customReaction.type).setReactionType(type).setDisplayScale(displayScale).setPreviewOptimizationMode(GifFile.OptimizationMode.EMOJI);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/util/text/TextMedia.java
Patch:
@@ -200,7 +200,7 @@ public static float getScale (TdApi.Sticker sticker, int size) {
     // upd: turns out all of the webm emoji fit entire space
     if (Td.isAnimated(sticker.format) &&
         sticker.format.getConstructor() != TdApi.StickerFormatWebm.CONSTRUCTOR) {
-      return 120.0f / 100.0f - (Screen.dp(1f) * 2 / (float) size);
+      return 120.0f / 100.0f - (size != 0 ? Screen.dp(1f) * 2 / (float) size : 0);
     }
     return 1f;
   }

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSmallView.java
Patch:
@@ -41,6 +41,7 @@
 import me.vkryl.android.animator.FactorAnimator;
 import me.vkryl.core.lambda.CancellableRunnable;
 import me.vkryl.core.lambda.Destroyable;
+import me.vkryl.td.Td;
 
 public class StickerSmallView extends View implements FactorAnimator.Target, Destroyable {
   public static final float PADDING = 8f;
@@ -283,7 +284,7 @@ public boolean onTouchEvent (MotionEvent e) {
         closePreview(e);
         if (clicked && callback != null && sticker != null) {
           ViewUtils.onClick(this);
-          callback.onStickerClick(this, this, sticker, false, null);
+          callback.onStickerClick(this, this, sticker, false, Td.newSendOptions());
         }
         return true;
       }

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerPreviewView.java
Patch:
@@ -260,8 +260,8 @@ private void layoutReceivers () {
       int cx = getStickerCenterX();
       int cy = getStickerCenterY();
 
-      stickerWidth = currentSticker.getWidth();
-      stickerHeight = currentSticker.getHeight();
+      stickerWidth = (int) Math.floor(currentSticker.getWidth() * currentSticker.getDisplayScale());
+      stickerHeight = (int) Math.floor(currentSticker.getHeight() * currentSticker.getDisplayScale());
 
       stickerMaxWidth = Math.min(Screen.dp(190f), Screen.smallestSide() - Screen.dp(86f));
       if (Math.max(stickerWidth, stickerHeight) != stickerMaxWidth) {

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSmallView.java
Patch:
@@ -182,10 +182,11 @@ private void measureReceivers () {
 
   @Override
   protected void onDraw (Canvas c) {
-    boolean saved = factor != 0f;
+    float originalScale = sticker != null ? sticker.getDisplayScale() : 1f;
+    boolean saved = originalScale != 1f || factor != 0f;
     if (saved) {
       c.save();
-      float scale = MIN_SCALE + (1f - MIN_SCALE) * (1f - factor);
+      float scale = originalScale * (MIN_SCALE + (1f - MIN_SCALE) * (1f - factor));
       int cx = getMeasuredWidth() / 2;
       int cy = getPaddingTop() + (getMeasuredHeight() - getPaddingBottom() - getPaddingBottom()) / 2;
       c.scale(scale, scale, cx, cy);

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -285,4 +285,5 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean PROFILE_DEADLOCKS = true;
 
   public static final boolean DEBUG_REACTIONS_ANIMATIONS = false;
+  public static final boolean TEST_STATIC_REACTIONS = false;
 }

File: app/src/main/java/org/thunderdog/challegram/ui/EditEnabledReactionsController.java
Patch:
@@ -170,12 +170,11 @@ protected void setReaction (ListItem item, int position, ReactionCheckboxSetting
                   break;
                 }
                 case TdApi.ChatAvailableReactionsSome.CONSTRUCTOR: {
-
+                  userView.setChecked(enabledReactions.contains(reactionKey), isUpdate);
                   break;
                 }
               }
             }
-            userView.setChecked(enabledReactions.contains(reactionKey), isUpdate);
           } else if (type == TYPE_QUICK_REACTION) {
             int index = quickReactions.indexOf(reactionKey);
             userView.setNumber(index >= 0 ? index + 1 : index, isUpdate);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsThemeController.java
Patch:
@@ -553,6 +553,8 @@ protected void setValuedSetting (ListItem item, SettingView v, boolean isUpdate)
           items.add(new ListItem(ListItem.TYPE_SEPARATOR_FULL));
           items.add(new ListItem(ListItem.TYPE_VALUED_SETTING_COMPACT, R.id.btn_icon, 0, R.string.Icons).setDrawModifier(new DrawableModifier(R.drawable.baseline_star_20, R.drawable.baseline_account_balance_wallet_20, R.drawable.baseline_location_on_20, R.drawable.baseline_favorite_20)));
         }
+      }
+      if (!tdlib.account().isDebug() || BuildConfig.DEBUG) {
         items.add(new ListItem(ListItem.TYPE_SEPARATOR_FULL));
         items.add(new ListItem(ListItem.TYPE_VALUED_SETTING_COMPACT, R.id.btn_quick_reaction, 0, R.string.QuickReaction));
       }

File: app/src/main/java/org/thunderdog/challegram/widget/ReactionCheckboxSettingsView.java
Patch:
@@ -153,9 +153,6 @@ public void setReaction (TGReaction reaction) {
       if (!activateAnimationSticker.isCustomReaction()) {
         activateAnimationSticker.getPreviewAnimation().setPlayOnce(true);
       }
-      stickerSmallView.setPadding(0);
-    } else {
-      stickerSmallView.setPadding(Screen.dp(12));
     }
     stickerSmallView.setSticker(activateAnimationSticker);
     setCaptionText(reaction.getTitle());

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -283,4 +283,6 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final String FILE_PROVIDER_AUTHORITY = BuildConfig.APPLICATION_ID + ".provider";
 
   public static final boolean PROFILE_DEADLOCKS = true;
+
+  public static final boolean DEBUG_REACTIONS_ANIMATIONS = false;
 }

File: app/src/main/java/org/thunderdog/challegram/v/MessagesRecyclerView.java
Patch:
@@ -20,7 +20,6 @@
 import android.view.MotionEvent;
 import android.view.View;
 
-import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
@@ -43,7 +42,7 @@
 import me.vkryl.core.MathUtils;
 
 public class MessagesRecyclerView extends RecyclerView implements FactorAnimator.Target {
-  public static final long ITEM_ANIMATOR_DURATION = 140L;
+  public static final long ITEM_ANIMATOR_DURATION = Config.DEBUG_REACTIONS_ANIMATIONS ? 1400l : 140L;
 
   private MessagesManager manager;
   private CustomTouchHelper touchHelper;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -2445,7 +2445,7 @@ public boolean performLongPress (View view, float x, float y) {
       result = inlineKeyboard.performLongPress(view);
     }
     if (messageReactions.getTotalCount() > 0 && useReactionBubbles()) {
-      result = messageReactions.performLongPress(view);
+      result = messageReactions.performLongPress(view) || result;
     }
     if (hasFooter()) {
       result = footerText.performLongPress(view) || result;

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsThemeController.java
Patch:
@@ -186,7 +186,7 @@ protected void setValuedSetting (ListItem item, SettingView v, boolean isUpdate)
               final List<TGReaction> tgReactions = new ArrayList<>(reactions.length);
               for (String reactionKey : reactions) {
                 TdApi.ReactionType reactionType = TD.toReactionType(reactionKey);
-                final TGReaction tgReaction = tdlib.getReaction(reactionType);
+                final TGReaction tgReaction = tdlib.getReaction(reactionType, false);
                 if (tgReaction != null) {
                   tgReactions.add(tgReaction);
                   if (stringBuilder.length() > 0) {
@@ -196,7 +196,7 @@ protected void setValuedSetting (ListItem item, SettingView v, boolean isUpdate)
                 }
               }
               v.setDrawModifier(new ReactionModifier(v.getComplexReceiver(), tgReactions.toArray(new TGReaction[0])));
-              v.setData(stringBuilder);
+              v.setData(stringBuilder.toString());
             } else {
               v.setDrawModifier(null);
               v.setData(R.string.QuickReactionDisabled);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -534,9 +534,7 @@ private boolean onMessageClickImpl (float x, float y, @Nullable TdApi.ChatMember
     StringList strings = new StringList(6);
     Object tag = fillMessageOptions(m, msg, sender, ids, icons, strings, false);
     if (!ids.isEmpty()) {
-      // FIXME do not rely on chat.availableReactions
-      boolean withReactions = msg.tdlib().chatReactionsEnabled(msg.getChatId());
-      m.showMessageOptions(msg, ids.get(), strings.get(), icons.get(), tag, sender, false, withReactions);
+      m.showMessageOptions(msg, ids.get(), strings.get(), icons.get(), tag, sender, false);
       return true;
     }
     return false;

File: app/src/main/java/org/thunderdog/challegram/component/sticker/TGStickerObj.java
Patch:
@@ -57,8 +57,9 @@ public TGStickerObj (Tdlib tdlib, @Nullable TdApi.Sticker sticker, TdApi.Sticker
     set(tdlib, sticker, stickerType, emojis);
   }
 
-  public void setReactionType (TdApi.ReactionType reactionType) {
+  public TGStickerObj setReactionType (TdApi.ReactionType reactionType) {
     this.reactionType = reactionType;
+    return this;
   }
 
   public TdApi.ReactionType getReactionType () {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibEmojiReactionManager.java
Patch:
@@ -28,6 +28,8 @@ public Entry (@NonNull String key, @Nullable TdApi.EmojiReaction value, @Nullabl
     }
   }
 
+  public interface Watcher extends TdlibDataManager.Watcher<String, TdApi.EmojiReaction, TdlibEmojiReactionManager.Entry> { }
+
   public TdlibEmojiReactionManager (Tdlib tdlib) {
     super(tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/EditEnabledReactionsController.java
Patch:
@@ -116,7 +116,7 @@ protected void onCreateView (Context context, FrameLayoutFix contentView, Recycl
         break;
       }
       case TYPE_QUICK_REACTION: {
-        String[] quickReactions = Settings.instance().getQuickReactions();
+        String[] quickReactions = Settings.instance().getQuickReactions(tdlib);
         this.quickReactions.addAll(Arrays.asList(quickReactions));
         break;
       }
@@ -316,7 +316,7 @@ public void onClick (View v) {
 
     if (viewId == R.id.btn_quick_reaction_enabled) {
       if (quickReactions.isEmpty()) {
-        quickReactions.add("\uD83D\uDC4D");
+        quickReactions.add(tdlib.defaultEmojiReaction());
       } else {
         quickReactions.clear();
       }

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4193,7 +4193,7 @@ public void showMessageOptions (TGMessage msg, int[] ids, String[] options, int[
       msg.checkAvailableReactions(() -> {
         if (withReactions && msg.canBeReacted() && msg.getMessageAvailableReactions().length > 0) {
           Options messageOptions = getOptions(StringUtils.isEmpty(text) ? null : text, ids, options, null, icons);
-          showMessageOptions(messageOptions, selectedMessage);
+          showMessageOptions(messageOptions, msg);
         } else {
           PopupLayout popupLayout = showOptions(StringUtils.isEmpty(text) ? null : text, ids, options, null, icons);
           patchReadReceiptsOptions(popupLayout, msg, disableViewCounter);

File: app/src/main/java/org/thunderdog/challegram/emoji/EmojiSpan.java
Patch:
@@ -34,6 +34,7 @@ default boolean belongsToSurface (CustomEmojiSurfaceProvider customEmojiSurfaceP
   default void requestCustomEmoji (ComplexReceiver receiver, int mediaKey) {
     receiver.clearReceivers(mediaKey);
   }
+  EmojiSpan toBuiltInEmojiSpan ();
 
   default boolean needRefresh () {
     return false;

File: app/src/main/java/org/thunderdog/challegram/widget/BetterChatView.java
Patch:
@@ -60,6 +60,7 @@
 import org.thunderdog.challegram.util.text.FormattedText;
 import org.thunderdog.challegram.util.text.Highlight;
 import org.thunderdog.challegram.util.text.Text;
+import org.thunderdog.challegram.util.text.TextColorSet;
 import org.thunderdog.challegram.util.text.TextColorSets;
 
 import java.util.concurrent.TimeUnit;
@@ -404,7 +405,8 @@ protected void onDraw (Canvas c) {
         subtitleLeft += Screen.dp(20f);
       }
       int subtitleTop = Screen.dp(39f) + subtitleOffset;
-      displaySubtitle.draw(c, subtitleLeft, subtitleTop, null, 1f, subtitleMediaReceiver);
+      TextColorSet colorSet = BitwiseUtils.getFlag(flags, FLAG_ONLINE) ? TextColorSets.Regular.NEUTRAL : null;
+      displaySubtitle.draw(c, subtitleLeft, subtitleTop,  colorSet, 1f, subtitleMediaReceiver);
     }
     if (subtitleIcon != 0) {
       Drawables.drawRtl(c, subtitleIconDrawable, Screen.dp(72f), Screen.dp(subtitleIcon == R.drawable.baseline_call_missed_18 ? 40f : 39f) + subtitleOffset, PorterDuffPaint.get(subtitleIconColorId), width, rtl);

File: app/src/main/java/org/thunderdog/challegram/component/chat/InputView.java
Patch:
@@ -519,7 +519,7 @@ protected void onSelectionChanged (int selStart, int selEnd) {
 
   public boolean canFormatText () {
     TextSelection selection = getTextSelection();
-    return selection != null && selection.end <= getText().length();
+    return selection != null && !selection.isEmpty() && selection.end <= getText().length();
   }
 
   private boolean allowsAnyGravity;

File: app/src/main/java/org/thunderdog/challegram/tool/Views.java
Patch:
@@ -176,15 +176,15 @@ public static TextSelection getSelection (android.widget.TextView editText) {
   }
 
   public static boolean getSelection (android.widget.TextView editText, TextSelection selection) {
-    int start = editText.getSelectionEnd();
+    int start = editText.getSelectionStart();
     int end = editText.getSelectionEnd();
     if (end < 0) {
       end = start;
     }
     if (start < 0) {
       return false;
     }
-    if (start >= end) {
+    if (start <= end) {
       selection.set(start, end);
     } else {
       // some IMEs may incorrectly set Selection.END before Selection.START

File: app/src/main/java/org/thunderdog/challegram/navigation/EditHeaderView.java
Patch:
@@ -178,7 +178,7 @@ public void setInput (String text) {
     if (text != null) {
       flags |= FLAG_IGNORE_READY;
       input.setText(text);
-      Views.setSelection(input, text.length());
+      input.setSelection(text.length());
       flags &= ~FLAG_IGNORE_READY;
     }
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewController.java
Patch:
@@ -1099,7 +1099,7 @@ private void clearSearchInput (String text, boolean reset) {
       }
       searchHeaderView.setText(text);
       if (!text.isEmpty()) {
-        Views.setSelection(searchHeaderView, text.length());
+        searchHeaderView.setSelection(text.length());
       }
       updateClearSearchButton(!text.isEmpty(), false);
     }
@@ -1512,7 +1512,7 @@ public MaterialEditTextGroup openInputAlert (CharSequence title, CharSequence pl
     inputView.getEditText().setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS);
     if (!StringUtils.isEmpty(value)) {
       inputView.setText(value);
-      Views.setSelection(inputView.getEditText(), 0, value.length());
+      inputView.getEditText().setSelection(0, value.length());
     }
     inputView.getEditText().addTextChangedListener(new TextWatcher() {
       @Override

File: app/src/main/java/org/thunderdog/challegram/ui/CreateChannelController.java
Patch:
@@ -264,7 +264,7 @@ public ImageFile getImageFile () {
   public void setDescription (String description) {
     if (description != null) {
       descView.setText(description);
-      Views.setSelection(descView, description.length());
+      descView.setSelection(description.length());
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -486,7 +486,7 @@ protected SettingHolder initCustom (ViewGroup parent) {
             if (bestIndex != -1) {
               int selectionIndex = bestIndex;
               tdlib.ui().post(() -> {
-                Views.setSelection(v, selectionIndex);
+                v.setSelection(selectionIndex);
               });
             }
           }

File: app/src/main/java/org/thunderdog/challegram/widget/MaterialEditTextGroup.java
Patch:
@@ -493,7 +493,7 @@ public void setText (CharSequence text) {
 
   private void setTextImpl (CharSequence text) {
     editText.setText(text);
-    Views.setSelection(editText, text != null ? text.length() : 0);
+    editText.setSelection(text != null ? text.length() : 0);
   }
 
   public void setText (CharSequence text, boolean animated) {
@@ -747,7 +747,7 @@ private void applyPending () {
       editText.setIsPassword(pendingTextIsPassword);
       if (!StringUtils.isEmpty(pendingText)) {
         editText.setText(pendingText);
-        Views.setSelection(editText, pendingText.length());
+        editText.setSelection(pendingText.length());
       } else {
         editText.setText("");
       }

File: app/src/main/java/org/thunderdog/challegram/N.java
Patch:
@@ -67,7 +67,7 @@ public static int pinBitmapIfNeeded (Bitmap bitmap) {
 
   // gif.c
   public static native void gifInit ();
-  public static native long createDecoder (String path, int[] metadata);
+  public static native long createDecoder (String path, int[] metadata, double startMediaTimestamp);
   public static native long createLottieDecoder (String path, String jsonData, double[] metadata, int fitzpatrickType);
   public static native void getLottieSize (long ptr, int[] size);
   public static native void cancelLottieDecoder (long ptr);

File: app/src/main/java/org/thunderdog/challegram/component/base/SettingView.java
Patch:
@@ -261,7 +261,7 @@ public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/component/popups/JoinRequestsComponent.java
Patch:
@@ -414,7 +414,7 @@ public void onResult (TdApi.Object object) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     adapter.updateAllValuedSettingsById(R.id.user);
   }
 }

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerPreviewView.java
Patch:
@@ -466,7 +466,7 @@ public void getOutline (View view, android.graphics.Outline outline) {
           if (controllerView != null) {
             ViewController<?> context = findRoot();
             if (context != null) {
-              tdlib.ui().showStickerSet(context, sticker.getStickerSetId());
+              tdlib.ui().showStickerSet(context, sticker.getStickerSetId(), null);
               closePreviewIfNeeded();
             }
           }

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSetWrap.java
Patch:
@@ -39,6 +39,7 @@
 import org.thunderdog.challegram.support.ViewSupport;
 import org.thunderdog.challegram.telegram.Tdlib;
 import org.thunderdog.challegram.telegram.TdlibDelegate;
+import org.thunderdog.challegram.telegram.TdlibUi;
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.theme.ThemeListenerList;
 import org.thunderdog.challegram.tool.Fonts;
@@ -189,8 +190,7 @@ public boolean onStickerClick (View view, TGStickerObj sticker, boolean isMenuCl
     NavigationController navigation = UI.getContext(getContext()).navigation();
     if (navigation != null) {
       ViewController<?> c = navigation.getCurrentStackItem();
-      if (c != null && sticker.isPremium() && !tdlib.hasPremium()) {
-        tdlib.ui().showPremiumAlert(c, view);
+      if (c != null && sticker.isPremium() && tdlib.ui().showPremiumAlert(c, view, TdlibUi.PremiumFeature.STICKER)) {
         return false;
       }
       if (c instanceof MessagesController && ((MessagesController) c).canWriteMessages()) {
@@ -464,7 +464,7 @@ public void initWithInfo (TdApi.StickerSetInfo info) {
   }
 
   public void initWithSet (TdApi.StickerSet set) {
-    this.info = new TdApi.StickerSetInfo(set.id, set.title, set.name, set.thumbnail, set.thumbnailOutline, set.isInstalled, set.isArchived, set.isOfficial, set.stickerType, false, set.stickers.length, null);
+    this.info = new TdApi.StickerSetInfo(set.id, set.title, set.name, set.thumbnail, set.thumbnailOutline, set.isInstalled, set.isArchived, set.isOfficial, set.stickerFormat, set.stickerType, false, set.stickers.length, null);
     updateButton(false);
     stickersController.setStickerSetInfo(info);
     stickersController.setStickers(set.stickers, info.stickerType, set.emojis);

File: app/src/main/java/org/thunderdog/challegram/data/InlineResultCommon.java
Patch:
@@ -416,7 +416,7 @@ public InlineResultCommon (BaseActivity context, Tdlib tdlib, MediaBottomFilesCo
       this.fileProgress.setBackgroundColorId(R.id.theme_color_file);
     }
     String fileName = U.getFileName(entry.getPath());
-    TdApi.Audio audio = new TdApi.Audio((int) (entry.getDuration() / 1000l), entry.getTitle(), entry.getArtist(), fileName, U.resolveMimeType(U.getExtension(fileName)), null, null, targetFile);
+    TdApi.Audio audio = new TdApi.Audio((int) (entry.getDuration() / 1000l), entry.getTitle(), entry.getArtist(), fileName, U.resolveMimeType(U.getExtension(fileName)), null, null, null, targetFile);
     TdApi.Message message = TD.newFakeMessage(audio);
     message.id = entry.getId();
     this.fileProgress.setPlayPauseFile(message, builder);

File: app/src/main/java/org/thunderdog/challegram/data/MediaWrapper.java
Patch:
@@ -302,7 +302,7 @@ public MediaWrapper (BaseActivity context, Tdlib tdlib, @NonNull TdApi.Animation
     this.targetGifFile = new GifFile(tdlib, animation);
     this.targetGifFile.setScaleType(ImageFile.CENTER_CROP);
     if (Math.max(animation.width, animation.height) > 1280) {
-      this.targetGifFile.setSize(1280);
+      this.targetGifFile.setRequestedSize(1280);
     }
 
     this.contentWidth = animation.width;

File: app/src/main/java/org/thunderdog/challegram/data/TGAudio.java
Patch:
@@ -59,7 +59,7 @@ public TGAudio (Tdlib tdlib, TdApi.Message msg, TdApi.Audio audio) {
   public TGAudio (Tdlib tdlib, TGRecord record) {
     this.tdlib = tdlib;
     this.msg = null;
-    this.voice = new TdApi.VoiceNote(record.getDuration(), null, "audio/ogg", false, "", TD.newFile(record.getFile()));
+    this.voice = new TdApi.VoiceNote(record.getDuration(), null, "audio/ogg", null, TD.newFile(record.getFile()));
   }
 
   public Tdlib tdlib () {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageContact.java
Patch:
@@ -88,7 +88,7 @@ public void onUserUpdated (final TdApi.User user) {
         TGMessageContact.this.user = user;
         buildAvatar();
         // buildName();
-        invalidateContent();
+        invalidateContent(this);
         invalidate();
       }
     });

File: app/src/main/java/org/thunderdog/challegram/data/TGSourceHidden.java
Patch:
@@ -32,12 +32,14 @@ public TGSourceHidden (TGMessage msg, TdApi.MessageForwardOriginHiddenUser forwa
     super(msg);
     this.name = forward.senderName;
     this.isImported = false;
+    this.isReady = true;
   }
 
   public TGSourceHidden (TGMessage msg, TdApi.MessageForwardOriginMessageImport messageImport) {
     super(msg);
     this.name = messageImport.senderName;
     this.isImported = true;
+    this.isReady = true;
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/emoji/EmojiBitmaps.java
Patch:
@@ -25,6 +25,7 @@
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.core.Media;
+import org.thunderdog.challegram.telegram.TGLegacyManager;
 import org.thunderdog.challegram.tool.EmojiCode;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.UI;
@@ -141,7 +142,7 @@ private void loadEmoji (int page1, int page2) {
       } else {
         bitmaps[page1][page2] = resultFinal;
       }
-      UI.emojiLoaded(false);
+      TGLegacyManager.instance().notifyEmojiChanged(false);
     });
   }
 }

File: app/src/main/java/org/thunderdog/challegram/emoji/EmojiInputConnection.java
Patch:
@@ -31,7 +31,6 @@ public EmojiInputConnection (
     @NonNull final InputConnection inputConnection) {
     super(inputConnection, false);
     mTextView = textView;
-    // EmojiCompat.get().updateEditorInfoAttrs(outAttrs);
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/filegen/GenerationInfo.java
Patch:
@@ -26,7 +26,8 @@ public abstract class GenerationInfo {
   static final String TYPE_MUSIC_THUMB = "mthumb";
   static final String TYPE_VIDEO = "video";
   static final String TYPE_AVATAR = "avatar";
-  public static final String TYPE_STICKER_PREVIEW = "asthumb";
+  public static final String TYPE_LOTTIE_STICKER_PREVIEW = "asthumb";
+  public static final String TYPE_VIDEO_STICKER_PREVIEW = "vsthumb";
 
   protected final long generationId;
   protected final String originalPath;

File: app/src/main/java/org/thunderdog/challegram/helper/BotHelper.java
Patch:
@@ -27,7 +27,6 @@
 import org.thunderdog.challegram.telegram.TdlibCache;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.ui.MessagesController;
-import org.thunderdog.challegram.util.text.Text;
 
 import java.util.ArrayList;
 
@@ -177,7 +176,7 @@ private void processUserFull (TdApi.UserFullInfo full) {
 
     if (full.botInfo != null) {
       if (!StringUtils.isEmpty(full.botInfo.description) && !context.areScheduledOnly()) {
-        this.botInfoMessage = new TGMessageBotInfo(context.getManager(), chatId, new TdApi.FormattedText(full.botInfo.description, Text.findEntities(full.botInfo.description, Text.ENTITY_FLAGS_ALL)));
+        this.botInfoMessage = new TGMessageBotInfo(context.getManager(), chatId, full.botInfo.description);
       }
 
       if (full.botInfo.commands.length > 0) {

File: app/src/main/java/org/thunderdog/challegram/helper/InlineSearchContext.java
Patch:
@@ -52,7 +52,6 @@
 import org.thunderdog.challegram.navigation.ViewController;
 import org.thunderdog.challegram.player.TGPlayerController;
 import org.thunderdog.challegram.telegram.Tdlib;
-import org.thunderdog.challegram.tool.EmojiData;
 import org.thunderdog.challegram.tool.Intents;
 import org.thunderdog.challegram.tool.Strings;
 import org.thunderdog.challegram.tool.UI;
@@ -224,7 +223,7 @@ public void onTextChanged (CharSequence newCs, String newText, @IntRange(from =
 
       // Do nothing with empty text
       setCurrentMode(MODE_NONE);
-    } else if (EmojiData.isEmojiString(newCs)) {
+    } else if (Emoji.instance().isSingleEmoji(newCs, false)) {
       probablyHasWebPagePreview = false;
       clearInlineMode();
 
@@ -441,11 +440,12 @@ public void processResult (TdApi.Object object) {
         }
       }
     };
+    final long chatId = callback.provideInlineSearchChatId();
     TdApi.Function<?> function;
     if (more) {
       function = new TdApi.SearchStickers(emoji, 1000);
     } else {
-      function = new TdApi.GetStickers(emoji, 1000);
+      function = new TdApi.GetStickers(new TdApi.StickerTypeRegular(), emoji, 1000, chatId);
     }
     tdlib.client().send(function, stickerRequest);
   }

File: app/src/main/java/org/thunderdog/challegram/loader/Receiver.java
Patch:
@@ -33,6 +33,8 @@ public interface Receiver extends TooltipOverlayView.LocationProvider {
   int getTargetWidth ();
   int getTargetHeight ();
 
+  void setUpdateListener (ReceiverUpdateListener listener);
+
   int getLeft ();
   int getTop ();
   int getRight ();
@@ -73,7 +75,7 @@ default void drawPlaceholderContour (Canvas c, Path path, float alpha) {
       final boolean translate = left != 0 || top != 0;
       final int restoreToCount;
       if (translate) {
-        restoreToCount = c.save();
+        restoreToCount = Views.save(c);
         c.translate(left, top);
       } else {
         restoreToCount = -1;

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerHeaderView.java
Patch:
@@ -109,7 +109,7 @@ protected int getFillingColor () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerItemView.java
Patch:
@@ -68,7 +68,7 @@ public DrawerItemView (Context context, Tdlib tdlib) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/HeaderFilling.java
Patch:
@@ -145,7 +145,7 @@ public HeaderFilling (HeaderView parent, @Nullable NavigationController navigati
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidateOngoingBar();
   }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/CleanupStartupDelegate.java
Patch:
@@ -18,15 +18,15 @@ public interface CleanupStartupDelegate {
   /**
    * Called when component has been initialized and authorization became ready
    * */
-  void onPerformStartup (boolean isAfterRestart);
+  default void onPerformStartup (boolean isAfterRestart) { }
 
   /**
    * Called when component should reset any user-related settings
    */
-  void onPerformUserCleanup ();
+  default void onPerformUserCleanup () { }
 
   /**
    * Called when TDLib client instance has been restarted
    */
-  void onPerformRestart ();
+  default void onPerformRestart () { }
 }

File: app/src/main/java/org/thunderdog/challegram/telegram/RightId.java
Patch:
@@ -35,6 +35,7 @@
   R.id.right_banUsers,
   R.id.right_inviteUsers,
   R.id.right_pinMessages,
-  R.id.right_addNewAdmins
+  R.id.right_addNewAdmins,
+  R.id.right_sendVoiceVideo // Fake right id for UserFullInfo.hasRestrictedVoiceAndVideoNoteMessages
 })
 public @interface RightId {}

File: app/src/main/java/org/thunderdog/challegram/telegram/StickersListener.java
Patch:
@@ -17,10 +17,10 @@
 import org.drinkless.td.libcore.telegram.TdApi;
 
 public interface StickersListener {
-  default void onInstalledStickerSetsUpdated (long[] stickerSetIds, boolean isMasks) { }
+  default void onInstalledStickerSetsUpdated (long[] stickerSetIds, TdApi.StickerType stickerType) { }
   default void onRecentStickersUpdated (int[] stickerIds, boolean isAttached) { }
   default void onFavoriteStickersUpdated (int[] stickerIds) { }
-  default void onTrendingStickersUpdated (TdApi.TrendingStickerSets stickerSets, int unreadCount) { }
+  default void onTrendingStickersUpdated (TdApi.StickerType stickerType, TdApi.TrendingStickerSets stickerSets, int unreadCount) { }
   default void onStickerSetUpdated (TdApi.StickerSet stickerSet) { }
   default void onStickerSetArchived (TdApi.StickerSetInfo stickerSet) { }
   default void onStickerSetRemoved (TdApi.StickerSetInfo stickerSet) { }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibListeners.java
Patch:
@@ -1466,7 +1466,7 @@ void updateConnectionType (@NonNull TdApi.NetworkType networkType) {
 
   void updateInstalledStickerSets (TdApi.UpdateInstalledStickerSets update) {
     for (StickersListener listener : stickersListeners) {
-      listener.onInstalledStickerSetsUpdated(update.stickerSetIds, update.isMasks);
+      listener.onInstalledStickerSetsUpdated(update.stickerSetIds, update.stickerType);
     }
   }
 
@@ -1518,7 +1518,7 @@ void updateRecentStickers (TdApi.UpdateRecentStickers update) {
 
   void updateTrendingStickerSets (TdApi.UpdateTrendingStickerSets update, int unreadCount) {
     for (StickersListener listener : stickersListeners) {
-      listener.onTrendingStickersUpdated(update.stickerSets, unreadCount);
+      listener.onTrendingStickersUpdated(update.stickerType, update.stickerSets, unreadCount);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationHelper.java
Patch:
@@ -25,8 +25,8 @@
 
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.drinkmore.Tracer;
-import org.thunderdog.challegram.BuildConfig;
 import org.thunderdog.challegram.Log;
+import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.unsorted.Passcode;
 import org.thunderdog.challegram.unsorted.Settings;
@@ -82,7 +82,7 @@ private int indexOfNotification (int notificationId) {
   }
 
   private static boolean accept (TdApi.NotificationGroupType type) {
-    if (BuildConfig.EXPERIMENTAL) {
+    if (Config.FORCE_DISABLE_NOTIFICATIONS) {
       // Ignore all notifications in experimental builds
       return false;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/ChatLinksController.java
Patch:
@@ -139,7 +139,7 @@ public void onLinkCreated (TdApi.ChatInviteLink newLink, @Nullable TdApi.ChatInv
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     adapter.updateValuedSettingByLongId(chatId);
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -2576,7 +2576,7 @@ public void destroy () {
   // Updates
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (chatsView != null) {
       chatsView.invalidateAll();
     }

File: app/src/main/java/org/thunderdog/challegram/ui/EditSessionController.java
Patch:
@@ -187,10 +187,10 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
 
         switch (item.getId()) {
           case R.id.btn_sessionDevice:
-            view.setText(new TextWrapper(session.deviceModel, TGMessage.simpleTextStyleProvider(), TextColorSets.Regular.NORMAL, null));
+            view.setText(new TextWrapper(session.deviceModel, TGMessage.simpleTextStyleProvider(), TextColorSets.Regular.NORMAL));
             break;
           case R.id.btn_sessionApp:
-            view.setText(new TextWrapper(session.applicationName + " " + session.applicationVersion, TGMessage.simpleTextStyleProvider(), TextColorSets.Regular.NORMAL, null));
+            view.setText(new TextWrapper(session.applicationName + " " + session.applicationVersion, TGMessage.simpleTextStyleProvider(), TextColorSets.Regular.NORMAL));
             break;
           case R.id.btn_sessionPlatform:
             view.setData(R.string.SessionSystem);

File: app/src/main/java/org/thunderdog/challegram/ui/EncryptionKeyController.java
Patch:
@@ -166,7 +166,7 @@ public void destroy () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (bottomText != null)
       bottomText.invalidate();
     if (rightText != null)

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsReactedController.java
Patch:
@@ -132,7 +132,7 @@ public int getId () {
   }
 
   @Override
-  public int getItemsHeight () {
+  public int getItemsHeight (RecyclerView recyclerView) {
     if (adapter.getItems().size() == 0) {
       return 0;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsSeenController.java
Patch:
@@ -3,6 +3,8 @@
 import android.content.Context;
 import android.view.View;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.component.popups.MessageSeenController;
@@ -96,7 +98,7 @@ public void onClick (View v) {
   }
 
   @Override
-  public int getItemsHeight () {
+  public int getItemsHeight (RecyclerView recyclerView) {
     if (adapter.getItems().size() == 0) {
       return 0;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/PasscodeController.java
Patch:
@@ -69,7 +69,7 @@
 import org.thunderdog.challegram.util.StringList;
 import org.thunderdog.challegram.util.ToggleDelegate;
 import org.thunderdog.challegram.util.Unlockable;
-import org.thunderdog.challegram.v.EditTextBase;
+import org.thunderdog.challegram.v.EditText;
 import org.thunderdog.challegram.widget.SwirlView;
 
 import me.vkryl.android.AnimatorUtils;
@@ -296,11 +296,11 @@ private void setMode (int mode) {
   }
 
   private String confirmPassword;
-  private EditTextBase passwordView;
+  private EditText passwordView;
 
   private void showPasswordWrap () {
     if (passwordView == null) {
-      passwordView = (EditTextBase) Views.inflate(context(), R.layout.input_password, contentView);
+      passwordView = (EditText) Views.inflate(context(), R.layout.input_password, contentView);
       passwordView.setTypeface(Fonts.getRobotoRegular());
       passwordView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16f);
       passwordView.setUseIncognitoKeyboard(EditorInfo.IME_FLAG_NO_EXTRACT_UI);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsAdapter.java
Patch:
@@ -220,7 +220,7 @@ public void setClickHelperDelegate (@Nullable ClickHelper.Delegate clickHelperDe
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     for (RecyclerView parentView : parentViews) {
       LinearLayoutManager manager = (LinearLayoutManager) parentView.getLayoutManager();
       final int first = manager.findFirstVisibleItemPosition();

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsCacheController.java
Patch:
@@ -1161,7 +1161,7 @@ public void destroy () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (headerCell != null) {
       headerCell.invalidate();
     }

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntity.java
Patch:
@@ -331,7 +331,9 @@ public static boolean equals (TextEntity a, TextEntity b, int compareMode, Strin
     if (compareMode == COMPARE_MODE_CLICK_HIGHLIGHT) {
       // FIXME: merge TextEntityCustom & TextEntityMessage into one class instead for clarity purposes.
       ClickableSpan onClickListener = a.getOnClickListener();
-      return onClickListener != null && onClickListener == b.getOnClickListener();
+      if (onClickListener != null && onClickListener == b.getOnClickListener()) {
+        return true;
+      }
     }
     if (a.getType() == b.getType()) {
       return a.equals(b, compareMode, originalText);

File: app/src/main/java/org/thunderdog/challegram/data/TGSourceHidden.java
Patch:
@@ -32,12 +32,14 @@ public TGSourceHidden (TGMessage msg, TdApi.MessageForwardOriginHiddenUser forwa
     super(msg);
     this.name = forward.senderName;
     this.isImported = false;
+    this.isReady = true;
   }
 
   public TGSourceHidden (TGMessage msg, TdApi.MessageForwardOriginMessageImport messageImport) {
     super(msg);
     this.name = messageImport.senderName;
     this.isImported = true;
+    this.isReady = true;
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4474,7 +4474,7 @@ private void copySelectedMessages () {
         b.append(" ]");
       }
       TdApi.FormattedText text = Td.textOrCaption(msg.content);
-      if (msg.content.getConstructor() != TdApi.MessageText.CONSTRUCTOR) {
+      if (msg.content.getConstructor() != TdApi.MessageText.CONSTRUCTOR && msg.content.getConstructor() != TdApi.MessageAnimatedEmoji.CONSTRUCTOR) {
         b.append("\n[");
         b.append(TD.buildShortPreview(tdlib, msg, false));
         b.append("]");

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntity.java
Patch:
@@ -328,14 +328,14 @@ public static boolean equals (TextEntity a, TextEntity b, int compareMode, Strin
       return true;
     if (a == null || b == null)
       return false;
-    if (a.getType() == b.getType()) {
-      return a.equals(b, compareMode, originalText);
-    }
     if (compareMode == COMPARE_MODE_CLICK_HIGHLIGHT) {
       // FIXME: merge TextEntityCustom & TextEntityMessage into one class instead for clarity purposes.
       ClickableSpan onClickListener = a.getOnClickListener();
       return onClickListener != null && onClickListener == b.getOnClickListener();
     }
+    if (a.getType() == b.getType()) {
+      return a.equals(b, compareMode, originalText);
+    }
     return false;
   }
 }

File: app/src/main/java/org/thunderdog/challegram/widget/CustomTextView.java
Patch:
@@ -253,6 +253,8 @@ private void cancelAsyncLayout () {
   private long asyncContextId;
 
   private static Text createText (final View view, final String text, final int textWidth, final TextStyleProvider provider, final int maxLineCount, final TextEntity[] entities, TextColorSet colorSet, Text.TextMediaListener textMediaListener) {
+    if (colorSet == null)
+      throw new IllegalArgumentException();
     return new Text.Builder(text, textWidth, provider, colorSet)
       .entities(entities, textMediaListener)
       .view(view)
@@ -289,7 +291,7 @@ private void dispatchAsyncText (final String text, final int textWidth, final bo
         text, textWidth, provider,
         maxLineCount,
         Text.makeEntities(text, linkFlags, entities, tdlib, null),
-        colorSet,
+        this,
         this
       );
       UI.post(() -> {

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsReactedController.java
Patch:
@@ -132,7 +132,7 @@ public int getId () {
   }
 
   @Override
-  public int getItemsHeight () {
+  public int getItemsHeight (RecyclerView recyclerView) {
     if (adapter.getItems().size() == 0) {
       return 0;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsSeenController.java
Patch:
@@ -3,6 +3,8 @@
 import android.content.Context;
 import android.view.View;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.component.popups.MessageSeenController;
@@ -96,7 +98,7 @@ public void onClick (View v) {
   }
 
   @Override
-  public int getItemsHeight () {
+  public int getItemsHeight (RecyclerView recyclerView) {
     if (adapter.getItems().size() == 0) {
       return 0;
     }

File: app/src/main/java/org/thunderdog/challegram/widget/CustomTextView.java
Patch:
@@ -412,7 +412,7 @@ protected void onDraw (Canvas c) {
     }
   }
 
-  private boolean isAttached;
+  private boolean isAttached = true;
 
   @Override
   public void attach () {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageServiceImpl.java
Patch:
@@ -723,7 +723,7 @@ private FormattedText toFormattedText (CharSequence text) {
           for (int i = 0; i < entityType.length; i++) {
             telegramEntities[i] = new TdApi.TextEntity(
               spanStart,
-              spanEnd,
+              spanEnd - spanStart,
               entityType[i]
             );
           }

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -910,6 +910,8 @@ private void setImpl (final String in) {
       do {
         TextEntity entity = findEntity(totalLength, totalLength);
         if (entity != null) {
+          if (entity.end > totalLength)
+            throw new IllegalArgumentException(entity.end + " > " + totalLength);
           processTextOrEmoji(in, totalLength, totalLength, out, emojiCallback, entity);
         } else {
           break;

File: app/src/main/java/org/thunderdog/challegram/util/text/TextMedia.java
Patch:
@@ -255,7 +255,8 @@ public void draw (Canvas c, ComplexReceiver receiver, int left, int top, int rig
       }
       return;
     }
-    float scale = getScale(customEmoji.sticker, (right - left));
+    //noinspection ConstantConditions
+    float scale = customEmoji != null && !customEmoji.isNotFound() ? getScale(customEmoji.sticker, (right - left)) : 1f;
     boolean needScaleUp = scale != 1f;
     int restoreToCount;
     if (needScaleUp) {

File: app/src/main/java/org/thunderdog/challegram/widget/PageBlockView.java
Patch:
@@ -160,7 +160,7 @@ public void detach () {
 
   @Override
   public boolean invalidateContent (Object cause) {
-    if (this.block == cause || !(cause instanceof PageBlock)) {
+    if (this.block == cause || !(cause instanceof PageBlock) || (this.block != null && this.block.belongsToBlock((PageBlock) cause))) {
       requestFiles(true);
       return true;
     }

File: app/src/main/java/org/thunderdog/challegram/emoji/CustomEmojiSurfaceProvider.java
Patch:
@@ -20,7 +20,7 @@
 
 public interface CustomEmojiSurfaceProvider {
   EmojiSpan onCreateNewSpan (CharSequence emojiCode, EmojiInfo info, long customEmojiId);
-  void onInvalidateSpan (EmojiSpan span);
+  void onInvalidateSpan (EmojiSpan span, boolean requiresLayoutUpdate);
   ComplexReceiver provideComplexReceiverForSpan (EmojiSpan span);
   int getDuplicateMediaItemCount (EmojiSpan span, ComplexMediaItem mediaItem);
   long attachToReceivers (EmojiSpan span, ComplexMediaItem complexMediaItem);

File: app/src/main/java/org/thunderdog/challegram/data/ComplexMediaItem.java
Patch:
@@ -23,5 +23,6 @@
 public interface ComplexMediaItem {
   void requestComplexMedia (ComplexReceiver receiver, long displayMediaKey);
   String getComplexMediaKey ();
+  boolean requiresTopLayer ();
   void draw (Canvas c, Rect rect, ComplexReceiver mediaReceiver, long displayMediaKey, boolean translate);
 }

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -1641,6 +1641,7 @@ private boolean hasVoiceOrVideoMessageContent () {
             return true;
           }
         }
+        break;
       }
       case MODE_CUSTOM_CONTENT: {
         return

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -231,6 +231,8 @@ public static boolean useCloudPlayback (TdApi.Message playPauseFile) {
 
   public static final boolean NEED_NOTIFICATION_CONTENT_PREVIEW = Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
 
+  public static final boolean SHOW_COPY_REPORT_DETAILS_IN_SETTINGS = BuildConfig.EXPERIMENTAL;
+
   public static final int MINIMUM_CALL_CONTACTS_SUGGESTIONS = 3;
 
   public static final boolean USE_CUSTOM_NAVIGATION_COLOR = Build.VERSION.SDK_INT >= Build.VERSION_CODES.O;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -7550,7 +7550,8 @@ public ArrayList<SwipeQuickAction> getRightQuickReactions () {
   }
 
   @Nullable public SwipeQuickAction getQuickAction (boolean isLeft, int index) {
-    return (isLeft ? leftActions : rightActions).get(index);
+    List<SwipeQuickAction> swipeQuickActions = (isLeft ? leftActions : rightActions);
+    return index >= 0 && index < swipeQuickActions.size() ? swipeQuickActions.get(index) : null;
   }
 
   public int getQuickDefaultPosition (boolean isLeft) {

File: app/src/main/java/org/thunderdog/challegram/data/PageBlock.java
Patch:
@@ -41,15 +41,12 @@
 import org.thunderdog.challegram.util.text.Text;
 import org.thunderdog.challegram.util.text.TextColorSets;
 import org.thunderdog.challegram.util.text.TextStyleProvider;
-import org.thunderdog.challegram.widget.PageBlockView;
 
 import java.util.ArrayList;
 
-import me.vkryl.android.util.InvalidateContentProvider;
 import me.vkryl.android.util.MultipleViewProvider;
 import me.vkryl.android.util.ViewProvider;
 import me.vkryl.android.widget.FrameLayoutFix;
-import me.vkryl.core.reference.ReferenceList;
 import me.vkryl.td.Td;
 
 public abstract class PageBlock {

File: app/src/main/java/org/thunderdog/challegram/widget/PageBlockView.java
Patch:
@@ -160,7 +160,7 @@ public void detach () {
 
   @Override
   public boolean invalidateContent (Object cause) {
-    if (this.block == cause) {
+    if (this.block == cause || !(cause instanceof PageBlock)) {
       requestFiles(true);
       return true;
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -203,7 +203,7 @@ public void invalidateFooterTextMediaReceiver (@NonNull TGMessage msg, @NonNull
 
   private void invalidateTextMediaReceiver (@NonNull TGMessage msg, @NonNull Text text, @Nullable TextMedia textMedia, @NonNull ComplexReceiver receiver) {
     if (this.msg == msg) {
-      if (textMedia == null || !text.invalidateMediaContent(receiver, textMedia)) {
+      if (!text.invalidateMediaContent(receiver, textMedia)) {
         msg.requestTextMedia(receiver);
       }
     }

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -2139,12 +2139,13 @@ public int getMediaCount () {
     return hasMedia() ? media.size() : 0;
   }
 
-  public boolean invalidateMediaContent (ComplexReceiver textMediaReceiver, TextMedia specificMedia) {
+  public boolean invalidateMediaContent (ComplexReceiver textMediaReceiver, @Nullable TextMedia specificMedia) {
     if (BitwiseUtils.getFlag(textFlags, FLAG_DESTROYED)) {
       return false;
     }
     if (specificMedia == null) {
-      throw new IllegalArgumentException();
+      // Force parent to call requestMedia() instead
+      return false;
     }
     final int displayMediaKey = specificMedia.getDisplayMediaKey();
     if (displayMediaKey == -1 || media.get(specificMedia.keyId) != specificMedia) {

File: app/src/main/java/org/thunderdog/challegram/ui/PrivacyExceptionController.java
Patch:
@@ -255,6 +255,9 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
                   case TdApi.UserPrivacySettingAllowPeerToPeerCalls.CONSTRUCTOR:
                     view.setData(R.string.PrivacyP2PExceptionContacts);
                     break;
+                  case TdApi.UserPrivacySettingAllowPrivateVoiceAndVideoNoteMessages.CONSTRUCTOR:
+                    view.setData(R.string.PrivacyVoiceVideoExceptionContacts);
+                    break;
                   case TdApi.UserPrivacySettingAllowFindingByPhoneNumber.CONSTRUCTOR:
                     throw new IllegalStateException();
                   default:

File: app/src/main/java/org/thunderdog/challegram/emoji/EmojiInputConnection.java
Patch:
@@ -31,7 +31,6 @@ public EmojiInputConnection (
     @NonNull final InputConnection inputConnection) {
     super(inputConnection, false);
     mTextView = textView;
-    // EmojiCompat.get().updateEditorInfoAttrs(outAttrs);
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -1241,9 +1241,9 @@ private void updateCaption (boolean animated) {
         ignoreCaptionUpdate = true;
         TdApi.FormattedText caption = item.getCaption();
         if (caption != null) {
-          ((InputView) captionView).setInput(TD.toCharSequence(caption), true);
+          ((InputView) captionView).setInput(TD.toCharSequence(caption), true, false);
         } else {
-          ((InputView) captionView).setInput("", true);
+          ((InputView) captionView).setInput("", true, false);
         }
         ignoreCaptionUpdate = false;
         break;
@@ -4830,7 +4830,7 @@ protected void onScrollChanged (int horiz, int vert, int oldHoriz, int oldVert)
           }
         };
         if (chat != null) {
-          captionView.setIsSecret(Settings.instance().needsIncognitoMode(chat));
+          captionView.setNoPersonalizedLearning(Settings.instance().needsIncognitoMode(chat));
         }
         captionView.setHighlightColor(ColorUtils.alphaColor(0.2f, Theme.fillingTextSelectionColor()));
         captionView.setHighlightColor(getForcedTheme().getColor(R.id.theme_color_textSelectionHighlight));

File: app/src/main/java/org/thunderdog/challegram/widget/MaterialEditTextGroup.java
Patch:
@@ -145,8 +145,8 @@ private void init (Context context, boolean needHint) {
 
     editText = new MaterialEditText(context) {
       @Override
-      public InputConnection onCreateInputConnection(EditorInfo outAttrs) {
-        InputConnection conn = super.onCreateInputConnection(outAttrs);
+      public InputConnection createInputConnection (EditorInfo outAttrs) {
+        InputConnection conn = super.createInputConnection(outAttrs);
         if (nextCallback != null && nextCallback.needNextButton(MaterialEditTextGroup.this)) {
           outAttrs.imeOptions &= ~EditorInfo.IME_FLAG_NO_ENTER_ACTION;
         }

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -623,7 +623,7 @@ public static AlertDialog modifyAlert (Context context, AlertDialog dialog, Them
   }
 
   @Override
-  public final void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (dialogMessages != null) {
       try {
         for (int i = dialogMessages.size() - 1; i >= 0; i--) {

File: app/src/main/java/org/thunderdog/challegram/component/base/SettingView.java
Patch:
@@ -261,7 +261,7 @@ public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagePreviewView.java
Patch:
@@ -486,7 +486,7 @@ public void performDestroy () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 }

File: app/src/main/java/org/thunderdog/challegram/component/popups/JoinRequestsComponent.java
Patch:
@@ -414,7 +414,7 @@ public void onResult (TdApi.Object object) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     adapter.updateAllValuedSettingsById(R.id.user);
   }
 }

File: app/src/main/java/org/thunderdog/challegram/emoji/Emoji.java
Patch:
@@ -33,6 +33,7 @@
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.core.Media;
 import org.thunderdog.challegram.data.TD;
+import org.thunderdog.challegram.telegram.TGLegacyManager;
 import org.thunderdog.challegram.tool.EmojiCode;
 import org.thunderdog.challegram.tool.EmojiData;
 import org.thunderdog.challegram.tool.Paints;
@@ -158,7 +159,7 @@ public void changeEmojiPack (Settings.EmojiPack emojiPack) {
     if (!emojiPack.identifier.equals(bitmaps.identifier)) {
       bitmaps.recycle();
       bitmaps = new EmojiBitmaps(emojiPack.identifier);
-      UI.emojiLoaded(true);
+      TGLegacyManager.instance().notifyEmojiChanged(true);
     }
   }
 
@@ -508,9 +509,8 @@ public static String extractSingleEmoji (String str) {
     return null;
   }
 
-  @Nullable
   public boolean isSingleEmoji (String str) {
-    CharSequence emoji = Emoji.instance().replaceEmoji(str, 0, str.length(), singleLimiter);
+    CharSequence emoji = replaceEmoji(str, 0, str.length(), singleLimiter);
     if (emoji instanceof Spanned) {
       EmojiSpan[] emojis = ((Spanned) emoji).getSpans(0, emoji.length(), EmojiSpan.class);
       if (emojis != null && emojis.length == 1) {

File: app/src/main/java/org/thunderdog/challegram/emoji/EmojiBitmaps.java
Patch:
@@ -25,6 +25,7 @@
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.core.Media;
+import org.thunderdog.challegram.telegram.TGLegacyManager;
 import org.thunderdog.challegram.tool.EmojiCode;
 import org.thunderdog.challegram.tool.Screen;
 import org.thunderdog.challegram.tool.UI;
@@ -141,7 +142,7 @@ private void loadEmoji (int page1, int page2) {
       } else {
         bitmaps[page1][page2] = resultFinal;
       }
-      UI.emojiLoaded(false);
+      TGLegacyManager.instance().notifyEmojiChanged(false);
     });
   }
 }

File: app/src/main/java/org/thunderdog/challegram/navigation/ComplexHeaderView.java
Patch:
@@ -213,7 +213,7 @@ public void onHeaderOffsetChanged (HeaderView headerView, int newOffset) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerHeaderView.java
Patch:
@@ -109,7 +109,7 @@ protected int getFillingColor () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerItemView.java
Patch:
@@ -68,7 +68,7 @@ public DrawerItemView (Context context, Tdlib tdlib) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/HeaderFilling.java
Patch:
@@ -145,7 +145,7 @@ public HeaderFilling (HeaderView parent, @Nullable NavigationController navigati
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidateOngoingBar();
   }
 

File: app/src/main/java/org/thunderdog/challegram/navigation/TelegramViewController.java
Patch:
@@ -366,7 +366,7 @@ protected void setChatData (ListItem item, VerticalChatView chatView) {
       }
     }, this) {
       @Override
-      public void onEmojiPartLoaded () {
+      public void onEmojiUpdated (boolean isPackSwitch) {
         for (RecyclerView parentView : parentViews) {
           LinearLayoutManager manager = (LinearLayoutManager) parentView.getLayoutManager();
           final int first = manager.findFirstVisibleItemPosition();

File: app/src/main/java/org/thunderdog/challegram/ui/ChatLinksController.java
Patch:
@@ -139,7 +139,7 @@ public void onLinkCreated (TdApi.ChatInviteLink newLink, @Nullable TdApi.ChatInv
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     adapter.updateValuedSettingByLongId(chatId);
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -2576,7 +2576,7 @@ public void destroy () {
   // Updates
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (chatsView != null) {
       chatsView.invalidateAll();
     }

File: app/src/main/java/org/thunderdog/challegram/ui/EncryptionKeyController.java
Patch:
@@ -166,7 +166,7 @@ public void destroy () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (bottomText != null)
       bottomText.invalidate();
     if (rightText != null)

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -2989,7 +2989,7 @@ public void setInputVisible (boolean visible, boolean notEmpty) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidateEmojiViews(false);
   }
 
@@ -4248,7 +4248,7 @@ private void patchReadReceiptsOptions (PopupLayout layout, TGMessage message, bo
         if (users.userIds.length > 1) {
           receiptText.setText(MessageSeenController.getViewString(message, users.totalCount).toString());
         } else if (users.userIds.length == 1) {
-          receiptText.setText(Emoji.instance().replaceEmoji(tdlib.senderName(new TdApi.MessageSenderUser(users.userIds[0]))));
+          receiptText.setText(tdlib.senderName(new TdApi.MessageSenderUser(users.userIds[0])));
         } else {
           receiptText.setText(MessageSeenController.getNobodyString(message));
         }

File: app/src/main/java/org/thunderdog/challegram/ui/PlaybackController.java
Patch:
@@ -210,7 +210,7 @@ private ImageView newButton (int id, int image, boolean isActive) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (coverView != null) {
       coverView.invalidate();
     }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsAdapter.java
Patch:
@@ -220,7 +220,7 @@ public void setClickHelperDelegate (@Nullable ClickHelper.Delegate clickHelperDe
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     for (RecyclerView parentView : parentViews) {
       LinearLayoutManager manager = (LinearLayoutManager) parentView.getLayoutManager();
       final int first = manager.findFirstVisibleItemPosition();

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsCacheController.java
Patch:
@@ -1161,7 +1161,7 @@ public void destroy () {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     if (headerCell != null) {
       headerCell.invalidate();
     }

File: app/src/main/java/org/thunderdog/challegram/ui/StickersListController.java
Patch:
@@ -35,7 +35,6 @@
 import org.thunderdog.challegram.component.sticker.TGStickerObj;
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.data.TD;
-import org.thunderdog.challegram.emoji.Emoji;
 import org.thunderdog.challegram.navigation.BackHeaderButton;
 import org.thunderdog.challegram.navigation.HeaderView;
 import org.thunderdog.challegram.navigation.Menu;
@@ -189,7 +188,7 @@ public void onMoreItemPressed (int id) {
   public CharSequence getName () {
     if (info != null) {
       TdApi.TextEntity[] entities = Td.findEntities(info.title);
-      return Emoji.instance().replaceEmoji(TD.formatString(this, info.title, entities, null, null));
+      return TD.formatString(this, info.title, entities, null, null);
     }
     return null;
   }

File: app/src/main/java/org/thunderdog/challegram/widget/CustomTextView.java
Patch:
@@ -196,7 +196,7 @@ public void setForcedTheme (@Nullable ThemeDelegate theme) {
   }
 
   @Override
-  public void onEmojiPartLoaded () {
+  public void onEmojiUpdated (boolean isPackSwitch) {
     invalidate();
   }
 

File: app/src/main/java/org/thunderdog/challegram/widget/NoScrollTextView.java
Patch:
@@ -17,6 +17,7 @@
 import android.content.Context;
 import android.widget.TextView;
 
+@Deprecated
 public class NoScrollTextView extends TextView {
   public NoScrollTextView (Context context) {
     super(context);

File: app/src/main/java/org/thunderdog/challegram/navigation/TooltipOverlayView.java
Patch:
@@ -533,6 +533,7 @@ public void destroy () {
     private void detach () {
       if (isAttached) {
         isAttached = false;
+        attachListeners(null);
         parentView.removeHint(this);
         iconReceiver.detach();
         if (imageReceiver != null)

File: app/src/main/java/org/thunderdog/challegram/util/text/TextPart.java
Patch:
@@ -66,6 +66,8 @@ public TextPart (Text source, String line, int start, int end, int lineIndex, in
   }
 
   public TooltipOverlayView.TooltipBuilder newTooltipBuilder (View view) {
+    if (source.isDestroyed())
+      throw new IllegalStateException();
     return UI.getContext(view.getContext()).tooltipManager()
       .builder(view, source.getViewProvider())
       .locate((targetView, outRect) -> source.locatePart(outRect, this, TextEntity.COMPARE_MODE_NORMAL));

File: app/src/main/java/org/thunderdog/challegram/ui/MessageOptionsController.java
Patch:
@@ -115,9 +115,8 @@ public static OptionHolder create (Context context, Tdlib tdlib, int viewType, V
       } else {
         CustomTextView textView = new CustomTextView(context, tdlib);
         textView.setTextColorId(R.id.theme_color_textLight);
-        textView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, Screen.dp(40)));
+        textView.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
         textView.setPadding(Screen.dp(16f), Screen.dp(14f), Screen.dp(16f), Screen.dp(6f));
-        textView.setMaxLineCount(1);
         return new OptionHolder(textView);
       }
     }

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -1943,6 +1943,7 @@ private void ensureLineCount (int lastLineHeight, int prevMaxPartHeight) {
     }
   }
 
+  @Override
   public int getWidth () {
     return currentWidth;
   }
@@ -1985,6 +1986,7 @@ public boolean isFullyRtl () {
     return (textFlags & FLAG_FULL_RTL) != 0;
   }
 
+  @Override
   public int getHeight () {
     return currentY;
   }

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4155,7 +4155,7 @@ public void showMessageOptions (TGMessage msg, int[] ids, String[] options, int[
     this.selectedMessage = msg;
     this.selectedMessageTag = selectedMessageTag;
     this.selectedMessageSender = selectedMessageSender;
-    StringBuilder b = new StringBuilder();
+    SpannableStringBuilder b = new SpannableStringBuilder();
     if (chat != null) {
       final boolean isChannel = tdlib.isChannel(chat.id);
       if (!isChannel && msg.getMessage().content != null) {
@@ -4223,7 +4223,8 @@ public void showMessageOptions (TGMessage msg, int[] ids, String[] options, int[
       }
       b.append(Lang.getString(resId));
     }
-    String text = b.toString().trim();
+
+    CharSequence text = StringUtils.trim(b);
 
     if (withReactions && msg.canBeReacted() && msg.getMessageAvailableReactions().length > 0) {
       Options messageOptions = getOptions(StringUtils.isEmpty(text) ? null : text, ids, options, null, icons);

File: app/src/main/java/org/thunderdog/challegram/loader/gif/GifActor.java
Patch:
@@ -29,7 +29,6 @@
 import org.drinkless.td.libcore.telegram.Client;
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.thunderdog.challegram.BaseActivity;
-import org.thunderdog.challegram.BuildConfig;
 import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.N;
 import org.thunderdog.challegram.U;
@@ -440,7 +439,7 @@ public void prepareStartFrame () {
     }
   }
 
-  private static final double DEFAULT_MAX_FRAME_RATE = BuildConfig.DEBUG ? 60.0 : 30.0;
+  private static final double DEFAULT_MAX_FRAME_RATE = 60.0;
   private static final double REDUCED_MAX_FRAME_RATE = 30.0;
 
   private File lottieCacheFile;

File: app/src/main/java/org/thunderdog/challegram/tool/Intents.java
Patch:
@@ -692,7 +692,7 @@ public static boolean openInAppBrowser (Activity context, Uri uri, boolean ignor
         builder.setToolbarColor(Theme.getColor(R.id.theme_color_headerBackground));
         builder.setSecondaryToolbarColor(Theme.getColor(R.id.theme_color_headerText));
         builder.setShowTitle(true);
-        builder.setActionButton(Drawables.getBitmap(R.drawable.baseline_share_24), Lang.getString(R.string.Share), PendingIntent.getBroadcast(UI.getContext(), 0, share, Intents.mutabilityFlags(false)), true);
+        builder.setActionButton(Drawables.getBitmap(R.drawable.baseline_share_24), Lang.getString(R.string.Share), PendingIntent.getBroadcast(UI.getContext(), 0, share, Intents.mutabilityFlags(true)), true);
         CustomTabsIntent intent = builder.build();
         intent.intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         if (TD.isKnownHost(uri)) {

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -259,7 +259,7 @@ public static boolean isThemeDoc (TdApi.Document doc) {
 
   public static final boolean DISABLE_PASSWORD_INVISIBILITY = true;
 
-  public static final boolean DEBUG_STICKER_OUTLINES = BuildConfig.DEBUG;
+  public static final boolean DEBUG_STICKER_OUTLINES = false; // BuildConfig.DEBUG;
 
   public static final int SUPPORTED_INSTANT_VIEW_VERSION = 2;
   public static final boolean INSTANT_VIEW_WRONG_LAYOUT = false;

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSmallView.java
Patch:
@@ -19,7 +19,6 @@
 import android.graphics.Path;
 import android.view.MotionEvent;
 import android.view.View;
-import android.view.ViewParent;
 import android.view.animation.Interpolator;
 import android.view.animation.OvershootInterpolator;
 
@@ -205,6 +204,9 @@ protected void onDraw (Canvas c) {
       }
       imageReceiver.draw(c);
     }
+    if (Config.DEBUG_STICKER_OUTLINES) {
+      imageReceiver.drawPlaceholderContour(c, contour);
+    }
     if (saved) {
       c.restore();
     }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -259,6 +259,8 @@ public static boolean isThemeDoc (TdApi.Document doc) {
 
   public static final boolean DISABLE_PASSWORD_INVISIBILITY = true;
 
+  public static final boolean DEBUG_STICKER_OUTLINES = BuildConfig.DEBUG;
+
   public static final int SUPPORTED_INSTANT_VIEW_VERSION = 2;
   public static final boolean INSTANT_VIEW_WRONG_LAYOUT = false;
 

File: app/src/main/java/org/thunderdog/challegram/data/TGStickerSetInfo.java
Patch:
@@ -317,7 +317,7 @@ public ImageFile getPreviewImage () {
   }
 
   public Path getPreviewContour (int targetSize) {
-    return previewWidth != 0 && previewHeight != 0 ? Td.buildOutline(previewOutline, Math.min((float) targetSize / (float) previewWidth, (float) targetSize / (float) previewHeight)) : null;
+    return previewWidth != 0 && previewHeight != 0 ? Td.buildOutline(previewOutline, previewWidth, previewHeight, targetSize, targetSize) : null;
   }
 
   public GifFile getPreviewAnimation () {

File: app/src/main/java/org/thunderdog/challegram/unsorted/AppState.java
Patch:
@@ -42,7 +42,8 @@ private static void onInitializationAlreadyCompleted () {
   private static final AtomicLong startupTime = new AtomicLong(SystemClock.uptimeMillis());
 
   public static long uptime () {
-    return startupTime.get();
+    final long startedAt = startupTime.get();
+    return startedAt != 0 ? SystemClock.uptimeMillis() - startedAt : 0;
   }
 
   public static void resetUptime () {

File: app/src/main/java/org/thunderdog/challegram/ui/EditSessionController.java
Patch:
@@ -210,7 +210,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
             view.setData((session.isCurrent || session.isPasswordPending) ? null : Lang.getReverseRelativeDateBold(
               session.lastActiveDate + TimeUnit.DAYS.toSeconds(getArgumentsStrict().inactiveSessionTtlDays), TimeUnit.SECONDS,
               tdlib.currentTimeMillis(), TimeUnit.MILLISECONDS,
-              true, 0, R.string.session_WillTerminate, false
+              true, 0, R.string.session_TerminatesIn, false
             ));
             break;
           case R.id.btn_sessionAcceptSecretChats:

File: app/src/main/java/org/thunderdog/challegram/util/Crash.java
Patch:
@@ -152,7 +152,7 @@ public boolean isTdlibLogicError () {
   }
 
   public boolean shouldShowAtApplicationStart () {
-    if (appVersionCode != BuildConfig.VERSION_CODE || BitwiseUtils.getFlag(flags, Flags.RESOLVED)) {
+    if (appVersionCode != BuildConfig.ORIGINAL_VERSION_CODE || BitwiseUtils.getFlag(flags, Flags.RESOLVED)) {
       // User has installed a new APK or pressed "Launch App". Forgetting the last error.
       return false;
     }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -1389,7 +1389,7 @@ private void shareTokenError () {
       } else {
         report += "Firebase options unavailable!";
       }
-      report += "APK fingerprint: " + U.getApkFingerprint("SHA1") + "\n";
+      report += "\nFingerprint: " + U.getApkFingerprint("SHA1") + "\n";
       report += "\n" + U.getUsefulMetadata(tdlib);
       tdlib.ui().shareText(this, report);
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationManager.java
Patch:
@@ -572,7 +572,7 @@ int getNotificationBlockStatus () {
       return Status.INTERNAL_ERROR;
     if (!tdlib.account().forceEnableNotifications() && Settings.instance().checkNotificationFlag(Settings.NOTIFICATION_FLAG_ONLY_SELECTED_ACCOUNTS))
       return Status.ACCOUNT_NOT_SELECTED;
-    if (tdlib.context().getTokenState() == TdlibManager.TOKEN_STATE_ERROR)
+    if (tdlib.context().getTokenState() == TdlibManager.TokenState.ERROR)
       return Status.FIREBASE_ERROR;
     return Status.NOT_BLOCKED;
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -1577,7 +1577,7 @@ public synchronized void setDeviceToken (String token) {
 
   public synchronized void checkDeviceToken () {
     if (BuildConfig.EXPERIMENTAL) {
-      setTokenState(TOKEN_STATE_ERROR, "I use `" + BuildConfig.APPLICATION_ID + "` and acknowledge that notifications do not work intentionally.", null);
+      setTokenState(TOKEN_STATE_ERROR, "I use `" + UI.getAppContext().getPackageName() + "` and acknowledge that notifications do not work intentionally.", null);
       return;
     }
     setTokenState(TOKEN_STATE_INITIALIZING);

File: app/src/main/java/org/thunderdog/challegram/tool/Intents.java
Patch:
@@ -182,7 +182,7 @@ private static boolean openExcludeCurrentImpl (Intent intent, @Nullable Bundle o
       String[] blackList = {BuildConfig.APPLICATION_ID, "org.telegram.messenger"};
       for (ResolveInfo currentInfo : activities) {
         String packageName = currentInfo.activityInfo.packageName;
-        if (ArrayUtils.indexOf(blackList, packageName) == -1) {
+        if (ArrayUtils.indexOf(blackList, packageName) == -1 && !packageName.startsWith("com.contest.")) {
           Intent targetIntent = new Intent(android.content.Intent.ACTION_VIEW);
           targetIntent.setPackage(packageName);
           targetIntent.setData(uri);

File: app/src/main/java/org/thunderdog/challegram/util/Crash.java
Patch:
@@ -26,6 +26,7 @@
 import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.U;
 import org.thunderdog.challegram.telegram.TdlibAccount;
+import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.unsorted.AppState;
 
 import java.lang.annotation.Retention;
@@ -247,7 +248,7 @@ public Map<String, Object> toMap (final String crashDeviceId) {
     }
     result.put("cpu", U.getCpuArchitecture());
     result.put("crash_id", id);
-    result.put("package_id", BuildConfig.APPLICATION_ID);
+    result.put("package_id", UI.getAppContext().getPackageName());
     result.put("device_id", crashDeviceId);
     return result;
   }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -1447,7 +1447,7 @@ public void onClick (View v) {
             Throwable fullError = tdlib.context().getTokenFullError();
             String report;
             if (fullError != null) {
-              report = "#firebase_error\n" + fullError.getClass().getSimpleName() + ": " + tdlib.context().getTokenError() + "\n" + Log.toString(fullError);
+              report = "#firebase_error\n" + tdlib.context().getTokenError() + "\n" + Log.toString(fullError);
             } else {
               report = "#firebase_error " + tdlib.context().getTokenError();
             }

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -1911,7 +1911,7 @@ public void onMoreItemPressed (int id) {
     switch (id) {
       case R.id.btn_copyLink:
       case R.id.btn_share: {
-        tdlib.client().send(new TdApi.GetBackgroundUrl(getArgumentsStrict().wallpaperObject.name, TGBackground.makeBlurredBackgroundType(getArgumentsStrict().wallpaperObject.type, backgroundParamsView.isBlurred())), result -> {
+        tdlib.client().send(new TdApi.GetBackgroundUrl(getArgumentsStrict().wallpaperObject.name, TGBackground.makeBlurredBackgroundType(getArgumentsStrict().wallpaperObject.type, backgroundParamsView != null && backgroundParamsView.isBlurred())), result -> {
           if (result.getConstructor() == TdApi.HttpUrl.CONSTRUCTOR) {
             TdApi.HttpUrl url = (TdApi.HttpUrl) result;
             runOnUiThreadOptional(() -> {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -1452,6 +1452,7 @@ public void onClick (View v) {
               report = "#firebase_error " + tdlib.context().getTokenError();
             }
             if (!StringUtils.isEmpty(report)) {
+              report += "\n" + U.getUsefulMetadata(tdlib);
               tdlib.ui().shareText(this, report);
             }
             break;

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsController.java
Patch:
@@ -327,6 +327,7 @@ private int getNotificationErrorDescription () {
       case TdlibNotificationManager.Status.DISABLED_SYNC:
       case TdlibNotificationManager.Status.DISABLED_APP_SYNC:
       case TdlibNotificationManager.Status.FIREBASE_MISSING:
+      case TdlibNotificationManager.Status.FIREBASE_ERROR:
         return R.string.NotificationsErrorBackground;
       case TdlibNotificationManager.Status.INTERNAL_ERROR: {
         this.problematicChatId = tdlib.settings().getLastNotificationProblematicChat();

File: app/src/main/java/org/thunderdog/challegram/widget/FileProgressComponent.java
Patch:
@@ -524,6 +524,8 @@ public boolean openFile (ViewController<?> c, Runnable defaultOpen) {
       if (c != null && c.tdlib() == tdlib) {
         tdlib.files().downloadFile(file, TdlibFilesManager.DEFAULT_DOWNLOAD_PRIORITY, 0, 0, result -> {
           c.runOnUiThreadOptional(() -> {
+            if (isDestroyed)
+              return;
             switch (result.getConstructor()) {
               case TdApi.File.CONSTRUCTOR: {
                 if (TD.isFileLoaded(((TdApi.File) result))) {

File: app/src/main/java/org/thunderdog/challegram/component/attach/CustomItemAnimator.java
Patch:
@@ -24,6 +24,8 @@
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.SimpleItemAnimator;
 
+import org.thunderdog.challegram.component.chat.MessageView;
+
 import java.util.ArrayList;
 import java.util.List;
 

File: app/src/main/java/org/thunderdog/challegram/component/user/SimpleUsersAdapter.java
Patch:
@@ -196,13 +196,13 @@ public int measureHeight (int maxHeight) {
     if (getItemCount() == 0) {
       return 0;
     }
-    int fullHeight = Screen.dp(UserView.HEIGHT) * users.size() + (needCounter ? Screen.dp(42f) : 0);
+    int fullHeight = Screen.dp(UserView.DEFAULT_HEIGHT) * users.size() + (needCounter ? Screen.dp(42f) : 0);
     return maxHeight < 0 ? fullHeight : Math.min(maxHeight, fullHeight);
   }
 
   @Override
   public int measureScrollTop (int position) {
-    return Screen.dp(UserView.HEIGHT) * position;
+    return Screen.dp(UserView.DEFAULT_HEIGHT) * position;
   }
 
   static class SimpleUserHolder extends RecyclerView.ViewHolder {

File: app/src/main/java/org/thunderdog/challegram/navigation/OptionsLayout.java
Patch:
@@ -119,7 +119,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
     }
   }
 
-  private static @ThemeColorId int getOptionColorId (int color) {
+  public static @ThemeColorId int getOptionColorId (int color) {
     switch (color) {
       case ViewController.OPTION_COLOR_NORMAL: {
         return R.id.theme_color_text;

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerController.java
Patch:
@@ -126,7 +126,7 @@ protected int getDrawerReplacementColorId () {
   }
 
   @Override
-  protected final View onCreateView (Context context) {
+  protected View onCreateView (Context context) {
     FrameLayoutFix contentView = new FrameLayoutFix(context) {
       @Override
       protected void onDraw (Canvas c) {
@@ -352,7 +352,7 @@ public final void onPageSelected (int position) {
   }
 
   @Override
-  public final void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
+  public void onPageScrolled (int position, float positionOffset, int positionOffsetPixels) {
     if (headerCell != null) {
       headerCell.getTopView().setSelectionFactor((float) position + positionOffset);
     }
@@ -398,7 +398,7 @@ public final ViewController<?> getCurrentPagerItem () {
     return getCachedControllerForPosition(getCurrentPagerItemPosition());
   }
 
-  protected final void setCurrentPagerPosition (int position, boolean animated) {
+  protected void setCurrentPagerPosition (int position, boolean animated) {
     if (headerCell != null && animated) {
       headerCell.getTopView().setFromTo(pager.getCurrentItem(), position);
     }

File: app/src/main/java/org/thunderdog/challegram/ui/ContactsController.java
Patch:
@@ -1199,7 +1199,7 @@ public int getSearchUserCount () {
 
     @Override
     public int getItemHeight () {
-      return Screen.dp(UserView.HEIGHT);
+      return Screen.dp(UserView.DEFAULT_HEIGHT);
     }
 
     @Override

File: app/src/main/java/org/thunderdog/challegram/util/DrawModifier.java
Patch:
@@ -20,4 +20,5 @@
 public interface DrawModifier {
   default void beforeDraw (View view, Canvas c) { }
   default void afterDraw (View view, Canvas c) { }
+  default int getWidth () { return 0; }
 }

File: app/src/main/java/org/thunderdog/challegram/ui/StickersTrendingController.java
Patch:
@@ -219,11 +219,12 @@ private void loadTrending (int offset, int limit, int cellCount) {
       loadingTrending = true;
       tdlib.client().send(new TdApi.GetTrendingStickerSets(offset, limit), result -> {
         switch (result.getConstructor()) {
-          case TdApi.StickerSets.CONSTRUCTOR: {
+          case TdApi.TrendingStickerSets.CONSTRUCTOR: {
+            final TdApi.TrendingStickerSets trendingStickerSets = (TdApi.TrendingStickerSets) result;
             final ArrayList<MediaStickersAdapter.StickerItem> stickerItems = new ArrayList<>();
             final ArrayList<TGStickerSetInfo> stickerSets;
 
-            TdApi.StickerSetInfo[] sets = ((TdApi.StickerSets) result).sets;
+            TdApi.StickerSetInfo[] sets = trendingStickerSets.sets;
             if (sets.length > 0) {
               stickerSets = new ArrayList<>(sets.length);
               EmojiMediaListController.parseTrending(tdlib, stickerSets, stickerItems, cellCount, sets, this, this, true);

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -620,7 +620,7 @@ protected void process (Message msg) {
                 }
               }
             };
-            String osArch = System.getProperty("os.arch");
+            String osArch = U.getCpuArchitecture();
             if (osArch == null) {
               osArch = "";
             }

File: app/src/main/java/org/thunderdog/challegram/widget/EmojiLayout.java
Patch:
@@ -134,7 +134,7 @@ public void removeStickerSection (int section) {
 
   private void clearRecentStickers () {
     if (themeProvider != null && mediaAdapter.hasRecents) {
-      themeProvider.showOptions(null, new int[] {R.id.btn_done, R.id.btn_cancel}, new String[] {Lang.getString(R.string.ClearRecentStickers), Lang.getString(R.string.Cancel)}, new int[] {ViewController.OPTION_COLOR_RED, ViewController.OPTION_COLOR_NORMAL}, new int[] {R.drawable.baseline_delete_forever_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
+      themeProvider.showOptions(null, new int[] {R.id.btn_done, R.id.btn_cancel}, new String[] {Lang.getString(R.string.ClearRecentStickers), Lang.getString(R.string.Cancel)}, new int[] {ViewController.OPTION_COLOR_RED, ViewController.OPTION_COLOR_NORMAL}, new int[] {R.drawable.baseline_auto_delete_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
         if (id == R.id.btn_done) {
           setShowRecents(false);
           ViewController<?> c = adapter.getCachedItem(1);
@@ -150,7 +150,7 @@ private void clearRecentStickers () {
 
   private void clearRecentEmoji () {
     if (themeProvider != null) {
-      themeProvider.showOptions(null, new int[] {R.id.btn_delete, R.id.btn_cancel}, new String[] {Lang.getString(R.string.ClearRecentEmojiAction), Lang.getString(R.string.Cancel)}, new int[] {ViewController.OPTION_COLOR_RED, ViewController.OPTION_COLOR_NORMAL}, new int[] {R.drawable.baseline_delete_forever_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
+      themeProvider.showOptions(null, new int[] {R.id.btn_delete, R.id.btn_cancel}, new String[] {Lang.getString(R.string.ClearRecentEmojiAction), Lang.getString(R.string.Cancel)}, new int[] {ViewController.OPTION_COLOR_RED, ViewController.OPTION_COLOR_NORMAL}, new int[] {R.drawable.baseline_auto_delete_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
         if (id == R.id.btn_delete) {
           Emoji.instance().clearRecents();
           ViewController<?> c = adapter.getCachedItem(0);

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1175,7 +1175,7 @@ public static TdApi.InputMessageContent toInputMessageContent (String filePath,
                 videoHeight = temp;
               }
               if (durationSeconds < 30 && info.knownSize < ByteUnit.MB.toBytes(10) && !metadata.hasAudio) {
-                return new TdApi.InputMessageAnimation(inputFile, null, null, durationSeconds, videoWidth, videoHeight, null);
+                return new TdApi.InputMessageAnimation(inputFile, null, null, durationSeconds, videoWidth, videoHeight, caption);
               } else if (durationSeconds > 0) {
                 return new TdApi.InputMessageVideo(inputFile, null, null, durationSeconds, videoWidth, videoHeight, U.canStreamVideo(inputFile), caption, 0);
               }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -4589,6 +4589,7 @@ private static void copyFlags (TdApi.Message src, TdApi.Message dst) {
     dst.canBeForwarded = src.canBeForwarded;
     dst.canBeSaved = src.canBeSaved;
     dst.canBeEdited = src.canBeEdited;
+    dst.canGetAddedReactions = src.canGetAddedReactions;
     dst.canGetStatistics = src.canGetStatistics;
     dst.canGetViewers = src.canGetViewers;
     dst.canGetMediaTimestampLinks = src.canGetMediaTimestampLinks;

File: app/src/main/java/org/thunderdog/challegram/player/AudioController.java
Patch:
@@ -381,7 +381,7 @@ public void onTrackListReset (Tdlib tdlib, @NonNull TdApi.Message currentTrack,
 
   @Override
   public void onPlayerError (@NonNull PlaybackException e) {
-    displayPlaybackError(e);
+    super.onPlayerError(e);
     if (playbackMode != PLAYBACK_MODE_UNSET) {
       context.player().playNextMessageInQueue();
     }

File: app/src/main/java/org/thunderdog/challegram/player/BasePlaybackController.java
Patch:
@@ -55,7 +55,7 @@ protected final void destroy () {
     }
   }
 
-  private void stopPlayback () {
+  protected final void stopPlayback () {
     if (object != null) {
       TdApi.Message oldObject = this.object;
       this.object = null;
@@ -111,7 +111,6 @@ public void onPlayerError (@NonNull PlaybackException e) {
     Log.e(Log.TAG_PLAYER, "onPlayerError", e);
     if (object != null) {
       displayPlaybackError(e);
-      stopPlayback();
     }
   }
 }

File: app/src/main/java/org/thunderdog/challegram/player/TGPlayerController.java
Patch:
@@ -457,8 +457,8 @@ public void setPlaybackSpeed (int speed) {
     }
   }
 
-  public static @Nullable PlaybackParameters newPlaybackParameters (boolean isVoice, int speedValue) {
-    PlaybackParameters parameters = null;
+  public static @NonNull PlaybackParameters newPlaybackParameters (boolean isVoice, int speedValue) {
+    PlaybackParameters parameters = PlaybackParameters.DEFAULT;
     if (speedValue != TGPlayerController.PLAY_SPEED_NORMAL) {
       float speed;
       float pitch = 1f;

File: app/src/main/java/org/thunderdog/challegram/ui/EmojiMediaListController.java
Patch:
@@ -563,11 +563,11 @@ private void loadTrending (int offset, int limit, int cellCount) {
         final ArrayList<MediaStickersAdapter.StickerItem> items = new ArrayList<>();
         final int unreadItemCount;
 
-        if (object.getConstructor() == TdApi.StickerSets.CONSTRUCTOR) {
-          TdApi.StickerSetInfo[] stickerSets = ((TdApi.StickerSets) object).sets;
+        if (object.getConstructor() == TdApi.TrendingStickerSets.CONSTRUCTOR) {
+          TdApi.TrendingStickerSets trendingStickerSets = (TdApi.TrendingStickerSets) object;
           if (offset == 0)
             items.add(new MediaStickersAdapter.StickerItem(MediaStickersAdapter.StickerHolder.TYPE_KEYBOARD_TOP));
-          unreadItemCount = parseTrending(tdlib, parsedStickerSets, items,  cellCount, stickerSets, EmojiMediaListController.this, EmojiMediaListController.this, false);
+          unreadItemCount = parseTrending(tdlib, parsedStickerSets, items,  cellCount, trendingStickerSets.sets, EmojiMediaListController.this, EmojiMediaListController.this, false);
         } else {
           if (offset == 0)
             items.add(new MediaStickersAdapter.StickerItem(MediaStickersAdapter.StickerHolder.TYPE_COME_AGAIN_LATER));

File: app/src/main/java/org/thunderdog/challegram/ui/ChatLinksController.java
Patch:
@@ -285,6 +285,7 @@ public void onAfterForceTouchAction (ForceTouchView.ForceTouchContext context, i
     RemoveHelper.attach(recyclerView, new RemoveHelper.Callback() {
       @Override
       public boolean canRemove (RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, int position) {
+        if (adapter.getItems().isEmpty()) return false;
         ListItem item = (ListItem) adapter.getItems().get(position);
         return item != null && item.getId() == R.id.btn_inviteLink;
       }

File: app/src/main/java/org/thunderdog/challegram/data/TGFoundChat.java
Patch:
@@ -71,6 +71,7 @@ public TGFoundChat (Tdlib tdlib, TdApi.ChatList chatList, TdApi.Chat chat, boole
     setChat(chat, query, isGlobal);
   }
 
+  @Deprecated
   public TGFoundChat (Tdlib tdlib, long userId) {
     this(tdlib, tdlib.cache().user(userId), null, false);
   }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1138,7 +1138,7 @@ public static TdApi.InputMessageContent toInputMessageContent (String filePath,
         }
         if (retriever != null) {
           try {
-            duration = StringUtils.parseInt(retriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION));
+            duration = StringUtils.parseInt(retriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION)) / 1000;
             title = retriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_TITLE);
             performer = retriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_ARTIST);
             if (StringUtils.isEmpty(performer)) {

File: app/src/main/java/org/thunderdog/challegram/data/TGChat.java
Patch:
@@ -874,10 +874,10 @@ public void layoutTitle (boolean changed) {
       muteLeft += Screen.dp(20f);
     }
     if (showChatMark) {
-      muteLeft += chatMark.getWidth();
+      muteLeft += chatMark.getWidth() + Screen.dp(14f);
     }
     if (isSecret) {
-      verifyLeft +=  Screen.dp(14f);
+      verifyLeft += Screen.dp(14f);
       muteLeft += Screen.dp(14f);
     }
     if (changed && avatarPlaceholder != null) {

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -2776,7 +2776,7 @@ public static int readShort (InputStream is) throws IOException {
     return is.read() | (is.read() << 8);
   }
 
-  public static InputStream openInputStream (String path) throws IOException {
+  public static InputStream openInputStream (String path) throws Throwable {
     InputStream is;
     if (path.startsWith("content://")) {
       is = UI.getContext().getContentResolver().openInputStream(Uri.parse(path));
@@ -3465,9 +3465,9 @@ public static boolean canReadFile (String url) {
   }
 
   public static boolean canReadContentUri (Uri uri) {
-    try (InputStream is = openInputStream(uri.toString())) {
+    try (InputStream ignored = openInputStream(uri.toString())) {
       return true;
-    } catch (Exception e) {
+    } catch (Throwable ignored2) {
       return false;
     }
   }

File: app/src/main/java/org/thunderdog/challegram/filegen/VideoGen.java
Patch:
@@ -156,7 +156,7 @@ private static long getBytesCount (String path, boolean needStream) {
       if (needStream) {
         try (InputStream stream = U.openInputStream(path)) {
           return stream.available();
-        } catch (IOException | SecurityException ignored2) { }
+        } catch (Throwable ignored2) { }
       }
     }
     return 0;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -6757,7 +6757,7 @@ private static TGMessage valueOf (MessagesManager context, TdApi.Message msg) {
                       default:
                         if (!isAnonymous) {
                           type = 1;
-                          oldStatus = new TdApi.ChatMemberStatusAdministrator();
+                          oldStatus = new TdApi.ChatMemberStatusAdministrator(null, false, new TdApi.ChatAdministratorRights());
                         } else {
                           oldStatus = e.oldStatus;
                         }
@@ -6771,7 +6771,7 @@ private static TGMessage valueOf (MessagesManager context, TdApi.Message msg) {
                       default:
                         if (!isAnonymous) {
                           type = 2;
-                          newStatus = new TdApi.ChatMemberStatusAdministrator();
+                          newStatus = new TdApi.ChatMemberStatusAdministrator(null, false, new TdApi.ChatAdministratorRights());
                         } else {
                           newStatus = e.newStatus;
                         }
@@ -6906,7 +6906,7 @@ private static TGMessage valueOf (MessagesManager context, TdApi.Message msg) {
                   // no need to show anything
                 } else if (isAnonymous) {
                   appendRight(b, R.string.EventLogPromotedRemainAnonymous, ((TdApi.ChatMemberStatusCreator) oldStatus).isAnonymous, ((TdApi.ChatMemberStatusCreator) newStatus).isAnonymous, false);
-                } else if (isPromote && oldStatus != null && newStatus != null) {
+                } else if (isPromote) {
                   final TdApi.ChatMemberStatusAdministrator oldAdmin = (TdApi.ChatMemberStatusAdministrator) oldStatus;
                   final TdApi.ChatMemberStatusAdministrator newAdmin = (TdApi.ChatMemberStatusAdministrator) newStatus;
                   appendRight(b, msg.isChannelPost ? R.string.EventLogPromotedManageChannel : R.string.EventLogPromotedManageGroup, oldAdmin.rights.canManageChat, newAdmin.rights.canManageChat, false);

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -1004,8 +1004,9 @@ public static String getMapPreview (double lat, double lon, int zoom, boolean da
   }
 
   public static boolean canStreamVideo (TdApi.InputFile inputFile) {
-    // TODO
-    return false;
+    // TODO: check if supportsStreaming boolean is set dynamically in any existing TG client
+    // "send as originals" should be false here I suppose
+    return true;
   }
 
   public static Location getLastKnownLocation (Context context, boolean allowNetwork) {

File: app/src/main/java/org/thunderdog/challegram/component/sharedmedia/MediaSmallView.java
Patch:
@@ -9,6 +9,7 @@
 
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.U;
+import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.loader.ImageReceiver;
 import org.thunderdog.challegram.loader.Receiver;
 import org.thunderdog.challegram.loader.gif.GifReceiver;
@@ -264,7 +265,7 @@ protected void onDraw (Canvas c) {
       c.restore();
     }
 
-    boolean isStreamingUI = item.isVideo();
+    boolean isStreamingUI = item.isVideo() && Config.VIDEO_CLOUD_PLAYBACK_AVAILABLE;
 
     int textLeft = receiver.getLeft() + Screen.dp(7f);
     int textTop = receiver.getTop() + Screen.dp(5f);
@@ -289,6 +290,7 @@ protected void onDraw (Canvas c) {
       if (isStreamingUI) {
         item.getFileProgress().setVideoStreamingProgressHidden(false);
         item.getFileProgress().setVideoStreamingOptions(false, false, FileProgressComponent.STREAMING_UI_MODE_EXTRA_SMALL, rectF, downloadedAnimator);
+        item.getFileProgress().setVideoStreamingClippingRect(rectF);
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMediaController.java
Patch:
@@ -295,7 +295,7 @@ protected MediaItem parseObject (TdApi.Object object) {
     }
     MediaItem item = MediaItem.valueOf(context(), tdlib, message);
     if (item != null) {
-      if (item.isVideo() && Config.VIDEO_CLOUD_PLAYBACK_AVAILABLE) {
+      if (item.isVideo() && Config.VIDEO_CLOUD_PLAYBACK_AVAILABLE && (filter.getConstructor() == TdApi.SearchMessagesFilterVideo.CONSTRUCTOR || filter.getConstructor() == TdApi.SearchMessagesFilterPhotoAndVideo.CONSTRUCTOR)) {
         item.getFileProgress().setHideDownloadedIcon(true);
         item.getFileProgress().setVideoStreaming(true);
       }

File: app/src/main/java/org/thunderdog/challegram/component/chat/ReplyComponent.java
Patch:
@@ -692,7 +692,7 @@ private void setMessage (TdApi.Message msg, boolean forceRequestImage, boolean f
       miniPreview = null;
     }
     TD.ContentPreview contentPreview = TD.getChatListPreview(tdlib, msg.chatId, msg);
-    if (isChannel() && msg.forwardInfo != null) {
+    if (msg.forwardInfo != null) {
       switch (msg.forwardInfo.origin.getConstructor()) {
         case TdApi.MessageForwardOriginUser.CONSTRUCTOR:
           sender = new TdApi.MessageSenderUser(((TdApi.MessageForwardOriginUser) msg.forwardInfo.origin).senderUserId);

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -6015,7 +6015,7 @@ private void addRemoveSendingMessage (long chatId, long messageId, boolean add)
         incrementReferenceCount(REFERENCE_TYPE_MESSAGE);
       }
     } else if (delta < 0) {
-      for (int i = delta - 1; i >= 0; i--) {
+      for (int i = 0; i < -delta; i++) {
         decrementReferenceCount(REFERENCE_TYPE_MESSAGE);
       }
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/ChatHeaderView.java
Patch:
@@ -99,6 +99,8 @@ public void setChat (Tdlib tdlib, TdApi.Chat chat, @Nullable ThreadInfo messageT
     } else {
       setChatPhoto(chat, chat.photo);
       setShowVerify(tdlib.chatVerified(chat));
+      setShowScam(tdlib.chatScam(chat));
+      setShowFake(tdlib.chatFake(chat));
       setShowMute(TD.needMuteIcon(chat.notificationSettings, tdlib.scopeNotificationSettings(chat.id)));
       setText(tdlib.chatTitle(chat), !StringUtils.isEmpty(forcedSubtitle) ? forcedSubtitle : tdlib.status().chatStatus(chat));
       setExpandedSubtitle(tdlib.status().chatStatusExpanded(chat));

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -4858,6 +4858,8 @@ private void setHeaderMute (boolean isUpdate) {
       headerCell.setShowMute(tdlib.chatNeedsMuteIcon(chat.id));
       if (!isUpdate) {
         headerCell.setShowVerify(tdlib.chatVerified(chat));
+        headerCell.setShowScam(tdlib.chatScam(chat));
+        headerCell.setShowFake(tdlib.chatFake(chat));
       }
     }
   }

File: app/src/main/java/org/thunderdog/challegram/ui/PasswordController.java
Patch:
@@ -481,8 +481,8 @@ private CharSequence getCodeHint (TdApi.AuthenticationCodeType type, String form
       }
       case TdApi.AuthenticationCodeTypeMissedCall.CONSTRUCTOR: {
         TdApi.AuthenticationCodeTypeMissedCall missedCall = (TdApi.AuthenticationCodeTypeMissedCall) type;
-        editText.setHint(Lang.getString(R.string.login_LastDigits, missedCall.length));
-        return Strings.replaceBoldTokens(Lang.getString(R.string.SentMissedCall, Strings.formatPhone(missedCall.phoneNumberPrefix), missedCall.length), R.id.theme_color_textLight);
+        editText.setHint(Lang.pluralBold(R.string.login_LastDigits, missedCall.length));
+        return Strings.replaceBoldTokens(Lang.getString(R.string.format_doubleLines, Lang.getString(R.string.SentMissedCall, Strings.formatPhone(missedCall.phoneNumberPrefix)), Lang.plural(R.string.SentMissedCallXDigits, missedCall.length)), R.id.theme_color_textLight);
       }
     }
     return Strings.replaceBoldTokens(Lang.getString(R.string.SentSmsCode), R.id.theme_color_textLight);

File: app/src/main/java/org/thunderdog/challegram/component/sharedmedia/MediaSmallView.java
Patch:
@@ -288,7 +288,7 @@ protected void onDraw (Canvas c) {
 
       if (isStreamingUI) {
         item.getFileProgress().setVideoStreamingProgressHidden(false);
-        item.getFileProgress().setVideoStreamingOptions(false, FileProgressComponent.STREAMING_UI_MODE_EXTRA_SMALL, rectF, downloadedAnimator);
+        item.getFileProgress().setVideoStreamingOptions(false, false, FileProgressComponent.STREAMING_UI_MODE_EXTRA_SMALL, rectF, downloadedAnimator);
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/mediaview/data/MediaItem.java
Patch:
@@ -324,8 +324,8 @@ private MediaItem (BaseActivity context, Tdlib tdlib, long sourceChatId, long so
 
     if (Config.VIDEO_CLOUD_PLAYBACK_AVAILABLE) {
       this.fileProgress.setIgnoreLoaderClicks(true);
+      this.fileProgress.setVideoStreamingProgressHidden(true);
       this.fileProgress.setPausedIconRes(FileProgressComponent.PLAY_ICON);
-      this.fileProgress.setVideoStreamingProgressIgnore(true);
     }
 
     this.fileProgress.setFile(targetFile);

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMediaController.java
Patch:
@@ -296,6 +296,7 @@ protected MediaItem parseObject (TdApi.Object object) {
     MediaItem item = MediaItem.valueOf(context(), tdlib, message);
     if (item != null) {
       if (item.isVideo() && Config.VIDEO_CLOUD_PLAYBACK_AVAILABLE) {
+        item.getFileProgress().setHideDownloadedIcon(true);
         item.getFileProgress().setVideoStreaming(true);
       }
 

File: app/src/main/java/org/thunderdog/challegram/ui/ThemeListController.java
Patch:
@@ -3243,7 +3243,7 @@ private boolean saveProperty (@ThemeProperty int propertyId, float rawValue) {
     ThemeCustom theme = getTheme();
     float originalValue = theme.getProperty(propertyId);
     Float value;
-    if (originalValue != rawValue) {
+    if (originalValue != rawValue || propertyId == ThemeProperty.PARENT_THEME) {
       value = rawValue;
     } else {
       value = null;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -2718,7 +2718,7 @@ void rebuildForward () {
   }
 
   private void buildForward () {
-    if (!useForward()) {
+    if (!useForward() || forwardInfo == null) {
       return;
     }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/LocalScopeNotificationSettings.java
Patch:
@@ -116,7 +116,7 @@ boolean getVibrateOnlyIfSilent () {
   @Nullable
   public String getSound () {
     if (!soundLoaded) {
-      _sound = TdlibNotificationManager.fixSoundUri(Settings.instance().getString(suffix(TdlibNotificationManager.KEY_SUFFIX_SOUND), null));
+      _sound = Settings.instance().getString(suffix(TdlibNotificationManager.KEY_SUFFIX_SOUND), null);
       soundLoaded = true;
     }
     return _sound;

File: app/src/main/java/org/thunderdog/challegram/mediaview/BufferingProgressBarWrap.java
Patch:
@@ -94,10 +94,10 @@ public void setProgressVisible (boolean value, boolean delay) {
   protected void onDraw (Canvas canvas) {
     super.onDraw(canvas);
 
-    final int color = 0x8c000000;
+    final int color = 0x4c000000;
     final int bgColor = ColorUtils.color((int) ((float) Color.alpha(color) * progressVisible.getFloatValue()), color);
 
-    canvas.drawRoundRect(fakeDialogFrame, Screen.dp(8f), Screen.dp(8f), Paints.getPorterDuffPaint(bgColor));
+    canvas.drawRoundRect(fakeDialogFrame, Screen.dp(12f), Screen.dp(12f), Paints.getPorterDuffPaint(bgColor));
     progressComponent.draw(canvas);
   }
 }

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -259,4 +259,6 @@ public static boolean isThemeDoc (TdApi.Document doc) {
   public static final boolean QR_AVAILABLE = true;
   public static final boolean QR_FORCE_ZXING = false;
   public static final boolean MANAGE_STORAGE_PERMISSION_AVAILABLE = false; // Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q;
+
+  public static final boolean VIDEO_CLOUD_PLAYBACK_AVAILABLE = true;
 }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -4410,6 +4410,7 @@ public static void deleteFiles (final ViewController<?> context, final TdApi.Fil
     context.showOptions(Lang.getString(files.length == 1 ? R.string.DeleteFileHint : R.string.DeleteMultipleFilesHint), new int[]{R.id.btn_deleteFile, R.id.btn_cancel}, new String[]{Lang.getString(R.string.ClearX, size), Lang.getString(R.string.Cancel)}, new int[]{ViewController.OPTION_COLOR_RED, ViewController.OPTION_COLOR_NORMAL}, new int[]{R.drawable.baseline_delete_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
       if (id == R.id.btn_deleteFile) {
         TdlibManager.instance().player().stopPlaybackIfPlayingAnyOf(files);
+        context.context().closeFilePip(files);
         for (TdApi.File file : files) {
           final int[] signal = new int[1];
           context.tdlib().client().send(new TdApi.DeleteFile(file.id), object -> {

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMediaController.java
Patch:
@@ -460,7 +460,7 @@ public void onClickAt (View v, float x, float y) {
       }
 
       MediaItem mediaItem = (MediaItem) item.getData();
-      if (mediaItem.isVideo() && !mediaItem.isLoaded()) {
+      if (mediaItem.isVideo() && (!mediaItem.isLoaded() && !Config.VIDEO_CLOUD_PLAYBACK_AVAILABLE)) {
         mediaItem.performClick(v);
       } else if (mediaItem.getType() == MediaItem.TYPE_VIDEO_MESSAGE) {
         if (mediaItem.isLoaded()) {

File: app/src/main/java/org/thunderdog/challegram/component/popups/ModernOptions.java
Patch:
@@ -42,7 +42,7 @@ public static void showLocationAlert (BaseActivity context, boolean isBackground
     }
 
     if (shouldShowAlert) {
-      showLocationAlert(context, Lang.getString(isBackground ? R.string.LocationAlertLiveLocation : R.string.LocationAlertLocation), Lang.getString(R.string.LocationAlertLocationDisclaimer), onCancel, onAgree);
+      showLocationAlert(context, Lang.getString(isBackground ? R.string.LocationAlertLiveLocation : R.string.LocationAlertLocation), Lang.getString(R.string.LocationAlertLocationDisclaimer), isBackground ? onCancel : () -> {}, onAgree);
     } else {
       onAgree.run();
     }
@@ -78,11 +78,11 @@ public boolean onOptionItemPressed (View optionItemView, int id) {
               onAgree.run();
               break;
             case R.id.btn_privacyPolicy:
-              //onCancel.run();
+              onCancel.run();
               currentController.tdlib().ui().openUrl(currentController, Lang.getStringSecure(R.string.url_privacyPolicy), new TdlibUi.UrlOpenParameters().forceInstantView());
               break;
             case R.id.btn_cancel:
-              //onCancel.run();
+              onCancel.run();
               break;
           }
 

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -2291,7 +2291,7 @@ public void draw (Canvas c, int startX, int endX, int endXBottomPadding, int sta
       if (spoilers == null) {
         spoilers = new LongSparseArray<>();
         int partsCount = parts.size();
-        for (int i = 0; i < partsCount; i++) {
+        for (int i = 0; i < partsCount;) {
           TextPart part = parts.get(i);
           TextEntity spoilerEntity = part.getSpoilerEntity();
           if (spoilerEntity != null) {

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -6523,7 +6523,7 @@ private void shareCurrentLocation (final boolean destroyKeyboard) {
     currentShareLocationChatId = getChatId();
 
     if (context().checkLocationPermissions(false) != PackageManager.PERMISSION_GRANTED) {
-      context().requestLocationPermission(false, null);
+      context().requestLocationPermission(false, false, null);
       return;
     }
 

File: app/src/main/java/org/thunderdog/challegram/util/OptionDelegate.java
Patch:
@@ -13,4 +13,5 @@ public interface OptionDelegate {
   default Object getTagForItem (int position) {
     return null;
   }
+  default boolean disableCancelOnTouchdown () { return false; }
 }

File: app/src/main/java/org/thunderdog/challegram/mediaview/data/MediaItem.java
Patch:
@@ -1246,6 +1246,8 @@ public boolean canBeSaved () {
     if (type == TYPE_CHAT_PROFILE) {
       TdApi.Chat chat = tdlib.chat(sourceChatId);
       return chat != null && !chat.hasProtectedContent;
+    } else if (type == TYPE_GALLERY_PHOTO || type == TYPE_GALLERY_VIDEO || type == TYPE_GALLERY_GIF) {
+      return true;
     }
     return getShareFile() != null;
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -3267,7 +3267,7 @@ public void invalidateMediaContent (ComplexReceiver receiver, long messageId) {
 
   public boolean onMessageClick (MessageView v, MessagesController c) {
     // TODO
-    return isEventLog();
+    return /* isEventLog() */ false;
   }
 
   public int getWidth () {

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1677,7 +1677,7 @@ public static Letters getLetters (final @Nullable String part1, final @Nullable
   public static TdApi.PhoneNumberAuthenticationSettings defaultPhoneNumberAuthenticationSettings () {
     return new TdApi.PhoneNumberAuthenticationSettings(
       false,
-      false, // TODO support to save Telegram money
+      true,
       false,
       false, // TODO for faster login when SMS method is chosen
       Settings.instance().getAuthenticationTokens()
@@ -2018,6 +2018,8 @@ public static int getCodeLength (TdApi.AuthenticationCodeType info) {
         return ((TdApi.AuthenticationCodeTypeSms) info).length;
       case TdApi.AuthenticationCodeTypeTelegramMessage.CONSTRUCTOR:
         return ((TdApi.AuthenticationCodeTypeTelegramMessage) info).length;
+      case TdApi.AuthenticationCodeTypeMissedCall.CONSTRUCTOR:
+        return ((TdApi.AuthenticationCodeTypeMissedCall) info).length;
       /*case TdApi.AuthenticationCodeTypeFlashCall.CONSTRUCTOR:
         return ((TdApi.AuthenticationCodeTypeFlashCall) info).pattern;*/
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -775,7 +775,7 @@ private void scrollToBottom (boolean smooth) {
         if (controller.canWriteMessages()) {
           manager.scrollToPosition(1);
         } else {
-          manager.scrollToPositionWithOffset(0, Screen.dp(48f));
+          manager.scrollToPositionWithOffset(1, Screen.dp(48f));
         }
       } else {
         manager.scrollToPositionWithOffset(0, 0);
@@ -1144,7 +1144,7 @@ private void requestSponsoredMessage () {
           boolean isFirstItemVisible = manager.findFirstCompletelyVisibleItemPosition() == 0;
           adapter.addMessage(SponsoredMessageUtils.sponsoredToTgx(this, loader.getChatId(), lastMessage.getDate(), message), false, false);
           if (isFirstItemVisible && !isScrolling && !controller.canWriteMessages()) {
-            manager.scrollToPositionWithOffset(0, Screen.dp(48f));
+            manager.scrollToPositionWithOffset(1, Screen.dp(48f));
           }
         };
 
@@ -1340,7 +1340,7 @@ private void updateNewMessage (TGMessage message) {
             if (controller.canWriteMessages()) {
               manager.scrollToPosition(1);
             } else {
-              manager.scrollToPositionWithOffset(0, Screen.dp(48f));
+              manager.scrollToPositionWithOffset(1, Screen.dp(48f));
             }
           } else {
             manager.scrollToPositionWithOffset(0, scrollOffsetInPixels);

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageText.java
Patch:
@@ -70,7 +70,6 @@ public TGMessageText (MessagesManager context, TdApi.Message msg, TdApi.Sponsore
     this.sponsoredMetadata = text;
     this.currentMessageText = (TdApi.MessageText) text.content;
     setText(currentMessageText.text, true);
-    addMessageFlags(FLAG_SPONSORED);
   }
 
   public TdApi.File getTargetFile () {

File: app/src/main/java/org/thunderdog/challegram/core/Lang.java
Patch:
@@ -1677,7 +1677,7 @@ public static String getDuration (final int seconds, int fullDateRes, int fullDa
     if (months < 12) {
       return plural(R.string.xMonths, months);
     }
-    int years = days / 365;
+    int years = Math.max(1, days / 365);
     return plural(R.string.xYears, years);
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsWebsitesController.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.view.View;
+import android.widget.ImageView;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 
@@ -109,7 +110,7 @@ protected void setValuedSetting (ListItem item, SettingView view, boolean isUpda
       }
 
       @Override
-      protected void setSession (ListItem item, int position, RelativeLayout parent, boolean isUpdate, TextView timeView, TextView titleView, TextView subtextView, TextView locationView, ProgressComponentView progressView, AvatarView avatarView) {
+      protected void setSession (ListItem item, int position, RelativeLayout parent, boolean isUpdate, TextView timeView, TextView titleView, TextView subtextView, TextView locationView, ProgressComponentView progressView, AvatarView avatarView, ImageView iconView, TextView secretStateView, TextView callsStateView) {
         TdApi.ConnectedWebsite website = (TdApi.ConnectedWebsite) item.getData();
         titleView.setText(Emoji.instance().replaceEmoji(website.domainName));
         subtextView.setText(Strings.concat(", ", Emoji.instance().replaceEmoji(tdlib.cache().userName(website.botUserId)), website.browser, website.platform));

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -3282,7 +3282,7 @@ public boolean isChannelFast (long chatId) {
 
   public boolean isChannel (TdApi.MessageSender senderId) {
     long chatId = Td.getSenderId(senderId);
-    return chatId != 0 && isChannel(senderId);
+    return chatId != 0 && isChannel(chatId);
   }
 
   public boolean isUser (TdApi.MessageSender senderId) {

File: app/src/main/java/org/thunderdog/challegram/ui/ListItem.java
Patch:
@@ -139,6 +139,7 @@ public class ListItem {
   public static final int TYPE_STATS_MESSAGE_PREVIEW = 121;
 
   public static final int TYPE_EMBED_STICKER = 130;
+  public static final int TYPE_JOIN_REQUEST = 131;
 
   private static final int FLAG_SELECTED = 1;
   private static final int FLAG_BOOL_VALUE = 1 << 1;

File: app/src/main/java/org/thunderdog/challegram/unsorted/Settings.java
Patch:
@@ -789,6 +789,9 @@ public long getLong (String key, long defValue) {
   public long[] getLongArray (String key) {
     return pmc.getLongArray(key);
   }
+  public void putLongArray (String key, long[] value) {
+    pmc.putLongArray(key, value);
+  }
   public void putInt (String key, int value) {
     pmc.putInt(key, value);
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerController.java
Patch:
@@ -701,9 +701,6 @@ public void onAccountProfilePhotoChanged (TdlibAccount account, boolean big, boo
     }
   }
 
-  @Override
-  public void onAuthorizationStateChanged (TdlibAccount account, TdApi.AuthorizationState authorizationState, int status) { }
-
   @Override
   public void onActiveAccountRemoved (TdlibAccount account, int position) {
     if (showingAccounts) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -3758,7 +3758,7 @@ else if (administrator.isOwner)
         result = Lang.getString(R.string.message_adminSignPlain);
     } else if (sender.isAnonymousGroupAdmin()) {
       result = !StringUtils.isEmpty(msg.authorSignature) ? msg.authorSignature : Lang.getString(R.string.message_adminSignPlain);
-    } else if (tdlib.isMultiChat(msg.chatId) && StringUtils.isEmpty(msg.authorSignature)) {
+    } else if (StringUtils.isEmpty(msg.authorSignature) && msg.chatId != 0 && tdlib.isMultiChat(msg.chatId)) {
       long chatId = sender.getChatId();
       if (tdlib.isChannel(chatId)) {
         result = Lang.getString(R.string.message_channelSign);

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -3039,9 +3039,7 @@ private static CharSequence getMemberDescriptionString (TdlibDelegate context, l
       }
       case TdApi.ChatMemberStatusMember.CONSTRUCTOR: {
         if (member.inviterUserId != 0) {
-          result = getMemberDescriptionString(context, member.inviterUserId, member.joinedChatDate, R.string.InvitedByXOnDate, R.string.InvitedByX, 0);
-        } else if (member.joinedChatDate != 0) {
-          result = Lang.getRelativeDate(member.joinedChatDate, TimeUnit.SECONDS, context.tdlib().currentTimeMillis(), TimeUnit.MILLISECONDS, false, 0, R.string.RoleMember, false);
+          result = getMemberDescriptionString(context, member.inviterUserId, 0, R.string.InvitedByXOnDate, R.string.InvitedByX, 0);
         } else {
           result = null;
         }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -3026,11 +3026,11 @@ private static CharSequence getMemberDescriptionString (TdlibDelegate context, l
         result = Lang.getString(R.string.ChannelOwner);
         break;
       case TdApi.ChatMemberStatusAdministrator.CONSTRUCTOR: {
-        result = getMemberDescriptionString(context, member.inviterUserId, member.joinedChatDate, R.string.PromotedByXOnDate, R.string.PromotedByX, R.string.Administrator);
+        result = getMemberDescriptionString(context, member.inviterUserId, 0 /*FIXME server*/, R.string.PromotedByXOnDate, R.string.PromotedByX, R.string.Administrator);
         break;
       }
       case TdApi.ChatMemberStatusRestricted.CONSTRUCTOR: {
-        result = getMemberDescriptionString(context, member.inviterUserId, member.joinedChatDate, R.string.RestrictedByXOnDate, R.string.RestrictedByX, R.string.Restricted);
+        result = getMemberDescriptionString(context, member.inviterUserId, ((TdApi.ChatMemberStatusRestricted) member.status).isMember ? /*FIXME server*/ 0 : member.joinedChatDate, R.string.RestrictedByXOnDate, R.string.RestrictedByX, R.string.Restricted);
         break;
       }
       case TdApi.ChatMemberStatusBanned.CONSTRUCTOR: {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -6861,7 +6861,9 @@ private static TGMessage valueOf (MessagesManager context, TdApi.Message msg) {
                   final TdApi.ChatMemberStatusRestricted oldBan = oldStatus.getConstructor() == TdApi.ChatMemberStatusRestricted.CONSTRUCTOR ? (TdApi.ChatMemberStatusRestricted) oldStatus : null;
                   final TdApi.ChatMemberStatusRestricted newBan = newStatus.getConstructor() == TdApi.ChatMemberStatusRestricted.CONSTRUCTOR ? (TdApi.ChatMemberStatusRestricted) newStatus : null;
 
-                  appendRight(b, R.string.EventLogRestrictedReadMessages, oldCanReadMessages, newCanReadMessages, false);
+                  if (memberId.getConstructor() == TdApi.MessageSenderUser.CONSTRUCTOR) {
+                    appendRight(b, R.string.EventLogRestrictedReadMessages, oldCanReadMessages, newCanReadMessages, false);
+                  }
                   appendRight(b, R.string.EventLogRestrictedSendMessages, oldBan != null ? oldBan.permissions.canSendMessages : oldCanReadMessages, newBan != null ? newBan.permissions.canSendMessages : newCanReadMessages, false);
                   appendRight(b, R.string.EventLogRestrictedSendMedia, oldBan != null ? oldBan.permissions.canSendMediaMessages : oldCanReadMessages, newBan != null ? newBan.permissions.canSendMediaMessages : newCanReadMessages, false);
                   appendRight(b, R.string.EventLogRestrictedSendStickers, oldBan != null ? oldBan.permissions.canSendOtherMessages : oldCanReadMessages, newBan != null ? newBan.permissions.canSendOtherMessages : newCanReadMessages, false);

File: app/src/main/java/org/thunderdog/challegram/navigation/TooltipOverlayView.java
Patch:
@@ -1089,6 +1089,9 @@ public boolean hasVisibleTarget () {
       if (controller != null) {
         return controller.isFocused();
       }
+      if (originalView != null) {
+        return ViewCompat.isAttachedToWindow(originalView);
+      }
       return false;
     }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibCache.java
Patch:
@@ -238,7 +238,7 @@ private void onUserStatusUpdate (long userId, int wasOnline, @Nullable TdApi.Use
           break;
         }
         case TdApi.Error.CONSTRUCTOR: {
-          UI.showError(object);
+          Log.i("dataHandler error: %s", TD.toErrorString(object));
           break;
         }
         default: {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -852,7 +852,7 @@ public static Object fillMessageOptions (MessagesController m, TGMessage msg, @N
 
     // Admin tools inside "More"
     final TdApi.ChatMemberStatus myStatus = m.tdlib().chatStatus(msg.getChatId());
-    if (myStatus != null && TD.isAdmin(myStatus)) {
+    if (myStatus != null && TD.isAdmin(myStatus) && Td.getSenderId(msg.getMessage().senderId) != msg.getChatId()) {
       if (sender != null) {
         final int restrictMode = TD.canRestrictMember(myStatus, sender.status);
         if (restrictMode != TD.RESTRICT_MODE_NONE) {

File: app/src/main/java/org/thunderdog/challegram/data/DoubleTextWrapper.java
Patch:
@@ -103,8 +103,8 @@ public DoubleTextWrapper (Tdlib tdlib, long userId, boolean needSubtitle) {
     }
   }
 
-  public TdApi.MessageSender getSender () {
-    return userId != 0 ? new TdApi.MessageSenderUser(userId) : chatId != 0 ? new TdApi.MessageSenderChat(chatId) : null;
+  public TdApi.MessageSender getSenderId () {
+    return userId != 0 ? new TdApi.MessageSenderUser(userId) : chatId != 0 ? (ChatId.isUserChat(chatId) ? new TdApi.MessageSenderUser(tdlib.chatUserId(chatId)) : new TdApi.MessageSenderChat(chatId)) : null;
   }
 
   private static final float AVATAR_PLACEHOLDER_RADIUS = 25f;

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsWebsitesController.java
Patch:
@@ -230,11 +230,11 @@ private void terminateSession (final TdApi.ConnectedWebsite website, boolean ban
     if (needConfirm) {
       showSettings(new SettingsWrapBuilder(R.id.btn_terminateSession)
         .setRawItems(new ListItem[] {
-          new ListItem(ListItem.TYPE_CHECKBOX_OPTION, R.id.btn_banUser, 0, Lang.getString(R.string.DisconnectWebsiteBan, tdlib.cache().userName(website.botUserId)), R.id.btn_banUser, banUser)
+          new ListItem(ListItem.TYPE_CHECKBOX_OPTION, R.id.btn_banMember, 0, Lang.getString(R.string.DisconnectWebsiteBan, tdlib.cache().userName(website.botUserId)), R.id.btn_banMember, banUser)
         })
         .addHeaderItem(Lang.getString(R.string.TerminateWebSessionQuestion, website.domainName))
         .setIntDelegate((id, result) -> {
-          boolean banUser1 = result.get(R.id.btn_banUser) == R.id.btn_banUser;
+          boolean banUser1 = result.get(R.id.btn_banMember) == R.id.btn_banMember;
           terminateSession(website, banUser1, false);
         })
         .setSaveStr(R.string.DisconnectWebsite)

File: app/src/main/java/org/thunderdog/challegram/util/SenderPickerDelegate.java
Patch:
@@ -9,9 +9,9 @@
 import org.drinkless.td.libcore.telegram.TdApi;
 import org.thunderdog.challegram.ui.ContactsController;
 
-public interface UserPickerDelegate {
-  boolean onUserPick (ContactsController context, View view, TdApi.User user); // true if no confirm required
-  void onUserConfirm (ContactsController context, TdApi.User user, int option);
+public interface SenderPickerDelegate {
+  boolean onSenderPick (ContactsController context, View view, TdApi.MessageSender senderId); // true if no confirm required
+  default void onSenderConfirm (ContactsController context, TdApi.MessageSender senderId, int option) { } // called if onSenderPick returned false
   default boolean allowGlobalSearch () { return false; }
   default String getUserPickTitle () { return null; }
 }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -852,7 +852,7 @@ public static Object fillMessageOptions (MessagesController m, TGMessage msg, @N
 
     // Admin tools inside "More"
     final TdApi.ChatMemberStatus myStatus = m.tdlib().chatStatus(msg.getChatId());
-    if (myStatus != null && myStatus.getConstructor() == TdApi.ChatMemberStatusAdministrator.CONSTRUCTOR) {
+    if (myStatus != null && TD.isAdmin(myStatus)) {
       if (sender != null) {
         final int restrictMode = TD.canRestrictMember(myStatus, sender.status);
         if (restrictMode != TD.RESTRICT_MODE_NONE) {

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4938,7 +4938,8 @@ public boolean onOptionItemPressed (View itemView, int id) {
           final long chatId = selectedMessage.getChatId();
           if (ChatId.isMultiChat(chatId) && !tdlib.isChannel(chatId) && TD.isAdmin(tdlib.chatStatus(chatId))) {
             TGMessage selectedMessage = this.selectedMessage;
-            tdlib.client().send(new TdApi.GetChatMember(chatId, selectedMessage.getMessage().senderId), result -> {
+            TdApi.MessageSender senderId = selectedMessage.getMessage().senderId;
+            tdlib.client().send(new TdApi.GetChatMember(chatId, senderId), result -> {
               TdApi.ChatMember otherMember = result.getConstructor() == TdApi.ChatMember.CONSTRUCTOR ? ((TdApi.ChatMember) result) : null;
               tdlib.ui().post(() -> {
                 if (!selectedMessage.isDestroyed()) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -3758,7 +3758,7 @@ else if (administrator.isOwner)
         result = Lang.getString(R.string.message_adminSignPlain);
     } else if (sender.isAnonymousGroupAdmin()) {
       result = !StringUtils.isEmpty(msg.authorSignature) ? msg.authorSignature : Lang.getString(R.string.message_adminSignPlain);
-    } else {
+    } else if (tdlib.isMultiChat(msg.chatId) && StringUtils.isEmpty(msg.authorSignature)) {
       long chatId = sender.getChatId();
       if (tdlib.isChannel(chatId)) {
         result = Lang.getString(R.string.message_channelSign);
@@ -3780,7 +3780,7 @@ public final TdApi.ChatAdministrator getAdministrator () {
   }
 
   private boolean needAdminSign () {
-    return administrator != null || (sender.isAnonymousGroupAdmin() ? !StringUtils.isEmpty(msg.authorSignature) : ChatId.isMultiChat(sender.getChatId()));
+    return getAdministratorSign() != null;
   }
 
   public final void setAdministratorSign (@Nullable TdApi.ChatAdministrator administrator) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -259,7 +259,7 @@ private static boolean deleteSuperGroupMessages (final ViewController<?> context
       return false;
     }
     final TdApi.MessageSender senderId = TD.getSender(deletingMessages);
-    if (context.tdlib().isSelfSender(senderId) || senderId == null) {
+    if (senderId == null || context.tdlib().isSelfSender(senderId)) {
       return false;
     }
 
@@ -268,7 +268,7 @@ private static boolean deleteSuperGroupMessages (final ViewController<?> context
 
     SettingsWrap wrap = context.showSettings(new SettingsWrapBuilder(R.id.btn_deleteSupergroupMessages).setHeaderItem(
       new ListItem(ListItem.TYPE_INFO, R.id.text_title, 0, text, false)).setRawItems(
-      new ListItem[]{
+      new ListItem[] {
         new ListItem(ListItem.TYPE_CHECKBOX_OPTION, R.id.btn_banUser, 0, senderId.getConstructor() == TdApi.MessageSenderUser.CONSTRUCTOR ? R.string.RestrictUser : tdlib.isChannel(((TdApi.MessageSenderChat) senderId).chatId) ? R.string.BanChannel : R.string.BanChat, false),
         new ListItem(ListItem.TYPE_CHECKBOX_OPTION, R.id.btn_reportSpam, 0, R.string.ReportSpam, false),
         new ListItem(ListItem.TYPE_CHECKBOX_OPTION, R.id.btn_deleteAll, 0, Lang.getStringBold(R.string.DeleteAllFrom, name), false)

File: app/src/main/java/org/thunderdog/challegram/data/TGInlineKeyboard.java
Patch:
@@ -1145,7 +1145,8 @@ public void onOwnershipTransferConfirmed (String password) {
         }
         case TdApi.InlineKeyboardButtonTypeUser.CONSTRUCTOR: {
           final TdApi.InlineKeyboardButtonTypeUser user = (TdApi.InlineKeyboardButtonTypeUser) type;
-          context.context.tdlib().ui().openPrivateChat(context.context.controller(), user.userId, new TdlibUi.ChatOpenParameters().keepStack().urlOpenParameters(openParameters(currentContextId, view)));
+          // context.context.tdlib().ui().openPrivateChat(context.context.controller(), user.userId, new TdlibUi.ChatOpenParameters().keepStack().urlOpenParameters(openParameters(currentContextId, view)));
+          context.context.tdlib().ui().openPrivateProfile(context.context, user.userId, openParameters(currentContextId, view));
           break;
         }
         case TdApi.InlineKeyboardButtonTypeSwitchInline.CONSTRUCTOR: {

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -2611,7 +2611,10 @@ public static int canRestrictMember (TdApi.ChatMemberStatus me, TdApi.ChatMember
             case TdApi.ChatMemberStatusBanned.CONSTRUCTOR:
               return RESTRICT_MODE_EDIT;
             case TdApi.ChatMemberStatusMember.CONSTRUCTOR:
+            case TdApi.ChatMemberStatusLeft.CONSTRUCTOR:
               return RESTRICT_MODE_NEW;
+            case TdApi.ChatMemberStatusCreator.CONSTRUCTOR:
+              return RESTRICT_MODE_NONE;
           }
         }
         break;

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -1575,7 +1575,7 @@ public void onMoreItemPressed (int id) {
         if (message != null) {
           TdlibUi.reportChat(this, item.getSourceChatId(), new TdApi.Message[] {message}, null, getForcedTheme());
         } else {
-          final long chatId = item.getSourceChatId();
+          final long chatId = Td.getSenderId(item.getSourceSender());
           final RunnableData<TdApi.PhotoSize> act = (photoSize) -> {
             if (photoSize != null) {
               tdlib.ui().post(() ->

File: app/src/main/java/org/thunderdog/challegram/mediaview/data/MediaItem.java
Patch:
@@ -435,6 +435,7 @@ public MediaItem (BaseActivity context, Tdlib tdlib, long chatId, long messageId
     this.type = TYPE_CHAT_PROFILE;
     this.sourceChatId = chatId;
     this.sourceMessageId = messageId;
+    this.sourceSender = ChatId.isUserChat(chatId) ? new TdApi.MessageSenderUser(tdlib.chatUserId(chatId)) : new TdApi.MessageSenderChat(chatId);
     this.sourceDate = photo.addedDate;
     this.chatPhoto = photo;
 

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4380,9 +4380,10 @@ private boolean canCopySelectedMessages () {
       return false;
     }
     if (selectedMessageIds.size() == 1) {
-      return TD.canCopyText(getSingleSelectedMessage());
+      TdApi.Message message = getSingleSelectedMessage();
+      return message.canBeSaved && TD.canCopyText(message);
     }
-    return !isSecretChat();
+    return !(isSecretChat() || chat.hasProtectedContent);
   }
 
   private boolean canDeleteSelectedMessages () {

File: app/src/main/java/org/thunderdog/challegram/ui/SharedBaseController.java
Patch:
@@ -1033,7 +1033,7 @@ public void deleteMessages () {
   }
 
   public boolean canCopyMessages () {
-    return selectedMessages != null && selectedMessages.size() == 1 && provideSearchFilter().getConstructor() == TdApi.SearchMessagesFilterUrl.CONSTRUCTOR;
+    return selectedMessages != null && selectedMessages.size() == 1 && selectedMessages.values().iterator().next().canBeSaved && provideSearchFilter().getConstructor() == TdApi.SearchMessagesFilterUrl.CONSTRUCTOR;
   }
 
   public void copyMessages () {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLoader.java
Patch:
@@ -1126,6 +1126,7 @@ private TdApi.Message[] parseChatEvents (final long chatId, final TdApi.ChatEven
         case TdApi.ChatEventMessageUnpinned.CONSTRUCTOR:
         case TdApi.ChatEventInvitesToggled.CONSTRUCTOR:
         case TdApi.ChatEventSignMessagesToggled.CONSTRUCTOR:
+        case TdApi.ChatEventHasProtectedContentToggled.CONSTRUCTOR:
         case TdApi.ChatEventIsAllHistoryAvailableToggled.CONSTRUCTOR:
         case TdApi.ChatEventStickerSetChanged.CONSTRUCTOR:
         case TdApi.ChatEventLinkedChatChanged.CONSTRUCTOR:

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1677,9 +1677,9 @@ public static Letters getLetters (final @Nullable String part1, final @Nullable
   public static TdApi.PhoneNumberAuthenticationSettings defaultPhoneNumberAuthenticationSettings () {
     return new TdApi.PhoneNumberAuthenticationSettings(
       false,
-      false, // TODO
+      false, // TODO support to save Telegram money
       false,
-      false, // TODO
+      false, // TODO for faster login when SMS method is chosen
       Settings.instance().getAuthenticationTokens()
     );
   }

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatListener.java
Patch:
@@ -30,5 +30,6 @@ default void onChatReplyMarkupChanged (long chatId, long replyMarkupMessageId) {
   default void onChatDraftMessageChanged (long chatId, @Nullable TdApi.DraftMessage draftMessage) { }
   default void onChatUnreadMentionCount(long chatId, int unreadMentionCount, boolean availabilityChanged) { }
   default void onChatDefaultDisableNotifications (long chatId, boolean defaultDisableNotifications) { }
+  default void onChatDefaultMessageSenderIdChanged (long chatId, TdApi.MessageSender senderId) { }
   default void onChatClientDataChanged (long chatId, @Nullable String clientData) { }
 }

File: app/src/main/java/org/thunderdog/challegram/mediaview/MediaViewController.java
Patch:
@@ -3082,6 +3082,8 @@ private void setSlide (float x, float y, float sourceX, boolean noRotation, bool
     lastSlideSourceX = sourceX;
 
     float dismissFactor = Math.abs(Math.min(1f, y / (float) Screen.dp(125f)));
+    if (Float.isNaN(dismissFactor)) // TODO: find out why it could become NaN
+      dismissFactor = 0f;
     if (noRotation || dismissFactor > this.dismissFactor || byTouch) {
       setSlideDismissFactor(dismissFactor);
     }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewController.java
Patch:
@@ -1822,6 +1822,7 @@ public void getItemOffsets (@NonNull Rect outRect, @NonNull View view, @NonNull
     recyclerView.setLayoutManager(new LinearLayoutManager(context(), RecyclerView.VERTICAL, false));
 
     final PopupLayout popupLayout = settings.window = new PopupLayout(context);
+    popupLayout.setNeedKeyboardPadding(context.isKeyboardVisible() && Screen.isGesturalNavigationEnabled());
     popupLayout.setPopupHeightProvider(() -> {
       LinearLayoutManager manager = (LinearLayoutManager) recyclerView.getLayoutManager();
       int firstPosition = manager.findFirstVisibleItemPosition();
@@ -2307,6 +2308,7 @@ protected final PopupLayout showPopup (CharSequence title, boolean isTitle, @Non
     final PopupLayout popupLayout = new PopupLayout(context);
     popupLayout.setTag(this);
     popupLayout.init(true);
+    popupLayout.setNeedKeyboardPadding(context.isKeyboardVisible() && Screen.isGesturalNavigationEnabled());
 
     int totalHeight = 0;
 

File: app/src/main/java/org/thunderdog/challegram/ui/ChatStatisticsController.java
Patch:
@@ -454,7 +454,7 @@ private void setRecentMessageInteractions (TdApi.DateRange range, TdApi.ChatStat
       adapter.getItems().add(new ListItem(ListItem.TYPE_CHART_HEADER_DETACHED).setData(new MiniChart(header, range)));
 
       for (int i = 0; i < interactionMessages.size(); i++) {
-        adapter.getItems().add(new ListItem(i == 0 ? ListItem.TYPE_SHADOW_TOP : ListItem.TYPE_SEPARATOR, i != 0 ? R.id.separator : 0));
+        adapter.getItems().add(new ListItem(i == 0 ? ListItem.TYPE_SHADOW_TOP : ListItem.TYPE_SEPARATOR_FULL, i != 0 ? R.id.separator : 0));
         adapter.getItems().add(new ListItem(ListItem.TYPE_STATS_MESSAGE_PREVIEW, R.id.btn_messageMore).setData(interactionMessages.get(i)));
       }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -4516,6 +4516,7 @@ private static void copyFlags (TdApi.Message src, TdApi.Message dst) {
     dst.canBeForwarded = src.canBeForwarded;
     dst.canBeEdited = src.canBeEdited;
     dst.canGetStatistics = src.canGetStatistics;
+    dst.canGetViewers = src.canGetViewers;
     dst.canGetMediaTimestampLinks = src.canGetMediaTimestampLinks;
     dst.hasTimestampedMedia = src.hasTimestampedMedia;
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -1819,9 +1819,9 @@ private static void showLinkTooltip (Tdlib tdlib, int iconRes, CharSequence mess
     }
     if (urlOpenParameters != null && urlOpenParameters.tooltip != null && urlOpenParameters.tooltip.hasVisibleTarget()) {
       if (iconRes == 0) {
-        urlOpenParameters.tooltip.show(tdlib, message).hideDelayed();
+        urlOpenParameters.tooltip.show(tdlib, message).hideDelayed(3500, TimeUnit.MILLISECONDS);
       } else {
-        new TooltipOverlayView.TooltipBuilder(urlOpenParameters.tooltip).icon(iconRes).show(tdlib, message).hideDelayed();
+        new TooltipOverlayView.TooltipBuilder(urlOpenParameters.tooltip).icon(iconRes).show(tdlib, message).hideDelayed(3500, TimeUnit.MILLISECONDS);
       }
     } else {
       UI.showToast(message, Toast.LENGTH_SHORT);

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -1135,7 +1135,7 @@ public void onBackPressed (boolean fromTop) {
     if (tooltipOverlayView != null && tooltipOverlayView.onBackPressed()) {
       return;
     }
-    if (dismissLastOpenWindow(false, true)) {
+    if (dismissLastOpenWindow(false, true, fromTop)) {
       return;
     }
     if (isCameraOpen) {
@@ -2018,15 +2018,15 @@ public void removeWindowFromList (PopupLayout window) {
     return popupLayout != null ? popupLayout.getBoundController() : null;
   }
 
-  public boolean dismissLastOpenWindow (boolean byKeyPress, boolean byBackPress) {
+  public boolean dismissLastOpenWindow (boolean byKeyPress, boolean byBackPress, boolean byHeaderBackPress) {
     final int size = windows.size();
     for (int i = size - 1; i >= 0; i--) {
       PopupLayout window = windows.get(i);
       if (window.isBoundWindowShowing()) {
         if (byKeyPress && window.canHideKeyboard()) {
           return window.hideSoftwareKeyboard();
         }
-        if (byBackPress && window.onBackPressed()) {
+        if (byBackPress && window.onBackPressed(byHeaderBackPress)) {
           return true;
         }
         window.hideWindow(true);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -430,7 +430,7 @@ private boolean onMessageClick (float x, float y) {
       if (isSent) {
         return showChatOptions(m, (TGMessageChat) msg);
       } else {
-        m.showMessageOptions(msg, new int[] {R.id.btn_messageDelete}, new String[] {Lang.getString(R.string.Delete)}, new int[] {R.drawable.baseline_delete_24}, null);
+        m.showMessageOptions(msg, new int[] {R.id.btn_messageDelete}, new String[] {Lang.getString(R.string.Delete)}, new int[] {R.drawable.baseline_delete_24}, null, true);
         return true;
       }
     }
@@ -440,7 +440,7 @@ private boolean onMessageClick (float x, float y) {
     StringList strings = new StringList(6);
     Object tag = fillMessageOptions(m, msg, ids, icons, strings, false);
     if (!ids.isEmpty()) {
-      m.showMessageOptions(msg, ids.get(), strings.get(), icons.get(), tag);
+      m.showMessageOptions(msg, ids.get(), strings.get(), icons.get(), tag, false);
       return true;
     }
     return false;
@@ -918,7 +918,7 @@ private boolean showChatOptions (MessagesController m, TGMessageChat msg) {
       return false;
     }
 
-    m.showMessageOptions(msg, ids.get(), strings.get(), icons.get(), null);
+    m.showMessageOptions(msg, ids.get(), strings.get(), icons.get(), null, true);
     return true;
   }
 

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerPreviewView.java
Patch:
@@ -116,7 +116,7 @@ public void setControllerView (StickerSmallView stickerView) {
   }
 
   @Override
-  public boolean onBackPressed () {
+  public boolean onBackPressed (boolean fromTop) {
     closePreviewIfNeeded();
     return true;
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/BackListener.java
Patch:
@@ -5,5 +5,5 @@
 package org.thunderdog.challegram.navigation;
 
 public interface BackListener {
-  boolean onBackPressed ();
+  boolean onBackPressed (boolean fromTop);
 }

File: app/src/main/java/org/thunderdog/challegram/ui/IntroController.java
Patch:
@@ -290,7 +290,7 @@ public static boolean isIntroAttemptedButFailed () {
         }
       }
       popupLayout.setDisableCancelOnTouchDown(true);
-      popupLayout.setBackListener(() -> {
+      popupLayout.setBackListener((fromTop) -> {
         if (loginRequest == request) {
           cancelLoginRequest();
         }
@@ -331,7 +331,7 @@ private boolean needMissingNetworkPopup () {
     });
     if (popupLayout != null) {
       popupLayout.setDisableCancelOnTouchDown(true);
-      popupLayout.setBackListener(() -> {
+      popupLayout.setBackListener((fromTop) -> {
         if (loginRequest == request) {
           cancelLoginRequest();
         }

File: app/src/main/java/org/thunderdog/challegram/v/EditTextBase.java
Patch:
@@ -135,7 +135,7 @@ public boolean onKeyPreIme (int keyCode, KeyEvent e) {
       switch (e.getAction()) {
         case KeyEvent.ACTION_DOWN: {
           BaseActivity context = UI.getContext(getContext());
-          if (context != null && context.dismissLastOpenWindow(true, true)) {
+          if (context != null && context.dismissLastOpenWindow(true, true, false)) {
             return true;
           }
           if (onKeyboardBackPress()) {

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewController.java
Patch:
@@ -2251,6 +2251,7 @@ public final PopupLayout showOptions (Options options, final OptionDelegate dele
     final PopupLayout popupLayout = new PopupLayout(context);
     popupLayout.setTag(this);
     popupLayout.init(true);
+    popupLayout.setNeedKeyboardPadding(context.isKeyboardVisible() && Screen.isGesturalNavigationEnabled());
 
     OptionsLayout optionsWrap = new OptionsLayout(context(), this, forcedTheme);
     optionsWrap.setInfo(this, tdlib(), options.info, false);

File: app/src/main/java/org/thunderdog/challegram/ui/MessageStatisticsController.java
Patch:
@@ -207,7 +207,7 @@ private void setAlbum (List<TdApi.Message> album) {
         items.add(new ListItem(ListItem.TYPE_SHADOW_TOP));
         first = false;
       } else {
-        items.add(new ListItem(ListItem.TYPE_SEPARATOR, R.id.separator));
+        items.add(new ListItem(ListItem.TYPE_SEPARATOR_FULL, R.id.separator));
       }
       items.add(new ListItem(ListItem.TYPE_STATS_MESSAGE_PREVIEW, R.id.btn_messageMore).setData(albumMessage));
     }

File: app/src/main/java/org/thunderdog/challegram/ui/MapController.java
Patch:
@@ -667,7 +667,9 @@ public void destroy () {
       destroyMap(mapView);
       mapView = null;
     }
-    locationHelper.destroy();
+    if (locationHelper != null) {
+      locationHelper.destroy();
+    }
     Views.destroyRecyclerView(recyclerView);
   }
 

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationManager.java
Patch:
@@ -1854,7 +1854,7 @@ private void sendLockedMessage (Message message, @Nullable Runnable after) {
   @AnyThread
   public void onUpdateNotificationChannels (long accountUserId) {
     if (Thread.currentThread() != queue) {
-      queue.sendMessage(Message.obtain(queue.getHandler(), ON_UPDATE_NOTIFICATION_CHANNELS, BitwiseUtils.splitLongToFirstInt(accountUserId), BitwiseUtils.splitLongToSecondInt(accountUserId), this), 0);
+      sendLockedMessage(Message.obtain(queue.getHandler(), ON_UPDATE_NOTIFICATION_CHANNELS, BitwiseUtils.splitLongToFirstInt(accountUserId), BitwiseUtils.splitLongToSecondInt(accountUserId), this), null);
     } else {
       resetNotificationGroupImpl(accountUserId);
     }
@@ -1894,7 +1894,7 @@ public boolean allowNotificationSound (long chatId) {
   @AnyThread
   private void rebuildNotification () {
     if (Thread.currentThread() != queue) {
-      queue.sendMessage(Message.obtain(queue.getHandler(), REBUILD_NOTIFICATION, this), 0);
+      sendLockedMessage(Message.obtain(queue.getHandler(), REBUILD_NOTIFICATION, this), null);
     } else {
       rebuildNotificationImpl();
     }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewPagerTopView.java
Patch:
@@ -389,7 +389,8 @@ private void recalculateSelection (float selectionFactor, boolean set) {
     if (shouldWrapContent()) {
       float remainFactor = selectionFactor - (float) ((int) selectionFactor);
       if (remainFactor == 0f) {
-        selectionWidth = items.get((int) selectionFactor).actualWidth + textPadding * 2;
+        int selectionIndex = Math.max(0, Math.min(items.size() - 1, (int) selectionFactor));
+        selectionWidth = items.get(selectionIndex).actualWidth + textPadding * 2;
       } else {
         int fromWidth = items.get((int) selectionFactor).actualWidth + textPadding * 2;
         int toWidth = items.get((int) selectionFactor + 1).actualWidth + textPadding * 2;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -238,7 +238,7 @@ public void handleMessage (Message msg) {
   private final TdlibListenersGlobal global = new TdlibListenersGlobal(this);
   private final ManagerHandler handler = new ManagerHandler(this);
   private final LiveLocationManager liveLocationManager = new LiveLocationManager(this);
-  private final TdlibNotificationManager.NotificationQueue notificationQueue = new TdlibNotificationManager.NotificationQueue("NotificationQueue");
+  private final TdlibNotificationManager.NotificationQueue notificationQueue = new TdlibNotificationManager.NotificationQueue("NotificationQueue", this);
   private final CallManager calls = new CallManager(this);
   private final Settings.ProxyChangeListener proxyChangeListener = new Settings.ProxyChangeListener() {
     @Override

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationChannelGroup.java
Patch:
@@ -431,7 +431,7 @@ public static void cleanupChannels (Tdlib tdlib) {
   }
 
   @TargetApi(Build.VERSION_CODES.O)
-  public static void cleanupChannelGroups () {
+  public static void cleanupChannelGroups (TdlibManager context) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
       NotificationManager m = (NotificationManager) UI.getAppContext().getSystemService(Context.NOTIFICATION_SERVICE);
       if (m == null)
@@ -441,7 +441,7 @@ public static void cleanupChannelGroups () {
 
         for (int j = 0; j < 2; j++) {
           boolean isDebug = j == 1;
-          long[] userIds = TdlibManager.instance().availableUserIds(isDebug);
+          long[] userIds = context.availableUserIds(isDebug);
           String prefix = isDebug ? ACCOUNT_PREFIX_DEBUG : ACCOUNT_PREFIX;
           for (int i = groups.size() - 1; i >= 0; i--) {
             android.app.NotificationChannelGroup group = groups.get(i);

File: app/src/main/java/org/thunderdog/challegram/unsorted/Settings.java
Patch:
@@ -735,8 +735,7 @@ private Settings () {
       throw new IllegalStateException("Unable to create working directory");
     }
     long ms = SystemClock.uptimeMillis();
-    pmc = new LevelDB(new File(pmcDir, "db").getPath(), true);
-    pmc.setErrorHandler(new LevelDB.ErrorHandler() {
+    pmc = new LevelDB(new File(pmcDir, "db").getPath(), true, new LevelDB.ErrorHandler() {
       @Override
       public boolean onFatalError (LevelDB levelDB, Throwable error) {
         Tracer.onDatabaseError(error);

File: app/src/main/java/org/thunderdog/challegram/unsorted/Settings.java
Patch:
@@ -738,8 +738,9 @@ private Settings () {
     pmc = new LevelDB(new File(pmcDir, "db").getPath(), true);
     pmc.setErrorHandler(new LevelDB.ErrorHandler() {
       @Override
-      public void onFatalError (LevelDB levelDB, Throwable error) {
+      public boolean onFatalError (LevelDB levelDB, Throwable error) {
         Tracer.onDatabaseError(error);
+        return true;
       }
 
       @Override

File: app/src/main/java/org/thunderdog/challegram/tool/UI.java
Patch:
@@ -440,7 +440,7 @@ public static void showToast (int resource, int duration) {
     getAppHandler().showToast(resource, duration);
   }
 
-  public static void showCustomToast (String message, int duration, int positionY) {
+  public static void showCustomToast (CharSequence message, int duration, int positionY) {
     getAppHandler().showCustomToast(message, duration, positionY);
   }
 

File: app/src/main/java/org/thunderdog/challegram/tool/UIHandler.java
Patch:
@@ -82,7 +82,7 @@ public void showCustomToast (int resource, int duration, int positionY) {
     sendMessage(Message.obtain(this, OPEN_CUSTOM_TOAST, duration, positionY, Lang.getString(resource)));
   }
 
-  public void showCustomToast (String message, int duration, int positionY) {
+  public void showCustomToast (CharSequence message, int duration, int positionY) {
     sendMessage(Message.obtain(this, OPEN_CUSTOM_TOAST, duration, positionY, message));
   }
 
@@ -259,7 +259,7 @@ public void handleMessage (Message msg) {
         if (context != null) {
           Toast toast = new Toast(context);
           ToastView toastView = new ToastView(context);
-          toastView.setText((String) msg.obj);
+          toastView.setText((CharSequence) msg.obj);
           toast.setGravity(Gravity.CENTER, 0, msg.arg2);
           toast.setView(toastView);
           toast.show();

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsSessionsController.java
Patch:
@@ -75,7 +75,7 @@ private void buildCells () {
     items.add(new ListItem(ListItem.TYPE_SHADOW_TOP));
     items.add(new ListItem(ListItem.TYPE_SESSION, R.id.btn_currentSession, 0, 0));
 
-    if (sessions.otherActiveSessions.length == 0) {
+    if (sessions.onlyCurrent) {
       items.add(new ListItem(ListItem.TYPE_SHADOW_BOTTOM));
       items.add(new ListItem(ListItem.TYPE_SESSIONS_EMPTY));
     } else {
@@ -319,7 +319,7 @@ public void onSessionCreatedViaQrCode (Tdlib tdlib, TdApi.Session session) {
       Td.sort(newSessions);
       this.sessions = new Tdlib.SessionsInfo(new TdApi.Sessions(newSessions));
       buildCells();
-      UI.showCustomToast(Lang.getString(R.string.ScanQRAuthorizedToast, session.applicationName), Toast.LENGTH_LONG, 0);
+      UI.showCustomToast(Lang.getStringSecure(session.isPasswordPending ? R.string.ScanQRAuthorizedToastPasswordPending : R.string.ScanQRAuthorizedToast, Lang.boldCreator(), session.applicationName), Toast.LENGTH_LONG, 0);
     });
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1298,7 +1298,7 @@ public static TdApi.InputFile createInputFile (String path, @Nullable String typ
           String originalExtension = U.getExtension(fileName);
           String originalMimeType = TGMimeType.mimeTypeForExtension(originalExtension);
           String extension = TGMimeType.extensionForMimeType(type);
-          if (!StringUtils.isEmpty(extension) && !extension.equals(originalExtension) && !BuildConfig.THEME_FILE_EXTENSION.equals(originalExtension) && !StringUtils.equalsOrBothEmpty(originalMimeType, type)) {
+          if (!StringUtils.isEmpty(extension) && !extension.equals(originalExtension) && !"bin".equals(extension) && !BuildConfig.THEME_FILE_EXTENSION.equals(originalExtension) && !StringUtils.equalsOrBothEmpty(originalMimeType, type)) {
             fileName = fileName + "." + extension;
           }
         }

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -1395,7 +1395,7 @@ public boolean checkChangeLogs (boolean alreadySent, boolean test) {
   private static final int APP_RELEASE_VERSION_2020_FEBRUARY = 1302; // 3 March, 2020: https://telegra.ph/Telegram-X-02-29 // 6th, Actually. Production version is 1305
   private static final int APP_RELEASE_VERSION_2020_SPRING = 1361; // 15 May, 2020: https://telegra.ph/Telegram-X-04-23
 
-  private static final int APP_RELEASE_VERSION_2021_NOVEMBER = 1469; // 12 November, 2021: https://telegra.ph/Telegram-X-11-08
+  private static final int APP_RELEASE_VERSION_2021_NOVEMBER = 1470; // 12 November, 2021: https://telegra.ph/Telegram-X-11-08
 
   // Startup
 

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -3889,7 +3889,7 @@ public static TdApi.PhotoSize findBiggest (TdApi.PhotoSize[] sizes) {
   }
 
   public static TdApi.PhotoSize findClosest (TdApi.Photo photo, int width, int height) {
-    return findClosest(photo.sizes, width, height);
+    return photo != null ? findClosest(photo.sizes, width, height) : null;
   }
 
   public static @Nullable String findOrdinary (Map<String, TdApi.LanguagePackString> strings, String key, Future<String> defaultValue) {

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageText.java
Patch:
@@ -132,7 +132,7 @@ protected int onMessagePendingContentChanged (long chatId, long messageId, int o
   @Nullable
   @Override
   protected TdApi.WebPage findLinkPreview (String link) {
-    return webPage != null && link.equals(webPage.getWebPage().url) ? webPage.getWebPage() : null;
+    return webPage != null && webPage.isPreviewOf(link) ? webPage.getWebPage() : null;
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -2171,7 +2171,7 @@ public interface ClickCallback {
     @Nullable
     default ThemeDelegate getForcedTheme (View view, Text text) { return null; }
     default boolean forceInstantView (String link) { return false; }
-    default boolean hasLinkPreview (String link) { return false; }
+    default TdApi.WebPage findWebPage (String link) { return null; }
     default boolean onCommandClick (View view, Text text, TextPart part, String command, boolean isLongPress) { return false; }
     default boolean onUsernameClick (String username) { return false; }
     default boolean onUserClick (long userId) { return false; }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -6051,7 +6051,7 @@ public TooltipOverlayView.TooltipBuilder buildContentHint (View view, TooltipOve
 
   private Text.ClickCallback clickCallback;
 
-  protected boolean hasInstantView (String link) {
+  protected final boolean hasInstantView (String link) {
     return false;
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/TGWebPage.java
Patch:
@@ -42,13 +42,11 @@
 import org.thunderdog.challegram.widget.FileProgressComponent;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 
 import me.vkryl.android.util.ClickHelper;
 import me.vkryl.android.util.ViewProvider;
 import me.vkryl.core.StringUtils;
 import me.vkryl.td.Td;
-import me.vkryl.td.TdConstants;
 
 public class TGWebPage implements FileProgressComponent.SimpleListener, MediaWrapper.OnClickListener, TGInlineKeyboard.ClickListener, Client.ResultHandler {
   private static final int MAX_TITLE_LINES = 4;
@@ -526,7 +524,7 @@ public boolean open (View view, boolean allowRipple) {
           if (mediaWrapper != null && webPage.photo != null) {
             MediaViewController.openFromMessage(parent);
           } else {
-            parent.tdlib().ui().openUrl(parent.controller(), url, rippleButton.firstButton().openParameters(view));
+            parent.tdlib().ui().openUrl(parent.controller(), url, new TdlibUi.UrlOpenParameters(rippleButton.firstButton().openParameters(view)).disableEmbedView());
           }
         }
         break;

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4955,7 +4955,7 @@ public boolean onOptionItemPressed (View itemView, int id) {
                       for (int i = 1; i < info.messages.length; i++) {
                         otherMessageIds[i - 1] = info.messages[i].id;
                       }
-                      tdlib.ui().openMessage(this, info.chatId, new MessageId(info.chatId, info.messages[0].id, otherMessageIds), new TdlibUi.UrlOpenParameters().sourceMessage(new MessageId(message.chatId, message.id)).controller(this).fromChat(message.chatId));
+                      tdlib.ui().openMessage(this, info.chatId, new MessageId(info.chatId, info.messages[0].id, otherMessageIds), new TdlibUi.UrlOpenParameters().sourceMessage(new MessageId(message.chatId, message.id)).controller(this).sourceChat(message.chatId));
                     }
                   });
                   break;

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -2284,7 +2284,7 @@ private boolean setDescription (String text) {
       text = Lang.getString(R.string.Description);
     }
     if (this.aboutWrapper == null || !this.aboutWrapper.getText().equals(text)) {
-      aboutWrapper = new TextWrapper(tdlib, text, TGMessage.simpleTextStyleProvider(), TextColorSets.Regular.NORMAL, Text.ENTITY_FLAGS_ALL_NO_COMMANDS, new TdlibUi.UrlOpenParameters().fromChat(getChatId()));
+      aboutWrapper = new TextWrapper(tdlib, text, TGMessage.simpleTextStyleProvider(), TextColorSets.Regular.NORMAL, Text.ENTITY_FLAGS_ALL_NO_COMMANDS, new TdlibUi.UrlOpenParameters().sourceChat(getChatId()));
       aboutWrapper.addTextFlags(Text.FLAG_CUSTOM_LONG_PRESS | (Lang.rtl() ? Text.FLAG_ALIGN_RIGHT : 0));
       aboutWrapper.prepare(getTextWidth(Screen.currentWidth()));
       return true;

File: app/src/main/java/org/thunderdog/challegram/util/text/Text.java
Patch:
@@ -2171,6 +2171,7 @@ public interface ClickCallback {
     @Nullable
     default ThemeDelegate getForcedTheme (View view, Text text) { return null; }
     default boolean forceInstantView (String link) { return false; }
+    default boolean hasLinkPreview (String link) { return false; }
     default boolean onCommandClick (View view, Text text, TextPart part, String command, boolean isLongPress) { return false; }
     default boolean onUsernameClick (String username) { return false; }
     default boolean onUserClick (long userId) { return false; }

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntityCustom.java
Patch:
@@ -285,7 +285,7 @@ public void performClick (View view, Text text, TextPart part, @Nullable Text.Cl
         TdlibUi.UrlOpenParameters openParameters = this.openParameters(view, text, part);
         if (callback == null || !callback.onUrlClick(view, link, !StringUtils.equalsOrBothEmpty(text.getText(), link), openParameters)) {
           if (context != null) {
-            context.openLinkAlert(link, callback != null && callback.forceInstantView(link) ? new TdlibUi.UrlOpenParameters(openParameters) : openParameters);
+            context.openLinkAlert(link, modifyUrlOpenParameters(openParameters, callback, link));
           }
         }
         break;

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntityMessage.java
Patch:
@@ -257,7 +257,7 @@ public void performClick (View view, Text text, TextPart part, @Nullable Text.Cl
         TdlibUi.UrlOpenParameters openParameters = this.openParameters(view, text, part);
         if (callback == null || !callback.onUrlClick(view, link, false, openParameters)) {
           if (tdlib != null) {
-            tdlib.ui().openUrl(context, link, callback != null && callback.forceInstantView(link) ? new TdlibUi.UrlOpenParameters(openParameters).forceInstantView() : openParameters);
+            tdlib.ui().openUrl(context, link, modifyUrlOpenParameters(openParameters, callback, link));
           }
         }
         break;
@@ -266,7 +266,7 @@ public void performClick (View view, Text text, TextPart part, @Nullable Text.Cl
         String link = ((TdApi.TextEntityTypeTextUrl) clickableEntity.type).url;
         TdlibUi.UrlOpenParameters openParameters = this.openParameters(view, text, part);
         if (callback == null || !callback.onUrlClick(view, link, true, openParameters)) {
-          context.openLinkAlert(link, callback != null && callback.forceInstantView(link) ? new TdlibUi.UrlOpenParameters(openParameters).forceInstantView() : openParameters);
+          context.openLinkAlert(link, modifyUrlOpenParameters(openParameters, callback, link));
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -1191,7 +1191,7 @@ public static boolean hasRestrictions (TdApi.ChatPermissions a, TdApi.ChatPermis
   }
 
   public static int getCombineMode (TdApi.Message message) {
-    if (message != null && message.ttl == 0 && message.ttlExpiresIn == 0) {
+    if (message != null && !isSecret(message)) {
       switch (message.content.getConstructor()) {
         case TdApi.MessagePhoto.CONSTRUCTOR:
         case TdApi.MessageVideo.CONSTRUCTOR:

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -3652,7 +3652,7 @@ protected void onMessageCombinationRemoved (TdApi.Message message, int index) {
 
   @AnyThread
   public final boolean wouldCombineWith (TdApi.Message message) {
-    if (msg.mediaAlbumId == 0 || msg.mediaAlbumId != message.mediaAlbumId || (message.ttl > 0 && !(chat != null && chat.type.getConstructor() != TdApi.ChatTypePrivate.CONSTRUCTOR)) || isHot() || isEventLog()) {
+    if (msg.mediaAlbumId == 0 || msg.mediaAlbumId != message.mediaAlbumId || msg.ttl != message.ttl || isHot() || isEventLog()) {
       return false;
     }
     int combineMode = TD.getCombineMode(msg);

File: app/src/main/java/org/thunderdog/challegram/tool/Intents.java
Patch:
@@ -57,13 +57,12 @@ public class Intents {
   public static final int ACTIVITY_RESULT_AUDIO = 102;
   public static final int ACTIVITY_RESULT_RESOLUTION = 103;
   public static final int ACTIVITY_RESULT_GALLERY_FILE = 104;
-  public static final int ACTIVITY_RESULT_PUSH_RESOLUTION = 105;
+  public static final int ACTIVITY_RESULT_FILES = 105;
   public static final int ACTIVITY_RESULT_RESOLUTION_INLINE = 106;
   public static final int ACTIVITY_RESULT_RINGTONE = 107;
   public static final int ACTIVITY_RESULT_RINGTONE_NOTIFICATION = 108;
   public static final int ACTIVITY_RESULT_VIDEO_CAPTURE = 109;
   public static final int ACTIVITY_RESULT_MANAGE_STORAGE = 110;
-  public static final int ACTIVITY_RESULT_SEND_SAF_FILE = 111;
 
   private static final String PACKAGE_NAME = BuildConfig.APPLICATION_ID; // UI.getAppContext().getPackageName();
 

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -8621,7 +8621,6 @@ public void onActivityResult (int requestCode, int resultCode, Intent data) {
 
         break;
       }
-      case Intents.ACTIVITY_RESULT_SEND_SAF_FILE:
       case Intents.ACTIVITY_RESULT_GALLERY:
       case Intents.ACTIVITY_RESULT_GALLERY_FILE: {
         final Uri path = data != null ? data.getData() : null;
@@ -8640,8 +8639,6 @@ public void onActivityResult (int requestCode, int resultCode, Intent data) {
           sendSticker(imagePath, true, false, null);
         } else if (requestCode == Intents.ACTIVITY_RESULT_GALLERY_FILE) {
           sendFiles(Collections.singletonList(imagePath), false, true, false, null);
-        } else if (requestCode == Intents.ACTIVITY_RESULT_SEND_SAF_FILE) {
-          sendFiles(Collections.singletonList(U.canReadFile(imagePath) ? imagePath : path.toString()), false, true, false, null);
         } else {
           sendPhotoCompressed(imagePath, 0, true);
         }

File: app/src/main/java/org/thunderdog/challegram/navigation/ViewController.java
Patch:
@@ -1913,7 +1913,7 @@ protected void setDrawerItem (ListItem item, DrawerItemView view, TimerView time
         }
       }
     };
-    int checkedIndex = settings.adapter.setItems(items, true);
+    final int checkedIndex = settings.adapter.setItems(items, true);
 
     FrameLayoutFix footerView = null;
     if (!b.disableFooter) {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -662,6 +662,7 @@ private boolean updateNotificationMode (int oldMode, int newMode, boolean update
           displayingAccounts = null;
           collapsedAccountsCount = 0;
         }
+        adapter.resetCheckedItems();
       }
 
       return true;
@@ -1512,6 +1513,7 @@ public void onClick (View v) {
             if (items.size() > 1) {
               adapter.notifyItemRangeInserted(position + 1, items.size() - 1);
             }
+            adapter.resetCheckedItems();
             collapsedAccountsCount = 0;
           }
         }

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -4953,7 +4953,7 @@ public boolean onOptionItemPressed (View itemView, int id) {
                     if (getChatId() == message.chatId && info.messages.length > 0) {
                       long[] otherMessageIds = info.messages.length > 1 ? new long[info.messages.length - 1] : null;
                       for (int i = 1; i < info.messages.length; i++) {
-                        otherMessageIds[i] = info.messages[i].id;
+                        otherMessageIds[i - 1] = info.messages[i].id;
                       }
                       tdlib.ui().openMessage(this, info.chatId, new MessageId(info.chatId, info.messages[0].id, otherMessageIds), new TdlibUi.UrlOpenParameters().sourceMessage(new MessageId(message.chatId, message.id)).controller(this).fromChat(message.chatId));
                     }

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -915,11 +915,11 @@ public boolean accept (TdApi.Chat chat) {
   protected View onCreateView (Context context) {
     list = new TdlibChatListSlice(tdlib, chatList, this, true) {
       @Override
-      protected boolean modifySlice (List<Entry> slice, int displayCount) {
+      protected boolean modifySlice (List<Entry> slice, int currentSize) {
         int index = 0;
         for (Entry entry : slice) {
           if (tdlib.isSelfChat(entry.chat)) {
-            if (displayCount > 0) {
+            if (currentSize > 0) {
               slice.remove(index);
               return true;
             } else if (index == 0 || ChatPosition.isPinned(entry.chat, chatList)) {
@@ -933,7 +933,7 @@ protected boolean modifySlice (List<Entry> slice, int displayCount) {
           }
           index++;
         }
-        if (displayCount == 0) {
+        if (currentSize == 0) {
           TdApi.Chat selfChat = tdlib.selfChat();
           if (selfChat != null && !ChatPosition.isPinned(selfChat, chatList)) {
             Entry entry = new Entry(selfChat, chatList, ChatPosition.findPosition(selfChat, chatList), true);

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -9,7 +9,6 @@
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
-import android.os.SystemClock;
 import android.text.TextPaint;
 import android.util.TypedValue;
 import android.view.Gravity;
@@ -937,7 +936,7 @@ protected boolean modifySlice (List<Entry> slice, int displayCount) {
         if (displayCount == 0) {
           TdApi.Chat selfChat = tdlib.selfChat();
           if (selfChat != null && !ChatPosition.isPinned(selfChat, chatList)) {
-            Entry entry = new Entry(selfChat, ChatPosition.findPosition(selfChat, chatList), true);
+            Entry entry = new Entry(selfChat, chatList, ChatPosition.findPosition(selfChat, chatList), true);
             entry.bringToTop();
             slice.add(0, entry);
             return true;

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/ChatsAdapter.java
Patch:
@@ -530,7 +530,7 @@ public int removeChatById (TdApi.Chat chat, int fromIndex, boolean needSort, Tdl
       removedChat.updateChatPosition(chat.id, changeInfo.position, changeInfo.sourceChanged(), changeInfo.pinStateChanged());
       notifyItemRemoved(position);
       notifyItemChanged(chats.size());
-      context.checkDisplayNoChats();
+      context.checkListState();
       return invalidateDecorations || needShadowDecoration(prevChat, nextChat) ? ORDER_INVALIDATE_DECORATIONS : 0;
     }
     return 0;
@@ -595,7 +595,7 @@ public int addChat (TdApi.Chat chat, int atIndex, boolean needSort, Tdlib.ChatCh
     addChat(position, newChat);
     notifyChatAppeared(-1, position);
     notifyItemChanged(chats.size());
-    context.checkDisplayNoChats();
+    context.checkListState();
     return flags;
   }
 

File: app/src/main/java/org/thunderdog/challegram/config/Config.java
Patch:
@@ -257,4 +257,5 @@ public static boolean isThemeDoc (TdApi.Document doc) {
 
   public static final boolean QR_AVAILABLE = true;
   public static final boolean QR_FORCE_ZXING = false;
+  public static final boolean MANAGE_STORAGE_PERMISSION_AVAILABLE = Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q;
 }

File: app/src/main/java/org/thunderdog/challegram/tool/Intents.java
Patch:
@@ -62,6 +62,8 @@ public class Intents {
   public static final int ACTIVITY_RESULT_RINGTONE = 107;
   public static final int ACTIVITY_RESULT_RINGTONE_NOTIFICATION = 108;
   public static final int ACTIVITY_RESULT_VIDEO_CAPTURE = 109;
+  public static final int ACTIVITY_RESULT_MANAGE_STORAGE = 110;
+  public static final int ACTIVITY_RESULT_SEND_SAF_FILE = 111;
 
   private static final String PACKAGE_NAME = BuildConfig.APPLICATION_ID; // UI.getAppContext().getPackageName();
 

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -8581,6 +8581,7 @@ public void onActivityResult (int requestCode, int resultCode, Intent data) {
 
         break;
       }
+      case Intents.ACTIVITY_RESULT_SEND_SAF_FILE:
       case Intents.ACTIVITY_RESULT_GALLERY:
       case Intents.ACTIVITY_RESULT_GALLERY_FILE: {
         final Uri path = data != null ? data.getData() : null;
@@ -8599,6 +8600,8 @@ public void onActivityResult (int requestCode, int resultCode, Intent data) {
           sendSticker(imagePath, true, false, null);
         } else if (requestCode == Intents.ACTIVITY_RESULT_GALLERY_FILE) {
           sendFiles(Collections.singletonList(imagePath), false, true, false, null);
+        } else if (requestCode == Intents.ACTIVITY_RESULT_SEND_SAF_FILE) {
+          sendFiles(Collections.singletonList(U.canReadFile(imagePath) ? imagePath : path.toString()), false, true, false, null);
         } else {
           sendPhotoCompressed(imagePath, 0, true);
         }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -3581,7 +3581,7 @@ public void addDeleteChatOptions (long chatId, IntList ids, StringList strings,
           ids.append(R.id.btn_removeChatFromList);
           strings.append(tdlib.isChannel(chatId) ? R.string.LeaveChannel : R.string.LeaveMegaMenu);
         } else if (TD.canReturnToChat(status)) {
-          if (status.getConstructor() == TdApi.ChatMemberStatusLeft.CONSTRUCTOR && !(tdlib.isPublicChat(chatId) || tdlib.isTemporaryAccessible(chatId))) {
+          if (status.getConstructor() == TdApi.ChatMemberStatusLeft.CONSTRUCTOR && (tdlib.isPublicChat(chatId) || tdlib.isTemporaryAccessible(chatId))) {
             if (forceJoin) {
               ids.append(R.id.btn_returnToChat);
               strings.append(tdlib.isChannel(chatId) ? R.string.JoinChannel : R.string.JoinChat);

File: app/src/main/java/org/thunderdog/challegram/ui/EditRightsController.java
Patch:
@@ -851,7 +851,7 @@ public void onOwnershipTransferConfirmed (String password) {
   }
 
   private boolean canTransferOwnership () {
-    if (targetAdmin == null || !targetAdmin.canBeEdited || getArgumentsStrict().mode != MODE_ADMIN_PROMOTION || getArgumentsStrict().myStatus.getConstructor() != TdApi.ChatMemberStatusCreator.CONSTRUCTOR)
+    if (targetAdmin == null || tdlib.cache().userBot(getArgumentsStrict().userId) || !targetAdmin.canBeEdited || getArgumentsStrict().mode != MODE_ADMIN_PROMOTION || getArgumentsStrict().myStatus.getConstructor() != TdApi.ChatMemberStatusCreator.CONSTRUCTOR)
       return false;
     boolean isChannel = tdlib.isChannel(getArgumentsStrict().chatId);
     if (isChannel) {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -36,6 +36,7 @@
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.data.TD;
+import org.thunderdog.challegram.emoji.Emoji;
 import org.thunderdog.challegram.navigation.ActivityResultHandler;
 import org.thunderdog.challegram.navigation.MoreDelegate;
 import org.thunderdog.challegram.navigation.SettingsWrapBuilder;
@@ -707,11 +708,11 @@ private List<TdlibAccount> getDisplayingAccounts () {
   }
 
   private ListItem newAccountItem (TdlibAccount account) {
-    String name = account.getLongName();
+    CharSequence name = Emoji.instance().replaceEmoji(account.getLongName());
     return new ListItem(
       ListItem.TYPE_CHECKBOX_OPTION_WITH_AVATAR,
       account.id + 1, 0,
-      account.id == tdlib.id() ? Lang.getString(R.string.CurrentAccount, name) : name,
+      account.id == tdlib.id() ? Lang.getCharSequence(R.string.CurrentAccount, name) : name,
       account.id + 1,
       account.forceEnableNotifications()
     ).setData(account)

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsWebsitesController.java
Patch:
@@ -163,7 +163,7 @@ public void destroy () {
     TGLegacyManager.instance().removeEmojiListener(adapter);
     SettingsPrivacyController controller = getArguments();
     if (controller != null) {
-      controller.setAuthorizationsLoadListener(null);
+      controller.setWebsitesLoadListener(null);
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsNotificationController.java
Patch:
@@ -724,10 +724,10 @@ protected void onCreateView (Context context, CustomRecyclerView recyclerView) {
       @Override
       protected void setValuedSetting (ListItem item, SettingView view, boolean isUpdate) {
         int dataColorId = 0;
+        if (item.getViewType() == ListItem.TYPE_SETTING) {
+          view.setIconColorId(item.getId() == R.id.btn_showAdvanced ? R.id.theme_color_iconNegative : 0);
+        }
         switch (item.getId()) {
-          case R.id.btn_showAdvanced:
-            view.setIconColorId(R.id.theme_color_iconNegative);
-            break;
           case R.id.btn_notifications_preview:
             view.getToggler().setRadioEnabled(tdlib.notifications().defaultShowPreview(getScope(item)), isUpdate);
             break;

File: app/src/main/java/org/thunderdog/challegram/navigation/DrawerController.java
Patch:
@@ -145,7 +145,7 @@ public void onSuggestedActionsChanged (TdApi.SuggestedAction[] addedActions, TdA
     });
   }
 
-  private void checkSettingsError () {
+  public void checkSettingsError () {
     int settingsErrorIcon = getSettingsErrorIcon();
     if (this.settingsErrorIcon != settingsErrorIcon) {
       this.settingsErrorIcon = settingsErrorIcon;

File: app/src/main/java/org/thunderdog/challegram/component/base/SettingView.java
Patch:
@@ -215,8 +215,8 @@ public ImageReceiver getReceiver () {
     return receiver;
   }
 
-  public void setTextColorId (int textColorId) {
-    if (textColorId == 0)
+  public void setTextColorId (@ThemeColorId int textColorId) {
+    if (textColorId == ThemeColorId.NONE)
       textColorId = R.id.theme_color_text;
     if (this.textColorId != textColorId) {
       this.textColorId = textColorId;

File: app/src/main/java/org/thunderdog/challegram/ui/ListItem.java
Patch:
@@ -39,7 +39,7 @@ public class ListItem {
   public static final int TYPE_EMPTY_OFFSET_SMALL = 14;
   public static final int TYPE_PROGRESS = 15;
   public static final int TYPE_SESSION = 16;
-  public static final int TYPE_VALUED_SETTING_RED = 17;
+  // public static final int TYPE_VALUED_SETTING_RED = 17;
   public static final int TYPE_SESSIONS_EMPTY = 18;
   public static final int TYPE_ICONIZED_EMPTY = 19;
   public static final int TYPE_BUTTON = 20;

File: app/src/main/java/org/thunderdog/challegram/ui/PasscodeSetupController.java
Patch:
@@ -520,7 +520,7 @@ public void onClick (View v) {
       case R.id.btn_notificationContent: {
         if (notificationsView != null) {
           Passcode.instance().setDisplayNotifications(notificationsView.toggleRadio());
-          TdlibManager.instance().onUpdateNotifications(null);
+          TdlibManager.instance().onUpdateAllNotifications();
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsDataController.java
Patch:
@@ -262,7 +262,7 @@ public void setValuedSetting (ListItem item, SettingView view, boolean isUpdate)
         new ListItem(ListItem.TYPE_VALUED_SETTING, R.id.btn_dataUsageRoaming, R.drawable.baseline_public_24, R.string.RoamingUsage),
         new ListItem(ListItem.TYPE_SHADOW_BOTTOM),
         new ListItem(ListItem.TYPE_SHADOW_TOP),
-        new ListItem(ListItem.TYPE_VALUED_SETTING_RED, R.id.btn_resetNetworkStats, 0, R.string.ResetStatistics).setTextColorId(R.id.theme_color_textNegative),
+        new ListItem(ListItem.TYPE_VALUED_SETTING, R.id.btn_resetNetworkStats, 0, R.string.ResetStatistics).setTextColorId(R.id.theme_color_textNegative),
         new ListItem(ListItem.TYPE_SHADOW_BOTTOM)
       };
     } else {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsPrivacyController.java
Patch:
@@ -356,7 +356,7 @@ public void onClick (View v) {
           adapter.updateValuedSetting(secretInfo);
         }
         if (updated) {
-          TdlibManager.instance().onUpdateNotifications(new TdApi.NotificationSettingsScopePrivateChats());
+          TdlibManager.instance().onUpdateSecretChatNotifications();
         }
         break;
       }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsThemeController.java
Patch:
@@ -1104,7 +1104,7 @@ public void onClick (View v) {
         break;
       }
       case R.id.btn_cameraRatio: {
-        showOptions(Lang.wrapBold(Lang.getString(R.string.CameraRatio)), new int[] {
+        showOptions(Lang.boldify(Lang.getString(R.string.CameraRatio)), new int[] {
           R.id.btn_cameraRatio_16_9,
           R.id.btn_cameraRatio_4_3,
           // R.id.btn_cameraRatio_1_1,
@@ -1143,7 +1143,7 @@ public void onClick (View v) {
         break;
       }
       case R.id.btn_cameraVolume: {
-        showOptions(Lang.wrapBold(Lang.getString(R.string.CameraVolume)), new int[] {
+        showOptions(Lang.boldify(Lang.getString(R.string.CameraVolume)), new int[] {
           R.id.btn_cameraVolumeShoot,
           R.id.btn_cameraVolumeZoom,
           R.id.btn_cameraVolumeNone

File: app/src/main/java/org/thunderdog/challegram/ui/SharedMembersController.java
Patch:
@@ -366,7 +366,7 @@ protected boolean onLongClick (View v, ListItem item) {
       } else if (info != null) {
         result = Lang.getString(R.string.format_nameAndStatus, firstBoldCreator, name, info);
       } else {
-        result = Lang.wrapBold(name);
+        result = Lang.boldify(name);
       }
       showOptions(result, ids.get(), strings.get(), colors.get(), icons.get(), (itemView, id) -> {
         switch (id) {

File: app/src/main/java/org/thunderdog/challegram/unsorted/Passcode.java
Patch:
@@ -319,7 +319,7 @@ public void setPasscodeHash (int mode, String passcode) {
     }
     edit.apply();
     if (turnedOn) {
-      TdlibManager.instance().onUpdateNotifications(null);
+      TdlibManager.instance().onUpdateAllNotifications();
     }
   }
 

File: app/src/main/java/org/thunderdog/challegram/sync/SyncAdapter.java
Patch:
@@ -9,6 +9,7 @@
 import android.content.SyncResult;
 import android.os.Bundle;
 
+import org.thunderdog.challegram.BuildConfig;
 import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.config.Config;
 import org.thunderdog.challegram.telegram.Tdlib;
@@ -21,8 +22,8 @@
  * Author: default
  */
 public class SyncAdapter extends AbstractThreadedSyncAdapter {
-  private static final String AUTHORITY = "org.thunderdog.challegram.sync.provider";
-  private static final String ACCOUNT_TYPE = "org.thunderdog.challegram.sync.account";
+  private static final String AUTHORITY = BuildConfig.APPLICATION_ID + ".sync.provider";
+  private static final String ACCOUNT_TYPE = BuildConfig.APPLICATION_ID + ".sync.account";
   private static final String ACCOUNT_NAME = "Telegram";
 
   private static final String EXTRA_ACCOUNT_ID = "account_id";

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -5012,7 +5012,8 @@ public boolean onOptionItemPressed (View itemView, int id) {
       case R.id.btn_deleteFile: {
         if (selectedMessage != null) {
           if (selectedMessageTag != null) {
-            TD.deleteFile(this, ((TD.DownloadedFile) selectedMessageTag).getFile());
+            //noinspection unchecked
+            TD.deleteFiles(this, (List<TD.DownloadedFile>) selectedMessageTag, null);
           } else {
             TdApi.Message[] messages = selectedMessage.getAllMessages();
             final SparseArrayCompat<TdApi.File> files = new SparseArrayCompat<>(messages.length);

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/ChatView.java
Patch:
@@ -15,6 +15,7 @@
 import androidx.annotation.Nullable;
 import androidx.recyclerview.widget.RecyclerView;
 
+import org.thunderdog.challegram.Log;
 import org.thunderdog.challegram.R;
 import org.thunderdog.challegram.core.Lang;
 import org.thunderdog.challegram.data.AvatarPlaceholder;
@@ -35,6 +36,7 @@
 import org.thunderdog.challegram.tool.Paints;
 import org.thunderdog.challegram.tool.PorterDuffPaint;
 import org.thunderdog.challegram.tool.Screen;
+import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.tool.Views;
 import org.thunderdog.challegram.ui.ChatsController;
 import org.thunderdog.challegram.unsorted.Settings;
@@ -367,7 +369,7 @@ public ViewController<?> createForceTouchPreview (BaseView v, float x, float y)
 
   public boolean needAnimateChanges () {
     ViewController<?> c = ViewController.findAncestor(ChatView.this);
-    return c == null || c.isAttachedToNavigationController();
+    return c == null || c.getParentOrSelf().getAttachState();
   }
 
   public void updateOnline () {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibStatusManager.java
Patch:
@@ -443,7 +443,7 @@ private void setLooping (boolean isLooping) {
 
     @Override
     public ViewController<?> getTargetParent (Invalidator context) {
-      return this.parent;
+      return this.parent != null ? this.parent.getParentOrSelf() : null;
     }
 
     @Override

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -3801,7 +3801,7 @@ public boolean canPromoteMembers () {
 
   public boolean canAddAnyKindOfMembers () {
     TdApi.ChatMemberStatus status = tdlib.chatStatus(chat.id);
-    return (status != null && status.getConstructor() != TdApi.ChatMemberStatusLeft.CONSTRUCTOR) && (tdlib.canInviteUsers(chat, false) || canBanMembers() || canPromoteMembers()); // FIXME or not?
+    return (status != null && status.getConstructor() != TdApi.ChatMemberStatusLeft.CONSTRUCTOR) && (tdlib.canInviteUsers(chat) || canBanMembers() || canPromoteMembers()); // FIXME or not?
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/mediaview/paint/widget/ColorPickerView.java
Patch:
@@ -315,7 +315,7 @@ private void setToneFactor (float factor) {
 
   private FactorAnimator tapAnimator;
   private static final int ANIMATOR_TAP = 4;
-  private float[] tapColor = new float[3];
+  private final float[] tapColor = new float[3];
 
   private void cancelTapMovement () {
     if (tapAnimator != null) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotification.java
Patch:
@@ -345,6 +345,8 @@ public CharSequence getTextRepresentation (Tdlib tdlib, boolean onlyPinned, bool
       case TdApi.NotificationTypeNewPushMessage.CONSTRUCTOR: {
         TdApi.NotificationTypeNewPushMessage push = (TdApi.NotificationTypeNewPushMessage) notification.type;
         TD.ContentPreview content = TD.getNotificationPreview(tdlib, getChatId(), push, allowContent);
+        if (content == null)
+          throw new UnsupportedOperationException(Integer.toString(push.content.getConstructor()));
         if (hasCustomText != null && !content.isTranslatable) {
           hasCustomText[0] = true;
         }

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -5403,7 +5403,7 @@ public long callConnectTimeoutMs () {
   }
 
   public boolean allowQrLoginCamera () {
-    return qrLoginCamera && BuildConfig.DEBUG;
+    return (qrLoginCamera && Config.QR_AVAILABLE) || BuildConfig.DEBUG;
   }
 
   public long callPacketTimeoutMs () {

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraTextureView.java
Patch:
@@ -14,6 +14,7 @@ public class CameraTextureView extends TextureView {
   private CameraManagerTexture manager;
 
   private int ratioWidth, ratioHeight;
+  public int scaledImageWidth;
 
   public CameraTextureView (Context context) {
     super(context);
@@ -68,6 +69,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
         height *= ratio;
       }
 
+      scaledImageWidth = width;
       setMeasuredDimension(width, height);
     } else {
       setMeasuredDimension(viewWidth, viewHeight);

File: app/src/main/java/org/thunderdog/challegram/ui/camera/legacy/CameraApi.java
Patch:
@@ -706,6 +706,8 @@ public final void openCameraIfStillNeeded (RoundVideoRecorder recorder) {
   protected abstract int getCameraOutputWidth ();
   @WorkerThread
   protected abstract int getCameraOutputHeight ();
+  @WorkerThread
+  protected abstract int getSensorOrientation ();
 
   @WorkerThread
   protected abstract void closeCamera () throws Throwable;

File: app/src/main/java/org/thunderdog/challegram/component/preview/PreviewLayout.java
Patch:
@@ -187,6 +187,7 @@ public static boolean show (ViewController<?> parent, EmbeddedService service, b
           popup = new YouTubePreviewLayout(context, parent);
           break;
         case EmbeddedService.TYPE_UNKNOWN:
+        case EmbeddedService.TYPE_CUSTOM_EMBED:
           popup = new WebViewPreviewLayout(context, parent);
           break;
       }

File: app/src/main/java/org/thunderdog/challegram/data/TGWebPage.java
Patch:
@@ -463,7 +463,7 @@ private void setSmallPhoto (TdApi.Photo photo) {
 
     isImageBig = false;
 
-    mediaWrapper = new MediaWrapper(parent.context(), parent.tdlib(), photo, chatId, messageId, parent, false);
+    mediaWrapper = new MediaWrapper(parent.context(), parent.tdlib(), photo, chatId, messageId, parent, false, false, EmbeddedService.parse(webPage));
     mediaWrapper.setViewProvider(viewProvider);
     mediaWrapper.setHideLoader(true);
     mediaWrapper.setOnClickListener(this);

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -2195,6 +2195,7 @@ public static String toErrorString (@Nullable TdApi.Object object) {
       case "BOTS_TOO_MUCH": res = R.string.error_BOTS_TOO_MUCH; break;
       case "ADMINS_TOO_MUCH": res = R.string.error_ADMINS_TOO_MUCH; break;
       case "Not enough rights to invite members to the group chat": res = R.string.YouCantInviteMembers; break;
+      case "Invalid chat identifier specified": res = R.string.error_ChatInfoNotFound; break;
       case "Message must be non-empty": res = R.string.MessageInputEmpty; break;
       case "Not Found": res = R.string.error_NotFound; break;
       case "The maximum number of pinned chats exceeded": return Lang.plural(R.string.ErrorPinnedChatsLimit, TdlibManager.instance().current().pinnedChatsMaxCount());

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsController.java
Patch:
@@ -366,7 +366,7 @@ public void setValuedSetting (ListItem item, SettingView view, boolean isUpdate)
         view.setUnreadCounter(hasError ? Tdlib.CHAT_FAILED : 0, false, isUpdate);
         switch (item.getId()) {
           case R.id.btn_changePhoneNumber: {
-            view.setText(obtainWrapper(Lang.getStringBold(R.string.ReminderCheckPhoneNumberText, myPhone), ID_RATIONALE_PHONE_NUMBER));
+            view.setText(obtainWrapper(Lang.getStringBold(R.string.ReminderCheckPhoneNumberText, originalPhoneNumber != null ? myPhone : Strings.ELLIPSIS), ID_RATIONALE_PHONE_NUMBER));
             break;
           }
           case R.id.btn_2fa: {
@@ -618,6 +618,7 @@ public void onMyUserUpdated (final TdApi.User myUser) {
         }
         if (setPhoneNumber(myUser)) {
           adapter.updateValuedSettingById(R.id.btn_phone);
+          adapter.updateValuedSettingById(R.id.btn_changePhoneNumber);
         }
       }
     });

File: app/src/main/java/org/thunderdog/challegram/util/text/Counter.java
Patch:
@@ -224,7 +224,7 @@ public void setCount (int count, boolean muted, boolean animated) {
     isMuted.setValue(muted, animateChanges);
     isFailed.setValue(count == Tdlib.CHAT_FAILED, animateChanges);
     boolean hasCounter = count > 0 || count == Tdlib.CHAT_MARKED_AS_UNREAD || count == Tdlib.CHAT_FAILED;
-    if (count == Tdlib.CHAT_FAILED) {
+    if (count == Tdlib.CHAT_FAILED && drawableRes == 0) {
       counter.setCounter(count, "!", animateChanges);
     } else if (count > 0) {
       counter.setCounter(count, Strings.buildCounter(count), animateChanges);

File: app/src/main/java/org/thunderdog/challegram/BaseActivity.java
Patch:
@@ -175,7 +175,7 @@ public NavigationGestureController getGestureController () {
   }
 
   public boolean hasSettingsError () {
-    return hasTdlib() && currentTdlib().notifications().hasLocalNotificationProblem();
+    return hasTdlib() && (currentTdlib().notifications().hasLocalNotificationProblem() || currentTdlib().haveAnySettingsSuggestions());
   }
 
   public boolean isAnimating (boolean intercept) {

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -5545,6 +5545,7 @@ private void resetContextualData () {
     animatedEmoji.clear();
     utyan.clear();
     animatedDiceExplicit.clear();
+    suggestedActions.clear();
     telegramServiceNotificationsChatId = TdConstants.TELEGRAM_ACCOUNT_ID;
     repliesBotChatId = TdConstants.TELEGRAM_REPLIES_BOT_ACCOUNT_ID;
     // animatedTgxEmoji.clear();

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibWallpaperManager.java
Patch:
@@ -68,7 +68,7 @@ private void fetchBackground (int themeId, boolean force) {
     if (!force && !needLoadWallpaper(themeId)) {
       return;
     }
-    String name = extractWallpaperName(Theme.getDefaultWallpaper(themeId));
+    String name = Theme.getDefaultWallpaper(themeId);
     if (StringUtils.isEmpty(name)) {
       tdlib.settings().setWallpaper(TGBackground.newEmptyWallpaper(tdlib), force, Theme.getWallpaperIdentifier(themeId));
     } else {

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -529,6 +529,7 @@ public void onSwiped (@NonNull RecyclerView.ViewHolder viewHolder, int direction
     list.initializeList(filter, this, this::displayChats, chatsView.getInitialLoadCount(), () ->
       runOnUiThreadOptional(() -> {
         this.listInitalized = true;
+        checkDisplayNoChats();
         executeScheduledAnimation();
       })
     );

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibSettingsManager.java
Patch:
@@ -400,7 +400,7 @@ public void deleteWallpaper (int usageIdentifier) {
 
   public void setWallpaper (@NonNull TGBackground wallpaper, boolean force, int usageIdentifier) {
     TGBackground currentWallpaper = getWallpaper(usageIdentifier);
-    if ((currentWallpaper == null && wallpaper != null) || (force && !TGBackground.compare(currentWallpaper, wallpaper))) {
+    if ((currentWallpaper == null && wallpaper != null) || (force && !TGBackground.compare(currentWallpaper, wallpaper, false))) {
       ThemeManager.instance().notifyChatWallpaperChanged(tdlib, wallpaper, 0, usageIdentifier);
       if (wallpaper != null) {
         wallpaper.save(usageIdentifier);

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -6804,7 +6804,7 @@ private void updateOption (ClientHolder context, TdApi.UpdateOption update) {
 
         switch (name) {
           case "my_id":
-            onUpdateMyUserId((int) longValue);
+            onUpdateMyUserId(longValue);
             break;
           case "unix_time": {
             final long receivedTime = SystemClock.elapsedRealtime();

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -2489,7 +2489,7 @@ private boolean openProfile (View view, @Nullable Text text, TextPart part, @Nul
   private boolean onForwardClick (View view, Text text, TextPart part, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     if (part.getEntity() == null && text.getEntityCount() == 1)
       return false;
-    if (part.getEntity() != null && part.getEntity().getTag() instanceof Integer) {
+    if (part.getEntity() != null && part.getEntity().getTag() instanceof Long) {
       manager.controller().setInputInlineBot(msg.viaBotUserId, viaBotUsername);
     } else {
       forwardInfo.open(view, text, part, openParameters, null);

File: app/src/main/java/org/thunderdog/challegram/unsorted/Settings.java
Patch:
@@ -2641,7 +2641,7 @@ public List<VideoLimit> videoLimits () {
     return result;
   }
 
-  public static final int DEFAULT_VIDEO_LIMIT = 640;
+  public static final int DEFAULT_VIDEO_LIMIT = 854;
   public static final int DEFAULT_FRAME_RATE = 29; // DefaultVideoStrategy.DEFAULT_FRAME_RATE;
 
   public static class VideoSize {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -56,7 +56,6 @@
 import org.thunderdog.challegram.navigation.SettingsWrapBuilder;
 import org.thunderdog.challegram.navigation.TooltipOverlayView;
 import org.thunderdog.challegram.navigation.ViewController;
-import org.thunderdog.challegram.theme.TGBackground;
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.theme.ThemeColors;
 import org.thunderdog.challegram.theme.ThemeCustom;
@@ -3997,6 +3996,8 @@ public void showInviteLinkOptionsPreload (ViewController<?> context, final TdApi
   }
 
   public void showInviteLinkOptions (ViewController<?> context, final TdApi.ChatInviteLink link, final long chatId, final boolean showNavigatingToLinks, final boolean deleted, @Nullable Runnable onLinkDeleted, @Nullable RunnableData<TdApi.ChatInviteLinks> onLinkRevoked) {
+    TdApi.Chat chat = tdlib.chat(chatId);
+
     StringList strings = new StringList(6);
     IntList icons = new IntList(6);
     IntList ids = new IntList(6);
@@ -4009,7 +4010,7 @@ public void showInviteLinkOptions (ViewController<?> context, final TdApi.ChatIn
       colors.append(ViewController.OPTION_COLOR_NORMAL);
     }
 
-    if (showNavigatingToLinks) {
+    if (showNavigatingToLinks && tdlib.canManageInviteLinks(chat)) {
       ids.append(R.id.btn_manageInviteLinks);
       strings.append(R.string.InviteLinkManage);
       icons.append(R.drawable.baseline_add_link_24);

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -3551,7 +3551,7 @@ private void buildEditCells () {
       items.add(new ListItem(ListItem.TYPE_VALUED_SETTING, R.id.btn_chatPermissions, 0, R.string.ChatPermissions));
       added = true;
     }
-    if (tdlib.canInviteUsers(chat)) {
+    if (tdlib.canManageInviteLinks(chat)) {
       items.add(new ListItem(added ? ListItem.TYPE_SEPARATOR_FULL : ListItem.TYPE_SHADOW_TOP));
       items.add(new ListItem(ListItem.TYPE_VALUED_SETTING, R.id.btn_manageInviteLinks, 0, R.string.InviteLinkManage));
       added = true;
@@ -4437,7 +4437,7 @@ public void onClick (View v) {
       }
       case R.id.btn_username: {
         boolean canSetUsername = supergroupFull != null && supergroupFull.canSetUsername;
-        boolean canInviteUsers = chat != null && tdlib.canInviteUsers(chat);
+        boolean canInviteUsers = chat != null && tdlib.canManageInviteLinks(chat);
 
         int size = 3;
         if (canSetUsername) size++;

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -2465,7 +2465,7 @@ private void layoutAvatar () {
   protected static final float LETTERS_SIZE_SMALL = 15f;
 
   private boolean onNameClick (View view, Text text, TextPart part, @Nullable TdlibUi.UrlOpenParameters openParameters) {
-    if (part.getEntity() != null && part.getEntity().getTag() instanceof Integer) {
+    if (part.getEntity() != null && part.getEntity().getTag() instanceof Long) {
       manager.controller().setInputInlineBot(msg.viaBotUserId, viaBotUsername);
       return true;
     } else {

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -1625,7 +1625,7 @@ public void loadMoreChats (@NonNull TdApi.ChatList chatList, int limit, Client.R
     client().send(new TdApi.LoadChats(chatList, limit), handler);
   }
 
-  public void readAllChats (@Nullable TdApi.ChatList chatList, @Nullable RunnableInt after) {
+  public void readAllChats (@NonNull TdApi.ChatList chatList, @Nullable RunnableInt after) {
     AtomicInteger readChatsCount = new AtomicInteger(0);
     getAllChats(chatList, chat -> {
       boolean read = false;

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -2197,7 +2197,7 @@ public static String toErrorString (@Nullable TdApi.Object object) {
       case "Not enough rights to invite members to the group chat": res = R.string.YouCantInviteMembers; break;
       case "Message must be non-empty": res = R.string.MessageInputEmpty; break;
       case "Not Found": res = R.string.error_NotFound; break;
-      case "Maximum number of pinned chats exceeded": return Lang.plural(R.string.ErrorPinnedChatsLimit, TdlibManager.instance().current().pinnedChatsMaxCount());
+      case "The maximum number of pinned chats exceeded": return Lang.plural(R.string.ErrorPinnedChatsLimit, TdlibManager.instance().current().pinnedChatsMaxCount());
       default: {
         String lookup = StringUtils.toCamelCase(message);
         if (lookup.matches("^[A-Za-z0-9_]+$")) {

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -7888,7 +7888,7 @@ private void openEventLogSettings () {
 
                 case R.id.user: {
                   if (item.isSelected() && userIds1 != null) {
-                    userIds1.append(item.getIntValue());
+                    userIds1.append(item.getLongValue());
                   }
                   break;
                 }

File: app/src/main/java/org/thunderdog/challegram/filegen/VideoGenerationInfo.java
Patch:
@@ -40,7 +40,7 @@ public static void parseConversion (AbstractVideoGenerationInfo out, String conv
     boolean needMute = StringUtils.parseInt(args[0]) == 1;
     int rotate = 0;
     long startTime = -1, endTime = -1;
-    int mostMajor = -1, mostMinor = -1;
+    int mostMajor = Settings.DEFAULT_VIDEO_LIMIT, mostMinor = Settings.DEFAULT_VIDEO_LIMIT;
     int sourceId = 0;
     boolean noTranscoding = false;
     long bitrate = DefaultVideoStrategy.BITRATE_UNKNOWN;

File: app/src/main/java/org/thunderdog/challegram/data/TGUser.java
Patch:
@@ -147,8 +147,8 @@ public void setRole (int role) {
   }
 
   public void setCustomStatus (String statusText) {
-    if (this.statusText == null || !this.statusText.equals(statusText)) {
-      if (statusText == null || statusText.isEmpty()) {
+    if (!StringUtils.equalsOrBothEmpty(this.statusText, statusText)) {
+      if (StringUtils.isEmpty(statusText)) {
         this.flags &= ~FLAG_CUSTOM_STATUS_TEXT;
         updateStatus();
       } else {

File: app/src/main/java/org/thunderdog/challegram/ui/ListItem.java
Patch:
@@ -138,6 +138,8 @@ public class ListItem {
   public static final int TYPE_MESSAGE_PREVIEW = 120;
   public static final int TYPE_STATS_MESSAGE_PREVIEW = 121;
 
+  public static final int TYPE_EMBED_STICKER = 130;
+
   private static final int FLAG_SELECTED = 1;
   private static final int FLAG_BOOL_VALUE = 1 << 1;
   private static final int FLAG_USE_SELECTION_INDEX = 1 << 2;

File: app/src/main/java/org/thunderdog/challegram/ui/ProfileController.java
Patch:
@@ -3288,7 +3288,7 @@ private boolean hasSlowModeChanges () {
 
   private boolean hasTtlChanges () {
     int originalSlowMode = chat != null ? chat.messageTtlSetting : 0;
-    return ttlItem != null && originalSlowMode != TdConstants.SLOW_MODE_OPTIONS[ttlItem.getSliderValue()];
+    return ttlItem != null && originalSlowMode != TdConstants.CHAT_TTL_OPTIONS[ttlItem.getSliderValue()];
   }
 
   @Override

File: app/src/main/java/org/thunderdog/challegram/telegram/ChatListListener.java
Patch:
@@ -38,12 +38,14 @@ default void onChatListStateChanged (TdlibChatList chatList,
     ItemChangeType.READ_INBOX,
     ItemChangeType.LAST_MESSAGE,
     ItemChangeType.DRAFT,
+    ItemChangeType.UNREAD_AVAILABILITY_CHANGED
   })
   @interface ItemChangeType {
     int TITLE = 0;
     int READ_INBOX = 1;
     int LAST_MESSAGE = 2;
     int DRAFT = 3;
+    int UNREAD_AVAILABILITY_CHANGED = 4;
   }
   default void onChatListItemChanged (TdlibChatList chatList, TdApi.Chat chat, @ItemChangeType int changeType) { }
 }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibListeners.java
Patch:
@@ -835,7 +835,7 @@ void updateChatReadInbox (TdApi.UpdateChatReadInbox update, boolean availability
     if (chatLists != null) {
       for (TdlibChatList chatList : chatLists) {
         iterateChatListListeners(chatList, listener ->
-          listener.onChatListItemChanged(chatList, chat, ChatListListener.ItemChangeType.READ_INBOX)
+          listener.onChatListItemChanged(chatList, chat, availabilityChanged ? ChatListListener.ItemChangeType.UNREAD_AVAILABILITY_CHANGED : ChatListListener.ItemChangeType.READ_INBOX)
         );
       }
     }

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -599,6 +599,7 @@ public void onChatListItemChanged (TdlibChatList chatList, TdApi.Chat chat, @Ite
             int reason;
             switch (changeType) {
               case ItemChangeType.TITLE:
+              case ItemChangeType.UNREAD_AVAILABILITY_CHANGED:
                 reason = ChatsAdapter.ARCHIVE_UPDATE_ALL;
                 break;
               case ItemChangeType.READ_INBOX:

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockRichText.java
Patch:
@@ -294,7 +294,7 @@ private void showChatLinkSubtitle (TdApi.Chat chat, long time, @Nullable TdlibUi
     context.runOnUiThreadOptional(() -> {
       int avatarSize = (getComputedHeight() - Screen.dp(8f) * 2);
       avatarFile = context.tdlib().chatAvatar(chat.id);
-      avatarPlaceholder = context.tdlib().chatPlaceholder(chat, false, avatarSize / 2f, null);
+      avatarPlaceholder = context.tdlib().chatPlaceholder(chat, false, Screen.px(avatarSize / 2f), null);
       invalidateContent();
 
       CharSequence text = context.tdlib().status().chatStatus(chat);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -613,7 +613,7 @@ public static Object fillMessageOptions (MessagesController m, TGMessage msg, In
 
     // Stats
 
-    if (msg.canViewStatistics()) {
+    if (!isMore && msg.canViewStatistics()) {
       ids.append(R.id.btn_viewStatistics);
       strings.append(R.string.ViewStats);
       icons.append(R.drawable.baseline_bar_chart_24);

File: app/src/main/java/org/thunderdog/challegram/component/chat/PinnedMessagesBar.java
Patch:
@@ -320,7 +320,7 @@ public void initialize (@NonNull ViewController<?> viewController) {
       @Override
       protected void setMessagePreview (ListItem item, int position, MessagePreviewView previewView) {
         TdApi.Message message = (TdApi.Message) item.getData();
-        previewView.setMessage(message, new TdApi.SearchMessagesFilterPinned(), item.getStringValue());
+        previewView.setMessage(message, new TdApi.SearchMessagesFilterPinned(), item.getStringValue(), false);
         updateContentInset(previewView, position);
       }
 

File: app/src/main/java/org/thunderdog/challegram/ui/ListItem.java
Patch:
@@ -121,6 +121,7 @@ public class ListItem {
   public static final int TYPE_CHART_DOUBLE_LINEAR = 103;
   public static final int TYPE_CHART_STACK_BAR = 104;
   public static final int TYPE_CHART_STACK_PIE = 105;
+  public static final int TYPE_CHART_HEADER_DETACHED = 106;
 
   public static final int TYPE_HEADER_MULTILINE = 110;
 
@@ -135,6 +136,7 @@ public class ListItem {
   public static final int TYPE_PAGE_BLOCK_TABLE = 111;
 
   public static final int TYPE_MESSAGE_PREVIEW = 120;
+  public static final int TYPE_STATS_MESSAGE_PREVIEW = 121;
 
   private static final int FLAG_SELECTED = 1;
   private static final int FLAG_BOOL_VALUE = 1 << 1;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -2499,7 +2499,7 @@ public void openUrl (final TdlibDelegate context, final String url, @Nullable Ur
           if (!StringUtils.isEmpty(host) && path != null && path.length() > 1) {
             switch (Settings.instance().getInstantViewMode()) {
               case Settings.INSTANT_VIEW_MODE_INTERNAL:
-                ok = tdlib.isKnownHost(host, false);
+                ok = tdlib.isKnownHost(host, true);
                 break;
               case Settings.INSTANT_VIEW_MODE_ALL:
                 ok = true;

File: app/src/main/java/org/thunderdog/challegram/filegen/VideoGen.java
Patch:
@@ -287,6 +287,7 @@ private void convertVideoComplex (String sourcePath, String destinationPath, Vid
       dataSource = new UriDataSource(UI.getAppContext(), Uri.parse(sourcePath));
     } else {
       dataSource = new FilePathDataSource(sourcePath);
+      dataSource.initialize();
     }
 
     if (info.needTrim()) {

File: app/src/main/java/org/thunderdog/challegram/ui/EditRightsController.java
Patch:
@@ -867,7 +867,7 @@ private void checkTransferOwnership () {
         adapter.getItems().add(i, new ListItem(ListItem.TYPE_SEPARATOR_FULL));
         adapter.getItems().add(i, newTransferOwnershipItem(isChannel));
         adapter.notifyItemRangeInserted(i, 2);
-      } else {
+      } else if (adapter.indexOfViewById(R.id.btn_transferOwnership) == -1) {
         int startIndex = adapter.getItemCount() - 1;
         adapter.getItems().addAll(startIndex, Arrays.asList(
           new ListItem(ListItem.TYPE_SHADOW_TOP),

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -679,13 +679,13 @@ private boolean isReturnAbove () {
     return scrollBy < 0;
   }
 
-  public void scrollToStart () {
+  public void scrollToStart (boolean force) {
     if (inSpecialMode()) {
       stopScroll();
       scrollToBottom(false);
       return;
     }
-    if (hasReturnMessage()) {
+    if (hasReturnMessage() && !force) {
       highlightMessage(new MessageId(highlightMessageId.getChatId(), returnToMessageIds[returnToMessageIds.length - 1]),
         HIGHLIGHT_MODE_NORMAL,
         returnToMessageIds.length == 1 ? null : ArrayUtils.removeElement(returnToMessageIds, returnToMessageIds.length - 1),

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -823,7 +823,7 @@ public void onCompletelyHidden () {
     scrollToBottomButton.setId(R.id.btn_scroll);
     scrollToBottomButton.setOnClickListener(this);
     scrollToBottomButton.setOnLongClickListener(v -> {
-      manager.scrollToStart();
+      manager.scrollToStart(true);
       return true;
     });
     addThemeInvalidateListener(scrollToBottomButton);
@@ -2618,7 +2618,7 @@ private void scrollToUnreadOrStartMessage () {
         }
       }
     }
-    manager.scrollToStart();
+    manager.scrollToStart(false);
   }
 
   public boolean centerMessage (long chatId, long messageId, boolean delayed, boolean centered) {

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -7648,7 +7648,7 @@ public void findUpdateFile (@NonNull RunnableData<UpdateFileInfo> onDone) {
           version = document.fileName.substring(prefix.length(), i == -1 ? document.fileName.length() : i);
           if (version.matches("^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$")) {
             buildNo = StringUtils.parseInt(version.substring(version.lastIndexOf('.') + 1));
-            if (buildNo > BuildConfig.ORIGINAL_VERSION_CODE) {
+            if (buildNo > BuildConfig.ORIGINAL_VERSION_CODE || BuildConfig.DEBUG) {
               ok = true;
             }
           }

File: app/src/main/java/org/thunderdog/challegram/data/TGInlineKeyboard.java
Patch:
@@ -627,7 +627,7 @@ public void draw (MessageView view, Canvas c, int cx, int cy, int buttonWidth, i
           }
         }
       } else {
-        // TOD
+        // TODO
       }
     }
 

File: app/src/main/java/org/thunderdog/challegram/component/chat/InlineResultsWrap.java
Patch:
@@ -32,11 +32,13 @@
 import org.thunderdog.challegram.data.InlineResultPhoto;
 import org.thunderdog.challegram.data.InlineResultSticker;
 import org.thunderdog.challegram.data.TD;
+import org.thunderdog.challegram.data.TGBotStart;
 import org.thunderdog.challegram.navigation.HeaderView;
 import org.thunderdog.challegram.navigation.NavigationController;
 import org.thunderdog.challegram.navigation.ViewController;
 import org.thunderdog.challegram.telegram.TGLegacyManager;
 import org.thunderdog.challegram.telegram.TdlibDelegate;
+import org.thunderdog.challegram.telegram.TdlibUi;
 import org.thunderdog.challegram.theme.Theme;
 import org.thunderdog.challegram.theme.ThemeId;
 import org.thunderdog.challegram.theme.ThemeListenerList;
@@ -858,7 +860,7 @@ public void processResult (final TdApi.Object object) {
           UI.post(() -> {
             if (!isCancelled()) {
               setItems(null);
-              delegate.tdlib().ui().openChat(c, chatId, null);
+              delegate.tdlib().ui().openChat(c, chatId, new TdlibUi.ChatOpenParameters().keepStack().shareItem(new TGBotStart(delegate.tdlib().chatUserId(chatId), button.data(), false)));
             }
           });
         } else {

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsLanguageController.java
Patch:
@@ -494,7 +494,7 @@ private boolean showLanguageOptions (ListItem item) {
       ids.append(R.id.btn_new);
       strings.append(R.string.LocalizationCreateTitle);
       icons.append(R.drawable.baseline_create_24);
-    } else if (Td.isBeta(languageInfo) || Td.isLocal(languageInfo) || hasAccessToRawLanguages()) {
+    } else if (Td.isBeta(languageInfo) || Td.isLocal(languageInfo) || Td.isInstalled(languageInfo) || hasAccessToRawLanguages()) {
       int size = Td.isLocal(languageInfo) ? 3 : 2;
 
       info = languageInfo.nativeName + " / " + languageInfo.name;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -3556,6 +3556,8 @@ public void exitToChatScreen (ViewController<?> context, long chatId) {
     ViewController<?> current = stack.getCurrent();
     if (stack.size() > 1 && context.getChatId() == chatId && (current == context || (current != null && current.getChatId() == chatId))) {
       for (int i = stack.size() - 2; i >= 1; i--) {
+        if (stack.get(i) instanceof ChatsController)
+          break;
         stack.destroy(i);
       }
       current.setShareCustomHeaderView(false);

File: app/src/main/java/org/thunderdog/challegram/data/TGWebPage.java
Patch:
@@ -606,7 +606,7 @@ private void buildHeader (TdApi.WebPage webPage, int maxWidth) {
       siteName = null;
     }
 
-    if (!StringUtils.isEmpty(webPage.title)) {
+    if (!StringUtils.isEmpty(webPage.title) && !isTgWallpaper()) {
       if (textHeight > 0)
         textHeight += Screen.dp(TEXT_PADDING);
 
@@ -985,7 +985,7 @@ protected boolean needsSpecialProcessing () {
   }
 
   protected boolean isTgWallpaper() {
-    return type == TYPE_TELEGRAM_BACKGROUND && webPage.document != null && webPage.document.thumbnail != null;
+    return type == TYPE_TELEGRAM_BACKGROUND;
   }
 
   protected boolean isTgWallpaperWithPreview() {

File: app/src/main/java/org/thunderdog/challegram/telegram/Tdlib.java
Patch:
@@ -7501,8 +7501,8 @@ public void findUpdateFile (@NonNull RunnableData<TdApi.Document> onDone) {
           int i = document.fileName.indexOf('-', prefix.length());
           String version = document.fileName.substring(prefix.length(), i == -1 ? document.fileName.length() : i);
           if (version.matches("^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$")) {
-            int buildNo = StringUtils.parseInt(version.substring(version.lastIndexOf('.')));
-            if (buildNo > BuildConfig.ORIGINAL_VERSION_CODE) {
+            int buildNo = StringUtils.parseInt(version.substring(version.lastIndexOf('.') + 1));
+            if (buildNo > BuildConfig.ORIGINAL_VERSION_CODE || BuildConfig.DEBUG) {
               ok = true;
             }
           }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibManager.java
Patch:
@@ -1427,9 +1427,9 @@ public synchronized void checkDeviceToken () {
     };
     try {
       FirebaseApp.initializeApp(UI.getAppContext());
-      FirebaseInstallations.getInstance().getId().addOnSuccessListener(token -> {
-        Log.i(Log.TAG_FCM, "Retrieved firebase token: %s", token);
-        setDeviceToken(token);
+      FirebaseInstallations.getInstance().getToken(false).addOnSuccessListener(token -> {
+        Log.i(Log.TAG_FCM, "Retrieved firebase token: %s, created: %d, expires: %d", token.getToken(), token.getTokenCreationTimestamp(), token.getTokenExpirationTimestamp());
+        setDeviceToken(token.getToken());
       }).addOnFailureListener(onFailureListener);
     } catch (Exception e) {
       onFailureListener.onFailure(e);

File: app/src/main/java/org/thunderdog/challegram/component/chat/WallpaperAdapter.java
Patch:
@@ -283,9 +283,7 @@ private static ArrayList<TGBackground> injectCustomWallpaper (Tdlib tdlib, List<
       TGBackground check;
       while (checkIndex >= 0) {
         check = newList.get(checkIndex--);
-        if (!check.isFillSolid())
-          break;
-        if (check.getBackgroundColor() == color) {
+        if (check.isFillSolid() && check.getBackgroundColor() == color) {
           found = true;
           break;
         }

File: app/src/main/java/org/thunderdog/challegram/component/chat/WallpaperView.java
Patch:
@@ -270,13 +270,13 @@ private static void drawWallpaper (TGBackground wallpaper, Canvas c, DrawAlgorit
     } else if (wallpaper.isFillGradient()) {
       DrawAlgorithms.drawGradient(c, gradientCache, receiver.getLeft(), receiver.getTop(), receiver.getRight(), receiver.getBottom(), wallpaper.getTopColor(), wallpaper.getBottomColor(), wallpaper.getRotationAngle(), alpha);
     } else if (wallpaper.isFillFreeformGradient()) {
-      c.drawColor(ColorUtils.alphaColor(alpha, getWallpaperBackground(theme)));
+      c.drawColor(ColorUtils.alphaColor(alpha, wallpaper.getBackgroundColor()));
       DrawAlgorithms.drawMulticolorGradient(c, gradientCache, receiver.getLeft(), receiver.getTop(), receiver.getRight(), receiver.getBottom(), wallpaper.getFreeformColors(), alpha);
     } else if (wallpaper.isPattern()) {
       if (wallpaper.isPatternBackgroundGradient()) {
         DrawAlgorithms.drawGradient(c, gradientCache, receiver.getLeft(), receiver.getTop(), receiver.getRight(), receiver.getBottom(), wallpaper.getTopColor(), wallpaper.getBottomColor(), wallpaper.getRotationAngle(), alpha);
       } else if (wallpaper.isPatternBackgroundFreeformGradient()) {
-        c.drawColor(ColorUtils.alphaColor(alpha, getWallpaperBackground(theme)));
+        c.drawColor(ColorUtils.alphaColor(alpha, wallpaper.getBackgroundColor()));
         DrawAlgorithms.drawMulticolorGradient(c, gradientCache, receiver.getLeft(), receiver.getTop(), receiver.getRight(), receiver.getBottom(), wallpaper.getFreeformColors(), alpha);
       } else {
         c.drawColor(ColorUtils.color((int) (255f * alpha), wallpaper.getBackgroundColor()));

File: app/src/main/java/org/thunderdog/challegram/data/TGWebPage.java
Patch:
@@ -599,7 +599,7 @@ private void buildHeader (TdApi.WebPage webPage, int maxWidth) {
         .lineWidthProvider(provider)
         .textFlags(Text.FLAG_ALL_BOLD | (Lang.rtl() ? Text.FLAG_ALIGN_RIGHT : 0))
         .clipTextArea()
-        .entities(new TextEntity[]{TextEntity.valueOf(parent.tdlib, webPage.siteName, new TdApi.TextEntity(0, webPage.siteName.length(), new TdApi.TextEntityTypeTextUrl(url)), parent.openParameters())})
+        .entities(new TextEntity[]{TextEntity.valueOf(parent.tdlib, actualSiteName, new TdApi.TextEntity(0, actualSiteName.length(), new TdApi.TextEntityTypeTextUrl(url)), parent.openParameters())})
         .build();
       textHeight += siteName.getHeight();
     } else {

File: app/src/main/java/org/thunderdog/challegram/theme/TGBackground.java
Patch:
@@ -338,7 +338,9 @@ private static int getBackgroundColor (TdApi.BackgroundFill fill) {
         return ColorUtils.fromToArgb(ColorUtils.color(255, gradient.topColor), ColorUtils.color(255, gradient.bottomColor), .5f);
       }
       case TdApi.BackgroundFillFreeformGradient.CONSTRUCTOR:
-        return 0; // TODO: return center color
+        // There can't be less then 2 colors in freeform gradient
+        TdApi.BackgroundFillFreeformGradient gradient = (TdApi.BackgroundFillFreeformGradient) fill;
+        return ColorUtils.color(255, gradient.colors.length >= 3 ? gradient.colors[2] : gradient.colors[1]);
       case TdApi.BackgroundFillSolid.CONSTRUCTOR:
         return ColorUtils.color(255, ((TdApi.BackgroundFillSolid) fill).color);
     }

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibUi.java
Patch:
@@ -1306,15 +1306,15 @@ public void shareProxyUrl (TdlibDelegate context, String url) {
   }
 
   public void shareLanguageUrl (TdlibDelegate context, TdApi.LanguagePackInfo languagePackInfo) {
-    String url = context.tdlib().tMeUrl("setlanguage/" + languagePackInfo.id);
+    String url = context.tdlib().tMeLanguageUrl(languagePackInfo.id);
     String text = Lang.getString(R.string.ShareTextLanguageLink, languagePackInfo.name, url);
     ShareController c = new ShareController(context.context(), context.tdlib());
     c.setArguments(new ShareController.Args(text).setShare(text, Lang.getString(R.string.ShareBtnLanguage)));
     c.show();
   }
 
   public void shareStickerSetUrl (TdlibDelegate context, TdApi.StickerSetInfo stickerSet) {
-    String link = tdlib.tMeUrl("addstickers/" + stickerSet.name);
+    String link = tdlib.tMeStickerSetUrl(stickerSet.name);
     String title = stickerSet.title;
     ShareController c = new ShareController(context.context(), context.tdlib());
     c.setArguments(new ShareController.Args(Lang.getString(R.string.ShareTextStickerLink2, title, link)).setShare(Lang.getString(R.string.ShareTextStickerLink, title, link), Lang.getString(R.string.ShareBtnStickerSet)));

File: app/src/main/java/org/thunderdog/challegram/theme/ThemeInfo.java
Patch:
@@ -76,7 +76,7 @@ public String getName () {
 
   public String getWallpaperLink (Tdlib tdlib) {
     String data = getWallpaper();
-    return StringUtils.isEmpty(data) ? null : tdlib.tMeUrl("bg/" + data);
+    return StringUtils.isEmpty(data) ? null : tdlib.tMeBackgroundUrl(data);
   }
 
   public String getWallpaper () {

File: app/src/main/java/org/thunderdog/challegram/ui/MessagesController.java
Patch:
@@ -1765,12 +1765,12 @@ public void onMoreItemPressed (int id) {
     switch (id) {
       case R.id.btn_share: {
         ShareController c = new ShareController(context(), tdlib());
-        c.setArguments(new ShareController.Args(tdlib().tMeUrl("bg/" + getArgumentsStrict().wallpaperObject.name)));
+        c.setArguments(new ShareController.Args(tdlib().tMeBackgroundUrl(getArgumentsStrict().wallpaperObject.name)));
         c.show();
         break;
       }
       case R.id.btn_copyLink: {
-        UI.copyText(tdlib().tMeUrl("bg/" + getArgumentsStrict().wallpaperObject.name), R.string.CopiedLink);
+        UI.copyText(tdlib().tMeBackgroundUrl(getArgumentsStrict().wallpaperObject.name), R.string.CopiedLink);
         break;
       }
       case R.id.btn_openLinkedChat: {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -338,6 +338,8 @@ public interface MessageProvider {
   private boolean lastScrollToBottomVisible;
 
   private void checkScrollButton (int first, int last) {
+    if (controller().inWallpaperPreviewMode())
+      return;
     boolean hasMessages = getActiveMessageCount() > 0;
     boolean isVisible = hasMessages && first != -1 && last != -1 && adapter.getMessageCount() >= last;
     if (isVisible) {

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibWallpaperManager.java
Patch:
@@ -16,6 +16,7 @@
 
 import me.vkryl.core.ArrayUtils;
 import me.vkryl.core.StringUtils;
+import me.vkryl.td.TdConstants;
 
 /**
  * Date: 1/3/18
@@ -134,7 +135,7 @@ private void fetchBackgrounds (boolean forDarkTheme) {
           TdApi.Background[] rawBackgrounds = ((TdApi.Backgrounds) result).backgrounds;
           List<TGBackground> backgrounds = new ArrayList<>(rawBackgrounds.length);
           for (TdApi.Background rawBackground : rawBackgrounds) {
-            if (rawBackground.document != null && "application/x-tgwallpattern".equals(rawBackground.document.mimeType)) {
+            if (rawBackground.document != null && TdConstants.BACKGROUND_PATTERN_MIME_TYPE.equals(rawBackground.document.mimeType)) {
               continue;
             }
             TGBackground background = new TGBackground(tdlib, rawBackground);

File: app/src/main/java/org/thunderdog/challegram/Log.java
Patch:
@@ -938,7 +938,7 @@ public static void unexpectedTdlibResponse (TdApi.Object response, Class<? exten
     }
     b.append(". Expected: ");
     boolean first = true;
-    for (Class object : objects) {
+    for (Class<?> object : objects) {
       if (first) {
         first = false;
       } else {

File: app/src/main/java/org/thunderdog/challegram/U.java
Patch:
@@ -2371,7 +2371,7 @@ public static String resolveMimeType (String path, String extension) {
     return null;
   }
 
-  public static void replaceItems (final RecyclerView.Adapter adapter, final int oldItemCount) {
+  public static void replaceItems (final RecyclerView.Adapter<?> adapter, final int oldItemCount) {
     int newItemCount = adapter.getItemCount();
     if (oldItemCount == newItemCount) {
       if (oldItemCount != 0) {
@@ -2390,7 +2390,7 @@ public static void replaceItems (final RecyclerView.Adapter adapter, final int o
     }
   }
 
-  public static void notifyItemsReplaced (final RecyclerView.Adapter adapter, final int oldItemCount) {
+  public static void notifyItemsReplaced (final RecyclerView.Adapter<?> adapter, final int oldItemCount) {
     int newItemCount = adapter.getItemCount();
     if (oldItemCount == newItemCount) {
       if (oldItemCount != 0) {
@@ -2413,7 +2413,7 @@ public static void notifyItemsReplaced (final RecyclerView.Adapter adapter, fina
     }*/
   }
 
-  public static void notifyItemsReplaced (final RecyclerView.Adapter adapter, final int oldItemCount, final int headerItemCount) {
+  public static void notifyItemsReplaced (final RecyclerView.Adapter<?> adapter, final int oldItemCount, final int headerItemCount) {
     int newItemCount = adapter.getItemCount();
     int changedItemCount = Math.max(0, newItemCount - headerItemCount);
     if (oldItemCount == newItemCount) {

File: app/src/main/java/org/thunderdog/challegram/charts/Chart.java
Patch:
@@ -135,7 +135,7 @@ public long getEndTime () {
   }
 
   @Override
-  public void onDateChanged (BaseChartView chartView, long startTimeMs, long endTimeMs) {
+  public void onDateChanged (BaseChartView<?, ?> chartView, long startTimeMs, long endTimeMs) {
     this.startTime = startTimeMs;
     this.endTime = endTimeMs;
     for (DateListener listener : dateListeners) {

File: app/src/main/java/org/thunderdog/challegram/charts/view_data/ChartHeaderView.java
Patch:
@@ -114,7 +114,7 @@ public void setTitle(String s) {
         title.setText(s);
     }
 
-    public void zoomTo(BaseChartView chartView, long d, boolean animate) {
+    public void zoomTo(BaseChartView<?, ?> chartView, long d, boolean animate) {
         setDates(d, d);
         back.setVisibility(View.VISIBLE);
 
@@ -151,7 +151,7 @@ public void zoomTo(BaseChartView chartView, long d, boolean animate) {
         }
     }
 
-    public void zoomOut(BaseChartView chartView, boolean animated) {
+    public void zoomOut(BaseChartView<?, ?> chartView, boolean animated) {
         setDates(chartView.getStartDate(), chartView.getEndDate());
         if (animated) {
             title.setAlpha(0);

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomContactsController.java
Patch:
@@ -30,7 +30,7 @@
  * Author: default
  */
 
-public class MediaBottomContactsController extends MediaBottomBaseController implements Client.ResultHandler, SimpleUsersAdapter.Callback, Menu {
+public class MediaBottomContactsController extends MediaBottomBaseController<Void> implements Client.ResultHandler, SimpleUsersAdapter.Callback, Menu {
   public MediaBottomContactsController (MediaLayout context) {
     super(context, R.string.AttachContact);
   }

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomInlineBotsController.java
Patch:
@@ -21,7 +21,7 @@
  * Author: default
  */
 
-public class MediaBottomInlineBotsController extends MediaBottomBaseController implements Client.ResultHandler, SimpleUsersAdapter.Callback {
+public class MediaBottomInlineBotsController extends MediaBottomBaseController<Void> implements Client.ResultHandler, SimpleUsersAdapter.Callback {
   public MediaBottomInlineBotsController (MediaLayout context) {
     super(context, R.string.InlineBot);
   }

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaBottomLocationController.java
Patch:
@@ -59,7 +59,7 @@
  * Author: default
  */
 
-public class MediaBottomLocationController extends MediaBottomBaseController implements View.OnClickListener, MediaLocationMapView.Callback, MediaLocationFinder.Callback, ActivityResultHandler, Menu, FactorAnimator.Target {
+public class MediaBottomLocationController extends MediaBottomBaseController<Void> implements View.OnClickListener, MediaLocationMapView.Callback, MediaLocationFinder.Callback, ActivityResultHandler, Menu, FactorAnimator.Target {
   public MediaBottomLocationController (MediaLayout context) {
     super(context, R.string.Location);
   }
@@ -371,7 +371,7 @@ public void onClick (View v) {
             switch (errorCode) {
               case LocationHelper.ERROR_CODE_PERMISSION:
               case LocationHelper.ERROR_CODE_RESOLUTION: {
-                ViewController c = context.navigation().getCurrentStackItem();
+                ViewController<?> c = context.navigation().getCurrentStackItem();
                 if (c != null) {
                   c.openMissingLocationPermissionAlert(true);
                 }

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaContentView.java
Patch:
@@ -20,7 +20,7 @@ public class MediaContentView extends FrameLayoutFix implements GestureDetector.
   private static final boolean TRACE_INTERCEPT = false;
   private static final boolean TRACE_TOUCHES = false;
 
-  private MediaBottomBaseController base;
+  private MediaBottomBaseController<?> base;
 
   private final float touchSlop;
   private final GestureDetector flingDetector;
@@ -31,7 +31,7 @@ public MediaContentView (Context context) {
     this.touchSlop = Screen.getTouchSlop();
   }
 
-  public void setBoundController (MediaBottomBaseController controller) {
+  public void setBoundController (MediaBottomBaseController<?> controller) {
     this.base = controller;
   }
 

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLocationMapView.java
Patch:
@@ -96,10 +96,9 @@ public MediaLocationMapView (Context context) {
     super(context);
   }
 
-  private ViewController themeProvider;
   private MediaLocationPointView locationPointView;
 
-  public void init (ViewController themeProvider, MediaLocationPointView pointView, boolean big) {
+  public void init (ViewController<?> themeProvider, MediaLocationPointView pointView, boolean big) {
     locationPointView = pointView;
 
     int mapHeight = getMapHeight(big);

File: app/src/main/java/org/thunderdog/challegram/component/attach/MediaLocationPlaceView.java
Patch:
@@ -74,7 +74,7 @@ public MediaLocationPlaceView (Context context) {
   }
 
   private int flags;
-  private @Nullable ViewController themeProvider;
+  private @Nullable ViewController<?> themeProvider;
 
   private void setIsRed (boolean isRed) {
     int flags = BitwiseUtils.setFlag(this.flags, FLAG_RED, isRed);
@@ -109,7 +109,7 @@ public void onActiveStateChanged (TimerView v, boolean isActive) {
     Views.setRightMargin(addressView, rightMargin);
   }
 
-  public void init (@Nullable ViewController themeProvider, boolean big) {
+  public void init (@Nullable ViewController<?> themeProvider, boolean big) {
     Context context = getContext();
 
     this.themeProvider = themeProvider;

File: app/src/main/java/org/thunderdog/challegram/component/base/SettingView.java
Patch:
@@ -237,7 +237,7 @@ public void setDataColorId (int dataColorId, boolean isSubtitle) {
     }
   }
 
-  public void addThemeListeners (@Nullable ViewController themeProvider) {
+  public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       if (togglerView != null) {
         themeProvider.addThemeInvalidateListener(togglerView);

File: app/src/main/java/org/thunderdog/challegram/component/chat/ChatHeaderView.java
Patch:
@@ -31,7 +31,7 @@ public interface Callback {
 
   private Callback callback;
 
-  public ChatHeaderView (Context context, Tdlib tdlib, @Nullable ViewController parent) {
+  public ChatHeaderView (Context context, Tdlib tdlib, @Nullable ViewController<?> parent) {
     super(context, tdlib, parent);
     setPhotoOpenDisabled(true);
     setOnClickListener(v -> {

File: app/src/main/java/org/thunderdog/challegram/component/chat/CommandKeyboardLayout.java
Patch:
@@ -51,7 +51,7 @@ public CommandKeyboardLayout (Context context) {
     setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, size));
   }
 
-  public void setThemeProvider (@Nullable ViewController themeProvider) {
+  public void setThemeProvider (@Nullable ViewController<?> themeProvider) {
     this.themeProvider = themeProvider;
   }
 
@@ -123,7 +123,7 @@ private void resizeKeyboard (boolean customSize) {
     setSize(size, customSize ? size : Keyboard.getSize());
   }
 
-  private @Nullable ViewController themeProvider;
+  private @Nullable ViewController<?> themeProvider;
 
   private TextView genButton () {
     TextView text = new NoScrollTextView(getContext());

File: app/src/main/java/org/thunderdog/challegram/component/chat/EmojiToneHelper.java
Patch:
@@ -72,9 +72,9 @@ public static int[] defaultDisplay (EmojiToneHelper context, View anchorView, Vi
 
   private final Context context;
   private final Delegate delegate;
-  private final @Nullable ViewController themeProvider;
+  private final @Nullable ViewController<?> themeProvider;
 
-  public EmojiToneHelper (Context context, Delegate delegate, @Nullable ViewController themeProvider) {
+  public EmojiToneHelper (Context context, Delegate delegate, @Nullable ViewController<?> themeProvider) {
     this.context = context;
     this.delegate = delegate;
     this.themeProvider = themeProvider;
@@ -478,7 +478,7 @@ public EmojiToneListView (Context context) {
       super(context);
     }
 
-    private void init (ViewController themeProvider, boolean is2d) {
+    private void init (ViewController<?> themeProvider, boolean is2d) {
       this.tones = new EmojiInfo[EmojiData.emojiColors.length - (is2d ? 1 : 0)];
       this.backgroundDrawable = Theme.filteredDrawable(R.drawable.stickers_back_all, R.id.theme_color_overlayFilling, themeProvider);
       this.cornerDrawable = Theme.filteredDrawable(R.drawable.stickers_back_arrow, R.id.theme_color_overlayFilling, themeProvider);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageView.java
Patch:
@@ -911,7 +911,7 @@ private boolean performLongPress () {
     if (msg instanceof TGMessageBotInfo || msg.isNotSent()) {
       return false;
     }
-    ViewController c = ViewController.findRoot(this);
+    ViewController<?> c = ViewController.findRoot(this);
     if (c == null || !(c instanceof MessagesController)) {
       return false;
     }

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessageViewGroup.java
Patch:
@@ -80,7 +80,7 @@ public MessageOverlayView getOverlayView () {
     return overlayView;
   }
 
-  public void initWithView (MessageView messageView, MessagesManager manager, @Nullable ViewController themeProvider) {
+  public void initWithView (MessageView messageView, MessagesManager manager, @Nullable ViewController<?> themeProvider) {
     this.messageView = messageView;
     messageView.setCustomMeasureDisabled(true);
     messageView.setParentMessageViewGroup(this);

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesAdapter.java
Patch:
@@ -38,9 +38,9 @@ public class MessagesAdapter extends RecyclerView.Adapter<MessagesHolder> {
   private @Nullable TdApi.ChatType chatType;
   private @Nullable ArrayList<TGMessage> items;
 
-  private final @Nullable ViewController themeProvider;
+  private final @Nullable ViewController<?> themeProvider;
 
-  public MessagesAdapter (Context context, MessagesManager manager, @Nullable ViewController themeProvider) {
+  public MessagesAdapter (Context context, MessagesManager manager, @Nullable ViewController<?> themeProvider) {
     this.context = context;
     this.manager = manager;
     this.themeProvider = themeProvider;

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesHolder.java
Patch:
@@ -107,7 +107,7 @@ public void detach () {
     }
   }
 
-  private static MessageView createMessageView (Context context, int type, MessagesManager manager, @Nullable ViewController themeProvider) {
+  private static MessageView createMessageView (Context context, int type, MessagesManager manager, @Nullable ViewController<?> themeProvider) {
     switch (type) {
       case TYPE_MESSAGE: {
         MessageView view = new MessageView(context);
@@ -139,7 +139,7 @@ private static MessageView createMessageView (Context context, int type, Message
     throw new IllegalArgumentException("");
   }
 
-  public static MessagesHolder create (Context context, final MessagesManager manager, int type, @Nullable ViewController themeProvider) {
+  public static MessagesHolder create (Context context, final MessagesManager manager, int type, @Nullable ViewController<?> themeProvider) {
     switch (type) {
       case TYPE_EMPTY: {
         final EmptyTextView view = new EmptyTextView(context) {

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesManager.java
Patch:
@@ -424,7 +424,7 @@ public boolean canRestorePinnedMessage () {
     return pinnedMessages != null && pinnedMessages.isAvailable() && !pinnedMessagesAvailable;
   }
 
-  public void destroy (ViewController context) {
+  public void destroy (ViewController<?> context) {
     resetScroll();
     cancelRefresh();
     returnToMessageIds = null;

File: app/src/main/java/org/thunderdog/challegram/component/chat/RaiseHelper.java
Patch:
@@ -389,8 +389,8 @@ private void processRaiseMode () {
       BaseActivity context = UI.getUiContext();
       inRaise = !TdlibManager.instance().calls().hasActiveCall();
       if (inRaise && !this.inRaiseMode && (context != null && context.getActivityState() == UI.STATE_RESUMED && !context.isActivityBusyWithSomething())) {
-        ViewController c = context.navigation().getCurrentStackItem();
-        inRaise = c != null && c instanceof MessagesController && ((MessagesController) c).isEmojiInputEmpty();
+        ViewController<?> c = context.navigation().getCurrentStackItem();
+        inRaise = c instanceof MessagesController && ((MessagesController) c).isEmojiInputEmpty();
       }
     }
     setRaiseDelayed(inRaise);

File: app/src/main/java/org/thunderdog/challegram/component/chat/ReplyView.java
Patch:
@@ -94,7 +94,7 @@ public void checkRtl () {
     invalidate();
   }
 
-  public void initWithCallback (Callback callbacK, ViewController themeProvider) {
+  public void initWithCallback (Callback callbacK, ViewController<?> themeProvider) {
     this.callback = callbacK;
 
     FrameLayoutFix.LayoutParams params;

File: app/src/main/java/org/thunderdog/challegram/component/chat/VoiceInputView.java
Patch:
@@ -100,7 +100,7 @@ public VoiceInputView (Context context) {
     setLayoutParams(params);
   }
 
-  public void addThemeListeners (ViewController c) {
+  public void addThemeListeners (ViewController<?> c) {
     c.addThemeFilterListener(iconView, R.id.theme_color_icon);
     c.addThemeInvalidateListener(this);
     ViewSupport.setThemedBackground(this, R.id.theme_color_filling);

File: app/src/main/java/org/thunderdog/challegram/component/dialogs/ChatsViewHolder.java
Patch:
@@ -50,7 +50,7 @@ public void setEmpty (int empty) {
     ((ListInfoView) itemView).showEmpty(Lang.getString(empty));
   }
 
-  public static ChatsViewHolder create (Context context, Tdlib tdlib, int viewType, @Nullable ChatsController parentController, @Nullable ViewController themeProvider, BaseView.ActionListProvider actionListProvider) {
+  public static ChatsViewHolder create (Context context, Tdlib tdlib, int viewType, @Nullable ChatsController parentController, @Nullable ViewController<?> themeProvider, BaseView.ActionListProvider actionListProvider) {
     switch (viewType) {
       case ChatsAdapter.VIEW_TYPE_CHAT: {
         ChatView view = new ChatView(context, tdlib);

File: app/src/main/java/org/thunderdog/challegram/component/inline/CustomResultView.java
Patch:
@@ -44,7 +44,7 @@ public CustomResultView (Context context) {
     RippleSupport.setTransparentSelector(this);
   }
 
-  private @Nullable InlineResult result;
+  private @Nullable InlineResult<?> result;
 
   @Override
   public void performDestroy () {
@@ -55,7 +55,7 @@ public void performDestroy () {
     }
   }
 
-  public void setInlineResult (@Nullable InlineResult result) {
+  public void setInlineResult (@Nullable InlineResult<?> result) {
     final boolean isAttached = (flags & FLAG_DETACHED) == 0;
     if (isAttached && this.result != null) {
       this.result.detachFromView(this);
@@ -72,7 +72,7 @@ public void setInlineResult (@Nullable InlineResult result) {
     }
   }
 
-  public void invalidateContent (InlineResult result) {
+  public void invalidateContent (InlineResult<?> result) {
     if (this.result == result && result != null) {
       this.result.requestContent(receiver, true);
     }

File: app/src/main/java/org/thunderdog/challegram/component/preview/YouTubePreviewLayout.java
Patch:
@@ -54,7 +54,7 @@ public class YouTubePreviewLayout extends PreviewLayout implements YouTubePlayer
 
   public static boolean ALLOW_FULLSCREEN = false;
 
-  public YouTubePreviewLayout (Context context, ViewController parent) {
+  public YouTubePreviewLayout (Context context, ViewController<?> parent) {
     super(context, parent);
 
     if (ALLOW_FULLSCREEN) {

File: app/src/main/java/org/thunderdog/challegram/component/sticker/StickerSetWrap.java
Patch:
@@ -178,7 +178,7 @@ public void invalidate () {
   public boolean onStickerClick (View view, TGStickerObj sticker, boolean isMenuClick, boolean forceDisableNotification, @Nullable TdApi.MessageSchedulingState schedulingState) {
     NavigationController navigation = UI.getContext(getContext()).navigation();
     if (navigation != null) {
-      ViewController c = navigation.getCurrentStackItem();
+      ViewController<?> c = navigation.getCurrentStackItem();
       if (c instanceof MessagesController && ((MessagesController) c).canWriteMessages()) {
         if (((MessagesController) c).onSendSticker(view, sticker, forceDisableNotification, schedulingState)) {
           popupLayout.hideWindow(true);
@@ -198,7 +198,7 @@ public boolean onStickerClick (View view, TGStickerObj sticker, boolean isMenuCl
   public long getStickerOutputChatId () {
     NavigationController navigation = UI.getContext(getContext()).navigation();
     if (navigation != null) {
-      ViewController c = navigation.getCurrentStackItem();
+      ViewController<?> c = navigation.getCurrentStackItem();
       if (c instanceof MessagesController && ((MessagesController) c).canWriteMessages()) {
         return c.getChatId();
       }

File: app/src/main/java/org/thunderdog/challegram/component/user/SortedUsersAdapter.java
Patch:
@@ -66,7 +66,7 @@ private static UpdateHandler getHandler () {
   public static final int MODE_HORIZONTAL = 0;
   public static final int MODE_VERTICAL = 0;
 
-  private final ViewController context;
+  private final ViewController<?> context;
   private final int mode;
   private final @Nullable View.OnClickListener onClickListener;
   private final @Nullable View.OnLongClickListener onLongClickListener;
@@ -75,7 +75,7 @@ private static UpdateHandler getHandler () {
   private @Nullable String searchQuery;
   private ArrayList<UserItem> searchItems;
 
-  public SortedUsersAdapter (ViewController context, int mode, @Nullable View.OnClickListener onClickListener, @Nullable View.OnLongClickListener onLongClickListener) {
+  public SortedUsersAdapter (ViewController<?> context, int mode, @Nullable View.OnClickListener onClickListener, @Nullable View.OnLongClickListener onLongClickListener) {
     this.context = context;
     this.mode = mode;
     this.onClickListener = onClickListener;

File: app/src/main/java/org/thunderdog/challegram/core/Lang.java
Patch:
@@ -163,7 +163,7 @@ private  static String getCloudString (String key) {
     return string != null ? string.value : null;
   }
 
-  public static CharSequence getTutorial (ViewController context, @NonNull TdApi.ChatSource source) {
+  public static CharSequence getTutorial (ViewController<?> context, @NonNull TdApi.ChatSource source) {
     switch (source.getConstructor()) {
       case TdApi.ChatSourcePublicServiceAnnouncement.CONSTRUCTOR: {
         TdApi.ChatSourcePublicServiceAnnouncement psa = (TdApi.ChatSourcePublicServiceAnnouncement) source;

File: app/src/main/java/org/thunderdog/challegram/data/EmbeddedService.java
Patch:
@@ -93,7 +93,7 @@ public float getPaddingBottom () {
   }
 
   public void open (BaseActivity context) {
-    ViewController c = context.navigation().getCurrentStackItem();
+    ViewController<?> c = context.navigation().getCurrentStackItem();
     if (c == null || !PreviewLayout.show(c, this)) {
       UI.openUrl(viewUrl);
     }

File: app/src/main/java/org/thunderdog/challegram/data/InlineResultCommon.java
Patch:
@@ -601,7 +601,7 @@ public boolean onClick (FileProgressComponent context, View view, TdApi.File fil
   }
 
   @Override
-  public InlineResult setMessage (TdApi.Message message) {
+  public InlineResult<TdApi.InlineQueryResult> setMessage (TdApi.Message message) {
     super.setMessage(message);
     updateDescription();
     return this;

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockDivider.java
Patch:
@@ -22,7 +22,7 @@
  */
 
 public class PageBlockDivider extends PageBlock {
-  public PageBlockDivider (ViewController context, @NonNull TdApi.PageBlock block) {
+  public PageBlockDivider (ViewController<?> context, @NonNull TdApi.PageBlock block) {
     super(context, block);
   }
 

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockFile.java
Patch:
@@ -18,7 +18,7 @@ public class PageBlockFile extends PageBlock {
   private final InlineResultCommon result;
   private final TGPlayerController.PlayListBuilder playListBuilder;
 
-  public PageBlockFile (ViewController context, TdApi.PageBlock pageBlock, String url, TGPlayerController.PlayListBuilder builder) {
+  public PageBlockFile (ViewController<?> context, TdApi.PageBlock pageBlock, String url, TGPlayerController.PlayListBuilder builder) {
     super(context, pageBlock);
     this.result = (InlineResultCommon) InlineResult.valueOf(context.context(), context.tdlib(), pageBlock, builder);
     this.playListBuilder = builder;

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockRelatedArticle.java
Patch:
@@ -34,7 +34,7 @@ public class PageBlockRelatedArticle extends PageBlock {
   @Nullable
   private final TdlibUi.UrlOpenParameters openParameters;
 
-  public PageBlockRelatedArticle (ViewController context, TdApi.PageBlockRelatedArticles articles, TdApi.PageBlockRelatedArticle article, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  public PageBlockRelatedArticle (ViewController<?> context, TdApi.PageBlockRelatedArticles articles, TdApi.PageBlockRelatedArticle article, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     super(context, articles);
     this.article = article;
     this.openParameters = openParameters;

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockSimple.java
Patch:
@@ -13,7 +13,7 @@
 public class PageBlockSimple extends PageBlock {
   private final int viewType, backgroundColorId;
 
-  public PageBlockSimple (ViewController context, int viewType, int backgroundColorId) {
+  public PageBlockSimple (ViewController<?> context, int viewType, int backgroundColorId) {
     super(context, null);
     this.viewType = viewType;
     this.backgroundColorId = backgroundColorId;

File: app/src/main/java/org/thunderdog/challegram/data/PageBlockTable.java
Patch:
@@ -108,7 +108,7 @@ public int height () {
   private final Cell[][] cells;
   // private final int totalRowCount, totalColumnCount;
 
-  public PageBlockTable (ViewController context, TdApi.PageBlockTable block, boolean isRtl, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  public PageBlockTable (ViewController<?> context, TdApi.PageBlockTable block, boolean isRtl, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     super(context, block);
     this.isRtl = isRtl;
     this.openParameters = openParameters;

File: app/src/main/java/org/thunderdog/challegram/data/TD.java
Patch:
@@ -578,7 +578,7 @@ public static boolean canRetractVote (TdApi.Poll poll) {
     return false;
   }
 
-  public static TextEntity[] collectAllEntities (ViewController context, Tdlib tdlib, CharSequence cs, boolean onlyLinks, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  public static TextEntity[] collectAllEntities (ViewController<?> context, Tdlib tdlib, CharSequence cs, boolean onlyLinks, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     if (StringUtils.isEmpty(cs))
       return null;
     String str = cs.toString();
@@ -4326,11 +4326,11 @@ public static boolean canSaveToDownloads (TGMessage msg) {
     return isFileLoaded(file);
   }
 
-  public static void deleteFile (final ViewController context, TdApi.File file) {
+  public static void deleteFile (final ViewController<?> context, TdApi.File file) {
     deleteFiles(context, new TdApi.File[] {file}, null);
   }
 
-  public static void deleteFiles (final ViewController context, final TdApi.File[] files, final @Nullable Runnable after) {
+  public static void deleteFiles (final ViewController<?> context, final TdApi.File[] files, final @Nullable Runnable after) {
     if (files == null || files.length == 0) {
       return;
     }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessage.java
Patch:
@@ -370,11 +370,11 @@ public final MessagesController messagesController () {
     return manager.controller();
   }
 
-  public final ViewController controller () {
+  public final ViewController<?> controller () {
     return messagesController().getParentOrSelf();
   }
 
-  public final void navigateTo (ViewController c) {
+  public final void navigateTo (ViewController<?> c) {
     if (!controller().navigateTo(c))
       c.destroy();
   }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageMedia.java
Patch:
@@ -625,7 +625,7 @@ private void openHot (final MessageView view) {
         hotOpened = true;
         hotOpenTime = SystemClock.uptimeMillis();
         currentParent.requestDisallowInterceptTouchEvent(true);
-        ViewController c = context().navigation().getCurrentStackItem();
+        ViewController<?> c = context().navigation().getCurrentStackItem();
         if (c != null) {
           c.hideSoftwareKeyboard();
         }

File: app/src/main/java/org/thunderdog/challegram/data/TGMessageVideo.java
Patch:
@@ -422,8 +422,8 @@ protected void onMessageAttachedToView (@NonNull MessageView view, boolean attac
     BaseActivity context = UI.getContext(view.getContext());
     RoundVideoController c = context.getRoundVideoController();
     if (c.comparePlayingObject(tdlib, msg)) {
-      ViewController m = ViewController.findRoot(view);
-      if (m != null && m instanceof MessagesController) {
+      ViewController<?> m = ViewController.findRoot(view);
+      if (m instanceof MessagesController) {
         ((MessagesController) m).checkRoundVideo();
       } else {
         // Log.w("attach/detach, but MessageController not found");

File: app/src/main/java/org/thunderdog/challegram/data/TGStickerSetInfo.java
Patch:
@@ -143,7 +143,7 @@ public void updateState (TdApi.StickerSetInfo stickerSetInfo) {
     return stickerSet;
   }
 
-  public void show (ViewController context) {
+  public void show (ViewController<?> context) {
     StickerSetWrap wrap;
     if (stickerSet != null) {
       stickerSet.isInstalled = info.isInstalled;

File: app/src/main/java/org/thunderdog/challegram/helper/InlineSearchContext.java
Patch:
@@ -721,7 +721,7 @@ public void processResult (TdApi.Object object) {
     if (chatId != 0 && StringUtils.isEmpty(inlineQuery) && Settings.instance().needTutorial(Settings.TUTORIAL_INLINE_SEARCH_SECRECY)) {
       // TdApi.Chat chat = callback.provideInlineSearchChat();
       if (ChatId.isSecret(callback.provideInlineSearchChatId())) {
-        ViewController c = UI.getCurrentStackItem();
+        ViewController<?> c = UI.getCurrentStackItem();
         if (c != null) {
           c.openAlert(R.string.AppName, Lang.getString(R.string.SecretChatContextBotAlert), Lang.getString(R.string.Confirm), (dialog, which) -> Settings.instance().markTutorialAsComplete(Settings.TUTORIAL_INLINE_SEARCH_SECRECY), ViewController.ALERT_NO_CANCEL | ViewController.ALERT_NO_CANCELABLE);
         }
@@ -983,7 +983,7 @@ public void onResult (TdApi.Object object) {
         return;
       }
 
-      for (InlineResult inlineBot : inlineBots) {
+      for (InlineResult<?> inlineBot : inlineBots) {
         if (prefix.isEmpty() || ((InlineResultMention) inlineBot).matchesPrefix(prefix, false)) {
           inlineBot.setTarget(startIndex, endIndex);
           results.add(inlineBot);

File: app/src/main/java/org/thunderdog/challegram/helper/LiveLocationHelper.java
Patch:
@@ -533,7 +533,7 @@ public void stopLiveLocations (final long chatId, final Runnable after) {
     if (navigationController == null || navigationController.isEmpty()) {
       return;
     }
-    ViewController c = navigationController.getCurrentStackItem();
+    ViewController<?> c = navigationController.getCurrentStackItem();
     if (c == null) {
       return;
     }
@@ -580,7 +580,7 @@ public LiveLocationHelper openLiveLocationList (boolean forceList) {
     if (navigationController == null) {
       return this;
     }
-    ViewController c = context.navigation().getCurrentStackItem();
+    ViewController<?> c = context.navigation().getCurrentStackItem();
     if (c == null) {
       return this;
     }
@@ -663,7 +663,7 @@ public LiveLocationHelper destroy () {
   }
 
   @Override
-  public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.ForceTouchContext context, IntList ids, IntList icons, StringList strings, ViewController target) {
+  public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.ForceTouchContext context, IntList ids, IntList icons, StringList strings, ViewController<?> target) {
     context.setAllowFullscreen(true);
     final ForceTouchView.MaximizeListener maximizeListener = context.getMaximizeListener();
     context.setMaximizeListener((target1, animateToWhenReady, arg) -> {

File: app/src/main/java/org/thunderdog/challegram/navigation/ComplexRecyclerView.java
Patch:
@@ -14,14 +14,14 @@
 
 public class ComplexRecyclerView extends CustomRecyclerView implements Runnable {
   private ComplexHeaderView headerView;
-  private ViewController target;
+  private ViewController<?> target;
   private FloatingButton floatingButton;
 
   private float scrollFactor;
   private boolean factorLocked;
   private int totalY;
 
-  public ComplexRecyclerView (Context context, ViewController target) {
+  public ComplexRecyclerView (Context context, ViewController<?> target) {
     super(context);
     this.target = target;
 
@@ -49,7 +49,7 @@ public void setFactorLocked (boolean locked) {
     this.factorLocked = locked;
   }
 
-  public void setHeaderView (ComplexHeaderView headerView, ViewController target) {
+  public void setHeaderView (ComplexHeaderView headerView, ViewController<?> target) {
     this.headerView = headerView;
     this.target = target;
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/DoubleHeaderView.java
Patch:
@@ -93,11 +93,11 @@ public void checkRtl () {
     }
   }
 
-  public void setThemedTextColor (ViewController themeProvider) {
+  public void setThemedTextColor (ViewController<?> themeProvider) {
     setThemedTextColor(themeProvider.getHeaderTextColorId(), themeProvider);
   }
 
-  public void setThemedTextColor (int colorId, ViewController themeProvider) {
+  public void setThemedTextColor (int colorId, ViewController<?> themeProvider) {
     setTextColor(Theme.getColor(colorId));
     themeProvider.addThemeTextColorListener(this, colorId);
   }
@@ -119,7 +119,7 @@ public void setTextColors (int titleColor, int subtitleColor) {
     }
   }
 
-  public void setThemedTextColor (@ThemeColorId int titleColorId, @ThemeColorId int subtitleColorId, @Nullable ViewController themeProvider) {
+  public void setThemedTextColor (@ThemeColorId int titleColorId, @ThemeColorId int subtitleColorId, @Nullable ViewController<?> themeProvider) {
     titleView.setTextColor(Theme.getColor(titleColorId));
     subtitleView.setTextColor(Theme.getColor(subtitleColorId));
     customColors = true;

File: app/src/main/java/org/thunderdog/challegram/navigation/EditHeaderView.java
Patch:
@@ -36,13 +36,13 @@
 import me.vkryl.td.TdConstants;
 
 public class EditHeaderView extends FrameLayoutFix implements RtlCheckListener, Destroyable, StretchyHeaderView, TextWatcher, HeaderView.OffsetChangeListener {
-  private final ViewController parent;
+  private final ViewController<?> parent;
   private HeaderEditText input;
   private final ImageReceiver receiver;
 
   private final Drawable icon;
 
-  public EditHeaderView (Context context, ViewController parent) {
+  public EditHeaderView (Context context, ViewController<?> parent) {
     super(context);
     this.icon = Drawables.get(getResources(), R.drawable.baseline_camera_alt_24);
     this.parent = parent;

File: app/src/main/java/org/thunderdog/challegram/navigation/FloatingButton.java
Patch:
@@ -299,7 +299,7 @@ public void updatePosition (int height) {
     setTranslationY((1f - heightFactor) * heightDiff);
   }
 
-  public void show (ViewController c) {
+  public void show (ViewController<?> c) {
     int icon = c.getFloatingButtonId();
     int height = c.getHeaderHeight();
     float heightFactor = (float) (height - Size.getHeaderPortraitSize()) / (float) Size.getMaximumHeaderSizeDifference();

File: app/src/main/java/org/thunderdog/challegram/navigation/HeaderFilling.java
Patch:
@@ -372,7 +372,7 @@ public void draw (@NonNull Canvas c) {
       }
     }
     if (navigationController != null) {
-      ViewController current = navigationController.getCurrentStackItem();
+      ViewController<?> current = navigationController.getCurrentStackItem();
       if (current != null) {
         current.drawTransform(c, width, (int) fillingBottom);
       }
@@ -1074,7 +1074,7 @@ private void showHideAnimated (boolean show, boolean force) {
         return;
       }
 
-      ViewController c = navigationController != null ? navigationController.getCurrentStackItem() : null;
+      ViewController<?> c = navigationController != null ? navigationController.getCurrentStackItem() : null;
       boolean allowAnimation = c != null && !c.usePopupMode();
       final float toFactor = show ? 1f : 0f;
       if (allowAnimation) {

File: app/src/main/java/org/thunderdog/challegram/navigation/LockHeaderButton.java
Patch:
@@ -81,7 +81,7 @@ public void onClick (View v) {
   @Override
   public boolean onLongClick (View v) {
     NavigationController navigation = UI.getContext(getContext()).navigation();
-    ViewController current = navigation != null ? navigation.getCurrentStackItem() : null;
+    ViewController<?> current = navigation != null ? navigation.getCurrentStackItem() : null;
     if (current != null) {
       PasscodeController passcode = new PasscodeController(UI.getContext(getContext()), current.tdlib());
       passcode.setPasscodeMode(PasscodeController.MODE_UNLOCK_SETUP);

File: app/src/main/java/org/thunderdog/challegram/navigation/NavigationGestureController.java
Patch:
@@ -99,7 +99,7 @@ public boolean onDown (MotionEvent event) {
     if (startY <= 0f) //HeaderView.getSize()
       return false;
 
-    ViewController c = navigation.getCurrentStackItem();
+    ViewController<?> c = navigation.getCurrentStackItem();
 
     if (c == null || c.isIntercepted())
       return false;
@@ -112,11 +112,11 @@ public boolean onDown (MotionEvent event) {
 
   private boolean canSlideBack () {
     int stackSize = navigation.getStackSize();
-    ViewController c = navigation.getCurrentStackItem();
+    ViewController<?> c = navigation.getCurrentStackItem();
     return stackSize > 0 && c != null && c.swipeNavigationEnabled() && !c.forceFadeMode() && !c.inSelectMode() && !c.inCustomMode() && !(stackSize == 1 && c.inSearchMode());
   }
 
-  private boolean canSlideBack (ViewController c, float x, float y) {
+  private boolean canSlideBack (ViewController<?> c, float x, float y) {
     int stackSize = navigation.getStackSize();
     return stackSize > 0 && c != null && c.swipeNavigationEnabled() && !c.forceFadeMode() && !c.inSelectMode() && !c.inCustomMode() && !(stackSize == 1 && c.inSearchMode()) && c.canSlideBackFrom(navigation, x, y);
   }

File: app/src/main/java/org/thunderdog/challegram/navigation/OptionsLayout.java
Patch:
@@ -47,7 +47,7 @@
 public class OptionsLayout extends LinearLayout implements Animated {
   private final CustomTextView textView;
 
-  public OptionsLayout (Context context, ViewController parent, @Nullable ThemeDelegate forcedTheme) {
+  public OptionsLayout (Context context, ViewController<?> parent, @Nullable ThemeDelegate forcedTheme) {
     super(context);
 
     setOrientation(LinearLayout.VERTICAL);
@@ -168,7 +168,7 @@ public static TextView genOptionView (Context context, int id, CharSequence stri
     return text;
   }
 
-  public void setInfo (ViewController context, Tdlib tdlib, CharSequence info, boolean isTitle) {
+  public void setInfo (ViewController<?> context, Tdlib tdlib, CharSequence info, boolean isTitle) {
     if (!StringUtils.isEmpty(info)) {
       String str = info.toString();
       TextEntity[] parsed = TD.collectAllEntities(context, tdlib, info, false, null);

File: app/src/main/java/org/thunderdog/challegram/navigation/OverlayView.java
Patch:
@@ -52,7 +52,7 @@ public void setData (int backgroundColor, int mode) {
     barFactor = mode == OVERLAY_MODE_DEFAULT ? (Theme.getPopupOverlayAlpha()) : .6f;
     color = backgroundColor;
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-      ViewController c = UI.getCurrentStackItem();
+      ViewController<?> c = UI.getCurrentStackItem();
       changeBarColor = (c != null && !c.usePopupMode()) && color != 0x00000000 && color != 0x00ffffffff;
       if (changeBarColor) {
         window = UI.getWindow();

File: app/src/main/java/org/thunderdog/challegram/navigation/RootDrawable.java
Patch:
@@ -94,11 +94,11 @@ private int getColorId () {
       }
       final NavigationController navigation = context.navigation();
       int colorId = R.id.theme_color_filling;
-      final ViewController popup = context.getCurrentlyOpenWindowedViewController();
+      final ViewController<?> popup = context.getCurrentlyOpenWindowedViewController();
       if (popup != null) {
         colorId = popup.getRootColorId();
       } else if (navigation != null) {
-        final ViewController v = navigation.getCurrentStackItem();
+        final ViewController<?> v = navigation.getCurrentStackItem();
         if (v != null && !v.usePopupMode()) {
           colorId = v.getRootColorId();
         }

File: app/src/main/java/org/thunderdog/challegram/navigation/SimpleHeaderView.java
Patch:
@@ -51,7 +51,7 @@ public static TextView newTitle (Context context) {
     return title;
   }
 
-  public void initWithController (ViewController c) {
+  public void initWithController (ViewController<?> c) {
     this.title.setText(c.getName());
   }
 

File: app/src/main/java/org/thunderdog/challegram/player/TGPlayerController.java
Patch:
@@ -1388,7 +1388,7 @@ private Client.ResultHandler newStackHandler (final int contextId, final boolean
     };
   }
 
-  private static boolean matchesFilter (InlineResult result, int contentType) {
+  private static boolean matchesFilter (InlineResult<?> result, @TdApi.MessageContent.Constructors int contentType) {
     switch (result.getType()) {
       case InlineResult.TYPE_AUDIO:
         return contentType == TdApi.MessageAudio.CONSTRUCTOR;

File: app/src/main/java/org/thunderdog/challegram/service/FirebaseListenerService.java
Patch:
@@ -249,12 +249,12 @@ public static Object wrap (Object o) {
       }
       try {
         if (o instanceof Collection) {
-          return new JSONArray((Collection) o);
+          return new JSONArray((Collection<?>) o);
         } else if (o.getClass().isArray()) {
           return new JSONArray(Arrays.asList((Object[]) o));
         }
         if (o instanceof Map) {
-          return new JSONObject((Map) o);
+          return new JSONObject((Map<?, ?>) o);
         }
         if (o instanceof Boolean ||
           o instanceof Byte ||

File: app/src/main/java/org/thunderdog/challegram/support/ViewSupport.java
Patch:
@@ -46,7 +46,7 @@ public static void setThemedBackground (View view, @ThemeColorId int colorId) {
     // view.setBackgroundColor(0);
   }
 
-  public static FillingDrawable setThemedBackground (View view, @ThemeColorId int colorId, @Nullable ViewController themeProvider) {
+  public static FillingDrawable setThemedBackground (View view, @ThemeColorId int colorId, @Nullable ViewController<?> themeProvider) {
     FillingDrawable result = null;
     if (view != null) {
       Drawable existingBackground = view.getBackground();

File: app/src/main/java/org/thunderdog/challegram/telegram/LiveLocationManager.java
Patch:
@@ -252,7 +252,7 @@ private void dispatchLocation (TdApi.Location location, int heading) {
   }
 
   @Override
-  public void onFullnessStateChanged (ReferenceList list, boolean isFull) {
+  public void onFullnessStateChanged (ReferenceList<?> list, boolean isFull) {
     synchronized (this) {
       if (this.isActive != isFull) {
         this.isActive = isFull;

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibNotificationManager.java
Patch:
@@ -32,7 +32,6 @@
 import org.thunderdog.challegram.helper.Recorder;
 import org.thunderdog.challegram.navigation.ViewController;
 import org.thunderdog.challegram.sync.SyncAdapter;
-import me.vkryl.leveldb.LevelDB;
 import org.thunderdog.challegram.tool.UI;
 import org.thunderdog.challegram.ui.MainController;
 import org.thunderdog.challegram.ui.MessagesController;
@@ -48,6 +47,7 @@
 
 import me.vkryl.core.StringUtils;
 import me.vkryl.core.unit.BitwiseUtils;
+import me.vkryl.leveldb.LevelDB;
 import me.vkryl.td.ChatId;
 
 /**
@@ -1895,7 +1895,7 @@ private void rebuildNotification () {
   void onUpdateNewMessage (TdApi.UpdateNewMessage update) {
     if (update.message.isOutgoing || update.message.sendingState != null)
       return;
-    ViewController c = UI.getCurrentStackItem();
+    ViewController<?> c = UI.getCurrentStackItem();
     if (c instanceof MessagesController && c.isSameTdlib(tdlib)) {
       long activeChatId = ((MessagesController) c).getActiveChatId();
       if (activeChatId != 0 && update.message.chatId == activeChatId && tdlib.chatNotificationsEnabled(activeChatId)) {
@@ -1910,7 +1910,7 @@ void onUpdateNewMessage (TdApi.UpdateNewMessage update) {
   @TdlibThread
   void onUpdateMessageSendSucceeded (TdApi.UpdateMessageSendSucceeded update) {
     TdApi.Message sentMessage = update.message;
-    ViewController c = UI.getCurrentStackItem();
+    ViewController<?> c = UI.getCurrentStackItem();
     if (c != null && !c.isPaused() && (c instanceof MessagesController && ((MessagesController) c).compareChat(sentMessage.chatId)) || (c instanceof MainController)) {
       switch (sentMessage.content.getConstructor()) {
         case TdApi.MessageScreenshotTaken.CONSTRUCTOR:

File: app/src/main/java/org/thunderdog/challegram/telegram/TdlibStatusManager.java
Patch:
@@ -340,9 +340,9 @@ public static class Helper implements Invalidator.Target, TdlibStatusManager.Cha
     private final Tdlib tdlib;
     private final BaseActivity context;
     private final HelperTarget target;
-    private final ViewController parent;
+    private final ViewController<?> parent;
 
-    public Helper (@NonNull BaseActivity context, @NonNull Tdlib tdlib, HelperTarget target, @Nullable ViewController parent) {
+    public Helper (@NonNull BaseActivity context, @NonNull Tdlib tdlib, HelperTarget target, @Nullable ViewController<?> parent) {
       if (tdlib == null)
         throw new IllegalArgumentException();
       if (context == null)
@@ -440,7 +440,7 @@ private void setLooping (boolean isLooping) {
     }
 
     @Override
-    public ViewController getTargetParent (Invalidator context) {
+    public ViewController<?> getTargetParent (Invalidator context) {
       return this.parent;
     }
 

File: app/src/main/java/org/thunderdog/challegram/theme/TGBackground.java
Patch:
@@ -791,11 +791,12 @@ private static int getPatternColor (TdApi.BackgroundFill fill) {
         TdApi.BackgroundFillGradient gradient = (TdApi.BackgroundFillGradient) fill;
         return getPatternColor(ColorUtils.fromToArgb(ColorUtils.color(255, gradient.topColor), ColorUtils.color(255, gradient.bottomColor), .5f));
       }
+      
     }
     throw new IllegalArgumentException("fill: " + fill);
   }
 
-  private static int getPatternColor(int color) {
+  private static int getPatternColor (int color) {
     float[] hsb = RGBtoHSB(Color.red(color), Color.green(color), Color.blue(color));
     if (hsb[1] > 0.0f || (hsb[2] < 1.0f && hsb[2] > 0.0f)) {
       hsb[1] = Math.min(1.0f, hsb[1] + 0.05f + 0.1f * (1.0f - hsb[1]));
@@ -808,7 +809,7 @@ private static int getPatternColor(int color) {
     return HSBtoRGB(hsb[0], hsb[1], hsb[2]) & 0x66ffffff;
   }
 
-  private static int getPatternSideColor(int color) {
+  private static int getPatternSideColor (int color) {
     float[] hsb = RGBtoHSB(Color.red(color), Color.green(color), Color.blue(color));
     hsb[1] = Math.min(1.0f, hsb[1] + 0.05f);
     if (hsb[2] > 0.5f) {

File: app/src/main/java/org/thunderdog/challegram/theme/Theme.java
Patch:
@@ -699,7 +699,7 @@ private static Drawable fillingSimpleSelector (@ThemeColorId int backgroundColor
 
   // Transparent drawable
 
-  public static Drawable filteredDrawable (@DrawableRes int res, @ThemeColorId int colorId, @Nullable ViewController themeProvider) {
+  public static Drawable filteredDrawable (@DrawableRes int res, @ThemeColorId int colorId, @Nullable ViewController<?> themeProvider) {
     Drawable drawable = ViewSupport.getDrawableFilter(UI.getAppContext(), res, new PorterDuffColorFilter(Theme.getColor(colorId), PorterDuff.Mode.MULTIPLY));
     if (themeProvider != null) {
       themeProvider.addThemeSpecialFilterListener(drawable, colorId);

File: app/src/main/java/org/thunderdog/challegram/tool/Strings.java
Patch:
@@ -188,7 +188,7 @@ public static String wrapLtr (String rtl) {
     return elems[(int) (Math.random() * (double) (elems.length - 1))];
   }*/
 
-  public static String join (CharSequence delimiter, Iterable tokens) {
+  public static String join (CharSequence delimiter, Iterable<?> tokens) {
     StringBuilder sb = new StringBuilder();
     boolean firstTime = true;
     for (Object token : tokens) {

File: app/src/main/java/org/thunderdog/challegram/tool/Views.java
Patch:
@@ -146,7 +146,7 @@ public static void attachDetach (ViewGroup group, boolean attach) {
     }
   }
 
-  public static ImageView newImageButton (Context context, @DrawableRes int icon, @ThemeColorId int colorId, @Nullable ViewController themeProvider) {
+  public static ImageView newImageButton (Context context, @DrawableRes int icon, @ThemeColorId int colorId, @Nullable ViewController<?> themeProvider) {
     ImageView imageView = new ImageView(context);
     imageView.setScaleType(ImageView.ScaleType.CENTER);
     imageView.setImageResource(icon);

File: app/src/main/java/org/thunderdog/challegram/ui/ChatsController.java
Patch:
@@ -1942,7 +1942,7 @@ private void onClick (final TdApi.Chat chat) {
   }
 
   @Override
-  public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.ForceTouchContext context, IntList ids, IntList icons, StringList strings, ViewController target) {
+  public ForceTouchView.ActionListener onCreateActions (View v, ForceTouchView.ForceTouchContext context, IntList ids, IntList icons, StringList strings, ViewController<?> target) {
     TGChat chat = v instanceof ChatView ? ((ChatView) v).getChat() : null;
 
     if (chat != null && chat.isArchive()) {

File: app/src/main/java/org/thunderdog/challegram/ui/CreateGroupController.java
Patch:
@@ -48,7 +48,7 @@
 import me.vkryl.android.widget.FrameLayoutFix;
 import me.vkryl.core.ArrayUtils;
 
-public class CreateGroupController extends ViewController implements EditHeaderView.ReadyCallback, OptionDelegate, Client.ResultHandler, Unlockable, ActivityResultHandler,
+public class CreateGroupController extends ViewController<Void> implements EditHeaderView.ReadyCallback, OptionDelegate, Client.ResultHandler, Unlockable, ActivityResultHandler,
   TdlibCache.UserDataChangeListener, TdlibCache.UserStatusChangeListener {
   private ArrayList<TGUser> members;
 

File: app/src/main/java/org/thunderdog/challegram/ui/EditNameController.java
Patch:
@@ -185,7 +185,7 @@ protected void setChatData (ListItem item, int position, BetterChatView chatView
   public void onFocus () {
     super.onFocus();
     if (mode == MODE_SIGNUP) {
-      ViewController c = previousStackItem();
+      ViewController<?> c = previousStackItem();
       destroyStackItemById(R.id.controller_code);
       if (UI.inTestMode()) {
         updateDoneState();

File: app/src/main/java/org/thunderdog/challegram/ui/EditProxyController.java
Patch:
@@ -328,7 +328,7 @@ private void addProxy (String server, int port, final TdApi.ProxyType type) {
           int proxyId = getArgumentsStrict().existingProxy != null ? getArgumentsStrict().existingProxy.id : Settings.PROXY_ID_NONE;
           Settings.instance().addOrUpdateProxy(server, port, type, null, true, proxyId);
           if (navigationController != null) {
-            ViewController c = navigationController.getPreviousStackItem();
+            ViewController<?> c = navigationController.getPreviousStackItem();
             if (c != null && c.getId() != R.id.controller_proxyList) {
               navigationController.getStack().insertBack(new SettingsProxyController(context, tdlib));
             }

File: app/src/main/java/org/thunderdog/challegram/ui/EditRightsController.java
Patch:
@@ -352,7 +352,7 @@ private void performRequest (boolean force) {
           setStackLocked(false);
           setDoneInProgress(false);
           if (success) {
-            ViewController c = previousStackItem();
+            ViewController<?> c = previousStackItem();
             if (c instanceof ContactsController) {
               destroyStackItemAt(stackSize() - 2);
             }

File: app/src/main/java/org/thunderdog/challegram/ui/EmojiMediaListController.java
Patch:
@@ -336,7 +336,7 @@ public void onGifLongPressed (View view, TdApi.Animation animation) {
   }
 
   private void removeGif (final TdApi.Animation animation) {
-    ViewController c = context().navigation().getCurrentStackItem();
+    ViewController<?> c = context().navigation().getCurrentStackItem();
     if (c != null) {
       c.showOptions(Lang.getString(R.string.RemoveGifConfirm), new int[]{R.id.btn_deleteGif, R.id.btn_cancel}, new String[]{Lang.getString(R.string.Delete), Lang.getString(R.string.Cancel)}, new int[]{ViewController.OPTION_COLOR_RED, ViewController.OPTION_COLOR_NORMAL}, new int[] {R.drawable.baseline_delete_24, R.drawable.baseline_cancel_24}, (itemView, id) -> {
         switch (id) {

File: app/src/main/java/org/thunderdog/challegram/ui/HashtagChatController.java
Patch:
@@ -70,7 +70,7 @@ protected int getPagerItemCount () {
 
   @Override
   public View getViewForApplyingOffsets () {
-    ViewController c = getCachedControllerForPosition(0);
+    ViewController<?> c = getCachedControllerForPosition(0);
     return c != null ? c.getViewForApplyingOffsets() : null;
   }
 
@@ -149,7 +149,7 @@ public void onBlur () {
   }
 
   @Override
-  protected ViewController onCreatePagerItemForPosition (Context context, int position) {
+  protected ViewController<?> onCreatePagerItemForPosition (Context context, int position) {
     Arguments args = getArgumentsStrict();
     switch (position) {
       case 0: {

File: app/src/main/java/org/thunderdog/challegram/ui/IntroController.java
Patch:
@@ -91,7 +91,7 @@
  */
 
 @SuppressWarnings("JniMissingFunction")
-public class IntroController extends ViewController implements GLSurfaceView.EGLConfigChooser, GLSurfaceView.Renderer, ViewPager.OnPageChangeListener, Runnable, View.OnClickListener, View.OnLongClickListener, TdlibOptionListener, ConnectionListener, GlobalAccountListener {
+public class IntroController extends ViewController<Void> implements GLSurfaceView.EGLConfigChooser, GLSurfaceView.Renderer, ViewPager.OnPageChangeListener, Runnable, View.OnClickListener, View.OnLongClickListener, TdlibOptionListener, ConnectionListener, GlobalAccountListener {
   public IntroController (Context context) {
     super(context, null);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/MapController.java
Patch:
@@ -657,7 +657,7 @@ public void destroy () {
       tdlib.listeners().unsubscribeFromMessageUpdates(args.chatId, this);
       tdlib.context().liveLocation().removeLocationListener(this);
     }
-    for (LocationPoint point : pointsOfInterest) {
+    for (LocationPoint<?> point : pointsOfInterest) {
       if (point.data instanceof Destroyable) {
         ((Destroyable) point.data).performDestroy();
       }

File: app/src/main/java/org/thunderdog/challegram/ui/PhoneController.java
Patch:
@@ -62,7 +62,7 @@
  * Author: default
  */
 
-public class PhoneController extends EditBaseController implements SettingsAdapter.TextChangeListener, MaterialEditTextGroup.FocusListener, MaterialEditTextGroup.TextChangeListener, View.OnClickListener, Menu {
+public class PhoneController extends EditBaseController<Void> implements SettingsAdapter.TextChangeListener, MaterialEditTextGroup.FocusListener, MaterialEditTextGroup.TextChangeListener, View.OnClickListener, Menu {
 
   public static final int MODE_LOGIN = 0;
   public static final int MODE_CHANGE_NUMBER = 1;

File: app/src/main/java/org/thunderdog/challegram/ui/PollResultsController.java
Patch:
@@ -99,7 +99,7 @@ private static class ListCache implements UserListManager.ChangeListener {
     private final UserListManager voters;
     private final SettingsAdapter adapter;
 
-    public ListCache (ViewController context, long chatId, long messageId, int optionId) {
+    public ListCache (ViewController<?> context, long chatId, long messageId, int optionId) {
       this.tdlib = context.tdlib();
       this.adapter = new SettingsAdapter(context) {
         @Override

File: app/src/main/java/org/thunderdog/challegram/ui/RecyclerViewController.java
Patch:
@@ -136,7 +136,7 @@ public int scrollVerticallyBy(int dx, RecyclerView.Recycler recycler, RecyclerVi
   protected final void restorePersistentScrollPosition () {
     if (savedScrollPosition >= 0 && recyclerView != null) {
       LinearLayoutManager manager = (LinearLayoutManager) recyclerView.getLayoutManager();
-      RecyclerView.Adapter adapter = recyclerView.getAdapter();
+      RecyclerView.Adapter<?> adapter = recyclerView.getAdapter();
       if (manager != null && adapter != null && savedScrollPosition>= 0 && savedScrollPosition < adapter.getItemCount()) {
         manager.scrollToPositionWithOffset(savedScrollPosition, savedScrollOffset);
         savedScrollPosition = -1;

File: app/src/main/java/org/thunderdog/challegram/ui/SettingHolder.java
Patch:
@@ -105,7 +105,7 @@ public static int measureHeightForType (ListItem item) {
     switch (viewType) {
       case ListItem.TYPE_CUSTOM_INLINE: {
         Object data = item.getData();
-        return data != null && data instanceof InlineResult ? ((InlineResult) data).getHeight() : 0;
+        return data != null && data instanceof InlineResult ? ((InlineResult<?>) data).getHeight() : 0;
       }
       case ListItem.TYPE_PADDING: {
         return item.getHeight();
@@ -479,7 +479,7 @@ public static SettingHolder create (final Context context, final Tdlib tdlib, fi
                                       final SettingsAdapter adapter,
                                       final View.OnClickListener onClickListener,
                                       final View.OnLongClickListener onLongClickListener,
-                                      final @Nullable ViewController themeProvider,
+                                      final @Nullable ViewController<?> themeProvider,
                                       final RecyclerView.OnScrollListener innerOnScrollListener,
                                       final ClickHelper.Delegate clickDelegate) {
     switch (viewType) {
@@ -2201,7 +2201,7 @@ protected boolean accept (char c) {
 
   public static final boolean COLOR_PICKER_PALETTE_BOTTOM = true;
 
-  public static TextView createDescription (Context context, int viewType, @ThemeColorId int textColorId, View.OnClickListener onClickListener, @Nullable ViewController themeProvider) {
+  public static TextView createDescription (Context context, int viewType, @ThemeColorId int textColorId, View.OnClickListener onClickListener, @Nullable ViewController<?> themeProvider) {
     TextView textView = new NoScrollTextView(context);
     if (viewType == ListItem.TYPE_DESCRIPTION_CENTERED) {
       textView.setGravity(Gravity.CENTER);

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsController.java
Patch:
@@ -73,7 +73,7 @@
  * Author: default
  */
 
-public class SettingsController extends ViewController implements
+public class SettingsController extends ViewController<Void> implements
   View.OnClickListener, ComplexHeaderView.Callback,
   Menu, MoreDelegate, OptionDelegate,
   TdlibCache.MyUserDataChangeListener, ConnectionListener, StickersListener, MediaLayout.MediaGalleryCallback,

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsDataController.java
Patch:
@@ -382,7 +382,7 @@ private void setNetworkStats (TGNetworkStats stats) {
       adapter.updateValuedSettingById(R.id.btn_dataUsageRoaming);
       adapter.updateValuedSettingById(R.id.btn_resetNetworkStats);
 
-      ViewController c = previousStackItem();
+      ViewController<?> c = previousStackItem();
       if (c != null) {
         ((SettingsDataController) c).setNetworkStats(stats);
       }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsLanguageController.java
Patch:
@@ -43,7 +43,7 @@
  * Date: 8/1/18
  * Author: default
  */
-public class SettingsLanguageController extends RecyclerViewController implements View.OnClickListener, LanguageController.Delegate, View.OnLongClickListener {
+public class SettingsLanguageController extends RecyclerViewController<Void> implements View.OnClickListener, LanguageController.Delegate, View.OnLongClickListener {
   public SettingsLanguageController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsLogOutController.java
Patch:
@@ -18,7 +18,7 @@
  * Date: 19/02/2019
  * Author: default
  */
-public class SettingsLogOutController extends RecyclerViewController implements View.OnClickListener {
+public class SettingsLogOutController extends RecyclerViewController<Void> implements View.OnClickListener {
   public SettingsLogOutController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsPhoneController.java
Patch:
@@ -15,7 +15,7 @@
  * Author: default
  */
 
-public class SettingsPhoneController extends RecyclerViewController implements View.OnClickListener {
+public class SettingsPhoneController extends RecyclerViewController<Void> implements View.OnClickListener {
   public SettingsPhoneController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/SettingsProxyController.java
Patch:
@@ -43,7 +43,7 @@
  * Date: 5/6/18
  * Author: default
  */
-public class SettingsProxyController extends RecyclerViewController implements View.OnLongClickListener, View.OnClickListener, Settings.ProxyChangeListener, ConnectionListener, MoreDelegate {
+public class SettingsProxyController extends RecyclerViewController<Void> implements View.OnLongClickListener, View.OnClickListener, Settings.ProxyChangeListener, ConnectionListener, MoreDelegate {
   public SettingsProxyController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/ShareController.java
Patch:
@@ -1323,7 +1323,7 @@ protected void setChatData (ListItem item, VerticalChatView chatView) {
   }
 
   @Override
-  public ForceTouchView.ActionListener onCreateActions (final View v, ForceTouchView.ForceTouchContext context, IntList ids, IntList icons, StringList strings, ViewController target) {
+  public ForceTouchView.ActionListener onCreateActions (final View v, ForceTouchView.ForceTouchContext context, IntList ids, IntList icons, StringList strings, ViewController<?> target) {
     final ListItem item = (ListItem) v.getTag();
     final TGFoundChat chat = (TGFoundChat) item.getData();
 
@@ -2936,8 +2936,8 @@ private void sendMessages (boolean forceGoToChat, boolean isSingleTap, boolean f
     if (isSingleTap) {
       UI.showToast(R.string.DoneSave, Toast.LENGTH_SHORT);
     } else if ((args.needOpenChat || forceGoToChat) && selectedChats.size() == 1) {
-      ViewController c = context().navigation().getCurrentStackItem();
-      if (!(c != null && c instanceof MessagesController && ((MessagesController) c).compareChat(selectedChats.valueAt(0).getAnyId(), 0))) {
+      ViewController<?> c = context().navigation().getCurrentStackItem();
+      if (!(c instanceof MessagesController && ((MessagesController) c).compareChat(selectedChats.valueAt(0).getAnyId(), 0))) {
         UI.post(() -> tdlib.ui().openChat(ShareController.this, selectedChats.valueAt(0).getAnyId(), null), 250);
       }
     } else {

File: app/src/main/java/org/thunderdog/challegram/ui/SharedRestrictionController.java
Patch:
@@ -16,7 +16,7 @@
  * Date: 2019-09-19
  * Author: default
  */
-public class SharedRestrictionController extends SharedBaseController<InlineResult> {
+public class SharedRestrictionController extends SharedBaseController<InlineResult<?>> {
   public SharedRestrictionController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }
@@ -49,7 +49,7 @@ protected boolean isAlwaysEmpty () {
   }
 
   @Override
-  protected CharSequence buildTotalCount (ArrayList<InlineResult> data) {
+  protected CharSequence buildTotalCount (ArrayList<InlineResult<?>> data) {
     return null;
   }
 
@@ -59,7 +59,7 @@ public CharSequence getName () {
   }
 
   @Override
-  protected InlineResult parseObject (TdApi.Object object) {
+  protected InlineResult<?> parseObject (TdApi.Object object) {
     return null;
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/SimpleViewPagerController.java
Patch:
@@ -18,11 +18,11 @@
  * Author: default
  */
 public class SimpleViewPagerController extends ViewPagerController<Object> {
-  private final ViewController[] controllers;
+  private final ViewController<?>[] controllers;
   private final @Nullable String[] sections;
   private final boolean isWhite;
 
-  public SimpleViewPagerController (Context context, Tdlib tdlib, ViewController[] controllers, @Nullable String[] sections, boolean isWhite) {
+  public SimpleViewPagerController (Context context, Tdlib tdlib, ViewController<?>[] controllers, @Nullable String[] sections, boolean isWhite) {
     super(context, tdlib);
     this.controllers = controllers;
     if (sections != null && sections.length != controllers.length) {
@@ -60,7 +60,7 @@ protected void onCreateView (Context context, FrameLayoutFix contentView, ViewPa
   }
 
   @Override
-  protected ViewController onCreatePagerItemForPosition (Context context, int position) {
+  protected ViewController<?> onCreatePagerItemForPosition (Context context, int position) {
     return controllers[position];
   }
 

File: app/src/main/java/org/thunderdog/challegram/ui/StickersListController.java
Patch:
@@ -547,13 +547,13 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
   }
 
   private static class StickersAdapter extends RecyclerView.Adapter<StickerHolder> {
-    private final ViewController context;
+    private final ViewController<?> context;
     private final StickerSmallView.StickerMovementCallback callback;
     private final ArrayList<TGStickerObj> stickers;
     private final OffsetProvider provider;
     private final RecyclerView parent;
 
-    public StickersAdapter (ViewController context, RecyclerView parent, StickerSmallView.StickerMovementCallback callback, OffsetProvider provider) {
+    public StickersAdapter (ViewController<?> context, RecyclerView parent, StickerSmallView.StickerMovementCallback callback, OffsetProvider provider) {
       this.context = context;
       this.parent = parent;
       this.callback = callback;

File: app/src/main/java/org/thunderdog/challegram/ui/StickersTrendingController.java
Patch:
@@ -35,7 +35,7 @@
  * Author: default
  */
 
-public class StickersTrendingController extends ViewController implements StickerSmallView.StickerMovementCallback, Client.ResultHandler, TGStickerObj.DataProvider, StickersListener, TGStickerSetInfo.ViewCallback {
+public class StickersTrendingController extends ViewController<Void> implements StickerSmallView.StickerMovementCallback, Client.ResultHandler, TGStickerObj.DataProvider, StickersListener, TGStickerSetInfo.ViewCallback {
   public StickersTrendingController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/TelegramFaqController.java
Patch:
@@ -14,7 +14,7 @@
  * Author: default
  */
 
-public class TelegramFaqController extends WebkitController {
+public class TelegramFaqController extends WebkitController<Void> {
   public TelegramFaqController (Context context, Tdlib tdlib) {
     super(context, tdlib);
   }

File: app/src/main/java/org/thunderdog/challegram/ui/TextController.java
Patch:
@@ -475,7 +475,7 @@ private static class LineCell {
     private final int horizontalPadding, verticalPadding;
     private final MultipleViewProvider holder = new MultipleViewProvider();
 
-    public LineCell (ViewController context, int id, String line) {
+    public LineCell (ViewController<?> context, int id, String line) {
       this.horizontalPadding = Screen.dp(6f);
       this.verticalPadding = Screen.dp(3f);
 

File: app/src/main/java/org/thunderdog/challegram/ui/ThemeListController.java
Patch:
@@ -340,7 +340,7 @@ public View getCustomHeaderCell () {
 
   @Nullable
   private ThemeController findThemeController () {
-    ViewController c = getParentOrSelf();
+    ViewController<?> c = getParentOrSelf();
     return c instanceof ThemeController ? (ThemeController) c : null;
   }
 
@@ -1184,7 +1184,7 @@ public void onRemove (RecyclerView.ViewHolder viewHolder) {
   }
 
   @Override
-  public void setParentWrapper (@Nullable ViewController parentWrapper) {
+  public void setParentWrapper (@Nullable ViewController<?> parentWrapper) {
     super.setParentWrapper(parentWrapper);
     if (adapter != null)
       adapter.setLockFocusOn(getParentOrSelf(), false);

File: app/src/main/java/org/thunderdog/challegram/ui/camera/CameraRootLayout.java
Patch:
@@ -16,13 +16,13 @@
  */
 
 class CameraRootLayout extends FrameLayoutFix {
-  private ViewController controller;
+  private ViewController<?> controller;
 
   public CameraRootLayout (@NonNull Context context) {
     super(context);
   }
 
-  public void setController (ViewController controller) {
+  public void setController (ViewController<?> controller) {
     this.controller = controller;
   }
 

File: app/src/main/java/org/thunderdog/challegram/unsorted/Test.java
Patch:
@@ -71,7 +71,7 @@ public static void execute () {
   public static TdApi.ChatAction testAction;
 
   public static void onClick (final BaseActivity context) {
-    ViewController c = context.navigation().getCurrentStackItem();
+    ViewController<?> c = context.navigation().getCurrentStackItem();
     if (c == null) {
       return;
     }

File: app/src/main/java/org/thunderdog/challegram/util/text/FormattedText.java
Patch:
@@ -54,7 +54,7 @@ public static int requestIcons (TextEntity[] entities, ComplexReceiver receiver,
     }
     return iconIndex;
   }
-  public static FormattedText parseRichText (ViewController context, @Nullable TdApi.RichText richText, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  public static FormattedText parseRichText (ViewController<?> context, @Nullable TdApi.RichText richText, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     if (richText == null)
       return null;
     StringBuilder out = new StringBuilder();
@@ -84,7 +84,7 @@ public static FormattedText parseRichText (ViewController context, @Nullable TdA
 
     return new FormattedText(out.toString(), parsed);
   }
-  private static void parseRichText (ViewController context, TdApi.RichText in, StringBuilder out, ArrayList<TextEntityCustom> entities, int[] offset, int flags, int linkOffset, int[] linkLength, int linkType, String link, boolean linkCached, @Nullable String referenceAnchorName, String copyLink, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  private static void parseRichText (ViewController<?> context, TdApi.RichText in, StringBuilder out, ArrayList<TextEntityCustom> entities, int[] offset, int flags, int linkOffset, int[] linkLength, int linkType, String link, boolean linkCached, @Nullable String referenceAnchorName, String copyLink, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     switch (in.getConstructor()) {
       case TdApi.RichTextPlain.CONSTRUCTOR: {
         final String text = ((TdApi.RichTextPlain) in).text;

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntity.java
Patch:
@@ -133,10 +133,10 @@ final TextPaint getTextPaint (TextStyleProvider textStyleProvider, boolean force
   public abstract TextColorSet getSpecialColorSet (TextColorSet defaultColorSet);
 
   @Nullable
-  protected final ViewController findRoot (View view) {
+  protected final ViewController<?> findRoot (View view) {
     if (view == null)
       return null;
-    ViewController c = ViewController.findRoot(view);
+    ViewController<?> c = ViewController.findRoot(view);
     if (c != null)
       return c;
     return UI.getContext(view.getContext()).navigation().getCurrentStackItem();
@@ -150,7 +150,7 @@ public static TextEntity[] valueOf (Tdlib tdlib, TdApi.FormattedText text, Tdlib
     return valueOf(tdlib, text.text, text.entities, openParameters);
   }
 
-  public static TextEntity[] valueOf (ViewController context, Tdlib tdlib, CharSequence text, TdlibUi.UrlOpenParameters openParameters) {
+  public static TextEntity[] valueOf (ViewController<?> context, Tdlib tdlib, CharSequence text, TdlibUi.UrlOpenParameters openParameters) {
     if (StringUtils.isEmpty(text)) {
       return null;
     }

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntityCustom.java
Patch:
@@ -51,7 +51,7 @@ public class TextEntityCustom extends TextEntity {
   public static final int LINK_TYPE_ANCHOR = 4;
   public static final int LINK_TYPE_REFERENCE = 5;
 
-  private final ViewController context; // TODO move to TextEntity
+  private final ViewController<?> context; // TODO move to TextEntity
 
   private final int flags;
 
@@ -69,7 +69,7 @@ public class TextEntityCustom extends TextEntity {
   private TextIcon icon;
   private String copyLink;
 
-  public TextEntityCustom (@Nullable ViewController context, @Nullable Tdlib tdlib, String in, int offset, int end, int flags, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  public TextEntityCustom (@Nullable ViewController<?> context, @Nullable Tdlib tdlib, String in, int offset, int end, int flags, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     super(tdlib, offset, end, (flags & FLAG_BOLD) != 0 && Text.needFakeBold(in), openParameters);
     this.context = context;
     this.flags = flags;
@@ -313,7 +313,7 @@ public void performClick (View view, Text text, TextPart part, @Nullable Text.Cl
 
   @Override
   public boolean performLongPress (final View view, final Text text, final TextPart part, boolean allowShare, Text.ClickCallback clickCallback) {
-    final ViewController context = findRoot(view);
+    final ViewController<?> context = findRoot(view);
     if (context == null) {
       Log.v("performLongPress ignored, because ancestor not found");
       return false;

File: app/src/main/java/org/thunderdog/challegram/util/text/TextEntityMessage.java
Patch:
@@ -245,7 +245,7 @@ public boolean hasAnchor (String anchor) {
 
   @Override
   public void performClick (View view, Text text, TextPart part, @Nullable Text.ClickCallback callback) {
-    final ViewController context = findRoot(view);
+    final ViewController<?> context = findRoot(view);
     if (context == null) {
       Log.v("performClick ignored, because ancestor not found");
       return;
@@ -325,7 +325,7 @@ public void performClick (View view, Text text, TextPart part, @Nullable Text.Cl
         String hashtag = Td.substring(text.getText(), clickableEntity);
         if (callback == null || !callback.onHashtagClick(hashtag)) {
           final long chatId = context.getChatId();
-          ViewController check = context.getParentOrSelf();
+          ViewController<?> check = context.getParentOrSelf();
           boolean isViewingSameHashtag;
           if (check instanceof HashtagChatController) {
             HashtagChatController.Arguments args = ((HashtagChatController) check).getArgumentsStrict();
@@ -356,7 +356,7 @@ public void performClick (View view, Text text, TextPart part, @Nullable Text.Cl
 
   @Override
   public boolean performLongPress (final View view, final Text text, final TextPart part, boolean allowShare, final Text.ClickCallback clickCallback) {
-    final ViewController context = findRoot(view);
+    final ViewController<?> context = findRoot(view);
     if (context == null) {
       Log.v("performLongPress ignored, because ancestor not found");
       return false;

File: app/src/main/java/org/thunderdog/challegram/util/text/TextWrapper.java
Patch:
@@ -319,7 +319,7 @@ public boolean performLongPress (View view) {
     return text != null && text.performLongPress(view);
   }
 
-  public static TextWrapper parseRichText (ViewController context, @Nullable Text.ClickCallback callback, TdApi.RichText richText, TextStyleProvider textStyleProvider, @NonNull TextColorSet colorTheme, @Nullable TdlibUi.UrlOpenParameters openParameters) {
+  public static TextWrapper parseRichText (ViewController<?> context, @Nullable Text.ClickCallback callback, TdApi.RichText richText, TextStyleProvider textStyleProvider, @NonNull TextColorSet colorTheme, @Nullable TdlibUi.UrlOpenParameters openParameters) {
     FormattedText formattedText = FormattedText.parseRichText(context, richText, openParameters);
     return new TextWrapper(formattedText.text, textStyleProvider, colorTheme, formattedText.entities)
       .addTextFlags(Text.FLAG_CUSTOM_LONG_PRESS)

File: app/src/main/java/org/thunderdog/challegram/v/HeaderEditText.java
Patch:
@@ -78,7 +78,7 @@ private void init () {
     }
   }
 
-  public static HeaderEditText create (@NonNull ViewGroup parent, boolean light, @Nullable ViewController themeProvider) {
+  public static HeaderEditText create (@NonNull ViewGroup parent, boolean light, @Nullable ViewController<?> themeProvider) {
     HeaderEditText editText = (HeaderEditText) Views.inflate(parent.getContext(), light ? R.layout.input_header_light : R.layout.input_header, parent);
     editText.setTextColor(Theme.getColor(R.id.theme_color_headerText));
     editText.setHintTextColor(ColorUtils.alphaColor(Theme.HEADER_TEXT_DECENT_ALPHA, Theme.getColor(R.id.theme_color_headerText)));

File: app/src/main/java/org/thunderdog/challegram/voip/gui/CallSettings.java
Patch:
@@ -65,7 +65,7 @@ public boolean isSpeakerModeEnabled () {
     return speakerMode != SPEAKER_MODE_NONE;
   }
 
-  public void toggleSpeakerMode (ViewController controller) {
+  public void toggleSpeakerMode (ViewController<?> controller) {
     TGCallService voip = TGCallService.currentInstance();
     if (voip == null) {
       return;

File: app/src/main/java/org/thunderdog/challegram/widget/DoubleTextView.java
Patch:
@@ -159,7 +159,7 @@ protected void onMeasure (int widthMeasureSpec, int heightMeasureSpec) {
     }
   }
 
-  public void addThemeListeners (@Nullable ViewController themeProvider) {
+  public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       themeProvider.addThemeTextAccentColorListener(titleView);
       themeProvider.addThemeTextDecentColorListener(subtitleView);

File: app/src/main/java/org/thunderdog/challegram/widget/FileProgressComponent.java
Patch:
@@ -415,14 +415,14 @@ public void onTrackPlayProgress (Tdlib tdlib, long chatId, long messageId, int f
   private boolean openFile () {
     if (mimeType == null)
       return false;
-    ViewController c = UI.getCurrentStackItem(context);
+    ViewController<?> c = UI.getCurrentStackItem(context);
     if (c == null)
       return false;
     Runnable after = () -> U.openFile(c, U.getFileName(file.local.path), new File(file.local.path), mimeType, 0);
     return openFile(c, after);
   }
 
-  public boolean openFile (ViewController c, Runnable defaultOpen) {
+  public boolean openFile (ViewController<?> c, Runnable defaultOpen) {
     if (file != null && fileType == TdlibFilesManager.DOWNLOAD_FLAG_FILE) {
       if (c != null && c.tdlib() == tdlib) {
         if ((flags & FLAG_THEME) != 0) {

File: app/src/main/java/org/thunderdog/challegram/widget/FillingDecoration.java
Patch:
@@ -26,7 +26,7 @@ public class FillingDecoration extends RecyclerView.ItemDecoration {
 
   private @ThemeColorId int fillingColorId = R.id.theme_color_filling;
 
-  public FillingDecoration (RecyclerView view, @Nullable ViewController themeProvider) {
+  public FillingDecoration (RecyclerView view, @Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       themeProvider.addThemeInvalidateListener(view);
     }

File: app/src/main/java/org/thunderdog/challegram/widget/ForceTouchView.java
Patch:
@@ -839,9 +839,9 @@ public View getSourceView () {
       return sourceView;
     }
 
-    private ViewController boundController;
+    private ViewController<?> boundController;
 
-    public ForceTouchContext (Tdlib tdlib, View sourceView, View contentView, @Nullable ViewController controller) {
+    public ForceTouchContext (Tdlib tdlib, View sourceView, View contentView, @Nullable ViewController<?> controller) {
       this.tdlib = tdlib;
       this.sourceView = sourceView;
       this.contentView = contentView;

File: app/src/main/java/org/thunderdog/challegram/widget/ListInfoView.java
Patch:
@@ -56,7 +56,7 @@ public ListInfoView (Context context) {
     addView(textView, new LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, Gravity.CENTER));
   }
 
-  public void addThemeListeners (@Nullable ViewController themeProvider) {
+  public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       themeProvider.addThemeTextColorListener(textView, R.id.theme_color_background_textLight);
     }

File: app/src/main/java/org/thunderdog/challegram/widget/MaterialEditTextGroup.java
Patch:
@@ -262,9 +262,9 @@ public void addLengthCounter (@Deprecated boolean reduceOffset) {
     }
   }
 
-  private @Nullable ViewController themeProvider;
+  private @Nullable ViewController<?> themeProvider;
 
-  public void addThemeListeners (@Nullable ViewController themeProvider) {
+  public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
     this.themeProvider = themeProvider;
     if (themeProvider != null) {
       themeProvider.addThemeTextColorListener(editText, textColorId);
@@ -295,7 +295,7 @@ public void setRadioVisible (boolean visible, boolean animated) {
 
   private TooltipOverlayView.TooltipInfo radioTooltip;
 
-  public void showRadioHint (ViewController controller, Tdlib tdlib, int stringRes) {
+  public void showRadioHint (ViewController<?> controller, Tdlib tdlib, int stringRes) {
     if (radioView == null) {
       addRadio();
     }

File: app/src/main/java/org/thunderdog/challegram/widget/PageBlockWrapView.java
Patch:
@@ -153,7 +153,7 @@ public void onHideCustomView () {
     }
   }
 
-  public void initWithMode (int mode, @Nullable ViewController themeProvider) {
+  public void initWithMode (int mode, @Nullable ViewController<?> themeProvider) {
     this.mode = mode;
     switch (mode) {
       case MODE_EMBEDDED: {
@@ -435,9 +435,9 @@ private static class PageBlockWrapAdapter extends PagerAdapter {
     private final ArrayList<SimpleMediaWrapperView> recycledPool;
     private final ArrayList<SimpleMediaWrapperView> usedPool;
 
-    private final @Nullable ViewController themeProvider;
+    private final @Nullable ViewController<?> themeProvider;
 
-    public PageBlockWrapAdapter (Context context, @Nullable ViewController themeProvider) {
+    public PageBlockWrapAdapter (Context context, @Nullable ViewController<?> themeProvider) {
       this.context = context;
       this.recycledPool = new ArrayList<>(4);
       this.usedPool = new ArrayList<>(4);

File: app/src/main/java/org/thunderdog/challegram/widget/RootFrameLayout.java
Patch:
@@ -223,7 +223,7 @@ private void dispatchChildInsets (View child, Object insets, int drawerGravity)
       if (ignoreBottom || (shouldIgnoreBottomMargin(child, bottom))) {
         wi.replaceSystemWindowInsets(left, top, right, 0);
       }
-      ViewController c = ViewController.findAncestor(child);
+      ViewController<?> c = ViewController.findAncestor(child);
       if (c != null) {
         c.dispatchInnerMargins(left, top, right, bottom);
       }
@@ -257,7 +257,7 @@ private void applyMarginInsets (View child, MarginLayoutParams lp, Object insets
     if (UI.getContext(getContext()).dispatchCameraMargins(child, lp.leftMargin, lp.topMargin, lp.rightMargin, bottom)) {
       lp.leftMargin = lp.topMargin = lp.rightMargin = lp.bottomMargin = 0;
     } else {
-      ViewController c = ViewController.findAncestor(child);
+      ViewController<?> c = ViewController.findAncestor(child);
       if (c != null) {
         c.dispatchInnerMargins(lp.leftMargin, lp.topMargin, lp.rightMargin, bottom);
       }

File: app/src/main/java/org/thunderdog/challegram/widget/SettingStupidView.java
Patch:
@@ -97,7 +97,7 @@ public void setIsRed () {
     titleView.setTextColor(Theme.getColor(titleColorId = R.id.theme_color_textNegative));
   }
 
-  public void addThemeListeners (@Nullable ViewController themeProvider) {
+  public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       themeProvider.addThemeTextColorListener(titleView, titleColorId);
       themeProvider.addThemeTextColorListener(subtitleView, subtitleColorId);

File: app/src/main/java/org/thunderdog/challegram/widget/ShadowView.java
Patch:
@@ -95,7 +95,7 @@ public void setSimpleBottomTransparentShadow (boolean withDefaultSize) {
     }
   }
 
-  public void setSimpleTopShadow (boolean withDefaultSize, ViewController themeProvider) {
+  public void setSimpleTopShadow (boolean withDefaultSize, ViewController<?> themeProvider) {
     setSimpleTopShadow(withDefaultSize);
     ViewSupport.setThemedBackground(this, R.id.theme_color_background, themeProvider);
   }

File: app/src/main/java/org/thunderdog/challegram/widget/SliderWrapView.java
Patch:
@@ -180,7 +180,7 @@ public void initWithBrightnessIcons () {
     addView(fullBrightness);
   }
 
-  public void addThemeListeners (@Nullable ViewController themeProvider) {
+  public void addThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       if (nameView != null) {
         nameView.addThemeListeners(themeProvider);

File: app/src/main/java/org/thunderdog/challegram/widget/SnackBar.java
Patch:
@@ -115,7 +115,7 @@ public SnackBar dismissSnackBar (boolean animated) {
     return this;
   }
 
-  public SnackBar addThemeListeners (@Nullable ViewController themeProvider) {
+  public SnackBar addThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       themeProvider.addThemeTextColorListener(actionView, R.id.theme_color_snackbarUpdateAction);
       themeProvider.addThemeTextColorListener(textView, R.id.theme_color_snackbarUpdateText);
@@ -124,7 +124,7 @@ public SnackBar addThemeListeners (@Nullable ViewController themeProvider) {
     return this;
   }
 
-  public SnackBar removeThemeListeners (@Nullable ViewController themeProvider) {
+  public SnackBar removeThemeListeners (@Nullable ViewController<?> themeProvider) {
     if (themeProvider != null) {
       themeProvider.removeThemeListenerByTarget(textView);
       themeProvider.removeThemeListenerByTarget(actionView);

File: app/src/main/java/org/thunderdog/challegram/widget/VerticalChatView.java
Patch:
@@ -81,9 +81,9 @@ public void onCheckFactorChanged (float factor) {
     updateTextColor();
   }
 
-  private @Nullable ViewController themeProvider;
+  private @Nullable ViewController<?> themeProvider;
 
-  public void setThemeProvider (@Nullable ViewController themeProvider) {
+  public void setThemeProvider (@Nullable ViewController<?> themeProvider) {
     this.themeProvider = themeProvider;
     if (themeProvider != null) {
       themeProvider.addThemeInvalidateListener(this);

File: vkryl/core/src/main/java/me/vkryl/core/reference/ReferenceList.java
Patch:
@@ -35,7 +35,7 @@
 
 public final class ReferenceList<T> implements Iterable<T>, ReferenceCreator<T> {
   public interface FullnessListener {
-    void onFullnessStateChanged (ReferenceList list, boolean isFull);
+    void onFullnessStateChanged (ReferenceList<?> list, boolean isFull);
   }
 
   private final boolean cacheIterator;

File: app/src/main/java/org/thunderdog/challegram/player/RecordAudioVideoController.java
Patch:
@@ -1075,8 +1075,8 @@ private void cleanupVideoRecording () {
       ownedCamera.onCleanAfterHide();
       ownedCamera.releaseCameraLayout();
 
-      context.releaseCameraOwnership();
       setupCamera(false);
+      context.releaseCameraOwnership();
       ownedCamera = null;
 
       resetRoundState();

File: app/src/main/java/org/thunderdog/challegram/component/chat/MessagesLoader.java
Patch:
@@ -1406,7 +1406,7 @@ private void processMessages (final long currentContextId, TdApi.Message[] messa
       case MODE_INITIAL:
       case MODE_REPEAT_INITIAL: {
         canLoadTop = specialMode != SPECIAL_MODE_SCHEDULED && (loadingLocal || (totalCount != 0 && getChatId() != 0));
-        canLoadBottom = specialMode != SPECIAL_MODE_SCHEDULED && (scrollMessageId != null && !scrollMessageId.isHistoryStart()) && canLoadTop && !items.isEmpty() && !isEndReached(new MessageId(items.get(0).getChatId(), items.get(0).getId()));
+        canLoadBottom = specialMode != SPECIAL_MODE_SCHEDULED && (scrollMessageId == null || !scrollMessageId.isHistoryEnd()) && canLoadTop && !items.isEmpty() && !isEndReached(new MessageId(items.get(0).getChatId(), items.get(0).getId()));
         if (Log.isEnabled(Log.TAG_MESSAGES_LOADER)) {
           Log.i(Log.TAG_MESSAGES_LOADER, "Received initial chunk, startTop:%s startBottom:%s canLoadTop:%b canLoadBottom:%b", getStartTop(), getStartBottom(), canLoadTop, canLoadBottom);
         }

