File: wallet/src/de/schildbach/wallet/ui/RequestCoinsActivity.java
Patch:
@@ -69,7 +69,9 @@ protected void onCreate(final Bundle savedInstanceState) {
         getActionBar().setDisplayHomeAsUpEnabled(true);
         ViewCompat.setOnApplyWindowInsetsListener(findViewById(android.R.id.content), (v, windowInsets) -> {
             final Insets insets = windowInsets.getInsets(WindowInsetsCompat.Type.systemBars());
-            v.setPadding(v.getPaddingLeft(), insets.top, v.getPaddingRight(), v.getPaddingBottom());
+            final boolean imeVisible = windowInsets.isVisible(WindowInsetsCompat.Type.ime());
+            v.setPadding(v.getPaddingLeft(), insets.top, v.getPaddingRight(),
+                    imeVisible ? windowInsets.getInsets(WindowInsetsCompat.Type.ime()).bottom : 0);
             return windowInsets;
         });
 

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -138,7 +138,7 @@ public boolean onQueryTextSubmit(final String query) {
                     });
 
                     // Workaround for not being able to style the SearchView
-                    final int id = getResources().getIdentifier("android:id/search_src_text", null, null);
+                    final int id = activity.getResources().getIdentifier("android:id/search_src_text", null, null);
                     final EditText searchInput = searchView.findViewById(id);
                     searchInput.setTextColor(activity.getColor(R.color.fg_on_dark_bg_network_significant));
                     searchInput.setHintTextColor(activity.getColor(R.color.fg_on_dark_bg_network_insignificant));

File: wallet/src/de/schildbach/wallet/util/Bluetooth.java
Patch:
@@ -68,7 +68,7 @@ public class Bluetooth {
             if (mService == null)
                 return null;
             return (String) mService.getClass().getMethod("getAddress").invoke(mService);
-        } catch (final InvocationTargetException x) {
+        } catch (final InvocationTargetException | NoSuchMethodException x) {
             log.info("Problem determining Bluetooth MAC via reflection", x);
             return null;
         } catch (final Exception x) {

File: wallet/src/de/schildbach/wallet/service/BlockchainService.java
Patch:
@@ -77,7 +77,6 @@
 import org.bitcoinj.core.Transaction;
 import org.bitcoinj.core.TransactionBroadcast;
 import org.bitcoinj.core.TransactionConfidence.ConfidenceType;
-import org.bitcoinj.core.Utils;
 import org.bitcoinj.core.VersionMessage;
 import org.bitcoinj.core.listeners.AbstractPeerDataEventListener;
 import org.bitcoinj.core.listeners.PeerConnectedEventListener;
@@ -98,6 +97,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.InetSocketAddress;
+import java.time.Instant;
+import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
 import java.util.Date;
 import java.util.EnumSet;
@@ -556,7 +557,7 @@ public void onChanged(final Wallet wallet) {
                     if (!blockChainFileExists && earliestKeyCreationTimeSecs > 0) {
                         try {
                             log.info("loading checkpoints for birthdate {} from '{}'",
-                                    Utils.dateTimeFormat(earliestKeyCreationTimeSecs * 1000),
+                                    DateTimeFormatter.ISO_INSTANT.format(Instant.ofEpochSecond(earliestKeyCreationTimeSecs)),
                                     Constants.Files.CHECKPOINTS_ASSET);
                             final Stopwatch watch = Stopwatch.createStarted();
                             final InputStream checkpointsInputStream = getAssets()

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -50,7 +50,6 @@
 import de.schildbach.wallet.util.Toast;
 import de.schildbach.wallet.util.WalletUtils;
 import org.bitcoinj.core.VersionMessage;
-import org.bitcoinj.crypto.LinuxSecureRandom;
 import org.bitcoinj.crypto.MnemonicCode;
 import org.bitcoinj.utils.ContextPropagatingThreadFactory;
 import org.bitcoinj.utils.Threading;
@@ -95,8 +94,6 @@ public WalletApplication() {
 
     @Override
     public void onCreate() {
-        new LinuxSecureRandom(); // init proper random number generator
-
         Logging.init(getFilesDir());
 
         Threading.throwOnLockCycles();

File: wallet/src/de/schildbach/wallet/ui/CurrencyCalculatorLink.java
Patch:
@@ -25,6 +25,8 @@
 import org.bitcoinj.utils.ExchangeRate;
 import org.bitcoinj.utils.Fiat;
 
+import java.util.Objects;
+
 /**
  * @author Andreas Schildbach
  */
@@ -97,7 +99,7 @@ public void setEnabled(final boolean enabled) {
     }
 
     public void setExchangeRate(final ExchangeRate exchangeRate) {
-        if (!exchangeRate.equals(this.exchangeRate)) {
+        if (!Objects.equals(exchangeRate, this.exchangeRate)) {
             this.exchangeRate = exchangeRate;
             update();
         }

File: wallet/src/de/schildbach/wallet/service/BootstrapReceiver.java
Patch:
@@ -32,6 +32,7 @@
 import de.schildbach.wallet.ui.send.FeeCategory;
 import de.schildbach.wallet.ui.send.SendCoinsActivity;
 import org.bitcoinj.core.Coin;
+import org.bitcoinj.utils.ContextPropagatingThreadFactory;
 import org.bitcoinj.utils.MonetaryFormat;
 import org.bitcoinj.wallet.Wallet;
 import org.slf4j.Logger;
@@ -44,7 +45,7 @@
  * @author Andreas Schildbach
  */
 public class BootstrapReceiver extends BroadcastReceiver {
-    private final Executor executor = Executors.newSingleThreadExecutor();
+    private final Executor executor = Executors.newSingleThreadExecutor(new ContextPropagatingThreadFactory("bootstrap"));
 
     private static final Logger log = LoggerFactory.getLogger(BootstrapReceiver.class);
 

File: wallet/src/de/schildbach/wallet/WalletBalanceWidgetProvider.java
Patch:
@@ -41,6 +41,7 @@
 import de.schildbach.wallet.util.MonetarySpannable;
 import org.bitcoinj.core.Coin;
 import org.bitcoinj.core.NetworkParameters;
+import org.bitcoinj.utils.ContextPropagatingThreadFactory;
 import org.bitcoinj.utils.ExchangeRate;
 import org.bitcoinj.utils.Fiat;
 import org.bitcoinj.utils.MonetaryFormat;
@@ -56,7 +57,7 @@
  * @author Andreas Schildbach
  */
 public class WalletBalanceWidgetProvider extends AppWidgetProvider {
-    private final Executor executor = Executors.newSingleThreadExecutor();
+    private final Executor executor = Executors.newSingleThreadExecutor(new ContextPropagatingThreadFactory("appwidget"));
 
     private static final StrikethroughSpan STRIKE_THRU_SPAN = new StrikethroughSpan();
 

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsViewModel.java
Patch:
@@ -102,6 +102,8 @@ protected void onCleared() {
 
     public void maybeDryrun() {
         final Map<FeeCategory, Coin> fees = dynamicFees.getValue();
+        dryrunTransaction.setValue(null);
+        dryrunException.setValue(null);
         if (state == State.INPUT && amount != null && fees != null) {
             final Address dummy = wallet.currentReceiveAddress(); // won't be used, tx is never committed
             final SendRequest sendRequest = paymentIntent.mergeWithEditedValues(amount, dummy).toSendRequest();
@@ -110,8 +112,6 @@ public void maybeDryrun() {
                     paymentIntent.mayEditAmount() && amount.equals(wallet.getBalance(BalanceType.AVAILABLE));
             sendRequest.feePerKb = fees.get(feeCategory.getValue());
             executor.execute(() -> {
-                dryrunTransaction.postValue(null);
-                dryrunException.postValue(null);
                 try {
                     wallet.completeTx(sendRequest);
                     dryrunTransaction.postValue(sendRequest.tx);

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -22,6 +22,7 @@
 import android.app.NotificationChannel;
 import android.app.NotificationManager;
 import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothManager;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.media.AudioAttributes;
@@ -118,7 +119,8 @@ public void onCreate() {
 
         final Configuration config = getConfiguration();
         config.updateLastVersionCode(packageInfo.versionCode);
-        final BluetoothAdapter bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+        final BluetoothManager bluetoothManager = getSystemService(BluetoothManager.class);
+        final BluetoothAdapter bluetoothAdapter = bluetoothManager.getAdapter();
         if (bluetoothAdapter != null)
             config.updateLastBluetoothAddress(Bluetooth.getAddress(bluetoothAdapter));
 

File: wallet/src/de/schildbach/wallet/offline/AcceptBluetoothService.java
Patch:
@@ -18,6 +18,7 @@
 package de.schildbach.wallet.offline;
 
 import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothManager;
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
@@ -88,7 +89,8 @@ public void onCreate() {
 
         super.onCreate();
         this.application = (WalletApplication) getApplication();
-        final BluetoothAdapter bluetoothAdapter = checkNotNull(BluetoothAdapter.getDefaultAdapter());
+        final BluetoothManager bluetoothManager = getSystemService(BluetoothManager.class);
+        final BluetoothAdapter bluetoothAdapter = checkNotNull(bluetoothManager.getAdapter());
         final PowerManager pm = getSystemService(PowerManager.class);
 
         wakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, getClass().getName());

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -19,6 +19,7 @@
 
 import android.Manifest;
 import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothManager;
 import android.content.ActivityNotFoundException;
 import android.content.ClipData;
 import android.content.ClipboardManager;
@@ -118,7 +119,7 @@ public void onAttach(final Context context) {
         this.application = activity.getWalletApplication();
         this.config = application.getConfiguration();
         this.clipboardManager = activity.getSystemService(ClipboardManager.class);
-        this.bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+        this.bluetoothAdapter = activity.getSystemService(BluetoothManager.class).getAdapter();
         this.nfcAdapter = NfcAdapter.getDefaultAdapter(activity);
     }
 

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -20,6 +20,7 @@
 import android.Manifest;
 import android.app.Activity;
 import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothManager;
 import android.content.ComponentName;
 import android.content.ContentResolver;
 import android.content.Context;
@@ -341,6 +342,7 @@ public void onAttach(final Context context) {
         this.config = application.getConfiguration();
         this.addressBookDao = AddressBookDatabase.getDatabase(context).addressBookDao();
         this.contentResolver = application.getContentResolver();
+        this.bluetoothAdapter = application.getSystemService(BluetoothManager.class).getAdapter();
     }
 
     @Override
@@ -379,8 +381,6 @@ else if (numBroadcastPeers > 1 || confidenceType == ConfidenceType.BUILDING)
         viewModel.dryrunTransaction.observe(this, transaction -> updateView());
         viewModel.dryrunException.observe(this, e -> updateView());
 
-        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
-
         backgroundThread = new HandlerThread("backgroundThread", Process.THREAD_PRIORITY_BACKGROUND);
         backgroundThread.start();
         backgroundHandler = new Handler(backgroundThread.getLooper());

File: wallet/src/de/schildbach/wallet/util/Crypto.java
Patch:
@@ -42,7 +42,7 @@
  * This class encrypts and decrypts a string in a manner that is compatible with OpenSSL.
  * 
  * If you encrypt a string with this class you can decrypt it with the OpenSSL command: openssl enc -d
- * -aes-256-cbc -a -in cipher.txt -out plain.txt -pass pass:aTestPassword
+ * -aes-256-cbc -md md5 -a -in cipher.txt -out plain.txt -pass pass:aTestPassword
  * 
  * where: cipher.txt = file containing the cipher text plain.txt - where you want the plaintext to be saved
  * 

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -327,7 +327,8 @@ private static void appendDeviceInfo(final Appendable report, final Context cont
 
         report.append("Manufacturer: ").append(Build.MANUFACTURER).append("\n");
         report.append("Device Model: ").append(Build.MODEL).append("\n");
-        report.append("Android Version: ").append(Build.VERSION.RELEASE).append("\n");
+        report.append("Android Version: ").append(Build.VERSION.RELEASE)
+                .append(" (").append(Integer.toString(Build.VERSION.SDK_INT)).append(")\n");
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
             report.append("Android security patch level: ").append(Build.VERSION.SECURITY_PATCH).append("\n");
         report.append("ABIs: ").append(Joiner.on(", ").skipNulls().join(Build.SUPPORTED_ABIS)).append("\n");

File: wallet/src/de/schildbach/wallet/ui/send/RaiseFeeDialogFragment.java
Patch:
@@ -272,6 +272,9 @@ private void wipePasswords() {
     }
 
     private void updateView() {
+        if (dialog == null)
+            return;
+
         final Wallet wallet = walletActivityViewModel.wallet.getValue();
         final boolean needsPassword = wallet != null && wallet.isEncrypted();
 

File: wallet/src/de/schildbach/wallet/ui/backup/BackupWalletDialogFragment.java
Patch:
@@ -271,7 +271,7 @@ private void backupWallet() {
     public void onActivityResult(final int requestCode, final int resultCode, final Intent intent) {
         if (requestCode == REQUEST_CODE_CREATE_DOCUMENT) {
             if (resultCode == Activity.RESULT_OK) {
-                walletActivityViewModel.wallet.observe(activity, new Observer<Wallet>() {
+                walletActivityViewModel.wallet.observe(this, new Observer<Wallet>() {
                     @Override
                     public void onChanged(final Wallet wallet) {
                         walletActivityViewModel.wallet.removeObserver(this);

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -111,7 +111,7 @@ public void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         log.info("opening dialog {}", getClass().getName());
 
-        walletActivityViewModel = new ViewModelProvider(this).get(AbstractWalletActivityViewModel.class);
+        walletActivityViewModel = new ViewModelProvider(activity).get(AbstractWalletActivityViewModel.class);
     }
 
     @Override

File: wallet/src/de/schildbach/wallet/ui/WalletAddressesFragment.java
Patch:
@@ -90,7 +90,7 @@ public void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         this.fragmentManager = getChildFragmentManager();
 
-        walletActivityViewModel = new ViewModelProvider(this).get(AbstractWalletActivityViewModel.class);
+        walletActivityViewModel = new ViewModelProvider(activity).get(AbstractWalletActivityViewModel.class);
         walletActivityViewModel.wallet.observe(this, wallet -> maybeSubmitList());
         activityViewModel = new ViewModelProvider(activity).get(AddressBookViewModel.class);
         activityViewModel.selectedAddress.observe(this, address -> {

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -250,10 +250,10 @@ public ReceivingAddressViewAdapter(final Context context) {
         @Override
         public View getView(final int position, View view, final ViewGroup parent) {
             if (view == null)
-                view = inflater.inflate(R.layout.address_book_row, parent, false);
+                view = inflater.inflate(R.layout.send_coins_address_row, parent, false);
             final AddressBookEntry entry = getItem(position);
-            ((TextView) view.findViewById(R.id.address_book_row_label)).setText(entry.getLabel());
-            ((TextView) view.findViewById(R.id.address_book_row_address)).setText(WalletUtils.formatHash(
+            ((TextView) view.findViewById(R.id.send_coins_address_row_label)).setText(entry.getLabel());
+            ((TextView) view.findViewById(R.id.send_coins_address_row_address)).setText(WalletUtils.formatHash(
                     entry.getAddress(), Constants.ADDRESS_FORMAT_GROUP_SIZE, Constants.ADDRESS_FORMAT_LINE_SIZE));
             return view;
         }

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -124,6 +124,7 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
         final View view = inflater.inflate(R.layout.exchange_rates_fragment, container, false);
         viewGroup = view.findViewById(R.id.exchange_rates_list_group);
         recyclerView = view.findViewById(R.id.exchange_rates_list);
+        recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         return view;

File: wallet/src/de/schildbach/wallet/ui/SendingAddressesFragment.java
Patch:
@@ -121,6 +121,7 @@ public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable final
         final View view = inflater.inflate(R.layout.sending_addresses_fragment, container, false);
         viewGroup = view.findViewById(R.id.sending_addresses_list_group);
         recyclerView = view.findViewById(R.id.sending_addresses_list);
+        recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         return view;

File: wallet/src/de/schildbach/wallet/ui/WalletAddressesFragment.java
Patch:
@@ -126,6 +126,7 @@ public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable final
         final View view = inflater.inflate(R.layout.wallet_addresses_fragment, container, false);
         viewGroup = view.findViewById(R.id.wallet_addresses_list_group);
         recyclerView = view.findViewById(R.id.wallet_addresses_list);
+        recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         return view;

File: wallet/src/de/schildbach/wallet/ui/monitor/BlockListFragment.java
Patch:
@@ -111,6 +111,7 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
         final View view = inflater.inflate(R.layout.block_list_fragment, container, false);
         viewGroup = view.findViewById(R.id.block_list_group);
         recyclerView = view.findViewById(R.id.block_list);
+        recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new StickToTopLinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         return view;

File: wallet/src/de/schildbach/wallet/ui/monitor/PeerListFragment.java
Patch:
@@ -90,6 +90,7 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
         final View view = inflater.inflate(R.layout.peer_list_fragment, container, false);
         viewGroup = view.findViewById(R.id.peer_list_group);
         recyclerView = view.findViewById(R.id.peer_list);
+        recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         return view;

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsFragment.java
Patch:
@@ -328,8 +328,7 @@ public boolean onClickTransactionContextMenuItem(final MenuItem item, final Sha2
     }
 
     @Override
-    public void onWarningClick(final View view) {
-        final WarningType warning = warning();
+    public void onWarningClick(final View view, final TransactionsAdapter.WarningType warning) {
         if (warning == TransactionsAdapter.WarningType.BACKUP)
             activityViewModel.showBackupWalletDialog.setValue(Event.simple());
         else if (warning == TransactionsAdapter.WarningType.STORAGE_ENCRYPTION)

File: wallet/src/de/schildbach/wallet/ui/AddressBookAdapter.java
Patch:
@@ -303,7 +303,9 @@ public void onBindViewHolder(final RecyclerView.ViewHolder holder, final int pos
                 addressHolder.itemView.setOnClickListener(v -> onClickListener.onAddressClick(v, addressItem.address,
                         addressItem.label));
             if (contextMenuCallback != null && isSelected) {
-                contextMenuCallback.onInflateContextMenu(menuInflater, addressHolder.contextBar.getMenu());
+                final Menu menu = addressHolder.contextBar.getMenu();
+                menu.clear();
+                contextMenuCallback.onInflateContextMenu(menuInflater, menu);
                 if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M)
                     Toolbars.colorize(addressHolder.contextBar, colorInsignificant);
                 addressHolder.contextBar.setVisibility(View.VISIBLE);

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -137,7 +137,8 @@ public void onCreate(final Bundle savedInstanceState) {
         viewModel.bitcoinUri.observe(this, bitcoinUri -> activity.invalidateOptionsMenu());
         if (Constants.ENABLE_EXCHANGE_RATES) {
             viewModel.exchangeRate.observe(this,
-                    exchangeRate -> amountCalculatorLink.setExchangeRate(exchangeRate.exchangeRate()));
+                    exchangeRate -> amountCalculatorLink.setExchangeRate(exchangeRate != null ?
+                            exchangeRate.exchangeRate() : null));
         }
         viewModel.showBitmapDialog.observe(this, new Event.Observer<Bitmap>() {
             @Override

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -359,7 +359,7 @@ public void onCreate(final Bundle savedInstanceState) {
             viewModel.exchangeRate.observe(this, exchangeRate -> {
                 final SendCoinsViewModel.State state = viewModel.state;
                 if (state == null || state.compareTo(SendCoinsViewModel.State.INPUT) <= 0)
-                    amountCalculatorLink.setExchangeRate(exchangeRate.exchangeRate());
+                    amountCalculatorLink.setExchangeRate(exchangeRate != null ? exchangeRate.exchangeRate() : null);
             });
         }
         viewModel.dynamicFees.observe(this, dynamicFees -> {

File: wallet/src/de/schildbach/wallet/data/ExchangeRatesProvider.java
Patch:
@@ -232,7 +232,7 @@ private Map<String, ExchangeRate> requestExchangeRates() {
         request.url(coinGecko.url());
         final Headers.Builder headers = new Headers.Builder();
         headers.add("User-Agent", userAgent);
-        headers.add("Accept", "application/json");
+        headers.add("Accept", coinGecko.mediaType().toString());
         request.headers(headers.build());
 
         final Builder httpClientBuilder = Constants.HTTP_CLIENT.newBuilder();

File: wallet/src/de/schildbach/wallet/WalletBalanceWidgetProvider.java
Patch:
@@ -127,7 +127,7 @@ private static void updateWidget(final Context context, final AppWidgetManager a
             final MonetaryFormat localFormat = Constants.LOCAL_FORMAT.code(0,
                     Constants.PREFIX_ALMOST_EQUAL_TO + GenericUtils.currencySymbol(exchangeRate.getCurrencyCode()));
             final Object[] prefixSpans = new Object[] { MonetarySpannable.SMALLER_SPAN,
-                    new ForegroundColorSpan(ContextCompat.getColor(context, R.color.fg_insignificant)) };
+                    new ForegroundColorSpan(ContextCompat.getColor(context, R.color.fg_insignificant_darkdefault)) };
             localBalanceStr = new MonetarySpannable(localFormat, localBalance).applyMarkup(prefixSpans,
                     MonetarySpannable.STANDARD_INSIGNIFICANT_SPANS);
             if (!Constants.NETWORK_PARAMETERS.getId().equals(NetworkParameters.ID_MAINNET))

File: wallet/src/de/schildbach/wallet/ui/TransactionsAdapter.java
Patch:
@@ -129,7 +129,7 @@ public TransactionItem(final Context context, final Transaction tx, final @Nulla
                 final int colorSignificant = ContextCompat.getColor(context, R.color.fg_significant);
                 final int colorLessSignificant = ContextCompat.getColor(context, R.color.fg_less_significant);
                 final int colorInsignificant = ContextCompat.getColor(context, R.color.fg_insignificant);
-                final int colorValuePositve = ContextCompat.getColor(context, R.color.fg_value_positive);
+                final int colorValuePositive = ContextCompat.getColor(context, R.color.fg_value_positive);
                 final int colorValueNegative = ContextCompat.getColor(context, R.color.fg_value_negative);
                 final int colorError = ContextCompat.getColor(context, R.color.fg_error);
 
@@ -150,7 +150,7 @@ public TransactionItem(final Context context, final Transaction tx, final @Nulla
                 } else if (DefaultCoinSelector.isSelectable(tx)) {
                     textColor = colorSignificant;
                     lessSignificantColor = colorLessSignificant;
-                    valueColor = sent ? colorValueNegative : colorValuePositve;
+                    valueColor = sent ? colorValueNegative : colorValuePositive;
                 } else {
                     textColor = colorInsignificant;
                     lessSignificantColor = colorInsignificant;

File: wallet/src/de/schildbach/wallet/data/DynamicFeeLiveData.java
Patch:
@@ -198,7 +198,8 @@ private static void fetchDynamicFees(final HttpUrl url, final File tempFile, fin
                 watch.stop();
                 log.info("Dynamic fees fetched from {}, took {}", url, watch);
             } else {
-                log.warn("HTTP status {} when fetching dynamic fees from {}", response.code(), url);
+                log.warn("HTTP status {} {} when fetching dynamic fees from {}", response.code(), response.message(),
+                        url);
             }
         } catch (final Exception x) {
             log.warn("Problem when fetching dynamic fees rates from " + url, x);

File: wallet/src/de/schildbach/wallet/data/ExchangeRatesProvider.java
Patch:
@@ -277,7 +277,8 @@ private Map<String, ExchangeRate> requestExchangeRates() {
 
                 return rates;
             } else {
-                log.warn("http status {} when fetching exchange rates from {}", response.code(), BITCOINAVERAGE_URL);
+                log.warn("http status {} {} when fetching exchange rates from {}", response.code(),
+                        response.message(), BITCOINAVERAGE_URL);
             }
         } catch (final Exception x) {
             log.warn("problem fetching exchange rates from " + BITCOINAVERAGE_URL, x);

File: wallet/src/de/schildbach/wallet/data/ExchangeRatesProvider.java
Patch:
@@ -237,6 +237,7 @@ private Map<String, ExchangeRate> requestExchangeRates() {
         request.url(BITCOINAVERAGE_URL);
         final Headers.Builder headers = new Headers.Builder();
         headers.add("User-Agent", userAgent);
+        headers.add("Accept", "application/json");
         request.headers(headers.build());
 
         final Builder httpClientBuilder = Constants.HTTP_CLIENT.newBuilder();

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -185,7 +185,8 @@ protected CharSequence collectContextualData() {
                     contextualData
                             .append(Uri.withAppendedPath(Uri.parse(blockExplorer), "tx/" + tx.getTxId().toString()))
                             .append('\n');
-                contextualData.append(tx.toString());
+                contextualData.append(tx.toString()).append('\n');
+                contextualData.append(Constants.HEX.encode(tx.unsafeBitcoinSerialize())).append('\n');
                 return contextualData;
             }
 

File: wallet/src/de/schildbach/wallet/ui/preference/SettingsFragment.java
Patch:
@@ -38,7 +38,6 @@
 import android.os.Handler;
 import android.os.HandlerThread;
 import android.os.Process;
-import android.preference.EditTextPreference;
 import android.preference.Preference;
 import android.preference.Preference.OnPreferenceChangeListener;
 import android.preference.PreferenceFragment;
@@ -84,7 +83,6 @@ public void onCreate(final Bundle savedInstanceState) {
         backgroundHandler = new Handler(backgroundThread.getLooper());
 
         trustedPeerPreference = findPreference(Configuration.PREFS_KEY_TRUSTED_PEER);
-        ((EditTextPreference) trustedPeerPreference).getEditText().setSingleLine();
         trustedPeerPreference.setOnPreferenceChangeListener(this);
 
         trustedPeerOnlyPreference = findPreference(Configuration.PREFS_KEY_TRUSTED_PEER_ONLY);

File: wallet/src/de/schildbach/wallet/util/Bluetooth.java
Patch:
@@ -78,7 +78,8 @@ public static String decompressMac(final String compressedMac) {
         final StringBuilder mac = new StringBuilder();
         for (int i = 0; i < compressedMac.length(); i += 2)
             mac.append(compressedMac.substring(i, i + 2)).append(':');
-        mac.setLength(mac.length() - 1);
+        if (mac.length() > 0)
+            mac.setLength(mac.length() - 1);
 
         return mac.toString();
     }

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsViewModel.java
Patch:
@@ -55,7 +55,6 @@
 import androidx.lifecycle.LiveData;
 import androidx.lifecycle.MediatorLiveData;
 import androidx.lifecycle.MutableLiveData;
-import androidx.lifecycle.Observer;
 
 /**
  * @author Andreas Schildbach
@@ -77,7 +76,7 @@ public enum Direction {
     public final MediatorLiveData<List<TransactionsAdapter.ListItem>> list = new MediatorLiveData<>();
     public final MutableLiveData<Event<Bitmap>> showBitmapDialog = new MutableLiveData<>();
     public final MutableLiveData<Event<Address>> showEditAddressBookEntryDialog = new MutableLiveData<>();
-    public final MutableLiveData<Event<String>> showReportIssueDialog = new MutableLiveData<>();
+    public final MutableLiveData<Event<Sha256Hash>> showReportIssueDialog = new MutableLiveData<>();
 
     public WalletTransactionsViewModel(final Application application) {
         super(application);

File: wallet/src/de/schildbach/wallet/ui/AddressBookActivity.java
Patch:
@@ -73,12 +73,12 @@ protected void onCreate(final Bundle savedInstanceState) {
             fragmentManager.executePendingTransactions();
         }
 
-        final ViewPager pager = (ViewPager) findViewById(R.id.address_book_pager);
+        final ViewPager pager = findViewById(R.id.address_book_pager);
         if (pager != null) {
             pager.setAdapter(
                     new TwoFragmentAdapter(fragmentManager, walletAddressesFragment, sendingAddressesFragment));
 
-            final ViewPagerTabs pagerTabs = (ViewPagerTabs) findViewById(R.id.address_book_pager_tabs);
+            final ViewPagerTabs pagerTabs = findViewById(R.id.address_book_pager_tabs);
             pagerTabs.addTabLabels(R.string.address_book_list_receiving_title,
                     R.string.address_book_list_sending_title);
 

File: wallet/src/de/schildbach/wallet/ui/BitmapFragment.java
Patch:
@@ -82,7 +82,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
         dialog.setContentView(R.layout.bitmap_dialog);
         dialog.setCanceledOnTouchOutside(true);
 
-        final ImageView imageView = (ImageView) dialog.findViewById(R.id.bitmap_dialog_image);
+        final ImageView imageView = dialog.findViewById(R.id.bitmap_dialog_image);
         imageView.setImageDrawable(bitmap);
         imageView.setOnClickListener(v -> dismissAllowingStateLoss());
 

File: wallet/src/de/schildbach/wallet/ui/DialogBuilder.java
Patch:
@@ -47,8 +47,8 @@ public static DialogBuilder warn(final Context context, final int titleResId) {
     public DialogBuilder(final Context context) {
         super(context, R.style.My_Theme_Dialog);
         this.customTitle = LayoutInflater.from(context).inflate(R.layout.dialog_title, null);
-        this.iconView = (ImageView) customTitle.findViewById(android.R.id.icon);
-        this.titleView = (TextView) customTitle.findViewById(android.R.id.title);
+        this.iconView = customTitle.findViewById(android.R.id.icon);
+        this.titleView = customTitle.findViewById(android.R.id.title);
     }
 
     @Override

File: wallet/src/de/schildbach/wallet/ui/EditAddressBookEntryFragment.java
Patch:
@@ -117,11 +117,11 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
 
         final View view = inflater.inflate(R.layout.edit_address_book_entry_dialog, null);
 
-        final TextView viewAddress = (TextView) view.findViewById(R.id.edit_address_book_entry_address);
+        final TextView viewAddress = view.findViewById(R.id.edit_address_book_entry_address);
         viewAddress.setText(WalletUtils.formatAddress(address, Constants.ADDRESS_FORMAT_GROUP_SIZE,
                 Constants.ADDRESS_FORMAT_LINE_SIZE));
 
-        final TextView viewLabel = (TextView) view.findViewById(R.id.edit_address_book_entry_label);
+        final TextView viewLabel = view.findViewById(R.id.edit_address_book_entry_label);
         viewLabel.setText(label != null ? label : suggestedAddressLabel);
 
         dialog.setView(view);

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -123,8 +123,8 @@ public void onCreate(final Bundle savedInstanceState) {
     public View onCreateView(final LayoutInflater inflater, final ViewGroup container,
             final Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.exchange_rates_fragment, container, false);
-        viewGroup = (ViewAnimator) view.findViewById(R.id.exchange_rates_list_group);
-        recyclerView = (RecyclerView) view.findViewById(R.id.exchange_rates_list);
+        viewGroup = view.findViewById(R.id.exchange_rates_list_group);
+        recyclerView = view.findViewById(R.id.exchange_rates_list);
         recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         recyclerView.addItemDecoration(new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST));

File: wallet/src/de/schildbach/wallet/ui/FancyListFragment.java
Patch:
@@ -38,7 +38,7 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
 
     @Override
     public void setEmptyText(final CharSequence text) {
-        final TextView emptyView = (TextView) getView().findViewById(android.R.id.empty);
+        final TextView emptyView = getView().findViewById(android.R.id.empty);
         emptyView.setText(text);
     }
 }

File: wallet/src/de/schildbach/wallet/ui/WalletAddressDialogFragment.java
Patch:
@@ -105,11 +105,11 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
 
         final BitmapDrawable bitmap = new BitmapDrawable(getResources(), Qr.bitmap(addressUri));
         bitmap.setFilterBitmap(false);
-        final ImageView imageView = (ImageView) dialog.findViewById(R.id.wallet_address_dialog_image);
+        final ImageView imageView = dialog.findViewById(R.id.wallet_address_dialog_image);
         imageView.setImageDrawable(bitmap);
 
         final View labelButtonView = dialog.findViewById(R.id.wallet_address_dialog_label_button);
-        final TextView labelView = (TextView) dialog.findViewById(R.id.wallet_address_dialog_label);
+        final TextView labelView = dialog.findViewById(R.id.wallet_address_dialog_label);
         final CharSequence label = WalletUtils.formatHash(addressStr, Constants.ADDRESS_FORMAT_GROUP_SIZE,
                 Constants.ADDRESS_FORMAT_LINE_SIZE);
         labelView.setText(label);

File: wallet/src/de/schildbach/wallet/ui/WalletAddressFragment.java
Patch:
@@ -98,9 +98,9 @@ public void onEvent(final Void v) {
     public View onCreateView(final LayoutInflater inflater, final ViewGroup container,
             final Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.wallet_address_fragment, container, false);
-        currentAddressQrView = (ImageView) view.findViewById(R.id.bitcoin_address_qr);
+        currentAddressQrView = view.findViewById(R.id.bitcoin_address_qr);
 
-        currentAddressQrCardView = (CardView) view.findViewById(R.id.bitcoin_address_qr_card);
+        currentAddressQrCardView = view.findViewById(R.id.bitcoin_address_qr_card);
         currentAddressQrCardView.setPreventCornerOverlap(false);
         currentAddressQrCardView.setUseCompatPadding(false);
         currentAddressQrCardView.setMaxCardElevation(0); // we're using Lollipop elevation

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsFragment.java
Patch:
@@ -170,11 +170,11 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
             final Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.wallet_transactions_fragment, container, false);
 
-        viewGroup = (ViewAnimator) view.findViewById(R.id.wallet_transactions_group);
+        viewGroup = view.findViewById(R.id.wallet_transactions_group);
 
-        emptyView = (TextView) view.findViewById(R.id.wallet_transactions_empty);
+        emptyView = view.findViewById(R.id.wallet_transactions_empty);
 
-        recyclerView = (RecyclerView) view.findViewById(R.id.wallet_transactions_list);
+        recyclerView = view.findViewById(R.id.wallet_transactions_list);
         recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new StickToTopLinearLayoutManager(activity));
         recyclerView.setItemAnimator(new TransactionsAdapter.ItemAnimator());

File: wallet/src/de/schildbach/wallet/ui/backup/FileAdapter.java
Patch:
@@ -56,7 +56,7 @@ public View getView(final int position, View row, final ViewGroup parent) {
         if (row == null)
             row = inflater.inflate(R.layout.spinner_item, null);
 
-        final TextView textView = (TextView) row.findViewById(android.R.id.text1);
+        final TextView textView = row.findViewById(android.R.id.text1);
         textView.setText(file.getName());
 
         return row;

File: wallet/src/de/schildbach/wallet/ui/backup/RestoreWalletDialogFragment.java
Patch:
@@ -181,9 +181,9 @@ public void onActivityResult(int requestCode, int resultCode, @Nullable Intent d
     @Override
     public Dialog onCreateDialog(final Bundle savedInstanceState) {
         final View view = LayoutInflater.from(activity).inflate(R.layout.restore_wallet_dialog, null);
-        messageView = (TextView) view.findViewById(R.id.restore_wallet_dialog_message);
-        passwordView = (EditText) view.findViewById(R.id.restore_wallet_dialog_password);
-        showView = (CheckBox) view.findViewById(R.id.restore_wallet_dialog_show);
+        messageView = view.findViewById(R.id.restore_wallet_dialog_message);
+        passwordView = view.findViewById(R.id.restore_wallet_dialog_password);
+        showView = view.findViewById(R.id.restore_wallet_dialog_show);
         replaceWarningView = view.findViewById(R.id.restore_wallet_dialog_replace_warning);
 
         final DialogBuilder builder = new DialogBuilder(activity);

File: wallet/src/de/schildbach/wallet/ui/monitor/BlockListFragment.java
Patch:
@@ -99,9 +99,9 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
             final Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.block_list_fragment, container, false);
 
-        viewGroup = (ViewAnimator) view.findViewById(R.id.block_list_group);
+        viewGroup = view.findViewById(R.id.block_list_group);
 
-        recyclerView = (RecyclerView) view.findViewById(R.id.block_list);
+        recyclerView = view.findViewById(R.id.block_list);
         recyclerView.setLayoutManager(new StickToTopLinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         recyclerView.addItemDecoration(new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST));

File: wallet/src/de/schildbach/wallet/ui/monitor/NetworkMonitorActivity.java
Patch:
@@ -40,12 +40,12 @@ protected void onCreate(final Bundle savedInstanceState) {
 
         setContentView(R.layout.network_monitor_content);
 
-        final ViewPager pager = (ViewPager) findViewById(R.id.network_monitor_pager);
+        final ViewPager pager = findViewById(R.id.network_monitor_pager);
 
         final FragmentManager fm = getSupportFragmentManager();
 
         if (pager != null) {
-            final ViewPagerTabs pagerTabs = (ViewPagerTabs) findViewById(R.id.network_monitor_pager_tabs);
+            final ViewPagerTabs pagerTabs = findViewById(R.id.network_monitor_pager_tabs);
             pagerTabs.addTabLabels(R.string.network_monitor_peer_list_title, R.string.network_monitor_block_list_title);
 
             final PagerAdapter pagerAdapter = new PagerAdapter(fm);

File: wallet/src/de/schildbach/wallet/ui/monitor/PeerListFragment.java
Patch:
@@ -77,9 +77,9 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
             final Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.peer_list_fragment, container, false);
 
-        viewGroup = (ViewAnimator) view.findViewById(R.id.peer_list_group);
+        viewGroup = view.findViewById(R.id.peer_list_group);
 
-        recyclerView = (RecyclerView) view.findViewById(R.id.peer_list);
+        recyclerView = view.findViewById(R.id.peer_list);
         recyclerView.setLayoutManager(new LinearLayoutManager(activity));
         recyclerView.setAdapter(adapter);
         recyclerView.addItemDecoration(new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST));

File: wallet/src/de/schildbach/wallet/ui/preference/ExtendedPublicKeyFragment.java
Patch:
@@ -77,7 +77,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
 
         final BitmapDrawable bitmap = new BitmapDrawable(getResources(), Qr.bitmap(base58));
         bitmap.setFilterBitmap(false);
-        final ImageView imageView = (ImageView) view.findViewById(R.id.extended_public_key_dialog_image);
+        final ImageView imageView = view.findViewById(R.id.extended_public_key_dialog_image);
         imageView.setImageDrawable(bitmap);
 
         final DialogBuilder dialog = new DialogBuilder(activity);

File: wallet/src/de/schildbach/wallet/ui/scan/ScanActivity.java
Patch:
@@ -182,8 +182,8 @@ public void onAnimationEnd(Animator animation) {
 
         setContentView(R.layout.scan_activity);
         contentView = findViewById(android.R.id.content);
-        scannerView = (ScannerView) findViewById(R.id.scan_activity_mask);
-        previewView = (TextureView) findViewById(R.id.scan_activity_preview);
+        scannerView = findViewById(R.id.scan_activity_mask);
+        previewView = findViewById(R.id.scan_activity_preview);
         previewView.setSurfaceTextureListener(this);
 
         cameraThread = new HandlerThread("cameraThread", Process.THREAD_PRIORITY_BACKGROUND);

File: wallet/src/de/schildbach/wallet/ui/send/MaintenanceDialogFragment.java
Patch:
@@ -128,13 +128,13 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
             value = value.add(tx.getValueSentFromMe(wallet));
             fee = fee.add(tx.getFee());
         }
-        final TextView messageView = (TextView) view.findViewById(R.id.maintenance_dialog_message);
+        final TextView messageView = view.findViewById(R.id.maintenance_dialog_message);
         final MonetaryFormat format = application.getConfiguration().getFormat();
         messageView.setText(getString(R.string.maintenance_dialog_message, format.format(value), format.format(fee)));
 
         passwordGroup = view.findViewById(R.id.maintenance_dialog_password_group);
 
-        passwordView = (EditText) view.findViewById(R.id.maintenance_dialog_password);
+        passwordView = view.findViewById(R.id.maintenance_dialog_password);
         passwordView.setText(null);
 
         badPasswordView = view.findViewById(R.id.maintenance_dialog_bad_password);

File: wallet/src/de/schildbach/wallet/ui/send/RaiseFeeDialogFragment.java
Patch:
@@ -153,11 +153,11 @@ public void onCreate(final Bundle savedInstanceState) {
     public Dialog onCreateDialog(final Bundle savedInstanceState) {
         final View view = LayoutInflater.from(activity).inflate(R.layout.raise_fee_dialog, null);
 
-        messageView = (TextView) view.findViewById(R.id.raise_fee_dialog_message);
+        messageView = view.findViewById(R.id.raise_fee_dialog_message);
 
         passwordGroup = view.findViewById(R.id.raise_fee_dialog_password_group);
 
-        passwordView = (EditText) view.findViewById(R.id.raise_fee_dialog_password);
+        passwordView = view.findViewById(R.id.raise_fee_dialog_password);
         passwordView.setText(null);
 
         badPasswordView = view.findViewById(R.id.raise_fee_dialog_bad_password);

File: wallet/src/de/schildbach/wallet/ui/CircularProgressView.java
Patch:
@@ -115,7 +115,7 @@ private void updatePath(final int w, final int h) {
         if (progress == 0) {
             path.close();
         } else if (progress < maxProgress) {
-            final float angle = progress * 360 / maxProgress;
+            final float angle = (float) (progress * 360) / maxProgress;
             final float x = w / 2f;
             final float y = h / 2f;
 

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -265,6 +265,8 @@ private void appendApplicationInfo(final Appendable report, final WalletApplicat
         report.append("Last block seen: " + lastBlockSeenHeight).append(" (")
                 .append(lastBlockSeenTime == null ? "time unknown" : Utils.dateTimeFormat(lastBlockSeenTime))
                 .append(")\n");
+        report.append("Best chain height ever: ").append(Integer.toString(config.getBestChainHeightEver()))
+                .append("\n");
 
         report.append("Databases:");
         for (final String db : application.databaseList())

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -244,10 +244,10 @@ public void autosaveWalletNow() {
         final Stopwatch watch = Stopwatch.createStarted();
         synchronized (getWalletLock) {
             if (walletFiles != null) {
-                watch.stop();
-                log.info("wallet saved to: '{}', took {}", walletFile, watch);
                 try {
                     walletFiles.saveNow();
+                    watch.stop();
+                    log.info("wallet saved to: '{}', took {}", walletFile, watch);
                 } catch (final IOException x) {
                     log.warn("problem with forced autosaving of wallet", x);
                     CrashReporter.saveBackgroundTrace(x, packageInfo);

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -222,9 +222,8 @@ public static boolean isPayToManyTransaction(final Transaction transaction) {
         return transaction.getOutputs().size() > 20;
     }
 
-    public static @Nullable
-    String uriToProvider(final Uri uri) {
-        if (!uri.getScheme().equals("content"))
+    public static @Nullable String uriToProvider(final Uri uri) {
+        if (uri == null || !uri.getScheme().equals("content"))
             return null;
         final String host = uri.getHost();
         if ("com.google.android.apps.docs.storage".equals(host) || "com.google.android.apps.docs.storage.legacy".equals(host))

File: wallet/src/de/schildbach/wallet/ui/WalletDisclaimerFragment.java
Patch:
@@ -76,7 +76,8 @@ public View onCreateView(final LayoutInflater inflater, final ViewGroup containe
 
     private void updateView() {
         final BlockchainState blockchainState = viewModel.getBlockchainState().getValue();
-        final boolean showDisclaimer = viewModel.getDisclaimerEnabled().getValue();
+        final Boolean disclaimerEnabled = viewModel.getDisclaimerEnabled().getValue();
+        final boolean showDisclaimer = disclaimerEnabled != null && disclaimerEnabled;
 
         int progressResId = 0;
         if (blockchainState != null) {

File: wallet/src/de/schildbach/wallet/ui/monitor/PeerListViewModel.java
Patch:
@@ -112,7 +112,7 @@ public static class HostnamesLiveData extends LiveData<Map<InetAddress, String>>
         private final Handler handler = new Handler();
 
         public HostnamesLiveData(final WalletApplication application) {
-            setValue(new HashMap<InetAddress, String>());
+            setValue(new HashMap<>());
         }
 
         public void reverseLookup(final InetAddress address) {

File: wallet/src/de/schildbach/wallet/service/BlockchainService.java
Patch:
@@ -137,7 +137,7 @@ public class BlockchainService extends LifecycleService {
     private long serviceCreatedAt;
     private boolean resetBlockchainOnShutdown = false;
 
-    private static final ActivityHistory activityHistory = new ActivityHistory();
+    private final ActivityHistory activityHistory = new ActivityHistory();
     private static final long BLOCKCHAIN_STATE_BROADCAST_THROTTLE_MS = DateUtils.SECOND_IN_MILLIS;
 
     public static final String ACTION_PEER_STATE = BlockchainService.class.getPackage().getName() + ".peer_state";

File: wallet/src/de/schildbach/wallet/ui/backup/RestoreWalletFromExternalDialogFragment.java
Patch:
@@ -208,7 +208,7 @@ private void handleRestore(final String password) {
         } else {
             final String message = "no backup data provided";
             viewModel.showFailureDialog.setValue(new Event<>(message));
-            log.info("problem restoring wallet: %s", message);
+            log.info("problem restoring wallet: {}", message);
         }
     }
 

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -28,6 +28,7 @@
 import java.util.Set;
 import java.util.TimeZone;
 
+import de.schildbach.wallet.BuildConfig;
 import org.bitcoinj.core.Transaction;
 import org.bitcoinj.core.TransactionOutput;
 import org.bitcoinj.core.Utils;
@@ -203,13 +204,14 @@ private void appendApplicationInfo(final Appendable report, final WalletApplicat
         report.append("Version: " + pi.versionName + " (" + pi.versionCode + ")\n");
         report.append("APK Hash: " + application.apkHash().toString() + "\n");
         report.append("Package: " + pi.packageName + "\n");
+        report.append("Flavor: " + BuildConfig.FLAVOR + "\n");
+        report.append("Build Type: " + BuildConfig.BUILD_TYPE + "\n");
         final String installerPackageName = Installer.installerPackageName(application);
         final Installer installer = Installer.from(installerPackageName);
         if (installer != null)
             report.append("Installer: " + installer.displayName + " (" + installerPackageName + ")\n");
         else
             report.append("Installer: unknown\n");
-        report.append("Test/Prod: " + (Constants.TEST ? "test" : "prod") + "\n");
         report.append("Timezone: " + TimeZone.getDefault().getID() + "\n");
         calendar.setTimeInMillis(System.currentTimeMillis());
         report.append("Current time: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -103,8 +103,8 @@ public void onCreate() {
         org.bitcoinj.core.Context.enableStrictMode();
         org.bitcoinj.core.Context.propagate(Constants.CONTEXT);
 
-        log.info("=== starting app using configuration: {}, {}", Constants.TEST ? "test" : "prod",
-                Constants.NETWORK_PARAMETERS.getId());
+        log.info("=== starting app using flavor: {}, build type: {}, network: {}", BuildConfig.FLAVOR,
+                BuildConfig.BUILD_TYPE, Constants.NETWORK_PARAMETERS.getId());
 
         super.onCreate();
 

File: wallet/src/de/schildbach/wallet/data/AppDatabase.java
Patch:
@@ -49,7 +49,7 @@ public static AppDatabase getDatabase(final Context context) {
         @Override
         public void migrate(final SupportSQLiteDatabase database) {
             database.execSQL(
-                    "CREATE TABLE address_book_new (address TEXT NOT NULL, label TEXT NULL, PRIMARY KEY(address))");
+                    "CREATE TABLE address_book_new (address TEXT NOT NULL, label TEXT, PRIMARY KEY(address))");
             database.execSQL(
                     "INSERT OR IGNORE INTO address_book_new (address, label) SELECT address, label FROM address_book");
             database.execSQL("DROP TABLE address_book");

File: wallet/src/de/schildbach/wallet/ui/CurrencySymbolDrawable.java
Patch:
@@ -17,6 +17,7 @@
 
 package de.schildbach.wallet.ui;
 
+import android.graphics.PixelFormat;
 import de.schildbach.wallet.Constants;
 
 import android.graphics.Canvas;
@@ -53,7 +54,7 @@ public int getIntrinsicWidth() {
 
     @Override
     public int getOpacity() {
-        return 0;
+        return PixelFormat.TRANSLUCENT;
     }
 
     @Override

File: wallet/src/de/schildbach/wallet/util/Crypto.java
Patch:
@@ -153,7 +153,7 @@ public static String encrypt(final byte[] plainTextAsBytes, final char[] passwor
     /**
      * Password based encryption using AES - CBC 256 bits.
      * 
-     * @param plainBytes
+     * @param plainTextAsBytes
      *            The bytes to encrypt
      * @param password
      *            The password to use for encryption
@@ -236,7 +236,7 @@ public static byte[] decryptBytes(final String textToDecode, final char[] passwo
      * 
      * @param bytesToDecode
      *            The bytes to decrypt
-     * @param passwordbThe
+     * @param password
      *            password to use for decryption
      * @return The decrypted bytes
      * @throws IOException

File: wallet/src/de/schildbach/wallet/service/UpgradeWalletService.java
Patch:
@@ -36,7 +36,7 @@
  * This service upgrades the wallet to a deterministic wallet. Use {@link #startUpgrade(Context)} to start the
  * process.
  * 
- * It will upgrade and then hand over to {@Link BlockchainService} to pre-generate the look-ahead keys. If the
+ * It will upgrade and then hand over to {@link BlockchainService} to pre-generate the look-ahead keys. If the
  * wallet is already upgraded, it will do nothing.
  * 
  * @author Andreas Schildbach

File: integration-android/src/de/schildbach/wallet/integration/android/BitcoinIntegration.java
Patch:
@@ -1,5 +1,5 @@
-/**
- * Copyright 2012-2014 the original author or authors.
+/*
+ * Copyright the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: sample-integration-android/src/de/schildbach/wallet/integration/sample/SampleActivity.java
Patch:
@@ -1,5 +1,5 @@
-/**
- * Copyright 2012-2015 the original author or authors.
+/*
+ * Copyright the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.

File: wallet/src/de/schildbach/wallet/Logging.java
Patch:
@@ -56,11 +56,11 @@ public static synchronized void init(final File filesDir) {
         filePattern.setPattern("%d{HH:mm:ss,UTC} [%thread] %logger{0} - %msg%n");
         filePattern.start();
 
-        final RollingFileAppender<ILoggingEvent> fileAppender = new RollingFileAppender<ILoggingEvent>();
+        final RollingFileAppender<ILoggingEvent> fileAppender = new RollingFileAppender<>();
         fileAppender.setContext(context);
         fileAppender.setFile(logFile.getAbsolutePath());
 
-        final TimeBasedRollingPolicy<ILoggingEvent> rollingPolicy = new TimeBasedRollingPolicy<ILoggingEvent>();
+        final TimeBasedRollingPolicy<ILoggingEvent> rollingPolicy = new TimeBasedRollingPolicy<>();
         rollingPolicy.setContext(context);
         rollingPolicy.setParent(fileAppender);
         rollingPolicy.setFileNamePattern(logDir.getAbsolutePath() + "/" + LOG_ROLLING_FILE_NAME_PATTERN);

File: wallet/src/de/schildbach/wallet/data/DynamicFeeLiveData.java
Patch:
@@ -134,7 +134,7 @@ private Map<FeeCategory, Coin> loadInBackground() {
     }
 
     private static Map<FeeCategory, Coin> parseFees(final InputStream is) throws IOException {
-        final Map<FeeCategory, Coin> dynamicFees = new HashMap<FeeCategory, Coin>();
+        final Map<FeeCategory, Coin> dynamicFees = new HashMap<>();
         String line = null;
         try (final BufferedReader reader = new BufferedReader(new InputStreamReader(is, StandardCharsets.US_ASCII))) {
             while (true) {

File: wallet/src/de/schildbach/wallet/data/ExchangeRatesProvider.java
Patch:
@@ -99,7 +99,7 @@ public boolean onCreate() {
 
         final ExchangeRate cachedExchangeRate = config.getCachedExchangeRate();
         if (cachedExchangeRate != null) {
-            exchangeRates = new TreeMap<String, ExchangeRate>();
+            exchangeRates = new TreeMap<>();
             exchangeRates.put(cachedExchangeRate.getCurrencyCode(), cachedExchangeRate);
         }
 
@@ -246,7 +246,7 @@ private Map<String, ExchangeRate> requestExchangeRates() {
             if (response.isSuccessful()) {
                 final String content = response.body().string();
                 final JSONObject head = new JSONObject(content);
-                final Map<String, ExchangeRate> rates = new TreeMap<String, ExchangeRate>();
+                final Map<String, ExchangeRate> rates = new TreeMap<>();
 
                 for (final Iterator<String> i = head.keys(); i.hasNext();) {
                     final String currencyCode = i.next();

File: wallet/src/de/schildbach/wallet/ui/InputParser.java
Patch:
@@ -280,7 +280,7 @@ public static PaymentIntent parsePaymentRequest(final byte[] serializedPaymentRe
                 throw new PaymentProtocolException.InvalidNetwork(
                         "cannot handle payment request network: " + paymentSession.getNetworkParameters());
 
-            final ArrayList<PaymentIntent.Output> outputs = new ArrayList<PaymentIntent.Output>(1);
+            final ArrayList<PaymentIntent.Output> outputs = new ArrayList<>(1);
             for (final PaymentProtocol.Output output : paymentSession.getOutputs())
                 outputs.add(PaymentIntent.Output.valueOf(output));
 

File: wallet/src/de/schildbach/wallet/ui/MaybeMaintenanceViewModel.java
Patch:
@@ -44,7 +44,7 @@ public class MaybeMaintenanceViewModel extends AndroidViewModel {
     private final WalletApplication application;
     private final WalletMaintenanceRecommendedLiveData walletMaintenanceRecommended;
     private final BlockchainStateLiveData blockchainState;
-    public final MediatorLiveData<Void> showDialog = new MediatorLiveData<Void>();
+    public final MediatorLiveData<Void> showDialog = new MediatorLiveData<>();
     private boolean dialogWasShown = false;
 
     public MaybeMaintenanceViewModel(final Application application) {

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogBuilder.java
Patch:
@@ -87,7 +87,7 @@ public ReportIssueDialogBuilder(final Activity activity, final int titleResId, f
     @Override
     public void onClick(final DialogInterface dialog, final int which) {
         final StringBuilder text = new StringBuilder();
-        final List<Uri> attachments = new ArrayList<Uri>();
+        final List<Uri> attachments = new ArrayList<>();
         final File cacheDir = activity.getCacheDir();
         final File reportDir = new File(cacheDir, "report");
         reportDir.mkdir();

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsViewModel.java
Patch:
@@ -157,7 +157,7 @@ public void run() {
                 final Map<String, AddressBookEntry> addressBook = AddressBookEntry
                         .asMap(WalletTransactionsViewModel.this.addressBook.getValue());
                 if (transactions != null && format != null && addressBook != null) {
-                    final List<Transaction> filteredTransactions = new ArrayList<Transaction>(transactions.size());
+                    final List<Transaction> filteredTransactions = new ArrayList<>(transactions.size());
                     final Wallet wallet = application.getWallet();
                     final Direction direction = WalletTransactionsViewModel.this.direction.getValue();
                     for (final Transaction tx : transactions) {

File: wallet/src/de/schildbach/wallet/ui/backup/RestoreWalletDialogFragment.java
Patch:
@@ -269,7 +269,7 @@ private void updateView() {
         else
             path = backupPath;
 
-        final List<File> files = new LinkedList<File>();
+        final List<File> files = new LinkedList<>();
 
         // external storage
         log.info("looking for backup files in '{}'", Constants.Files.EXTERNAL_WALLET_BACKUP_DIR);

File: wallet/src/de/schildbach/wallet/ui/monitor/BlockListViewModel.java
Patch:
@@ -155,7 +155,7 @@ public void loadTransactions() {
                 public void run() {
                     org.bitcoinj.core.Context.propagate(Constants.CONTEXT);
                     final Set<Transaction> transactions = wallet.getTransactions(false);
-                    final Set<Transaction> filteredTransactions = new HashSet<Transaction>(transactions.size());
+                    final Set<Transaction> filteredTransactions = new HashSet<>(transactions.size());
                     for (final Transaction tx : transactions) {
                         final Map<Sha256Hash, Integer> appearsIn = tx.getAppearsInHashes();
                         if (appearsIn != null && !appearsIn.isEmpty()) // TODO filter by updateTime

File: wallet/src/de/schildbach/wallet/ui/scan/CameraManager.java
Patch:
@@ -195,7 +195,7 @@ private static Camera.Size findBestPreviewSizeValue(final Camera.Parameters para
             return parameters.getPreviewSize();
 
         // sort by size, descending
-        final List<Camera.Size> supportedPreviewSizes = new ArrayList<Camera.Size>(rawSupportedSizes);
+        final List<Camera.Size> supportedPreviewSizes = new ArrayList<>(rawSupportedSizes);
         Collections.sort(supportedPreviewSizes, NUM_PIXEL_COMPARATOR);
 
         Camera.Size bestSize = null;

File: wallet/src/de/schildbach/wallet/ui/scan/ScanActivity.java
Patch:
@@ -428,7 +428,7 @@ public void onAutoFocus(final boolean success, final Camera camera) {
 
     private final Runnable fetchAndDecodeRunnable = new Runnable() {
         private final QRCodeReader reader = new QRCodeReader();
-        private final Map<DecodeHintType, Object> hints = new EnumMap<DecodeHintType, Object>(DecodeHintType.class);
+        private final Map<DecodeHintType, Object> hints = new EnumMap<>(DecodeHintType.class);
 
         @Override
         public void run() {

File: wallet/src/de/schildbach/wallet/ui/scan/ScannerView.java
Patch:
@@ -53,7 +53,7 @@ public class ScannerView extends View {
     private final int maskColor, maskResultColor;
     private final int laserColor;
     private final int dotColor, dotResultColor;
-    private final Map<float[], Long> dots = new HashMap<float[], Long>(16);
+    private final Map<float[], Long> dots = new HashMap<>(16);
     private Rect frame;
     private final Matrix matrix = new Matrix();
 

File: wallet/src/de/schildbach/wallet/util/Qr.java
Patch:
@@ -48,7 +48,7 @@ public class Qr {
 
     public static Bitmap bitmap(final String content) {
         try {
-            final Hashtable<EncodeHintType, Object> hints = new Hashtable<EncodeHintType, Object>();
+            final Hashtable<EncodeHintType, Object> hints = new Hashtable<>();
             hints.put(EncodeHintType.MARGIN, 0);
             hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.H);
             final BitMatrix result = QR_CODE_WRITER.encode(content, BarcodeFormat.QR_CODE, 0, 0, hints);

File: wallet/src/de/schildbach/wallet/Configuration.java
Patch:
@@ -182,15 +182,15 @@ public long getLastRestoreTime() {
     }
 
     public void updateLastRestoreTime() {
-        prefs.edit().putLong(PREFS_KEY_LAST_RESTORE, System.currentTimeMillis());
+        prefs.edit().putLong(PREFS_KEY_LAST_RESTORE, System.currentTimeMillis()).apply();
     }
 
     public long getLastBlockchainResetTime() {
         return prefs.getLong(PREFS_KEY_LAST_BLOCKCHAIN_RESET, 0);
     }
 
     public void updateLastBlockchainResetTime() {
-        prefs.edit().putLong(PREFS_KEY_LAST_BLOCKCHAIN_RESET, System.currentTimeMillis());
+        prefs.edit().putLong(PREFS_KEY_LAST_BLOCKCHAIN_RESET, System.currentTimeMillis()).apply();
     }
 
     public boolean getDisclaimerEnabled() {

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -201,6 +201,7 @@ private void appendApplicationInfo(final Appendable report, final WalletApplicat
         final Calendar calendar = new GregorianCalendar(UTC);
 
         report.append("Version: " + pi.versionName + " (" + pi.versionCode + ")\n");
+        report.append("APK Hash: " + application.apkHash().toString() + "\n");
         report.append("Package: " + pi.packageName + "\n");
         final String installerPackageName = Installer.installerPackageName(application);
         final Installer installer = Installer.from(installerPackageName);

File: wallet/src/de/schildbach/wallet/ui/DialogBuilder.java
Patch:
@@ -45,7 +45,7 @@ public static DialogBuilder warn(final Context context, final int titleResId) {
     }
 
     public DialogBuilder(final Context context) {
-        super(context, AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);
+        super(context, R.style.My_Theme_Dialog);
         this.customTitle = LayoutInflater.from(context).inflate(R.layout.dialog_title, null);
         this.iconView = (ImageView) customTitle.findViewById(android.R.id.icon);
         this.titleView = (TextView) customTitle.findViewById(android.R.id.title);

File: wallet/src/de/schildbach/wallet/util/ViewPagerTabs.java
Patch:
@@ -39,7 +39,7 @@
  * @author Andreas Schildbach
  */
 public class ViewPagerTabs extends View implements OnPageChangeListener {
-    private final List<String> labels = new ArrayList<String>();
+    private final List<String> labels = new ArrayList<>();
     private final Paint paint = new Paint();
     private int maxWidth = 0;
     @ColorInt

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -209,7 +209,7 @@ private void appendApplicationInfo(final Appendable report, final WalletApplicat
         report.append("Test/Prod: " + (Constants.TEST ? "test" : "prod") + "\n");
         report.append("Timezone: " + TimeZone.getDefault().getID() + "\n");
         calendar.setTimeInMillis(System.currentTimeMillis());
-        report.append("Time: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");
+        report.append("Current time: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");
         calendar.setTimeInMillis(WalletApplication.TIME_CREATE_APPLICATION);
         report.append(
                 "Time of launch: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");

File: wallet/src/de/schildbach/wallet/ui/backup/BackupWalletDialogFragment.java
Patch:
@@ -313,7 +313,7 @@ public void onChanged(final Wallet wallet) {
                             log.info("backed up wallet to: '{}'{}, {} characters written", targetUri,
                                     target != null ? " (" + target + ")" : "", cipherText.length());
                         } catch (final IOException x) {
-                            log.error("problem backing up wallet", x);
+                            log.error("problem backing up wallet to " + targetUri, x);
                             ErrorDialogFragment.showDialog(getFragmentManager(), x.toString());
                             return;
                         }
@@ -334,7 +334,7 @@ public void onChanged(final Wallet wallet) {
                             SuccessDialogFragment.showDialog(getFragmentManager(),
                                     target != null ? target : targetUri.toString());
                         } catch (final IOException x) {
-                            log.error("problem verifying backup", x);
+                            log.error("problem verifying backup from " + targetUri, x);
                             ErrorDialogFragment.showDialog(getFragmentManager(), x.toString());
                             return;
                         }

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -30,7 +30,6 @@
 import org.bitcoinj.core.VersionMessage;
 import org.bitcoinj.crypto.LinuxSecureRandom;
 import org.bitcoinj.crypto.MnemonicCode;
-import org.bitcoinj.script.Script;
 import org.bitcoinj.utils.Threading;
 import org.bitcoinj.wallet.UnreadableWalletException;
 import org.bitcoinj.wallet.Wallet;
@@ -212,7 +211,8 @@ private void loadWalletFromProtobuf() {
                             TimeUnit.MILLISECONDS, null);
                 } else {
                     final Stopwatch watch = Stopwatch.createStarted();
-                    wallet = Wallet.createDeterministic(Constants.NETWORK_PARAMETERS, Script.ScriptType.P2PKH);
+                    wallet = Wallet.createDeterministic(Constants.NETWORK_PARAMETERS,
+                            Constants.DEFAULT_OUTPUT_SCRIPT_TYPE);
                     walletFiles = wallet.autosaveToFile(walletFile, Constants.Files.WALLET_AUTOSAVE_DELAY_MS,
                             TimeUnit.MILLISECONDS, null);
                     autosaveWalletNow(); // persist...

File: wallet/src/de/schildbach/wallet/service/UpgradeWalletService.java
Patch:
@@ -17,7 +17,6 @@
 
 package de.schildbach.wallet.service;
 
-import org.bitcoinj.script.Script;
 import org.bitcoinj.wallet.Wallet;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -77,9 +76,9 @@ protected void onHandleIntent(final Intent intent) {
 
         final Wallet wallet = application.getWallet();
 
-        if (wallet.isDeterministicUpgradeRequired(Script.ScriptType.P2PKH)) {
+        if (wallet.isDeterministicUpgradeRequired(Constants.UPGRADE_OUTPUT_SCRIPT_TYPE)) {
             // upgrade wallet to a specific deterministic chain
-            wallet.upgradeToDeterministic(Script.ScriptType.P2PKH, null);
+            wallet.upgradeToDeterministic(Constants.UPGRADE_OUTPUT_SCRIPT_TYPE, null);
 
             // let other service pre-generate look-ahead keys
             BlockchainService.start(this, false);

File: wallet/src/de/schildbach/wallet/ui/TransactionsAdapter.java
Patch:
@@ -792,7 +792,7 @@ private void bindFee(final TransactionItem item) {
             extendFeeView.setVisibility(item.fee != null ? View.VISIBLE : View.GONE);
             feeView.setAlwaysSigned(true);
             feeView.setFormat(item.feeFormat);
-            feeView.setAmount(item.fee != null ? item.fee.negate() : null);
+            feeView.setAmount(item.fee != null ? item.fee : null);
         }
 
         private void bindValue(final TransactionItem item) {

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -124,9 +124,9 @@ protected String subject() {
                 final StringBuilder builder = new StringBuilder(subject).append(": ");
                 final PackageInfo pi = application.packageInfo();
                 builder.append(WalletApplication.versionLine(pi));
-                final Installer installer = Installer.from(application);
+                final String installer = Installer.installerPackageName(application);
                 if (installer != null)
-                    builder.append(", installer ").append(installer.displayName);
+                    builder.append(", installer ").append(installer);
                 builder.append(", android ").append(Build.VERSION.RELEASE);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                     builder.append(" (").append(Build.VERSION.SECURITY_PATCH).append(")");

File: wallet/src/de/schildbach/wallet/ui/WalletActivityViewModel.java
Patch:
@@ -43,6 +43,8 @@ public static enum EnterAnimationState {
     public final MutableLiveData<Event<Void>> showBackupWalletDialog = new MutableLiveData<>();
     public final MutableLiveData<Event<Void>> showRestoreWalletDialog = new MutableLiveData<>();
     public final MutableLiveData<Event<Void>> showEncryptKeysDialog = new MutableLiveData<>();
+    public final MutableLiveData<Event<Void>> showReportIssueDialog = new MutableLiveData<>();
+    public final MutableLiveData<Event<Void>> showReportCrashDialog = new MutableLiveData<>();
     public final MutableLiveData<EnterAnimationState> enterAnimation = new MutableLiveData<>();
     private boolean doAnimation, globalLayoutFinished, balanceLoadingFinished, addressLoadingFinished,
             transactionsLoadingFinished;

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsViewModel.java
Patch:
@@ -77,6 +77,7 @@ public enum Direction {
     public final MediatorLiveData<List<TransactionsAdapter.ListItem>> list = new MediatorLiveData<>();
     public final MutableLiveData<Event<Bitmap>> showBitmapDialog = new MutableLiveData<>();
     public final MutableLiveData<Event<Address>> showEditAddressBookEntryDialog = new MutableLiveData<>();
+    public final MutableLiveData<Event<String>> showReportIssueDialog = new MutableLiveData<>();
 
     public WalletTransactionsViewModel(final Application application) {
         super(application);

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -124,7 +124,7 @@ protected String subject() {
                 builder.append(", android ").append(Build.VERSION.RELEASE);
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)
                     builder.append(" (").append(Build.VERSION.SECURITY_PATCH).append(")");
-                builder.append(", ").append(Build.BRAND);
+                builder.append(", ").append(Build.BRAND).append(' ').append(Build.MODEL);
                 return builder.toString();
             }
 

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogFragment.java
Patch:
@@ -173,7 +173,7 @@ public void onDismiss(final DialogInterface dialog) {
         super.onDismiss(dialog);
     }
 
-    private static void appendApplicationInfo(final Appendable report, final WalletApplication application)
+    private void appendApplicationInfo(final Appendable report, final WalletApplication application)
             throws IOException {
         final PackageInfo pi = application.packageInfo();
         final Configuration configuration = application.getConfiguration();
@@ -201,7 +201,7 @@ private static void appendApplicationInfo(final Appendable report, final WalletA
                 + (lastBackupTime > 0 ? String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) : "none")
                 + "\n");
         report.append("Network: " + Constants.NETWORK_PARAMETERS.getId() + "\n");
-        final Wallet wallet = application.getWallet();
+        final Wallet wallet = viewModel.wallet.getValue();
         report.append("Encrypted: " + wallet.isEncrypted() + "\n");
         report.append("Keychain size: " + wallet.getKeyChainGroupSize() + "\n");
 

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -59,7 +59,6 @@
 import com.google.common.base.Stopwatch;
 
 import de.schildbach.wallet.Constants;
-import de.schildbach.wallet.R;
 import de.schildbach.wallet.service.BlockchainService;
 
 import android.content.Context;
@@ -69,7 +68,6 @@
 import android.text.SpannedString;
 import android.text.format.DateUtils;
 import android.text.style.TypefaceSpan;
-import android.widget.Toast;
 
 /**
  * @author Andreas Schildbach
@@ -216,7 +214,6 @@ public static Wallet restoreWalletFromAutoBackup(final Context context) {
                 throw new Error("inconsistent backup");
 
             BlockchainService.resetBlockchain(context);
-            Toast.makeText(context, R.string.toast_wallet_reset, Toast.LENGTH_LONG).show();
             log.info("wallet restored from backup: '" + Constants.Files.WALLET_KEY_BACKUP_PROTOBUF + "'");
             return wallet;
         } catch (final IOException | UnreadableWalletException x) {

File: wallet/src/de/schildbach/wallet/ui/scan/ScanActivity.java
Patch:
@@ -88,7 +88,7 @@ public final class ScanActivity extends AbstractWalletActivity
     public static final String INTENT_EXTRA_RESULT = "result";
 
     public static void startForResult(final Activity activity, @Nullable final View clickView, final int requestCode) {
-        if (clickView != null) {
+        if (clickView != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             final int[] clickViewLocation = new int[2];
             clickView.getLocationOnScreen(clickViewLocation);
             final Intent intent = new Intent(activity, ScanActivity.class);

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -437,6 +437,7 @@ public boolean onPrepareOptionsMenu(final Menu menu) {
             final MenuItem encryptKeysOption = menu.findItem(R.id.wallet_options_encrypt_keys);
             encryptKeysOption.setTitle(wallet.isEncrypted() ? R.string.wallet_options_encrypt_keys_change
                     : R.string.wallet_options_encrypt_keys_set);
+            encryptKeysOption.setVisible(true);
         }
 
         return true;

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -270,7 +270,8 @@ public ExchangeRatesLiveData(final WalletApplication application) {
                     ExchangeRatesProvider.QUERY_PARAM_Q, new String[] { "" }, null) {
                 @Override
                 public void deliverResult(final Cursor cursor) {
-                    setValue(cursor);
+                    if (cursor != null)
+                        setValue(cursor);
                 }
             };
         }

File: wallet/src/de/schildbach/wallet/ui/ScanActivity.java
Patch:
@@ -269,7 +269,7 @@ public void run() {
                 cameraHandler.post(fetchAndDecodeRunnable);
             } catch (final Exception x) {
                 log.info("problem opening camera", x);
-                viewModel.showProblemWarnDialog.call();
+                viewModel.showProblemWarnDialog.postCall();
             }
         }
 

File: wallet/src/de/schildbach/wallet/ui/monitor/BlockListFragment.java
Patch:
@@ -264,6 +264,8 @@ protected void onWalletActive(final Wallet wallet) {
 
         private void loadTransactions() {
             final Wallet wallet = getWallet();
+            if (wallet == null)
+                return;
             AsyncTask.execute(new Runnable() {
                 @Override
                 public void run() {

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsViewModel.java
Patch:
@@ -62,7 +62,7 @@ public enum Direction {
     }
 
     private final WalletApplication application;
-    private final TransactionsLiveData transactions;
+    public final TransactionsLiveData transactions;
     public final WalletLiveData wallet;
     private final TransactionsConfidenceLiveData transactionsConfidence;
     private final AddressBookLiveData addressBook;
@@ -189,7 +189,7 @@ public int compare(final Transaction tx1, final Transaction tx2) {
         }
     };
 
-    private static class TransactionsLiveData extends AbstractWalletLiveData<Set<Transaction>> {
+    public static class TransactionsLiveData extends AbstractWalletLiveData<Set<Transaction>> {
         private static final long THROTTLE_MS = 1000;
 
         public TransactionsLiveData(final WalletApplication application) {

File: wallet/src/de/schildbach/wallet/ui/EncryptKeysDialogFragment.java
Patch:
@@ -278,7 +278,7 @@ public void run() {
                         updateView();
 
                         if (state == State.DONE) {
-                            application.backupWallet();
+                            application.backupWallet(wallet);
                             delayedDismiss();
                         }
                     }

File: wallet/src/de/schildbach/wallet/ui/send/MaintenanceDialogFragment.java
Patch:
@@ -215,7 +215,7 @@ private void handleGo() {
                 @Override
                 protected void onSuccess(final KeyParameter encryptionKey, final boolean wasChanged) {
                     if (wasChanged)
-                        application.backupWallet();
+                        application.backupWallet(wallet);
                     doMaintenance(encryptionKey);
                 }
             }.deriveKey(wallet, passwordView.getText().toString().trim());

File: wallet/src/de/schildbach/wallet/ui/send/RaiseFeeDialogFragment.java
Patch:
@@ -252,7 +252,7 @@ private void handleGo() {
                 @Override
                 protected void onSuccess(final KeyParameter encryptionKey, final boolean wasChanged) {
                     if (wasChanged)
-                        application.backupWallet();
+                        application.backupWallet(wallet);
                     doRaiseFee(encryptionKey);
                 }
             }.deriveKey(wallet, passwordView.getText().toString().trim());

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -771,7 +771,7 @@ private void handleGo() {
                 @Override
                 protected void onSuccess(final KeyParameter encryptionKey, final boolean wasChanged) {
                     if (wasChanged)
-                        application.backupWallet();
+                        application.backupWallet(wallet);
                     signAndSendPayment(encryptionKey);
                 }
             }.deriveKey(wallet, privateKeyPasswordView.getText().toString().trim());

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsViewModel.java
Patch:
@@ -150,6 +150,7 @@ public void run() {
     private void maybeGeneratePaymentRequest() {
         final Address address = freshReceiveAddress.getValue();
         if (address != null) {
+            final String bluetoothMac = this.bluetoothMac.getValue();
             final String paymentUrl = bluetoothMac != null ? "bt:" + bluetoothMac : null;
             paymentRequest.setValue(PaymentProtocol.createPaymentRequest(Constants.NETWORK_PARAMETERS,
                     amount.getValue(), address, ownName.getValue(), paymentUrl, null).build().toByteArray());

File: wallet/src/de/schildbach/wallet/ui/backup/BackupWalletDialogFragment.java
Patch:
@@ -343,7 +343,7 @@ public static class ErrorDialogFragment extends DialogFragment {
         private static final String KEY_EXCEPTION_MESSAGE = "exception_message";
 
         public static void showDialog(final FragmentManager fm, final String exceptionMessage) {
-            final DialogFragment newFragment = new SuccessDialogFragment();
+            final DialogFragment newFragment = new ErrorDialogFragment();
             final Bundle args = new Bundle();
             args.putString(KEY_EXCEPTION_MESSAGE, exceptionMessage);
             newFragment.setArguments(args);

File: wallet/src/de/schildbach/wallet/ui/backup/BackupWalletViewModel.java
Patch:
@@ -18,6 +18,7 @@
 package de.schildbach.wallet.ui.backup;
 
 import de.schildbach.wallet.WalletApplication;
+import de.schildbach.wallet.data.SingleLiveEvent;
 import de.schildbach.wallet.data.WalletLiveData;
 
 import android.app.Application;
@@ -29,6 +30,7 @@
 public class BackupWalletViewModel extends AndroidViewModel {
     private final WalletApplication application;
     public final WalletLiveData wallet;
+    public final SingleLiveEvent<Void> triggerPasswordChange = new SingleLiveEvent<>();
 
     public BackupWalletViewModel(final Application application) {
         super(application);

File: wallet/src/de/schildbach/wallet/ui/WalletAddressFragment.java
Patch:
@@ -244,7 +244,7 @@ public Loader<Address> onCreateLoader(final int id, final Bundle args) {
 
         @Override
         public void onLoadFinished(final Loader<Address> loader, final Address currentAddress) {
-            if (!currentAddress.equals(currentAddressQrAddress)) {
+            if (currentAddressQrAddress == null || !currentAddress.equals(currentAddressQrAddress.address)) {
                 currentAddressQrAddress = new AddressAndLabel(currentAddress, config.getOwnName());
 
                 final String addressStr = BitcoinURI.convertToBitcoinURI(currentAddressQrAddress.address, null,

File: wallet/src/de/schildbach/wallet/ui/send/RequestWalletBalanceTask.java
Patch:
@@ -168,6 +168,8 @@ public void run() {
                     final JsonAdapter<JsonRpcResponse> responseAdapter = moshi.adapter(JsonRpcResponse.class);
                     final JsonRpcResponse response = responseAdapter.fromJson(source);
                     if (response.id == request.id) {
+                        if (response.result == null)
+                            throw new JsonDataException("empty response");
                         final Set<UTXO> utxos = new HashSet<>();
                         for (final JsonRpcResponse.Utxo responseUtxo : response.result) {
                             final Sha256Hash utxoHash = Sha256Hash.wrap(responseUtxo.tx_hash);

File: wallet/src/de/schildbach/wallet/ui/ArchiveBackupDialogFragment.java
Patch:
@@ -100,7 +100,8 @@ public void onClick(final DialogInterface dialog, final int which) {
 
     private void archiveWalletBackup(final File backupFile) {
         final ShareCompat.IntentBuilder builder = ShareCompat.IntentBuilder.from(activity);
-        builder.setSubject(getString(R.string.export_keys_dialog_mail_subject));
+        builder.setSubject(getString(R.string.export_keys_dialog_mail_subject)
+                + Constants.Files.EXTERNAL_WALLET_BACKUP_SUBJECT_SUFFIX);
         builder.setText(getString(R.string.export_keys_dialog_mail_text) + "\n\n"
                 + String.format(Constants.WEBMARKET_APP_URL, activity.getPackageName()) + "\n\n" + Constants.SOURCE_URL
                 + '\n');

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -266,7 +266,7 @@ public void run() {
                     } else {
                         final NotificationCompat.Builder notification = new NotificationCompat.Builder(
                                 BlockchainServiceImpl.this);
-                        notification.setSmallIcon(R.drawable.stat_notify_peers_24dp, Math.min(numPeers, 4));
+                        notification.setSmallIcon(R.drawable.stat_notify_peers, Math.min(numPeers, 4));
                         notification.setContentTitle(getString(R.string.app_name));
                         notification.setContentText(getString(R.string.notification_peers_connected_msg, numPeers));
                         notification.setContentIntent(PendingIntent.getActivity(BlockchainServiceImpl.this, 0,

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -386,7 +386,7 @@ private void handleReportIssue() {
                 R.string.report_issue_dialog_title_issue, R.string.report_issue_dialog_message_issue) {
             @Override
             protected CharSequence subject() {
-                return Constants.REPORT_SUBJECT_ISSUE + " " + application.packageInfo().versionName;
+                return Constants.REPORT_SUBJECT_ISSUE + ": " + WalletApplication.versionLine(application.packageInfo());
             }
 
             @Override
@@ -694,7 +694,7 @@ protected void handleException(final Exception x) {
                     R.string.report_issue_dialog_title_crash, R.string.report_issue_dialog_message_crash) {
                 @Override
                 protected CharSequence subject() {
-                    return Constants.REPORT_SUBJECT_CRASH + " " + packageInfo.versionName;
+                    return Constants.REPORT_SUBJECT_CRASH + ": " + WalletApplication.versionLine(packageInfo);
                 }
 
                 @Override

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsFragment.java
Patch:
@@ -366,7 +366,8 @@ private void handleReportIssue(final Transaction tx) {
                         R.string.report_issue_dialog_title_transaction, R.string.report_issue_dialog_message_issue) {
                     @Override
                     protected CharSequence subject() {
-                        return Constants.REPORT_SUBJECT_ISSUE + " " + application.packageInfo().versionName;
+                        return Constants.REPORT_SUBJECT_ISSUE + ": "
+                                + WalletApplication.versionLine(application.packageInfo());
                     }
 
                     @Override

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -123,8 +123,8 @@ protected void onCreate(final Bundle savedInstanceState) {
         setContentView(R.layout.wallet_content);
 
         final View exchangeRatesFragment = findViewById(R.id.wallet_main_twopanes_exchange_rates);
-        if (exchangeRatesFragment != null && !Constants.ENABLE_EXCHANGE_RATES)
-            exchangeRatesFragment.setVisibility(View.GONE);
+        if (exchangeRatesFragment != null)
+            exchangeRatesFragment.setVisibility(Constants.ENABLE_EXCHANGE_RATES ? View.VISIBLE : View.GONE);
 
         if (savedInstanceState == null) {
             final View contentView = findViewById(android.R.id.content);

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -493,9 +493,9 @@ private void prepareRestoreWalletDialog(final Dialog dialog) {
         final List<File> files = new LinkedList<File>();
 
         // external storage
-        if (Constants.Files.EXTERNAL_WALLET_BACKUP_DIR.exists()
-                && Constants.Files.EXTERNAL_WALLET_BACKUP_DIR.isDirectory())
-            for (final File file : Constants.Files.EXTERNAL_WALLET_BACKUP_DIR.listFiles())
+        final File[] externalFiles = Constants.Files.EXTERNAL_WALLET_BACKUP_DIR.listFiles();
+        if (externalFiles != null)
+            for (final File file : externalFiles)
                 if (Crypto.OPENSSL_FILE_FILTER.accept(file))
                     files.add(file);
 

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -263,8 +263,9 @@ private static void appendDir(final Appendable report, final File file, final in
         formatter.format(Locale.US, "%tF %tT %8d  %s\n", calendar, calendar, file.length(), file.getName());
         formatter.close();
 
-        if (file.isDirectory())
-            for (final File f : file.listFiles())
+        final File[] files = file.listFiles();
+        if (files != null)
+            for (final File f : files)
                 appendDir(report, f, indent + 1);
     }
 

File: wallet/src/de/schildbach/wallet/util/Bluetooth.java
Patch:
@@ -65,7 +65,7 @@ public static String getAddress(final BluetoothAdapter adapter) {
             if (mService == null)
                 return null;
             return (String) mService.getClass().getMethod("getAddress").invoke(mService);
-        } catch (final ReflectiveOperationException x) {
+        } catch (final Exception x) {
             throw new RuntimeException(x);
         }
     }

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -176,6 +176,7 @@ public final static class Files {
         HTTP_CLIENT.setFollowRedirects(false);
         HTTP_CLIENT.setFollowSslRedirects(true);
         HTTP_CLIENT.setConnectTimeout(15, TimeUnit.SECONDS);
+        HTTP_CLIENT.setWriteTimeout(15, TimeUnit.SECONDS);
         HTTP_CLIENT.setReadTimeout(15, TimeUnit.SECONDS);
     }
 }

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -77,6 +77,7 @@
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
 import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
 import android.net.Uri;
 import android.os.Binder;
 import android.os.Handler;
@@ -332,7 +333,8 @@ public void onReceive(final Context context, final Intent intent)
 
 			if (ConnectivityManager.CONNECTIVITY_ACTION.equals(action))
 			{
-				final boolean hasConnectivity = !intent.getBooleanExtra(ConnectivityManager.EXTRA_NO_CONNECTIVITY, false);
+				final NetworkInfo networkInfo = (NetworkInfo) intent.getParcelableExtra(ConnectivityManager.EXTRA_NETWORK_INFO);
+				final boolean hasConnectivity = networkInfo.isConnected();
 				log.info("network is " + (hasConnectivity ? "up" : "down"));
 
 				if (hasConnectivity)

File: wallet/src/de/schildbach/wallet/ui/WalletTransactionsFragment.java
Patch:
@@ -566,10 +566,11 @@ private void updateView()
 
 	private Warning warning()
 	{
+		final int storageEncryptionStatus = devicePolicyManager.getStorageEncryptionStatus();
 		if (config.remindBackup())
 			return Warning.BACKUP;
-		else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP
-				&& devicePolicyManager.getStorageEncryptionStatus() != DevicePolicyManager.ENCRYPTION_STATUS_ACTIVE)
+		else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && (storageEncryptionStatus == DevicePolicyManager.ENCRYPTION_STATUS_INACTIVE
+				|| storageEncryptionStatus == DevicePolicyManager.ENCRYPTION_STATUS_ACTIVE_DEFAULT_KEY))
 			return Warning.STORAGE_ENCRYPTION;
 		else
 			return null;

File: wallet/src/de/schildbach/wallet/ui/send/RequestWalletBalanceTask.java
Patch:
@@ -164,7 +164,7 @@ public void run()
 
 							final TransactionOutput output = new TransactionOutput(Constants.NETWORK_PARAMETERS, tx, uxtoValue, uxtoScriptBytes);
 
-							if (tx.getOutputs().size() >= uxtoIndex)
+							if (tx.getOutputs().size() > uxtoIndex)
 							{
 								// Work around not being able to replace outputs on transactions
 								final List<TransactionOutput> outputs = new ArrayList<TransactionOutput>(tx.getOutputs());

File: wallet/src/de/schildbach/wallet/util/Bluetooth.java
Patch:
@@ -46,7 +46,8 @@ public static boolean canListen(final BluetoothAdapter adapter)
 			return false;
 		if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR2) // earlier versions cannot reliably listen
 			return false;
-		if (MARSHMELLOW_FAKE_MAC.equals(adapter.getAddress()))
+		final String address = adapter.getAddress();
+		if (address == null || MARSHMELLOW_FAKE_MAC.equals(address))
 			return false;
 		return true;
 	}

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -85,6 +85,8 @@ public class WalletApplication extends Application
 
 	public static final int VERSION_CODE_SHOW_BACKUP_REMINDER = 205;
 
+	public static final long TIME_CREATE_APPLICATION = System.currentTimeMillis();
+
 	private static final Logger log = LoggerFactory.getLogger(WalletApplication.class);
 
 	@Override

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -63,8 +63,6 @@ public class CrashReporter
 	private static final String BACKGROUND_TRACES_FILENAME = "background.trace";
 	private static final String CRASH_TRACE_FILENAME = "crash.trace";
 
-	private static final long TIME_CREATE_APPLICATION = System.currentTimeMillis();
-
 	private static File backgroundTracesFile;
 	private static File crashTraceFile;
 
@@ -228,7 +226,7 @@ public static void appendApplicationInfo(final Appendable report, final WalletAp
 		report.append("Timezone: " + TimeZone.getDefault().getID() + "\n");
 		calendar.setTimeInMillis(System.currentTimeMillis());
 		report.append("Time: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");
-		calendar.setTimeInMillis(TIME_CREATE_APPLICATION);
+		calendar.setTimeInMillis(WalletApplication.TIME_CREATE_APPLICATION);
 		report.append("Time of launch: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");
 		calendar.setTimeInMillis(pi.lastUpdateTime);
 		report.append("Time of last update: " + String.format(Locale.US, "%tF %tT %tZ", calendar, calendar, calendar) + "\n");

File: wallet/src/de/schildbach/wallet/ui/preference/AboutFragment.java
Patch:
@@ -25,8 +25,10 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.preference.PreferenceFragment;
+
 import de.schildbach.wallet.Constants;
 import de.schildbach.wallet.WalletApplication;
+import de.schildbach.wallet_test.BuildConfig;
 import de.schildbach.wallet_test.R;
 
 /**
@@ -59,7 +61,7 @@ public void onCreate(final Bundle savedInstanceState)
 
 		addPreferencesFromResource(R.xml.preference_about);
 
-		findPreference(KEY_ABOUT_VERSION).setSummary(application.packageInfo().versionName);
+		findPreference(KEY_ABOUT_VERSION).setSummary(application.packageInfo().versionName + (BuildConfig.DEBUG ? " (debuggable)" : ""));
 		Intent marketIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Constants.MARKET_APP_URL, activity.getPackageName())));
 		if (packageManager.resolveActivity(marketIntent, 0) == null)
 			marketIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Constants.WEBMARKET_APP_URL, activity.getPackageName())));

File: wallet/src/de/schildbach/wallet/util/Bluetooth.java
Patch:
@@ -37,18 +37,18 @@ public class Bluetooth
 	public static final String CLASSIC_PAYMENT_PROTOCOL_NAME = "Bitcoin classic payment protocol (deprecated)";
 	/** This URI parameter holds the MAC address for the deprecated pre-BIP70 payment protocol. */
 	public static final String MAC_URI_PARAM = "bt";
-	/** Early Android 4 versions cannot reliably enable listening. */
-	private static boolean ENABLE_BLUETOOTH_LISTENING = Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2;
 	/** Android 6 uses this MAC address instead of the real one. */
 	private static final String MARSHMELLOW_FAKE_MAC = "02:00:00:00:00:00";
 
 	public static boolean canListen(final BluetoothAdapter adapter)
 	{
 		if (adapter == null)
 			return false;
+		if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN_MR2) // earlier versions cannot reliably listen
+			return false;
 		if (MARSHMELLOW_FAKE_MAC.equals(adapter.getAddress()))
 			return false;
-		return ENABLE_BLUETOOTH_LISTENING;
+		return true;
 	}
 
 	public static String compressMac(final String mac)

File: wallet/src/de/schildbach/wallet/ui/ScanActivity.java
Patch:
@@ -36,6 +36,7 @@
 import android.graphics.RectF;
 import android.graphics.SurfaceTexture;
 import android.hardware.Camera;
+import android.hardware.Camera.CameraInfo;
 import android.hardware.Camera.PreviewCallback;
 import android.os.Build;
 import android.os.Bundle;
@@ -252,14 +253,15 @@ public void run()
 				final Rect framingRect = cameraManager.getFrame();
 				final RectF framingRectInPreview = new RectF(cameraManager.getFramePreview());
 				framingRectInPreview.offsetTo(0, 0);
+				final int facing = cameraManager.getFacing();
 				final int orientation = cameraManager.getOrientation();
 
 				runOnUiThread(new Runnable()
 				{
 					@Override
 					public void run()
 					{
-						scannerView.setFraming(framingRect, framingRectInPreview, orientation == 90);
+						scannerView.setFraming(framingRect, framingRectInPreview, orientation == 90 ^ facing == CameraInfo.CAMERA_FACING_FRONT);
 					}
 				});
 

File: wallet/src/de/schildbach/wallet/ui/ScanActivity.java
Patch:
@@ -252,13 +252,14 @@ public void run()
 				final Rect framingRect = cameraManager.getFrame();
 				final RectF framingRectInPreview = new RectF(cameraManager.getFramePreview());
 				framingRectInPreview.offsetTo(0, 0);
+				final int orientation = cameraManager.getOrientation();
 
 				runOnUiThread(new Runnable()
 				{
 					@Override
 					public void run()
 					{
-						scannerView.setFraming(framingRect, framingRectInPreview);
+						scannerView.setFraming(framingRect, framingRectInPreview, orientation == 90);
 					}
 				});
 

File: wallet/src/de/schildbach/wallet/ui/ScannerView.java
Patch:
@@ -82,10 +82,11 @@ public ScannerView(final Context context, final AttributeSet attrs)
 		dotPaint.setAntiAlias(true);
 	}
 
-	public void setFraming(final Rect frame, final RectF framePreview)
+	public void setFraming(final Rect frame, final RectF framePreview, final boolean rotate180)
 	{
 		this.frame = frame;
 		matrix.setRectToRect(framePreview, new RectF(frame), ScaleToFit.FILL);
+		matrix.postScale(rotate180 ? 1 : -1, rotate180 ? 1 : -1, frame.exactCenterX(), frame.exactCenterY());
 
 		invalidate();
 	}

File: wallet/src/de/schildbach/wallet/ui/ScanActivity.java
Patch:
@@ -113,7 +113,6 @@ protected void onResume()
 		final SurfaceView surfaceView = (SurfaceView) findViewById(R.id.scan_activity_preview);
 		surfaceHolder = surfaceView.getHolder();
 		surfaceHolder.addCallback(this);
-		surfaceHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
 	}
 
 	@Override

File: wallet/src/de/schildbach/wallet/ui/send/RequestWalletBalanceTask.java
Patch:
@@ -86,6 +86,8 @@ public void requestWalletBalance(final Address... addresses)
 			@Override
 			public void run()
 			{
+				org.bitcoinj.core.Context.propagate(Constants.CONTEXT);
+
 				final StringBuilder url = new StringBuilder(Constants.BITEASY_API_URL);
 				url.append("outputs");
 				url.append("?per_page=MAX");

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -1140,6 +1140,9 @@ private void setState(final State state)
 
 	private void updateView()
 	{
+		if (!isResumed())
+			return;
+
 		if (paymentIntent != null)
 		{
 			final MonetaryFormat btcFormat = config.getFormat();

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -217,7 +217,7 @@ public static void appendApplicationInfo(final Appendable report, final WalletAp
 		report.append("Encrypted: " + wallet.isEncrypted() + "\n");
 		report.append("Keychain size: " + wallet.getKeychainSize() + "\n");
 		final DevicePolicyManager devicePolicyManager = (DevicePolicyManager) application.getSystemService(Context.DEVICE_POLICY_SERVICE);
-		report.append("Storage Encryption Status: " + devicePolicyManager.getStorageEncryptionStatus());
+		report.append("Storage Encryption Status: " + devicePolicyManager.getStorageEncryptionStatus() + "\n");
 
 		final Set<Transaction> transactions = wallet.getTransactions(true);
 		int numInputs = 0;

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -39,6 +39,7 @@
 import org.slf4j.LoggerFactory;
 
 import android.app.ActivityManager;
+import android.app.admin.DevicePolicyManager;
 import android.content.Context;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
@@ -215,6 +216,8 @@ public static void appendApplicationInfo(final Appendable report, final WalletAp
 		final Wallet wallet = application.getWallet();
 		report.append("Encrypted: " + wallet.isEncrypted() + "\n");
 		report.append("Keychain size: " + wallet.getKeychainSize() + "\n");
+		final DevicePolicyManager devicePolicyManager = (DevicePolicyManager) application.getSystemService(Context.DEVICE_POLICY_SERVICE);
+		report.append("Storage Encryption Status: " + devicePolicyManager.getStorageEncryptionStatus());
 
 		final Set<Transaction> transactions = wallet.getTransactions(true);
 		int numInputs = 0;

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -377,7 +377,7 @@ public void bindView(final View view, final Context context, final Cursor cursor
 			currencyCodeView.setText(exchangeRate.getCurrencyCode());
 
 			final CurrencyTextView rateView = (CurrencyTextView) view.findViewById(R.id.exchange_rate_row_rate);
-			rateView.setFormat(Constants.LOCAL_FORMAT);
+			rateView.setFormat(!rateBase.isLessThan(Coin.COIN) ? Constants.LOCAL_FORMAT.minDecimals(2) : Constants.LOCAL_FORMAT.minDecimals(4));
 			rateView.setAmount(exchangeRate.rate.coinToFiat(rateBase));
 
 			final CurrencyTextView walletView = (CurrencyTextView) view.findViewById(R.id.exchange_rate_row_balance);

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -815,7 +815,7 @@ private void handleCancel()
 		activity.finish();
 	}
 
-	private boolean isPayerPlausible()
+	private boolean isPayeePlausible()
 	{
 		if (paymentIntent.hasOutputs())
 			return true;
@@ -846,12 +846,12 @@ private boolean isPasswordPlausible()
 
 	private boolean everythingPlausible()
 	{
-		return state == State.INPUT && isPayerPlausible() && isAmountPlausible() && isPasswordPlausible();
+		return state == State.INPUT && isPayeePlausible() && isAmountPlausible() && isPasswordPlausible();
 	}
 
 	private void requestFocusFirst()
 	{
-		if (!isPayerPlausible())
+		if (!isPayeePlausible())
 			receivingAddressView.requestFocus();
 		else if (!isAmountPlausible())
 			amountCalculatorLink.requestFocus();

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -1064,7 +1064,7 @@ private Coin feePerKb()
 		if (feeCategory == FeeCategory.ECONOMIC)
 			return SendRequest.DEFAULT_FEE_PER_KB;
 		else if (feeCategory == FeeCategory.NORMAL)
-			return SendRequest.DEFAULT_FEE_PER_KB.multiply(5);
+			return SendRequest.DEFAULT_FEE_PER_KB.multiply(10);
 		else if (feeCategory == FeeCategory.PRIORITY)
 			return SendRequest.DEFAULT_FEE_PER_KB.multiply(20);
 		else

File: wallet/src/de/schildbach/wallet/ui/EncryptKeysDialogFragment.java
Patch:
@@ -192,6 +192,7 @@ public void onClick(final View v)
 
 				showView = (CheckBox) dialog.findViewById(R.id.encrypt_keys_dialog_show);
 				showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(newPasswordView, oldPasswordView));
+				showView.setChecked(true);
 
 				EncryptKeysDialogFragment.this.dialog = dialog;
 				updateView();

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -1163,8 +1163,6 @@ else if (validatedAddress.label != null)
 
 			receivingAddressView.setEnabled(state == State.INPUT);
 
-			receivingStaticView.setEnabled(state == State.INPUT);
-
 			amountCalculatorLink.setEnabled(state == State.INPUT && paymentIntent.mayEditAmount());
 
 			final boolean directPaymentVisible;
@@ -1289,10 +1287,10 @@ else if (state == State.FAILED)
 			final int activeAmountViewId = amountCalculatorLink.activeTextView().getId();
 			receivingAddressView.setNextFocusDownId(activeAmountViewId);
 			receivingAddressView.setNextFocusForwardId(activeAmountViewId);
-			receivingStaticView.setNextFocusDownId(activeAmountViewId);
 			amountCalculatorLink.setNextFocusId(privateKeyPasswordViewVisible ? R.id.send_coins_private_key_password : R.id.send_coins_go);
 			privateKeyPasswordView.setNextFocusUpId(activeAmountViewId);
 			privateKeyPasswordView.setNextFocusDownId(R.id.send_coins_go);
+			privateKeyPasswordView.setNextFocusForwardId(R.id.send_coins_go);
 			viewGo.setNextFocusUpId(privateKeyPasswordViewVisible ? R.id.send_coins_private_key_password : activeAmountViewId);
 		}
 		else

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -275,8 +275,6 @@ public void run()
 					if (!isResumed())
 						return;
 
-					sentTransactionAdapter.notifyDataSetChanged();
-
 					final TransactionConfidence confidence = sentTransaction.getConfidence();
 					final ConfidenceType confidenceType = confidence.getConfidenceType();
 					final int numBroadcastPeers = confidence.numBroadcastPeers();
@@ -298,6 +296,8 @@ else if (numBroadcastPeers > 1 || confidenceType == ConfidenceType.BUILDING)
 							RingtoneManager.getRingtone(activity, Uri.parse("android.resource://" + activity.getPackageName() + "/" + soundResId))
 									.play();
 					}
+
+					updateView();
 				}
 			});
 		}

File: wallet/src/de/schildbach/wallet/ui/send/SweepWalletFragment.java
Patch:
@@ -362,8 +362,6 @@ public void run()
 					if (!isResumed())
 						return;
 
-					sweepTransactionAdapter.notifyDataSetChanged();
-
 					final TransactionConfidence confidence = sentTransaction.getConfidence();
 					final TransactionConfidence.ConfidenceType confidenceType = confidence.getConfidenceType();
 					final int numBroadcastPeers = confidence.numBroadcastPeers();
@@ -385,6 +383,8 @@ else if (numBroadcastPeers > 1 || confidenceType == TransactionConfidence.Confid
 							RingtoneManager.getRingtone(activity, Uri.parse("android.resource://" + activity.getPackageName() + "/" + soundResId))
 									.play();
 					}
+
+					updateView();
 				}
 			});
 		}

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -1399,7 +1399,7 @@ else if (paymentIntent.isHttpPaymentUrl())
 
 				if (paymentIntent.hasPaymentRequestUrl())
 				{
-					if (paymentIntent.isBluetoothPaymentRequestUrl() && !Constants.BUG_OPENSSL_HEARTBLEED)
+					if (paymentIntent.isBluetoothPaymentRequestUrl())
 					{
 						if (bluetoothAdapter.isEnabled())
 							requestPaymentRequest();
@@ -1408,7 +1408,7 @@ else if (paymentIntent.isHttpPaymentUrl())
 							startActivityForResult(new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE),
 									REQUEST_CODE_ENABLE_BLUETOOTH_FOR_PAYMENT_REQUEST);
 					}
-					else if (paymentIntent.isHttpPaymentRequestUrl())
+					else if (paymentIntent.isHttpPaymentRequestUrl() && !Constants.BUG_OPENSSL_HEARTBLEED)
 					{
 						requestPaymentRequest();
 					}

File: wallet/src/de/schildbach/wallet/ui/preference/DiagnosticsFragment.java
Patch:
@@ -18,6 +18,7 @@
 package de.schildbach.wallet.ui.preference;
 
 import java.io.IOException;
+import java.util.Locale;
 
 import org.bitcoinj.crypto.DeterministicKey;
 import org.slf4j.Logger;
@@ -157,7 +158,7 @@ public void onClick(final DialogInterface dialog, final int which)
 	private void handleExtendedPublicKey()
 	{
 		final DeterministicKey extendedKey = application.getWallet().getWatchingKey();
-		final String xpub = String.format("%s?c=%d&h=bip32", extendedKey.serializePubB58(), extendedKey.getCreationTimeSeconds());
+		final String xpub = String.format(Locale.US, "%s?c=%d&h=bip32", extendedKey.serializePubB58(), extendedKey.getCreationTimeSeconds());
 		ExtendedPublicKeyFragment.show(getFragmentManager(), (CharSequence) xpub);
 	}
 }

File: wallet/src/de/schildbach/wallet/ui/TransactionsAdapter.java
Patch:
@@ -363,8 +363,8 @@ private void bind(final Transaction tx)
 			final int textColor, valueColor;
 			if (confidenceType == ConfidenceType.DEAD)
 			{
-				textColor = Color.RED;
-				valueColor = Color.RED;
+				textColor = colorError;
+				valueColor = colorError;
 			}
 			else if (DefaultCoinSelector.isSelectable(tx))
 			{
@@ -407,7 +407,7 @@ else if (confidenceType == ConfidenceType.DEAD)
 				confidenceTextualView.setVisibility(View.VISIBLE);
 
 				confidenceTextualView.setText(CONFIDENCE_SYMBOL_DEAD);
-				confidenceTextualView.setTextColor(Color.RED);
+				confidenceTextualView.setTextColor(colorError);
 			}
 			else
 			{

File: wallet/src/de/schildbach/wallet/Configuration.java
Patch:
@@ -43,6 +43,7 @@ public class Configuration
 	public static final String PREFS_KEY_EXCHANGE_CURRENCY = "exchange_currency";
 	public static final String PREFS_KEY_TRUSTED_PEER = "trusted_peer";
 	public static final String PREFS_KEY_TRUSTED_PEER_ONLY = "trusted_peer_only";
+	public static final String PREFS_KEY_DATA_USAGE = "data_usage";
 	public static final String PREFS_KEY_DISCLAIMER = "disclaimer";
 	private static final String PREFS_KEY_LABS_QR_PAYMENT_REQUEST = "labs_qr_payment_request";
 

File: wallet/src/de/schildbach/wallet/Configuration.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.Coin;
 import org.bitcoinj.utils.Fiat;
 import org.bitcoinj.utils.MonetaryFormat;
@@ -64,7 +62,7 @@ public class Configuration
 
 	private static final Logger log = LoggerFactory.getLogger(Configuration.class);
 
-	public Configuration(@Nonnull final SharedPreferences prefs)
+	public Configuration(final SharedPreferences prefs)
 	{
 		this.prefs = prefs;
 

File: wallet/src/de/schildbach/wallet/FileAttachmentProvider.java
Patch:
@@ -20,8 +20,6 @@
 import java.io.File;
 import java.io.FileNotFoundException;
 
-import javax.annotation.Nonnull;
-
 import android.content.ContentProvider;
 import android.content.ContentValues;
 import android.database.Cursor;
@@ -36,7 +34,7 @@
  */
 public final class FileAttachmentProvider extends ContentProvider
 {
-	public static Uri contentUri(@Nonnull final String packageName, final File file)
+	public static Uri contentUri(final String packageName, final File file)
 	{
 		return Uri.parse("content://" + packageName + ".file_attachment" + file.getAbsolutePath());
 	}

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -34,7 +34,6 @@
 import java.util.concurrent.atomic.AtomicLong;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
 import org.bitcoinj.core.AbstractPeerEventListener;
@@ -176,7 +175,7 @@ public void onCoinsSent(final Wallet wallet, final Transaction tx, final Coin pr
 		}
 	};
 
-	private void notifyCoinsReceived(@Nullable final Address address, @Nonnull final Coin amount)
+	private void notifyCoinsReceived(@Nullable final Address address, final Coin amount)
 	{
 		if (notificationCount == 1)
 			nm.cancel(NOTIFICATION_ID_COINS_RECEIVED);

File: wallet/src/de/schildbach/wallet/service/UpgradeWalletService.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet.service;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.Wallet;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -38,7 +36,7 @@
  */
 public final class UpgradeWalletService extends IntentService
 {
-	public static void startUpgrade(@Nonnull final Context context)
+	public static void startUpgrade(final Context context)
 	{
 		context.startService(new Intent(context, UpgradeWalletService.class));
 	}

File: wallet/src/de/schildbach/wallet/ui/AddressAndLabel.java
Patch:
@@ -17,7 +17,6 @@
 
 package de.schildbach.wallet.ui;
 
-import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
 import org.bitcoinj.core.Address;
@@ -36,8 +35,8 @@ public class AddressAndLabel implements Parcelable
 	public final Address address;
 	public final String label;
 
-	public AddressAndLabel(@Nonnull final NetworkParameters addressParams, @Nonnull final String address, @Nullable final String label)
-			throws WrongNetworkException, AddressFormatException
+	public AddressAndLabel(final NetworkParameters addressParams, final String address, @Nullable final String label) throws WrongNetworkException,
+			AddressFormatException
 	{
 		this.address = new Address(addressParams, address);
 		this.label = label;

File: wallet/src/de/schildbach/wallet/ui/BackupWalletDialogFragment.java
Patch:
@@ -28,7 +28,6 @@
 import java.util.TimeZone;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 
 import org.bitcoinj.core.Wallet;
 import org.bitcoinj.store.WalletProtobufSerializer;
@@ -255,7 +254,7 @@ else if (passwordLength < 10)
 		positiveButton.setEnabled(hasPassword && hasPasswordAgain);
 	}
 
-	private void backupWallet(@Nonnull final String password)
+	private void backupWallet(final String password)
 	{
 		Constants.Files.EXTERNAL_WALLET_BACKUP_DIR.mkdirs();
 		final DateFormat dateFormat = Iso8601Format.newDateFormat();

File: wallet/src/de/schildbach/wallet/ui/BlockListFragment.java
Patch:
@@ -25,8 +25,6 @@
 import java.util.Set;
 import java.util.concurrent.RejectedExecutionException;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.Block;
 import org.bitcoinj.core.Sha256Hash;
 import org.bitcoinj.core.StoredBlock;
@@ -257,7 +255,7 @@ public void clear()
 			adapter.notifyDataSetChanged();
 		}
 
-		public void replace(@Nonnull final Collection<StoredBlock> blocks)
+		public void replace(final Collection<StoredBlock> blocks)
 		{
 			this.blocks.clear();
 			this.blocks.addAll(blocks);

File: wallet/src/de/schildbach/wallet/ui/CurrencyAmountView.java
Patch:
@@ -18,7 +18,6 @@
 package de.schildbach.wallet.ui;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
 import org.bitcoinj.core.Coin;
@@ -187,15 +186,15 @@ public void setValidateAmount(final boolean validateAmount)
 		this.validateAmount = validateAmount;
 	}
 
-	public void setContextButton(final int contextButtonResId, @Nonnull final OnClickListener contextButtonClickListener)
+	public void setContextButton(final int contextButtonResId, final OnClickListener contextButtonClickListener)
 	{
 		this.contextButtonDrawable = getContext().getResources().getDrawable(contextButtonResId);
 		this.contextButtonClickListener = contextButtonClickListener;
 
 		updateAppearance();
 	}
 
-	public void setListener(@Nonnull final Listener listener)
+	public void setListener(final Listener listener)
 	{
 		this.listener = listener;
 	}

File: wallet/src/de/schildbach/wallet/ui/CurrencySymbolDrawable.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet.ui;
 
-import javax.annotation.Nonnull;
-
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
@@ -34,7 +32,7 @@ public final class CurrencySymbolDrawable extends Drawable
 	private final String symbol;
 	private final float y;
 
-	public CurrencySymbolDrawable(@Nonnull final String symbol, final float textSize, final int color, final float y)
+	public CurrencySymbolDrawable(final String symbol, final float textSize, final int color, final float y)
 	{
 		paint.setColor(color);
 		paint.setAntiAlias(true);

File: wallet/src/de/schildbach/wallet/ui/FileAdapter.java
Patch:
@@ -20,8 +20,6 @@
 import java.io.File;
 import java.util.List;
 
-import javax.annotation.Nonnull;
-
 import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -46,7 +44,7 @@ public FileAdapter(final Context context)
 		inflater = LayoutInflater.from(context);
 	}
 
-	public void setFiles(@Nonnull final List<File> files)
+	public void setFiles(final List<File> files)
 	{
 		clear();
 		for (final File file : files)

File: wallet/src/de/schildbach/wallet/ui/ImportDialogButtonEnablerListener.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet.ui;
 
-import javax.annotation.Nonnull;
-
 import android.app.AlertDialog;
 import android.content.DialogInterface;
 import android.text.Editable;
@@ -37,7 +35,7 @@ public class ImportDialogButtonEnablerListener implements TextWatcher, OnItemSel
 	private final TextView passwordView;
 	private final AlertDialog dialog;
 
-	public ImportDialogButtonEnablerListener(@Nonnull final TextView passwordView, @Nonnull final AlertDialog dialog)
+	public ImportDialogButtonEnablerListener(final TextView passwordView, final AlertDialog dialog)
 	{
 		this.passwordView = passwordView;
 		this.dialog = dialog;

File: wallet/src/de/schildbach/wallet/ui/RestoreWalletActivity.java
Patch:
@@ -24,8 +24,6 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.Wallet;
 import org.bitcoinj.core.Wallet.BalanceType;
 
@@ -171,7 +169,7 @@ protected boolean hasFile()
 		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(passwordView));
 	}
 
-	private void restoreWalletFromEncrypted(@Nonnull final InputStream cipher, @Nonnull final String password)
+	private void restoreWalletFromEncrypted(final InputStream cipher, final String password)
 	{
 		try
 		{

File: wallet/src/de/schildbach/wallet/ui/SendingAddressesFragment.java
Patch:
@@ -19,8 +19,6 @@
 
 import java.util.ArrayList;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.Address;
 import org.bitcoinj.core.AddressFormatException;
 import org.bitcoinj.core.Transaction;
@@ -384,7 +382,7 @@ public void onLoaderReset(final Loader<Cursor> loader)
 		adapter.swapCursor(null);
 	}
 
-	public void setWalletAddresses(@Nonnull final ArrayList<Address> addresses)
+	public void setWalletAddresses(final ArrayList<Address> addresses)
 	{
 		final StringBuilder builder = new StringBuilder();
 		for (final Address address : addresses)

File: wallet/src/de/schildbach/wallet/ui/ShowPasswordCheckListener.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet.ui;
 
-import javax.annotation.Nonnull;
-
 import android.text.method.PasswordTransformationMethod;
 import android.text.method.TransformationMethod;
 import android.widget.CompoundButton;
@@ -32,7 +30,7 @@ public final class ShowPasswordCheckListener implements OnCheckedChangeListener
 {
 	private EditText[] passwordViews;
 
-	public ShowPasswordCheckListener(@Nonnull final EditText... passwordViews)
+	public ShowPasswordCheckListener(final EditText... passwordViews)
 	{
 		this.passwordViews = passwordViews;
 	}

File: wallet/src/de/schildbach/wallet/ui/WalletAddressFragment.java
Patch:
@@ -21,7 +21,6 @@
 import java.util.concurrent.atomic.AtomicReference;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 
 import org.bitcoinj.core.Address;
 import org.bitcoinj.core.Wallet;
@@ -149,7 +148,7 @@ public static class CurrentAddressLoader extends AsyncTaskLoader<Address>
 
 		private static final Logger log = LoggerFactory.getLogger(WalletBalanceLoader.class);
 
-		public CurrentAddressLoader(final Context context, @Nonnull final Wallet wallet)
+		public CurrentAddressLoader(final Context context, final Wallet wallet)
 		{
 			super(context);
 

File: wallet/src/de/schildbach/wallet/ui/WalletBalanceLoader.java
Patch:
@@ -19,8 +19,6 @@
 
 import java.util.concurrent.RejectedExecutionException;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.Coin;
 import org.bitcoinj.core.Wallet;
 import org.bitcoinj.core.Wallet.BalanceType;
@@ -47,7 +45,7 @@ public final class WalletBalanceLoader extends AsyncTaskLoader<Coin>
 
 	private static final Logger log = LoggerFactory.getLogger(WalletBalanceLoader.class);
 
-	public WalletBalanceLoader(final Context context, @Nonnull final Wallet wallet)
+	public WalletBalanceLoader(final Context context, final Wallet wallet)
 	{
 		super(context);
 

File: wallet/src/de/schildbach/wallet/ui/preference/SettingsFragment.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet.ui.preference;
 
-import javax.annotation.Nonnull;
-
 import android.app.Activity;
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -113,7 +111,7 @@ else if (preference.equals(trustedPeerOnlyPreference))
 		return true;
 	}
 
-	private void updateTrustedPeer(@Nonnull final String trustedPeer)
+	private void updateTrustedPeer(final String trustedPeer)
 	{
 		if (trustedPeer.isEmpty())
 		{

File: wallet/src/de/schildbach/wallet/ui/send/MaintenanceDialogFragment.java
Patch:
@@ -21,7 +21,6 @@
 import java.util.List;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 
 import org.bitcoinj.core.Coin;
 import org.bitcoinj.core.Transaction;
@@ -233,7 +232,7 @@ private void handleGo()
 			new DeriveKeyTask(backgroundHandler)
 			{
 				@Override
-				protected void onSuccess(@Nonnull KeyParameter encryptionKey)
+				protected void onSuccess(KeyParameter encryptionKey)
 				{
 					doMaintenance(encryptionKey);
 				}

File: wallet/src/de/schildbach/wallet/ui/send/RequestWalletBalanceTask.java
Patch:
@@ -28,7 +28,6 @@
 import java.util.Map;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
 import org.bitcoinj.core.Address;
@@ -76,8 +75,7 @@ public interface ResultCallback
 		void onFail(int messageResId, Object... messageArgs);
 	}
 
-	public RequestWalletBalanceTask(@Nonnull final Handler backgroundHandler, @Nonnull final ResultCallback resultCallback,
-			@Nullable final String userAgent)
+	public RequestWalletBalanceTask(final Handler backgroundHandler, final ResultCallback resultCallback, @Nullable final String userAgent)
 	{
 		this.backgroundHandler = backgroundHandler;
 		this.callbackHandler = new Handler(Looper.myLooper());

File: wallet/src/de/schildbach/wallet/ui/send/SweepWalletActivity.java
Patch:
@@ -17,8 +17,6 @@
 
 package de.schildbach.wallet.ui.send;
 
-import javax.annotation.Nonnull;
-
 import org.bitcoinj.core.VersionedChecksummedBytes;
 
 import android.content.Context;
@@ -40,7 +38,7 @@ public static void start(final Context context)
 		context.startActivity(new Intent(context, SweepWalletActivity.class));
 	}
 
-	public static void start(final Context context, @Nonnull final VersionedChecksummedBytes key)
+	public static void start(final Context context, final VersionedChecksummedBytes key)
 	{
 		final Intent intent = new Intent(context, SweepWalletActivity.class);
 		intent.putExtra(INTENT_EXTRA_KEY, key);

File: wallet/src/de/schildbach/wallet/ui/send/SweepWalletFragment.java
Patch:
@@ -21,7 +21,6 @@
 
 import java.util.Collection;
 
-import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
 import org.bitcoinj.core.Address;
@@ -273,7 +272,7 @@ public void onActivityResult(final int requestCode, final int resultCode, final
 				new StringInputParser(input)
 				{
 					@Override
-					protected void handlePrivateKey(@Nonnull final VersionedChecksummedBytes key)
+					protected void handlePrivateKey(final VersionedChecksummedBytes key)
 					{
 						privateKeyToSweep = key;
 						setState(State.DECODE_KEY);
@@ -420,7 +419,7 @@ else if (privateKeyToSweep instanceof BIP38PrivateKey)
 				new DecodePrivateKeyTask(backgroundHandler)
 				{
 					@Override
-					protected void onSuccess(@Nonnull ECKey decryptedKey)
+					protected void onSuccess(ECKey decryptedKey)
 					{
 						log.info("successfully decoded BIP38 private key");
 

File: wallet/src/de/schildbach/wallet/util/GenericUtils.java
Patch:
@@ -19,8 +19,6 @@
 
 import java.util.Currency;
 
-import javax.annotation.Nonnull;
-
 /**
  * @author Andreas Schildbach
  */
@@ -31,7 +29,7 @@ public static boolean startsWithIgnoreCase(final String string, final String pre
 		return string.regionMatches(true, 0, prefix, 0, prefix.length());
 	}
 
-	public static String currencySymbol(@Nonnull final String currencyCode)
+	public static String currencySymbol(final String currencyCode)
 	{
 		try
 		{

File: wallet/src/de/schildbach/wallet/util/MonetarySpannable.java
Patch:
@@ -21,7 +21,6 @@
 
 import java.util.regex.Matcher;
 
-import javax.annotation.Nonnull;
 import javax.annotation.Nullable;
 
 import org.bitcoinj.core.Monetary;
@@ -74,8 +73,8 @@ public MonetarySpannable applyMarkup(@Nullable final Object[] prefixSpans, @Null
 	public static final Object[] STANDARD_SIGNIFICANT_SPANS = new Object[] { BOLD_SPAN };
 	public static final Object[] STANDARD_INSIGNIFICANT_SPANS = new Object[] { MonetarySpannable.SMALLER_SPAN };
 
-	public static void applyMarkup(@Nonnull final Spannable spannable, @Nullable final Object[] prefixSpans,
-			@Nullable final Object[] significantSpans, @Nullable final Object[] insignificantSpans)
+	public static void applyMarkup(final Spannable spannable, @Nullable final Object[] prefixSpans, @Nullable final Object[] significantSpans,
+			@Nullable final Object[] insignificantSpans)
 	{
 		if (prefixSpans != null)
 			for (final Object span : prefixSpans)

File: wallet/src/de/schildbach/wallet/util/Nfc.java
Patch:
@@ -20,7 +20,6 @@
 import java.util.Arrays;
 
 import javax.annotation.CheckForNull;
-import javax.annotation.Nonnull;
 
 import android.nfc.NdefMessage;
 import android.nfc.NdefRecord;
@@ -32,15 +31,15 @@
  */
 public class Nfc
 {
-	public static NdefRecord createMime(@Nonnull final String mimeType, @Nonnull final byte[] payload)
+	public static NdefRecord createMime(final String mimeType, final byte[] payload)
 	{
 		final byte[] mimeBytes = mimeType.getBytes(Charsets.US_ASCII);
 		final NdefRecord mimeRecord = new NdefRecord(NdefRecord.TNF_MIME_MEDIA, mimeBytes, new byte[0], payload);
 		return mimeRecord;
 	}
 
 	@CheckForNull
-	public static byte[] extractMimePayload(@Nonnull final String mimeType, @Nonnull final NdefMessage message)
+	public static byte[] extractMimePayload(final String mimeType, final NdefMessage message)
 	{
 		final byte[] mimeBytes = mimeType.getBytes(Charsets.US_ASCII);
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -138,6 +138,7 @@ public final static class Files
 
 	public static final int SDK_JELLY_BEAN = 16;
 	public static final int SDK_JELLY_BEAN_MR2 = 18;
+	public static final int SDK_LOLLIPOP = 21;
 
 	public static final int SDK_DEPRECATED_BELOW = Build.VERSION_CODES.ICE_CREAM_SANDWICH;
 

File: wallet/src/de/schildbach/wallet/ui/DialogBuilder.java
Patch:
@@ -23,10 +23,12 @@
 import android.content.Context;
 import android.content.DialogInterface.OnClickListener;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
+import de.schildbach.wallet.Constants;
 import de.schildbach.wallet_test.R;
 
 /**
@@ -48,9 +50,7 @@ public static DialogBuilder warn(final Context context, final int titleResId)
 
 	public DialogBuilder(final Context context)
 	{
-		super(context);
-
-		setInverseBackgroundForced(true);
+		super(context, Build.VERSION.SDK_INT < Constants.SDK_LOLLIPOP ? AlertDialog.THEME_HOLO_LIGHT : AlertDialog.THEME_DEVICE_DEFAULT_LIGHT);
 
 		this.customTitle = LayoutInflater.from(context).inflate(R.layout.dialog_title, null);
 		this.iconView = (ImageView) customTitle.findViewById(android.R.id.icon);

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -49,7 +49,6 @@
 import android.nfc.NdefRecord;
 import android.nfc.NfcAdapter;
 import android.nfc.NfcEvent;
-import android.nfc.NfcManager;
 import android.os.Build;
 import android.os.Bundle;
 import android.text.SpannableStringBuilder;
@@ -155,8 +154,7 @@ public void onAttach(final Activity activity)
 		this.loaderManager = getLoaderManager();
 		this.clipboardManager = (ClipboardManager) activity.getSystemService(Context.CLIPBOARD_SERVICE);
 		this.bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
-		final NfcManager nfcManager = (NfcManager) activity.getSystemService(Context.NFC_SERVICE);
-		this.nfcAdapter = nfcManager.getDefaultAdapter();
+		this.nfcAdapter = NfcAdapter.getDefaultAdapter(activity);
 	}
 
 	@Override

File: wallet/src/de/schildbach/wallet/ui/WalletAddressFragment.java
Patch:
@@ -45,7 +45,6 @@
 import android.nfc.NdefRecord;
 import android.nfc.NfcAdapter;
 import android.nfc.NfcEvent;
-import android.nfc.NfcManager;
 import android.os.Bundle;
 import android.support.v4.content.LocalBroadcastManager;
 import android.text.Spanned;
@@ -89,8 +88,7 @@ public void onAttach(final Activity activity)
 		this.activity = activity;
 		this.application = (WalletApplication) activity.getApplication();
 		this.loaderManager = getLoaderManager();
-		final NfcManager nfcManager = (NfcManager) activity.getSystemService(Context.NFC_SERVICE);
-		this.nfcAdapter = nfcManager.getDefaultAdapter();
+		this.nfcAdapter = NfcAdapter.getDefaultAdapter(activity);
 	}
 
 	@Override

File: wallet/src/de/schildbach/wallet/util/Base43.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright 2011 Google Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");

File: wallet/src/de/schildbach/wallet/util/LinuxSecureRandom.java
Patch:
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright 2013 Google Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -131,6 +131,7 @@ public final static class Files
 	public static final String WEBMARKET_APP_URL = "https://play.google.com/store/apps/details?id=%s";
 
 	public static final int HTTP_TIMEOUT_MS = 15 * (int) DateUtils.SECOND_IN_MILLIS;
+	public static final int PEER_TIMEOUT_MS = 15 * (int) DateUtils.SECOND_IN_MILLIS;
 
 	public static final long LAST_USAGE_THRESHOLD_JUST_MS = DateUtils.HOUR_IN_MILLIS;
 	public static final long LAST_USAGE_THRESHOLD_RECENTLY_MS = 2 * DateUtils.DAY_IN_MILLIS;

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -393,6 +393,7 @@ private void check()
 
 				final boolean connectTrustedPeerOnly = hasTrustedPeer && config.getTrustedPeerOnly();
 				peerGroup.setMaxConnections(connectTrustedPeerOnly ? 1 : maxConnectedPeers);
+				peerGroup.setConnectTimeoutMillis(Constants.PEER_TIMEOUT_MS);
 
 				peerGroup.addPeerDiscovery(new PeerDiscovery()
 				{

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -348,7 +348,7 @@ public void onConfidenceChanged(final Transaction tx, final TransactionConfidenc
 				@Override
 				public void run()
 				{
-					if (isResumed())
+					if (!isResumed())
 						return;
 
 					sentTransactionListAdapter.notifyDataSetChanged();

File: wallet/src/de/schildbach/wallet/ui/send/SweepWalletFragment.java
Patch:
@@ -323,7 +323,7 @@ public void onConfidenceChanged(final Transaction tx, final TransactionConfidenc
 				@Override
 				public void run()
 				{
-					if (isResumed())
+					if (!isResumed())
 						return;
 
 					sweepTransactionListAdapter.notifyDataSetChanged();

File: wallet/src/de/schildbach/wallet/ui/EncryptKeysDialogFragment.java
Patch:
@@ -191,7 +191,7 @@ public void onClick(final View v)
 				newPasswordView.addTextChangedListener(textWatcher);
 
 				showView = (CheckBox) dialog.findViewById(R.id.encrypt_keys_dialog_show);
-				showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(true, newPasswordView, oldPasswordView));
+				showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(newPasswordView, oldPasswordView));
 
 				EncryptKeysDialogFragment.this.dialog = dialog;
 				updateView();

File: wallet/src/de/schildbach/wallet/ui/RestoreWalletActivity.java
Patch:
@@ -168,7 +168,7 @@ protected boolean hasFile()
 		passwordView.addTextChangedListener(dialogButtonEnabler);
 
 		final CheckBox showView = (CheckBox) alertDialog.findViewById(R.id.import_keys_from_content_dialog_show);
-		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(false, passwordView));
+		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(passwordView));
 	}
 
 	private void restoreWalletFromEncrypted(@Nonnull final InputStream cipher, @Nonnull final String password)

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -533,7 +533,7 @@ protected boolean needsPassword()
 		fileView.setOnItemSelectedListener(dialogButtonEnabler);
 
 		final CheckBox showView = (CheckBox) alertDialog.findViewById(R.id.import_keys_from_storage_show);
-		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(false, passwordView));
+		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(passwordView));
 	}
 
 	private Dialog createBackupWalletDialog()
@@ -587,7 +587,7 @@ private void prepareBackupWalletDialog(final Dialog dialog)
 		passwordView.addTextChangedListener(dialogButtonEnabler);
 
 		final CheckBox showView = (CheckBox) alertDialog.findViewById(R.id.export_keys_dialog_show);
-		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(false, passwordView));
+		showView.setOnCheckedChangeListener(new ShowPasswordCheckListener(passwordView));
 
 		final TextView warningView = (TextView) alertDialog.findViewById(R.id.backup_wallet_dialog_warning_encrypted);
 		warningView.setVisibility(wallet.isEncrypted() ? View.VISIBLE : View.GONE);

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -208,6 +208,7 @@ public static void appendApplicationInfo(@Nonnull final Appendable report, @Nonn
 		report.append("Time of first install: " + String.format("%tF %tT %tz", pi.firstInstallTime, pi.firstInstallTime, pi.firstInstallTime) + "\n");
 		report.append("Network: " + Constants.NETWORK_PARAMETERS.getId() + "\n");
 		final Wallet wallet = application.getWallet();
+		report.append("Encrypted: " + wallet.isEncrypted() + "\n");
 		report.append("Keychain size: " + wallet.getKeychainSize() + "\n");
 
 		final Set<Transaction> transactions = wallet.getTransactions(true);

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -324,6 +324,9 @@ public void onConfidenceChanged(final Transaction tx, final TransactionConfidenc
 				@Override
 				public void run()
 				{
+					if (isResumed())
+						return;
+
 					sentTransactionListAdapter.notifyDataSetChanged();
 
 					final TransactionConfidence confidence = sentTransaction.getConfidence();

File: wallet/src/de/schildbach/wallet/ui/send/SweepWalletFragment.java
Patch:
@@ -323,6 +323,9 @@ public void onConfidenceChanged(final Transaction tx, final TransactionConfidenc
 				@Override
 				public void run()
 				{
+					if (isResumed())
+						return;
+
 					sweepTransactionListAdapter.notifyDataSetChanged();
 
 					final TransactionConfidence confidence = sentTransaction.getConfidence();

File: wallet/src/de/schildbach/wallet/ui/BlockListFragment.java
Patch:
@@ -143,10 +143,10 @@ public void onPause()
 		// workaround: under high load, it can happen that onPause() is called twice (recursively via destroyLoader)
 		if (resumed)
 		{
+			resumed = false;
+
 			loaderManager.destroyLoader(ID_TRANSACTION_LOADER);
 			activity.unregisterReceiver(tickReceiver);
-
-			resumed = false;
 		}
 		else
 		{

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -1355,6 +1355,7 @@ private void updateStateFrom(final @Nonnull PaymentIntent paymentIntent)
 
 		this.paymentIntent = paymentIntent;
 
+		validatedAddress = null;
 		directPaymentAck = null;
 
 		// delay these actions until fragment is resumed
@@ -1365,6 +1366,7 @@ public void run()
 			{
 				if (state == State.INPUT)
 				{
+					receivingAddressView.setText(null);
 					amountCalculatorLink.setBtcAmount(paymentIntent.getAmount());
 
 					if (paymentIntent.isBluetoothPaymentUrl())

File: wallet/src/de/schildbach/wallet/ui/SendCoinsQrActivity.java
Patch:
@@ -19,7 +19,7 @@
 
 import javax.annotation.Nonnull;
 
-import org.bitcoinj.core.ECKey;
+import org.bitcoinj.core.DumpedPrivateKey;
 import org.bitcoinj.core.Transaction;
 import org.bitcoinj.core.VerificationException;
 
@@ -67,7 +67,7 @@ protected void handlePaymentIntent(@Nonnull final PaymentIntent paymentIntent)
 				}
 
 				@Override
-				protected void handlePrivateKey(@Nonnull final ECKey key)
+				protected void handlePrivateKey(@Nonnull final DumpedPrivateKey key)
 				{
 					SweepWalletActivity.start(SendCoinsQrActivity.this, key);
 

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -42,7 +42,7 @@
 import javax.annotation.Nonnull;
 
 import org.bitcoinj.core.AddressFormatException;
-import org.bitcoinj.core.ECKey;
+import org.bitcoinj.core.DumpedPrivateKey;
 import org.bitcoinj.core.Transaction;
 import org.bitcoinj.core.VerificationException;
 import org.bitcoinj.core.Wallet;
@@ -212,7 +212,7 @@ protected void handlePaymentIntent(@Nonnull final PaymentIntent paymentIntent)
 				}
 
 				@Override
-				protected void handlePrivateKey(@Nonnull final ECKey key)
+				protected void handlePrivateKey(@Nonnull final DumpedPrivateKey key)
 				{
 					SweepWalletActivity.start(WalletActivity.this, key);
 				}

File: wallet/src/de/schildbach/wallet/ui/send/SendCoinsFragment.java
Patch:
@@ -28,7 +28,7 @@
 import org.bitcoinj.core.Address;
 import org.bitcoinj.core.AddressFormatException;
 import org.bitcoinj.core.Coin;
-import org.bitcoinj.core.ECKey;
+import org.bitcoinj.core.DumpedPrivateKey;
 import org.bitcoinj.core.InsufficientMoneyException;
 import org.bitcoinj.core.NetworkParameters;
 import org.bitcoinj.core.Sha256Hash;
@@ -1305,7 +1305,7 @@ protected void handlePaymentIntent(@Nonnull final PaymentIntent paymentIntent)
 			}
 
 			@Override
-			protected void handlePrivateKey(@Nonnull final ECKey key)
+			protected void handlePrivateKey(@Nonnull final DumpedPrivateKey key)
 			{
 				throw new UnsupportedOperationException();
 			}

File: wallet/src/de/schildbach/wallet/ui/send/SweepWalletActivity.java
Patch:
@@ -19,7 +19,7 @@
 
 import javax.annotation.Nonnull;
 
-import org.bitcoinj.core.ECKey;
+import org.bitcoinj.core.DumpedPrivateKey;
 
 import android.app.ActionBar;
 import android.content.Context;
@@ -41,7 +41,7 @@ public static void start(final Context context)
 		context.startActivity(new Intent(context, SweepWalletActivity.class));
 	}
 
-	public static void start(final Context context, @Nonnull final ECKey key)
+	public static void start(final Context context, @Nonnull final DumpedPrivateKey key)
 	{
 		final Intent intent = new Intent(context, SweepWalletActivity.class);
 		intent.putExtra(INTENT_EXTRA_KEY, key);

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -277,7 +277,7 @@ public boolean onOptionsItemSelected(final MenuItem item)
 				return true;
 
 			case R.id.wallet_options_address_book:
-				AddressBookActivity.start(this, true);
+				AddressBookActivity.start(this);
 				return true;
 
 			case R.id.wallet_options_exchange_rates:

File: wallet/src/de/schildbach/wallet/ui/TransactionsListAdapter.java
Patch:
@@ -307,7 +307,7 @@ else if (sent)
 
 		// address
 		final TextView rowAddress = (TextView) row.findViewById(R.id.transaction_row_address);
-		final Address address = sent ? WalletUtils.getFirstToAddress(tx) : WalletUtils.getFirstFromAddress(tx);
+		final Address address = sent ? WalletUtils.getWalletAddressOfReceived(tx, wallet) : WalletUtils.getFirstFromAddress(tx);
 		final String label;
 		if (isCoinBase)
 			label = textCoinBase;

File: wallet/src/de/schildbach/wallet/ui/TransactionsListFragment.java
Patch:
@@ -235,7 +235,7 @@ public boolean onPrepareActionMode(final ActionMode mode, final Menu menu)
 					final Coin value = tx.getValue(wallet);
 					final boolean sent = value.signum() < 0;
 
-					address = sent ? WalletUtils.getFirstToAddress(tx) : WalletUtils.getFirstFromAddress(tx);
+					address = sent ? WalletUtils.getWalletAddressOfReceived(tx, wallet) : WalletUtils.getFirstFromAddress(tx);
 
 					final String label;
 					if (tx.isCoinBase())

File: wallet/src/de/schildbach/wallet/util/Nfc.java
Patch:
@@ -93,7 +93,7 @@ private static NdefRecord wellKnownUriRecord(@Nonnull final String uri)
 	{
 		final byte[] uriBytes = uri.getBytes(Charsets.UTF_8);
 		final byte[] recordBytes = new byte[uriBytes.length + 1];
-		recordBytes[0] = (byte) 0x0; // prefix, alway 0 for bitcoin scheme
+		recordBytes[0] = (byte) 0x0; // prefix, always 0 for bitcoin scheme
 		System.arraycopy(uriBytes, 0, recordBytes, 1, uriBytes.length);
 		return new NdefRecord(NdefRecord.TNF_WELL_KNOWN, NdefRecord.RTD_URI, new byte[0], recordBytes);
 	}

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -22,7 +22,6 @@
 import javax.annotation.CheckForNull;
 
 import android.app.Activity;
-import android.app.ListFragment;
 import android.app.LoaderManager;
 import android.app.LoaderManager.LoaderCallbacks;
 import android.content.Context;
@@ -64,7 +63,7 @@
 /**
  * @author Andreas Schildbach
  */
-public final class ExchangeRatesFragment extends ListFragment implements OnSharedPreferenceChangeListener
+public final class ExchangeRatesFragment extends FancyListFragment implements OnSharedPreferenceChangeListener
 {
 	private AbstractWalletActivity activity;
 	private WalletApplication application;

File: wallet/src/de/schildbach/wallet/ui/PeerListFragment.java
Patch:
@@ -29,7 +29,6 @@
 import org.slf4j.LoggerFactory;
 
 import android.app.Activity;
-import android.app.ListFragment;
 import android.app.LoaderManager;
 import android.app.LoaderManager.LoaderCallbacks;
 import android.content.AsyncTaskLoader;
@@ -63,7 +62,7 @@
 /**
  * @author Andreas Schildbach
  */
-public final class PeerListFragment extends ListFragment
+public final class PeerListFragment extends FancyListFragment
 {
 	private AbstractWalletActivity activity;
 	private LoaderManager loaderManager;

File: wallet/src/de/schildbach/wallet/ui/SendingAddressesFragment.java
Patch:
@@ -22,7 +22,6 @@
 import javax.annotation.Nonnull;
 
 import android.app.Activity;
-import android.app.ListFragment;
 import android.app.LoaderManager;
 import android.content.Context;
 import android.content.CursorLoader;
@@ -64,7 +63,7 @@
 /**
  * @author Andreas Schildbach
  */
-public final class SendingAddressesFragment extends ListFragment implements LoaderManager.LoaderCallbacks<Cursor>
+public final class SendingAddressesFragment extends FancyListFragment implements LoaderManager.LoaderCallbacks<Cursor>
 {
 	private AbstractWalletActivity activity;
 	private ClipboardManager clipboardManager;

File: wallet/src/de/schildbach/wallet/ui/TransactionsListFragment.java
Patch:
@@ -35,7 +35,6 @@
 import org.slf4j.LoggerFactory;
 
 import android.app.Activity;
-import android.app.ListFragment;
 import android.app.LoaderManager;
 import android.app.LoaderManager.LoaderCallbacks;
 import android.content.AsyncTaskLoader;
@@ -84,7 +83,7 @@
 /**
  * @author Andreas Schildbach
  */
-public class TransactionsListFragment extends ListFragment implements LoaderCallbacks<List<Transaction>>, OnSharedPreferenceChangeListener
+public class TransactionsListFragment extends FancyListFragment implements LoaderCallbacks<List<Transaction>>, OnSharedPreferenceChangeListener
 {
 	public enum Direction
 	{

File: wallet/src/de/schildbach/wallet/ui/InputParser.java
Patch:
@@ -108,7 +108,7 @@ else if (input.startsWith("bitcoin:"))
 					if (address == null)
 						throw new BitcoinURIParseException("missing address");
 
-					if (address.getParameters().equals(Constants.NETWORK_PARAMETERS))
+					if (Constants.NETWORK_PARAMETERS.equals(address.getParameters()))
 						handlePaymentIntent(PaymentIntent.fromBitcoinUri(bitcoinUri));
 					else
 						error(R.string.input_parser_invalid_address, input);

File: wallet/src/de/schildbach/wallet/ui/SendCoinsQrActivity.java
Patch:
@@ -34,7 +34,7 @@
 /**
  * @author Andreas Schildbach
  */
-public final class SendCoinsQrActivity extends AbstractWalletActivity
+public final class SendCoinsQrActivity extends Activity
 {
 	private static final int REQUEST_CODE_SCAN = 0;
 
@@ -66,7 +66,7 @@ protected void handlePaymentIntent(final PaymentIntent paymentIntent)
 				@Override
 				protected void handleDirectTransaction(final Transaction transaction) throws VerificationException
 				{
-					final WalletApplication application = getWalletApplication();
+					final WalletApplication application = (WalletApplication) getApplication();
 					application.processDirectTransaction(transaction);
 
 					SendCoinsQrActivity.this.finish();

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -985,6 +985,8 @@ private void handleEmpty()
 		final BigInteger available = wallet.getBalance(BalanceType.AVAILABLE);
 
 		amountCalculatorLink.setBtcAmount(available);
+
+		updateView();
 	}
 
 	public class AutoCompleteAddressAdapter extends CursorAdapter

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -127,7 +127,8 @@ public static void formatSignificant(@Nonnull final Spannable spannable, @Nullab
 		if (m.find())
 		{
 			final int pivot = m.group().length();
-			spannable.setSpan(SIGNIFICANT_SPAN, 0, pivot, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+			if (pivot > 0)
+				spannable.setSpan(SIGNIFICANT_SPAN, 0, pivot, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
 			if (spannable.length() > pivot && insignificantRelativeSizeSpan != null)
 				spannable.setSpan(insignificantRelativeSizeSpan, pivot, spannable.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
 		}

File: wallet/src/de/schildbach/wallet/util/Crypto.java
Patch:
@@ -56,7 +56,7 @@
  */
 public class Crypto
 {
-	private static final BaseEncoding BASE64 = BaseEncoding.base64();
+	private static final BaseEncoding BASE64 = BaseEncoding.base64().withSeparator("\n", 76);
 	private static final Charset UTF_8 = Charset.forName("UTF-8");
 
 	/**

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -59,7 +59,7 @@ public class Constants
 			: EXPLORE_BASE_URL_TEST;
 
 	public static final String MIMETYPE_TRANSACTION = "application/x-btctx";
-	public static final String MIMETYPE_BACKUP_PRIVATE_KEYS = "x-bitcoin/private-keys";
+	public static final String MIMETYPE_WALLET_BACKUP = "application/x-bitcoin-wallet-backup";
 
 	public static final int MAX_NUM_CONFIRMATIONS = 7;
 	public static final String USER_AGENT = "Bitcoin Wallet";

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -250,7 +250,7 @@ public void onLoadFinished(final Loader<Cursor> loader, final Cursor data)
 		{
 			final Cursor oldCursor = adapter.swapCursor(data);
 
-			if (oldCursor == null && defaultCurrency != null)
+			if (data != null && oldCursor == null && defaultCurrency != null)
 			{
 				final int defaultCurrencyPosition = findCurrencyCode(data, defaultCurrency);
 				if (defaultCurrencyPosition >= 0)

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -1302,6 +1302,7 @@ else if (paymentIntent.isHttpPaymentUrl())
 						directPaymentEnableView.setChecked(true);
 
 					requestFocusFirst();
+					updateView();
 				}
 
 				if (paymentIntent.hasPaymentRequestUrl() && paymentIntent.isSupportedPaymentRequestUrl())

File: wallet/src/de/schildbach/wallet/ui/RequestPaymentRequestTask.java
Patch:
@@ -36,7 +36,6 @@
 
 import de.schildbach.wallet.Constants;
 import de.schildbach.wallet.PaymentIntent;
-import de.schildbach.wallet.offline.DirectPaymentTask;
 import de.schildbach.wallet.util.PaymentProtocol;
 import de.schildbach.wallet_test.R;
 
@@ -49,7 +48,7 @@ public abstract class RequestPaymentRequestTask
 	private final Handler callbackHandler;
 	private final ResultCallback resultCallback;
 
-	private static final Logger log = LoggerFactory.getLogger(DirectPaymentTask.class);
+	private static final Logger log = LoggerFactory.getLogger(RequestPaymentRequestTask.class);
 
 	public interface ResultCallback
 	{

File: wallet/src/de/schildbach/wallet/ExchangeRatesProvider.java
Patch:
@@ -71,7 +71,7 @@ public ExchangeRate(@Nonnull final String currencyCode, @Nonnull final BigIntege
 		@Override
 		public String toString()
 		{
-			return getClass().getSimpleName() + '[' + currencyCode + ':' + GenericUtils.formatValue(rate, Constants.BTC_MAX_PRECISION, 0) + ']';
+			return getClass().getSimpleName() + '[' + currencyCode + ':' + GenericUtils.formatDebugValue(rate) + ']';
 		}
 	}
 

File: wallet/src/de/schildbach/wallet/PaymentIntent.java
Patch:
@@ -72,7 +72,7 @@ public String toString()
 
 			builder.append(getClass().getSimpleName());
 			builder.append('[');
-			builder.append(hasAmount() ? GenericUtils.formatValue(amount, Constants.BTC_MAX_PRECISION, 0) : "null");
+			builder.append(hasAmount() ? GenericUtils.formatDebugValue(amount) : "null");
 			builder.append(',');
 			if (script.isSentToAddress() || script.isSentToP2SH())
 				builder.append(script.getToAddress(Constants.NETWORK_PARAMETERS));

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -61,6 +61,7 @@ public class Constants
 	public static final String MIMETYPE_PAYMENT = "application/bitcoin-payment"; // BIP 71
 	public static final String MIMETYPE_PAYMENTACK = "application/bitcoin-paymentack"; // BIP 71
 	public static final String MIMETYPE_TRANSACTION = "application/x-btctx";
+	public static final String MIMETYPE_BACKUP_PRIVATE_KEYS = "x-bitcoin/private-keys";
 
 	public static final int MAX_NUM_CONFIRMATIONS = 7;
 	public static final String USER_AGENT = "Bitcoin Wallet";

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -917,7 +917,7 @@ private void mailPrivateKeys(@Nonnull final File file)
 		intent.putExtra(Intent.EXTRA_TEXT,
 				getString(R.string.export_keys_dialog_mail_text) + "\n\n" + String.format(Constants.WEBMARKET_APP_URL, getPackageName()) + "\n\n"
 						+ Constants.SOURCE_URL + '\n');
-		intent.setType("x-bitcoin/private-keys");
+		intent.setType(Constants.MIMETYPE_BACKUP_PRIVATE_KEYS);
 		intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file));
 
 		try

File: wallet/src/de/schildbach/wallet/ExchangeRatesProvider.java
Patch:
@@ -174,8 +174,8 @@ public Cursor query(final Uri uri, final String[] projection, final String selec
 		else if (selection.equals(KEY_CURRENCY_CODE))
 		{
 			final ExchangeRate rate = bestExchangeRate(selectionArgs[0]);
-
-			cursor.newRow().add(rate.currencyCode.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(rate.source);
+			if (rate != null)
+				cursor.newRow().add(rate.currencyCode.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(rate.source);
 		}
 
 		return cursor;

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -126,7 +126,7 @@ public Loader<Cursor> onCreateLoader(final int id, final Bundle args)
 		@Override
 		public void onLoadFinished(final Loader<Cursor> loader, final Cursor data)
 		{
-			if (data != null)
+			if (data != null && data.getCount() > 0)
 			{
 				data.moveToFirst();
 				final ExchangeRate exchangeRate = ExchangeRatesProvider.getExchangeRate(data);

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -337,7 +337,7 @@ public Loader<Cursor> onCreateLoader(final int id, final Bundle args)
 		@Override
 		public void onLoadFinished(final Loader<Cursor> loader, final Cursor data)
 		{
-			if (data != null)
+			if (data != null && data.getCount() > 0)
 			{
 				data.moveToFirst();
 				final ExchangeRate exchangeRate = ExchangeRatesProvider.getExchangeRate(data);

File: wallet/src/de/schildbach/wallet/ui/WalletBalanceFragment.java
Patch:
@@ -302,7 +302,7 @@ public Loader<Cursor> onCreateLoader(final int id, final Bundle args)
 		@Override
 		public void onLoadFinished(final Loader<Cursor> loader, final Cursor data)
 		{
-			if (data != null)
+			if (data != null && data.getCount() > 0)
 			{
 				data.moveToFirst();
 				exchangeRate = ExchangeRatesProvider.getExchangeRate(data);

File: wallet/src/de/schildbach/wallet/offline/DirectPaymentTask.java
Patch:
@@ -390,9 +390,6 @@ private static Payment createPaymentMessage(@Nonnull final Transaction transacti
 	private static String parsePaymentAck(@Nonnull final Protos.PaymentACK paymentAck, @Nonnull final Payment expectedPaymentMessage)
 			throws IOException
 	{
-		if (!paymentAck.getPayment().equals(expectedPaymentMessage))
-			return null;
-
 		final String memo = paymentAck.hasMemo() ? paymentAck.getMemo() : null;
 
 		return memo;

File: wallet/src/de/schildbach/wallet/ui/InputParser.java
Patch:
@@ -308,7 +308,7 @@ protected void parseAndHandlePaymentRequest(@Nonnull final byte[] serializedPaym
 		final Protos.PaymentDetails paymentDetails = Protos.PaymentDetails.newBuilder().mergeFrom(paymentRequest.getSerializedPaymentDetails())
 				.build();
 
-		if (paymentDetails.hasExpires() && System.currentTimeMillis() >= paymentDetails.getExpires())
+		if (paymentDetails.hasExpires() && System.currentTimeMillis() / 1000 >= paymentDetails.getExpires())
 			throw new PaymentRequestException.Expired("payment details expired: " + paymentDetails.getExpires());
 
 		if (!paymentDetails.getNetwork().equals(Constants.NETWORK_PARAMETERS.getPaymentProtocolId()))

File: wallet/src/de/schildbach/wallet/offline/DirectPaymentTask.java
Patch:
@@ -386,6 +386,8 @@ private static String parsePaymentAck(@Nonnull final Protos.PaymentACK paymentAc
 		if (!paymentAck.getPayment().equals(expectedPaymentMessage))
 			return null;
 
-		return paymentAck.getMemo();
+		final String memo = paymentAck.hasMemo() ? paymentAck.getMemo() : null;
+
+		return memo;
 	}
 }

File: wallet/src/de/schildbach/wallet/ui/SendCoinsOfflineTask.java
Patch:
@@ -20,6 +20,7 @@
 import java.math.BigInteger;
 
 import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
 
 import android.os.Handler;
 import android.os.Looper;
@@ -93,7 +94,7 @@ public void run()
 
 	protected abstract void onSuccess(@Nonnull Transaction transaction);
 
-	protected abstract void onInsufficientMoney(@Nonnull BigInteger missing);
+	protected abstract void onInsufficientMoney(@Nullable BigInteger missing);
 
 	protected abstract void onFailure();
 }

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -859,10 +859,10 @@ public void onResult(final boolean ack)
 						}
 
 						@Override
-						public void onFail(final String message)
+						public void onFail(final int messageResId, final Object... messageArgs)
 						{
 							final DialogBuilder dialog = DialogBuilder.warn(activity, R.string.send_coins_fragment_direct_payment_failed_title);
-							dialog.setMessage(paymentIntent.paymentUrl + "\n" + message + "\n\n"
+							dialog.setMessage(paymentIntent.paymentUrl + "\n" + getString(messageResId, messageArgs) + "\n\n"
 									+ getString(R.string.send_coins_fragment_direct_payment_failed_msg));
 							dialog.setPositiveButton(R.string.button_retry, new DialogInterface.OnClickListener()
 							{

File: wallet/src/de/schildbach/wallet/ui/WalletAddressesAdapter.java
Patch:
@@ -43,6 +43,9 @@
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
+/**
+ * @author Andreas Schildbach
+ */
 public class WalletAddressesAdapter extends BaseAdapter
 {
 	private final Context context;

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -635,7 +635,7 @@ public void onActivityResult(final int requestCode, final int resultCode, final
 					@Override
 					protected void handlePaymentIntent(final PaymentIntent paymentIntent)
 					{
-						SendCoinsActivity.start(activity, paymentIntent);
+						update(paymentIntent);
 					}
 
 					@Override

File: wallet/src/de/schildbach/wallet/ui/ReportIssueDialogBuilder.java
Patch:
@@ -77,7 +77,7 @@ public ReportIssueDialogBuilder(final Context context, final int titleResId, fin
 		viewDescription = (EditText) view.findViewById(R.id.report_issue_dialog_description);
 
 		viewCollectDeviceInfo = (CheckBox) view.findViewById(R.id.report_issue_dialog_collect_device_info);
-		viewCollectInstalledPackages = (CheckBox) view.findViewById(R.id.report_issue_dialog_collect_device_info);
+		viewCollectInstalledPackages = (CheckBox) view.findViewById(R.id.report_issue_dialog_collect_installed_packages);
 		viewCollectApplicationLog = (CheckBox) view.findViewById(R.id.report_issue_dialog_collect_application_log);
 		viewCollectWalletDump = (CheckBox) view.findViewById(R.id.report_issue_dialog_collect_wallet_dump);
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -124,6 +124,7 @@ public class Constants
 
 	public static final int SDK_JELLY_BEAN = 16;
 	public static final int SDK_JELLY_BEAN_MR2 = 18;
+	public static final int SDK_KITKAT = 19;
 
 	public static final int MEMORY_CLASS_LOWEND = 48;
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -123,6 +123,7 @@ public class Constants
 	public static final long LAST_USAGE_THRESHOLD_RECENTLY_MS = 2 * DateUtils.DAY_IN_MILLIS;
 
 	public static final int SDK_JELLY_BEAN = 16;
+	public static final int SDK_JELLY_BEAN_MR2 = 18;
 
 	public static final int MEMORY_CLASS_LOWEND = 48;
 

File: wallet/src/de/schildbach/wallet/ui/PreferencesActivity.java
Patch:
@@ -84,6 +84,9 @@ protected void onCreate(final Bundle savedInstanceState)
 		final Preference dataUsagePreference = findPreference(PREFS_KEY_DATA_USAGE);
 		dataUsagePreference.setEnabled(getPackageManager().resolveActivity(dataUsageIntent, 0) != null);
 
+		final Preference bluetoothOfflineTransactionsPreference = findPreference(Constants.PREFS_KEY_LABS_BLUETOOTH_OFFLINE_TRANSACTIONS);
+		bluetoothOfflineTransactionsPreference.setEnabled(Build.VERSION.SDK_INT >= Constants.SDK_JELLY_BEAN_MR2);
+
 		final ActionBar actionBar = getSupportActionBar();
 		actionBar.setDisplayHomeAsUpEnabled(true);
 

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -904,6 +904,6 @@ public void run()
 
 				wallet.setKeyRotationEnabled(!replaying);
 			}
-		};
+		}.start();
 	}
 }

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -104,7 +104,7 @@ public void bindView(final View view, final Context context, final Cursor cursor
 				final ExchangeRate exchangeRate = ExchangeRatesProvider.getExchangeRate(cursor);
 				final boolean isDefaultCurrency = exchangeRate.currencyCode.equals(defaultCurrency);
 
-				view.setBackgroundResource(isDefaultCurrency ? R.color.bg_less_bright : R.color.bg_bright);
+				view.setBackgroundResource(isDefaultCurrency ? R.color.bg_list_selected : R.color.bg_list);
 
 				final View defaultView = view.findViewById(R.id.exchange_rate_row_default);
 				defaultView.setVisibility(isDefaultCurrency ? View.VISIBLE : View.INVISIBLE);

File: wallet/src/de/schildbach/wallet/ui/WalletAddressesAdapter.java
Patch:
@@ -123,7 +123,7 @@ public View getView(final int position, View row, final ViewGroup parent)
 
 		final boolean isDefaultAddress = address.toString().equals(selectedAddress);
 
-		row.setBackgroundResource(isDefaultAddress ? R.color.bg_less_bright : R.color.bg_bright);
+		row.setBackgroundResource(isDefaultAddress ? R.color.bg_list_selected : R.color.bg_list);
 
 		final TextView addressView = (TextView) row.findViewById(R.id.address_book_row_address);
 		addressView.setText(WalletUtils.formatAddress(address, Constants.ADDRESS_FORMAT_GROUP_SIZE, Constants.ADDRESS_FORMAT_LINE_SIZE));

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -104,7 +104,7 @@ public final class SendCoinsFragment extends SherlockFragment
 	private ContentResolver contentResolver;
 	private LoaderManager loaderManager;
 	private SharedPreferences prefs;
-
+	@CheckForNull
 	private BluetoothAdapter bluetoothAdapter;
 
 	private int btcPrecision;

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -91,7 +91,7 @@
 import de.schildbach.wallet.ui.WalletActivity;
 import de.schildbach.wallet.util.CrashReporter;
 import de.schildbach.wallet.util.GenericUtils;
-import de.schildbach.wallet.util.ThrottelingWalletChangeListener;
+import de.schildbach.wallet.util.ThrottlingWalletChangeListener;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -135,10 +135,10 @@ public class BlockchainServiceImpl extends android.app.Service implements Blockc
 
 	private static final Logger log = LoggerFactory.getLogger(BlockchainServiceImpl.class);
 
-	private final WalletEventListener walletEventListener = new ThrottelingWalletChangeListener(APPWIDGET_THROTTLE_MS)
+	private final WalletEventListener walletEventListener = new ThrottlingWalletChangeListener(APPWIDGET_THROTTLE_MS)
 	{
 		@Override
-		public void onThrotteledWalletChanged()
+		public void onThrottledWalletChanged()
 		{
 			notifyWidgets();
 		}

File: wallet/src/de/schildbach/wallet/ui/WalletBalanceLoader.java
Patch:
@@ -27,7 +27,7 @@
 import com.google.bitcoin.core.Wallet;
 import com.google.bitcoin.core.Wallet.BalanceType;
 
-import de.schildbach.wallet.util.ThrottelingWalletChangeListener;
+import de.schildbach.wallet.util.ThrottlingWalletChangeListener;
 
 /**
  * @author Andreas Schildbach
@@ -68,10 +68,10 @@ public BigInteger loadInBackground()
 		return wallet.getBalance(BalanceType.ESTIMATED);
 	}
 
-	private final ThrottelingWalletChangeListener walletChangeListener = new ThrottelingWalletChangeListener()
+	private final ThrottlingWalletChangeListener walletChangeListener = new ThrottlingWalletChangeListener()
 	{
 		@Override
-		public void onThrotteledWalletChanged()
+		public void onThrottledWalletChanged()
 		{
 			forceLoad();
 		}

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -374,6 +374,9 @@ private void handleLocalApp()
 
 	private void updateView()
 	{
+		if (!isResumed())
+			return;
+
 		final String request = determineRequestStr(true);
 
 		// update qr code

File: wallet/src/de/schildbach/wallet/ui/WalletDisclaimerFragment.java
Patch:
@@ -113,6 +113,9 @@ public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
 
 	private void updateView()
 	{
+		if (!isResumed())
+			return;
+
 		final boolean showBackup = prefs.getBoolean(Constants.PREFS_KEY_REMIND_BACKUP, true);
 		final boolean showSafety = prefs.getBoolean(Constants.PREFS_KEY_DISCLAIMER, true);
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -63,7 +63,6 @@ public class Constants
 	public static final String USER_AGENT = "Bitcoin Wallet";
 	public static final String DEFAULT_EXCHANGE_CURRENCY = "USD";
 	public static final int WALLET_OPERATION_STACK_SIZE = 256 * 1024;
-	public static final long BLOCKCHAIN_DOWNLOAD_THRESHOLD_MS = 5 * DateUtils.SECOND_IN_MILLIS;
 	public static final long BLOCKCHAIN_STATE_BROADCAST_THROTTLE_MS = DateUtils.SECOND_IN_MILLIS;
 	public static final long BLOCKCHAIN_UPTODATE_THRESHOLD_MS = DateUtils.HOUR_IN_MILLIS;
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -19,10 +19,12 @@
 
 import java.io.File;
 import java.nio.charset.Charset;
+import java.util.regex.Pattern;
 
 import android.os.Environment;
 import android.text.format.DateUtils;
 
+import com.google.bitcoin.core.Base58;
 import com.google.bitcoin.core.NetworkParameters;
 import com.google.bitcoin.params.MainNetParams;
 import com.google.bitcoin.params.TestNet3Params;
@@ -58,6 +60,7 @@ public class Constants
 			: BLOCKEXPLORER_BASE_URL_TEST;
 
 	public static final String MIMETYPE_TRANSACTION = "application/x-btctx";
+	public static final Pattern PATTERN_BITCOIN_ADDRESS = Pattern.compile("[" + new String(Base58.ALPHABET) + "]{20,40}");
 
 	public static final int MAX_NUM_CONFIRMATIONS = 7;
 	public static final String USER_AGENT = "Bitcoin Wallet";

File: wallet/src/de/schildbach/wallet/ui/SendCoinsActivity.java
Patch:
@@ -32,6 +32,7 @@
 import com.google.bitcoin.uri.BitcoinURI;
 import com.google.bitcoin.uri.BitcoinURIParseException;
 
+import de.schildbach.wallet.Constants;
 import de.schildbach.wallet.util.Bluetooth;
 import de.schildbach.wallet_test.R;
 
@@ -58,7 +59,7 @@ public static void start(final Context context, final String address, final Stri
 
 	public static void start(final Context context, final String uri)
 	{
-		if (uri.matches("[a-zA-Z0-9]*"))
+		if (Constants.PATTERN_BITCOIN_ADDRESS.matcher(uri).matches())
 		{
 			start(context, uri, null, null, null);
 		}

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -156,7 +156,7 @@ public void onActivityResult(final int requestCode, final int resultCode, final
 		{
 			final String result = intent.getStringExtra(ScanActivity.INTENT_EXTRA_RESULT);
 
-			if (result.startsWith("bitcoin:"))
+			if (result.startsWith("bitcoin:") || Constants.PATTERN_BITCOIN_ADDRESS.matcher(result).matches())
 			{
 				SendCoinsActivity.start(this, result);
 			}

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -295,7 +295,8 @@ public static void saveBackgroundTrace(final Throwable throwable, final PackageI
 			}
 			finally
 			{
-				writer.close();
+				if (writer != null)
+					writer.close();
 			}
 		}
 	}

File: wallet/src/de/schildbach/wallet/ui/BluetoothListenThread.java
Patch:
@@ -40,8 +40,6 @@ public BluetoothListenThread(final BluetoothAdapter adapter)
 		try
 		{
 			this.listeningSocket = adapter.listenUsingInsecureRfcommWithServiceRecord("Bitcoin Transaction Submission", Bluetooth.BLUETOOTH_UUID);
-
-			start();
 		}
 		catch (final IOException x)
 		{

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -377,6 +377,8 @@ public void run()
 				}
 			};
 
+			acceptThread.start();
+
 			bluetoothEnabledView.setVisibility(View.VISIBLE);
 		}
 	}

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -637,7 +637,7 @@ protected void handleException(final Exception x)
 					CrashReporter.saveBackgroundTrace(new RuntimeException(url, x), packageInfo);
 				}
 			}
-		};
+		}.start();
 
 		if (CrashReporter.hasSavedCrashTrace())
 		{

File: wallet/src/de/schildbach/wallet/util/HttpGetThread.java
Patch:
@@ -48,8 +48,6 @@ public HttpGetThread(final AssetManager assets, final String url)
 	{
 		this.assets = assets;
 		this.url = url;
-
-		start();
 	}
 
 	@Override

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -315,7 +315,8 @@ public void onActivityResult(final int requestCode, final int resultCode, final
 		{
 			maybeInitBluetoothListening();
 
-			updateView();
+			if (isResumed())
+				updateView();
 		}
 	}
 

File: wallet/src/de/schildbach/wallet/ExchangeRatesProvider.java
Patch:
@@ -212,7 +212,7 @@ private static Map<String, ExchangeRate> getBitcoinCharts()
 			Reader reader = null;
 			try
 			{
-				reader = new InputStreamReader(new BufferedInputStream(connection.getInputStream(), 1024));
+				reader = new InputStreamReader(new BufferedInputStream(connection.getInputStream(), 1024), Constants.UTF_8);
 				final StringBuilder content = new StringBuilder();
 				Io.copy(reader, content);
 
@@ -272,7 +272,7 @@ private static Map<String, ExchangeRate> getBlockchainInfo()
 			Reader reader = null;
 			try
 			{
-				reader = new InputStreamReader(new BufferedInputStream(connection.getInputStream(), 1024));
+				reader = new InputStreamReader(new BufferedInputStream(connection.getInputStream(), 1024), Constants.UTF_8);
 				final StringBuilder content = new StringBuilder();
 				Io.copy(reader, content);
 

File: wallet/src/de/schildbach/wallet/ui/ImportKeysActivity.java
Patch:
@@ -44,6 +44,7 @@
 import com.google.bitcoin.core.ECKey;
 import com.google.bitcoin.core.Wallet;
 
+import de.schildbach.wallet.Constants;
 import de.schildbach.wallet.util.Crypto;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
@@ -168,7 +169,7 @@ private void importPrivateKeys(final InputStream is, final String password)
 	{
 		try
 		{
-			final BufferedReader cipherIn = new BufferedReader(new InputStreamReader(is));
+			final BufferedReader cipherIn = new BufferedReader(new InputStreamReader(is, Constants.UTF_8));
 			final StringBuilder cipherText = new StringBuilder();
 			while (true)
 			{

File: wallet/src/de/schildbach/wallet/util/HttpGetThread.java
Patch:
@@ -82,13 +82,15 @@ public void run()
 
 			connection.setConnectTimeout(Constants.HTTP_TIMEOUT_MS);
 			connection.setReadTimeout(Constants.HTTP_TIMEOUT_MS);
+			connection.setRequestProperty("Accept-Charset", "utf-8");
 			connection.connect();
 
 			if (connection.getResponseCode() == HttpURLConnection.HTTP_OK)
 			{
 				final long serverTime = connection.getDate();
+				// TODO parse connection.getContentType() for charset
 
-				final BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()), 64);
+				final BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), Constants.UTF_8), 64);
 				final String line = reader.readLine().trim();
 				reader.close();
 

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -20,8 +20,9 @@
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileFilter;
-import java.io.FileReader;
+import java.io.FileInputStream;
 import java.io.IOException;
+import java.io.InputStreamReader;
 import java.io.Writer;
 import java.math.BigInteger;
 import java.text.DateFormat;
@@ -261,7 +262,7 @@ public boolean accept(final File file)
 
 			try
 			{
-				reader = new BufferedReader(new FileReader(file));
+				reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), Constants.UTF_8));
 				WalletUtils.readKeys(reader);
 
 				return true;

File: wallet/src/de/schildbach/wallet/ui/AbstractBindServiceActivity.java
Patch:
@@ -29,7 +29,7 @@
 /**
  * @author Andreas Schildbach
  */
-public class AbstractBindServiceActivity extends AbstractWalletActivity
+public abstract class AbstractBindServiceActivity extends AbstractWalletActivity
 {
 	private BlockchainService blockchainService;
 

File: wallet/src/de/schildbach/wallet/ui/AbstractOnDemandServiceActivity.java
Patch:
@@ -31,7 +31,7 @@
 /**
  * @author Andreas Schildbach
  */
-public class AbstractOnDemandServiceActivity extends AbstractWalletActivity
+public abstract class AbstractOnDemandServiceActivity extends AbstractWalletActivity
 {
 	protected void broadcastTransaction(final Transaction tx)
 	{

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -513,10 +513,10 @@ public void onReceive(final Context context, final Intent intent)
 					for (int i = 0; i < activityHistory.size(); i++)
 					{
 						final ActivityHistoryEntry entry = activityHistory.get(i);
-						final boolean blocksIdle = entry.numBlocksDownloaded > 0 && i <= IDLE_BLOCK_TIMEOUT_MIN;
-						final boolean transactionsIdle = entry.numTransactionsReceived > 0 && i <= IDLE_TRANSACTION_TIMEOUT_MIN;
+						final boolean blocksActive = entry.numBlocksDownloaded > 0 && i <= IDLE_BLOCK_TIMEOUT_MIN;
+						final boolean transactionsActive = entry.numTransactionsReceived > 0 && i <= IDLE_TRANSACTION_TIMEOUT_MIN;
 
-						if (blocksIdle || transactionsIdle)
+						if (blocksActive || transactionsActive)
 						{
 							isIdle = false;
 							break;

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -64,6 +64,7 @@
 import de.schildbach.wallet.service.BlockchainService;
 import de.schildbach.wallet.service.BlockchainServiceImpl;
 import de.schildbach.wallet.util.CrashReporter;
+import de.schildbach.wallet.util.LinuxSecureRandom;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -86,6 +87,8 @@ public class WalletApplication extends Application
 	@Override
 	public void onCreate()
 	{
+		new LinuxSecureRandom(); // init proper random number generator
+
 		initLogging();
 
 		StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder().detectAll().permitDiskReads().permitDiskWrites().penaltyLog().build());

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -53,7 +53,7 @@ public class Constants
 
 	private static final String BLOCKEXPLORER_BASE_URL_PROD = "https://blockexplorer.com/";
 	private static final String BLOCKEXPLORER_BASE_URL_TEST = "https://blockexplorer.com/testnet/";
-	public static final String BLOCKEXPLORER_BASE_URL = NETWORK_PARAMETERS.equals(NetworkParameters.ID_MAINNET) ? BLOCKEXPLORER_BASE_URL_PROD
+	public static final String BLOCKEXPLORER_BASE_URL = NETWORK_PARAMETERS.getId().equals(NetworkParameters.ID_MAINNET) ? BLOCKEXPLORER_BASE_URL_PROD
 			: BLOCKEXPLORER_BASE_URL_TEST;
 
 	public static final String MIMETYPE_TRANSACTION = "application/x-btctx";

File: wallet/src/de/schildbach/wallet/util/CrashReporter.java
Patch:
@@ -185,11 +185,11 @@ public static void appendApplicationInfo(final Appendable report, final WalletAp
 			final PackageInfo pi = pm.getPackageInfo(application.getPackageName(), 0);
 			report.append("Version: " + pi.versionName + " (" + pi.versionCode + ")\n");
 			report.append("Package: " + pi.packageName + "\n");
-			report.append("Test/Prod: " + (Constants.TEST ? "test" : "prod"));
+			report.append("Test/Prod: " + (Constants.TEST ? "test" : "prod") + "\n");
 			report.append("Time of application create: " + String.format("%tF %tT", TIME_CREATE_APPLICATION, TIME_CREATE_APPLICATION) + "\n");
 			final long now = System.currentTimeMillis();
 			report.append("Current time: " + String.format("%tF %tT", now, now) + "\n");
-			report.append("Network: " + Constants.NETWORK_PARAMETERS.getId());
+			report.append("Network: " + Constants.NETWORK_PARAMETERS.getId() + "\n");
 			final Wallet wallet = application.getWallet();
 			report.append("Keychain size: " + wallet.getKeychainSize() + "\n");
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -53,7 +53,8 @@ public class Constants
 
 	private static final String BLOCKEXPLORER_BASE_URL_PROD = "https://blockexplorer.com/";
 	private static final String BLOCKEXPLORER_BASE_URL_TEST = "https://blockexplorer.com/testnet/";
-	public static final String BLOCKEXPLORER_BASE_URL = TEST ? BLOCKEXPLORER_BASE_URL_TEST : BLOCKEXPLORER_BASE_URL_PROD;
+	public static final String BLOCKEXPLORER_BASE_URL = NETWORK_PARAMETERS.equals(NetworkParameters.ID_MAINNET) ? BLOCKEXPLORER_BASE_URL_PROD
+			: BLOCKEXPLORER_BASE_URL_TEST;
 
 	public static final String MIMETYPE_TRANSACTION = "application/x-btctx";
 

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -35,8 +35,6 @@ public class Constants
 {
 	public static final boolean TEST = R.class.getPackage().getName().contains("_test");
 
-	public static final String NETWORK_SUFFIX = TEST ? " [testnet3]" : "";
-
 	public static final NetworkParameters NETWORK_PARAMETERS = TEST ? TestNet3Params.get() : MainNetParams.get();
 	private static final String FILENAME_NETWORK_SUFFIX = NETWORK_PARAMETERS.getId().equals(NetworkParameters.ID_MAINNET) ? "" : "-testnet";
 

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -786,7 +786,8 @@ private void updateView()
 			receivingStaticAddressView.setText(WalletUtils.formatAddress(validatedAddress.address, Constants.ADDRESS_FORMAT_GROUP_SIZE,
 					Constants.ADDRESS_FORMAT_LINE_SIZE));
 			receivingStaticLabelView.setText(validatedAddress.label != null ? validatedAddress.label : getString(R.string.address_unlabeled));
-			receivingStaticLabelView.setTextColor(validatedAddress.label != null ? R.color.fg_significant : R.color.fg_insignificant);
+			receivingStaticLabelView.setTextColor(getResources().getColor(
+					validatedAddress.label != null ? R.color.fg_significant : R.color.fg_insignificant));
 		}
 		else
 		{

File: wallet/src/de/schildbach/wallet/ui/SendCoinsQrActivity.java
Patch:
@@ -24,7 +24,7 @@
 /**
  * @author Andreas Schildbach
  */
-public final class SendCoinsQrActivity extends AbstractWalletActivity
+public final class SendCoinsQrActivity extends Activity
 {
 	private static final int REQUEST_CODE_SCAN = 0;
 

File: wallet/src/de/schildbach/wallet/ui/WalletBalanceFragment.java
Patch:
@@ -175,6 +175,9 @@ public void onDestroy()
 
 	private void updateView()
 	{
+		if (!isAdded())
+			return;
+
 		final boolean showProgress;
 
 		if (download != BlockchainService.ACTION_BLOCKCHAIN_STATE_DOWNLOAD_OK)

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -601,7 +601,7 @@ public void onCreate()
 		intentFilter.addAction(Intent.ACTION_DEVICE_STORAGE_OK);
 		registerReceiver(connectivityReceiver, intentFilter);
 
-		blockChainFile = new File(getDir("blockstore", Context.MODE_WORLD_READABLE | Context.MODE_WORLD_WRITEABLE), Constants.BLOCKCHAIN_FILENAME);
+		blockChainFile = new File(getDir("blockstore", Context.MODE_PRIVATE), Constants.BLOCKCHAIN_FILENAME);
 		final boolean blockChainFileExists = blockChainFile.exists();
 
 		if (!blockChainFileExists)

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -159,7 +159,8 @@ public void onClick(final View v)
 
 		addressView = (Spinner) view.findViewById(R.id.request_coins_fragment_address);
 		final List<ECKey> keys = application.getWallet().getKeys();
-		final WalletAddressesAdapter adapter = new WalletAddressesAdapter(activity, keys, false);
+		final WalletAddressesAdapter adapter = new WalletAddressesAdapter(activity, false);
+		adapter.replace(keys);
 		addressView.setAdapter(adapter);
 		final Address selectedAddress = application.determineSelectedAddress();
 		for (int i = 0; i < keys.size(); i++)

File: wallet/src/de/schildbach/wallet/ui/CurrencyAmountView.java
Patch:
@@ -128,8 +128,6 @@ protected void onMeasure(final int wMeasureSpec, final int hMeasureSpec)
 		contextButton.setLayoutParams(chooseViewParams);
 		this.addView(contextButton);
 
-		setCurrencySymbol(Constants.CURRENCY_CODE_BITCOIN);
-
 		updateAppearance();
 	}
 

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -150,7 +150,9 @@ public void onClick(final View v)
 		});
 
 		final CurrencyAmountView btcAmountView = (CurrencyAmountView) view.findViewById(R.id.request_coins_amount_btc);
+		btcAmountView.setCurrencySymbol(Constants.CURRENCY_CODE_BITCOIN);
 		btcAmountView.setHintPrecision(btcPrecision);
+
 		final CurrencyAmountView localAmountView = (CurrencyAmountView) view.findViewById(R.id.request_coins_amount_local);
 		localAmountView.setHintPrecision(Constants.LOCAL_PRECISION);
 		amountCalculatorLink = new CurrencyCalculatorLink(btcAmountView, localAmountView);

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -400,7 +400,9 @@ private void handleClear()
 		});
 
 		final CurrencyAmountView btcAmountView = (CurrencyAmountView) view.findViewById(R.id.send_coins_amount_btc);
+		btcAmountView.setCurrencySymbol(Constants.CURRENCY_CODE_BITCOIN);
 		btcAmountView.setHintPrecision(btcPrecision);
+
 		final CurrencyAmountView localAmountView = (CurrencyAmountView) view.findViewById(R.id.send_coins_amount_local);
 		localAmountView.setHintPrecision(Constants.LOCAL_PRECISION);
 		amountCalculatorLink = new CurrencyCalculatorLink(btcAmountView, localAmountView);

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -88,7 +88,7 @@ public class Constants
 	public static final int ADDRESS_FORMAT_GROUP_SIZE = 4;
 	public static final int ADDRESS_FORMAT_LINE_SIZE = 12;
 
-	public static final int BTC_PRECISION = 8;
+	public static final int BTC_MAX_PRECISION = 8;
 	public static final int LOCAL_PRECISION = 4;
 
 	public static final String DONATION_ADDRESS = "15P7W9X5xWVLewpnSk5gjLWVakvZ3NRUGN";
@@ -122,6 +122,7 @@ public class Constants
 	public static final String PREFS_KEY_TRUSTED_PEER_ONLY = "trusted_peer_only";
 	public static final String PREFS_KEY_LABS_TRANSACTION_DETAILS = "labs_transactions_details";
 	public static final String PREFS_KEY_BTC_PRECISION = "btc_precision";
+	public static final String PREFS_DEFAULT_BTC_PRECISION = "4";
 	public static final String PREFS_KEY_DISCLAIMER = "disclaimer";
 
 	public static final BigInteger DUST = Utils.CENT.divide(BigInteger.valueOf(100));

File: wallet/src/de/schildbach/wallet/ExchangeRatesProvider.java
Patch:
@@ -67,7 +67,7 @@ public ExchangeRate(final String currencyCode, final BigInteger rate, final Stri
 		@Override
 		public String toString()
 		{
-			return getClass().getSimpleName() + '[' + currencyCode + ':' + GenericUtils.formatValue(rate, Constants.BTC_PRECISION) + ']';
+			return getClass().getSimpleName() + '[' + currencyCode + ':' + GenericUtils.formatValue(rate, Constants.BTC_MAX_PRECISION) + ']';
 		}
 	}
 

File: wallet/src/de/schildbach/wallet/WalletBalanceWidgetProvider.java
Patch:
@@ -59,7 +59,7 @@ public static void updateWidgets(final Context context, final AppWidgetManager a
 			final BigInteger balance)
 	{
 		final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-		final int precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Integer.toString(Constants.BTC_PRECISION)));
+		final int precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Constants.PREFS_DEFAULT_BTC_PRECISION));
 		final Editable balanceStr = new SpannableStringBuilder(GenericUtils.formatValue(balance, precision));
 		WalletUtils.formatSignificant(balanceStr, WalletUtils.SMALLER_SPAN);
 

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -185,7 +185,7 @@ private void notifyCoinsReceived(final Address from, final BigInteger amount)
 		if (from != null && !notificationAddresses.contains(from))
 			notificationAddresses.add(from);
 
-		final int precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Integer.toString(Constants.BTC_PRECISION)));
+		final int precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Constants.PREFS_DEFAULT_BTC_PRECISION));
 
 		final String tickerMsg = getString(R.string.notification_coins_received_msg, GenericUtils.formatValue(amount, precision))
 				+ Constants.NETWORK_SUFFIX;

File: wallet/src/de/schildbach/wallet/ui/AmountCalculatorFragment.java
Patch:
@@ -90,7 +90,7 @@ public void onAttach(final Activity activity)
 	@Override
 	public Dialog onCreateDialog(final Bundle savedInstanceState)
 	{
-		precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Integer.toString(Constants.BTC_PRECISION)));
+		precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Constants.PREFS_DEFAULT_BTC_PRECISION));
 
 		final AlertDialog.Builder dialog = new AlertDialog.Builder(activity);
 		dialog.setInverseBackgroundForced(true);

File: wallet/src/de/schildbach/wallet/ui/CurrencyAmountView.java
Patch:
@@ -64,7 +64,7 @@ public static interface Listener
 	private int significantColor, lessSignificantColor, errorColor;
 	private Drawable deleteButtonDrawable, contextButtonDrawable;
 	private CurrencyCodeDrawable currencyCodeDrawable;
-	private int precision = Constants.BTC_PRECISION;
+	private int precision = Constants.BTC_MAX_PRECISION;
 	private boolean amountSigned = false;
 	private boolean smallerInsignificant = true;
 	private boolean validateAmount = true;

File: wallet/src/de/schildbach/wallet/ui/CurrencyTextView.java
Patch:
@@ -41,7 +41,7 @@ public final class CurrencyTextView extends TextView
 	private String prefix = null;
 	private ForegroundColorSpan prefixColorSpan = null;
 	private BigInteger amount = null;
-	private int precision = Constants.BTC_PRECISION;
+	private int precision = Constants.BTC_MAX_PRECISION;
 	private boolean alwaysSigned = false;
 	private RelativeSizeSpan prefixRelativeSizeSpan = null;
 	private RelativeSizeSpan insignificantRelativeSizeSpan = null;

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -627,7 +627,7 @@ private void popupAvailable(final View anchor, final BigInteger available, final
 
 		final TextView viewPending = (TextView) popupAvailableView.findViewById(R.id.send_coins_popup_available_pending);
 		viewPending.setVisibility(pending.signum() > 0 ? View.VISIBLE : View.GONE);
-		viewPending.setText(getString(R.string.send_coins_fragment_pending, GenericUtils.formatValue(pending, Constants.BTC_PRECISION)));
+		viewPending.setText(getString(R.string.send_coins_fragment_pending, GenericUtils.formatValue(pending, Constants.BTC_MAX_PRECISION)));
 
 		popup(anchor, popupAvailableView);
 	}
@@ -777,7 +777,7 @@ private void updateView()
 		{
 			sentTransactionView.setVisibility(View.VISIBLE);
 			sentTransactionListAdapter.setPrecision(Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION,
-					Integer.toString(Constants.BTC_PRECISION))));
+					Constants.PREFS_DEFAULT_BTC_PRECISION)));
 			sentTransactionListAdapter.replace(sentTransaction);
 		}
 		else

File: wallet/src/de/schildbach/wallet/ui/TransactionFragment.java
Patch:
@@ -136,7 +136,7 @@ public void update(final Transaction tx)
 			if (amountSent.signum() != 0)
 			{
 				final TextView viewAmountSent = (TextView) view.findViewById(R.id.transaction_fragment_amount_sent);
-				viewAmountSent.setText(Constants.CURRENCY_MINUS_SIGN + GenericUtils.formatValue(amountSent, Constants.BTC_PRECISION));
+				viewAmountSent.setText(Constants.CURRENCY_MINUS_SIGN + GenericUtils.formatValue(amountSent, Constants.BTC_MAX_PRECISION));
 			}
 		}
 		catch (final ScriptException x)
@@ -149,7 +149,7 @@ public void update(final Transaction tx)
 		if (amountReceived.signum() != 0)
 		{
 			final TextView viewAmountReceived = (TextView) view.findViewById(R.id.transaction_fragment_amount_received);
-			viewAmountReceived.setText(Constants.CURRENCY_PLUS_SIGN + GenericUtils.formatValue(amountReceived, Constants.BTC_PRECISION));
+			viewAmountReceived.setText(Constants.CURRENCY_PLUS_SIGN + GenericUtils.formatValue(amountReceived, Constants.BTC_MAX_PRECISION));
 		}
 
 		final View viewFromButton = view.findViewById(R.id.transaction_fragment_from_button);

File: wallet/src/de/schildbach/wallet/ui/TransactionsListAdapter.java
Patch:
@@ -62,7 +62,7 @@ public class TransactionsListAdapter extends BaseAdapter
 	private final int maxConnectedPeers;
 
 	private final List<Transaction> transactions = new ArrayList<Transaction>();
-	private int precision = Constants.BTC_PRECISION;
+	private int precision = Constants.BTC_MAX_PRECISION;
 	private boolean showEmptyText = false;
 	private boolean showBackupWarning = false;
 

File: wallet/src/de/schildbach/wallet/ui/TransactionsListFragment.java
Patch:
@@ -410,7 +410,7 @@ public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
 
 	private void updateView()
 	{
-		adapter.setPrecision(Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Integer.toString(Constants.BTC_PRECISION))));
+		adapter.setPrecision(Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Constants.PREFS_DEFAULT_BTC_PRECISION)));
 
 		adapter.clearLabelCache();
 	}

File: wallet/src/de/schildbach/wallet/ui/WalletBalanceFragment.java
Patch:
@@ -246,8 +246,8 @@ public void run()
 			if (balance != null)
 			{
 				viewBalanceBtc.setVisibility(View.VISIBLE);
-				viewBalanceBtc.setPrecision(Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION,
-						Integer.toString(Constants.BTC_PRECISION))));
+				viewBalanceBtc.setPrecision(Integer.parseInt(prefs
+						.getString(Constants.PREFS_KEY_BTC_PRECISION, Constants.PREFS_DEFAULT_BTC_PRECISION)));
 				viewBalanceBtc.setAmount(balance);
 
 				if (showLocalBalance)

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -24,6 +24,7 @@
 import java.net.InetSocketAddress;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Date;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
@@ -305,6 +306,8 @@ public void run()
 		@Override
 		public void onBlocksDownloaded(final Peer peer, final Block block, final int blocksLeft)
 		{
+			bestChainHeightEver = Math.max(bestChainHeightEver, blockChain.getChainHead().getHeight());
+
 			delayHandler.removeCallbacksAndMessages(null);
 
 			final long now = System.currentTimeMillis();

File: wallet/src/de/schildbach/wallet/ui/AbstractWalletActivity.java
Patch:
@@ -42,9 +42,9 @@ public abstract class AbstractWalletActivity extends SherlockFragmentActivity
 	@Override
 	protected void onCreate(final Bundle savedInstanceState)
 	{
-		super.onCreate(savedInstanceState);
-
 		application = (WalletApplication) getApplication();
+
+		super.onCreate(savedInstanceState);
 	}
 
 	protected WalletApplication getWalletApplication()

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -144,7 +144,7 @@ public void onResume()
 		loaderManager.initLoader(ID_BALANCE_LOADER, null, balanceLoaderCallbacks);
 		loaderManager.initLoader(ID_RATE_LOADER, null, rateLoaderCallbacks);
 
-		defaultCurrency = prefs.getString(Constants.PREFS_KEY_EXCHANGE_CURRENCY, Constants.DEFAULT_EXCHANGE_CURRENCY);
+		defaultCurrency = prefs.getString(Constants.PREFS_KEY_EXCHANGE_CURRENCY, null);
 		prefs.registerOnSharedPreferenceChangeListener(this);
 
 		updateView();
@@ -216,7 +216,7 @@ public void onSharedPreferenceChanged(final SharedPreferences sharedPreferences,
 	{
 		if (Constants.PREFS_KEY_EXCHANGE_CURRENCY.equals(key))
 		{
-			defaultCurrency = prefs.getString(Constants.PREFS_KEY_EXCHANGE_CURRENCY, Constants.DEFAULT_EXCHANGE_CURRENCY);
+			defaultCurrency = prefs.getString(Constants.PREFS_KEY_EXCHANGE_CURRENCY, null);
 
 			updateView();
 		}

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -182,6 +182,9 @@ public static BigInteger btcValue(final BigInteger localValue, final BigInteger
 
 	public static Address getFromAddress(final Transaction tx)
 	{
+		if (tx.isCoinBase())
+			return null;
+
 		try
 		{
 			for (final TransactionInput input : tx.getInputs())

File: wallet/src/de/schildbach/wallet/ExchangeRatesProvider.java
Patch:
@@ -125,6 +125,8 @@ else if (selection.equals(KEY_CURRENCY_CODE))
 		{
 			final String code = selectionArgs[0];
 			final ExchangeRate rate = exchangeRates.get(code);
+			if (rate == null)
+				return null;
 			cursor.newRow().add(code.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(rate.source);
 		}
 

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -271,7 +271,7 @@ private void changed(final int numPeers)
 			{
 				public void run()
 				{
-					final boolean connectivityNotification = prefs.getBoolean(Constants.PREFS_KEY_CONNECTIVITY_NOTIFICATION, true);
+					final boolean connectivityNotification = prefs.getBoolean(Constants.PREFS_KEY_CONNECTIVITY_NOTIFICATION, false);
 
 					if (!connectivityNotification || numPeers == 0)
 					{

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -139,7 +139,7 @@ public boolean onPrepareOptionsMenu(final Menu menu)
 		menu.findItem(R.id.wallet_options_import_keys).setEnabled(
 				Environment.MEDIA_MOUNTED.equals(externalStorageState) || Environment.MEDIA_MOUNTED_READ_ONLY.equals(externalStorageState));
 		menu.findItem(R.id.wallet_options_export_keys).setEnabled(Environment.MEDIA_MOUNTED.equals(externalStorageState));
-		menu.findItem(R.id.wallet_options_disconnect).setVisible(prefs.getBoolean(Constants.PREFS_KEY_CONNECTIVITY_NOTIFICATION, true));
+		menu.findItem(R.id.wallet_options_disconnect).setVisible(prefs.getBoolean(Constants.PREFS_KEY_CONNECTIVITY_NOTIFICATION, false));
 
 		return true;
 	}

File: wallet/src/de/schildbach/wallet/ExchangeRatesProvider.java
Patch:
@@ -41,8 +41,8 @@
 
 import com.google.bitcoin.core.Utils;
 
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.IOUtils;
-import de.schildbach.wallet.util.WalletUtils;
 
 /**
  * @author Andreas Schildbach
@@ -65,7 +65,7 @@ public ExchangeRate(final String currencyCode, final BigInteger rate, final Stri
 		@Override
 		public String toString()
 		{
-			return getClass().getSimpleName() + '[' + currencyCode + ':' + WalletUtils.formatValue(rate, Constants.BTC_PRECISION) + ']';
+			return getClass().getSimpleName() + '[' + currencyCode + ':' + GenericUtils.formatValue(rate, Constants.BTC_PRECISION) + ']';
 		}
 	}
 

File: wallet/src/de/schildbach/wallet/WalletBalanceWidgetProvider.java
Patch:
@@ -36,6 +36,7 @@
 import de.schildbach.wallet.ui.RequestCoinsActivity;
 import de.schildbach.wallet.ui.SendCoinsActivity;
 import de.schildbach.wallet.ui.WalletActivity;
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -59,7 +60,7 @@ public static void updateWidgets(final Context context, final AppWidgetManager a
 	{
 		final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
 		final int precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Integer.toString(Constants.BTC_PRECISION)));
-		final Editable balanceStr = new SpannableStringBuilder(WalletUtils.formatValue(balance, precision));
+		final Editable balanceStr = new SpannableStringBuilder(GenericUtils.formatValue(balance, precision));
 		WalletUtils.formatSignificant(balanceStr, WalletUtils.SMALLER_SPAN);
 
 		for (final int appWidgetId : appWidgetIds)

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -86,8 +86,8 @@
 import de.schildbach.wallet.WalletApplication;
 import de.schildbach.wallet.WalletBalanceWidgetProvider;
 import de.schildbach.wallet.ui.WalletActivity;
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.ThrottelingWalletChangeListener;
-import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
 /**
@@ -186,10 +186,10 @@ private void notifyCoinsReceived(final Address from, final BigInteger amount)
 
 		final int precision = Integer.parseInt(prefs.getString(Constants.PREFS_KEY_BTC_PRECISION, Integer.toString(Constants.BTC_PRECISION)));
 
-		final String tickerMsg = getString(R.string.notification_coins_received_msg, WalletUtils.formatValue(amount, precision))
+		final String tickerMsg = getString(R.string.notification_coins_received_msg, GenericUtils.formatValue(amount, precision))
 				+ Constants.NETWORK_SUFFIX;
 
-		final String msg = getString(R.string.notification_coins_received_msg, WalletUtils.formatValue(notificationAccumulatedAmount, precision))
+		final String msg = getString(R.string.notification_coins_received_msg, GenericUtils.formatValue(notificationAccumulatedAmount, precision))
 				+ Constants.NETWORK_SUFFIX;
 
 		final StringBuilder text = new StringBuilder();

File: wallet/src/de/schildbach/wallet/ui/AmountCalculatorFragment.java
Patch:
@@ -42,6 +42,7 @@
 import de.schildbach.wallet.Constants;
 import de.schildbach.wallet.ExchangeRatesProvider;
 import de.schildbach.wallet.ExchangeRatesProvider.ExchangeRate;
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -210,7 +211,7 @@ private void updateAppearance()
 			}
 
 			exchangeRateView.setText(getString(R.string.amount_calculator_dialog_exchange_rate, exchangeCurrency,
-					WalletUtils.formatValue(WalletUtils.localValue(Utils.COIN, exchangeRate.rate), precision), exchangeRate.source));
+					GenericUtils.formatValue(WalletUtils.localValue(Utils.COIN, exchangeRate.rate), precision), exchangeRate.source));
 		}
 		else
 		{

File: wallet/src/de/schildbach/wallet/ui/CurrencyTextView.java
Patch:
@@ -29,6 +29,7 @@
 import android.util.AttributeSet;
 import android.widget.TextView;
 import de.schildbach.wallet.Constants;
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -125,9 +126,9 @@ private void updateView()
 		{
 			final String s;
 			if (alwaysSigned)
-				s = WalletUtils.formatValue(amount, Constants.CURRENCY_PLUS_SIGN, Constants.CURRENCY_MINUS_SIGN, precision);
+				s = GenericUtils.formatValue(amount, Constants.CURRENCY_PLUS_SIGN, Constants.CURRENCY_MINUS_SIGN, precision);
 			else
-				s = WalletUtils.formatValue(amount, precision);
+				s = GenericUtils.formatValue(amount, precision);
 
 			text = new SpannableStringBuilder(s);
 			WalletUtils.formatSignificant(text, insignificantRelativeSizeSpan);

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -77,6 +77,7 @@
 import de.schildbach.wallet.integration.android.BitcoinIntegration;
 import de.schildbach.wallet.service.BlockchainService;
 import de.schildbach.wallet.service.BlockchainServiceImpl;
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -405,7 +406,7 @@ private void feeDialog()
 
 				final AlertDialog.Builder dialog = new AlertDialog.Builder(activity);
 				dialog.setMessage(getString(R.string.send_coins_dialog_fee_message,
-						Constants.CURRENCY_CODE_BITCOIN + " " + WalletUtils.formatValue(Constants.DEFAULT_TX_FEE, Constants.BTC_PRECISION)));
+						Constants.CURRENCY_CODE_BITCOIN + " " + GenericUtils.formatValue(Constants.DEFAULT_TX_FEE, Constants.BTC_PRECISION)));
 				if (allowLowFee)
 				{
 					dialog.setPositiveButton(R.string.send_coins_dialog_fee_button_send, new DialogInterface.OnClickListener()
@@ -698,7 +699,7 @@ private void popupAvailable(final View anchor, final BigInteger available, final
 
 		final TextView viewPending = (TextView) popupAvailableView.findViewById(R.id.send_coins_popup_available_pending);
 		viewPending.setVisibility(pending.signum() > 0 ? View.VISIBLE : View.GONE);
-		viewPending.setText(getString(R.string.send_coins_fragment_pending, WalletUtils.formatValue(pending, Constants.BTC_PRECISION)));
+		viewPending.setText(getString(R.string.send_coins_fragment_pending, GenericUtils.formatValue(pending, Constants.BTC_PRECISION)));
 
 		popup(anchor, popupAvailableView);
 	}

File: wallet/src/de/schildbach/wallet/ui/TransactionFragment.java
Patch:
@@ -51,6 +51,7 @@
 import de.schildbach.wallet.WalletApplication;
 import de.schildbach.wallet.util.Base43;
 import de.schildbach.wallet.util.BitmapFragment;
+import de.schildbach.wallet.util.GenericUtils;
 import de.schildbach.wallet.util.WalletUtils;
 import de.schildbach.wallet_test.R;
 
@@ -135,7 +136,7 @@ public void update(final Transaction tx)
 			if (amountSent.signum() != 0)
 			{
 				final TextView viewAmountSent = (TextView) view.findViewById(R.id.transaction_fragment_amount_sent);
-				viewAmountSent.setText(Constants.CURRENCY_MINUS_SIGN + WalletUtils.formatValue(amountSent, Constants.BTC_PRECISION));
+				viewAmountSent.setText(Constants.CURRENCY_MINUS_SIGN + GenericUtils.formatValue(amountSent, Constants.BTC_PRECISION));
 			}
 		}
 		catch (final ScriptException x)
@@ -148,7 +149,7 @@ public void update(final Transaction tx)
 		if (amountReceived.signum() != 0)
 		{
 			final TextView viewAmountReceived = (TextView) view.findViewById(R.id.transaction_fragment_amount_received);
-			viewAmountReceived.setText(Constants.CURRENCY_PLUS_SIGN + WalletUtils.formatValue(amountReceived, Constants.BTC_PRECISION));
+			viewAmountReceived.setText(Constants.CURRENCY_PLUS_SIGN + GenericUtils.formatValue(amountReceived, Constants.BTC_PRECISION));
 		}
 
 		final View viewFromButton = view.findViewById(R.id.transaction_fragment_from_button);

File: wallet/src/de/schildbach/wallet/ui/TransactionsListFragment.java
Patch:
@@ -282,7 +282,7 @@ public void onLoadFinished(final Loader<List<Transaction>> loader, final List<Tr
 
 	public void onLoaderReset(final Loader<List<Transaction>> loader)
 	{
-		adapter.clear();
+		// don't clear the adapter, because it will confuse users
 	}
 
 	private final ThrottelingWalletChangeListener transactionChangeListener = new ThrottelingWalletChangeListener(THROTTLE_MS)

File: wallet/src/de/schildbach/wallet/ui/CurrencyAmountView.java
Patch:
@@ -296,6 +296,7 @@ protected Parcelable onSaveInstanceState()
 	{
 		final Bundle state = new Bundle();
 		state.putParcelable("super_state", super.onSaveInstanceState());
+		state.putParcelable("child_textview", textView.onSaveInstanceState());
 		state.putSerializable("amount", getAmount());
 		return state;
 	}
@@ -307,6 +308,7 @@ protected void onRestoreInstanceState(final Parcelable state)
 		{
 			final Bundle bundle = (Bundle) state;
 			super.onRestoreInstanceState(bundle.getParcelable("super_state"));
+			textView.onRestoreInstanceState(bundle.getParcelable("child_textview"));
 			setAmount((BigInteger) bundle.getSerializable("amount"));
 		}
 		else

File: wallet/src/de/schildbach/wallet/service/BlockchainService.java
Patch:
@@ -45,6 +45,7 @@ public interface BlockchainService
 
 	public static final String ACTION_CANCEL_COINS_RECEIVED = R.class.getPackage().getName() + ".cancel_coins_received";
 	public static final String ACTION_HOLD_WIFI_LOCK = R.class.getPackage().getName() + ".hold_wifi_lock";
+	public static final String ACTION_RESET_BLOCKCHAIN = R.class.getPackage().getName() + ".reset_blockchain";
 
 	void broadcastTransaction(Transaction tx);
 

File: wallet/src/de/schildbach/wallet/ui/ExchangeRatesFragment.java
Patch:
@@ -26,7 +26,6 @@
 import android.database.Cursor;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v4.app.ListFragment;
 import android.support.v4.app.LoaderManager;
 import android.support.v4.content.CursorLoader;
 import android.support.v4.content.Loader;
@@ -38,6 +37,7 @@
 import android.widget.ListView;
 import android.widget.TextView;
 
+import com.actionbarsherlock.app.SherlockListFragment;
 import com.actionbarsherlock.view.ActionMode;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
@@ -57,7 +57,8 @@
 /**
  * @author Andreas Schildbach
  */
-public final class ExchangeRatesFragment extends ListFragment implements LoaderManager.LoaderCallbacks<Cursor>, OnSharedPreferenceChangeListener
+public final class ExchangeRatesFragment extends SherlockListFragment implements LoaderManager.LoaderCallbacks<Cursor>,
+		OnSharedPreferenceChangeListener
 {
 	private AbstractWalletActivity activity;
 	private WalletApplication application;

File: wallet/src/de/schildbach/wallet/ui/BlockListFragment.java
Patch:
@@ -226,7 +226,7 @@ private BlockLoader(final Context context, final BlockchainService service)
 		{
 			super(context);
 
-			this.context = context;
+			this.context = context.getApplicationContext();
 			this.service = service;
 		}
 

File: wallet/src/de/schildbach/wallet/ui/PeerListFragment.java
Patch:
@@ -224,7 +224,7 @@ private PeerLoader(final Context context, final BlockchainService service)
 		{
 			super(context);
 
-			this.context = context;
+			this.context = context.getApplicationContext();
 			this.service = service;
 		}
 

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -686,6 +686,7 @@ public void onDestroy()
 		if (peerGroup != null)
 		{
 			peerGroup.removeEventListener(peerConnectivityListener);
+			peerGroup.removeWallet(application.getWallet());
 			peerGroup.stopAndWait();
 		}
 

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -259,7 +259,7 @@ public static List<ECKey> readKeys(final BufferedReader in) throws IOException
 				final String line = in.readLine();
 				if (line == null)
 					break; // eof
-				if (line.length() == 0 || line.charAt(0) == '#')
+				if (line.trim().length() == 0 || line.charAt(0) == '#')
 					continue; // skip comment
 
 				final String[] parts = line.split(" ");

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -734,7 +734,8 @@ public void onLowMemory()
 
 	public void broadcastTransaction(final Transaction tx)
 	{
-		peerGroup.broadcastTransaction(tx);
+		if (peerGroup != null)
+			peerGroup.broadcastTransaction(tx);
 	}
 
 	public List<Peer> getConnectedPeers()

File: wallet/src/de/schildbach/wallet/ui/ScanActivity.java
Patch:
@@ -243,7 +243,7 @@ public void run()
 		{
 			final Camera camera = cameraManager.getCamera();
 			final String focusMode = camera.getParameters().getFocusMode();
-			final boolean useAutoFocus = focusMode.equals(Camera.Parameters.FOCUS_MODE_AUTO) || focusMode.equals(Camera.Parameters.FOCUS_MODE_MACRO);
+			final boolean useAutoFocus = Camera.Parameters.FOCUS_MODE_AUTO.equals(focusMode) || Camera.Parameters.FOCUS_MODE_MACRO.equals(focusMode);
 
 			if (useAutoFocus)
 			{

File: wallet/src/de/schildbach/wallet/service/BlockchainServiceImpl.java
Patch:
@@ -672,7 +672,7 @@ public void onDestroy()
 		if (peerGroup != null)
 		{
 			peerGroup.removeEventListener(peerConnectivityListener);
-			peerGroup.stop();
+			peerGroup.stopAndWait();
 		}
 
 		peerConnectivityListener.stop();
@@ -695,6 +695,8 @@ public void onDestroy()
 			throw new RuntimeException(x);
 		}
 
+		application.saveWallet();
+
 		if (wakeLock.isHeld())
 		{
 			Log.d(TAG, "wakelock still held, releasing");

File: wallet/src/de/schildbach/wallet/ui/TransactionsListAdapter.java
Patch:
@@ -104,7 +104,6 @@ public View getView(final int position, View row, final ViewGroup parent)
 			final boolean sent = value.signum() < 0;
 
 			final CircularProgressView rowConfidenceCircular = (CircularProgressView) row.findViewById(R.id.transaction_row_confidence_circular);
-			rowConfidenceCircular.setMaxProgress(Constants.MAX_NUM_CONFIRMATIONS);
 			final TextView rowConfidenceTextual = (TextView) row.findViewById(R.id.transaction_row_confidence_textual);
 
 			final int textColor;

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -100,6 +100,9 @@ public class Constants
 	public static final int ADDRESS_FORMAT_GROUP_SIZE = 4;
 	public static final int ADDRESS_FORMAT_LINE_SIZE = 12;
 
+	public static final int BTC_PRECISION = 8;
+	public static final int LOCAL_PRECISION = 4;
+
 	public static final String DONATION_ADDRESS = "1MH7wUsZ8K28q7LUrn2PQgDEykAbEibU4G";
 
 	public static final String LICENSE_URL = "http://www.gnu.org/licenses/gpl-3.0.txt";

File: wallet/src/de/schildbach/wallet/ui/WalletBalanceFragment.java
Patch:
@@ -17,7 +17,6 @@
 
 package de.schildbach.wallet.ui;
 
-import java.math.BigDecimal;
 import java.math.BigInteger;
 
 import android.app.Activity;
@@ -118,6 +117,7 @@ public void onViewCreated(final View view, final Bundle savedInstanceState)
 		viewBalance = (CurrencyAmountView) view.findViewById(R.id.wallet_balance);
 
 		viewBalanceLocal = (CurrencyAmountView) view.findViewById(R.id.wallet_balance_local);
+		viewBalanceLocal.setPrecision(Constants.LOCAL_PRECISION);
 		viewBalanceLocal.setSmallerInsignificant(false);
 		viewBalanceLocal.setStrikeThru(Constants.TEST);
 	}
@@ -157,8 +157,7 @@ private void updateView()
 				if (exchangeRate != null)
 				{
 					final BigInteger balance = wallet.getBalance(BalanceType.ESTIMATED);
-					final BigDecimal bdRate = new BigDecimal(exchangeRate.rate);
-					final BigInteger localValue = WalletUtils.localValue(balance, bdRate);
+					final BigInteger localValue = WalletUtils.localValue(balance, exchangeRate.rate);
 					viewBalanceLocal.setVisibility(View.VISIBLE);
 					viewBalanceLocal.setCurrencyCode(Constants.PREFIX_ALMOST_EQUAL_TO + exchangeRate.currencyCode);
 					viewBalanceLocal.setAmount(localValue);

File: wallet/src/de/schildbach/wallet/ui/PeerListFragment.java
Patch:
@@ -104,7 +104,7 @@ public View getView(final int position, View row, final ViewGroup parent)
 				rowIp.setText(peer.getAddress().getAddr().getHostAddress());
 
 				final TextView rowHeight = (TextView) row.findViewById(R.id.peer_list_row_height);
-				final long bestHeight = versionMessage.bestHeight;
+				final long bestHeight = peer.getBestHeight();
 				rowHeight.setText(bestHeight > 0 ? bestHeight + " blocks" : null);
 				rowHeight.setTypeface(isDownloading ? Typeface.DEFAULT_BOLD : Typeface.DEFAULT);
 

File: wallet/src/de/schildbach/wallet/service/AutosyncReceiver.java
Patch:
@@ -42,7 +42,7 @@ public void onReceive(final Context context, final Intent intent)
 		Log.i(TAG, "got broadcast intent: " + intent);
 
 		// other app got replaced
-		if (intent.getAction().equals(Intent.ACTION_PACKAGE_REPLACED) && !intent.getDataString().equals(context.getPackageName()))
+		if (intent.getAction().equals(Intent.ACTION_PACKAGE_REPLACED) && !intent.getDataString().equals("package:" + context.getPackageName()))
 			return;
 
 		final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);

File: wallet/src/de/schildbach/wallet/util/ErrorReporter.java
Patch:
@@ -290,11 +290,12 @@ private void sendError(final Context context)
 
 	private static void appendReport(final StringBuilder report, final File file, final int indent)
 	{
-		final Formatter formatter = new Formatter(report);
-
 		for (int i = 0; i < indent; i++)
 			report.append("  - ");
+
+		final Formatter formatter = new Formatter(report);
 		formatter.format("%tF %tT  %s  [%d]\n", file.lastModified(), file.lastModified(), file.getName(), file.length());
+		formatter.close();
 
 		if (file.isDirectory())
 			for (final File f : file.listFiles())

File: wallet/src/de/schildbach/wallet/ui/PeerListFragment.java
Patch:
@@ -28,7 +28,6 @@
 import android.content.ServiceConnection;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.support.v4.app.LoaderManager;
 import android.support.v4.app.LoaderManager.LoaderCallbacks;
 import android.support.v4.content.AsyncTaskLoader;
 import android.support.v4.content.Loader;
@@ -51,7 +50,6 @@ public final class PeerListFragment extends SherlockListFragment implements Load
 {
 	private AbstractWalletActivity activity;
 	private BlockchainService service;
-	private LoaderManager lm;
 	private ArrayAdapter<Peer> adapter;
 
 	@Override
@@ -97,7 +95,7 @@ public View getView(final int position, View row, final ViewGroup parent)
 				rowText1.setText(peer.getAddress().toString());
 
 				final TextView rowText2 = (TextView) row.findViewById(android.R.id.text2);
-				rowText2.setText(peer.getVersionMessage().toString());
+				rowText2.setText(peer.getPeerVersionMessage().toString());
 
 				return row;
 			}

File: wallet/src/de/schildbach/wallet/util/EncryptionUtils.java
Patch:
@@ -172,7 +172,7 @@ private static byte[] encrypt(final byte[] plainTextAsBytes, final char[] passwo
 		}
 		catch (final InvalidCipherTextException x)
 		{
-			throw new IOException("Could not encrypt bytes", x);
+			throw new IOException("Could not encrypt bytes: " + x);
 		}
 	}
 
@@ -238,7 +238,7 @@ private static byte[] decrypt(final byte[] bytesToDecode, final char[] password)
 		}
 		catch (final InvalidCipherTextException x)
 		{
-			throw new IOException("Could not decrypt input string", x);
+			throw new IOException("Could not decrypt input string: " + x);
 		}
 	}
 

File: wallet/src/de/schildbach/wallet/util/WalletUtils.java
Patch:
@@ -272,11 +272,11 @@ public static List<ECKey> readKeys(final BufferedReader in) throws IOException
 		}
 		catch (final AddressFormatException x)
 		{
-			throw new IOException(x);
+			throw new IOException("cannot read keys: " + x);
 		}
 		catch (final ParseException x)
 		{
-			throw new IOException(x);
+			throw new IOException("cannot read keys: " + x);
 		}
 	}
 

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -31,6 +31,7 @@
 import java.nio.charset.Charset;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Locale;
 import java.util.concurrent.TimeUnit;
 
 import android.app.Application;
@@ -364,7 +365,8 @@ private void backupKeys()
 		try
 		{
 			final long MS_PER_DAY = 24 * 60 * 60 * 1000;
-			final String filename = String.format("%s.%02d", Constants.WALLET_KEY_BACKUP_BASE58, (System.currentTimeMillis() / MS_PER_DAY) % 100l);
+			final String filename = String.format(Locale.US, "%s.%02d", Constants.WALLET_KEY_BACKUP_BASE58,
+					(System.currentTimeMillis() / MS_PER_DAY) % 100l);
 			writeKeys(openFileOutput(filename, Context.MODE_PRIVATE));
 		}
 		catch (final IOException x)

File: wallet/src/de/schildbach/wallet/ui/TransactionFragment.java
Patch:
@@ -22,6 +22,7 @@
 import java.math.BigInteger;
 import java.text.DateFormat;
 import java.util.Date;
+import java.util.Locale;
 import java.util.zip.GZIPOutputStream;
 
 import android.app.Activity;
@@ -254,7 +255,7 @@ else if (confidenceType == ConfidenceType.BUILDING)
 			txStr.append(useCompressioon ? 'Z' : '-');
 			txStr.append(Base43.encode(useCompressioon ? gzippedSerializedTx : serializedTx));
 
-			final Bitmap qrCodeBitmap = WalletUtils.getQRCodeBitmap(txStr.toString().toUpperCase(), 512);
+			final Bitmap qrCodeBitmap = WalletUtils.getQRCodeBitmap(txStr.toString().toUpperCase(Locale.US), 512);
 			viewQr.setImageBitmap(qrCodeBitmap);
 			viewQr.setOnClickListener(new OnClickListener()
 			{

File: wallet/src/de/schildbach/wallet/service/BlockchainService.java
Patch:
@@ -20,12 +20,12 @@
 import java.math.BigInteger;
 import java.util.List;
 
-import android.R;
-
 import com.google.bitcoin.core.Address;
 import com.google.bitcoin.core.Peer;
 import com.google.bitcoin.core.Transaction;
 
+import de.schildbach.wallet_test.R;
+
 /**
  * @author Andreas Schildbach
  */

File: wallet/src/de/schildbach/wallet/util/EncryptionUtils.java
Patch:
@@ -256,7 +256,7 @@ private static byte[] concat(final byte[] arrayA, final byte[] arrayB)
 
 	public final static FileFilter OPENSSL_FILE_FILTER = new FileFilter()
 	{
-		final char[] buf = new char[OPENSSL_MAGIC_TEXT.length()];
+		private final char[] buf = new char[OPENSSL_MAGIC_TEXT.length()];
 
 		public boolean accept(final File file)
 		{

File: wallet/src/de/schildbach/wallet/ui/AbstractWalletActivity.java
Patch:
@@ -59,7 +59,8 @@ protected void onStart()
 
 		final ActionBar actionBar = getSupportActionBar();
 		actionBar.setIcon(R.drawable.app_icon);
-		actionBar.setSubtitle(Constants.TEST ? "[testnet3]" : null);
+		final String subtitle = Constants.NETWORK_SUFFIX.trim();
+		actionBar.setSubtitle(subtitle.length() > 0 ? subtitle : null);
 	}
 
 	protected WalletApplication getWalletApplication()

File: wallet/src/de/schildbach/wallet/ui/RequestCoinsFragment.java
Patch:
@@ -229,7 +229,7 @@ private void handleCopy()
 		clipboardManager.setText(request);
 		activity.toast(R.string.request_coins_clipboard_msg);
 
-		System.out.println("bitcoin request uri: " + request + (Constants.TEST ? " [testnet3]" : ""));
+		System.out.println("bitcoin request uri: " + request + Constants.NETWORK_SUFFIX);
 	}
 
 	private void updateView()

File: wallet/src/de/schildbach/wallet/service/AutosyncReceiver.java
Patch:
@@ -37,7 +37,7 @@ public class AutosyncReceiver extends BroadcastReceiver
 	public void onReceive(final Context context, final Intent intent)
 	{
 		final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(context);
-		final boolean prefsAutosync = prefs.getBoolean(Constants.PREFS_KEY_AUTOSYNC, false);
+		final boolean prefsAutosync = prefs.getBoolean(Constants.PREFS_KEY_AUTOSYNC, true);
 		final long prefsLastUsed = prefs.getLong(Constants.PREFS_KEY_LAST_USED, 0);
 
 		// determine power connected state

File: wallet/src/de/schildbach/wallet/ui/PeerListFragment.java
Patch:
@@ -122,8 +122,9 @@ public void onLoadFinished(final Loader<List<Peer>> loader, final List<Peer> pee
 	{
 		adapter.clear();
 
-		for (final Peer peer : peers)
-			adapter.add(peer);
+		if (peers != null)
+			for (final Peer peer : peers)
+				adapter.add(peer);
 	}
 
 	public void onLoaderReset(final Loader<List<Peer>> loader)

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -80,7 +80,6 @@ public class Constants
 	public static final int BLOCKCHAIN_DOWNLOAD_THRESHOLD_MS = 5000;
 	public static final int BLOCKCHAIN_STATE_BROADCAST_THROTTLE_MS = 1000;
 	public static final int BLOCKCHAIN_UPTODATE_THRESHOLD_HOURS = 1;
-	public static final int SHUTDOWN_REMOVE_NOTIFICATION_DELAY = 1000;
 	public static final String LOCK_NAME = PACKAGE_NAME + " blockchain sync";
 
 	public static final String CURRENCY_CODE_BITCOIN = "BTC";

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -711,6 +711,7 @@ else if (receivingAddress != null && amount != null)
 			public void run()
 			{
 				validateReceivingAddress(true);
+				validateAmounts(true);
 			}
 		}, 500);
 	}

File: wallet/src/de/schildbach/wallet/ui/SendCoinsFragment.java
Patch:
@@ -315,7 +315,8 @@ public void onClick(final View v)
 		{
 			public void onClick(final View v)
 			{
-				activity.setResult(Activity.RESULT_CANCELED);
+				if (state == State.INPUT)
+					activity.setResult(Activity.RESULT_CANCELED);
 
 				activity.finish();
 			}

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -31,7 +31,6 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.ServiceConnection;
-import android.content.res.Configuration;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.IBinder;
@@ -45,8 +44,8 @@
 import com.actionbarsherlock.view.MenuItem;
 
 import de.schildbach.wallet.Constants;
-import de.schildbach.wallet.service.BlockchainServiceImpl;
 import de.schildbach.wallet.service.BlockchainService;
+import de.schildbach.wallet.service.BlockchainServiceImpl;
 import de.schildbach.wallet.util.ErrorReporter;
 import de.schildbach.wallet_test.R;
 
@@ -86,7 +85,8 @@ protected void onCreate(final Bundle savedInstanceState)
 		final ActionBar actionBar = getSupportActionBar();
 		actionBar.setTitle(R.string.app_name);
 
-		if ((getResources().getConfiguration().screenLayout & Configuration.SCREENLAYOUT_SIZE_MASK) < Configuration.SCREENLAYOUT_SIZE_LARGE)
+		final boolean twoPanes = findViewById(R.id.wallet_main_twopanes) != null;
+		if (!twoPanes)
 		{
 			final FragmentManager fm = getSupportFragmentManager();
 			final FragmentTransaction ft = fm.beginTransaction();

File: wallet/src/de/schildbach/wallet/util/NfcTools.java
Patch:
@@ -20,7 +20,6 @@
 import java.nio.charset.Charset;
 import java.util.Arrays;
 
-import android.annotation.TargetApi;
 import android.app.Activity;
 import android.nfc.NdefMessage;
 import android.nfc.NdefRecord;
@@ -31,7 +30,6 @@
 /**
  * @author Andreas Schildbach
  */
-@TargetApi(10)
 public class NfcTools
 {
 	private static final Charset UTF_8 = Charset.forName("UTF-8");

File: wallet/src/de/schildbach/wallet/util/StrictModeWrapper.java
Patch:
@@ -17,13 +17,11 @@
 
 package de.schildbach.wallet.util;
 
-import android.annotation.TargetApi;
 import android.os.StrictMode;
 
 /**
  * @author Andreas Schildbach
  */
-@TargetApi(9)
 public class StrictModeWrapper
 {
 	public static void init()

File: wallet/src/de/schildbach/wallet/util/NfcTools.java
Patch:
@@ -20,6 +20,7 @@
 import java.nio.charset.Charset;
 import java.util.Arrays;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.nfc.NdefMessage;
 import android.nfc.NdefRecord;
@@ -30,6 +31,7 @@
 /**
  * @author Andreas Schildbach
  */
+@TargetApi(10)
 public class NfcTools
 {
 	private static final Charset UTF_8 = Charset.forName("UTF-8");

File: wallet/src/de/schildbach/wallet/util/StrictModeWrapper.java
Patch:
@@ -17,11 +17,13 @@
 
 package de.schildbach.wallet.util;
 
+import android.annotation.TargetApi;
 import android.os.StrictMode;
 
 /**
  * @author Andreas Schildbach
  */
+@TargetApi(9)
 public class StrictModeWrapper
 {
 	public static void init()

File: wallet/src/de/schildbach/wallet/Constants.java
Patch:
@@ -101,7 +101,7 @@ public class Constants
 	public static final String SOURCE_URL = "http://code.google.com/p/bitcoin-wallet/";
 	public static final String CREDITS_BITCOINJ_URL = "http://code.google.com/p/bitcoinj/";
 	public static final String CREDITS_ZXING_URL = "http://code.google.com/p/zxing/";
-	public static final String CREDITS_ICON_URL = "http://www.bitcoin.org/smf/index.php?action=profile;u=2062";
+	public static final String CREDITS_ICON_URL = "https://bitcointalk.org/index.php?action=profile;u=2062";
 	public static final String AUTHOR_TWITTER_URL = "http://twitter.com/android_bitcoin";
 	public static final String AUTHOR_GOOGLEPLUS_URL = "https://profiles.google.com/andreas.schildbach";
 	public static final String MARKET_APP_URL = "market://details?id=%s";

File: wallet/src/de/schildbach/wallet/WalletApplication.java
Patch:
@@ -91,6 +91,8 @@ public void onCreate()
 			System.out.println("StrictMode not available");
 		}
 
+		System.out.println(getClass().getName() + ".onCreate()");
+
 		super.onCreate();
 
 		ErrorReporter.getInstance().init(this);

File: wallet/src/de/schildbach/wallet/service/BlockchainService.java
Patch:
@@ -386,7 +386,7 @@ public IBinder onBind(final Intent intent)
 	@Override
 	public void onCreate()
 	{
-		System.out.println("service onCreate()");
+		System.out.println(getClass().getName() + ".onCreate()");
 
 		super.onCreate();
 
@@ -483,7 +483,7 @@ private void copyBlockchainSnapshot(final File file)
 	@Override
 	public void onDestroy()
 	{
-		System.out.println("service onDestroy()");
+		System.out.println(getClass().getName() + ".onDestroy()");
 
 		application.getWallet().removeEventListener(walletEventListener);
 

File: wallet/src/de/schildbach/wallet/ui/WalletActivity.java
Patch:
@@ -160,7 +160,6 @@ public boolean onCreateOptionsMenu(final Menu menu)
 		super.onCreateOptionsMenu(menu);
 		getMenuInflater().inflate(R.menu.wallet_options, menu);
 		menu.findItem(R.id.wallet_options_donate).setVisible(!Constants.TEST);
-		menu.findItem(R.id.wallet_options_help).setVisible(Constants.TEST);
 		return true;
 	}
 

File: wallet/src/de/schildbach/wallet/ui/SendingAddressesFragment.java
Patch:
@@ -184,8 +184,9 @@ private void handleCopyToClipboard(final String address)
 	public Loader<Cursor> onCreateLoader(final int id, final Bundle args)
 	{
 		final Uri uri = AddressBookProvider.CONTENT_URI;
-		return new CursorLoader(activity, uri, null, AddressBookProvider.SELECTION_NOTIN, new String[] { walletAddressesSelection },
-				AddressBookProvider.KEY_LABEL + " COLLATE LOCALIZED ASC");
+		return new CursorLoader(activity, uri, null, AddressBookProvider.SELECTION_NOTIN,
+				new String[] { walletAddressesSelection != null ? walletAddressesSelection : "" }, AddressBookProvider.KEY_LABEL
+						+ " COLLATE LOCALIZED ASC");
 	}
 
 	public void onLoadFinished(final Loader<Cursor> loader, final Cursor data)

File: src/de/schildbach/wallet/service/Service.java
Patch:
@@ -104,7 +104,7 @@ public class Service extends android.app.Service
 	private static final int NOTIFICATION_ID_COINS_RECEIVED = 1;
 
 	private int notificationCount = 0;
-	private BigInteger notificationAccumulatedAmount;
+	private BigInteger notificationAccumulatedAmount = BigInteger.ZERO;
 	private final List<Address> notificationAddresses = new LinkedList<Address>();
 
 	private final WalletEventListener walletEventListener = new AbstractWalletEventListener()

File: src/de/schildbach/wallet/Constants.java
Patch:
@@ -59,7 +59,7 @@ public class Constants
 	private static final String BLOCKCHAIN_SNAPSHOT_FILENAME_TEST = "blockchain-snapshot-testnet.jpg";
 	public static final String BLOCKCHAIN_SNAPSHOT_FILENAME = Constants.TEST ? BLOCKCHAIN_SNAPSHOT_FILENAME_TEST : BLOCKCHAIN_SNAPSHOT_FILENAME_PROD;
 
-	public static final long BLOCKCHAIN_SNAPSHOT_COPY_THRESHOLD = Constants.TEST ? 3000000 : 10000000;
+	public static final long BLOCKCHAIN_SNAPSHOT_COPY_THRESHOLD = Constants.TEST ? 0 : 10000000;
 
 	private static final String BLOCKCHAIN_FILENAME_PROD = "blockchain";
 	private static final String BLOCKCHAIN_FILENAME_TEST = "blockchain-testnet";

File: src/de/schildbach/wallet/WalletAddressFragment.java
Patch:
@@ -170,7 +170,8 @@ public void updateView()
 
 		final String addressStr = "bitcoin:" + selectedAddress;
 
-		qrCodeBitmap = WalletUtils.getQRCodeBitmap(addressStr, 256);
+		final int size = (int) (256 * getResources().getDisplayMetrics().density);
+		qrCodeBitmap = WalletUtils.getQRCodeBitmap(addressStr, size);
 		bitcoinAddressQrView.setImageBitmap(qrCodeBitmap);
 
 		if (nfcManager != null)

File: src/de/schildbach/wallet/WalletAddressesFragment.java
Patch:
@@ -166,6 +166,7 @@ public void run()
 					{
 						key.setCreationTimeSeconds(firstSeen.getTime() / 1000);
 						updateView();
+						application.saveWallet();
 					}
 				});
 			}

File: src/de/schildbach/wallet/TransactionFragment.java
Patch:
@@ -111,9 +111,9 @@ public void update(final Transaction tx)
 			x.printStackTrace();
 		}
 
-		final TransactionConfidence confidence = tx.getConfidence();
-		final boolean pending = confidence.getConfidenceType() == ConfidenceType.NOT_SEEN_IN_CHAIN;
-		final boolean dead = confidence.getConfidenceType() == ConfidenceType.OVERRIDDEN_BY_DOUBLE_SPEND;
+		final ConfidenceType confidenceType = tx.getConfidence().getConfidenceType();
+		final boolean pending = confidenceType == ConfidenceType.NOT_SEEN_IN_CHAIN || confidenceType == ConfidenceType.UNKNOWN;
+		final boolean dead = confidenceType == ConfidenceType.OVERRIDDEN_BY_DOUBLE_SPEND || confidenceType == ConfidenceType.NOT_IN_BEST_CHAIN;
 
 		final ContentResolver contentResolver = activity.getContentResolver();
 

File: src/de/schildbach/wallet/store/SQLiteBlockStore.java
Patch:
@@ -175,6 +175,7 @@ private void flushCache() throws SQLException
 				if (result == -1)
 					throw new RuntimeException("insert not successful");
 			}
+			insert.close();
 
 			// write chain head
 			final ContentValues settingValues = new ContentValues();

File: src/de/schildbach/wallet/WalletAddressesFragment.java
Patch:
@@ -127,7 +127,7 @@ public void onClick(final DialogInterface dialog, final int which)
 
 							updateView();
 						}
-					}).setNegativeButton(R.string.button_dismiss, null).show();
+					}).setNegativeButton(R.string.button_cancel, null).show();
 		}
 	};
 

File: src/de/schildbach/wallet/TransactionFragment.java
Patch:
@@ -97,7 +97,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState)
 		boolean fromMine = false;
 		try
 		{
-			from = tx.getOutputs().get(0).getScriptPubKey().getToAddress();
+			from = tx.getInputs().get(0).getFromAddress();
 			fromMine = wallet.isPubKeyHashMine(from.getHash160());
 		}
 		catch (final ScriptException x)
@@ -109,7 +109,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState)
 		boolean toMine = false;
 		try
 		{
-			to = tx.getInputs().get(0).getFromAddress();
+			to = tx.getOutputs().get(0).getScriptPubKey().getToAddress();
 			toMine = wallet.isPubKeyHashMine(to.getHash160());
 		}
 		catch (final ScriptException x)

File: src/de/schildbach/wallet/BitcoinURI.java
Patch:
@@ -64,7 +64,8 @@ public BitcoinURI(final Uri uri) throws ParseException
 
 			try
 			{
-				address = new Address(Constants.NETWORK_PARAMETERS, u.getHost());
+				if (u.getHost().length() > 0)
+					address = new Address(Constants.NETWORK_PARAMETERS, u.getHost());
 			}
 			catch (final AddressFormatException x)
 			{

File: src/de/schildbach/wallet/SendCoinsFragment.java
Patch:
@@ -238,7 +238,7 @@ public void run()
 
 								final Uri uri = AddressBookProvider.CONTENT_URI.buildUpon().appendPath(receivingAddress.toString()).build();
 								final Cursor cursor = activity.managedQuery(uri, null, null, null, null);
-								if (cursor.getCount() == 0)
+								if (cursor != null && cursor.getCount() == 0)
 									showAddAddressDialog(receivingAddress.toString());
 							}
 						};

File: src/de/schildbach/wallet/WalletTransactionsFragment.java
Patch:
@@ -221,7 +221,7 @@ else if (pending)
 						final Uri uri = AddressBookProvider.CONTENT_URI.buildUpon().appendPath(address).build();
 
 						final Cursor cursor = getActivity().managedQuery(uri, null, null, null, null);
-						if (cursor.moveToFirst())
+						if (cursor != null && cursor.moveToFirst())
 							label = cursor.getString(cursor.getColumnIndexOrThrow(AddressBookProvider.KEY_LABEL));
 					}
 					catch (final ScriptException x)

File: src/com/google/bitcoin/core/AbstractWalletEventListener.java
Patch:
@@ -47,6 +47,7 @@ public void onCoinsReceived(Wallet wallet, Transaction tx, BigInteger prevBalanc
      * @param tx The sent transaction
      */
     public void onCoinsSent(Wallet wallet, Transaction tx, BigInteger prevBalance, BigInteger newBalance) {
+        onChange();
     }
 
     /**
@@ -58,6 +59,7 @@ public void onCoinsSent(Wallet wallet, Transaction tx, BigInteger prevBalance, B
      * @param tx The pending transaction
      */
     public void onPendingCoinsReceived(Wallet wallet, Transaction tx) {
+        onChange();
     }
 
     /**

File: src/de/schildbach/wallet/AddressBookFragment.java
Patch:
@@ -135,7 +135,7 @@ private void handleEdit(final String address)
 		if (prev != null)
 			ft.remove(prev);
 		ft.addToBackStack(null);
-		final DialogFragment newFragment = new EditAddressBookEntryFragment(address);
+		final DialogFragment newFragment = EditAddressBookEntryFragment.instance(address);
 		newFragment.show(ft, EditAddressBookEntryFragment.FRAGMENT_TAG);
 	}
 

File: src/de/schildbach/wallet/SendCoinsFragment.java
Patch:
@@ -251,7 +251,7 @@ public void onClick(final DialogInterface dialog, final int id)
 													if (prev != null)
 														ft.remove(prev);
 													ft.addToBackStack(null);
-													final DialogFragment newFragment = new EditAddressBookEntryFragment(receivingAddress.toString());
+													final DialogFragment newFragment = EditAddressBookEntryFragment.instance(receivingAddress.toString());
 													newFragment.show(ft, EditAddressBookEntryFragment.FRAGMENT_TAG);
 												}
 											});

File: src/de/schildbach/wallet/WalletTransactionsFragment.java
Patch:
@@ -165,7 +165,7 @@ public void onItemClick(final AdapterView<?> parent, final View view, final int
 					if (prev != null)
 						ft.remove(prev);
 					ft.addToBackStack(null);
-					final DialogFragment newFragment = new EditAddressBookEntryFragment(address.toString());
+					final DialogFragment newFragment = EditAddressBookEntryFragment.instance(address.toString());
 					newFragment.show(ft, EditAddressBookEntryFragment.FRAGMENT_TAG);
 				}
 				catch (final ScriptException x)

File: src/de/schildbach/wallet/ExchangeRatesFragment.java
Patch:
@@ -38,6 +38,7 @@
 import android.widget.AdapterView.OnItemClickListener;
 import android.widget.BaseAdapter;
 import android.widget.ListAdapter;
+import android.widget.ListView;
 import android.widget.TextView;
 
 import com.google.bitcoin.core.Transaction;
@@ -137,6 +138,7 @@ public void onViewCreated(final View view, final Bundle savedInstanceState)
 		backgroundHandler.post(new Runnable()
 		{
 			final Activity activity = getActivity();
+			final ListView listView = getListView();
 
 			public void run()
 			{
@@ -156,7 +158,7 @@ public void run()
 
 								setListAdapter(new Adapter());
 
-								getListView().setOnItemClickListener(new OnItemClickListener()
+								listView.setOnItemClickListener(new OnItemClickListener()
 								{
 									public void onItemClick(final AdapterView<?> parent, final View view, final int position, final long id)
 									{

File: src/de/schildbach/wallet/ErrorReporter.java
Patch:
@@ -69,7 +69,7 @@ public static ErrorReporter getInstance()
 		return instance;
 	}
 
-	public void init(final Context context)
+	public synchronized void init(final Context context)
 	{
 		previousHandler = Thread.getDefaultUncaughtExceptionHandler();
 		Thread.setDefaultUncaughtExceptionHandler(this);
@@ -145,7 +145,7 @@ private long getTotalInternalMemorySize()
 		return totalBlocks * blockSize;
 	}
 
-	public void uncaughtException(final Thread t, final Throwable e)
+	public synchronized void uncaughtException(final Thread t, final Throwable e)
 	{
 		report.append("=== collected at exception time ===\n\n");
 
@@ -271,7 +271,7 @@ private static void appendReport(final StringBuilder report, final File file, fi
 				appendReport(report, f, indent + 1);
 	}
 
-	public void check(final Context context)
+	public synchronized void check(final Context context)
 	{
 		if (!stackTraceFile.exists())
 			return;

File: src/de/schildbach/wallet/WalletTransactionsFragment.java
Patch:
@@ -184,7 +184,7 @@ public void onItemClick(final AdapterView<?> parent, final View view, final int
 					final boolean sent = tx.sent(application.getWallet());
 					final Address address = sent ? tx.outputs.get(0).getScriptPubKey().getToAddress() : tx.getInputs().get(0).getFromAddress();
 
-					System.out.println("clicked on tx " + tx.getHash());
+					System.out.println("clicked on tx " + tx);
 
 					final FragmentTransaction ft = getFragmentManager().beginTransaction();
 					final Fragment prev = getFragmentManager().findFragmentByTag(EditAddressBookEntryFragment.FRAGMENT_TAG);

File: src/de/schildbach/wallet/ViewPagerTabs.java
Patch:
@@ -93,6 +93,7 @@ protected void onDraw(final Canvas canvas)
 		paint.setColor(Color.WHITE);
 		canvas.drawPath(path, paint);
 
+		paint.setTypeface(Typeface.DEFAULT_BOLD);
 		final float y = getPaddingTop() + -paint.getFontMetrics().top;
 
 		for (int i = 0; i < labels.size(); i++)
@@ -138,6 +139,7 @@ else if (heightMode == MeasureSpec.AT_MOST)
 	@Override
 	protected int getSuggestedMinimumHeight()
 	{
+		paint.setTypeface(Typeface.DEFAULT_BOLD);
 		return (int) (-paint.getFontMetrics().top + paint.getFontMetrics().bottom) + getPaddingTop() + getPaddingBottom();
 	}
 

File: src/com/google/bitcoin/core/Block.java
Patch:
@@ -437,7 +437,7 @@ void setPrevBlockHash(Sha256Hash prevBlockHash) {
         this.hash = null;
     }
 
-    /** Returns the time at which the block was solved and broadcast, according to the clock of the solving node. */
+    /** Returns the time in seconds at which the block was solved and broadcast, according to the clock of the solving node. */
     public long getTime() {
         return time;
     }

File: src/com/google/bitcoin/core/DownloadListener.java
Patch:
@@ -59,7 +59,7 @@ public void onBlocksDownloaded(Peer peer, Block block, int blocksLeft) {
 
         double pct = 100.0 - (100.0 * (blocksLeft / (double) originalBlocksLeft));
         if ((int)pct != lastPercent) {
-            progress(pct, new Date(block.getTime()));
+            progress(pct, new Date(block.getTime() * 1000));
             lastPercent = (int)pct;
         }
     }

File: src/de/schildbach/wallet/WalletTransactionsFragment.java
Patch:
@@ -188,6 +188,8 @@ public void onItemClick(final AdapterView<?> parent, final View view, final int
 					final boolean sent = tx.sent(wallet);
 					final Address address = sent ? tx.outputs.get(0).getScriptPubKey().getToAddress() : tx.getInputs().get(0).getFromAddress();
 
+					System.out.println("clicked on tx " + tx.getHash());
+
 					final FragmentTransaction ft = getFragmentManager().beginTransaction();
 					final Fragment prev = getFragmentManager().findFragmentByTag(EditAddressBookEntryFragment.FRAGMENT_TAG);
 					if (prev != null)

File: src/de/schildbach/wallet/SendCoinsFragment.java
Patch:
@@ -318,7 +318,8 @@ public Cursor runQueryOnBackgroundThread(final CharSequence constraint)
 	public void update(final String receivingAddress, final String amount)
 	{
 		receivingAddressView.setText(receivingAddress);
-		amountView.setAmount(Utils.toNanoCoins(amount));
+		if (amount != null)
+			amountView.setAmount(Utils.toNanoCoins(amount));
 
 		if (receivingAddress != null && amount == null)
 			amountView.requestFocus();

File: src/de/schildbach/wallet/Constants.java
Patch:
@@ -71,6 +71,7 @@ public class Constants
 	public static final String MARKET_APP_URL = "market://details?id=%s";
 	public static final String MARKET_PUBLISHER_URL = "market://search?q=pub:\"Andreas Schildbach\"";
 
-	public static final String PREFS_KEY_EXCHANGE_CURRENCY = "exchange_currency";
 	public static final String PREFS_KEY_LAST_VERSION = "last_version";
+	public static final String PREFS_KEY_SELECTED_ADDRESS = "selected_address";
+	public static final String PREFS_KEY_EXCHANGE_CURRENCY = "exchange_currency";
 }

File: src/de/schildbach/wallet/AbstractWalletActivity.java
Patch:
@@ -60,7 +60,7 @@ protected final void toast(final String text, final int imageResId, final int du
 	{
 		final View view = getLayoutInflater().inflate(R.layout.transient_notification, null);
 		TextView tv = (TextView) view.findViewById(R.id.transient_notification_text);
-		tv.setText(text);
+		tv.setText(String.format(text, formatArgs));
 		tv.setCompoundDrawablesWithIntrinsicBounds(imageResId, 0, 0, 0);
 
 		final Toast toast = new Toast(this);
@@ -83,7 +83,7 @@ protected final void toast(final int textResId, final int imageResId, final int
 	{
 		final View view = getLayoutInflater().inflate(R.layout.transient_notification, null);
 		TextView tv = (TextView) view.findViewById(R.id.transient_notification_text);
-		tv.setText(textResId);
+		tv.setText(getString(textResId, formatArgs));
 		tv.setCompoundDrawablesWithIntrinsicBounds(imageResId, 0, 0, 0);
 
 		final Toast toast = new Toast(this);

File: src/de/schildbach/wallet/AddressBookProvider.java
Patch:
@@ -127,7 +127,6 @@ public Cursor query(final Uri uri, final String[] projection, String selection,
 		else if ("q".equals(selection))
 		{
 			final String query = '%' + selectionArgs[0].trim() + '%';
-			System.out.println("query: " + query);
 			selection = KEY_ADDRESS + " LIKE ? OR " + KEY_LABEL + " LIKE ?";
 			selectionArgs = new String[] { query, query };
 		}

File: src/de/schildbach/wallet/SendCoinsFragment.java
Patch:
@@ -243,7 +243,6 @@ public CharSequence convertToString(final Cursor cursor)
 		@Override
 		public Cursor runQueryOnBackgroundThread(final CharSequence constraint)
 		{
-			System.out.println("runQuery: " + constraint);
 			final Cursor cursor = getActivity()
 					.managedQuery(AddressBookProvider.CONTENT_URI, null, "q", new String[] { constraint.toString() }, null);
 			return cursor;

File: src/de/schildbach/wallet/WalletActivity.java
Patch:
@@ -531,7 +531,7 @@ private static Float getExchangeRate()
 	{
 		try
 		{
-			final URLConnection connection = new URL("http://mtgox.com/code/data/ticker.php").openConnection();
+			final URLConnection connection = new URL("https://mtgox.com/code/data/ticker.php").openConnection();
 			connection.connect();
 			final Reader is = new InputStreamReader(new BufferedInputStream(connection.getInputStream()));
 			final StringBuilder content = new StringBuilder();

File: src/de/schildbach/wallet/Service.java
Patch:
@@ -166,7 +166,7 @@ public void run()
 				{
 					latch.await();
 
-					nm.cancel(1);
+					nm.cancel(NOTIFICATION_ID_SYNCING);
 
 					// runOnUiThread(new Runnable()
 					// {

File: src/de/schildbach/wallet/WalletActivity.java
Patch:
@@ -76,7 +76,7 @@ protected void onCreate(final Bundle savedInstanceState)
 		updateGUI();
 
 		final ECKey key = wallet.keychain.get(0);
-		final Address address = new Address(Constants.NETWORK_PARAMS, key.getPubKey());
+		final Address address = key.toAddress(Constants.NETWORK_PARAMS);
 
 		final String addressStr = address.toString();
 		System.out.println("my bitcoin address: " + addressStr + (Constants.TEST ? " (testnet!)" : ""));

