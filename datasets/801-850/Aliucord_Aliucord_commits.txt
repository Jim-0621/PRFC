File: Aliucord/src/main/java/com/aliucord/PluginManager.java
Patch:
@@ -73,7 +73,6 @@ public static void loadPlugin(Context context, File file) {
                     ReflectUtils.setField(Plugin.class, plugin, "manifest", manifest);
                 } catch (Exception e) {
                     logger.errorToast("Failed to set manifest for " + manifest.name);
-                    logger.error("Failed to set manifest for " + manifest.name, e);
                 }
             }));
 

File: Aliucord/src/main/java/com/aliucord/PluginManager.java
Patch:
@@ -244,6 +244,7 @@ static void loadCorePlugins(Context context) {
             new CommandHandler(),
             new CoreCommands(),
             new DefaultStickers(),
+            new ExperimentDefaults(),
             new GifPreviewFix(),
             new MembersListFix(),
             new NoTrack(),

File: Aliucord/src/main/java/com/aliucord/settings/Plugins.java
Patch:
@@ -124,7 +124,7 @@ public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
             boolean enabled = PluginManager.isPluginEnabled(p.getName());
             holder.card.switchHeader.setChecked(enabled);
             holder.card.switchHeader.setButtonVisibility(!(p instanceof CorePlugin) || !((CorePlugin) p).isRequired());
-            holder.card.descriptionView.setText(p.getManifest().description);
+            holder.card.descriptionView.setText(MDUtils.render(p.getManifest().description));
             holder.card.settingsButton.setVisibility(p.settingsTab != null ? View.VISIBLE : View.GONE);
             holder.card.settingsButton.setEnabled(enabled);
             holder.card.uninstallButton.setVisibility(p.__filename != null ? View.VISIBLE : View.GONE);

File: Aliucord/src/main/java/com/aliucord/PluginManager.java
Patch:
@@ -272,8 +272,6 @@ static void startCorePlugins() {
         for (Plugin p : plugins.values()) {
             if (!(p instanceof CorePlugin)) continue;
             if (!isPluginEnabled(p.getName())) continue;
-
-            logger.info("Starting coreplugin: " + p.getName());
             startPlugin(p.getName());
         }
     }

File: Aliucord/src/main/java/com/aliucord/api/CommandsAPI.java
Patch:
@@ -216,7 +216,7 @@ private static void _registerCommand(
                             "Oops! Something went wrong while running this command:\n```java\n%s```\n" +
                                 "Please search for this error on the Aliucord server to see if it's a known issue. " +
                                 "If it isn't, report it to the plugin %s%s.\n\n" +
-                                "Debug:```\nCommand: %s\nPlugin: %s v%s\nDiscord v%s\nAndroid %s (SDK %d)\nAliucord %s```\nArguments:```\n%s```\n",
+                                "Debug:```\nCommand: %s\nPlugin: %s v%s\nDiscord v%s\nAndroid %s (SDK %d)\nAliucord %s %s```\nArguments:```\n%s```\n",
                             t,
                             manifest.authors.length == 1 ? "author" : "authors",
                             manifest.authors.length != 0 ? " (" + TextUtils.join(", ", manifest.authors) + ")" : "",
@@ -227,6 +227,7 @@ private static void _registerCommand(
                             Build.VERSION.RELEASE,
                             Build.VERSION.SDK_INT,
                             BuildConfig.VERSION,
+                            BuildConfig.RELEASE ? "" : "(Custom)",
                             argString.length() != 0 ? argString : "-"
                         );
                     }

File: Aliucord/src/main/java/com/aliucord/Main.java
Patch:
@@ -248,7 +248,7 @@ public static void init(AppActivity activity) {
         // set default values for experiments
         var experiments = StoreStream.getExperiments();
         var overrides = StoreExperiments.access$getExperimentOverrides$p(experiments);
-        for (var key : new String[]{"2021-10_android_attachment_bottom_sheet", "2021-11_guild_communication_disabled_users", "2021-11_guild_communication_disabled_guilds"}) {
+        for (var key : new String[]{"2021-10_android_attachment_bottom_sheet", "2021-11_guild_communication_disabled_users", "2021-11_guild_communication_disabled_guilds", "2021-10_premium_guild_member_profiles"}) {
             if (!overrides.containsKey(key)) experiments.setOverride(key, 1);
         }
 

File: Aliucord/src/main/java/com/aliucord/updater/Updater.java
Patch:
@@ -28,7 +28,7 @@ public static boolean isOutdated(String plugin, String version, String newVersio
             String[] versions = version.split("\\.");
             String[] newVersions = newVersion.split("\\.");
             int len = versions.length;
-            if (len != newVersions.length) return false;
+            if (len > newVersions.length) return false;
             for (int i = 0; i < len; i++) {
                 int newInt = Integer.parseInt(newVersions[i]);
                 int oldInt = Integer.parseInt(versions[i]);

File: Aliucord/src/main/java/com/aliucord/Http.java
Patch:
@@ -10,7 +10,6 @@
 import androidx.annotation.Nullable;
 
 import com.aliucord.utils.*;
-import com.discord.stores.StoreStream;
 import com.discord.utilities.analytics.AnalyticSuperProperties;
 import com.discord.utilities.rest.RestAPI;
 

File: Aliucord/src/main/java/com/aliucord/api/CommandsAPI.java
Patch:
@@ -169,7 +169,7 @@ private static void _registerCommand(
                             ));
 
                             StoreMessages.access$handleLocalMessageCreate(storeMessages, commandMessage);
-                        } catch (Throwable e) { logger.error((String) null, e); }
+                        } catch (Throwable e) { logger.error(e); }
                     } else {
                         if (hasEmbeds)
                             // imagine selfbot embeds in 2022 (impossible)
@@ -217,7 +217,7 @@ private static void _registerCommand(
                                 "Please search for this error on the Aliucord server to see if it's a known issue. " +
                                 "If it isn't, report it to the plugin %s%s.\n\n" +
                                 "Debug:```\nCommand: %s\nPlugin: %s v%s\nDiscord v%s\nAndroid %s (SDK %d)\nAliucord %s```\nArguments:```\n%s```\n",
-                            t.toString(),
+                            t,
                             manifest.authors.length == 1 ? "author" : "authors",
                             manifest.authors.length != 0 ? " (" + TextUtils.join(", ", manifest.authors) + ")" : "",
                             name,

File: Aliucord/src/main/java/com/aliucord/patcher/Patcher.java
Patch:
@@ -15,7 +15,7 @@
 import de.robv.android.xposed.XposedBridge;
 
 public class Patcher {
-    public static Logger logger = new Logger("Patcher");
+    public static final Logger logger = new Logger("Patcher");
     private static final ClassLoader cl = Objects.requireNonNull(Patcher.class.getClassLoader());
 
     /**

File: Aliucord/src/main/java/com/aliucord/utils/ReflectUtils.java
Patch:
@@ -206,7 +206,6 @@ public static void setField(@NonNull Class<?> clazz, @Nullable Object instance,
     /**
      * Override a final field of a class.
      * WARNING: If this field is of a primitive type, setting it may have no effect as the compiler will inline final primitives.
-     *
      * Please note that this does not cache the lookup result, so if you need to call this many times
      * you should do it manually and cache the {@link Field} to improve performance drastically
      *
@@ -223,7 +222,6 @@ public static void setFinalField(@Nullable Object instance, @NonNull String fiel
     /**
      * Override a final field of a class.
      * WARNING: If this field is of a primitive type, setting it may have no effect as the compiler will inline final primitives.
-     *
      * Please note that this does not cache the lookup result, so if you need to call this many times
      * you should do it manually and cache the {@link Field} to improve performance drastically
      *

File: Aliucord/src/main/java/com/aliucord/views/TextInput.java
Patch:
@@ -92,6 +92,7 @@ public EditText getEditText() {
      * Sets the hint message
      * @param hint The hint
      * @return self
+     * @noinspection UnusedReturnValue
      */
     public TextInput setHint(@NonNull CharSequence hint) {
         getRoot().setHint(hint);
@@ -103,7 +104,7 @@ public TextInput setHint(@NonNull CharSequence hint) {
      * @param hint The hint res id
      * @return self
      */
-    public TextInput setHint(@NonNull @StringRes int hint) {
+    public TextInput setHint(@StringRes int hint) {
         getRoot().setHint(hint);
         return this;
     }
@@ -123,7 +124,7 @@ public TextInput setThemedEndIcon(@NonNull Drawable icon) {
      * @param icon End icon drawable res id
      * @return self
      */
-    public TextInput setThemedEndIcon(@NonNull @DrawableRes int icon) {
+    public TextInput setThemedEndIcon(@DrawableRes int icon) {
         getRoot().setEndIconDrawable(Utils.tintToTheme(ContextCompat.getDrawable(getRoot().getContext(), icon)));
         return this;
     }

File: Aliucord/src/main/java/com/aliucord/Constants.java
Patch:
@@ -65,7 +65,7 @@ public static final class Fonts {
      * <hr><br>
      * <h3>One of</h3>
      * <ul>
-     *     <li>app_productionStableRelease</li>
+     *     <li>app_productionGoogleRelease</li>
      *     <li>app_productionBetaRelease</li>
      *     <li>app_productionCanaryRelease</li>
      * </ul>
@@ -96,7 +96,7 @@ public static final class Fonts {
             //      101107 -> 1
             //      101007 -> 0
             int release = (version / 100) % 10;
-            suffix = new String[] { "app_productionStableRelease", "app_productionBetaRelease", "app_productionCanaryRelease" }[release];
+            suffix = new String[] { "app_productionGoogleRelease", "app_productionBetaRelease", "app_productionCanaryRelease" }[release];
         } catch (Throwable e) {
             Main.logger.error("Failed to determine discord release. Defaulting to beta", e);
             suffix = "app_productionBetaRelease";

File: Aliucord/src/main/java/com/aliucord/settings/Plugins.java
Patch:
@@ -270,6 +270,7 @@ public void onViewBound(View view) {
         super.onViewBound(view);
         setActionBarTitle("Plugins");
         setActionBarSubtitle(PluginManager.plugins.size() + " Installed");
+        removeScrollView();
 
         var context = view.getContext();
         int padding = DimenUtils.getDefaultPadding();

File: installer/android/app/src/main/java/com/aliucord/installer/Signer.java
Patch:
@@ -58,6 +58,7 @@ private static KeySet createKey() throws Exception {
             serialNumber,
             new Date(System.currentTimeMillis() - 1000L * 60L * 60L * 24L * 30L),
             new Date(System.currentTimeMillis() + 1000L * 60L * 60L * 24L * 366L * 30L),
+            Locale.ENGLISH,
             x500Name,
             SubjectPublicKeyInfo.getInstance(pair.getPublic().getEncoded())
         );

File: Aliucord/src/main/java/com/aliucord/coreplugins/NoTrack.java
Patch:
@@ -19,9 +19,7 @@
 
 final class NoTrack extends Plugin {
     NoTrack() {
-        var manifest = new Manifest();
-        manifest.name = "NoTrack";
-        initialize(manifest);
+        super(new Manifest("NoTrack"));
     }
 
     @Override

File: Aliucord/src/main/java/com/aliucord/coreplugins/TokenLogin.java
Patch:
@@ -35,9 +35,7 @@
 
 final class TokenLogin extends Plugin {
     TokenLogin() {
-        var manifest = new Manifest();
-        manifest.name = "TokenLogin";
-        initialize(manifest);
+        super(new Manifest("TokenLogin"));
     }
 
     public static class Page extends AppFragment {

File: Aliucord/src/main/java/com/aliucord/widgets/UpdaterPluginCard.java
Patch:
@@ -71,7 +71,7 @@ public UpdaterPluginCard(Context context, String plugin, Runnable forceUpdate) {
         tv = new TextView(context, null, 0, R.i.UiKit_TextView_Subtext);
         try {
             PluginUpdater.UpdateInfo info = PluginUpdater.getUpdateInfo(p);
-            tv.setText(String.format("%s -> v%s", p.getManifest().version, info != null ? info.version : "?"));
+            tv.setText(String.format("v%s -> v%s", p.getManifest().version, info != null ? info.version : "?"));
             if (info != null && info.changelog != null) {
                 ToolbarButton changeLogButton = new ToolbarButton(context);
                 changeLogButton.setImageDrawable(ContextCompat.getDrawable(context, R.e.ic_history_white_24dp));

File: Aliucord/src/main/java/com/aliucord/coreplugins/TokenLogin.java
Patch:
@@ -74,7 +74,7 @@ public void onViewBound(View view) {
         }
 
         public void login(CharSequence token) {
-            StoreAuthentication.access$dispatchLogin(StoreStream.getAuthentication(), new ModelLoginResult(false, null, token.toString(), null));
+            StoreAuthentication.access$dispatchLogin(StoreStream.getAuthentication(), new ModelLoginResult(token.toString().startsWith("mfa."), null, token.toString(), null));
         }
     }
 

File: Aliucord/src/main/java/com/aliucord/settings/Plugins.java
Patch:
@@ -71,7 +71,7 @@ public void onSettingsClick(View view) {
                 try {
                     adapter.onSettingsClick(getAdapterPosition());
                 } catch (Throwable th) {
-                    PluginManager.logger.error(view.getContext(), "Failed to launch plugin settings", th);
+                    PluginManager.logger.errorToast("Failed to launch plugin settings", th);
                 }
             }
 
@@ -246,13 +246,13 @@ public void onUninstallClick(int position) {
             dialog.setOnOkListener(e -> {
                 File pluginFile = new File(Constants.BASE_PATH + "/plugins/" + p.__filename + ".zip");
                 if (pluginFile.exists() && !pluginFile.delete()) {
-                    PluginManager.logger.error(ctx, "Failed to delete plugin " + p.getName(), null);
+                    PluginManager.logger.errorToast("Failed to delete plugin " + p.getName(), null);
                     return;
                 }
 
                 PluginManager.stopPlugin(p.getName());
                 PluginManager.plugins.remove(p.getName());
-                PluginManager.logger.info(ctx, "Successfully deleted " + p.getName());
+                PluginManager.logger.infoToast("Successfully deleted " + p.getName());
 
                 dialog.dismiss();
                 data.remove(position);

File: Aliucord/src/main/java/com/aliucord/settings/Updater.java
Patch:
@@ -137,7 +137,7 @@ public void onViewBound(View view) {
                                     rb.setActionTextColor(Color.BLACK);
                                     rb.show();
                                 } catch (Throwable th) {
-                                    PluginUpdater.logger.error(ctx, "Failed to update Aliucord. Check the debug log for more info", th);
+                                    PluginUpdater.logger.errorToast("Failed to update Aliucord. Check the debug log for more info", th);
                                 }
                             }));
                 } else return;

File: Aliucord/src/main/java/com/aliucord/widgets/UpdaterPluginCard.java
Patch:
@@ -103,9 +103,9 @@ public UpdaterPluginCard(Context context, String plugin, Runnable forceUpdate) {
                 try {
                     PluginUpdater.update(plugin);
                     PluginUpdater.updates.remove(plugin);
-                    PluginManager.logger.info(context, "Successfully updated " + p.getName());
+                    PluginManager.logger.infoToast("Successfully updated " + p.getName());
                 } catch (Throwable t) {
-                    PluginManager.logger.error(context, "Sorry, something went wrong while updating " + p.getName(), t);
+                    PluginManager.logger.errorToast("Sorry, something went wrong while updating " + p.getName(), t);
                 } finally {
                     Utils.mainThread.post(forceUpdate);
                 }
@@ -116,7 +116,7 @@ public UpdaterPluginCard(Context context, String plugin, Runnable forceUpdate) {
         updateParams.setGravity(Gravity.CENTER_VERTICAL);
         buttonLayout.addView(update, updateParams);
         layout.addView(buttonLayout);
-        
+
         set = new ConstraintSet();
         set.clone(layout);
         set.connect(btnLayoutId, ConstraintSet.RIGHT, ConstraintSet.PARENT_ID, ConstraintSet.RIGHT);

File: Injector/src/main/java/com/aliucord/injector/Injector.java
Patch:
@@ -31,7 +31,7 @@
 
 @SuppressWarnings({"ResultOfMethodCallIgnored", "JavaReflectionMemberAccess"})
 public final class Injector {
-    public static final String LOG_TAG = "Aliucord Injector";
+    public static final String LOG_TAG = "Injector";
     private static final String DATA_URL = "https://raw.githubusercontent.com/Aliucord/Aliucord/builds/data.json";
     private static final String DEX_URL = "https://raw.githubusercontent.com/Aliucord/Aliucord/builds/Aliucord.zip";
     private static final File BASE_DIRECTORY = new File(Environment.getExternalStorageDirectory().getAbsolutePath(), "Aliucord");

File: Injector/src/main/java/com/aliucord/injector/Injector.java
Patch:
@@ -41,7 +41,7 @@ public final class Injector {
     public static void init() {
         PineConfig.debug = new File(BASE_DIRECTORY, ".pine_debug").exists();
         PineConfig.debuggable = new File(BASE_DIRECTORY, ".debuggable").exists();
-        Log.d(LOG_TAG, "Debuggable: " + PineConfig.debuggable);
+        Log.d(LOG_TAG, "Aliucord Debuggable: " + PineConfig.debuggable);
         PineConfig.disableHiddenApiPolicy = false;
         PineConfig.disableHiddenApiPolicyForPlatformDomain = false;
         Pine.disableJitInline();

File: Aliucord/src/main/java/com/aliucord/entities/Plugin.java
Patch:
@@ -192,7 +192,7 @@ public String getName() {
     /** The {@link CommandsAPI} of your plugin. You can register/unregister commands here */
     protected CommandsAPI commands = new CommandsAPI(name);
     /** The {@link PatcherAPI} of your plugin. You can add/remove patches here */
-    protected PatcherAPI patcher = new PatcherAPI();
+    protected PatcherAPI patcher = new PatcherAPI(logger);
     /** The {@link SettingsAPI} of your plugin. Use this to store persistent data */
     public SettingsAPI settings = new SettingsAPI(name);
 }

File: Aliucord/src/main/java/com/aliucord/updater/PluginUpdater.java
Patch:
@@ -117,7 +117,7 @@ public static boolean checkPluginUpdate(Plugin plugin) {
     public static UpdateInfo getUpdateInfo(Plugin plugin) throws Exception {
         Plugin.Manifest manifest = plugin.getManifest();
         if (manifest.updateUrl == null || manifest.updateUrl.equals("")) return null;
-        String name = plugin.getClass().getSimpleName();
+        String name = plugin.getName();
 
         CachedData cached = cache.get(manifest.updateUrl);
         if (cached != null && cached.time > System.currentTimeMillis() - TimeUnit.MINUTES.toMillis(30)) {

File: Aliucord/src/main/java/com/aliucord/fragments/SettingsPage.java
Patch:
@@ -69,12 +69,12 @@ public final void setPadding(int p) {
         getLinearLayout().setPadding(p, p, p, p);
     }
 
-    /** Removes a button from the Toolbar associated with this Page */
+    /** Adds a button from the Toolbar associated with this Page */
     public final void addHeaderButton(ToolbarButton button) {
         getHeaderBar().addView(button);
     }
 
-    /** Adds a button to the Toolbar associated with this Page */
+    /** Removes a button to the Toolbar associated with this Page */
     public final void removeHeaderButton(ToolbarButton button) {
         getHeaderBar().removeView(button);
     }

File: Injector/src/main/java/com/aliucord/injector/Injector.java
Patch:
@@ -44,7 +44,7 @@ public static void init() {
         Log.d(LOG_TAG, "Aliucord Debuggable: " + PineConfig.debuggable);
         PineConfig.disableHiddenApiPolicy = false;
         PineConfig.disableHiddenApiPolicyForPlatformDomain = false;
-        Pine.disableProfileSaver();
+        // Pine.disableProfileSaver();     // I HATE MIUI I HATE MIUI (Causes crashes on MiUi 12) - FIXME
         Pine.disableJitInline();
 
         try {

File: Injector/src/main/java/com/aliucord/injector/Injector.java
Patch:
@@ -43,6 +43,8 @@ public static void init() {
         Log.d(LOG_TAG, "Aliucord Debuggable: " + PineConfig.debuggable);
         PineConfig.disableHiddenApiPolicy = false;
         PineConfig.disableHiddenApiPolicyForPlatformDomain = false;
+        Pine.disableProfileSaver();
+        Pine.disableJitInline();
 
         try {
             Log.d(LOG_TAG, "Hooking AppActivity.onCreate...");

File: Aliucord/src/main/java/com/aliucord/Logger.java
Patch:
@@ -68,7 +68,7 @@ public void info(String msg, Throwable throwable) {
      * @param msg Message to log
      */
     public void info(Context ctx, String msg) {
-        Utils.showToast(ctx, msg);
+        Utils.showToast(msg);
         info(msg, null);
     }
 
@@ -130,7 +130,7 @@ public void error(Context ctx, String msg) {
      * @param msg Message to log
      */
     public void error(Context ctx, String msg, Throwable e) {
-        Utils.showToast(ctx, msg);
+        Utils.showToast(msg, true);
         error(msg, e);
     }
 }

File: Aliucord/src/main/java/com/aliucord/entities/CommandContext.java
Patch:
@@ -41,7 +41,7 @@ public CommandContext(Map<String, ?> args, WidgetChatInput$configureSendListener
         this._this = _this;
         this.messageContent = messageContent;
         this.attachments = (List<Attachment<?>>) _args[0];
-        viewState = ((WidgetChatInput$configureSendListeners$6$1) _args[2]).this$0.$viewState;
+        viewState = ((WidgetChatInput$configureSendListeners$7$1) _args[2]).this$0.$viewState;
     }
 
     private static <T> T requireNonNull(String key, T val) {

File: Aliucord/src/main/java/com/aliucord/entities/MessageEmbedBuilder.java
Patch:
@@ -7,7 +7,6 @@
 package com.aliucord.entities;
 
 import com.aliucord.Main;
-import com.aliucord.Utils;
 import com.aliucord.utils.ReflectUtils;
 import com.discord.api.message.embed.*;
 import com.discord.api.utcdatetime.UtcDateTime;
@@ -79,7 +78,7 @@ public MessageEmbedBuilder() {
      * @param type {@link EmbedType}
      */
     public MessageEmbedBuilder(EmbedType type) {
-        embed = Utils.allocateInstance(MessageEmbed.class);
+        embed = ReflectUtils.allocateInstance(MessageEmbed.class);
         setType(type);
     }
 

File: Aliucord/src/main/java/com/aliucord/fragments/InputDialog.java
Patch:
@@ -8,6 +8,7 @@
 import static android.view.View.OnClickListener;
 
 import android.annotation.SuppressLint;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.*;
 
@@ -52,6 +53,7 @@ public void onViewBound(View view) {
 
         getHeader().setText(title != null ? title : "Input");
         getBody().setText(description != null ? description : "Please enter some text");
+        getBody().setMovementMethod(LinkMovementMethod.getInstance());
 
         TextInputLayout inputLayout = getInputLayout();
         if (placeholder != null) inputLayout.setHint(placeholder);

File: Aliucord/src/main/java/com/aliucord/settings/Updater.java
Patch:
@@ -115,7 +115,7 @@ public void onViewBound(View view) {
                                 if (i != null)
                                     ctx.startActivity(i);
                                 else
-                                    Utils.showToast(ctx, "Please install the Aliucord installer and try again.");
+                                    Utils.showToast("Please install the Aliucord installer and try again.");
                             });
                 } else if (isAliucordOutdated()) {
                     sb = Snackbar
@@ -124,7 +124,7 @@ public void onViewBound(View view) {
                                 var ctx = v.getContext();
                                 try {
                                     updateAliucord(ctx);
-                                    Utils.showToast(ctx, "Successfully updated Aliucord.");
+                                    Utils.showToast("Successfully updated Aliucord.");
                                     Snackbar rb = Snackbar
                                         .make(getLinearLayout(), "Restart to apply the update.", Snackbar.LENGTH_INDEFINITE)
                                         .setAction("Restart", e -> {

File: Aliucord/src/main/java/com/aliucord/utils/ChannelUtils.java
Patch:
@@ -21,15 +21,15 @@ public static List<User> getRecipients(Channel channel) {
     }
 
     public static boolean isGuildTextyChannel(Channel channel) {
-        return AnimatableValueParser.l1(channel);
+        return AnimatableValueParser.m1(channel);
     }
 
     public static User getDMRecipient(Channel channel) {
         return AnimatableValueParser.v0(channel);
     }
 
     public static boolean isTextChannel(Channel channel) {
-        return AnimatableValueParser.z1(channel);
+        return AnimatableValueParser.B1(channel);
     }
 
     public static String getDisplayName(Channel channel) {

File: Aliucord/src/main/java/com/aliucord/views/ToolbarButton.java
Patch:
@@ -28,7 +28,7 @@ public void setImageDrawable(@Nullable Drawable drawable) {
     public void setImageDrawable(@Nullable Drawable drawable, boolean forceTint) {
         if (forceTint && drawable != null) {
             drawable = drawable.mutate();
-            Utils.tintToTheme(drawable).setAlpha(0x99);
+            Utils.tintToTheme(drawable);
         }
         super.setImageDrawable(drawable);
     }

File: Aliucord/src/main/java/com/aliucord/coreplugins/CorePlugins.java
Patch:
@@ -25,7 +25,7 @@ public static void loadAll(Context context) {
             try {
                 p.load(context);
             } catch (Throwable e) {
-                PluginManager.logger.error(context,"Failed to load core plugin " + p.name, e);
+                PluginManager.logger.error(context,"Failed to load core plugin " + p.getName(), e);
             }
         }
     }
@@ -38,7 +38,7 @@ public static void startAll(Context context) {
             try {
                 p.start(context);
             } catch (Throwable e) {
-                PluginManager.logger.error(context, "Failed to start core plugin " + p.name, e);
+                PluginManager.logger.error(context, "Failed to start core plugin " + p.getName(), e);
             }
         }
     }

File: Aliucord/src/main/java/com/aliucord/updater/PluginUpdater.java
Patch:
@@ -106,9 +106,9 @@ public static boolean checkPluginUpdate(Plugin plugin) {
             if (updateInfo == null || updateInfo.minimumDiscordVersion > Constants.DISCORD_VERSION) return false;
 
             String updatedVer = updated.get(plugin.getClass().getSimpleName());
-            if (updatedVer != null && !Updater.isOutdated(plugin.name, updateInfo.version, updatedVer)) return false;
+            if (updatedVer != null && !Updater.isOutdated(plugin.getName(), updateInfo.version, updatedVer)) return false;
 
-            return Updater.isOutdated(plugin.name, manifest.version, updateInfo.version);
+            return Updater.isOutdated(plugin.getName(), manifest.version, updateInfo.version);
         } catch (Throwable e) { logger.error("Failed to check update for: " + plugin.getClass().getSimpleName(), e); }
         return false;
     }

File: Aliucord/src/main/java/com/aliucord/Main.java
Patch:
@@ -10,6 +10,7 @@
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.pm.PackageManager;
+import android.content.pm.ApplicationInfo;
 import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.os.*;
@@ -137,7 +138,8 @@ public static void init(AppActivity activity) {
             v.addView(crashes, baseIndex + 4);
 
             TextView version = v.findViewById(Utils.getResId("app_info_header", "id"));
-            version.setText(version.getText() + " | Aliucord " + BuildConfig.GIT_REVISION);
+            boolean isDebuggable = (context.getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0;
+            version.setText(version.getText() + " | Aliucord " + BuildConfig.GIT_REVISION + (isDebuggable ? " (debuggable)" : ""));
 
             TextView uploadLogs = v.findViewById(Utils.getResId("upload_debug_logs", "id"));
             uploadLogs.setText("Aliucord Support Server");

File: Aliucord/src/main/java/com/aliucord/settings/Crashes.java
Patch:
@@ -7,7 +7,6 @@
 package com.aliucord.settings;
 
 import android.annotation.SuppressLint;
-import android.content.Context;
 import android.content.Intent;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
@@ -49,7 +48,7 @@ public void onViewBound(View view) {
         super.onViewBound(view);
         setActionBarTitle("Crash Logs");
 
-        Context context = requireContext();
+        var context = view.getContext();
         int padding = DimenUtils.getDefaultPadding();
         int p = padding / 2;
 

File: Aliucord/src/main/java/com/aliucord/settings/Plugins.java
Patch:
@@ -270,7 +270,7 @@ public void onViewBound(View view) {
         super.onViewBound(view);
         setActionBarTitle("Plugins");
 
-        Context context = requireContext();
+        var context = view.getContext();
         int padding = DimenUtils.getDefaultPadding();
         int p = padding / 2;
 

File: Aliucord/src/main/java/com/aliucord/settings/Updater.java
Patch:
@@ -49,7 +49,7 @@ public static class UpdaterSettings extends BottomSheet {
         public void onViewCreated(View view, Bundle bundle) {
             super.onViewCreated(view, bundle);
 
-            var ctx = requireContext();
+            var ctx = view.getContext();
 
             addView(createSwitch(ctx, "Auto Update Aliucord", "Whether Aliucord should automatically be updated", AUTO_UPDATE_ALIUCORD_KEY));
             addView(createSwitch(ctx, "Auto Update Plugins", "Whether Plugins should automatically be updated", AUTO_UPDATE_PLUGINS_KEY));
@@ -99,7 +99,7 @@ public void onViewBound(View view) {
         setActionBarTitle("Updater");
         setActionBarSubtitle(stateText);
 
-        Context context = requireContext();
+        var context = view.getContext();
         int padding = DimenUtils.getDefaultPadding();
 
         Utils.threadPool.execute(() -> {

File: Injector/src/main/java/com/aliucord/injector/Injector.java
Patch:
@@ -65,7 +65,7 @@ private static void init(AppActivity appActivity) {
             var dexFile = new File(appActivity.getCodeCacheDir(), "Aliucord.zip");
 
             var prefs = appActivity.getSharedPreferences("aliucord", Context.MODE_PRIVATE);
-            boolean useLocalDex = prefs.getBoolean("AC_use_dex_from_storage", false);
+            boolean useLocalDex = prefs.getBoolean("AC_from_storage", false);
             File localDex;
             if (useLocalDex && (localDex = new File(aliucordDir, "Aliucord.zip")).exists()) {
                 Log.d(LOG_TAG, "Loading dex from " + localDex.getAbsolutePath());

File: DiscordStubs/src/main/java/com/discord/utilities/mg_recycler/MGRecyclerViewHolder.java
Patch:
@@ -18,4 +18,6 @@ public MGRecyclerViewHolder(@NonNull View itemView, T t) {
     public MGRecyclerViewHolder(@LayoutRes int id, T t) {
         this(new View(null), t);
     }
+
+    public void onConfigure(int i, D data) {}
 }

File: DiscordStubs/src/main/java/com/discord/stores/StoreLocalMessagesHolder.java
Patch:
@@ -0,0 +1,3 @@
+package com.discord.stores;
+
+public final class StoreLocalMessagesHolder {}

File: Aliucord/src/main/java/com/aliucord/settings/Plugins.java
Patch:
@@ -241,8 +241,8 @@ public void onUninstallClick(int position) {
                 PluginManager.logger.info(ctx, "Successfully deleted " + p.name);
 
                 dialog.dismiss();
-                originalData.remove(p);
                 data.remove(position);
+                if (originalData != data) originalData.remove(p);
                 notifyItemRemoved(position);
             });
 

File: Aliucord/src/main/java/com/aliucord/Utils.java
Patch:
@@ -368,15 +368,15 @@ public static CharSequence renderMD(CharSequence source) {
     }
 
     /**
-     * @deprecated Use {@link RxUtils::createActionSubscriber}
+     * @deprecated Use {@link RxUtils#createActionSubscriber(Action1)}
      */
     @Deprecated
     public static <T> Subscriber<T> createActionSubscriber(Action1<? super T> onNext) {
         return RxUtils.createActionSubscriber(onNext);
     }
 
     /**
-     * @deprecated Use {@link RxUtils::createActionSubscriber}
+     * @deprecated Use {@link RxUtils#createActionSubscriber(Action1, Action1, Action0)}
      */
     @Deprecated
     public static <T> Subscriber<T> createActionSubscriber(Action1<? super T> onNext, Action1<Throwable> onError, Action0 onCompleted) {

File: Aliucord/src/main/java/com/aliucord/entities/CommandContext.java
Patch:
@@ -232,7 +232,7 @@ public String getString(String key) {
     }
 
     /**
-     * Gets the <bold>required</bold> String argument with the specified key
+     * Gets the <strong>required</strong> String argument with the specified key
      * @param key The key of the argument
      */
     @NonNull

File: Aliucord/src/main/java/com/aliucord/Utils.java
Patch:
@@ -197,7 +197,7 @@ public static User buildClyde() {
      */
     public static User buildClyde(@Nullable String name, @Nullable String avatarUrl) {
         if (name == null) name = "Clyde";
-        if (avatarUrl == null) avatarUrl = "https://canary.discord.com/assets/f78426a064bc9dd24847519259bc42af.png";
+        if (avatarUrl == null) avatarUrl = Constants.Icons.CLYDE;
 
         return new User(
             -1,
@@ -220,7 +220,7 @@ public static User buildClyde(@Nullable String name, @Nullable String avatarUrl)
             null,
             null,
             null,
-            null,
+            new NullSerializable.a<>(),
             null
         );
     }

File: Aliucord/src/main/java/com/aliucord/coreplugins/CoreCommands.java
Patch:
@@ -25,14 +25,14 @@ public void start(Context context) {
                 "echo",
                 "Creates Clyde message",
                 Collections.singletonList(CommandsAPI.requiredMessageOption),
-                args -> new CommandsAPI.CommandResult((String) args.get("message"), null, false)
+                ctx -> new CommandsAPI.CommandResult(ctx.getRequiredString("message"), null, false)
         );
 
         commands.registerCommand(
                 "say",
                 "Sends message",
                 Collections.singletonList(CommandsAPI.requiredMessageOption),
-                args -> new CommandsAPI.CommandResult((String) args.get("message"))
+                ctx -> new CommandsAPI.CommandResult(ctx.getRequiredString("message"))
         );
     }
 

File: Aliucord/src/main/java/com/aliucord/fragments/SettingsPage.java
Patch:
@@ -94,7 +94,7 @@ public final void clear() {
     /** Removes all views from the LinearLayout associated with this Page and calls onViewBound */
     public final void reRender() {
         clear();
-        onViewBound(requireView());
+        onViewBound(view);
     }
 
     /** Closes this SettingsPage by simulating a back press */

File: Aliucord/src/main/java/com/aliucord/utils/ChannelUtils.java
Patch:
@@ -20,15 +20,15 @@ public static List<User> getRecipients(Channel channel) {
     }
 
     public static boolean isGuildTextyChannel(Channel channel) {
-        return AnimatableValueParser.j1(channel);
+        return AnimatableValueParser.k1(channel);
     }
 
     public static User getDMRecipient(Channel channel) {
         return AnimatableValueParser.v0(channel);
     }
 
     public static boolean isTextChannel(Channel channel) {
-        return AnimatableValueParser.x1(channel);
+        return AnimatableValueParser.y1(channel);
     }
 
     public static String getDisplayName(Channel channel) {

File: Aliucord/src/main/java/com/aliucord/utils/RxUtils.java
Patch:
@@ -21,7 +21,7 @@ public static <T> Observable<T> onBackpressureBuffer(Observable<T> observable) {
     }
 
     public static <T> Subscription subscribe(Observable<T> observable, Subscriber<? super T> subscriber) {
-        return observable.V(subscriber);
+        return observable.U(subscriber);
     }
 
     /**

File: DiscordStubs/src/main/java/c/a/d/l.java
Patch:
@@ -1,11 +1,11 @@
 package c.a.d;
 
 import android.content.Context;
-import android.content.Intent;
+import android.os.Parcelable;
 
 import com.discord.app.AppComponent;
 
 @SuppressWarnings("unused")
 public final class l {
-    public static final void d(Context context, Class<? extends AppComponent> c, Intent intent) {}
+    public static void d(Context context, Class<? extends AppComponent> c, Parcelable parcelable) { }
 }

File: DiscordStubs/src/main/java/com/airbnb/lottie/parser/AnimatableValueParser.java
Patch:
@@ -15,11 +15,11 @@ public class AnimatableValueParser {
     /** ChannelUtils.getRecipients */
     public static List<User> G0(Channel channel) { return Collections.emptyList(); }
     /** ChannelUtils.isGuildTextyChannel */
-    public static boolean j1(Channel channel) { return true; }
+    public static boolean k1(Channel channel) { return true; }
     /** ChannelUtils.getDMRecipient */
     public static User v0(Channel channel) { return null; }
     /** ChannelUtils.isTextChannel */
-    public static boolean x1(Channel channel) { return true; }
+    public static boolean y1(Channel channel) { return true; }
     /** ChannelUtils.getDisplayName */
     public static String y0(Channel channel) { return ""; }
     /** ChannelUtils.getDisplayNameOrDefault */

File: DiscordStubs/src/main/java/com/discord/api/user/User.java
Patch:
@@ -32,7 +32,7 @@ public User(
         PremiumTier premiumTier,
         Integer approximateGuildCount,
         GuildMember guildMember,
-        String bio,
+        NullSerializable<String> bio,
         String bannerColor
     ) {}
 
@@ -59,7 +59,7 @@ public User(
      * @deprecated Do not use this directly, use {@link com.discord.models.user.CoreUser} instead.
      */
     @Deprecated
-    public final String d() { return null; }
+    public final NullSerializable<String> d() { return null; }
     /**
      * getBot
      * @deprecated Do not use this directly, use {@link com.discord.models.user.CoreUser} instead.

File: DiscordStubs/src/main/java/com/discord/stores/StoreMessages.java
Patch:
@@ -1,14 +1,14 @@
 package com.discord.stores;
 
-import com.discord.api.message.Message;
 import com.discord.api.message.allowedmentions.MessageAllowedMentions;
+import com.discord.models.message.Message;
 
 @SuppressWarnings("unused")
 public final class StoreMessages {
     public static void access$handleLocalMessageCreate(StoreMessages instance, Message message) {}
 
     public final void deleteMessage(Message message) {}
     public final Message getMessage(long channelId, long id) { return null; }
-    public final void handleMessageUpdate(Message message) {}
+    public final void handleMessageUpdate(com.discord.api.message.Message message) {}
     public final void editMessage(long messageId, long channelId, String content, MessageAllowedMentions allowedMentions) {}
 }

File: DiscordStubs/src/main/java/com/discord/stores/StoreMessagesHolder.java
Patch:
@@ -1,6 +1,6 @@
 package com.discord.stores;
 
-import com.discord.api.message.Message;
+import com.discord.models.message.Message;
 
 import java.util.TreeMap;
 

File: DiscordStubs/src/main/java/com/discord/utilities/message/LocalMessageCreatorsKt.java
Patch:
@@ -2,12 +2,12 @@
 
 import com.discord.api.application.Application;
 import com.discord.api.message.LocalAttachment;
-import com.discord.api.message.Message;
 import com.discord.api.message.MessageReference;
 import com.discord.api.message.activity.MessageActivity;
 import com.discord.api.message.allowedmentions.MessageAllowedMentions;
 import com.discord.api.sticker.Sticker;
 import com.discord.api.user.User;
+import com.discord.models.message.Message;
 import com.discord.utilities.time.Clock;
 
 import java.util.List;
@@ -24,7 +24,7 @@ public static Message createLocalApplicationCommandMessage(
         boolean loading,
         Long interactionId,
         Clock clock
-    ) { return new Message(); }
+    ) { return new Message(null); }
 
     public static Message createLocalApplicationCommandMessage(
         Message other,
@@ -51,5 +51,5 @@ public static Message createLocalMessage(
         List<Sticker> stickers,
         MessageReference messageReference,
         MessageAllowedMentions allowedMentions
-    ) { return new Message(); }
+    ) { return new Message(null); }
 }

File: DiscordStubs/src/main/java/com/discord/widgets/chat/input/WidgetChatInput$configureSendListeners$2.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 
 import com.discord.widgets.chat.MessageManager;
+import com.discord.widgets.chat.input.models.ApplicationCommandData;
 import com.lytefast.flexinput.model.Attachment;
 
 import java.util.List;

File: DiscordStubs/src/main/java/com/discord/widgets/chat/input/WidgetChatInput.java
Patch:
@@ -1,8 +1,8 @@
 package com.discord.widgets.chat.input;
 
-@SuppressWarnings({"unused", "InstantiationOfUtilityClass"})
+@SuppressWarnings({"unused"})
 public final class WidgetChatInput {
-    public static ChatInputViewModel access$getViewModel$p(WidgetChatInput instance) { return new ChatInputViewModel(); }
+    public static ChatInputViewModel access$getViewModel$p(WidgetChatInput instance) { return access$getViewModel$p(instance); }
 
     public static void clearInput$default(WidgetChatInput instance, Boolean showKeyboard, boolean z, int flags, Object obj) {}
 }

File: DiscordStubs/src/main/java/com/discord/widgets/chat/input/WidgetChatInputEditText.java
Patch:
@@ -3,5 +3,7 @@
 import com.discord.widgets.chat.MessageContent;
 
 public class WidgetChatInputEditText {
-    public final MessageContent getMatchedContentWithMetaData() { return null; }
+    public final MessageContent getMatchedContentWithMetaData() { return getMatchedContentWithMetaData(); }
+    public final long getChannelId() { return 0; }
+    public final void setChannelId(long j) { }
 }

File: DiscordStubs/src/main/java/com/discord/widgets/chat/input/models/ApplicationCommandData.java
Patch:
@@ -1,4 +1,4 @@
-package com.discord.widgets.chat.input;
+package com.discord.widgets.chat.input.models;
 
 import com.discord.models.commands.ApplicationCommand;
 

File: DiscordStubs/src/main/java/com/discord/widgets/chat/input/models/ApplicationCommandValue.java
Patch:
@@ -1,4 +1,4 @@
-package com.discord.widgets.chat.input;
+package com.discord.widgets.chat.input.models;
 
 import java.util.List;
 

File: DiscordStubs/src/main/java/com/discord/widgets/chat/list/actions/WidgetChatListActions.java
Patch:
@@ -1,6 +1,6 @@
 package com.discord.widgets.chat.list.actions;
 
-import com.discord.api.message.Message;
+import com.discord.models.message.Message;
 import com.discord.app.AppBottomSheet;
 import com.discord.databinding.WidgetChatListActionsBinding;
 
@@ -9,7 +9,7 @@ public final class WidgetChatListActions extends AppBottomSheet {
     public int getContentViewResId() { return 0; }
 
     public static final class Model {
-        public final Message getMessage() { return null; }
+        public final Message getMessage() { return getMessage(); }
     }
     
     private WidgetChatListActionsBinding getBinding() { return new WidgetChatListActionsBinding(); }

File: DiscordStubs/src/main/java/com/discord/widgets/chat/list/adapter/WidgetChatListAdapter.java
Patch:
@@ -32,7 +32,5 @@ public interface Data {
 
     @NonNull
     @Override
-    public MGRecyclerViewHolder<?, ChatListEntry> onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-        return null;
-    }
+    public MGRecyclerViewHolder<?, ChatListEntry> onCreateViewHolder(@NonNull ViewGroup parent, int viewType) { return onCreateViewHolder(parent, 0); }
 }

File: DiscordStubs/src/main/java/com/discord/widgets/chat/list/adapter/WidgetChatListAdapterItemMessage.java
Patch:
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 
-import com.discord.api.message.Message;
+import com.discord.models.message.Message;
 import com.discord.stores.StoreMessageState;
 import com.discord.utilities.textprocessing.MessagePreprocessor;
 import com.discord.utilities.textprocessing.MessageRenderContext;

File: DiscordStubs/src/main/java/com/discord/widgets/chat/list/entries/MessageEntry.java
Patch:
@@ -1,10 +1,10 @@
 package com.discord.widgets.chat.list.entries;
 
-import com.discord.api.message.Message;
+import com.discord.models.message.Message;
 import com.discord.stores.StoreMessageState;
 
 @SuppressWarnings("unused")
 public final class MessageEntry {
-    public final Message getMessage() { return null; }
-    public final StoreMessageState.State getMessageState() { return null; }
+    public final Message getMessage() { return getMessage(); }
+    public final StoreMessageState.State getMessageState() { return getMessageState(); }
 }

File: DiscordStubs/src/main/java/rx/Observable.java
Patch:
@@ -6,5 +6,5 @@ public class Observable<T> {
     /** onBackpressureBuffer */
     public final Observable<T> K() { return this; }
     /** subscribe */
-    public final Subscription V(Subscriber<? super T> subscriber) { return subscriber; }
+    public final Subscription U(Subscriber<? super T> subscriber) { return subscriber; }
 }

File: Aliucord/src/main/java/com/aliucord/Constants.java
Patch:
@@ -37,6 +37,8 @@ public static final class Fonts {
     public static final long THEMES_CHANNEL_ID = 824357609778708580L;
 
     public static final String BASE_PATH = Environment.getExternalStorageDirectory().getAbsolutePath() + "/Aliucord";
+    public static final String PLUGINS_PATH = BASE_PATH + "/plugins";
+    public static final String CRASHLOGS_PATH = BASE_PATH + "/crashlogs";
 
     public static final String NAMESPACE_ANDROID = "http://schemas.android.com/apk/res/android";
     public static final String NAMESPACE_APP = "http://schemas.android.com/apk/res-auto";

File: Aliucord/src/main/java/com/aliucord/fragments/SettingsPage.java
Patch:
@@ -9,7 +9,7 @@
 import android.view.View;
 import android.widget.LinearLayout;
 
-import androidx.appcompat.widget.AppCompatButton;
+import androidx.appcompat.widget.AppCompatImageButton;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.core.widget.NestedScrollView;
@@ -67,12 +67,12 @@ public final void setPadding(int p) {
     }
 
     /** Removes a button from the Toolbar associated with this Page */
-    public final void addHeaderButton(AppCompatButton button) {
+    public final void addHeaderButton(AppCompatImageButton button) {
         getHeaderBar().addView(button);
     }
 
     /** Adds a button to the Toolbar associated with this Page */
-    public final void removeHeaderButton(AppCompatButton button) {
+    public final void removeHeaderButton(AppCompatImageButton button) {
         getHeaderBar().removeView(button);
     }
 

File: DiscordStubs/src/main/java/com/lytefast/flexinput/R$d.java
Patch:
@@ -4,8 +4,11 @@
 public class R$d {
     public static int ic_add_24dp = 0;
     public static int ic_clear_all_white_24dp = 0;
+    public static int ic_delete_white_24dp = 0;
     public static int ic_file_download_white_24dp = 0;
     public static int ic_history_white_24dp = 0;
+    public static int ic_open_in_new_white_24dp = 0;
     public static int ic_slash_command_24dp = 0;
     public static int icon_save = 0;
+
 }

File: Aliucord/src/main/java/com/aliucord/PluginManager.java
Patch:
@@ -26,7 +26,7 @@ public class PluginManager {
     public static final Map<String, Plugin> corePlugins = new HashMap<>();
     public static final Logger logger = new Logger("PM");
 
-    @SuppressWarnings({"unchecked", "JavaReflectionMemberAccess"})
+    @SuppressWarnings("JavaReflectionMemberAccess")
     public static void loadPlugin(Context context, File f) {
         String name = f.getName().replace(".zip", "");
         logger.info("Loading plugin: " + name);
@@ -125,5 +125,6 @@ public static void startCorePlugins(Context context) {
     public static String getPluginPrefKey(String name) { return "AC_PM_" + name; }
 
     public static boolean isPluginEnabled(String name) { return SettingsUtils.getBool(getPluginPrefKey(name), true); }
+    @SuppressWarnings("unused")
     public static boolean isPluginEnabled(Plugin p) { return isPluginEnabled(Utils.getMapKey(plugins, p)); }
 }

File: Aliucord/src/main/java/com/aliucord/SettingsUtils.java
Patch:
@@ -39,7 +39,6 @@ public static void setString(String key, String v) {
 
     private static final Map<String, Object> cache = new HashMap<>();
 
-    @SuppressWarnings("unchecked")
     public static <T> T getObject(String key, T d, Type type) {
         Object cached = cache.get(key);
         if (cached != null) return (T) cached;

File: Aliucord/src/main/java/com/aliucord/Utils.java
Patch:
@@ -186,6 +186,9 @@ public static CommandChoice createCommandChoice(String name, String value) {
         return choice;
     }
 
+    public static User buildClyde() {
+        return buildClyde(null, null);
+    }
     /**
      * Clyde builder
      * @param name Name of Clyde

File: Aliucord/src/main/java/com/aliucord/api/CommandsAPI.java
Patch:
@@ -44,7 +44,7 @@
 import kotlin.Unit;
 import kotlin.jvm.functions.Function1;
 
-@SuppressWarnings({"unchecked", "unused"})
+@SuppressWarnings("unused")
 public class CommandsAPI {
     private static final Logger logger = new Logger("CommandsAPI");
     public static class CommandResult {
@@ -276,6 +276,7 @@ private static void updateCommandCount() {
     public static long generateId() {
         return -SnowflakeUtils.fromTimestamp(System.currentTimeMillis() * 100);
     }
+
     public static String generateIdString() {
         return String.valueOf(generateId());
     }

File: Aliucord/src/main/java/com/aliucord/coreplugins/CommandHandler.java
Patch:
@@ -41,7 +41,6 @@ public final class CommandHandler extends Plugin {
     public Manifest getManifest() { return new Manifest(); }
 
     @Override
-    @SuppressWarnings("unchecked")
     public void load(Context context) throws Throwable {
         Patcher.addPatch("com.discord.stores.BuiltInCommands", "getBuiltInCommands", new Class<?>[0], new PinePatchFn(callFrame -> {
             List<ApplicationCommand> list = (List<ApplicationCommand>) callFrame.getResult();

File: Aliucord/src/main/java/com/aliucord/entities/MessageEmbedBuilder.java
Patch:
@@ -183,7 +183,6 @@ public MessageEmbedBuilder addField(String name, String value, boolean inline) {
      * @see MessageEmbedBuilder#addField(String, String, boolean)
      * @see MessageEmbedBuilder#createField(String, String, Boolean)
      */
-    @SuppressWarnings("unchecked")
     public MessageEmbedBuilder addField(EmbedField field) {
         try {
             List<EmbedField> o = (List<EmbedField>) fieldsField.get(embed);

File: Aliucord/src/main/java/com/aliucord/entities/Plugin.java
Patch:
@@ -66,7 +66,6 @@ public Settings(Class<? extends AppFragment> settings) {
             page = settings;
         }
 
-        @SuppressWarnings("unchecked")
         public Settings(Class<?> settings, Type type) {
             this.type = type;
             if (type == Type.PAGE) page = (Class<? extends AppFragment>) settings;
@@ -80,7 +79,6 @@ public Settings(Class<?> settings, Type type) {
     @NonNull
     public abstract Manifest getManifest();
 
-    @SuppressWarnings("RedundantThrows")
     public void load(Context context) throws Throwable {}
     @SuppressWarnings("RedundantThrows")
     public void unload(Context context) throws Throwable {} // not used now

File: Aliucord/src/main/java/com/aliucord/patcher/PatchFunction.java
Patch:
@@ -10,4 +10,5 @@
 import kotlin.jvm.functions.Function3;
 
 @Deprecated
+@SuppressWarnings("DeprecatedIsStillUsed")
 public interface PatchFunction extends Function3<Object, List<Object>, Object, Object> {}

File: Aliucord/src/main/java/com/aliucord/patcher/PrePatchFunction.java
Patch:
@@ -10,4 +10,5 @@
 import kotlin.jvm.functions.Function2;
 
 @Deprecated
+@SuppressWarnings("DeprecatedIsStillUsed")
 public interface PrePatchFunction extends Function2<Object, List<Object>, PrePatchRes> {}

File: Aliucord/src/main/java/com/aliucord/views/SaveButton.java
Patch:
@@ -5,7 +5,6 @@
 
 package com.aliucord.views;
 
-import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.res.ColorStateList;
 import android.view.Gravity;
@@ -18,12 +17,11 @@
 import com.lytefast.flexinput.R$d;
 
 public class SaveButton extends LinearLayout {
-    @SuppressLint("RtlHardcoded")
     public SaveButton(Context context) {
         super(context);
         FloatingActionButton saveButton = new FloatingActionButton(context);
         saveButton.setImageDrawable(ContextCompat.getDrawable(context, R$d.icon_save));
-        saveButton.setBackgroundTintList(ColorStateList.valueOf(context.getResources().getColor(R$c.brand)));
+        saveButton.setBackgroundTintList(ColorStateList.valueOf(context.getResources().getColor(R$c.brand, context.getTheme())));
         setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, 1));
         setHorizontalGravity(Gravity.RIGHT);
         setVerticalGravity(Gravity.BOTTOM);

File: Aliucord/src/main/java/com/aliucord/widgets/BottomSheet.java
Patch:
@@ -14,6 +14,7 @@
 import com.discord.app.AppBottomSheet;
 import com.discord.widgets.channels.WidgetChannelSelector;
 
+@SuppressWarnings("unused")
 public class BottomSheet extends AppBottomSheet {
     private static int id = 0;
 

File: Aliucord/src/main/java/com/discord/app/App$a.java
Patch:
@@ -6,13 +6,14 @@
 package com.discord.app;
 
 import com.aliucord.patcher.Patcher;
-import com.google.firebase.crashlytics.FirebaseCrashlytics;
 
 import kotlin.jvm.internal.DefaultConstructorMarker;
 
 @SuppressWarnings("unused")
 public final class App$a {
-    static { Patcher.init(); }
+    static {
+        Patcher.init();
+    }
 
     public App$a(DefaultConstructorMarker defaultConstructorMarker) {}
 }

File: Aliucord/src/main/java/com/aliucord/Constants.java
Patch:
@@ -41,7 +41,7 @@ public static final class Fonts {
     public static final String NAMESPACE_ANDROID = "http://schemas.android.com/apk/res/android";
     public static final String NAMESPACE_APP = "http://schemas.android.com/apk/res-auto";
 
-    public static final String RELEASE_SUFFIX = "app_productionCanaryRelease";
+    public static final String RELEASE_SUFFIX = "app_productionBetaRelease";
 
     public static final int DISCORD_VERSION;
 

File: Aliucord/src/main/java/com/aliucord/Main.java
Patch:
@@ -153,16 +153,14 @@ public static void init(AppActivity activity) {
             })
         );
 
-        PluginManager.startCorePlugins(activity);
-
         Thread.setDefaultUncaughtExceptionHandler((thread, throwable) -> {
             new Thread() {
                 @Override
                 public void run() {
                     Looper.prepare();
                     File folder = new File(Constants.BASE_PATH, "crashlogs");
                     if (folder.exists() || folder.mkdir()) {
-                        File file = new File(folder, new Timestamp(System.currentTimeMillis()).toString());
+                        File file = new File(folder, new Timestamp(System.currentTimeMillis()).toString().replaceAll(":", "_") + ".txt");
                         try (PrintStream ps = new PrintStream(file)) {
                             throwable.printStackTrace(ps);
                         } catch (FileNotFoundException ignored) {}
@@ -177,6 +175,8 @@ public void run() {
             System.exit(2);
         });
 
+        PluginManager.startCorePlugins(activity);
+
         for (String name : PluginManager.plugins.keySet()) {
             try {
                 if (PluginManager.isPluginEnabled(name))

File: Aliucord/src/main/java/com/aliucord/settings/Crashes.java
Patch:
@@ -164,7 +164,7 @@ private Map<Integer, CrashLog> getCrashes() {
                 existing.times += 1;
             } else {
                 CrashLog crash = new CrashLog();
-                crash.timestamp = file.getName().replace(".txt", "");
+                crash.timestamp = file.getName().replace(".txt", "").replaceAll("_", ":");
                 crash.stacktrace = content;
                 crash.times = 1;
                 res.put(hashCode, crash);

File: DiscordStubs/src/main/java/com/discord/stores/StoreGatewayConnection.java
Patch:
@@ -26,5 +26,5 @@ public final class StoreGatewayConnection {
     public final SerializedSubject<ModelMessage, ModelMessage> getMessageUpdate() { return new SerializedSubject<>(); }
     public final SerializedSubject<User, User> getUserUpdate() { return new SerializedSubject<>(); }
 
-    public boolean requestGuildMembers(List<Long> guildIds, String query, List<Long> userIds) { return false; }
+    public boolean requestGuildMembers(long guildId, String query, List<Long> userIds) { return false; }
 }

File: Aliucord/src/main/java/com/aliucord/Main.java
Patch:
@@ -41,7 +41,7 @@
 public class Main {
     public static boolean preInitialized = false;
     public static boolean initialized = false;
-    public static Logger logger = new Logger();
+    public static final Logger logger = new Logger();
 
     @Deprecated
     @SuppressWarnings("deprecation")

File: Aliucord/src/main/java/com/aliucord/api/CommandsAPI.java
Patch:
@@ -218,7 +218,7 @@ private static void _registerCommand(
                     }
                     String argString = argStringB.toString();
 
-                    Plugin.Manifest manifest = PluginManager.plugins.get(pluginName).getManifest();
+                    Plugin.Manifest manifest = Objects.requireNonNull(PluginManager.plugins.get(pluginName)).getManifest();
 
                     String detailedError = String.format(
                             Locale.ENGLISH,

File: Aliucord/src/main/java/com/aliucord/entities/Plugin.java
Patch:
@@ -25,7 +25,7 @@
 public abstract class Plugin {
     public static class Manifest {
         public static class Author {
-            public String name = "";
+            public String name;
             public long id;
 
             public Author(String name) {

File: Aliucord/src/main/java/com/aliucord/fragments/FragmentProxy.java
Patch:
@@ -43,8 +43,9 @@
 
 import rx.subjects.Subject;
 
+@SuppressWarnings({"CommentedOutCode", "deprecation"})
 public class FragmentProxy extends Fragment implements AppComponent {
-    public static Map<String, Fragment> fragments = new HashMap<>();
+    public static final Map<String, Fragment> fragments = new HashMap<>();
 
     private Fragment mFragment;
 
@@ -133,8 +134,7 @@ public void setUserVisibleHint(boolean isVisibleToUser) {
 
     @Override
     public boolean getUserVisibleHint() {
-        getmFragment().getUserVisibleHint();
-        return false;
+        return getmFragment().getUserVisibleHint();
     }
 
     @NonNull

File: Aliucord/src/main/java/com/aliucord/patcher/Patcher.java
Patch:
@@ -29,9 +29,9 @@ public class Patcher {
     @SuppressWarnings("JavaReflectionMemberAccess")
     public static void init() {
         PineConfig.debug = false;
+        PineConfig.debuggable = true;
         PineConfig.disableHiddenApiPolicy = false;
         PineConfig.disableHiddenApiPolicyForPlatformDomain = false;
-        Pine.setDebuggable(true);
 
         try {
             unhook1 = Pine.hook(AppActivity.class.getDeclaredMethod("onCreate", Bundle.class), new PinePrePatchFn(callFrame -> {

File: Aliucord/src/main/java/com/aliucord/patcher/PinePatchFn.java
Patch:
@@ -10,7 +10,7 @@
 import top.canyie.pine.callback.MethodHook;
 
 public class PinePatchFn extends MethodHook {
-    private Action1<Pine.CallFrame> p;
+    private final Action1<Pine.CallFrame> p;
 
     /**
      * Calls {@link top.canyie.pine.Pine.CallFrame} patch block <strong>after</strong> the method has been invoked.

File: Aliucord/src/main/java/com/aliucord/patcher/PinePrePatchFn.java
Patch:
@@ -10,7 +10,7 @@
 import top.canyie.pine.callback.MethodHook;
 
 public class PinePrePatchFn extends MethodHook {
-    private Action1<Pine.CallFrame> p;
+    private final Action1<Pine.CallFrame> p;
 
     /**
      * Calls {@link top.canyie.pine.Pine.CallFrame} patch block <strong>before</strong> the method has been invoked.

File: Aliucord/src/main/java/com/aliucord/settings/Plugins.java
Patch:
@@ -11,8 +11,6 @@
 import android.graphics.drawable.ShapeDrawable;
 import android.graphics.drawable.shapes.RectShape;
 import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.view.View;

File: DiscordStubs/src/main/java/com/discord/api/message/embed/EmbedProvider.java
Patch:
@@ -13,10 +13,12 @@ public final class EmbedProvider {
      * getName
      * @deprecated Do not use this directly, use {@link com.aliucord.wrappers.embeds.ProviderWrapper} instead.
      */
+    @Deprecated
     public final String a() { return name; }
     /**
      * getUrl
      * @deprecated Do not use this directly, use {@link com.aliucord.wrappers.embeds.ProviderWrapper} instead.
      */
+    @Deprecated
     public final String b() { return url; }
 }

File: DiscordStubs/src/main/java/com/discord/widgets/chat/input/WidgetChatInputCommandsAdapter.java
Patch:
@@ -9,5 +9,7 @@
 public class WidgetChatInputCommandsAdapter {
     public static class Item extends RecyclerView.ViewHolder {
         public Item(@NonNull View itemView) { super(itemView); }
+
+        public void onConfigure(int i, final WidgetChatInputCommandsModel widgetChatInputCommandsModel) {}
     }
 }

File: Aliucord/src/main/java/com/aliucord/Utils.java
Patch:
@@ -31,7 +31,6 @@
 import com.google.gson.Gson;
 
 import java.io.InputStream;
-import java.lang.reflect.Field;
 import java.lang.reflect.Type;
 import java.util.Map;
 import java.util.Objects;
@@ -180,7 +179,7 @@ public static byte[] readBytes(InputStream stream) throws Throwable {
     public static String toJsonPretty(Object obj) { return gsonPretty.l(obj); }
 
     public static CharSequence renderMD(CharSequence source) {
-        return b.j(source, new Object[0], null, 2);
+        return b.k(source, new Object[0], null, 2);
     }
 
     public static <T> Subscriber<T> createActionSubscriber(Action1<? super T> onNext) {

File: DiscordStubs/src/main/java/c/a/k/b.java
Patch:
@@ -6,5 +6,5 @@
 @SuppressWarnings("unused")
 public final class b {
     // renderMD
-    public static CharSequence j(CharSequence source, Object[] formatArgs, Function1<?, Unit> initializer, int i) { return null; }
+    public static CharSequence k(CharSequence source, Object[] formatArgs, Function1<?, Unit> initializer, int i) { return null; }
 }

File: Aliucord/src/main/java/com/aliucord/coreplugins/NoTrack.java
Patch:
@@ -29,13 +29,13 @@ public static Map<String, List<String>> getClassesToPatch() {
 
         map.put("c.i.a.f.i.b.k9", Arrays.asList("n", "Q"));
         map.put("c.i.a.b.j.t.h.g", Collections.singletonList("run"));
-        map.put("c.i.a.f.h.i.r", Collections.singletonList("R"));
+        // map.put("c.i.a.f.h.i.r", Collections.singletonList("R"));
         map.put("com.discord.utilities.analytics.AdjustConfig", Collections.singletonList("init"));
         map.put("com.discord.utilities.analytics.AdjustConfig$AdjustLifecycleListener", Arrays.asList("onActivityPaused", "onActivityResumed"));
-//        map.put("com.discord.utilities.analytics.AnalyticsTracker$AdjustEventTracker", Collections.singletonList("*"));
+        // map.put("com.discord.utilities.analytics.AnalyticsTracker$AdjustEventTracker", Collections.singletonList("*"));
         map.put("com.discord.utilities.analytics.AnalyticsTracker$AdjustEventTracker", Arrays.asList("trackLogin", "trackRegister"));
         map.put("com.discord.utilities.analytics.AnalyticSuperProperties", Arrays.asList("setSuperProperties", "setCampaignProperties"));
-//        map.put("com.discord.utilities.analytics.AnalyticsUtils$Tracker", Collections.singletonList("*"));
+        // map.put("com.discord.utilities.analytics.AnalyticsUtils$Tracker", Collections.singletonList("*"));
         map.put("com.discord.utilities.analytics.AnalyticsUtils$Tracker", Arrays.asList("drainEventsQueue", "setTrackingData", "track", "trackFireBase"));
         map.put("com.discord.utilities.integrations.SpotifyHelper$openPlayStoreForSpotify$1", Collections.singletonList("run"));
         return map;

File: Aliucord/src/main/java/com/aliucord/widgets/PluginCard.java
Patch:
@@ -75,7 +75,7 @@ public void onClick(@NonNull View widget) {
         }
         CheckedSetting cs = Utils.createCheckedSetting(context, CheckedSetting.ViewType.SWITCH,
                 spannableTitle, null);
-        titleView = cs.j.a();
+        titleView = cs.k.a();
         titleView.setTypeface(ResourcesCompat.getFont(context, Constants.Fonts.whitney_semibold));
         titleView.setMovementMethod(LinkMovementMethod.getInstance());
         cs.setChecked(enabled);

File: DexPatcher/src/main/java/com/aliucord/dexpatcher/DexPatcher.java
Patch:
@@ -283,7 +283,8 @@ public void patchFile(File file, List<String> methodsToPatch) {
                     }
                 }
 
-                String newCode = String.format(formats.get("patchedmethod"), g1, g2, g3, addArgs.toString(), _this, ret, getArgs.toString(),
+                String normalClassName = className.substring(1, className.length() - 1).replaceAll("/", ".");
+                String newCode = String.format(formats.get("patchedmethod"), g1, g2, g3, addArgs.toString(), _this, normalClassName, g2Arr[0], ret, getArgs.toString(),
                         invoke, invokeArgs, className, newMethodName, g3, moveResult, ret);
                 s = s.replace(matcher.group(),
                         newCode + "\n\n.method " + g1 + " " + newMethodName + g3 + "\n" + matcher.group(4) + "\n.end method");

File: DiscordStubs/src/main/java/c/a/d/l.java
Patch:
@@ -6,6 +6,6 @@
 import com.discord.app.AppComponent;
 
 @SuppressWarnings("unused")
-public final class n {
+public final class l {
     public static final void d(Context context, Class<? extends AppComponent> c, Intent intent) {}
 }

File: DiscordStubs/src/main/java/c/a/i/o1.java
Patch:
@@ -3,6 +3,6 @@
 import com.facebook.drawee.view.SimpleDraweeView;
 
 // UserAvatarPresenceViewBinding
-public final class m1 {
+public final class o1 {
     public SimpleDraweeView b;
 }

File: DiscordStubs/src/main/java/com/discord/api/user/User.java
Patch:
@@ -41,4 +41,6 @@ public User(
     public final Boolean m() { return false; }
     // getUsername
     public final String o() { return ""; }
+    // getVerified
+    public final Boolean p() { return null; }
 }

File: DiscordStubs/src/main/java/com/discord/databinding/WidgetSettingsBinding.java
Patch:
@@ -6,9 +6,9 @@
 @SuppressWarnings("unused")
 public final class WidgetSettingsBinding {
     // developerOptionsDivider
-    public View m;
+    public View n;
     // developerOptionsHeader
-    public TextView n;
+    public TextView o;
     // developerOptions
-    public TextView l;
+    public TextView m;
 }

File: DiscordStubs/src/main/java/com/discord/stores/StoreAuthentication.java
Patch:
@@ -6,7 +6,5 @@
 public final class StoreAuthentication {
     public static void access$dispatchLogin(StoreAuthentication instance, ModelLoginResult data) {}
 
-    public final String getAuthToken$app_productionBetaRelease() { return ""; }
-    public final void handleAuthToken$app_productionBetaRelease(String token) {}
     public final void setAuthed(String token) {}
 }

File: DiscordStubs/src/main/java/com/discord/stores/StoreStream.java
Patch:
@@ -19,8 +19,6 @@ public final class StoreStream {
 
     public static void handleMessageUpdate(StoreStream instance, ModelMessage message) {}
 
-    public final StoreClientVersion getClientVersion$app_productionBetaRelease() { return new StoreClientVersion(); }
-
     public static final Companion Companion = new Companion();
     public static final class Companion {
         public static StoreStream access$getCollector$p(StoreStream.Companion companion) { return new StoreStream(); }

File: DiscordStubs/src/main/java/com/discord/views/CheckedSetting.java
Patch:
@@ -24,10 +24,10 @@ public interface b {
         @SuppressWarnings("MethodNameSameAsClassName")
         View b();
         // subtext
-        TextView d();
+        TextView f();
     }
 
-    public b j;
+    public b k;
 
     public boolean isChecked() { return false; }
     public void toggle() {}

File: DiscordStubs/src/main/java/com/discord/views/user/UserAvatarPresenceView.java
Patch:
@@ -6,11 +6,11 @@
 
 import com.discord.views.StatusView;
 
-import c.a.i.m1;
+import c.a.i.o1;
 
 @SuppressWarnings("unused")
 public final class UserAvatarPresenceView extends RelativeLayout {
-    public m1 h;
+    public o1 i;
 
     public UserAvatarPresenceView(Context context, AttributeSet attrs) {
         super(context, attrs);

File: Aliucord/src/main/java/com/aliucord/api/CommandsAPI.java
Patch:
@@ -103,9 +103,10 @@ private static void _registerCommand(
                 CommandResult res = execute.invoke(args);
                 if (!res.send) {
                     // TODO: add arguments
+                    long guildId = StoreStream.getChannels().getChannel(channelId).e();
                     interactionsStore.put(id, new WidgetApplicationCommandBottomSheetViewModel.StoreState(
                             me,
-                            StoreStream.getGuilds().getMembers().get(StoreStream.getChannels().getChannel(channelId).e()).get(me.getId()),
+                            guildId == 0 ? null : StoreStream.getGuilds().getMembers().get(guildId).get(me.getId()),
                             new StoreApplicationInteractions.State.Loaded(new ApplicationCommandData("", "", "", name, Collections.emptyList())),
                             CommandsAPI.getAliucordApplication(),
                             Collections.emptyList(), Collections.emptyMap(), Collections.emptyMap(), Collections.emptyMap(), Collections.emptyMap(),

File: Aliucord/src/main/java/com/aliucord/HttpUtils.java
Patch:
@@ -9,6 +9,7 @@
 import java.net.HttpURLConnection;
 import java.net.URL;
 
+// TODO: make it better?
 public class HttpUtils {
     public static String stringRequest(String url, String body) throws IOException {
         String ln;

File: Aliucord/src/main/java/com/aliucord/settings/Updater.java
Patch:
@@ -62,7 +62,7 @@ public void onViewBound(View view) {
         layoutParams.setMargins(0, 0, padding, 0);
         btn.setLayoutParams(layoutParams);
         btn.setOnClickListener(e -> {
-            state.setText("Cheecking for updates...");
+            state.setText("Checking for updates...");
             new Thread(() -> {
                 PluginUpdater.checkUpdates(false);
                 new Handler(Looper.getMainLooper()).post(() -> {

File: Aliucord/src/main/java/com/aliucord/widgets/PluginCard.java
Patch:
@@ -40,7 +40,7 @@
 import java.io.File;
 
 @SuppressLint({"SetTextI18n", "ViewConstructor"})
-public class PluginCard extends MaterialCardView {
+public final class PluginCard extends MaterialCardView {
     public final TextView titleView;
     public PluginCard(Context context, String name, Plugin p, FragmentManager fragmentManager) {
         super(context);

File: DiscordStubs/src/main/java/com/discord/views/CheckedSetting.java
Patch:
@@ -20,6 +20,9 @@ public enum ViewType {
     public interface b {
         // text
         TextView a();
+        // root
+        @SuppressWarnings("MethodNameSameAsClassName")
+        View b();
         // subtext
         TextView d();
     }

File: Aliucord/src/main/java/com/aliucord/Main.java
Patch:
@@ -51,7 +51,6 @@ public class Main {
     public static Map<String, List<String>> getClassesToPatch() {
         Map<String, List<String>> classes = new HashMap<String, List<String>>(){{
             put("com.discord.app.AppActivity", Collections.singletonList("*"));
-            put("com.discord.app.AppActivity$a", Collections.singletonList("*"));
             put("com.discord.widgets.settings.WidgetSettings", Collections.singletonList("onViewBound"));
             put("com.discord.models.domain.emoji.ModelEmojiUnicode", Collections.singletonList("getImageUri"));
             put("com.discord.widgets.chat.list.WidgetChatList", Collections.singletonList("onViewBound"));

File: Aliucord/src/main/java/com/aliucord/views/Button.java
Patch:
@@ -16,8 +16,8 @@ public Button(Context context, boolean danger) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) this.setTextAppearance(R$h.UiKit_TextAppearance_Button);
         setAllCaps(false);
         Resources res = context.getResources();
-        this.setTextColor(res.getColor(R$c.uikit_btn_text_color_selector));
-        if (danger) this.setBackgroundColor(res.getColor(R$c.uikit_btn_bg_color_selector_red));
-        else this.setBackgroundColor(res.getColor(R$c.uikit_btn_bg_color_selector_brand));
+        setTextColor(res.getColor(R$c.uikit_btn_text_color_selector));
+        if (danger) setBackgroundColor(res.getColor(R$c.uikit_btn_bg_color_selector_red));
+        else setBackgroundColor(res.getColor(R$c.brand));
     }
 }

File: Aliucord/src/main/java/com/discord/stores/StoreAuthentication.java
Patch:
@@ -6,7 +6,7 @@
 public final class StoreAuthentication {
     public static void access$dispatchLogin(StoreAuthentication instance, ModelLoginResult data) {}
 
-    public final String getAuthToken$app_productionGoogleRelease() { return ""; }
-    public final void handleAuthToken$app_productionGoogleRelease(String token) {}
+    public final String getAuthToken$app_productionBetaRelease() { return ""; }
+    public final void handleAuthToken$app_productionBetaRelease(String token) {}
     public final void setAuthed(String token) {}
 }

File: Aliucord/src/main/java/com/lytefast/flexinput/R$c.java
Patch:
@@ -2,6 +2,7 @@
 
 @SuppressWarnings("unused")
 public class R$c {
+    public static int brand = 0;
     public static int hypesquad_house_1 = 0;
     public static int hypesquad_house_2 = 0;
     public static int hypesquad_house_3 = 0;

File: Aliucord/src/main/java/c/a/j/b.java
Patch:
@@ -6,5 +6,5 @@
 @SuppressWarnings("unused")
 public final class b {
     // renderMD
-    public static CharSequence k(CharSequence source, Object[] formatArgs, Function1<?, Unit> initializer, int i) { return null; }
+    public static CharSequence j(CharSequence source, Object[] formatArgs, Function1<?, Unit> initializer, int i) { return null; }
 }

File: Aliucord/src/main/java/com/aliucord/Utils.java
Patch:
@@ -163,7 +163,7 @@ public static void rerenderChat() {
     public static String toJsonPretty(Object obj) { return gsonPretty.l(obj); }
 
     public static CharSequence renderMD(CharSequence source) {
-        return b.k(source, new Object[0], null, 2);
+        return b.j(source, new Object[0], null, 2);
     }
 
     public static void log(String msg) { Main.logger.debug(msg); }

File: Aliucord/src/main/java/com/aliucord/updater/PluginUpdater.java
Patch:
@@ -53,6 +53,7 @@ public static void checkUpdates(boolean notif) {
         NotificationData notificationData = new NotificationData();
         notificationData.title = "Updater";
         notificationData.body = Utils.renderMD("Updates for plugins are available: **" + TextUtils.join("**, **", updates.toArray()) + "**");
+        notificationData.autoDismissPeriodSecs = 10;
         notificationData.onClick = v -> {
             Utils.openPage(v.getContext(), com.aliucord.settings.Updater.class);
             return Unit.a;

File: Aliucord/src/main/java/com/aliucord/widgets/UpdaterPluginCard.java
Patch:
@@ -75,6 +75,7 @@ public UpdaterPluginCard(Context context, String plugin, Runnable forceUpdate) {
             update.setText("Updating..");
             new Thread(() -> {
                 PluginUpdater.update(plugin);
+                PluginUpdater.updates.remove(plugin);
                 new Handler(Looper.getMainLooper()).post(forceUpdate);
             }).start();
         });

File: Aliucord/src/main/java/com/aliucord/widgets/UpdaterPluginCard.java
Patch:
@@ -30,7 +30,7 @@ public UpdaterPluginCard(Context context, String plugin, Runnable forceUpdate) {
         int padding = Utils.getDefaultPadding();
 
         LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
-        params.setMargins(0, padding, 0, 0);
+        params.setMargins(0, padding / 2, 0, 0);
         setLayoutParams(params);
         setUseCompatPadding(true);
         setCardBackgroundColor(ColorCompat.getThemedColor(context, R$b.colorBackgroundSecondary));

File: Aliucord/src/main/java/com/google/gson/Gson.java
Patch:
@@ -4,6 +4,9 @@
 
 @SuppressWarnings("unused")
 public final class Gson {
+    // prettyPrint
+    public final boolean i = false;
+
     // fromJson
     public <T> T g(String json, Type type) throws JsonSyntaxException { return null; }
     // toJson

File: Aliucord/src/main/java/com/lytefast/flexinput/R$b.java
Patch:
@@ -17,6 +17,9 @@ public class R$b {
     public static int colorInteractiveNormal = 0;
     public static int colorPrimaryDivider = 0;
     public static int textInputStyle = 0;
+    public static int theme_chat_code = 0;
+    public static int theme_chat_codeblock_border = 0;
+    public static int theme_chat_spoiler_bg = 0;
     public static int toolbarColor = 0;
     public static int primary_100 = 0;
     public static int primary_630 = 0;

File: DexPatcher/src/main/java/com/aliucord/dexpatcher/Signer.java
Patch:
@@ -66,7 +66,7 @@ private static KeySet createKey() throws Exception {
     // based on https://gist.github.com/mmuszkow/10288441
     // and https://github.com/fornwall/apksigner/blob/master/src/main/java/net/fornwall/apksigner/ZipSigner.java
     public static void signApk(File apkFile, StateUpdater updater) throws Exception {
-        if (updater != null) updater.update("Singing apk file");
+        if (updater != null) updater.update("Signing apk file");
         File ks = new File(apkFile.getParent(), "ks.keystore");
         if (!ks.exists()) newKeystore(ks);
         char[] password = "password".toCharArray();

