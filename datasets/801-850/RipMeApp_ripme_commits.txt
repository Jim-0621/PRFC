File: src/main/java/com/rarchives/ripme/ripper/rippers/CheveretoRipper.java
Patch:
@@ -34,7 +34,7 @@ public CheveretoRipper(URL url) throws IOException {
         super(url);
     }
 
-    private static List<String> explicit_domains = Arrays.asList("tag-fox.com", "kenzato.uk");
+    private static List<String> explicit_domains = Arrays.asList("kenzato.uk");
 
     @Override
     public String getHost() {
@@ -90,7 +90,6 @@ public Document getFirstPage() throws IOException {
     @Override
     public Document getNextPage(Document doc) throws IOException {
         // Find next page
-        String nextUrl = "";
         // We use comic-nav-next to the find the next page
         Element elem = doc.select("li.pagination-next > a").first();
             if (elem == null) {

File: src/test/java/com/rarchives/ripme/tst/UtilsTest.java
Patch:
@@ -5,13 +5,13 @@
 import java.nio.file.Paths;
 import java.util.Arrays;
 
-import com.rarchives.ripme.utils.Utils;
-
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
+import com.rarchives.ripme.utils.Utils;
+
 public class UtilsTest {
 
     private final Logger LOGGER = LogManager.getLogger(UtilsTest.class);

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -1543,7 +1543,7 @@ private synchronized void handleEvent(StatusEvent evt) {
             openButton.setVisible(true);
             Path f = rsc.dir;
             String prettyFile = Utils.shortenPath(f);
-            openButton.setText(Utils.getLocalizedString("open") + prettyFile);
+            openButton.setText(Utils.getLocalizedString("open") + " " + prettyFile);
             mainFrame.setTitle("RipMe v" + UpdateUtils.getThisJarVersion());
             try {
                 Image folderIcon = ImageIO.read(getClass().getClassLoader().getResource("folder.png"));

File: src/main/java/com/rarchives/ripme/ripper/AbstractJSONRipper.java
Patch:
@@ -8,6 +8,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.nio.charset.StandardCharsets;
@@ -94,7 +95,7 @@ public void rip() throws IOException, URISyntaxException {
                 
                 index += 1;
                 LOGGER.debug("Found image url #" + index+ ": " + imageURL);
-                downloadURL(new URL(imageURL), index);
+                downloadURL(new URI(imageURL).toURL(), index);
             }
 
             if (isStopped() || isThisATest()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/NudeGalsRipper.java
Patch:
@@ -56,6 +56,7 @@ public List<String> getURLsFromPage(Document doc) {
         for (Element thumb : thumbs) {
             String link = thumb.attr("src").replaceAll("thumbs/th_", "");
             String imgSrc = "http://nude-gals.com/" + link;
+            imgSrc = imgSrc.replaceAll(" ", "%20");
             imageURLs.add(imgSrc);
         }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/XvideosRipper.java
Patch:
@@ -82,7 +82,7 @@ public List<String> getURLsFromPage(Document doc) {
                     String[] lines = e.html().split("\n");
                     for (String line : lines) {
                         if (line.contains("html5player.setVideoUrlHigh")) {
-                            String videoURL = line.replaceAll("\t", "").replaceAll("html5player.setVideoUrlHigh\\(", "").replaceAll("\'", "").replaceAll("\\);", "");
+                            String videoURL = line.strip().replaceAll("\t", "").replaceAll("html5player.setVideoUrlHigh\\(", "").replaceAll("\'", "").replaceAll("\\);", "");
                             results.add(videoURL);
                         }
                     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XvideosRipper.java
Patch:
@@ -82,7 +82,7 @@ public List<String> getURLsFromPage(Document doc) {
                     String[] lines = e.html().split("\n");
                     for (String line : lines) {
                         if (line.contains("html5player.setVideoUrlHigh")) {
-                            String videoURL = line.replaceAll("\t", "").replaceAll("html5player.setVideoUrlHigh\\(", "").replaceAll("\'", "").replaceAll("\\);", "");
+                            String videoURL = line.strip().replaceAll("\t", "").replaceAll("html5player.setVideoUrlHigh\\(", "").replaceAll("\'", "").replaceAll("\\);", "");
                             results.add(videoURL);
                         }
                     }

File: src/main/java/com/rarchives/ripme/ripper/AbstractJSONRipper.java
Patch:
@@ -8,6 +8,7 @@
 import java.io.File;
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.nio.charset.StandardCharsets;
@@ -94,7 +95,7 @@ public void rip() throws IOException, URISyntaxException {
                 
                 index += 1;
                 LOGGER.debug("Found image url #" + index+ ": " + imageURL);
-                downloadURL(new URL(imageURL), index);
+                downloadURL(new URI(imageURL).toURL(), index);
             }
 
             if (isStopped() || isThisATest()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.utils.RipUtils;
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URI;
 import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.ArrayList;
@@ -208,7 +209,7 @@ private boolean isURLBlacklisted(String url) {
         return false;
     }
     @Override
-    public List<String> getURLsFromPage(Document page) {
+    public List<String> getURLsFromPage(Document page) throws URISyntaxException {
         List<String> imageURLs = new ArrayList<>();
         Pattern p; Matcher m;
         for (Element link : page.select("a")) {
@@ -254,7 +255,7 @@ public List<String> getURLsFromPage(Document page) {
                 //Copied code from RedditRipper, getFilesFromURL should also implement stuff like flickr albums
                 URL originalURL;
                 try {
-                    originalURL = new URL(href);
+                    originalURL = new URI(href).toURL();
                 } catch (MalformedURLException e) {
                     continue;
                 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/LusciousRipper.java
Patch:
@@ -85,7 +85,7 @@ public List<String> getURLsFromPage(Document page) { // gets urls for all pages
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Matcher m = P.matcher(url.toExternalForm());
+        Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             albumid = m.group(1).split("_")[m.group(1).split("_").length - 1];
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/CheveretoRipper.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -50,10 +51,10 @@ public boolean canRip(URL url) {
     }
 
     @Override
-    public String getAlbumTitle(URL url) throws MalformedURLException {
+    public String getAlbumTitle(URL url) throws MalformedURLException, URISyntaxException {
         try {
             // Attempt to use album title as GID
-            Element titleElement = getFirstPage().select("meta[property=og:title]").first();
+            Element titleElement = getCachedFirstPage().select("meta[property=og:title]").first();
             String title = titleElement.attr("content");
             title = title.substring(title.lastIndexOf('/') + 1);
             return getHost() + "_" + title.trim();

File: src/main/java/com/rarchives/ripme/ripper/rippers/HbrowseRipper.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
@@ -49,9 +50,9 @@ public Document getFirstPage() throws IOException {
         }
 
         @Override
-        public String getAlbumTitle(URL url) throws MalformedURLException {
+        public String getAlbumTitle(URL url) throws MalformedURLException, URISyntaxException {
             try {
-                Document doc = getFirstPage();
+                Document doc = getCachedFirstPage();
                 String title = doc.select("div[id=main] > table.listTable > tbody > tr > td.listLong").first().text();
                 return getHost() + "_" + title + "_" + getGID(url);
             } catch (Exception e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/Hentai2readRipper.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.io.IOException;
 import java.net.MalformedURLException;
+import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
@@ -90,7 +91,7 @@ public Document getFirstPage() throws IOException {
         }
 
         @Override
-        public String getAlbumTitle(URL url) throws MalformedURLException {
+        public String getAlbumTitle(URL url) throws MalformedURLException, URISyntaxException {
             try {
                 return getHost() + "_" + getGID(url);
             } catch (Exception e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/NhentaiRipper.java
Patch:
@@ -126,7 +126,7 @@ public List<String> getURLsFromPage(Document page) {
         List<String> imageURLs = new ArrayList<>();
         Elements thumbs = page.select("a.gallerythumb > img");
         for (Element el : thumbs) {
-            imageURLs.add(el.attr("data-src").replaceAll("t\\.n", "i.n").replaceAll("t\\.", "."));
+            imageURLs.add(el.attr("data-src").replaceAll("://t", "://i").replaceAll("t\\.", "."));
         }
         return imageURLs;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -121,7 +121,7 @@ private String getApiURL(Long maxID) {
         case ACCOUNT:
             req.append("https://api.twitter.com/1.1/statuses/user_timeline.json")
                     .append("?screen_name=" + this.accountName).append("&include_entities=true")
-                    .append("&exclude_replies=true").append("&trim_user=true").append("&count=" + MAX_ITEMS_REQUEST)
+                    .append("&exclude_replies=false").append("&trim_user=true").append("&count=" + MAX_ITEMS_REQUEST)
                     .append("&tweet_mode=extended");
             break;
         case SEARCH:// Only get tweets from last week

File: src/main/java/com/rarchives/ripme/ui/History.java
Patch:
@@ -100,7 +100,7 @@ private void fromJSON(JSONArray jsonArray) {
 
     public void fromFile(String filename) throws IOException {
         try (InputStream is = new FileInputStream(filename)) {
-            String jsonString = IOUtils.toString(is);
+            String jsonString = IOUtils.toString(is, "UTF-8");
             JSONArray jsonArray = new JSONArray(jsonString);
             fromJSON(jsonArray);
         } catch (JSONException e) {
@@ -134,7 +134,7 @@ public boolean isEmpty() {
 
     public void toFile(String filename) throws IOException {
         try (OutputStream os = new FileOutputStream(filename)) {
-            IOUtils.write(toJSON().toString(2), os);
+            IOUtils.write(toJSON().toString(2), os, "UTF-8");
         }
     }
 }

File: src/main/java/com/rarchives/ripme/ui/RipStatusMessage.java
Patch:
@@ -13,6 +13,7 @@ public enum STATUS {
         DOWNLOAD_COMPLETE_HISTORY("Download Complete History"),
         RIP_COMPLETE("Rip Complete"),
         DOWNLOAD_WARN("Download problem"),
+        DOWNLOAD_SKIP("Download Skipped"),
         TOTAL_BYTES("Total bytes"),
         COMPLETED_BYTES("Completed bytes"),
         RIP_ERRORED("Rip Errored"),

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/VidearnRipper.java
Patch:
@@ -57,8 +57,8 @@ public void rip() throws IOException, URISyntaxException {
         if (mp4s.isEmpty()) {
             throw new IOException("Could not find files at " + url);
         }
-        String vidUrl = mp4s.getFirst();
+        String vidUrl = mp4s.get(0);
         addURLToDownload(new URI(vidUrl).toURL(), HOST + "_" + getGID(this.url));
         waitForThreads();
     }
-}
\ No newline at end of file
+}

File: src/main/java/com/rarchives/ripme/ripper/rippers/EHentaiRipper.java
Patch:
@@ -177,7 +177,7 @@ public Document getNextPage(Document doc) throws IOException, URISyntaxException
     @Override
     public List<String> getURLsFromPage(Document page) {
         List<String> imageURLs = new ArrayList<>();
-        Elements thumbs = page.select("#gdt > .gdtm a");
+        Elements thumbs = page.select("#gdt > a");
         // Iterate over images on page
         for (Element thumb : thumbs) {
             imageURLs.add(thumb.attr("href"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -12,15 +12,15 @@
 public class VidbleRipperTest extends RippersTest {
     @Test
     public void testVidbleRip() throws IOException, URISyntaxException {
-        VidbleRipper ripper = new VidbleRipper(new URI("http://www.vidble.com/album/y1oyh3zd").toURL());
+        VidbleRipper ripper = new VidbleRipper(new URI("https://vidble.com/album/cGEFr8zi").toURL());
         testRipper(ripper);
     }
 
     @Test
     public void testGetGID() throws IOException, URISyntaxException {
-        URL url = new URI("http://www.vidble.com/album/y1oyh3zd").toURL();
+        URL url = new URI("https://vidble.com/album/cGEFr8zi").toURL();
         VidbleRipper ripper = new VidbleRipper(url);
-        Assertions.assertEquals("y1oyh3zd", ripper.getGID(url));
+        Assertions.assertEquals("cGEFr8zi", ripper.getGID(url));
     }
 }
 

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -56,7 +56,7 @@ public static Http url(URL url) {
     }
 
     private void defaultSettings() {
-        this.retries = Utils.getConfigInteger("download.retries", 1);
+        this.retries = Utils.getConfigInteger("download.retries", 3);
         this.retrySleep = Utils.getConfigInteger("download.retry.sleep", 5000);
         connection = Jsoup.connect(this.url);
         connection.userAgent(AbstractRipper.USER_AGENT);

File: src/main/java/com/rarchives/ripme/ripper/rippers/CoomerPartyRipper.java
Patch:
@@ -4,7 +4,8 @@
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 
-import org.apache.log4j.Logger;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -23,7 +24,7 @@
  * <a href="https://coomer.su/api/schema">See this link for the API schema</a>.
  */
 public class CoomerPartyRipper extends AbstractJSONRipper {
-    private static final Logger LOGGER = Logger.getLogger(CoomerPartyRipper.class);
+    private static final Logger LOGGER = LogManager.getLogger(CoomerPartyRipper.class);
     private static final String IMG_URL_BASE = "https://c3.coomer.su/data";
     private static final String VID_URL_BASE = "https://c1.coomer.su/data";
     private static final Pattern IMG_PATTERN = Pattern.compile("^.*\\.(jpg|jpeg|png|gif|apng|webp|tif|tiff)$", Pattern.CASE_INSENSITIVE);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -121,7 +121,7 @@ private String getApiURL(Long maxID) {
         case ACCOUNT:
             req.append("https://api.twitter.com/1.1/statuses/user_timeline.json")
                     .append("?screen_name=" + this.accountName).append("&include_entities=true")
-                    .append("&exclude_replies=true").append("&trim_user=true").append("&count=" + MAX_ITEMS_REQUEST)
+                    .append("&exclude_replies=false").append("&trim_user=true").append("&count=" + MAX_ITEMS_REQUEST)
                     .append("&tweet_mode=extended");
             break;
         case SEARCH:// Only get tweets from last week

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -160,7 +160,7 @@ public void rip() throws IOException, URISyntaxException {
 
                 for (String imageURL : imageURLs) {
                     index += 1;
-                    LOGGER.debug("Found image url #" + index + ": " + imageURL);
+                    LOGGER.debug("Found image url #" + index + ": '" + imageURL + "'");
                     downloadURL(new URL(imageURL), index);
                     if (isStopped() || isThisATest()) {
                         break;

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.io.File;
 import java.io.FileOutputStream;
-import java.io.FileWriter;
 import java.io.IOException;
 import java.net.MalformedURLException;
 import java.net.URL;

File: src/main/java/com/rarchives/ripme/ripper/rippers/AerisdiesRipper.java
Patch:
@@ -14,7 +14,6 @@
 import org.jsoup.select.Elements;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.utils.Http;
 import java.util.HashMap;
 
 public class AerisdiesRipper extends AbstractHTMLRipper {

File: src/main/java/com/rarchives/ripme/ripper/rippers/AllporncomicRipper.java
Patch:
@@ -12,7 +12,6 @@
 import org.jsoup.nodes.Element;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.utils.Http;
 
 public class AllporncomicRipper extends AbstractHTMLRipper {
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/DeviantartRipper.java
Patch:
@@ -18,7 +18,6 @@
 import java.util.Arrays;
 import java.util.Base64;
 import java.util.HashMap;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.regex.Matcher;
@@ -28,7 +27,6 @@
 import org.jsoup.Connection.Method;
 import org.jsoup.Connection.Response;
 import org.jsoup.HttpStatusException;
-import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;

File: src/main/java/com/rarchives/ripme/ripper/rippers/DuckmoviesRipper.java
Patch:
@@ -1,11 +1,9 @@
 package com.rarchives.ripme.ripper.rippers;
 
-import com.rarchives.ripme.ripper.AbstractRipper;
 import com.rarchives.ripme.ripper.AbstractSingleFileRipper;
 import com.rarchives.ripme.utils.Http;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
 
 import java.io.IOException;
 import java.net.MalformedURLException;

File: src/main/java/com/rarchives/ripme/ripper/rippers/EroShareRipper.java
Patch:
@@ -119,7 +119,6 @@ public List<String> getURLsFromPage(Document doc) {
         for (Element img : imgs) {
             if (img.hasClass("album-image")) {
                 String imageURL = img.attr("src");
-                imageURL = imageURL;
                 URLs.add(imageURL);
             }
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -13,7 +13,6 @@
 import org.jsoup.Connection.Response;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
 import com.rarchives.ripme.utils.Http;
@@ -92,7 +91,6 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> URLs = new ArrayList<>();
         return getMediaFromPage(doc);
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/ErotivRipper.java
Patch:
@@ -11,7 +11,6 @@
 import org.jsoup.Connection.Response;
 import org.jsoup.nodes.Document;
 import org.jsoup.nodes.Element;
-import org.jsoup.select.Elements;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
 import com.rarchives.ripme.utils.Http;

File: src/main/java/com/rarchives/ripme/ripper/rippers/FemjoyhunterRipper.java
Patch:
@@ -12,7 +12,6 @@
 import org.jsoup.nodes.Element;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.utils.Http;
 
 public class FemjoyhunterRipper extends AbstractHTMLRipper {
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/FitnakedgirlsRipper.java
Patch:
@@ -13,7 +13,6 @@
 import org.jsoup.select.Elements;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.utils.Http;
 
 public class FitnakedgirlsRipper extends AbstractHTMLRipper {
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatporntubeRipper.java
Patch:
@@ -11,8 +11,6 @@
 import com.rarchives.ripme.ripper.AbstractSingleFileRipper;
 import org.jsoup.nodes.Document;
 
-import com.rarchives.ripme.utils.Http;
-
 public class GfycatporntubeRipper extends AbstractSingleFileRipper {
 
     public GfycatporntubeRipper(URL url) throws IOException {

File: src/main/java/com/rarchives/ripme/ripper/rippers/GirlsOfDesireRipper.java
Patch:
@@ -13,7 +13,6 @@
 import org.jsoup.select.Elements;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.utils.Http;
 
 public class GirlsOfDesireRipper extends AbstractHTMLRipper {
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoxRipper.java
Patch:
@@ -12,7 +12,6 @@
 import org.jsoup.nodes.Element;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.utils.Http;
 
 public class HentaifoxRipper extends AbstractHTMLRipper {
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/MangadexRipper.java
Patch:
@@ -126,9 +126,8 @@ protected List<String> getURLsFromJSON(JSONObject json) {
         String server;
         JSONObject chapterJSON = null;
         TreeMap<Double, String> treeMap = new TreeMap<>(chapterIDs);
-        Iterator it = treeMap.keySet().iterator();
-        while (it.hasNext()) {
-            double key = (double) it.next();
+        for (Double aDouble : treeMap.keySet()) {
+            double key = (double) aDouble;
             try {
                 chapterJSON = Http.url(new URL(chapterApiEndPoint + treeMap.get(key))).getJSON();
             } catch (IOException e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/MrCongRipper.java
Patch:
@@ -1,7 +1,6 @@
 package com.rarchives.ripme.ripper.rippers;
 
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
-import com.rarchives.ripme.ripper.AbstractRipper;
 import com.rarchives.ripme.utils.Http;
 import java.io.IOException;
 import java.net.MalformedURLException;

File: src/main/java/com/rarchives/ripme/ui/RipStatusComplete.java
Patch:
@@ -1,6 +1,5 @@
 package com.rarchives.ripme.ui;
 
-import java.io.IOException;
 import java.nio.file.Path;
 
 public class RipStatusComplete {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XvideosRipperTest.java
Patch:
@@ -4,7 +4,6 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.XvideosRipper;
-import com.rarchives.ripme.tst.ripper.rippers.RippersTest;
 import org.junit.jupiter.api.Test;
 
 public class XvideosRipperTest extends RippersTest {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -188,7 +188,7 @@ static boolean isNewerVersion(String latestVersion) {
 
         for (int i = 0; i < oldVersions.length; i++) {
             if (newVersions[i] > oldVersions[i]) {
-                logger.debug("oldVersion " + getThisJarVersion() + " < latestVersion" + latestVersion);
+                logger.debug("oldVersion " + getThisJarVersion() + " < latestVersion " + latestVersion);
                 return true;
             } else if (newVersions[i] < oldVersions[i]) {
                 logger.debug("oldVersion " + getThisJarVersion() + " > latestVersion " + latestVersion);

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -323,7 +323,7 @@ private static String getConfigFilePath() {
      */
     public static String removeCWD(Path saveAs) {
         try {
-            return saveAs.relativize(Paths.get(".").toAbsolutePath()).toString();
+            return Paths.get(".").toAbsolutePath().relativize(saveAs).toString();
         }
         catch (IllegalArgumentException e) {
             return saveAs.toString();

File: src/main/java/com/rarchives/ripme/ripper/rippers/NhentaiRipper.java
Patch:
@@ -126,7 +126,7 @@ public List<String> getURLsFromPage(Document page) {
         List<String> imageURLs = new ArrayList<>();
         Elements thumbs = page.select("a.gallerythumb > img");
         for (Element el : thumbs) {
-            imageURLs.add(el.attr("data-src").replaceAll("t\\.n", "i.n").replaceAll("t\\.", "."));
+            imageURLs.add(el.attr("data-src").replaceAll("://t", "://i").replaceAll("t\\.", "."));
         }
         return imageURLs;
     }

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -842,7 +842,7 @@ private void update() {
                 checkChoise.add(noButton);
                 JFrame.setDefaultLookAndFeelDecorated(true);
                 JFrame frame = new JFrame("Are you sure?");
-                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
+                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                 frame.add(checkChoise);
                 frame.setSize(405, 70);
                 frame.setVisible(true);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -168,11 +168,10 @@ public static void updateProgramGUI(JLabel configUpdateLabel) {
                 logger.error("Error while updating: ", e);
             }
         } else {
-            logger.debug("This version (" + UpdateUtils.getThisJarVersion()
-                    + ") is the same or newer than the website's version (" + latestVersion + ")");
+            logger.info("Running version (" + UpdateUtils.getThisJarVersion()
+                    + ") is not older than release (" + latestVersion + ")");
             configUpdateLabel.setText("<html><font color=\"green\">v" + UpdateUtils.getThisJarVersion()
                     + " is the latest version</font></html>");
-            logger.debug("Running latest version: " + UpdateUtils.getThisJarVersion());
         }
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/ComicextraRipper.java
Patch:
@@ -127,7 +127,7 @@ protected void downloadURL(URL url, int index) {
         String subdirectory = getSubDirectoryName();
         String prefix = getPrefix(++imageIndex);
 
-        addURLToDownload(url, prefix, subdirectory, null, null, FILE_NAME, null, Boolean.TRUE);
+        addURLToDownload(url, subdirectory, null, null, prefix, FILE_NAME, null, Boolean.TRUE);
     }
 
     /*

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -124,7 +124,7 @@ public List<String> getURLsFromPage(Document page) {
                         for (int i = 0; i != json.getJSONArray("pictures").length(); i++) {
                             image = "https://www.8muses.com/image/fl/" + json.getJSONArray("pictures").getJSONObject(i).getString("publicUri");
                             URL imageUrl = new URL(image);
-                            addURLToDownload(imageUrl, getPrefixShort(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, "", null, true);
+                            addURLToDownload(imageUrl, getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, getPrefixShort(x), "", null, true);
                             // X is our page index
                             x++;
                             if (isThisATest()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/TsuminoRipper.java
Patch:
@@ -127,6 +127,6 @@ public void downloadURL(URL url, int index) {
         There is no way to tell if an image returned from tsumino.com is a png to jpg. The content-type header is always
         "image/jpeg" even when the image is a png. The file ext is not included in the url.
          */
-        addURLToDownload(url, getPrefix(index), "", null, null, null, null, true);
+        addURLToDownload(url, "", null, null, getPrefix(index), null, null, true);
     }
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/WordpressComicRipper.java
Patch:
@@ -376,15 +376,15 @@ public List<String> getURLsFromPage(Document doc) {
         // freeadultcomix gets it own if because it needs to add http://freeadultcomix.com to the start of each link
         // TODO review the above comment which no longer applies -- see if there's a refactoring we should do here.
         if (url.toExternalForm().contains("freeadultcomix.com")) {
-            for (Element elem : doc.select("div.single-post > p > img.aligncenter")) {
+            for (Element elem : doc.select("div.post-texto > p > noscript > img[class*=aligncenter]")) {
                 result.add(elem.attr("src"));
             }
         } else if (url.toExternalForm().contains("comics-xxx.com")) {
             for (Element elem : doc.select("div.single-post > center > p > img")) {
                 result.add(elem.attr("src"));
             }
         } else if (url.toExternalForm().contains("shipinbottle.pepsaga.com")) {
-            for (Element elem : doc.select("div#comic > div.comicpane > a > img")) {
+            for (Element elem : doc.select("div#comic > a > img")) {
                 result.add(elem.attr("src"));
             }
         } else if (url.toExternalForm().contains("8muses.download")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class EromeRipper extends AbstractHTMLRipper {
 
+    private static final String EROME_REFERER = "https://www.erome.com/";
+
     boolean rippingProfile;
 
 
@@ -41,7 +43,7 @@ public String getHost() {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, getPrefix(index), "", EROME_REFERER, null, null);
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/rippers/ListalRipper.java
Patch:
@@ -26,7 +26,7 @@ public class ListalRipper extends AbstractHTMLRipper {
 
     private Pattern p1 = Pattern.compile("https:\\/\\/www.listal.com\\/list\\/([a-zA-Z0-9-]+)");
     private Pattern p2 =
-            Pattern.compile("https:\\/\\/www.listal.com\\/((?:(?:[a-zA-Z0-9-]+)\\/?)+)");
+            Pattern.compile("https:\\/\\/www.listal.com\\/((?:(?:[a-zA-Z0-9-_%]+)\\/?)+)");
     private String listId = null; // listId to get more images via POST.
     private String postUrl = "https://www.listal.com/item-list/"; //to load more images.
     private UrlType urlType = UrlType.UNKNOWN;

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -59,7 +59,7 @@ public static void main(String[] args) {
         CommandLine cl = getArgs(args);
 
         if (args.length > 0 && cl.hasOption('v')){
-            logger.info(UpdateUtils.getThisJarVersion());
+            System.out.println(UpdateUtils.getThisJarVersion());
             System.exit(0);
         }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -22,6 +22,8 @@
  */
 public class EromeRipper extends AbstractHTMLRipper {
 
+    private static final String EROME_REFERER = "https://www.erome.com/";
+
     boolean rippingProfile;
 
 
@@ -41,7 +43,7 @@ public String getHost() {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, getPrefix(index), "", EROME_REFERER, null, null);
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -5,6 +5,7 @@
 import java.net.SocketTimeoutException;
 import java.net.URL;
 import java.net.URLConnection;
+import java.nio.file.Paths;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Map;
@@ -79,7 +80,7 @@ public void run() {
             return;
         }
         if (saveAs.exists() && !observer.tryResumeDownload() && !getFileExtFromMIME
-                || Utils.fuzzyExists(new File(saveAs.getParent()), saveAs.getName()) && getFileExtFromMIME
+                || Utils.fuzzyExistsBetter(Paths.get(saveAs.getParent()), saveAs.getName()) && getFileExtFromMIME
                         && !observer.tryResumeDownload()) {
             if (Utils.getConfigBoolean("file.overwrite", false)) {
                 logger.info("[!] " + Utils.getLocalizedString("deleting.existing.file") + prettySaveAs);

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -43,7 +43,7 @@ public String getHost() {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, getPrefix(index), "", "erome.com", this.cookies);
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagebamRipper.java
Patch:
@@ -47,7 +47,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p;
         Matcher m;
 
-        p = Pattern.compile("^https?://[wm.]*imagebam.com/gallery/([a-zA-Z0-9]+).*$");
+        p = Pattern.compile("^https?://[wm.]*imagebam.com/(gallery|view)/([a-zA-Z0-9]+).*$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -159,7 +159,7 @@ public List<String> getURLsFromPage(Document doc) {
         if (!isVideoUrl(url)) {
             if (!doc.select("div.picture_view > div.pictures_block > div.items > div.item-container > a.item").isEmpty()) {
                 // Old HTML structure is still present at some places
-                for (Element page : doc.select("div.picture_view > div.pictures_block > div.items > div.item-container > a.item")) {
+                for (Element page : doc.select(".clearfix > div > a.slided")) {
                     // Make sure we don't waste time running the loop if the ripper has been stopped
                     if (isStopped()) {
                         break;

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -142,7 +142,7 @@ private boolean isVideoUrl(URL url) {
     @Override
     public Document getNextPage(Document doc) throws IOException {
         if (doc.select("a.prev-next-list-link").first() != null) {
-            String nextPageUrl = doc.select("a.prev-next-list-link").first().attr("href");
+            String nextPageUrl = doc.select("a.prev-next-list-link--next").first().attr("href");
             if (nextPageUrl.startsWith("http")) {
                 nextPageUrl = nextPageUrl.replaceAll("https?://\\w?\\w?\\.?xhamster([^<]*)\\.", "https://m.xhamster$1.");
                 return Http.url(nextPageUrl).get();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MeituriRipperTest.java
Patch:
@@ -11,15 +11,14 @@
 
 public class MeituriRipperTest extends RippersTest {
     @Test
-    @Disabled("Broken ripper")
     public void testMeituriRip() throws IOException {
-        MeituriRipper ripper = new MeituriRipper(new URL("https://www.meituri.com/a/14449/"));
+        MeituriRipper ripper = new MeituriRipper(new URL("https://www.tujigu.com/a/14449/"));
         testRipper(ripper);
     }
 
     @Test
     public void testGetGID() throws IOException {
-        URL url = new URL("https://www.meituri.com/a/14449/");
+        URL url = new URL("https://www.tujigu.com/a/14449/");
         MeituriRipper ripper = new MeituriRipper(url);
         Assertions.assertEquals("14449", ripper.getGID(url));
     }

File: src/main/java/com/rarchives/ripme/ripper/AbstractJSONRipper.java
Patch:
@@ -142,10 +142,10 @@ public int getCount() {
      * Queues multiple URLs of single images to download from a single Album URL
      */
     public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
-            // Only download one file if this is a test.
-        if (super.isThisATest() &&
-                (itemsPending.size() > 0 || itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
+        // Only download one file if this is a test.
+        if (super.isThisATest() && (itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
             stop();
+            itemsPending.clear();
             return false;
         }
         if (!allowDuplicates()

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -51,10 +51,10 @@ public int getCount() {
      * Queues multiple URLs of single images to download from a single Album URL
      */
     public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
-            // Only download one file if this is a test.
-        if (super.isThisATest() &&
-                (itemsPending.size() > 0 || itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
+        // Only download one file if this is a test.
+        if (super.isThisATest() && (itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
             stop();
+            itemsPending.clear();
             return false;
         }
         if (!allowDuplicates()

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -14,7 +14,9 @@ public class YoupornRipperTest  extends RippersTest {
     @Tag("flaky")
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
-        contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));
+        // Video cannot be loaded: "Video has been flagged for verification"
+        //contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));
+        contentURLs.add(new URL("https://www.youporn.com/watch/13158849/smashing-star-slut-part-2/"));
         for (URL url : contentURLs) {
             YoupornRipper ripper = new YoupornRipper(url);
             testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagebamRipperTest.java
Patch:
@@ -9,7 +9,6 @@
 
 public class ImagebamRipperTest extends RippersTest {
     @Test
-    @Tag("flaky")
     public void testImagebamRip() throws IOException {
         ImagebamRipper ripper = new ImagebamRipper(new URL("http://www.imagebam.com/gallery/488cc796sllyf7o5srds8kpaz1t4m78i"));
         testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuraffinityRipper.java
Patch:
@@ -125,6 +125,9 @@ public List<String> getURLsFromPage(Document page) {
                     urls.add(urlToAdd);
                 }
             }
+            if (isStopped() || isThisATest()) {
+                break;
+            }
         }
         return urls;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/WordpressComicRipper.java
Patch:
@@ -376,15 +376,15 @@ public List<String> getURLsFromPage(Document doc) {
         // freeadultcomix gets it own if because it needs to add http://freeadultcomix.com to the start of each link
         // TODO review the above comment which no longer applies -- see if there's a refactoring we should do here.
         if (url.toExternalForm().contains("freeadultcomix.com")) {
-            for (Element elem : doc.select("div.single-post > p > img.aligncenter")) {
+            for (Element elem : doc.select("div.post-texto > p > noscript > img[class*=aligncenter]")) {
                 result.add(elem.attr("src"));
             }
         } else if (url.toExternalForm().contains("comics-xxx.com")) {
             for (Element elem : doc.select("div.single-post > center > p > img")) {
                 result.add(elem.attr("src"));
             }
         } else if (url.toExternalForm().contains("shipinbottle.pepsaga.com")) {
-            for (Element elem : doc.select("div#comic > div.comicpane > a > img")) {
+            for (Element elem : doc.select("div#comic > a > img")) {
                 result.add(elem.attr("src"));
             }
         } else if (url.toExternalForm().contains("8muses.download")) {

File: src/main/java/com/rarchives/ripme/ripper/AbstractJSONRipper.java
Patch:
@@ -141,10 +141,10 @@ public int getCount() {
      * Queues multiple URLs of single images to download from a single Album URL
      */
     public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
-            // Only download one file if this is a test.
-        if (super.isThisATest() &&
-                (itemsPending.size() > 0 || itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
+        // Only download one file if this is a test.
+        if (super.isThisATest() && (itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
             stop();
+            itemsPending.clear();
             return false;
         }
         if (!allowDuplicates()

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -51,10 +51,10 @@ public int getCount() {
      * Queues multiple URLs of single images to download from a single Album URL
      */
     public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
-            // Only download one file if this is a test.
-        if (super.isThisATest() &&
-                (itemsPending.size() > 0 || itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
+        // Only download one file if this is a test.
+        if (super.isThisATest() && (itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
             stop();
+            itemsPending.clear();
             return false;
         }
         if (!allowDuplicates()

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaicafeRipperTest.java
Patch:
@@ -4,19 +4,22 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaiCafeRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Tag;
 import org.junit.jupiter.api.Test;
 
 public class HentaicafeRipperTest extends RippersTest {
     @Test
     @Tag("flaky")
+    @Disabled("20/05/2021 This test was disabled as the site has experienced notable downtime")
     public void testHentaiCafeAlbum() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/kikuta-the-oni-in-the-room/"));
         testRipper(ripper);
     }
     // This album has a line break (<br />) in the url. Test it to make sure ripme can handle these invalid urls
     @Test
     @Tag("flaky")
+    @Disabled("20/05/2021 This test was disabled as the site has experienced notable downtime")
     public void testAlbumWithInvalidChars() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/chobipero-club/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentainexusRipperTest.java
Patch:
@@ -8,12 +8,14 @@
 import com.rarchives.ripme.ripper.rippers.HentaiNexusRipper;
 import org.json.JSONObject;
 import org.junit.Assert;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Tag;
 import org.junit.jupiter.api.Test;
 
 public class HentainexusRipperTest extends RippersTest {
     @Test
     @Tag("flaky")
+    @Disabled("20/05/2021 This test was disabled as the site has experienced notable downtime")
     public void testHentaiNexusJson() throws IOException {
         List<URL> testURLs = new ArrayList<>();
         testURLs.add(new URL("https://hentainexus.com/view/9202"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -14,7 +14,9 @@ public class YoupornRipperTest  extends RippersTest {
     @Tag("flaky")
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
-        contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));
+        // Video cannot be loaded: "Video has been flagged for verification"
+        //contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));
+        contentURLs.add(new URL("https://www.youporn.com/watch/13158849/smashing-star-slut-part-2/"));
         for (URL url : contentURLs) {
             YoupornRipper ripper = new YoupornRipper(url);
             testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.94";
+    private static final String DEFAULT_VERSION = "1.7.95";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -30,6 +30,7 @@ public void testImagefapAlbums() throws IOException {
         }
     }
     @Test
+    @Tag("flaky")
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PornhubRipperTest.java
Patch:
@@ -29,7 +29,7 @@ public void testGetGID() throws IOException {
 
     @Test
     public void testGetNextPage() throws IOException {
-        String baseURL = "https://www.pornhub.com/album/43902391";
+        String baseURL = "https://www.pornhub.com/album/30687901";
         PornhubRipper ripper = new PornhubRipper(new URL(baseURL));
         Document page = Http.url(baseURL).get();
         int numPagesRemaining = 1;

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/RedditRipperTest.java
Patch:
@@ -61,6 +61,7 @@ public void testRedditGfyBadURL() throws IOException {
     }
 
     @Test
+    @Tag("flaky")
     public void testRedditGallery() throws IOException{
         RedditRipper ripper = new RedditRipper(
                 new URL("https://www.reddit.com/gallery/hrrh23"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/RedgifsRipperTest.java
Patch:
@@ -46,6 +46,7 @@ public void testRedgifsProfile() throws IOException {
      * @throws IOException
      */
     @Test
+    @Disabled("test or ripper broken")
     public void testRedgifsSearch() throws IOException {
         RedgifsRipper ripper  = new RedgifsRipper(new URL("https://redgifs.com/gifs/browse/little-caprice"));
         Document doc = ripper.getFirstPage();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XhamsterRipperTest.java
Patch:
@@ -35,7 +35,7 @@ public void testXhamsterAlbumOneDomain() throws IOException {
     @Test
     @Tag("flaky")
     public void testXhamsterAlbumDesiDomain() throws IOException {
-        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.desi/photos/gallery/japanese-dolls-4-asahi-mizuno-7254664"));
+        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster5.desi/photos/gallery/japanese-dolls-4-asahi-mizuno-7254664"));
         testRipper(ripper);
     }
     @Test
@@ -49,9 +49,9 @@ public void testBrazilianXhamster() throws IOException {
         XhamsterRipper ripper = new XhamsterRipper(new URL("https://pt.xhamster.com/photos/gallery/silvana-7105696"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGetGID() throws IOException {
-        URL url = new URL("https://xhamster.com/photos/gallery/japanese-dolls-4-asahi-mizuno-7254664");
+        URL url = new URL("https://xhamster5.desi/photos/gallery/japanese-dolls-4-asahi-mizuno-7254664");
         XhamsterRipper ripper = new XhamsterRipper(url);
         Assertions.assertEquals("7254664", ripper.getGID(url));
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -1,6 +1,7 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.YoupornRipper;
+import org.junit.jupiter.api.Tag;
 import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
@@ -10,6 +11,7 @@
 
 public class YoupornRipperTest  extends RippersTest {
     @Test
+    @Tag("flaky")
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -57,7 +57,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
     }
 
     public boolean isProfile() {
-        Pattern p = Pattern.compile("^https?://[wm.]*gfycat\\.com/@([a-zA-Z0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*gfycat\\.com/@([a-zA-Z0-9\\.\\-\\_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
@@ -79,11 +79,11 @@ public void downloadURL(URL url, int index) {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(thumbs\\.|[wm\\.]*)gfycat\\.com/@?([a-zA-Z0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://(?:thumbs\\.|[wm\\.]*)gfycat\\.com/@?([a-zA-Z0-9\\.\\-\\_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         
         if (m.matches())
-            return m.group(2);
+            return m.group(1);
         
         throw new MalformedURLException(
                 "Expected gfycat.com format: "

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -57,7 +57,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
     }
 
     public boolean isProfile() {
-        Pattern p = Pattern.compile("^https?://[wm.]*gfycat\\.com/@([a-zA-Z0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*gfycat\\.com/@([a-zA-Z0-9\\.\\-\\_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
@@ -79,11 +79,11 @@ public void downloadURL(URL url, int index) {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(thumbs\\.|[wm\\.]*)gfycat\\.com/@?([a-zA-Z0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://(?:thumbs\\.|[wm\\.]*)gfycat\\.com/@?([a-zA-Z0-9\\.\\-\\_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         
         if (m.matches())
-            return m.group(2);
+            return m.group(1);
         
         throw new MalformedURLException(
                 "Expected gfycat.com format: "

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -139,8 +139,8 @@ private boolean isVideoUrl(URL url) {
 
     @Override
     public Document getNextPage(Document doc) throws IOException {
-        if (doc.select("a[data-page=next]").first() != null) {
-            String nextPageUrl = doc.select("a[data-page=next]").first().attr("href");
+        if (doc.select("a[rel=next]").first() != null) {
+            String nextPageUrl = doc.select("a[rel=next]").first().attr("href");
             if (nextPageUrl.startsWith("http")) {
                 nextPageUrl = nextPageUrl.replaceAll("https?://\\w?\\w?\\.?xhamster\\.", "https://m.xhamster.");
                 nextPageUrl = nextPageUrl.replaceAll("https?://xhamster2\\.", "https://m.xhamster2.");

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -57,7 +57,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
     }
 
     public boolean isProfile() {
-        Pattern p = Pattern.compile("^https?://[wm.]*gfycat\\.com/@([a-zA-Z0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*gfycat\\.com/@([a-zA-Z0-9\\.\\-\\_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
@@ -79,11 +79,11 @@ public void downloadURL(URL url, int index) {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(thumbs\\.|[wm\\.]*)gfycat\\.com/@?([a-zA-Z0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://(?:thumbs\\.|[wm\\.]*)gfycat\\.com/@?([a-zA-Z0-9\\.\\-\\_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         
         if (m.matches())
-            return m.group(2);
+            return m.group(1);
         
         throw new MalformedURLException(
                 "Expected gfycat.com format: "

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.93";
+    private static final String DEFAULT_VERSION = "1.7.94";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -81,8 +81,9 @@ private Map<String, String> cookiesForURL(String u) {
             while (parts.length > 1) {
                 String domain = String.join(".", parts);
                 // Try to get cookies for this host from config
+                logger.info("Trying to load cookies from config for " + domain);
                 cookieStr = Utils.getConfigString("cookies." + domain, "");
-                if (cookieStr.equals("")) {
+                if (!cookieStr.equals("")) {
                     cookieDomain = domain; 
                     // we found something, start parsing
                     break;

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -81,8 +81,9 @@ private Map<String, String> cookiesForURL(String u) {
             while (parts.length > 1) {
                 String domain = String.join(".", parts);
                 // Try to get cookies for this host from config
+                logger.info("Trying to load cookies from config for " + domain);
                 cookieStr = Utils.getConfigString("cookies." + domain, "");
-                if (cookieStr.equals("")) {
+                if (!cookieStr.equals("")) {
                     cookieDomain = domain; 
                     // we found something, start parsing
                     break;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.92";
+    private static final String DEFAULT_VERSION = "1.7.93";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ripper/rippers/XcartxRipper.java
Patch:
@@ -56,7 +56,7 @@ public List<String> getURLsFromPage(Document page) {
         for (Element image : imageElements) {
             String imageUrl = image.attr("data-src");
 
-            imageURLs.add(getDomain() + imageUrl);
+            imageURLs.add("https://" + getDomain() + imageUrl);
         }
         return imageURLs;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XlecxRipper.java
Patch:
@@ -8,7 +8,7 @@
 
 public class XlecxRipper extends XcartxRipper {
 
-    private Pattern p = Pattern.compile("^https?://xlecx.com/([a-zA-Z0-9_\\-]+).html");
+    private Pattern p = Pattern.compile("^https?://xlecx.org/([a-zA-Z0-9_\\-]+).html");
 
     public XlecxRipper(URL url) throws IOException {
         super(url);
@@ -21,7 +21,7 @@ public String getHost() {
 
     @Override
     public String getDomain() {
-        return "xlecx.com";
+        return "xlecx.org";
     }
 
     @Override
@@ -30,7 +30,7 @@ public String getGID(URL url) throws MalformedURLException {
         if (m.matches()) {
             return m.group(1);
         }
-        throw new MalformedURLException("Expected URL format: http://xlecx.com/comic, got: " + url);
+        throw new MalformedURLException("Expected URL format: http://xlecx.org/comic, got: " + url);
 
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/AerisdiesRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.AerisdiesRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class AerisdiesRipperTest extends RippersTest {
@@ -30,7 +31,7 @@ public void testDjAlbum() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("http://www.aerisdies.com/html/lb/douj_5230_1.html");
         AerisdiesRipper ripper = new AerisdiesRipper(url);
-        assertEquals("5230", ripper.getGID(url));
+        Assertions.assertEquals("5230", ripper.getGID(url));
     }
 
     // TODO: Add a test for an album with a title.

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,6 +3,7 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
@@ -13,6 +14,7 @@ public void testComicUrl() throws IOException {
         testRipper(ripper);
     }
     @Test
+    @Disabled("no images found error, broken ripper?")
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DeviantartRipperTest.java
Patch:
@@ -8,6 +8,7 @@
 import com.rarchives.ripme.ripper.rippers.DeviantartRipper;
 import com.rarchives.ripme.utils.Http;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -32,7 +33,7 @@ public void testDeviantartNSFWAlbum() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("https://www.deviantart.com/airgee/gallery/");
         DeviantartRipper ripper = new DeviantartRipper(url);
-        assertEquals("airgee", ripper.getGID(url));
+        Assertions.assertEquals("airgee", ripper.getGID(url));
     }
 
     @Test
@@ -55,7 +56,7 @@ public void testSanitizeURL() throws IOException {
 
         for (URL url : urls) {
             DeviantartRipper ripper = new DeviantartRipper(url);
-            assertEquals("https://www.deviantart.com/airgee/gallery/", ripper.sanitizeURL(url).toExternalForm());
+            Assertions.assertEquals("https://www.deviantart.com/airgee/gallery/", ripper.sanitizeURL(url).toExternalForm());
         }
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,10 +4,12 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
     @Test
+    @Disabled("test or ripper broken")
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/E621RipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.E621Ripper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class E621RipperTest extends RippersTest {
@@ -30,7 +31,7 @@ public void testGetNextPage() throws IOException {
         try {
             noNextPageRipper.getNextPage(noNextPageRipper.getFirstPage());
         } catch (IOException e) {
-            assertEquals(e.getMessage(), "No more pages.");
+            Assertions.assertEquals(e.getMessage(), "No more pages.");
         }
     }
     @Test
@@ -57,7 +58,7 @@ public void testOldGetNextPage() throws IOException {
         try {
             noNextPageRipper.getNextPage(noNextPageRipper.getFirstPage());
         } catch (IOException e) {
-            assertEquals(e.getMessage(), "No more pages.");
+            Assertions.assertEquals(e.getMessage(), "No more pages.");
         }
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class EhentaiRipperTest extends RippersTest {
@@ -24,11 +25,11 @@ public void testTagBlackList()  throws IOException {
         // Test multiple blacklisted tags
         String[] tags = {"test", "one", "yuri"};
         String blacklistedTag = RipUtils.checkTags(tags, tagsOnPage);
-        assertEquals("yuri", blacklistedTag);
+        Assertions.assertEquals("yuri", blacklistedTag);
 
         // test tags with spaces in them
         String[] tags2 = {"test", "one", "midnight on mars"};
         blacklistedTag = RipUtils.checkTags(tags2, tagsOnPage);
-        assertEquals("midnight on mars", blacklistedTag);
+        Assertions.assertEquals("midnight on mars", blacklistedTag);
     }
 }
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EightmusesRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.EightmusesRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class EightmusesRipperTest extends RippersTest {
@@ -22,11 +23,11 @@ public void testEightmusesAlbum() throws IOException {
     @Test
     public void testGID() throws IOException {
         EightmusesRipper ripper = new EightmusesRipper(new URL("https://www.8muses.com/comix/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore"));
-        assertEquals("Affect3D-Comics", ripper.getGID(new URL("https://www.8muses.com/comics/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore")));
+        Assertions.assertEquals("Affect3D-Comics", ripper.getGID(new URL("https://www.8muses.com/comics/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore")));
     }
     @Test
     public void testGetSubdir() throws IOException {
         EightmusesRipper ripper = new EightmusesRipper(new URL("https://www.8muses.com/comix/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore"));
-        assertEquals("After-Party-Issue-1", ripper.getSubdir("After Party - Issue 1"));
+        Assertions.assertEquals("After-Party-Issue-1", ripper.getSubdir("After Party - Issue 1"));
     }
 }
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EromeRipperTest.java
Patch:
@@ -5,20 +5,21 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.EromeRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class EromeRipperTest extends RippersTest {
 	@Test
 	public void testGetGIDProfilePage() throws IOException {
 		URL url = new URL("https://www.erome.com/Jay-Jenna");
 		EromeRipper ripper = new EromeRipper(url);
-		assertEquals("Jay-Jenna", ripper.getGID(url));
+		Assertions.assertEquals("Jay-Jenna", ripper.getGID(url));
 	}
 	@Test
 	public void testGetGIDAlbum() throws IOException {
 		URL url = new URL("https://www.erome.com/a/KbDAM1XT");
 		EromeRipper ripper = new EromeRipper(url);
-		assertEquals("KbDAM1XT", ripper.getGID(url));
+		Assertions.assertEquals("KbDAM1XT", ripper.getGID(url));
 	}
 	@Test
 	public void testGetAlbumsToQueue() throws IOException {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FolioRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.FolioRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class FolioRipperTest extends RippersTest {
@@ -21,6 +22,6 @@ public void testFolioRip() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("https://folio.ink/DmBe6i");
         FolioRipper ripper = new FolioRipper(url);
-        assertEquals("DmBe6i", ripper.getGID(url));
+        Assertions.assertEquals("DmBe6i", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,15 +4,18 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
     @Test
+    @Disabled("test or ripper broken")
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
     @Test
+    @Disabled("test or ripper broken")
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaifoundryRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaifoundryRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class HentaifoundryRipperTest extends RippersTest {
@@ -16,7 +17,7 @@ public void testHentaifoundryRip() throws IOException {
     public void testHentaifoundryGetGID() throws IOException {
         HentaifoundryRipper ripper = new HentaifoundryRipper(new URL("https://www.hentai-foundry.com/stories/user/Rakked"));
         testRipper(ripper);
-        assertEquals("Rakked", ripper.getGID(new URL("https://www.hentai-foundry.com/stories/user/Rakked")));
+        Assertions.assertEquals("Rakked", ripper.getGID(new URL("https://www.hentai-foundry.com/stories/user/Rakked")));
     }
     @Test
     public void testHentaifoundryPdfRip() throws IOException {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HitomiRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.HitomiRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -14,6 +15,6 @@ public class HitomiRipperTest extends RippersTest {
     public void testRip() throws IOException {
         HitomiRipper ripper = new HitomiRipper(new URL("https://hitomi.la/galleries/975973.html"));
         testRipper(ripper);
-        assertTrue(ripper.getGID(new URL("https://hitomi.la/galleries/975973.html")).equals("975973"));
+        Assertions.assertTrue(ripper.getGID(new URL("https://hitomi.la/galleries/975973.html")).equals("975973"));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HqpornerRipperTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.rarchives.ripme.ripper.rippers.HqpornerRipper;
 import com.rarchives.ripme.utils.Utils;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
@@ -20,7 +21,7 @@ public void testRip() throws IOException {
     public void testGetGID() throws IOException {
         URL poolURL = new URL("https://hqporner.com/hdporn/84636-pool_lesson_with_a_cheating_husband.html");
         HqpornerRipper ripper = new HqpornerRipper(poolURL);
-        assertEquals("84636-pool_lesson_with_a_cheating_husband", ripper.getGID(poolURL));
+        Assertions.assertEquals("84636-pool_lesson_with_a_cheating_husband", ripper.getGID(poolURL));
     }
     @Test
     public void testGetURLsFromPage() throws IOException {
@@ -39,7 +40,7 @@ public void testGetNextPage() throws IOException {
         try {
             ripper.getNextPage(ripper.getFirstPage());
         } catch (IOException e) {
-            assertEquals(e.getMessage(), "No next page found.");
+            Assertions.assertEquals(e.getMessage(), "No next page found.");
         }
     }
     @Test

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import java.util.Map;
 
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class ImagefapRipperTest extends RippersTest {
@@ -30,6 +31,6 @@ public void testImagefapAlbums() throws IOException {
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);
-        assertEquals("imagefap_Red.Heels.Lover.In.Love_7789753", ripper.getAlbumTitle(url));
+        Assertions.assertEquals("imagefap_Red.Heels.Lover.In.Love_7789753", ripper.getAlbumTitle(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagevenueRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.ImagevenueRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -21,6 +22,6 @@ public void testImagevenueRip() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("http://img120.imagevenue.com/galshow.php?gal=gallery_1373818527696_191lo");
         ImagevenueRipper ripper = new ImagevenueRipper(url);
-        assertEquals("gallery_1373818527696_191lo", ripper.getGID(url));
+        Assertions.assertEquals("gallery_1373818527696_191lo", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgboxRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImgboxRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class ImgboxRipperTest extends RippersTest {
@@ -13,9 +14,10 @@ public void testImgboxRip() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("https://imgbox.com/g/FJPF7t26FD");
         ImgboxRipper ripper = new ImgboxRipper(url);
-        assertEquals("FJPF7t26FD", ripper.getGID(url));
+        Assertions.assertEquals("FJPF7t26FD", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/JagodibujaRipperTest.java
Patch:
@@ -4,10 +4,12 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.JagodibujaRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class JagodibujaRipperTest extends RippersTest {
     @Test
+    @Disabled("fails on github ubuntu automated PR check 2020-07-29")
     public void testJagodibujaRipper() throws IOException {
         // a photo set
         JagodibujaRipper ripper = new JagodibujaRipper(new URL("http://www.jagodibuja.com/comic-in-me/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/LusciousRipperTest.java
Patch:
@@ -4,7 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.LusciousRipper;
-import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class LusciousRipperTest extends RippersTest {
@@ -20,7 +20,7 @@ public void testPahealRipper() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("https://luscious.net/albums/h-na-alice-wa-suki-desu-ka-do-you-like-alice-when_321609/");
         LusciousRipper ripper = new LusciousRipper(url);
-        assertEquals("h-na-alice-wa-suki-desu-ka-do-you-like-alice-when_321609", ripper.getGID(url));
+        Assertions.assertEquals("h-na-alice-wa-suki-desu-ka-do-you-like-alice-when_321609", ripper.getGID(url));
     }
     
     @Test
@@ -34,7 +34,7 @@ public void testGetNextPage() throws IOException {
         try {
             singlePageRipper.getNextPage(singlePageRipper.getFirstPage());
         } catch (IOException e) {
-            assertEquals("No next page found.", e.getMessage());
+            Assertions.assertEquals("No next page found.", e.getMessage());
         }
     }
 }
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MeituriRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.MeituriRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -20,6 +21,6 @@ public void testMeituriRip() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("https://www.meituri.com/a/14449/");
         MeituriRipper ripper = new MeituriRipper(url);
-        assertEquals("14449", ripper.getGID(url));
+        Assertions.assertEquals("14449", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ModelmayhemRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.ModelmayhemRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -22,6 +23,6 @@ public void testModelmayhemRip() throws IOException {
     public void testGetGID() throws IOException {
         ModelmayhemRipper ripper = new ModelmayhemRipper(
                 new URL("https://www.modelmayhem.com/portfolio/520206/viewall"));
-        assertEquals("520206", ripper.getGID(new URL("https://www.modelmayhem.com/portfolio/520206/viewall")));
+        Assertions.assertEquals("520206", ripper.getGID(new URL("https://www.modelmayhem.com/portfolio/520206/viewall")));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaigalleryRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MyhentaigalleryRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class MyhentaigalleryRipperTest extends RippersTest {
@@ -14,9 +15,10 @@ public void testMyhentaigalleryAlbum() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("https://myhentaigallery.com/gallery/thumbnails/9201");
         MyhentaigalleryRipper ripper = new MyhentaigalleryRipper(url);
-        assertEquals("9201", ripper.getGID(url));
+        Assertions.assertEquals("9201", ripper.getGID(url));
     }
 }
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewgroundsRipperTest.java
Patch:
@@ -1,6 +1,7 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.NewgroundsRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
@@ -13,10 +14,11 @@ public void testNewgroundsRip() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("https://zone-sama.newgrounds.com/art");
         NewgroundsRipper ripper = new NewgroundsRipper(url);
-        assertEquals("zone-sama", ripper.getGID(url));
+        Assertions.assertEquals("zone-sama", ripper.getGID(url));
     }
 
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PicstatioRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PicstatioRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class PicstatioRipperTest extends RippersTest {
@@ -15,6 +16,6 @@ public void testRip() throws IOException {
     @Test
     public void testGID() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
-        assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));
+        Assertions.assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));
     }
 }
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/RedgifsRipperTest.java
Patch:
@@ -49,8 +49,8 @@ public void testRedgifsSearch() throws IOException {
         Document doc = ripper.getFirstPage();
 
         doc = ripper.getNextPage(doc);
-        assertTrue("https://napi.redgifs.com/v1/gfycats/search?search_text=little%20caprice&count=150&start=150".equalsIgnoreCase(doc.location()));
+        Assertions.assertTrue("https://napi.redgifs.com/v1/gfycats/search?search_text=little%20caprice&count=150&start=150".equalsIgnoreCase(doc.location()));
         doc = ripper.getNextPage(doc);
-        assertTrue("https://napi.redgifs.com/v1/gfycats/search?search_text=little%20caprice&count=150&start=300".equalsIgnoreCase(doc.location()));
+        Assertions.assertTrue("https://napi.redgifs.com/v1/gfycats/search?search_text=little%20caprice&count=150&start=300".equalsIgnoreCase(doc.location()));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Rule34RipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Rule34Ripper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class Rule34RipperTest extends RippersTest {
@@ -13,10 +14,11 @@ public void testShesFreakyRip() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("https://rule34.xxx/index.php?page=post&s=list&tags=bimbo");
         Rule34Ripper ripper = new Rule34Ripper(url);
-        assertEquals("bimbo", ripper.getGID(url));
+        Assertions.assertEquals("bimbo", ripper.getGID(url));
     }
 
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SankakuComplexRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.SankakuComplexRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -29,13 +30,13 @@ public void testSankakuIdolRip() throws IOException {
     public void testgetGID() throws IOException {
         URL url = new URL("https://idol.sankakucomplex.com/?tags=meme_%28me%21me%21me%21%29_%28cosplay%29");
         SankakuComplexRipper ripper = new SankakuComplexRipper(url);
-        assertEquals("idol._meme_(me!me!me!)_(cosplay)", ripper.getGID(url));
+        Assertions.assertEquals("idol._meme_(me!me!me!)_(cosplay)", ripper.getGID(url));
     }
 
     @Test
     public void testgetSubDomain() throws IOException {
         URL url = new URL("https://idol.sankakucomplex.com/?tags=meme_%28me%21me%21me%21%29_%28cosplay%29");
         SankakuComplexRipper ripper = new SankakuComplexRipper(url);
-        assertEquals("idol.", ripper.getSubDomain(url));
+        Assertions.assertEquals("idol.", ripper.getSubDomain(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ShesFreakyRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.ShesFreakyRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -21,6 +22,6 @@ public void testShesFreakyRip() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("http://www.shesfreaky.com/gallery/nicee-snow-bunny-579NbPjUcYa.html");
         ShesFreakyRipper ripper = new ShesFreakyRipper(url);
-        assertEquals("nicee-snow-bunny-579NbPjUcYa", ripper.getGID(url));
+        Assertions.assertEquals("nicee-snow-bunny-579NbPjUcYa", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TeenplanetRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TeenplanetRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class TeenplanetRipperTest extends RippersTest {
@@ -13,9 +14,10 @@ public void testTeenplanetRip() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("http://teenplanet.org/galleries/the-perfect-side-of-me-6588.html");
         TeenplanetRipper ripper = new TeenplanetRipper(url);
-        assertEquals("the-perfect-side-of-me-6588", ripper.getGID(url));
+        Assertions.assertEquals("the-perfect-side-of-me-6588", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TheyiffgalleryRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TheyiffgalleryRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class TheyiffgalleryRipperTest extends RippersTest {
@@ -13,9 +14,10 @@ public void testTheyiffgallery() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("https://theyiffgallery.com/index?/category/4303");
         TheyiffgalleryRipper ripper = new TheyiffgalleryRipper(url);
-        assertEquals("4303", ripper.getGID(url));
+        Assertions.assertEquals("4303", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.VidbleRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class VidbleRipperTest extends RippersTest {
@@ -13,10 +14,11 @@ public void testVidbleRip() throws IOException {
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("http://www.vidble.com/album/y1oyh3zd");
         VidbleRipper ripper = new VidbleRipper(url);
-        assertEquals("y1oyh3zd", ripper.getGID(url));
+        Assertions.assertEquals("y1oyh3zd", ripper.getGID(url));
     }
 }
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VideoRippersTest.java
Patch:
@@ -9,6 +9,7 @@
 import com.rarchives.ripme.ripper.rippers.video.PornhubRipper;
 import com.rarchives.ripme.ripper.rippers.video.YuvutuRipper;
 
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
@@ -28,9 +29,9 @@ private void videoTestHelper(VideoRipper ripper) {
             // Video ripper testing is... weird.
             // If the ripper finds the URL to download the video, and it's a test,
             // then the ripper sets the download URL as the ripper's URL.
-            assertFalse("Failed to find download url for " + oldURL, oldURL.equals(ripper.getURL()));
+            Assertions.assertFalse(oldURL.equals(ripper.getURL()), "Failed to find download url for " + oldURL);
         } catch (Exception e) {
-            fail("Error while ripping " + ripper.getURL() + " : " + e);
+            Assertions.fail("Error while ripping " + ripper.getURL() + " : " + e);
             e.printStackTrace();
         } finally {
             deleteDir(ripper.getWorkingDir());

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VkRipperTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.VkRipper;
 import org.json.JSONObject;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class VkRipperTest extends RippersTest {
@@ -35,7 +36,7 @@ public void testFindJSONObjectContainingPhotoID() throws IOException {
         String responseJson =
                 "{\"id\":\"-45984105_457345201\",\"base\":\"https://sun9-37.userapi.com/\",\"tagged\":[],\"likes\":0,\"shares\":0,\"o_src\":\"https://sun9-65.userapi.com/c857520/v857520962/10e24c/DPxygc3XW5E.jpg\",\"o_\":[\"https://sun9-65.userapi.com/c857520/v857520962/10e24c/DPxygc3XW5E\",130,98],\"z_src\":\"https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI.jpg\",\"z_\":[\"https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI\",1280,960],\"w_src\":\"https://sun9-60.userapi.com/c857520/v857520962/10e24b/6ETsA15rAdU.jpg\",\"w_\":[\"https://sun9-60.userapi.com/c857520/v857520962/10e24b/6ETsA15rAdU\",1405,1054]}";
 
-        assertTrue(
+        Assertions.assertTrue(
                 ripper.findJSONObjectContainingPhotoId("-45984105_457345201", new JSONObject(json))
                         .similar(new JSONObject(responseJson)));
     }
@@ -45,7 +46,7 @@ public void testGetBestSourceUrl() throws IOException {
         VkRipper ripper = new VkRipper(new URL("http://vk.com/album45506334_0"));
         String json =
                 "{\"id\":\"-45984105_457345201\",\"base\":\"https://sun9-37.userapi.com/\",\"commcount\":0,\"date\":\"<span class=\\\"rel_date\\\">3 Dec at 1:14 am</span>\",\"tagged\":[],\"attached_tags\":{\"max_tags_per_object\":5},\"o_src\":\"https://sun9-65.userapi.com/c857520/v857520962/10e24c/DPxygc3XW5E.jpg\",\"o_\":[\"https://sun9-65.userapi.com/c857520/v857520962/10e24c/DPxygc3XW5E\",130,98],\"y_src\":\"https://sun9-9.userapi.com/c857520/v857520962/10e249/dUDeuY10s0A.jpg\",\"y_\":[\"https://sun9-9.userapi.com/c857520/v857520962/10e249/dUDeuY10s0A\",807,605],\"z_src\":\"https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI.jpg\",\"z_\":[\"https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI\",1280,960]}";
-        assertEquals("https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI.jpg",
+        Assertions.assertEquals("https://sun9-41.userapi.com/c857520/v857520962/10e24a/EsDDQA36qKI.jpg",
                 ripper.getBestSourceUrl(new JSONObject(json)));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YuvutuRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.YuvutuRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class YuvutuRipperTest extends RippersTest {
@@ -21,6 +22,6 @@ public void testYuvutuAlbum2() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=420333");
         YuvutuRipper ripper = new YuvutuRipper(url);
-        assertEquals("420333", ripper.getGID(url));
+        Assertions.assertEquals("420333", ripper.getGID(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ZizkiRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ZizkiRipper;
+import org.junit.jupiter.api.Assertions;
 import org.junit.jupiter.api.Test;
 
 public class ZizkiRipperTest extends RippersTest {
@@ -15,12 +16,12 @@ public void testRip() throws IOException {
     public void testGetGID() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);
-        assertEquals("dee-chorde", ripper.getGID(url));
+        Assertions.assertEquals("dee-chorde", ripper.getGID(url));
     }
     @Test
     public void testAlbumTitle() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);
-        assertEquals("zizki_Dee Chorde_We Got Spirit", ripper.getAlbumTitle(url));
+        Assertions.assertEquals("zizki_Dee Chorde_We Got Spirit", ripper.getAlbumTitle(url));
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BatoRipperTest.java
Patch:
@@ -6,11 +6,13 @@
 import com.rarchives.ripme.ripper.rippers.BatoRipper;
 
 import org.junit.jupiter.api.Assertions;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class BatoRipperTest extends RippersTest {
 
     @Test
+    @Disabled("cloudlare? gets unavailable in test but works in browser")
     public void testRip() throws IOException {
         BatoRipper ripper = new BatoRipper(new URL("https://bato.to/chapter/1207152"));
         testRipper(ripper);
@@ -24,6 +26,7 @@ public void testGetGID() throws IOException {
     }
 
     @Test
+    @Disabled("cloudlare? gets unavailable in test but works in browser")
     public void testGetAlbumTitle() throws IOException {
         URL url = new URL("https://bato.to/chapter/1207152");
         BatoRipper ripper = new BatoRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,6 +3,7 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
@@ -13,6 +14,7 @@ public void testComicUrl() throws IOException {
         testRipper(ripper);
     }
     @Test
+    @Disabled("no images found error, broken ripper?")
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,10 +4,12 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
     @Test
+    @Disabled("test or ripper broken")
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,15 +4,18 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
     @Test
+    @Disabled("test or ripper broken")
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
     @Test
+    @Disabled("test or ripper broken")
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XhamsterRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.XhamsterRipper;
 import org.jsoup.nodes.Document;
 import org.junit.jupiter.api.Assertions;
+import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 
@@ -36,6 +37,7 @@ public void testXhamsterAlbumDesiDomain() throws IOException {
         testRipper(ripper);
     }
     @Test
+    @Disabled("ripper broken?")
     public void testXhamsterVideo() throws IOException {
         XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/videos/brazzers-busty-big-booty-milf-lisa-ann-fucks-her-masseur-1492828"));
         testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/rippers/XcartxRipper.java
Patch:
@@ -56,7 +56,7 @@ public List<String> getURLsFromPage(Document page) {
         for (Element image : imageElements) {
             String imageUrl = image.attr("data-src");
 
-            imageURLs.add(getDomain() + imageUrl);
+            imageURLs.add("https://" + getDomain() + imageUrl);
         }
         return imageURLs;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XlecxRipper.java
Patch:
@@ -8,7 +8,7 @@
 
 public class XlecxRipper extends XcartxRipper {
 
-    private Pattern p = Pattern.compile("^https?://xlecx.com/([a-zA-Z0-9_\\-]+).html");
+    private Pattern p = Pattern.compile("^https?://xlecx.org/([a-zA-Z0-9_\\-]+).html");
 
     public XlecxRipper(URL url) throws IOException {
         super(url);
@@ -21,7 +21,7 @@ public String getHost() {
 
     @Override
     public String getDomain() {
-        return "xlecx.com";
+        return "xlecx.org";
     }
 
     @Override
@@ -30,7 +30,7 @@ public String getGID(URL url) throws MalformedURLException {
         if (m.matches()) {
             return m.group(1);
         }
-        throw new MalformedURLException("Expected URL format: http://xlecx.com/comic, got: " + url);
+        throw new MalformedURLException("Expected URL format: http://xlecx.org/comic, got: " + url);
 
     }
 }

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -84,7 +84,7 @@ public void run() {
                 logger.info("[!] " + Utils.getLocalizedString("deleting.existing.file") + prettySaveAs);
                 saveAs.delete();
             } else {
-                logger.info("[!] " + Utils.getLocalizedString("skipping") + url + " -- "
+                logger.info("[!] " + Utils.getLocalizedString("skipping") + " " + url + " -- "
                         + Utils.getLocalizedString("file.already.exists") + ": " + prettySaveAs);
                 observer.downloadExists(url, saveAs);
                 return;

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -84,7 +84,7 @@ public void run() {
                 logger.info("[!] " + Utils.getLocalizedString("deleting.existing.file") + prettySaveAs);
                 saveAs.delete();
             } else {
-                logger.info("[!] " + Utils.getLocalizedString("skipping") + url + " -- "
+                logger.info("[!] " + Utils.getLocalizedString("skipping") + " " + url + " -- "
                         + Utils.getLocalizedString("file.already.exists") + ": " + prettySaveAs);
                 observer.downloadExists(url, saveAs);
                 return;

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -25,6 +25,7 @@ public class GfycatRipper extends AbstractHTMLRipper {
     String username = "";
     String cursor = "";
     String count = "30";
+    String REFERRER = "www.reddit.com";
 
 
 
@@ -64,10 +65,10 @@ public boolean isProfile() {
     @Override
     public Document getFirstPage() throws IOException {
         if (!isProfile()) {
-            return Http.url(url).get();
+            return Http.url(url).referrer(REFERRER).get();
         } else {
             username = getGID(url);
-            return Http.url(new URL("https://api.gfycat.com/v1/users/" +  username + "/gfycats")).ignoreContentType().get();
+            return Http.url(new URL("https://api.gfycat.com/v1/users/" +  username + "/gfycats")).referrer((REFERRER)).ignoreContentType().get();
         }
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -81,7 +81,7 @@ public Document getNextPage(Document doc) throws IOException {
     protected List<String> getURLsFromPage(Document page) {
         List<String> pageURLs = new ArrayList<>();
 
-        for (Element thumb : page.select("div.thumb a.img-container")) {
+        for (Element thumb : page.select("div.thumb-container a.img-container")) {
             if (isStopped()) {
                 break;
             }

File: src/main/java/com/rarchives/ripme/ripper/rippers/FreeComicOnlineRipper.java
Patch:
@@ -57,7 +57,7 @@ public Document getNextPage(Document doc) throws IOException {
 	Pattern p = Pattern.compile("https://freecomiconline.me/comic/([a-zA-Z0-9_\\-]+)/([a-zA-Z0-9_\\-]+)/?$");
         Matcher m = p.matcher(nextPage);
 	if(m.matches()){ 
-		nextUrl = m.group(0);
+	    nextUrl = m.group(0);
 	}
 	if(nextUrl.equals("")) throw new IOException("No more pages");
 	sleep(500);

File: src/main/java/com/rarchives/ripme/ripper/rippers/E621Ripper.java
Patch:
@@ -97,9 +97,9 @@ private String getTerm(URL url) throws MalformedURLException {
             gidPatternPool = Pattern.compile(
                     "^https?://(www\\.)?e621\\.net/pool/show/([a-zA-Z0-9$_.+!*'(),%:\\-]+)(\\?.*)?(/.*)?(#.*)?$");
         if (gidPatternNew == null)
-            gidPatternNew = Pattern.compile("^https?://(www\\.)?e621\\.net/posts\\?tags=([\\S]+)");
+            gidPatternNew = Pattern.compile("^https?://(www\\.)?e621\\.net/posts\\?tags=([a-zA-Z0-9$_.+!*'(),%:\\-]+)(\\&[\\S]+)?");
         if (gidPatternPoolNew == null)
-            gidPatternPoolNew = Pattern.compile("^https?://(www\\.)?e621\\.net/pools/([\\d]+)");
+            gidPatternPoolNew = Pattern.compile("^https?://(www\\.)?e621\\.net/pools/([\\d]+)(\\?[\\S]*)?");
 
         Matcher m = gidPattern.matcher(url.toExternalForm());
         if (m.matches()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -81,7 +81,7 @@ public Document getNextPage(Document doc) throws IOException {
     protected List<String> getURLsFromPage(Document page) {
         List<String> pageURLs = new ArrayList<>();
 
-        for (Element thumb : page.select("div.thumb a.img-container")) {
+        for (Element thumb : page.select("div.thumb-container a.img-container")) {
             if (isStopped()) {
                 break;
             }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.91";
+    private static final String DEFAULT_VERSION = "1.7.92";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ArtStationRipper.java
Patch:
@@ -60,7 +60,7 @@ public String getGID(URL url) throws MalformedURLException {
             // URL points to user portfolio, use user's full name as GID
             String userInfoURL = "https://www.artstation.com/users/" + albumURL.getID() + "/quick.json";
             try {
-                // groupData = Http.url(userInfoURL).getJSON();
+//                 groupData = Http.url(userInfoURL).getJSON();
                 groupData = getJson(userInfoURL);
             } catch (IOException e) {
                 throw new MalformedURLException("Couldn't load JSON from " + userInfoURL);
@@ -254,7 +254,7 @@ private ParsedURL parseURL(URL url) {
             con.userAgent("Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0");
             con.header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
             con.header("Accept-Language", "en-US,en;q=0.5");
-            con.header("Accept-Encoding", "gzip, deflate, br");
+//            con.header("Accept-Encoding", "gzip, deflate, br");
             con.header("Upgrade-Insecure-Requests", "1");
             Response res = con.execute();
             int status = res.statusCode();
@@ -309,7 +309,7 @@ private JSONObject getJson(URL url) throws IOException {
                 "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
         con.header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
         con.header("Accept-Language", "en-US,en;q=0.5");
-        con.header("Accept-Encoding", "gzip, deflate, br");
+//        con.header("Accept-Encoding", "gzip, deflate, br");
         con.header("Upgrade-Insecure-Requests", "1");
         Response res = con.execute();
         int status = res.statusCode();

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.90";
+    private static final String DEFAULT_VERSION = "1.7.91";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.89";
+    private static final String DEFAULT_VERSION = "1.7.90";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ripper/rippers/MeituriRipper.java
Patch:
@@ -70,8 +70,8 @@ public List<String> getURLsFromPage(Document doc) {
             }
         }
 
-        // Base URL: https://ii.hywly.com/a/1/albumid/imgnum.jpg
-        String baseURL = "https://ii.hywly.com/a/1/" + albumID + "/";
+        // Base URL: http://ii.hywly.com/a/1/albumid/imgnum.jpg
+        String baseURL = "http://ii.hywly.com/a/1/" + albumID + "/";
 
         // Loop through and add images to the URL list
         for (int i = 1; i <= numOfImages; i++) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/MyreadingmangaRipper.java
Patch:
@@ -50,7 +50,7 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("div.separator > img")) {
+        for (Element el : doc.select("div * img[data-lazy-src]")) {
             String imageSource = el.attr("data-lazy-src");
             result.add(imageSource);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/MeituriRipper.java
Patch:
@@ -70,8 +70,8 @@ public List<String> getURLsFromPage(Document doc) {
             }
         }
 
-        // Base URL: http://ii.hywly.com/a/1/albumid/imgnum.jpg
-        String baseURL = "http://ii.hywly.com/a/1/" + albumID + "/";
+        // Base URL: https://ii.hywly.com/a/1/albumid/imgnum.jpg
+        String baseURL = "https://ii.hywly.com/a/1/" + albumID + "/";
 
         // Loop through and add images to the URL list
         for (int i = 1; i <= numOfImages; i++) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/MeituriRipper.java
Patch:
@@ -70,8 +70,8 @@ public List<String> getURLsFromPage(Document doc) {
             }
         }
 
-        // Base URL: https://ii.hywly.com/a/1/albumid/imgnum.jpg
-        String baseURL = "https://ii.hywly.com/a/1/" + albumID + "/";
+        // Base URL: http://ii.hywly.com/a/1/albumid/imgnum.jpg
+        String baseURL = "http://ii.hywly.com/a/1/" + albumID + "/";
 
         // Loop through and add images to the URL list
         for (int i = 1; i <= numOfImages; i++) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/MyreadingmangaRipper.java
Patch:
@@ -50,7 +50,7 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("div.separator > a > img")) {
+        for (Element el : doc.select("div * img[data-lazy-src]")) {
             String imageSource = el.attr("data-lazy-src");
             result.add(imageSource);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/MyreadingmangaRipper.java
Patch:
@@ -50,7 +50,7 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("div.separator > img")) {
+        for (Element el : doc.select("div.separator > a > img")) {
             String imageSource = el.attr("data-lazy-src");
             result.add(imageSource);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/MeituriRipper.java
Patch:
@@ -70,7 +70,7 @@ public List<String> getURLsFromPage(Document doc) {
             }
         }
 
-        // Base URL: http://ii.hywly.com/a/1/albumid/imgnum.jpg
+        // Base URL: https://ii.hywly.com/a/1/albumid/imgnum.jpg
         String baseURL = "https://ii.hywly.com/a/1/" + albumID + "/";
 
         // Loop through and add images to the URL list

File: src/main/java/com/rarchives/ripme/ripper/rippers/MeituriRipper.java
Patch:
@@ -71,7 +71,7 @@ public List<String> getURLsFromPage(Document doc) {
         }
 
         // Base URL: http://ii.hywly.com/a/1/albumid/imgnum.jpg
-        String baseURL = "http://ii.hywly.com/a/1/" + albumID + "/";
+        String baseURL = "https://ii.hywly.com/a/1/" + albumID + "/";
 
         // Loop through and add images to the URL list
         for (int i = 1; i <= numOfImages; i++) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.88";
+    private static final String DEFAULT_VERSION = "1.7.89";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TwitterRipperTest.java
Patch:
@@ -5,7 +5,6 @@
 
 import com.rarchives.ripme.ripper.rippers.TwitterRipper;
 
-import org.junit.jupiter.api.Disabled;
 import org.junit.jupiter.api.Test;
 
 public class TwitterRipperTest extends RippersTest {
@@ -16,7 +15,6 @@ public void testTwitterUserRip() throws IOException {
     }
 
     @Test
-    @Disabled("https://github.com/RipMeApp/ripme/issues/251")
     public void testTwitterSearchRip() throws IOException {
         TwitterRipper ripper = new TwitterRipper(
                 new URL("https://twitter.com/search?f=tweets&q=from%3Aalinalixxx%20filter%3Aimages&src=typd"));

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.87";
+    private static final String DEFAULT_VERSION = "1.7.88";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.87";
+    private static final String DEFAULT_VERSION = "1.7.88";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ErotivRipper.java
Patch:
@@ -24,7 +24,6 @@ public class ErotivRipper extends AbstractHTMLRipper {
 
     boolean rippingProfile;
 
-
     public ErotivRipper (URL url) throws IOException {
         super(url);
     }
@@ -41,7 +40,7 @@ public String getHost() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://erotiv.io/e/([0-9]*)/?$");
+        Pattern p = Pattern.compile("^https?://(?:www.)?erotiv.io/e/([0-9]*)/?$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -72,7 +71,7 @@ public List<String> getURLsFromPage(Document doc) {
                 Pattern p = Pattern.compile("/uploads/[0-9]*\\.mp4");
                 Matcher m = p.matcher(el.attr("src"));
                 if (m.matches()) {
-                    results.add("https://www.erotiv.io" + el.attr("src"));
+                    results.add("https://erotiv.io" + el.attr("src"));
                 }
 			} 
 

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -146,10 +146,10 @@ private void updateQueue(DefaultListModel<Object> model) {
         if (model.size() > 0) {
             Utils.setConfigList("queue", (Enumeration<Object>) model.elements());
             Utils.saveConfig();
-
-            MainWindow.optionQueue.setText(String.format("%s%s", Utils.getLocalizedString("queue"),
-                    model.size() == 0 ? "" : "(" + model.size() + ")"));
         }
+
+        MainWindow.optionQueue.setText(String.format("%s%s", Utils.getLocalizedString("queue"),
+                model.size() == 0 ? "" : "(" + model.size() + ")"));
     }
 
     private void updateQueue() {

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -146,10 +146,10 @@ private void updateQueue(DefaultListModel<Object> model) {
         if (model.size() > 0) {
             Utils.setConfigList("queue", (Enumeration<Object>) model.elements());
             Utils.saveConfig();
-
-            MainWindow.optionQueue.setText(String.format("%s%s", Utils.getLocalizedString("queue"),
-                    model.size() == 0 ? "" : "(" + model.size() + ")"));
         }
+
+        MainWindow.optionQueue.setText(String.format("%s%s", Utils.getLocalizedString("queue"),
+                model.size() == 0 ? "" : "(" + model.size() + ")"));
     }
 
     private void updateQueue() {

File: src/main/java/com/rarchives/ripme/ripper/rippers/NfsfwRipper.java
Patch:
@@ -13,11 +13,8 @@
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
-import com.rarchives.ripme.ripper.AlbumRipper;
 import com.rarchives.ripme.ripper.DownloadThreadPool;
-import com.rarchives.ripme.ui.RipStatusMessage.STATUS;
 import com.rarchives.ripme.utils.Http;
-import com.rarchives.ripme.utils.Utils;
 
 public class NfsfwRipper extends AbstractHTMLRipper {
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/PornhubRipper.java
Patch:
@@ -14,9 +14,7 @@
 import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
-import com.rarchives.ripme.ripper.AlbumRipper;
 import com.rarchives.ripme.ripper.DownloadThreadPool;
-import com.rarchives.ripme.ui.RipStatusMessage.STATUS;
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/CheveretoRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.CheveretoRipper;
+import org.junit.jupiter.api.Test;
 
 public class CheveretoRipperTest extends RippersTest {
+    @Test
     public void testTagFox() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("http://tag-fox.com/album/Thjb"));
         testRipper(ripper);
     }
-
+    @Test
     public void testSubdirAlbum() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("https://kenzato.uk/booru/album/TnEc"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,15 +3,16 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
-
+    @Test
     public void testComicUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/comic/karma-police");
         ComicextraRipper ripper = new ComicextraRipper(url);
         testRipper(ripper);
     }
-
+    @Test
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
+    @Test
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/E621RipperTest.java
Patch:
@@ -4,18 +4,19 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.E621Ripper;
+import org.junit.jupiter.api.Test;
 
 public class E621RipperTest extends RippersTest {
     public void testRip() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/beach"));
         testRipper(ripper);
     }
-
+    @Test
     public void testFlashOrWebm() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/gif"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGetNextPage() throws IOException {
         E621Ripper nextPageRipper = new E621Ripper(new URL("https://e621.net/post/index/1/cosmicminerals"));
         try {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,14 +6,17 @@
 
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class EhentaiRipperTest extends RippersTest {
+    @Test
     public void testEHentaiAlbum() throws IOException {
         EHentaiRipper ripper = new EHentaiRipper(new URL("https://e-hentai.org/g/1144492/e823bdf9a5/"));
         testRipper(ripper);
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://e-hentai.org/g/1228503/1a2f455f96/");
         EHentaiRipper ripper = new EHentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
+    @Test
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
-    
+    @Test
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -1,6 +1,8 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.GfycatRipper;
+import org.junit.jupiter.api.Test;
+
 import java.io.IOException;
 import java.net.URL;
 
@@ -11,6 +13,7 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
+    @Test
     public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GirlsOfDesireRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.GirlsOfDesireRipper;
+import org.junit.jupiter.api.Test;
 
 public class GirlsOfDesireRipperTest extends RippersTest {
+    @Test
     public void testGirlsofdesireAlbum() throws IOException {
         GirlsOfDesireRipper ripper = new GirlsOfDesireRipper(new URL("http://www.girlsofdesire.org/galleries/krillia/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HbrowseRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HbrowseRipper;
+import org.junit.jupiter.api.Test;
 
 public class HbrowseRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         HbrowseRipper ripper = new HbrowseRipper(new URL("https://www.hbrowse.com/21013/c00001"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Hentai2readRipper;
+import org.junit.jupiter.api.Test;
 
 public class Hentai2readRipperTest extends RippersTest {
+    @Test
     public void testHentai2readAlbum() throws IOException {
         Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaicafeRipperTest.java
Patch:
@@ -4,13 +4,16 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaiCafeRipper;
+import org.junit.jupiter.api.Test;
 
 public class HentaicafeRipperTest extends RippersTest {
+    @Test
     public void testHentaiCafeAlbum() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/kikuta-the-oni-in-the-room/"));
         testRipper(ripper);
     }
     // This album has a line break (<br />) in the url. Test it to make sure ripme can handle these invalid urls
+    @Test
     public void testAlbumWithInvalidChars() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/chobipero-club/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaiimageRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.HentaiimageRipper;
 import com.rarchives.ripme.utils.Utils;
+import org.junit.jupiter.api.Test;
 
 public class HentaiimageRipperTest extends RippersTest {
-
+    @Test
     public void testHentaifoundryRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             HentaiimageRipper ripper = new HentaiimageRipper(new URL("https://hentai-image.com/image/afrobull-gerudo-ongoing-12/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagearnRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagearnRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagearnRipperTest extends RippersTest {
+    @Test
     public void testImagearnRip() throws IOException {
         ImagearnRipper ripper = new ImagearnRipper(new URL("http://imagearn.com//gallery.php?id=578682"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagebamRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagebamRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagebamRipperTest extends RippersTest {
+    @Test
     public void testImagebamRip() throws IOException {
         ImagebamRipper ripper = new ImagebamRipper(new URL("http://www.imagebam.com/gallery/488cc796sllyf7o5srds8kpaz1t4m78i"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import java.util.Map;
 
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagefapRipperTest extends RippersTest {
+    @Test
     public void testImagefapAlbums() throws IOException {
         Map<URL, String> testURLs = new HashMap<>();
 
@@ -24,6 +26,7 @@ public void testImagefapAlbums() throws IOException {
             testRipper(ripper);
         }
     }
+    @Test
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgboxRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImgboxRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImgboxRipperTest extends RippersTest {
+    @Test
     public void testImgboxRip() throws IOException {
         ImgboxRipper ripper = new ImgboxRipper(new URL("https://imgbox.com/g/FJPF7t26FD"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/JagodibujaRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.JagodibujaRipper;
+import org.junit.jupiter.api.Test;
 
 public class JagodibujaRipperTest extends RippersTest {
+    @Test
     public void testJagodibujaRipper() throws IOException {
         // a photo set
         JagodibujaRipper ripper = new JagodibujaRipper(new URL("http://www.jagodibuja.com/comic-in-me/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.jupiter.api.Test;
 
 public class MotherlessRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
+import org.junit.jupiter.api.Test;
 
 public class MulemaxRipperTest extends RippersTest {
-    
+    @Test
     public void testMulemaxVideo() throws IOException {
         MulemaxRipper ripper = new MulemaxRipper(new URL("https://mulemax.com/video/1720/emma-and-her-older-sissy-are-home-for-a-holiday-break"));  //pick any video from the front page
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaigalleryRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MyhentaigalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class MyhentaigalleryRipperTest extends RippersTest {
-
+    @Test
     public void testMyhentaigalleryAlbum() throws IOException {
         MyhentaigalleryRipper ripper = new MyhentaigalleryRipper(
                 new URL("https://myhentaigallery.com/gallery/thumbnails/9201"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewgroundsRipperTest.java
Patch:
@@ -1,12 +1,13 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.NewgroundsRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 
 public class NewgroundsRipperTest extends RippersTest {
-
+    @Test
     public void testNewgroundsRip() throws IOException {
         NewgroundsRipper ripper = new NewgroundsRipper(new URL("https://zone-sama.newgrounds.com/art"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewsfilterRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.NewsfilterRipper;
+import org.junit.jupiter.api.Test;
 
 public class NewsfilterRipperTest extends RippersTest {
-
+    @Test
     public void testNewsfilterRip() throws IOException {
         NewsfilterRipper ripper = new NewsfilterRipper(new URL("http://newsfilter.org/gallery/he-doubted-she-would-fuck-on-cam-happy-to-be-proven-wrong-216799"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NhentaiRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rarchives.ripme.ripper.rippers.NhentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class NhentaiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -19,6 +20,7 @@ public void testGetGID()  throws IOException {
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://nhentai.net/g/233295/");
         NhentaiRipper ripper = new NhentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PahealRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PahealRipper;
+import org.junit.jupiter.api.Test;
 
 public class PahealRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         // a photo set
         PahealRipper ripper = new PahealRipper(new URL("http://rule34.paheal.net/post/list/bimbo/1"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PicstatioRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PicstatioRipper;
+import org.junit.jupiter.api.Test;
 
 public class PicstatioRipperTest extends RippersTest {
 
     public void testRip() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGID() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PorncomixDotOneRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PorncomixDotOneRipper;
+import org.junit.jupiter.api.Test;
 
 public class PorncomixDotOneRipperTest extends RippersTest {
+    @Test
     public void testPorncomixAlbum() throws IOException {
         PorncomixDotOneRipper ripper = new PorncomixDotOneRipper(new URL("https://www.porncomix.one/gallery/blacknwhite-make-america-great-again"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PornhubRipperTest.java
Patch:
@@ -7,8 +7,10 @@
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 public class PornhubRipperTest extends RippersTest {
+    @Test
     public void testPornhubRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             PornhubRipper ripper = new PornhubRipper(new URL("https://www.pornhub.com/album/15680522"));
@@ -25,6 +27,7 @@ public void testGetGID() throws IOException {
     }
 
     // alternate album, with only 2 pages: https://www.pornhub.com/album/4771891
+    @Test
     public void testGetNextPage() throws IOException {
         String baseURL = "https://www.pornhub.com/album/15680522";
         PornhubRipper ripper = new PornhubRipper(new URL(baseURL));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Rule34RipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Rule34Ripper;
+import org.junit.jupiter.api.Test;
 
 public class Rule34RipperTest extends RippersTest {
+    @Test
     public void testShesFreakyRip() throws IOException {
         Rule34Ripper ripper = new Rule34Ripper(new URL("https://rule34.xxx/index.php?page=post&s=list&tags=bimbo"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SinnercomicsRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SinnercomicsRipper;
+import org.junit.jupiter.api.Test;
 
 public class SinnercomicsRipperTest extends RippersTest {
+    @Test
     public void testSinnercomicsAlbum() throws IOException {
         SinnercomicsRipper ripper;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SpankBangRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SpankbangRipper;
+import org.junit.jupiter.api.Test;
 
 public class SpankBangRipperTest extends RippersTest {
-
+    @Test
     public void testSpankBangVideo() throws IOException {
         SpankbangRipper ripper = new SpankbangRipper(new URL("https://spankbang.com/2a7fh/video/mdb901"));  //most popular video of all time on site; should stay up
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TapasticRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TapasticRipper;
+import org.junit.jupiter.api.Test;
 
 public class TapasticRipperTest extends RippersTest {
+    @Test
     public void testTapasticRip() throws IOException {
         TapasticRipper ripper = new TapasticRipper(new URL("https://tapas.io/series/tsiwbakd-comic"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TeenplanetRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TeenplanetRipper;
+import org.junit.jupiter.api.Test;
 
 public class TeenplanetRipperTest extends RippersTest {
+    @Test
     public void testTeenplanetRip() throws IOException {
         TeenplanetRipper ripper = new TeenplanetRipper(new URL("http://teenplanet.org/galleries/the-perfect-side-of-me-6588.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TheyiffgalleryRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TheyiffgalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class TheyiffgalleryRipperTest extends RippersTest {
+    @Test
     public void testTheyiffgallery() throws IOException {
         TheyiffgalleryRipper ripper = new TheyiffgalleryRipper(new URL("https://theyiffgallery.com/index?/category/4303"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TsuminoRipperTest.java
Patch:
@@ -7,14 +7,16 @@
 import com.rarchives.ripme.ripper.rippers.TsuminoRipper;
 import com.rarchives.ripme.utils.RipUtils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 
 public class TsuminoRipperTest extends RippersTest {
+    @Test
     public void testTsuminoRipper() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         testRipper(ripper);
     }
-
+    @Test
     public void testTagBlackList() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         Document doc = ripper.getFirstPage();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.VidbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class VidbleRipperTest extends RippersTest {
+    @Test
     public void testVidbleRip() throws IOException {
         VidbleRipper ripper = new VidbleRipper(new URL("http://www.vidble.com/album/y1oyh3zd"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ViewcomicRipperTest.java
Patch:
@@ -4,8 +4,11 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ViewcomicRipper;
+import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ViewcomicRipperTest extends RippersTest {
+    @Test @Disabled("Ripper broken")
     public void testViewcomicRipper() throws IOException {
         ViewcomicRipper ripper = new ViewcomicRipper(new URL("https://view-comic.com/batman-no-mans-land-vol-1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XvideosRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.XvideosRipper;
 import com.rarchives.ripme.tst.ripper.rippers.RippersTest;
+import org.junit.jupiter.api.Test;
 
 public class XvideosRipperTest extends RippersTest {
-
+    @Test
     public void testXhamsterAlbum1() throws IOException {
         XvideosRipper ripper = new XvideosRipper(new URL("https://www.xvideos.com/video23515878/dee_s_pool_toys"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.YoupornRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 
 public class YoupornRipperTest  extends RippersTest {
+    @Test
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YuvutuRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.YuvutuRipper;
+import org.junit.jupiter.api.Test;
 
 public class YuvutuRipperTest extends RippersTest {
-
+    @Test
     public void testYuvutuAlbum1() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=127013"));
         testRipper(ripper);
     }
-
+    @Test
     public void testYuvutuAlbum2() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=420333"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ZizkiRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ZizkiRipper;
+import org.junit.jupiter.api.Test;
 
 public class ZizkiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -16,7 +17,7 @@ public void testGetGID() throws IOException {
         ZizkiRipper ripper = new ZizkiRipper(url);
         assertEquals("dee-chorde", ripper.getGID(url));
     }
-
+    @Test
     public void testAlbumTitle() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/CheveretoRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.CheveretoRipper;
+import org.junit.jupiter.api.Test;
 
 public class CheveretoRipperTest extends RippersTest {
+    @Test
     public void testTagFox() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("http://tag-fox.com/album/Thjb"));
         testRipper(ripper);
     }
-
+    @Test
     public void testSubdirAlbum() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("https://kenzato.uk/booru/album/TnEc"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,15 +3,16 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
-
+    @Test
     public void testComicUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/comic/karma-police");
         ComicextraRipper ripper = new ComicextraRipper(url);
         testRipper(ripper);
     }
-
+    @Test
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
+    @Test
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/E621RipperTest.java
Patch:
@@ -4,18 +4,19 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.E621Ripper;
+import org.junit.jupiter.api.Test;
 
 public class E621RipperTest extends RippersTest {
     public void testRip() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/beach"));
         testRipper(ripper);
     }
-
+    @Test
     public void testFlashOrWebm() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/gif"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGetNextPage() throws IOException {
         E621Ripper nextPageRipper = new E621Ripper(new URL("https://e621.net/post/index/1/cosmicminerals"));
         try {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,14 +6,17 @@
 
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class EhentaiRipperTest extends RippersTest {
+    @Test
     public void testEHentaiAlbum() throws IOException {
         EHentaiRipper ripper = new EHentaiRipper(new URL("https://e-hentai.org/g/1144492/e823bdf9a5/"));
         testRipper(ripper);
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://e-hentai.org/g/1228503/1a2f455f96/");
         EHentaiRipper ripper = new EHentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
+    @Test
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
-    
+    @Test
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -1,6 +1,8 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.GfycatRipper;
+import org.junit.jupiter.api.Test;
+
 import java.io.IOException;
 import java.net.URL;
 
@@ -11,6 +13,7 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
+    @Test
     public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GirlsOfDesireRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.GirlsOfDesireRipper;
+import org.junit.jupiter.api.Test;
 
 public class GirlsOfDesireRipperTest extends RippersTest {
+    @Test
     public void testGirlsofdesireAlbum() throws IOException {
         GirlsOfDesireRipper ripper = new GirlsOfDesireRipper(new URL("http://www.girlsofdesire.org/galleries/krillia/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HbrowseRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HbrowseRipper;
+import org.junit.jupiter.api.Test;
 
 public class HbrowseRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         HbrowseRipper ripper = new HbrowseRipper(new URL("https://www.hbrowse.com/21013/c00001"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Hentai2readRipper;
+import org.junit.jupiter.api.Test;
 
 public class Hentai2readRipperTest extends RippersTest {
+    @Test
     public void testHentai2readAlbum() throws IOException {
         Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaicafeRipperTest.java
Patch:
@@ -4,13 +4,16 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaiCafeRipper;
+import org.junit.jupiter.api.Test;
 
 public class HentaicafeRipperTest extends RippersTest {
+    @Test
     public void testHentaiCafeAlbum() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/kikuta-the-oni-in-the-room/"));
         testRipper(ripper);
     }
     // This album has a line break (<br />) in the url. Test it to make sure ripme can handle these invalid urls
+    @Test
     public void testAlbumWithInvalidChars() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/chobipero-club/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaiimageRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.HentaiimageRipper;
 import com.rarchives.ripme.utils.Utils;
+import org.junit.jupiter.api.Test;
 
 public class HentaiimageRipperTest extends RippersTest {
-
+    @Test
     public void testHentaifoundryRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             HentaiimageRipper ripper = new HentaiimageRipper(new URL("https://hentai-image.com/image/afrobull-gerudo-ongoing-12/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagearnRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagearnRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagearnRipperTest extends RippersTest {
+    @Test
     public void testImagearnRip() throws IOException {
         ImagearnRipper ripper = new ImagearnRipper(new URL("http://imagearn.com//gallery.php?id=578682"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagebamRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagebamRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagebamRipperTest extends RippersTest {
+    @Test
     public void testImagebamRip() throws IOException {
         ImagebamRipper ripper = new ImagebamRipper(new URL("http://www.imagebam.com/gallery/488cc796sllyf7o5srds8kpaz1t4m78i"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import java.util.Map;
 
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagefapRipperTest extends RippersTest {
+    @Test
     public void testImagefapAlbums() throws IOException {
         Map<URL, String> testURLs = new HashMap<>();
 
@@ -24,6 +26,7 @@ public void testImagefapAlbums() throws IOException {
             testRipper(ripper);
         }
     }
+    @Test
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgboxRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImgboxRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImgboxRipperTest extends RippersTest {
+    @Test
     public void testImgboxRip() throws IOException {
         ImgboxRipper ripper = new ImgboxRipper(new URL("https://imgbox.com/g/FJPF7t26FD"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/JagodibujaRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.JagodibujaRipper;
+import org.junit.jupiter.api.Test;
 
 public class JagodibujaRipperTest extends RippersTest {
+    @Test
     public void testJagodibujaRipper() throws IOException {
         // a photo set
         JagodibujaRipper ripper = new JagodibujaRipper(new URL("http://www.jagodibuja.com/comic-in-me/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.jupiter.api.Test;
 
 public class MotherlessRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
+import org.junit.jupiter.api.Test;
 
 public class MulemaxRipperTest extends RippersTest {
-    
+    @Test
     public void testMulemaxVideo() throws IOException {
         MulemaxRipper ripper = new MulemaxRipper(new URL("https://mulemax.com/video/1720/emma-and-her-older-sissy-are-home-for-a-holiday-break"));  //pick any video from the front page
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaigalleryRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MyhentaigalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class MyhentaigalleryRipperTest extends RippersTest {
-
+    @Test
     public void testMyhentaigalleryAlbum() throws IOException {
         MyhentaigalleryRipper ripper = new MyhentaigalleryRipper(
                 new URL("https://myhentaigallery.com/gallery/thumbnails/9201"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewgroundsRipperTest.java
Patch:
@@ -1,12 +1,13 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.NewgroundsRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 
 public class NewgroundsRipperTest extends RippersTest {
-
+    @Test
     public void testNewgroundsRip() throws IOException {
         NewgroundsRipper ripper = new NewgroundsRipper(new URL("https://zone-sama.newgrounds.com/art"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewsfilterRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.NewsfilterRipper;
+import org.junit.jupiter.api.Test;
 
 public class NewsfilterRipperTest extends RippersTest {
-
+    @Test
     public void testNewsfilterRip() throws IOException {
         NewsfilterRipper ripper = new NewsfilterRipper(new URL("http://newsfilter.org/gallery/he-doubted-she-would-fuck-on-cam-happy-to-be-proven-wrong-216799"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NhentaiRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rarchives.ripme.ripper.rippers.NhentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class NhentaiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -19,6 +20,7 @@ public void testGetGID()  throws IOException {
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://nhentai.net/g/233295/");
         NhentaiRipper ripper = new NhentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PahealRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PahealRipper;
+import org.junit.jupiter.api.Test;
 
 public class PahealRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         // a photo set
         PahealRipper ripper = new PahealRipper(new URL("http://rule34.paheal.net/post/list/bimbo/1"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PicstatioRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PicstatioRipper;
+import org.junit.jupiter.api.Test;
 
 public class PicstatioRipperTest extends RippersTest {
 
     public void testRip() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGID() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PorncomixDotOneRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PorncomixDotOneRipper;
+import org.junit.jupiter.api.Test;
 
 public class PorncomixDotOneRipperTest extends RippersTest {
+    @Test
     public void testPorncomixAlbum() throws IOException {
         PorncomixDotOneRipper ripper = new PorncomixDotOneRipper(new URL("https://www.porncomix.one/gallery/blacknwhite-make-america-great-again"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PornhubRipperTest.java
Patch:
@@ -7,8 +7,10 @@
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 public class PornhubRipperTest extends RippersTest {
+    @Test
     public void testPornhubRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             PornhubRipper ripper = new PornhubRipper(new URL("https://www.pornhub.com/album/15680522"));
@@ -25,6 +27,7 @@ public void testGetGID() throws IOException {
     }
 
     // alternate album, with only 2 pages: https://www.pornhub.com/album/4771891
+    @Test
     public void testGetNextPage() throws IOException {
         String baseURL = "https://www.pornhub.com/album/15680522";
         PornhubRipper ripper = new PornhubRipper(new URL(baseURL));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Rule34RipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Rule34Ripper;
+import org.junit.jupiter.api.Test;
 
 public class Rule34RipperTest extends RippersTest {
+    @Test
     public void testShesFreakyRip() throws IOException {
         Rule34Ripper ripper = new Rule34Ripper(new URL("https://rule34.xxx/index.php?page=post&s=list&tags=bimbo"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SinnercomicsRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SinnercomicsRipper;
+import org.junit.jupiter.api.Test;
 
 public class SinnercomicsRipperTest extends RippersTest {
+    @Test
     public void testSinnercomicsAlbum() throws IOException {
         SinnercomicsRipper ripper;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SpankBangRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SpankbangRipper;
+import org.junit.jupiter.api.Test;
 
 public class SpankBangRipperTest extends RippersTest {
-
+    @Test
     public void testSpankBangVideo() throws IOException {
         SpankbangRipper ripper = new SpankbangRipper(new URL("https://spankbang.com/2a7fh/video/mdb901"));  //most popular video of all time on site; should stay up
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TapasticRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TapasticRipper;
+import org.junit.jupiter.api.Test;
 
 public class TapasticRipperTest extends RippersTest {
+    @Test
     public void testTapasticRip() throws IOException {
         TapasticRipper ripper = new TapasticRipper(new URL("https://tapas.io/series/tsiwbakd-comic"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TeenplanetRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TeenplanetRipper;
+import org.junit.jupiter.api.Test;
 
 public class TeenplanetRipperTest extends RippersTest {
+    @Test
     public void testTeenplanetRip() throws IOException {
         TeenplanetRipper ripper = new TeenplanetRipper(new URL("http://teenplanet.org/galleries/the-perfect-side-of-me-6588.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TheyiffgalleryRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TheyiffgalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class TheyiffgalleryRipperTest extends RippersTest {
+    @Test
     public void testTheyiffgallery() throws IOException {
         TheyiffgalleryRipper ripper = new TheyiffgalleryRipper(new URL("https://theyiffgallery.com/index?/category/4303"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TsuminoRipperTest.java
Patch:
@@ -7,14 +7,16 @@
 import com.rarchives.ripme.ripper.rippers.TsuminoRipper;
 import com.rarchives.ripme.utils.RipUtils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 
 public class TsuminoRipperTest extends RippersTest {
+    @Test
     public void testTsuminoRipper() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         testRipper(ripper);
     }
-
+    @Test
     public void testTagBlackList() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         Document doc = ripper.getFirstPage();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.VidbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class VidbleRipperTest extends RippersTest {
+    @Test
     public void testVidbleRip() throws IOException {
         VidbleRipper ripper = new VidbleRipper(new URL("http://www.vidble.com/album/y1oyh3zd"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ViewcomicRipperTest.java
Patch:
@@ -4,8 +4,11 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ViewcomicRipper;
+import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ViewcomicRipperTest extends RippersTest {
+    @Test @Disabled("Ripper broken")
     public void testViewcomicRipper() throws IOException {
         ViewcomicRipper ripper = new ViewcomicRipper(new URL("https://view-comic.com/batman-no-mans-land-vol-1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XvideosRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.XvideosRipper;
 import com.rarchives.ripme.tst.ripper.rippers.RippersTest;
+import org.junit.jupiter.api.Test;
 
 public class XvideosRipperTest extends RippersTest {
-
+    @Test
     public void testXhamsterAlbum1() throws IOException {
         XvideosRipper ripper = new XvideosRipper(new URL("https://www.xvideos.com/video23515878/dee_s_pool_toys"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.YoupornRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 
 public class YoupornRipperTest  extends RippersTest {
+    @Test
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YuvutuRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.YuvutuRipper;
+import org.junit.jupiter.api.Test;
 
 public class YuvutuRipperTest extends RippersTest {
-
+    @Test
     public void testYuvutuAlbum1() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=127013"));
         testRipper(ripper);
     }
-
+    @Test
     public void testYuvutuAlbum2() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=420333"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ZizkiRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ZizkiRipper;
+import org.junit.jupiter.api.Test;
 
 public class ZizkiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -16,7 +17,7 @@ public void testGetGID() throws IOException {
         ZizkiRipper ripper = new ZizkiRipper(url);
         assertEquals("dee-chorde", ripper.getGID(url));
     }
-
+    @Test
     public void testAlbumTitle() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/CheveretoRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.CheveretoRipper;
+import org.junit.jupiter.api.Test;
 
 public class CheveretoRipperTest extends RippersTest {
+    @Test
     public void testTagFox() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("http://tag-fox.com/album/Thjb"));
         testRipper(ripper);
     }
-
+    @Test
     public void testSubdirAlbum() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("https://kenzato.uk/booru/album/TnEc"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,15 +3,16 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
-
+    @Test
     public void testComicUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/comic/karma-police");
         ComicextraRipper ripper = new ComicextraRipper(url);
         testRipper(ripper);
     }
-
+    @Test
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
+    @Test
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/E621RipperTest.java
Patch:
@@ -4,18 +4,19 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.E621Ripper;
+import org.junit.jupiter.api.Test;
 
 public class E621RipperTest extends RippersTest {
     public void testRip() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/beach"));
         testRipper(ripper);
     }
-
+    @Test
     public void testFlashOrWebm() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/gif"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGetNextPage() throws IOException {
         E621Ripper nextPageRipper = new E621Ripper(new URL("https://e621.net/post/index/1/cosmicminerals"));
         try {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,14 +6,17 @@
 
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class EhentaiRipperTest extends RippersTest {
+    @Test
     public void testEHentaiAlbum() throws IOException {
         EHentaiRipper ripper = new EHentaiRipper(new URL("https://e-hentai.org/g/1144492/e823bdf9a5/"));
         testRipper(ripper);
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://e-hentai.org/g/1228503/1a2f455f96/");
         EHentaiRipper ripper = new EHentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
+    @Test
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
-    
+    @Test
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -1,6 +1,8 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.GfycatRipper;
+import org.junit.jupiter.api.Test;
+
 import java.io.IOException;
 import java.net.URL;
 
@@ -11,6 +13,7 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
+    @Test
     public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GirlsOfDesireRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.GirlsOfDesireRipper;
+import org.junit.jupiter.api.Test;
 
 public class GirlsOfDesireRipperTest extends RippersTest {
+    @Test
     public void testGirlsofdesireAlbum() throws IOException {
         GirlsOfDesireRipper ripper = new GirlsOfDesireRipper(new URL("http://www.girlsofdesire.org/galleries/krillia/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HbrowseRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HbrowseRipper;
+import org.junit.jupiter.api.Test;
 
 public class HbrowseRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         HbrowseRipper ripper = new HbrowseRipper(new URL("https://www.hbrowse.com/21013/c00001"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Hentai2readRipper;
+import org.junit.jupiter.api.Test;
 
 public class Hentai2readRipperTest extends RippersTest {
+    @Test
     public void testHentai2readAlbum() throws IOException {
         Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaicafeRipperTest.java
Patch:
@@ -4,13 +4,16 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaiCafeRipper;
+import org.junit.jupiter.api.Test;
 
 public class HentaicafeRipperTest extends RippersTest {
+    @Test
     public void testHentaiCafeAlbum() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/kikuta-the-oni-in-the-room/"));
         testRipper(ripper);
     }
     // This album has a line break (<br />) in the url. Test it to make sure ripme can handle these invalid urls
+    @Test
     public void testAlbumWithInvalidChars() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/chobipero-club/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaiimageRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.HentaiimageRipper;
 import com.rarchives.ripme.utils.Utils;
+import org.junit.jupiter.api.Test;
 
 public class HentaiimageRipperTest extends RippersTest {
-
+    @Test
     public void testHentaifoundryRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             HentaiimageRipper ripper = new HentaiimageRipper(new URL("https://hentai-image.com/image/afrobull-gerudo-ongoing-12/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagearnRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagearnRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagearnRipperTest extends RippersTest {
+    @Test
     public void testImagearnRip() throws IOException {
         ImagearnRipper ripper = new ImagearnRipper(new URL("http://imagearn.com//gallery.php?id=578682"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagebamRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagebamRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagebamRipperTest extends RippersTest {
+    @Test
     public void testImagebamRip() throws IOException {
         ImagebamRipper ripper = new ImagebamRipper(new URL("http://www.imagebam.com/gallery/488cc796sllyf7o5srds8kpaz1t4m78i"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import java.util.Map;
 
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagefapRipperTest extends RippersTest {
+    @Test
     public void testImagefapAlbums() throws IOException {
         Map<URL, String> testURLs = new HashMap<>();
 
@@ -24,6 +26,7 @@ public void testImagefapAlbums() throws IOException {
             testRipper(ripper);
         }
     }
+    @Test
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgboxRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImgboxRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImgboxRipperTest extends RippersTest {
+    @Test
     public void testImgboxRip() throws IOException {
         ImgboxRipper ripper = new ImgboxRipper(new URL("https://imgbox.com/g/FJPF7t26FD"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/JagodibujaRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.JagodibujaRipper;
+import org.junit.jupiter.api.Test;
 
 public class JagodibujaRipperTest extends RippersTest {
+    @Test
     public void testJagodibujaRipper() throws IOException {
         // a photo set
         JagodibujaRipper ripper = new JagodibujaRipper(new URL("http://www.jagodibuja.com/comic-in-me/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.jupiter.api.Test;
 
 public class MotherlessRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
+import org.junit.jupiter.api.Test;
 
 public class MulemaxRipperTest extends RippersTest {
-    
+    @Test
     public void testMulemaxVideo() throws IOException {
         MulemaxRipper ripper = new MulemaxRipper(new URL("https://mulemax.com/video/1720/emma-and-her-older-sissy-are-home-for-a-holiday-break"));  //pick any video from the front page
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaigalleryRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MyhentaigalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class MyhentaigalleryRipperTest extends RippersTest {
-
+    @Test
     public void testMyhentaigalleryAlbum() throws IOException {
         MyhentaigalleryRipper ripper = new MyhentaigalleryRipper(
                 new URL("https://myhentaigallery.com/gallery/thumbnails/9201"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewgroundsRipperTest.java
Patch:
@@ -1,12 +1,13 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.NewgroundsRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 
 public class NewgroundsRipperTest extends RippersTest {
-
+    @Test
     public void testNewgroundsRip() throws IOException {
         NewgroundsRipper ripper = new NewgroundsRipper(new URL("https://zone-sama.newgrounds.com/art"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewsfilterRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.NewsfilterRipper;
+import org.junit.jupiter.api.Test;
 
 public class NewsfilterRipperTest extends RippersTest {
-
+    @Test
     public void testNewsfilterRip() throws IOException {
         NewsfilterRipper ripper = new NewsfilterRipper(new URL("http://newsfilter.org/gallery/he-doubted-she-would-fuck-on-cam-happy-to-be-proven-wrong-216799"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NhentaiRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rarchives.ripme.ripper.rippers.NhentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class NhentaiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -19,6 +20,7 @@ public void testGetGID()  throws IOException {
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://nhentai.net/g/233295/");
         NhentaiRipper ripper = new NhentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PahealRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PahealRipper;
+import org.junit.jupiter.api.Test;
 
 public class PahealRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         // a photo set
         PahealRipper ripper = new PahealRipper(new URL("http://rule34.paheal.net/post/list/bimbo/1"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PicstatioRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PicstatioRipper;
+import org.junit.jupiter.api.Test;
 
 public class PicstatioRipperTest extends RippersTest {
 
     public void testRip() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGID() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PorncomixDotOneRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PorncomixDotOneRipper;
+import org.junit.jupiter.api.Test;
 
 public class PorncomixDotOneRipperTest extends RippersTest {
+    @Test
     public void testPorncomixAlbum() throws IOException {
         PorncomixDotOneRipper ripper = new PorncomixDotOneRipper(new URL("https://www.porncomix.one/gallery/blacknwhite-make-america-great-again"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PornhubRipperTest.java
Patch:
@@ -7,8 +7,10 @@
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 public class PornhubRipperTest extends RippersTest {
+    @Test
     public void testPornhubRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             PornhubRipper ripper = new PornhubRipper(new URL("https://www.pornhub.com/album/15680522"));
@@ -25,6 +27,7 @@ public void testGetGID() throws IOException {
     }
 
     // alternate album, with only 2 pages: https://www.pornhub.com/album/4771891
+    @Test
     public void testGetNextPage() throws IOException {
         String baseURL = "https://www.pornhub.com/album/15680522";
         PornhubRipper ripper = new PornhubRipper(new URL(baseURL));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Rule34RipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Rule34Ripper;
+import org.junit.jupiter.api.Test;
 
 public class Rule34RipperTest extends RippersTest {
+    @Test
     public void testShesFreakyRip() throws IOException {
         Rule34Ripper ripper = new Rule34Ripper(new URL("https://rule34.xxx/index.php?page=post&s=list&tags=bimbo"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SinnercomicsRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SinnercomicsRipper;
+import org.junit.jupiter.api.Test;
 
 public class SinnercomicsRipperTest extends RippersTest {
+    @Test
     public void testSinnercomicsAlbum() throws IOException {
         SinnercomicsRipper ripper;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SpankBangRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SpankbangRipper;
+import org.junit.jupiter.api.Test;
 
 public class SpankBangRipperTest extends RippersTest {
-
+    @Test
     public void testSpankBangVideo() throws IOException {
         SpankbangRipper ripper = new SpankbangRipper(new URL("https://spankbang.com/2a7fh/video/mdb901"));  //most popular video of all time on site; should stay up
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TapasticRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TapasticRipper;
+import org.junit.jupiter.api.Test;
 
 public class TapasticRipperTest extends RippersTest {
+    @Test
     public void testTapasticRip() throws IOException {
         TapasticRipper ripper = new TapasticRipper(new URL("https://tapas.io/series/tsiwbakd-comic"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TeenplanetRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TeenplanetRipper;
+import org.junit.jupiter.api.Test;
 
 public class TeenplanetRipperTest extends RippersTest {
+    @Test
     public void testTeenplanetRip() throws IOException {
         TeenplanetRipper ripper = new TeenplanetRipper(new URL("http://teenplanet.org/galleries/the-perfect-side-of-me-6588.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TheyiffgalleryRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TheyiffgalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class TheyiffgalleryRipperTest extends RippersTest {
+    @Test
     public void testTheyiffgallery() throws IOException {
         TheyiffgalleryRipper ripper = new TheyiffgalleryRipper(new URL("https://theyiffgallery.com/index?/category/4303"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TsuminoRipperTest.java
Patch:
@@ -7,14 +7,16 @@
 import com.rarchives.ripme.ripper.rippers.TsuminoRipper;
 import com.rarchives.ripme.utils.RipUtils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 
 public class TsuminoRipperTest extends RippersTest {
+    @Test
     public void testTsuminoRipper() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         testRipper(ripper);
     }
-
+    @Test
     public void testTagBlackList() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         Document doc = ripper.getFirstPage();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.VidbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class VidbleRipperTest extends RippersTest {
+    @Test
     public void testVidbleRip() throws IOException {
         VidbleRipper ripper = new VidbleRipper(new URL("http://www.vidble.com/album/y1oyh3zd"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ViewcomicRipperTest.java
Patch:
@@ -4,8 +4,11 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ViewcomicRipper;
+import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ViewcomicRipperTest extends RippersTest {
+    @Test @Disabled("Ripper broken")
     public void testViewcomicRipper() throws IOException {
         ViewcomicRipper ripper = new ViewcomicRipper(new URL("https://view-comic.com/batman-no-mans-land-vol-1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XvideosRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.XvideosRipper;
 import com.rarchives.ripme.tst.ripper.rippers.RippersTest;
+import org.junit.jupiter.api.Test;
 
 public class XvideosRipperTest extends RippersTest {
-
+    @Test
     public void testXhamsterAlbum1() throws IOException {
         XvideosRipper ripper = new XvideosRipper(new URL("https://www.xvideos.com/video23515878/dee_s_pool_toys"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.YoupornRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 
 public class YoupornRipperTest  extends RippersTest {
+    @Test
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YuvutuRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.YuvutuRipper;
+import org.junit.jupiter.api.Test;
 
 public class YuvutuRipperTest extends RippersTest {
-
+    @Test
     public void testYuvutuAlbum1() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=127013"));
         testRipper(ripper);
     }
-
+    @Test
     public void testYuvutuAlbum2() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=420333"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ZizkiRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ZizkiRipper;
+import org.junit.jupiter.api.Test;
 
 public class ZizkiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -16,7 +17,7 @@ public void testGetGID() throws IOException {
         ZizkiRipper ripper = new ZizkiRipper(url);
         assertEquals("dee-chorde", ripper.getGID(url));
     }
-
+    @Test
     public void testAlbumTitle() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/CheveretoRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.CheveretoRipper;
+import org.junit.jupiter.api.Test;
 
 public class CheveretoRipperTest extends RippersTest {
+    @Test
     public void testTagFox() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("http://tag-fox.com/album/Thjb"));
         testRipper(ripper);
     }
-
+    @Test
     public void testSubdirAlbum() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("https://kenzato.uk/booru/album/TnEc"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,15 +3,16 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
-
+    @Test
     public void testComicUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/comic/karma-police");
         ComicextraRipper ripper = new ComicextraRipper(url);
         testRipper(ripper);
     }
-
+    @Test
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
+    @Test
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/E621RipperTest.java
Patch:
@@ -4,18 +4,19 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.E621Ripper;
+import org.junit.jupiter.api.Test;
 
 public class E621RipperTest extends RippersTest {
     public void testRip() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/beach"));
         testRipper(ripper);
     }
-
+    @Test
     public void testFlashOrWebm() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/gif"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGetNextPage() throws IOException {
         E621Ripper nextPageRipper = new E621Ripper(new URL("https://e621.net/post/index/1/cosmicminerals"));
         try {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,14 +6,17 @@
 
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class EhentaiRipperTest extends RippersTest {
+    @Test
     public void testEHentaiAlbum() throws IOException {
         EHentaiRipper ripper = new EHentaiRipper(new URL("https://e-hentai.org/g/1144492/e823bdf9a5/"));
         testRipper(ripper);
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://e-hentai.org/g/1228503/1a2f455f96/");
         EHentaiRipper ripper = new EHentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
+    @Test
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
-    
+    @Test
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -1,6 +1,8 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.GfycatRipper;
+import org.junit.jupiter.api.Test;
+
 import java.io.IOException;
 import java.net.URL;
 
@@ -11,6 +13,7 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
+    @Test
     public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GirlsOfDesireRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.GirlsOfDesireRipper;
+import org.junit.jupiter.api.Test;
 
 public class GirlsOfDesireRipperTest extends RippersTest {
+    @Test
     public void testGirlsofdesireAlbum() throws IOException {
         GirlsOfDesireRipper ripper = new GirlsOfDesireRipper(new URL("http://www.girlsofdesire.org/galleries/krillia/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HbrowseRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HbrowseRipper;
+import org.junit.jupiter.api.Test;
 
 public class HbrowseRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         HbrowseRipper ripper = new HbrowseRipper(new URL("https://www.hbrowse.com/21013/c00001"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Hentai2readRipper;
+import org.junit.jupiter.api.Test;
 
 public class Hentai2readRipperTest extends RippersTest {
+    @Test
     public void testHentai2readAlbum() throws IOException {
         Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaicafeRipperTest.java
Patch:
@@ -4,13 +4,16 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaiCafeRipper;
+import org.junit.jupiter.api.Test;
 
 public class HentaicafeRipperTest extends RippersTest {
+    @Test
     public void testHentaiCafeAlbum() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/kikuta-the-oni-in-the-room/"));
         testRipper(ripper);
     }
     // This album has a line break (<br />) in the url. Test it to make sure ripme can handle these invalid urls
+    @Test
     public void testAlbumWithInvalidChars() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/chobipero-club/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaiimageRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.HentaiimageRipper;
 import com.rarchives.ripme.utils.Utils;
+import org.junit.jupiter.api.Test;
 
 public class HentaiimageRipperTest extends RippersTest {
-
+    @Test
     public void testHentaifoundryRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             HentaiimageRipper ripper = new HentaiimageRipper(new URL("https://hentai-image.com/image/afrobull-gerudo-ongoing-12/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagearnRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagearnRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagearnRipperTest extends RippersTest {
+    @Test
     public void testImagearnRip() throws IOException {
         ImagearnRipper ripper = new ImagearnRipper(new URL("http://imagearn.com//gallery.php?id=578682"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagebamRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagebamRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagebamRipperTest extends RippersTest {
+    @Test
     public void testImagebamRip() throws IOException {
         ImagebamRipper ripper = new ImagebamRipper(new URL("http://www.imagebam.com/gallery/488cc796sllyf7o5srds8kpaz1t4m78i"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import java.util.Map;
 
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagefapRipperTest extends RippersTest {
+    @Test
     public void testImagefapAlbums() throws IOException {
         Map<URL, String> testURLs = new HashMap<>();
 
@@ -24,6 +26,7 @@ public void testImagefapAlbums() throws IOException {
             testRipper(ripper);
         }
     }
+    @Test
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgboxRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImgboxRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImgboxRipperTest extends RippersTest {
+    @Test
     public void testImgboxRip() throws IOException {
         ImgboxRipper ripper = new ImgboxRipper(new URL("https://imgbox.com/g/FJPF7t26FD"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/JagodibujaRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.JagodibujaRipper;
+import org.junit.jupiter.api.Test;
 
 public class JagodibujaRipperTest extends RippersTest {
+    @Test
     public void testJagodibujaRipper() throws IOException {
         // a photo set
         JagodibujaRipper ripper = new JagodibujaRipper(new URL("http://www.jagodibuja.com/comic-in-me/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.jupiter.api.Test;
 
 public class MotherlessRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
+import org.junit.jupiter.api.Test;
 
 public class MulemaxRipperTest extends RippersTest {
-    
+    @Test
     public void testMulemaxVideo() throws IOException {
         MulemaxRipper ripper = new MulemaxRipper(new URL("https://mulemax.com/video/1720/emma-and-her-older-sissy-are-home-for-a-holiday-break"));  //pick any video from the front page
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaigalleryRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MyhentaigalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class MyhentaigalleryRipperTest extends RippersTest {
-
+    @Test
     public void testMyhentaigalleryAlbum() throws IOException {
         MyhentaigalleryRipper ripper = new MyhentaigalleryRipper(
                 new URL("https://myhentaigallery.com/gallery/thumbnails/9201"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewgroundsRipperTest.java
Patch:
@@ -1,12 +1,13 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.NewgroundsRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 
 public class NewgroundsRipperTest extends RippersTest {
-
+    @Test
     public void testNewgroundsRip() throws IOException {
         NewgroundsRipper ripper = new NewgroundsRipper(new URL("https://zone-sama.newgrounds.com/art"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewsfilterRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.NewsfilterRipper;
+import org.junit.jupiter.api.Test;
 
 public class NewsfilterRipperTest extends RippersTest {
-
+    @Test
     public void testNewsfilterRip() throws IOException {
         NewsfilterRipper ripper = new NewsfilterRipper(new URL("http://newsfilter.org/gallery/he-doubted-she-would-fuck-on-cam-happy-to-be-proven-wrong-216799"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NhentaiRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rarchives.ripme.ripper.rippers.NhentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class NhentaiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -19,6 +20,7 @@ public void testGetGID()  throws IOException {
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://nhentai.net/g/233295/");
         NhentaiRipper ripper = new NhentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PahealRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PahealRipper;
+import org.junit.jupiter.api.Test;
 
 public class PahealRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         // a photo set
         PahealRipper ripper = new PahealRipper(new URL("http://rule34.paheal.net/post/list/bimbo/1"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PicstatioRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PicstatioRipper;
+import org.junit.jupiter.api.Test;
 
 public class PicstatioRipperTest extends RippersTest {
 
     public void testRip() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGID() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PorncomixDotOneRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PorncomixDotOneRipper;
+import org.junit.jupiter.api.Test;
 
 public class PorncomixDotOneRipperTest extends RippersTest {
+    @Test
     public void testPorncomixAlbum() throws IOException {
         PorncomixDotOneRipper ripper = new PorncomixDotOneRipper(new URL("https://www.porncomix.one/gallery/blacknwhite-make-america-great-again"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PornhubRipperTest.java
Patch:
@@ -7,8 +7,10 @@
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 public class PornhubRipperTest extends RippersTest {
+    @Test
     public void testPornhubRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             PornhubRipper ripper = new PornhubRipper(new URL("https://www.pornhub.com/album/15680522"));
@@ -25,6 +27,7 @@ public void testGetGID() throws IOException {
     }
 
     // alternate album, with only 2 pages: https://www.pornhub.com/album/4771891
+    @Test
     public void testGetNextPage() throws IOException {
         String baseURL = "https://www.pornhub.com/album/15680522";
         PornhubRipper ripper = new PornhubRipper(new URL(baseURL));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Rule34RipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Rule34Ripper;
+import org.junit.jupiter.api.Test;
 
 public class Rule34RipperTest extends RippersTest {
+    @Test
     public void testShesFreakyRip() throws IOException {
         Rule34Ripper ripper = new Rule34Ripper(new URL("https://rule34.xxx/index.php?page=post&s=list&tags=bimbo"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SinnercomicsRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SinnercomicsRipper;
+import org.junit.jupiter.api.Test;
 
 public class SinnercomicsRipperTest extends RippersTest {
+    @Test
     public void testSinnercomicsAlbum() throws IOException {
         SinnercomicsRipper ripper;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SpankBangRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SpankbangRipper;
+import org.junit.jupiter.api.Test;
 
 public class SpankBangRipperTest extends RippersTest {
-
+    @Test
     public void testSpankBangVideo() throws IOException {
         SpankbangRipper ripper = new SpankbangRipper(new URL("https://spankbang.com/2a7fh/video/mdb901"));  //most popular video of all time on site; should stay up
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TapasticRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TapasticRipper;
+import org.junit.jupiter.api.Test;
 
 public class TapasticRipperTest extends RippersTest {
+    @Test
     public void testTapasticRip() throws IOException {
         TapasticRipper ripper = new TapasticRipper(new URL("https://tapas.io/series/tsiwbakd-comic"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TeenplanetRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TeenplanetRipper;
+import org.junit.jupiter.api.Test;
 
 public class TeenplanetRipperTest extends RippersTest {
+    @Test
     public void testTeenplanetRip() throws IOException {
         TeenplanetRipper ripper = new TeenplanetRipper(new URL("http://teenplanet.org/galleries/the-perfect-side-of-me-6588.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TheyiffgalleryRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TheyiffgalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class TheyiffgalleryRipperTest extends RippersTest {
+    @Test
     public void testTheyiffgallery() throws IOException {
         TheyiffgalleryRipper ripper = new TheyiffgalleryRipper(new URL("https://theyiffgallery.com/index?/category/4303"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TsuminoRipperTest.java
Patch:
@@ -7,14 +7,16 @@
 import com.rarchives.ripme.ripper.rippers.TsuminoRipper;
 import com.rarchives.ripme.utils.RipUtils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 
 public class TsuminoRipperTest extends RippersTest {
+    @Test
     public void testTsuminoRipper() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         testRipper(ripper);
     }
-
+    @Test
     public void testTagBlackList() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         Document doc = ripper.getFirstPage();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.VidbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class VidbleRipperTest extends RippersTest {
+    @Test
     public void testVidbleRip() throws IOException {
         VidbleRipper ripper = new VidbleRipper(new URL("http://www.vidble.com/album/y1oyh3zd"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ViewcomicRipperTest.java
Patch:
@@ -4,8 +4,11 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ViewcomicRipper;
+import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ViewcomicRipperTest extends RippersTest {
+    @Test @Disabled("Ripper broken")
     public void testViewcomicRipper() throws IOException {
         ViewcomicRipper ripper = new ViewcomicRipper(new URL("https://view-comic.com/batman-no-mans-land-vol-1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XvideosRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.XvideosRipper;
 import com.rarchives.ripme.tst.ripper.rippers.RippersTest;
+import org.junit.jupiter.api.Test;
 
 public class XvideosRipperTest extends RippersTest {
-
+    @Test
     public void testXhamsterAlbum1() throws IOException {
         XvideosRipper ripper = new XvideosRipper(new URL("https://www.xvideos.com/video23515878/dee_s_pool_toys"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.YoupornRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 
 public class YoupornRipperTest  extends RippersTest {
+    @Test
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YuvutuRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.YuvutuRipper;
+import org.junit.jupiter.api.Test;
 
 public class YuvutuRipperTest extends RippersTest {
-
+    @Test
     public void testYuvutuAlbum1() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=127013"));
         testRipper(ripper);
     }
-
+    @Test
     public void testYuvutuAlbum2() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=420333"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ZizkiRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ZizkiRipper;
+import org.junit.jupiter.api.Test;
 
 public class ZizkiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -16,7 +17,7 @@ public void testGetGID() throws IOException {
         ZizkiRipper ripper = new ZizkiRipper(url);
         assertEquals("dee-chorde", ripper.getGID(url));
     }
-
+    @Test
     public void testAlbumTitle() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.86";
+    private static final String DEFAULT_VERSION = "1.7.87";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.87";
+    private static final String DEFAULT_VERSION = "1.7.86";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/CheveretoRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.CheveretoRipper;
+import org.junit.jupiter.api.Test;
 
 public class CheveretoRipperTest extends RippersTest {
+    @Test
     public void testTagFox() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("http://tag-fox.com/album/Thjb"));
         testRipper(ripper);
     }
-
+    @Test
     public void testSubdirAlbum() throws IOException {
         CheveretoRipper ripper = new CheveretoRipper(new URL("https://kenzato.uk/booru/album/TnEc"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ComicextraRipperTest.java
Patch:
@@ -3,15 +3,16 @@
 import java.io.IOException;
 import java.net.URL;
 import com.rarchives.ripme.ripper.rippers.ComicextraRipper;
+import org.junit.jupiter.api.Test;
 
 public class ComicextraRipperTest extends RippersTest {
-
+    @Test
     public void testComicUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/comic/karma-police");
         ComicextraRipper ripper = new ComicextraRipper(url);
         testRipper(ripper);
     }
-
+    @Test
     public void testChapterUrl() throws IOException {
         URL url = new URL("https://www.comicextra.com/v-for-vendetta/chapter-1");
         ComicextraRipper ripper = new ComicextraRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DribbbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.DribbbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class DribbbleRipperTest extends RippersTest {
+    @Test
     public void testDribbbleRip() throws IOException {
         DribbbleRipper ripper = new DribbbleRipper(new URL("https://dribbble.com/typogriff"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/E621RipperTest.java
Patch:
@@ -4,18 +4,19 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.E621Ripper;
+import org.junit.jupiter.api.Test;
 
 public class E621RipperTest extends RippersTest {
     public void testRip() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/beach"));
         testRipper(ripper);
     }
-
+    @Test
     public void testFlashOrWebm() throws IOException {
         E621Ripper ripper = new E621Ripper(new URL("https://e621.net/post/index/1/gif"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGetNextPage() throws IOException {
         E621Ripper nextPageRipper = new E621Ripper(new URL("https://e621.net/post/index/1/cosmicminerals"));
         try {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,14 +6,17 @@
 
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class EhentaiRipperTest extends RippersTest {
+    @Test
     public void testEHentaiAlbum() throws IOException {
         EHentaiRipper ripper = new EHentaiRipper(new URL("https://e-hentai.org/g/1144492/e823bdf9a5/"));
         testRipper(ripper);
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://e-hentai.org/g/1228503/1a2f455f96/");
         EHentaiRipper ripper = new EHentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -4,13 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.FuskatorRipper;
+import org.junit.jupiter.api.Test;
 
 public class FuskatorRipperTest extends RippersTest {
+    @Test
     public void testFuskatorAlbum() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
-    
+    @Test
     public void testUrlsWithTiled() throws IOException {
         FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hsrzk~UIFmJ/Blonde-Babe-Destiny-Dixon-Playing-With-Black-Dildo.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -1,6 +1,8 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.GfycatRipper;
+import org.junit.jupiter.api.Test;
+
 import java.io.IOException;
 import java.net.URL;
 
@@ -11,6 +13,7 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
+    @Test
     public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GirlsOfDesireRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.GirlsOfDesireRipper;
+import org.junit.jupiter.api.Test;
 
 public class GirlsOfDesireRipperTest extends RippersTest {
+    @Test
     public void testGirlsofdesireAlbum() throws IOException {
         GirlsOfDesireRipper ripper = new GirlsOfDesireRipper(new URL("http://www.girlsofdesire.org/galleries/krillia/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HbrowseRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HbrowseRipper;
+import org.junit.jupiter.api.Test;
 
 public class HbrowseRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         HbrowseRipper ripper = new HbrowseRipper(new URL("https://www.hbrowse.com/21013/c00001"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Hentai2readRipper;
+import org.junit.jupiter.api.Test;
 
 public class Hentai2readRipperTest extends RippersTest {
+    @Test
     public void testHentai2readAlbum() throws IOException {
         Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaicafeRipperTest.java
Patch:
@@ -4,13 +4,16 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.HentaiCafeRipper;
+import org.junit.jupiter.api.Test;
 
 public class HentaicafeRipperTest extends RippersTest {
+    @Test
     public void testHentaiCafeAlbum() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/kikuta-the-oni-in-the-room/"));
         testRipper(ripper);
     }
     // This album has a line break (<br />) in the url. Test it to make sure ripme can handle these invalid urls
+    @Test
     public void testAlbumWithInvalidChars() throws IOException {
         HentaiCafeRipper ripper = new HentaiCafeRipper(new URL("https://hentai.cafe/chobipero-club/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HentaiimageRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.HentaiimageRipper;
 import com.rarchives.ripme.utils.Utils;
+import org.junit.jupiter.api.Test;
 
 public class HentaiimageRipperTest extends RippersTest {
-
+    @Test
     public void testHentaifoundryRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             HentaiimageRipper ripper = new HentaiimageRipper(new URL("https://hentai-image.com/image/afrobull-gerudo-ongoing-12/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagearnRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagearnRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagearnRipperTest extends RippersTest {
+    @Test
     public void testImagearnRip() throws IOException {
         ImagearnRipper ripper = new ImagearnRipper(new URL("http://imagearn.com//gallery.php?id=578682"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagebamRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImagebamRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagebamRipperTest extends RippersTest {
+    @Test
     public void testImagebamRip() throws IOException {
         ImagebamRipper ripper = new ImagebamRipper(new URL("http://www.imagebam.com/gallery/488cc796sllyf7o5srds8kpaz1t4m78i"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import java.util.Map;
 
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImagefapRipperTest extends RippersTest {
+    @Test
     public void testImagefapAlbums() throws IOException {
         Map<URL, String> testURLs = new HashMap<>();
 
@@ -24,6 +26,7 @@ public void testImagefapAlbums() throws IOException {
             testRipper(ripper);
         }
     }
+    @Test
     public void testImagefapGetAlbumTitle() throws IOException {
         URL url = new URL("https://www.imagefap.com/gallery.php?gid=7789753");
         ImagefapRipper ripper = new ImagefapRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgboxRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ImgboxRipper;
+import org.junit.jupiter.api.Test;
 
 public class ImgboxRipperTest extends RippersTest {
+    @Test
     public void testImgboxRip() throws IOException {
         ImgboxRipper ripper = new ImgboxRipper(new URL("https://imgbox.com/g/FJPF7t26FD"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/JagodibujaRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.JagodibujaRipper;
+import org.junit.jupiter.api.Test;
 
 public class JagodibujaRipperTest extends RippersTest {
+    @Test
     public void testJagodibujaRipper() throws IOException {
         // a photo set
         JagodibujaRipper ripper = new JagodibujaRipper(new URL("http://www.jagodibuja.com/comic-in-me/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.jupiter.api.Test;
 
 public class MotherlessRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
+import org.junit.jupiter.api.Test;
 
 public class MulemaxRipperTest extends RippersTest {
-    
+    @Test
     public void testMulemaxVideo() throws IOException {
         MulemaxRipper ripper = new MulemaxRipper(new URL("https://mulemax.com/video/1720/emma-and-her-older-sissy-are-home-for-a-holiday-break"));  //pick any video from the front page
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaigalleryRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MyhentaigalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class MyhentaigalleryRipperTest extends RippersTest {
-
+    @Test
     public void testMyhentaigalleryAlbum() throws IOException {
         MyhentaigalleryRipper ripper = new MyhentaigalleryRipper(
                 new URL("https://myhentaigallery.com/gallery/thumbnails/9201"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewgroundsRipperTest.java
Patch:
@@ -1,12 +1,13 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.NewgroundsRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 
 public class NewgroundsRipperTest extends RippersTest {
-
+    @Test
     public void testNewgroundsRip() throws IOException {
         NewgroundsRipper ripper = new NewgroundsRipper(new URL("https://zone-sama.newgrounds.com/art"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NewsfilterRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.NewsfilterRipper;
+import org.junit.jupiter.api.Test;
 
 public class NewsfilterRipperTest extends RippersTest {
-
+    @Test
     public void testNewsfilterRip() throws IOException {
         NewsfilterRipper ripper = new NewsfilterRipper(new URL("http://newsfilter.org/gallery/he-doubted-she-would-fuck-on-cam-happy-to-be-proven-wrong-216799"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/NhentaiRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rarchives.ripme.ripper.rippers.NhentaiRipper;
 import com.rarchives.ripme.utils.RipUtils;
+import org.junit.jupiter.api.Test;
 
 public class NhentaiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -19,6 +20,7 @@ public void testGetGID()  throws IOException {
     }
 
     // Test the tag black listing
+    @Test
     public void testTagBlackList()  throws IOException {
         URL url = new URL("https://nhentai.net/g/233295/");
         NhentaiRipper ripper = new NhentaiRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PahealRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PahealRipper;
+import org.junit.jupiter.api.Test;
 
 public class PahealRipperTest extends RippersTest {
+    @Test
     public void testPahealRipper() throws IOException {
         // a photo set
         PahealRipper ripper = new PahealRipper(new URL("http://rule34.paheal.net/post/list/bimbo/1"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PicstatioRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PicstatioRipper;
+import org.junit.jupiter.api.Test;
 
 public class PicstatioRipperTest extends RippersTest {
 
     public void testRip() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         testRipper(ripper);
     }
-
+    @Test
     public void testGID() throws IOException {
         PicstatioRipper ripper = new PicstatioRipper(new URL("https://www.picstatio.com/aerial-view-wallpapers"));
         assertEquals("aerial-view-wallpapers", ripper.getGID(new URL("https://www.picstatio.com/aerial-view-wallpapers")));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PorncomixDotOneRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.PorncomixDotOneRipper;
+import org.junit.jupiter.api.Test;
 
 public class PorncomixDotOneRipperTest extends RippersTest {
+    @Test
     public void testPorncomixAlbum() throws IOException {
         PorncomixDotOneRipper ripper = new PorncomixDotOneRipper(new URL("https://www.porncomix.one/gallery/blacknwhite-make-america-great-again"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PornhubRipperTest.java
Patch:
@@ -7,8 +7,10 @@
 import com.rarchives.ripme.utils.Http;
 import com.rarchives.ripme.utils.Utils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 public class PornhubRipperTest extends RippersTest {
+    @Test
     public void testPornhubRip() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             PornhubRipper ripper = new PornhubRipper(new URL("https://www.pornhub.com/album/15680522"));
@@ -25,6 +27,7 @@ public void testGetGID() throws IOException {
     }
 
     // alternate album, with only 2 pages: https://www.pornhub.com/album/4771891
+    @Test
     public void testGetNextPage() throws IOException {
         String baseURL = "https://www.pornhub.com/album/15680522";
         PornhubRipper ripper = new PornhubRipper(new URL(baseURL));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Rule34RipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.Rule34Ripper;
+import org.junit.jupiter.api.Test;
 
 public class Rule34RipperTest extends RippersTest {
+    @Test
     public void testShesFreakyRip() throws IOException {
         Rule34Ripper ripper = new Rule34Ripper(new URL("https://rule34.xxx/index.php?page=post&s=list&tags=bimbo"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SinnercomicsRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SinnercomicsRipper;
+import org.junit.jupiter.api.Test;
 
 public class SinnercomicsRipperTest extends RippersTest {
+    @Test
     public void testSinnercomicsAlbum() throws IOException {
         SinnercomicsRipper ripper;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SpankBangRipperTest.java
Patch:
@@ -4,9 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.SpankbangRipper;
+import org.junit.jupiter.api.Test;
 
 public class SpankBangRipperTest extends RippersTest {
-
+    @Test
     public void testSpankBangVideo() throws IOException {
         SpankbangRipper ripper = new SpankbangRipper(new URL("https://spankbang.com/2a7fh/video/mdb901"));  //most popular video of all time on site; should stay up
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TapasticRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TapasticRipper;
+import org.junit.jupiter.api.Test;
 
 public class TapasticRipperTest extends RippersTest {
+    @Test
     public void testTapasticRip() throws IOException {
         TapasticRipper ripper = new TapasticRipper(new URL("https://tapas.io/series/tsiwbakd-comic"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TeenplanetRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TeenplanetRipper;
+import org.junit.jupiter.api.Test;
 
 public class TeenplanetRipperTest extends RippersTest {
+    @Test
     public void testTeenplanetRip() throws IOException {
         TeenplanetRipper ripper = new TeenplanetRipper(new URL("http://teenplanet.org/galleries/the-perfect-side-of-me-6588.html"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TheyiffgalleryRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.TheyiffgalleryRipper;
+import org.junit.jupiter.api.Test;
 
 public class TheyiffgalleryRipperTest extends RippersTest {
+    @Test
     public void testTheyiffgallery() throws IOException {
         TheyiffgalleryRipper ripper = new TheyiffgalleryRipper(new URL("https://theyiffgallery.com/index?/category/4303"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TsuminoRipperTest.java
Patch:
@@ -7,14 +7,16 @@
 import com.rarchives.ripme.ripper.rippers.TsuminoRipper;
 import com.rarchives.ripme.utils.RipUtils;
 import org.jsoup.nodes.Document;
+import org.junit.jupiter.api.Test;
 
 
 public class TsuminoRipperTest extends RippersTest {
+    @Test
     public void testTsuminoRipper() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         testRipper(ripper);
     }
-
+    @Test
     public void testTagBlackList() throws IOException {
         TsuminoRipper ripper = new TsuminoRipper(new URL("http://www.tsumino.com/Book/Info/43528/sore-wa-kurokute-suketeita-what-s-tight-and-black-and-sheer-all-over-"));
         Document doc = ripper.getFirstPage();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VidbleRipperTest.java
Patch:
@@ -4,8 +4,10 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.VidbleRipper;
+import org.junit.jupiter.api.Test;
 
 public class VidbleRipperTest extends RippersTest {
+    @Test
     public void testVidbleRip() throws IOException {
         VidbleRipper ripper = new VidbleRipper(new URL("http://www.vidble.com/album/y1oyh3zd"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ViewcomicRipperTest.java
Patch:
@@ -4,8 +4,11 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ViewcomicRipper;
+import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ViewcomicRipperTest extends RippersTest {
+    @Test @Disabled("Ripper broken")
     public void testViewcomicRipper() throws IOException {
         ViewcomicRipper ripper = new ViewcomicRipper(new URL("https://view-comic.com/batman-no-mans-land-vol-1/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XvideosRipperTest.java
Patch:
@@ -5,9 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.XvideosRipper;
 import com.rarchives.ripme.tst.ripper.rippers.RippersTest;
+import org.junit.jupiter.api.Test;
 
 public class XvideosRipperTest extends RippersTest {
-
+    @Test
     public void testXhamsterAlbum1() throws IOException {
         XvideosRipper ripper = new XvideosRipper(new URL("https://www.xvideos.com/video23515878/dee_s_pool_toys"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YoupornRipperTest.java
Patch:
@@ -1,13 +1,15 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
 import com.rarchives.ripme.ripper.rippers.YoupornRipper;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.List;
 
 public class YoupornRipperTest  extends RippersTest {
+    @Test
     public void testYoupornRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.youporn.com/watch/7669155/mrs-li-amateur-69-orgasm/?from=categ"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/YuvutuRipperTest.java
Patch:
@@ -4,14 +4,15 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.YuvutuRipper;
+import org.junit.jupiter.api.Test;
 
 public class YuvutuRipperTest extends RippersTest {
-
+    @Test
     public void testYuvutuAlbum1() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=127013"));
         testRipper(ripper);
     }
-
+    @Test
     public void testYuvutuAlbum2() throws IOException {
         YuvutuRipper ripper = new YuvutuRipper(new URL("http://www.yuvutu.com/modules.php?name=YuGallery&action=view&set_id=420333"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ZizkiRipperTest.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.ZizkiRipper;
+import org.junit.jupiter.api.Test;
 
 public class ZizkiRipperTest extends RippersTest {
     public void testRip() throws IOException {
@@ -16,7 +17,7 @@ public void testGetGID() throws IOException {
         ZizkiRipper ripper = new ZizkiRipper(url);
         assertEquals("dee-chorde", ripper.getGID(url));
     }
-
+    @Test
     public void testAlbumTitle() throws IOException {
         URL url = new URL("http://zizki.com/dee-chorde/we-got-spirit");
         ZizkiRipper ripper = new ZizkiRipper(url);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -219,7 +219,7 @@ private int parseTweet(JSONObject tweet) throws MalformedURLException {
     }
 
     public String getPrefix(int index) {
-        return String.format("%03d_", index);
+        return Utils.getConfigBoolean("download.save_order", true) ? String.format("%03d_", index) : "";
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/rippers/AllporncomicRipper.java
Patch:
@@ -37,8 +37,8 @@ public String getGID(URL url) throws MalformedURLException {
         if (m.matches()) {
             return m.group(1) + "_" + m.group(2);
         }
-        throw new MalformedURLException("Expected cfake URL format: " +
-                "cfake.com/picture/MODEL/ID - got " + url + " instead");
+        throw new MalformedURLException("Expected allporncomic URL format: " +
+                "allporncomic.com/TITLE/CHAPTER - got " + url + " instead");
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.85";
+    private static final String DEFAULT_VERSION = "1.7.86";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.85";
+    private static final String DEFAULT_VERSION = "1.7.86";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -222,8 +222,7 @@ private static String getMacOSConfigDir() {
     }
 
     private static File getJarDirectory() {
-        String[] classPath = System.getProperty("java.class.path").split(";");
-        return classPath.length > 1 ? new File(System.getProperty("user.dir")) : new File(classPath[0]).getParentFile();
+        return Utils.class.getResource("/rip.properties").toString().contains("jar:") ? new File(System.getProperty("java.class.path")).getParentFile() : new File(System.getProperty("user.dir"));
     }
 
     /**

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -222,7 +222,8 @@ private static String getMacOSConfigDir() {
     }
 
     private static File getJarDirectory() {
-        return new File(System.getProperty("java.class.path")).getParentFile();
+        String[] classPath = System.getProperty("java.class.path").split(";");
+        return classPath.length > 1 ? new File(System.getProperty("user.dir")) : new File(classPath[0]).getParentFile();
     }
 
     /**

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ChanRipperTest.java
Patch:
@@ -34,6 +34,7 @@ public void testChanURLPasses() throws IOException {
         passURLs.add(new URL("https://boards.4chan.org/hr/thread/3015701"));
         passURLs.add(new URL("https://boards.420chan.org/420/res/232066.php"));
         passURLs.add(new URL("http://7chan.org/gif/res/25873.html"));
+        passURLs.add(new URL("https://rbt.asia/g/thread/70643087/")); //must work with TLDs with len of 4
         for (URL url : passURLs) {
             ChanRipper ripper = new ChanRipper(url);
             ripper.setup();

File: src/main/java/com/rarchives/ripme/ripper/rippers/FemjoyhunterRipper.java
Patch:
@@ -50,8 +50,8 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("ul.gallery-b > li > a")) {
-            result.add(el.attr("href"));
+        for (Element el : doc.select("img")) {
+            result.add(el.attr("src"));
         }
         return result;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XcartxRipper.java
Patch:
@@ -54,9 +54,9 @@ public List<String> getURLsFromPage(Document page) {
         List<String> imageURLs = new ArrayList<>();
         Elements imageElements = page.select("div.f-desc img");
         for (Element image : imageElements) {
-            String imageUrl = image.attr("abs:src");
+            String imageUrl = image.attr("data-src");
 
-            imageURLs.add(imageUrl);
+            imageURLs.add(getDomain() + imageUrl);
         }
         return imageURLs;
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -16,5 +16,3 @@ public void testUrlsWithTiled() throws IOException {
         testRipper(ripper);
     }
 }
-
-// Disabled because of https://github.com/RipMeApp/ripme/issues/393
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -5,8 +5,11 @@
 
 import com.rarchives.ripme.ripper.rippers.MotherlessRipper;
 
+import org.junit.jupiter.api.Test;
+
 public class MotherlessRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
+    @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,7 +4,6 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
-import com.rarchives.ripme.utils.Utils;
 
 public class MulemaxRipperTest extends RippersTest {
     

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/OglafRipperTest.java
Patch:
@@ -5,7 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.OglafRipper;
 
+import org.junit.jupiter.api.Test;
+
 public class OglafRipperTest extends RippersTest {
+    @Test
     public void testRip() throws IOException {
         OglafRipper ripper = new OglafRipper(new URL("http://oglaf.com/plumes/"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BcfakesRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import com.rarchives.ripme.ripper.rippers.BcfakesRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class BcfakesRipperTest extends RippersTest {
+    @Test
     @Disabled("21/06/2018 This test was disbaled as the site has experienced notable downtime")
     public void testRip() throws IOException {
         BcfakesRipper ripper = new BcfakesRipper(new URL("http://www.bcfakes.com/celebritylist/olivia-wilde/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BlackbrickroadofozRipperTest.java
Patch:
@@ -3,11 +3,13 @@
 import com.rarchives.ripme.ripper.rippers.BlackbrickroadofozRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 import java.io.IOException;
 import java.net.URL;
 
 public class BlackbrickroadofozRipperTest extends RippersTest {
+    @Test
     @Disabled("Commented out on 02/04/2019 because the serve has been down for a while")
     public void testRip() throws IOException {
         BlackbrickroadofozRipper ripper = new BlackbrickroadofozRipper(

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ChanRipperTest.java
Patch:
@@ -1,5 +1,6 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
+import java.io.File;
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DrawcrowdRipperTest.java
Patch:
@@ -6,9 +6,10 @@
 import com.rarchives.ripme.ripper.rippers.DrawcrowdRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class DrawcrowdRipperTest extends RippersTest {
-
+    @Test
     @Disabled("https://github.com/RipMeApp/ripme/issues/304 -- Drawcrowd broken (site changed)")
     public void testRip() throws IOException {
         DrawcrowdRipper ripper = new DrawcrowdRipper(new URL("https://drawcrowd.com/rabbiteyes"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FlickrRipperTest.java
Patch:
@@ -6,9 +6,10 @@
 import com.rarchives.ripme.ripper.rippers.FlickrRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class FlickrRipperTest extends RippersTest {
-
+    @Test
     @Disabled("https://github.com/RipMeApp/ripme/issues/243")
     public void testFlickrAlbum() throws IOException {
         FlickrRipper ripper = new FlickrRipper(

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagevenueRipperTest.java
Patch:
@@ -6,15 +6,18 @@
 import com.rarchives.ripme.ripper.rippers.ImagevenueRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ImagevenueRipperTest extends RippersTest {
+    @Test
     @Disabled("See https://github.com/RipMeApp/ripme/issues/1202")
     public void testImagevenueRip() throws IOException {
         ImagevenueRipper ripper = new ImagevenueRipper(
                 new URL("http://img120.imagevenue.com/galshow.php?gal=gallery_1373818527696_191lo"));
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("http://img120.imagevenue.com/galshow.php?gal=gallery_1373818527696_191lo");
         ImagevenueRipper ripper = new ImagevenueRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ModelxRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import com.rarchives.ripme.ripper.rippers.ModelxRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ModelxRipperTest extends RippersTest {
+    @Test
     @Disabled("ModelxRipper domain has been changes. Commenting to avoid build failure.")
     public void testModelxAlbum() throws IOException {
         ModelxRipper ripper = new ModelxRipper(new URL(

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/PichunterRipperTest.java
Patch:
@@ -6,16 +6,18 @@
 import com.rarchives.ripme.ripper.rippers.PichunterRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class PichunterRipperTest extends RippersTest {
-
+    @Test
     @Disabled("This test was commented out at 6/08/2018 because it was randomly failing due to issues with the site see https://github.com/RipMeApp/ripme/issues/867")
     public void testPichunterModelPageRip() throws IOException {
         // A non-photoset
         PichunterRipper ripper = new PichunterRipper(new URL("https://www.pichunter.com/models/Madison_Ivy"));
         testRipper(ripper);
     }
 
+    @Test
     public void testPichunterGalleryRip() throws IOException {
         // a photo set
         PichunterRipper ripper = new PichunterRipper(

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ShesFreakyRipperTest.java
Patch:
@@ -6,16 +6,18 @@
 import com.rarchives.ripme.ripper.rippers.ShesFreakyRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class ShesFreakyRipperTest extends RippersTest {
-
+    @Test
     @Disabled("https://github.com/RipMeApp/ripme/issues/254")
     public void testShesFreakyRip() throws IOException {
         ShesFreakyRipper ripper = new ShesFreakyRipper(
                 new URL("http://www.shesfreaky.com/gallery/nicee-snow-bunny-579NbPjUcYa.html"));
         testRipper(ripper);
     }
 
+    @Test
     public void testGetGID() throws IOException {
         URL url = new URL("http://www.shesfreaky.com/gallery/nicee-snow-bunny-579NbPjUcYa.html");
         ShesFreakyRipper ripper = new ShesFreakyRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ThechiveRipperTest.java
Patch:
@@ -70,6 +70,7 @@ public void testIDotThechive() throws IOException {
      * //If anyone figures out how to get JSOUP Elements mocked up, we can use the
      * following methods to test both jpeg + gif ripping.
      */
+    @Test
     @Disabled
     public void testGifRip1() throws IOException {
         String elementInString = "<img width=\"500\" height=\"305\" \n src=\"https://thechive.files.wordpress.com/2018/10/american_mary_crimson_quill-111.jpg?quality=85&amp;strip=info\" \n"
@@ -82,6 +83,7 @@ public void testGifRip1() throws IOException {
         // assertTrue(URL.equals("https://thechive.files.wordpress.com/2018/10/american_mary_crimson_quill-1.gif"));
     }
 
+    @Test
     @Disabled
     public void testGifRip2() throws IOException {
         String elementInString = "<img width=\"600\" height=\"409\" src=\"https://thechive.files.wordpress.com/2018/10/the-definitive-list-of-the-hottest-horror-movie-babes-11.jpg?quality=85&amp;strip=info&amp;w=600\" \n"

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TwitterRipperTest.java
Patch:
@@ -6,13 +6,16 @@
 import com.rarchives.ripme.ripper.rippers.TwitterRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class TwitterRipperTest extends RippersTest {
+    @Test
     public void testTwitterUserRip() throws IOException {
         TwitterRipper ripper = new TwitterRipper(new URL("https://twitter.com/danngamber01/media"));
         testRipper(ripper);
     }
 
+    @Test
     @Disabled("https://github.com/RipMeApp/ripme/issues/251")
     public void testTwitterSearchRip() throws IOException {
         TwitterRipper ripper = new TwitterRipper(

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TwodgalleriesRipperTest.java
Patch:
@@ -6,9 +6,10 @@
 import com.rarchives.ripme.ripper.rippers.TwodgalleriesRipper;
 
 import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
 
 public class TwodgalleriesRipperTest extends RippersTest {
-
+    @Test
     @Disabled("https://github.com/RipMeApp/ripme/issues/182")
     public void testTwodgalleriesRip() throws IOException {
         TwodgalleriesRipper ripper = new TwodgalleriesRipper(

File: src/main/java/com/rarchives/ripme/ripper/rippers/FemjoyhunterRipper.java
Patch:
@@ -50,8 +50,8 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("ul.gallery-b > li > a")) {
-            result.add(el.attr("href"));
+        for (Element el : doc.select("img")) {
+            result.add(el.attr("src"));
         }
         return result;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XcartxRipper.java
Patch:
@@ -54,9 +54,9 @@ public List<String> getURLsFromPage(Document page) {
         List<String> imageURLs = new ArrayList<>();
         Elements imageElements = page.select("div.f-desc img");
         for (Element image : imageElements) {
-            String imageUrl = image.attr("abs:src");
+            String imageUrl = image.attr("data-src");
 
-            imageURLs.add(imageUrl);
+            imageURLs.add(getDomain() + imageUrl);
         }
         return imageURLs;
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -16,5 +16,3 @@ public void testUrlsWithTiled() throws IOException {
         testRipper(ripper);
     }
 }
-
-// Disabled because of https://github.com/RipMeApp/ripme/issues/393
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -5,8 +5,11 @@
 
 import com.rarchives.ripme.ripper.rippers.MotherlessRipper;
 
+import org.junit.jupiter.api.Test;
+
 public class MotherlessRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
+    @Test
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MulemaxRipperTest.java
Patch:
@@ -4,7 +4,6 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.MulemaxRipper;
-import com.rarchives.ripme.utils.Utils;
 
 public class MulemaxRipperTest extends RippersTest {
     

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/OglafRipperTest.java
Patch:
@@ -5,7 +5,10 @@
 
 import com.rarchives.ripme.ripper.rippers.OglafRipper;
 
+import org.junit.jupiter.api.Test;
+
 public class OglafRipperTest extends RippersTest {
+    @Test
     public void testRip() throws IOException {
         OglafRipper ripper = new OglafRipper(new URL("http://oglaf.com/plumes/"));
         testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.84";
+    private static final String DEFAULT_VERSION = "1.7.85";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -159,7 +159,8 @@ public JSONObject getFirstPage() throws IOException {
         Document p = resp.parse();
         // Get the query hash so we can download the next page
         qHash = getQHash(p);
-        if (qHash == null) {
+        // The qHash is not needed if ripping a single post
+        if (qHash == null && !url.toExternalForm().contains("/p/")) {
             throw new IOException("Unable to extract qhash from page");
         }
         return getJSONFromPage(p);
@@ -475,7 +476,7 @@ private JSONObject getPage(String url, String ig_gis) {
 
     private String getQhashUrl(Document doc) {
         for(Element el : doc.select("link[rel=preload]")) {
-            if (el.attr("href").contains("ProfilePageContainer")) {
+            if (el.attr("href").contains("ProfilePageContainer") && el.attr("href").contains("js")) {
                 return el.attr("href");
             }
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.84";
+    private static final String DEFAULT_VERSION = "1.7.85";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.84";
+    private static final String DEFAULT_VERSION = "1.7.85";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -159,7 +159,8 @@ public JSONObject getFirstPage() throws IOException {
         Document p = resp.parse();
         // Get the query hash so we can download the next page
         qHash = getQHash(p);
-        if (qHash == null) {
+        // The qHash is not needed if ripping a single post
+        if (qHash == null && !url.toExternalForm().contains("/p/")) {
             throw new IOException("Unable to extract qhash from page");
         }
         return getJSONFromPage(p);

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -159,7 +159,8 @@ public JSONObject getFirstPage() throws IOException {
         Document p = resp.parse();
         // Get the query hash so we can download the next page
         qHash = getQHash(p);
-        if (qHash == null) {
+        // The qHash is not needed if ripping a single post
+        if (qHash == null && !url.toExternalForm().contains("/p/")) {
             throw new IOException("Unable to extract qhash from page");
         }
         return getJSONFromPage(p);

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -475,7 +475,7 @@ private JSONObject getPage(String url, String ig_gis) {
 
     private String getQhashUrl(Document doc) {
         for(Element el : doc.select("link[rel=preload]")) {
-            if (el.attr("href").contains("ProfilePageContainer")) {
+            if (el.attr("href").contains("ProfilePageContainer") && el.attr("href").contains("js")) {
                 return el.attr("href");
             }
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -475,7 +475,7 @@ private JSONObject getPage(String url, String ig_gis) {
 
     private String getQhashUrl(Document doc) {
         for(Element el : doc.select("link[rel=preload]")) {
-            if (el.attr("href").contains("ProfilePageContainer")) {
+            if (el.attr("href").contains("ProfilePageContainer") && el.attr("href").contains("js")) {
                 return el.attr("href");
             }
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -23,7 +23,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.83";
+    private static final String DEFAULT_VERSION = "1.7.84";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static String mainFileName;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.82";
+    private static final String DEFAULT_VERSION = "1.7.83";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ComicextraRipper.java
Patch:
@@ -100,7 +100,9 @@ public Document getNextPage(Document doc) throws IOException {
         if (urlType == UrlType.COMIC) {
             ++chapterIndex;
             imageIndex = 0; // Resetting the imagesIndex so that images prefix within each chapter starts from '001_'.
-            return Http.url(chaptersList.get(chapterIndex)).get();
+            if (chapterIndex < chaptersList.size()) {
+                return Http.url(chaptersList.get(chapterIndex)).get();
+            }
         }
 
         return super.getNextPage(doc);

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -119,7 +119,6 @@ public List<String> getURLsFromPage(Document page) {
                     // Deobfustace the json data
                     String rawJson = deobfuscateJSON(page.select("script#ractive-public").html()
                             .replaceAll("&gt;", ">").replaceAll("&lt;", "<").replace("&amp;", "&"));
-                    LOGGER.info(rawJson);
                     JSONObject json = new JSONObject(rawJson);
                     try {
                         for (int i = 0; i != json.getJSONArray("pictures").length(); i++) {
@@ -128,6 +127,9 @@ public List<String> getURLsFromPage(Document page) {
                             addURLToDownload(imageUrl, getPrefixShort(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, "", null, true);
                             // X is our page index
                             x++;
+                            if (isThisATest()) {
+                                break;
+                            }
                         }
                         return imageURLs;
                     } catch (MalformedURLException e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuskatorRipper.java
Patch:
@@ -53,7 +53,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^.*fuskator.com/full/([a-zA-Z0-9\\-]+).*$");
+        Pattern p = Pattern.compile("^.*fuskator.com/full/([a-zA-Z0-9\\-~]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuskatorRipper.java
Patch:
@@ -53,7 +53,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^.*fuskator.com/full/([a-zA-Z0-9\\-]+).*$");
+        Pattern p = Pattern.compile("^.*fuskator.com/full/([a-zA-Z0-9\\-~]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ErofusRipperTest.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.ErofusRipper;
 
-public class CfakeRipperTest extends RippersTest {
+public class ErofusRipperTest extends RippersTest {
     public void testRip() throws IOException {
         ErofusRipper ripper = new ErofusRipper(new URL("https://www.erofus.com/comics/be-story-club-comics/a-kiss/issue-1"));
         testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -236,7 +236,7 @@ protected boolean addURLToDownload(URL url, Map<String, String> options, Map<Str
         // Bit of a hack but this lets us pass a bool using a map<string,String>
         boolean useMIME = options.getOrDefault("getFileExtFromMIME", "false").toLowerCase().equals("true");
         return addURLToDownload(url, options.getOrDefault("prefix", ""), options.getOrDefault("subdirectory", ""), options.getOrDefault("referrer", null),
-                cookies, options.getOrDefault("fileName", ""), options.getOrDefault("extension", null), useMIME);
+                cookies, options.getOrDefault("fileName", null), options.getOrDefault("extension", null), useMIME);
     }
 
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -117,7 +117,9 @@ public String getAlbumTitle(URL url) throws MalformedURLException {
     @Override
     public boolean canRip(URL url) {
         explicit_domains.addAll(bakedin_explicit_domains);
-        explicit_domains.addAll(user_give_explicit_domains);
+        if (user_give_explicit_domains != null) {
+            explicit_domains.addAll(user_give_explicit_domains);
+        }
         for (ChanSite _chanSite : explicit_domains) {
             if (_chanSite.domains.contains(url.getHost())) {
                 return true;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.81";
+    private static final String DEFAULT_VERSION = "1.7.82";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasQueueSupport() {
 
     @Override
     public boolean pageContainsAlbums(URL url) {
-        Pattern pa = Pattern.compile("https?://www.erome.com/([a-zA-Z0-9_-]*)/?");
+        Pattern pa = Pattern.compile("https?://www.erome.com/([a-zA-Z0-9_\\-?=]*)/?");
         Matcher ma = pa.matcher(url.toExternalForm());
         return ma.matches();
     }
@@ -111,7 +111,7 @@ public String getGID(URL url) throws MalformedURLException {
             return m.group(1);
         }
 
-        p = Pattern.compile("^https?://www.erome.com/([a-zA-Z0-9_-]+)/?$");
+        p = Pattern.compile("^https?://www.erome.com/([a-zA-Z0-9_\\-?=]+)/?$");
         m = p.matcher(url.toExternalForm());
 
         if (m.matches()) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.80";
+    private static final String DEFAULT_VERSION = "1.7.81";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/MulemaxRipper.java
Patch:
@@ -74,6 +74,6 @@ public List<String> getURLsFromPage(Document doc) {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, getPrefix(index), "", "mulemax.com", null);
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ripper/rippers/MulemaxRipper.java
Patch:
@@ -74,6 +74,6 @@ public List<String> getURLsFromPage(Document doc) {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, getPrefix(index), "", "mulemax.com", null);
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -431,7 +431,6 @@ int getCount() {
      * Notifies observers and updates state if all files have been ripped.
      */
     void checkIfComplete() {
-        LOGGER.debug("Checkifcomplete was called");
         if (observer == null) {
             LOGGER.debug("observer is null");
             return;

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -93,6 +93,7 @@ public void rip() throws IOException {
 
             // We set doc to null here so the while loop below this doesn't fire
             doc = null;
+            LOGGER.debug("Adding items from " + this.url + " to queue");
         }
 
         while (doc != null) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.79";
+    private static final String DEFAULT_VERSION = "1.7.80";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/MyreadingmangaRipper.java
Patch:
@@ -49,7 +49,6 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        LOGGER.info(doc);
         List<String> result = new ArrayList<>();
         for (Element el : doc.select("div.separator > img")) {
             String imageSource = el.attr("data-lazy-src");

File: src/main/java/com/rarchives/ripme/ripper/rippers/PorncomixDotOneRipper.java
Patch:
@@ -51,7 +51,7 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
         // We have 2 loops here to cover all the different album types
-        for (Element el : doc.select(".dgwt-jg-gallery > a")) {
+        for (Element el : doc.select(".dgwt-jg-item > a")) {
             result.add(el.attr("href"));
         }
         for (Element el : doc.select(".unite-gallery > img")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/PorncomixDotOneRipper.java
Patch:
@@ -51,7 +51,7 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
         // We have 2 loops here to cover all the different album types
-        for (Element el : doc.select(".dgwt-jg-gallery > a")) {
+        for (Element el : doc.select(".dgwt-jg-item > a")) {
             result.add(el.attr("href"));
         }
         for (Element el : doc.select(".unite-gallery > img")) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.78";
+    private static final String DEFAULT_VERSION = "1.7.79";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/RedditRipper.java
Patch:
@@ -173,6 +173,8 @@ private void parseJsonChild(JSONObject child) {
 
             if (score > maxScore || score < minScore) {
 
+                String message = "Skipping post with score outside specified range of " + minScore + " to " + maxScore;
+                LOGGER.debug(message);
                 return; //Outside specified range, do not download
             }
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XcartxRipper.java
Patch:
@@ -52,9 +52,9 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document page) {
         List<String> imageURLs = new ArrayList<>();
-        Elements albumElements = page.select("a.highslide");
-        for (Element imageBox : albumElements) {
-            String imageUrl = imageBox.attr("href");
+        Elements imageElements = page.select("div.f-desc img");
+        for (Element image : imageElements) {
+            String imageUrl = image.attr("abs:src");
 
             imageURLs.add(imageUrl);
         }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XlecxRipperTest.java
Patch:
@@ -7,7 +7,7 @@
 
 public class XlecxRipperTest extends RippersTest {
     public void testAlbum() throws IOException {
-        XlecxRipper ripper = new XlecxRipper(new URL("http://xlecx.com/4937-tokimeki-nioi.html"));
+        XlecxRipper ripper = new XlecxRipper(new URL("http://xlecx.com/4274-black-canary-ravished-prey.html"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.77";
+    private static final String DEFAULT_VERSION = "1.7.78";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.76";
+    private static final String DEFAULT_VERSION = "1.7.77";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -232,7 +232,7 @@ public void run() {
                 }
                 byte[] data = new byte[1024 * 256];
                 int bytesRead;
-                boolean shouldSkipFileDownload = huc.getContentLength() / 10000000 >= 10 && AbstractRipper.isThisATest();
+                boolean shouldSkipFileDownload = huc.getContentLength() / 1000000 >= 10 && AbstractRipper.isThisATest();
                 // If this is a test rip we skip large downloads
                 if (shouldSkipFileDownload) {
                     logger.debug("Not downloading whole file because it is over 10mb and this is a test");

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -872,9 +872,9 @@ public void mouseClicked(MouseEvent e) {
                 LOGGER.error("Error while getting selected path: ", e);
                 return;
             }
-            try {
-                BufferedReader br = new BufferedReader(new FileReader(chosenPath));
+            try (BufferedReader br = new BufferedReader(new FileReader(chosenPath))) {
                 for (String line = br.readLine(); line != null; line = br.readLine()) {
+                    line = line.trim();
                     if (line.startsWith("http")) {
                         MainWindow.addUrlToQueue(line);
                     } else {

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -872,9 +872,9 @@ public void mouseClicked(MouseEvent e) {
                 LOGGER.error("Error while getting selected path: ", e);
                 return;
             }
-            try {
-                BufferedReader br = new BufferedReader(new FileReader(chosenPath));
+            try (BufferedReader br = new BufferedReader(new FileReader(chosenPath))) {
                 for (String line = br.readLine(); line != null; line = br.readLine()) {
+                    line = line.trim();
                     if (line.startsWith("http")) {
                         MainWindow.addUrlToQueue(line);
                     } else {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ChanRipperTest.java
Patch:
@@ -58,7 +58,6 @@ public void testChanRipper() throws IOException {
     public String getRandomThreadDesuarchive() {
         try {
             Document doc = Http.url(new URL("https://desuarchive.org/wsg/")).get();
-            System.out.println(doc);
             return doc.select("div.post_data > a").first().attr("href");
         } catch (IOException e) {
             e.printStackTrace();

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -111,7 +111,6 @@ public String getGID(URL url) throws MalformedURLException {
 
         String u = url.toExternalForm();
         if (u.contains("/thread/") || u.contains("/res/") || u.contains("yuki.la") || u.contains("55chan.org")) {
-            LOGGER.debug("U: " + u);
             p = Pattern.compile("^.*\\.[a-z]{1,3}/[a-zA-Z0-9]+/(thread|res)/([0-9]+)(\\.html|\\.php)?.*$");
             m = p.matcher(u);
             if (m.matches()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ZizkiRipper.java
Patch:
@@ -79,7 +79,6 @@ public List<String> getURLsFromPage(Document page) {
         // Page contains images
         LOGGER.info("Look for images.");
         for (Element thumb : page.select("img")) {
-            LOGGER.info("Img");
             if (super.isStopped()) break;
             // Find thumbnail image source
             String image = null;

File: src/main/java/com/rarchives/ripme/ripper/rippers/HitomiRipper.java
Patch:
@@ -56,7 +56,6 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
         String json = doc.text().replaceAll("var galleryinfo =", "");
-        LOGGER.info(json);
         JSONArray json_data = new JSONArray(json);
         for (int i = 0; i < json_data.length(); i++) {
             result.add("https://ba.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));

File: src/main/java/com/rarchives/ripme/ripper/rippers/BatoRipper.java
Patch:
@@ -113,7 +113,6 @@ public List<String> getURLsFromPage(Document doc) {
                 s = s.replaceAll("var prevCha = null;", "");
                 s = s.replaceAll("var nextCha = \\.*;", "");
                 String json = s.replaceAll("var images = ", "").replaceAll(";", "");
-                LOGGER.info(s);
                 JSONObject images = new JSONObject(json);
                 for (int i = 1; i < images.length() +1; i++) {
                     result.add(images.getString(Integer.toString(i)));

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuraffinityRipper.java
Patch:
@@ -78,7 +78,6 @@ public boolean hasDescriptionSupport() {
     @Override
     public Document getFirstPage() throws IOException {
         setCookies();
-        LOGGER.info(Http.url(url).cookies(cookies).get().html());
         return Http.url(url).cookies(cookies).get();
     }
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuraffinityRipperTest.java
Patch:
@@ -7,7 +7,7 @@
 
 public class FuraffinityRipperTest extends RippersTest {
     public void testFuraffinityAlbum() throws IOException {
-        FuraffinityRipper ripper = new FuraffinityRipper(new URL("https://www.furaffinity.net/gallery/mustardgas/"));
+        FuraffinityRipper ripper = new FuraffinityRipper(new URL("https://www.furaffinity.net/gallery/spencerdragon/"));
         testRipper(ripper);
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoundryRipper.java
Patch:
@@ -40,7 +40,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p = Pattern.compile("^.*hentai-foundry\\.com/(pictures|stories)/user/([a-zA-Z0-9\\-_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            return m.group(1);
+            return m.group(2);
         }
         throw new MalformedURLException(
                 "Expected hentai-foundry.com gallery format: "

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.75";
+    private static final String DEFAULT_VERSION = "1.7.76";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -22,7 +22,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.74";
+    private static final String DEFAULT_VERSION = "1.7.75";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -79,7 +79,7 @@ public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<Strin
             String urlFile = this.workingDir + File.separator + "urls.txt";
             try (FileWriter fw = new FileWriter(urlFile, true)) {
                 fw.write(url.toExternalForm());
-                fw.write("\n");
+                fw.write(System.lineSeparator());
                 itemsCompleted.put(url, new File(urlFile));
             } catch (IOException e) {
                 LOGGER.error("Error while writing to " + urlFile, e);

File: src/main/java/com/rarchives/ripme/ripper/rippers/EHentaiRipper.java
Patch:
@@ -81,7 +81,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p;
         Matcher m;
 
-        p = Pattern.compile("^https?://e-hentai\\.org/g/([0-9]+)/([a-fA-F0-9]+)/$");
+        p = Pattern.compile("^https?://e-hentai\\.org/g/([0-9]+)/([a-fA-F0-9]+)/?");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1) + "-" + m.group(2);

File: src/main/java/com/rarchives/ripme/ripper/rippers/EHentaiRipper.java
Patch:
@@ -81,7 +81,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p;
         Matcher m;
 
-        p = Pattern.compile("^https?://e-hentai\\.org/g/([0-9]+)/([a-fA-F0-9]+)/$");
+        p = Pattern.compile("^https?://e-hentai\\.org/g/([0-9]+)/([a-fA-F0-9]+)/?");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1) + "-" + m.group(2);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -131,10 +131,10 @@ public static void updateProgramGUI(JLabel configUpdateLabel) {
             JEditorPane changeListPane = new JEditorPane("text/html", String.format(
 					"<html><font color=\"green\">New version (%s) is available!</font>" + "<br><br>Recent changes: %s"
 							+ "<br><br>Do you want to download and run the newest version?</html>",
-					latestVersion, changeList.replaceAll("\n", "<br><br>")));
+					latestVersion, changeList.replaceAll("\\n", "<br><br>")));
 			changeListPane.setEditable(false);
 			JScrollPane changeListScrollPane = new JScrollPane(changeListPane);
-			changeListScrollPane.setPreferredSize(new Dimension(250, 200));
+			changeListScrollPane.setPreferredSize(new Dimension(300, 300));
 			int result = JOptionPane.showConfirmDialog(null, changeListScrollPane, "RipMe Updater",
 					JOptionPane.YES_NO_OPTION);
             if (result != JOptionPane.YES_OPTION) {

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -67,7 +67,7 @@ protected void stopCheck() throws IOException {
      * Adds a URL to the url history file
      * @param downloadedURL URL to check if downloaded
      */
-    private void writeDownloadedURL(String downloadedURL) throws IOException {
+    protected void writeDownloadedURL(String downloadedURL) throws IOException {
         // If "save urls only" is checked don't write to the url history file
         if (Utils.getConfigBoolean("urls_only.save", false)) {
             return;
@@ -131,7 +131,7 @@ public String normalizeUrl(String url) {
      *      Returns true if previously downloaded.
      *      Returns false if not yet downloaded.
      */
-    private boolean hasDownloadedURL(String url) {
+    protected boolean hasDownloadedURL(String url) {
         File file = new File(URLHistoryFile);
         url = normalizeUrl(url);
 
@@ -280,6 +280,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
             saveFileAs.getParentFile().mkdirs();
         }
         if (Utils.getConfigBoolean("remember.url_history", true) && !isThisATest()) {
+            LOGGER.info("Writing " + url.toExternalForm() + " to file");
             try {
                 writeDownloadedURL(url.toExternalForm() + "\n");
             } catch (IOException e) {

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -245,6 +245,7 @@ private void shutdownCleanup() {
         Utils.setConfigBoolean("descriptions.save", configSaveDescriptions.isSelected());
         Utils.setConfigBoolean("prefer.mp4", configPreferMp4.isSelected());
         Utils.setConfigBoolean("remember.url_history", configURLHistoryCheckbox.isSelected());
+        Utils.setConfigString("lang", configSelectLangComboBox.getSelectedItem().toString());
         saveWindowPosition(mainFrame);
         saveHistory();
         Utils.saveConfig();
@@ -517,6 +518,7 @@ public void setValueAt(Object value, int row, int col) {
 
         configLogLevelCombobox = new JComboBox<>(new String[] {"Log level: Error", "Log level: Warn", "Log level: Info", "Log level: Debug"});
         configSelectLangComboBox = new JComboBox<>(supportedLanges);
+        configSelectLangComboBox.setSelectedItem(rb.getLocale().toString());
         configLogLevelCombobox.setSelectedItem(Utils.getConfigString("log.level", "Log level: Debug"));
         setLogLevel(configLogLevelCombobox.getSelectedItem().toString());
         configSaveDirLabel = new JLabel();

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -245,6 +245,7 @@ private void shutdownCleanup() {
         Utils.setConfigBoolean("descriptions.save", configSaveDescriptions.isSelected());
         Utils.setConfigBoolean("prefer.mp4", configPreferMp4.isSelected());
         Utils.setConfigBoolean("remember.url_history", configURLHistoryCheckbox.isSelected());
+        Utils.setConfigString("lang", configSelectLangComboBox.getSelectedItem().toString());
         saveWindowPosition(mainFrame);
         saveHistory();
         Utils.saveConfig();
@@ -517,6 +518,7 @@ public void setValueAt(Object value, int row, int col) {
 
         configLogLevelCombobox = new JComboBox<>(new String[] {"Log level: Error", "Log level: Warn", "Log level: Info", "Log level: Debug"});
         configSelectLangComboBox = new JComboBox<>(supportedLanges);
+        configSelectLangComboBox.setSelectedItem(rb.getLocale().toString());
         configLogLevelCombobox.setSelectedItem(Utils.getConfigString("log.level", "Log level: Debug"));
         setLogLevel(configLogLevelCombobox.getSelectedItem().toString());
         configSaveDirLabel = new JLabel();

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.73";
+    private static final String DEFAULT_VERSION = "1.7.74";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/Tubex6Ripper.java
Patch:
@@ -54,6 +54,7 @@ public List<String> getURLsFromPage(Document doc) {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        // We have to send a referrer or the site returns a 403 error
+        addURLToDownload(url, getPrefix(index), "", this.url.toExternalForm(), null);
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ripper/rippers/Tubex6Ripper.java
Patch:
@@ -54,6 +54,7 @@ public List<String> getURLsFromPage(Document doc) {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        // We have to send a referrer or the site returns a 403 error
+        addURLToDownload(url, getPrefix(index), "", this.url.toExternalForm(), null);
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.70";
+    private static final String DEFAULT_VERSION = "1.7.71";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/RipStatusMessage.java
Patch:
@@ -15,7 +15,8 @@ public enum STATUS {
         DOWNLOAD_WARN("Download problem"),
         TOTAL_BYTES("Total bytes"),
         COMPLETED_BYTES("Completed bytes"),
-        RIP_ERRORED("Rip Errored");
+        RIP_ERRORED("Rip Errored"),
+        NO_ALBUM_OR_USER("No album or user");
 
         String value;
         STATUS(String value) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/FlickrRipper.java
Patch:
@@ -129,7 +129,7 @@ private String getPhotosetID(String url) {
         // Album: https://www.flickr.com/photos/115858035@N04/sets/72157644042355643/
 
         final String domainRegex = "https?://[wm.]*flickr.com";
-        final String userRegex = "[a-zA-Z0-9@]+";
+        final String userRegex = "[a-zA-Z0-9@_-]+";
         // Album
         p = Pattern.compile("^" + domainRegex + "/photos/(" + userRegex + ")/(sets|albums)/([0-9]+)/?.*$");
         m = p.matcher(url);
@@ -168,7 +168,7 @@ public String getGID(URL url) throws MalformedURLException {
         // Album: https://www.flickr.com/photos/115858035@N04/sets/72157644042355643/
 
         final String domainRegex = "https?://[wm.]*flickr.com";
-        final String userRegex = "[a-zA-Z0-9@]+";
+        final String userRegex = "[a-zA-Z0-9@_-]+";
         // Album
         p = Pattern.compile("^" + domainRegex + "/photos/(" + userRegex + ")/sets/([0-9]+)/?.*$");
         m = p.matcher(url.toExternalForm());
@@ -250,4 +250,4 @@ public List<String> getURLsFromPage(Document doc) {
     public void downloadURL(URL url, int index) {
         addURLToDownload(url, getPrefix(index));
     }
-}
\ No newline at end of file
+}

File: src/main/java/com/rarchives/ripme/ripper/rippers/FlickrRipper.java
Patch:
@@ -129,7 +129,7 @@ private String getPhotosetID(String url) {
         // Album: https://www.flickr.com/photos/115858035@N04/sets/72157644042355643/
 
         final String domainRegex = "https?://[wm.]*flickr.com";
-        final String userRegex = "[a-zA-Z0-9@]+";
+        final String userRegex = "[a-zA-Z0-9@_-]+";
         // Album
         p = Pattern.compile("^" + domainRegex + "/photos/(" + userRegex + ")/(sets|albums)/([0-9]+)/?.*$");
         m = p.matcher(url);
@@ -168,7 +168,7 @@ public String getGID(URL url) throws MalformedURLException {
         // Album: https://www.flickr.com/photos/115858035@N04/sets/72157644042355643/
 
         final String domainRegex = "https?://[wm.]*flickr.com";
-        final String userRegex = "[a-zA-Z0-9@]+";
+        final String userRegex = "[a-zA-Z0-9@_-]+";
         // Album
         p = Pattern.compile("^" + domainRegex + "/photos/(" + userRegex + ")/sets/([0-9]+)/?.*$");
         m = p.matcher(url.toExternalForm());
@@ -250,4 +250,4 @@ public List<String> getURLsFromPage(Document doc) {
     public void downloadURL(URL url, int index) {
         addURLToDownload(url, getPrefix(index));
     }
-}
\ No newline at end of file
+}

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.69";
+    private static final String DEFAULT_VERSION = "1.7.70";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/RipStatusMessage.java
Patch:
@@ -15,7 +15,8 @@ public enum STATUS {
         DOWNLOAD_WARN("Download problem"),
         TOTAL_BYTES("Total bytes"),
         COMPLETED_BYTES("Completed bytes"),
-        RIP_ERRORED("Rip Errored");
+        RIP_ERRORED("Rip Errored"),
+        NO_ALBUM_OR_USER("No album or user");
 
         String value;
         STATUS(String value) {

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -131,7 +131,7 @@ public String normalizeUrl(String url) {
      *      Returns true if previously downloaded.
      *      Returns false if not yet downloaded.
      */
-    private boolean hasDownloadedURL(String url) {
+    protected boolean hasDownloadedURL(String url) {
         File file = new File(URLHistoryFile);
         url = normalizeUrl(url);
 
@@ -280,6 +280,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
             saveFileAs.getParentFile().mkdirs();
         }
         if (Utils.getConfigBoolean("remember.url_history", true) && !isThisATest()) {
+            LOGGER.info("Writing " + url.toExternalForm() + " to file");
             try {
                 writeDownloadedURL(url.toExternalForm() + "\n");
             } catch (IOException e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/RedditRipper.java
Patch:
@@ -8,6 +8,7 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import com.rarchives.ripme.ripper.AbstractRipper;
 import com.rarchives.ripme.ui.RipStatusMessage;
 import org.json.JSONArray;
 import org.json.JSONObject;
@@ -208,7 +209,6 @@ private URL parseRedditVideoMPD(String vidURL) {
                     largestHeight = Integer.parseInt(height);
                     baseURL = doc.select("MPD > Period > AdaptationSet > Representation[height=" + height + "]").select("BaseURL").text();
                 }
-                LOGGER.info("H " + e.attr("height") + " V " + e.attr("width"));
             }
             return new URL(vidURL + "/" + baseURL);
         } catch (IOException e) {
@@ -251,6 +251,7 @@ private void handleURL(String theUrl, String id, String title) {
                 savePath += id + "-" + url.split("/")[3] + title + ".mp4";
                 URL urlToDownload = parseRedditVideoMPD(urls.get(0).toExternalForm());
                 if (urlToDownload != null) {
+                    LOGGER.info("url: " + urlToDownload + " file: " + savePath);
                     addURLToDownload(urlToDownload, new File(savePath));
                 }
             }

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -149,6 +149,7 @@ public final class MainWindow implements Runnable, RipStatusHandler {
     // All the langs ripme has been translated into
     private static String[] supportedLanges = new String[] {
             "de_DE",
+            "ar_AR",
             "en_US",
             "es_ES",
             "fi_FI",

File: src/main/java/com/rarchives/ripme/ripper/rippers/SinnercomicsRipper.java
Patch:
@@ -125,7 +125,7 @@ public Document getNextPage(Document doc) throws IOException {
                 nextUrl = elem.attr("href");
                 break;
 
-            case HOMEPAGE:
+            default: // case HOMEPAGE:
                 this.pageNum++;
                 nextUrl = "https://sinnercomics.com/page/" + String.valueOf(this.pageNum);
                 break;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.68";
+    private static final String DEFAULT_VERSION = "1.7.69";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/DuckmoviesRipper.java
Patch:
@@ -1,5 +1,6 @@
 package com.rarchives.ripme.ripper.rippers;
 
+import com.rarchives.ripme.ripper.AbstractRipper;
 import com.rarchives.ripme.ripper.AbstractSingleFileRipper;
 import com.rarchives.ripme.utils.Http;
 import org.jsoup.nodes.Document;
@@ -130,7 +131,7 @@ public String getGID(URL url) throws MalformedURLException {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, "", "", null, null, AbstractRipper.getFileName(url, null, null).replaceAll("%20", "_"));
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -129,6 +129,9 @@ private List<String> getMediaFromPage(Document doc) {
         for (Element el : doc.select("source[label=HD]")) {
             results.add("https:" + el.attr("src"));
         }
+        for (Element el : doc.select("source[label=SD]")) {
+            results.add("https:" + el.attr("src"));
+        }
         return results;
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -73,7 +73,7 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        Elements videos = doc.select("source#mp4Source");
+        Elements videos = doc.select("source");
         String vidUrl = videos.first().attr("src");
         if (vidUrl.startsWith("//")) {
             vidUrl = "http:" + vidUrl;
@@ -95,9 +95,9 @@ public static String getVideoURL(URL url) throws IOException {
         url = new URL(url.toExternalForm().replace("/gifs/detail", ""));
 
         Document doc = Http.url(url).get();
-        Elements videos = doc.select("source#mp4Source");
+        Elements videos = doc.select("source");
         if (videos.isEmpty()) {
-            throw new IOException("Could not find source#mp4source at " + url);
+            throw new IOException("Could not find source at " + url);
         }
         String vidUrl = videos.first().attr("src");
         if (vidUrl.startsWith("//")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/HbrowseRipper.java
Patch:
@@ -32,7 +32,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("http://www.hbrowse.com/(\\d+)/[a-zA-Z0-9]*");
+            Pattern p = Pattern.compile("https?://www.hbrowse.com/(\\d+)/[a-zA-Z0-9]*");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);
@@ -45,7 +45,7 @@ public String getGID(URL url) throws MalformedURLException {
         public Document getFirstPage() throws IOException {
             // "url" is an instance field of the superclass
             Document tempDoc = Http.url(url).get();
-            return Http.url(tempDoc.select("td[id=pageTopHome] > a[title=view thumbnails (top)]").attr("href")).get();
+            return Http.url("https://www.hbrowse.com" + tempDoc.select("td[id=pageTopHome] > a[title=view thumbnails (top)]").attr("href")).get();
         }
 
         @Override
@@ -66,7 +66,7 @@ public List<String> getURLsFromPage(Document doc) {
             List<String> result = new ArrayList<String>();
             for (Element el : doc.select("table > tbody > tr > td > a > img")) {
                 String imageURL = el.attr("src").replace("/zzz", "");
-                result.add(imageURL);
+                result.add("https://www.hbrowse.com" + imageURL);
             }
                 return result;
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/HitomiRipper.java
Patch:
@@ -59,7 +59,7 @@ public List<String> getURLsFromPage(Document doc) {
         LOGGER.info(json);
         JSONArray json_data = new JSONArray(json);
         for (int i = 0; i < json_data.length(); i++) {
-            result.add("https://0a.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));
+            result.add("https://ba.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));
         }
 
         return result;

File: src/main/java/com/rarchives/ripme/ripper/rippers/JabArchivesRipper.java
Patch:
@@ -33,7 +33,7 @@ public String getDomain() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://jabarchives.com/main/view/([a-zA-Z0-9_]+).*$");
+        Pattern p = Pattern.compile("^https?://(?:www\\.)?jabarchives.com/main/view/([a-zA-Z0-9_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             // Return the text contained between () in the regex

File: src/main/java/com/rarchives/ripme/ripper/rippers/ViewcomicRipper.java
Patch:
@@ -69,7 +69,7 @@ public Document getFirstPage() throws IOException {
         @Override
         public List<String> getURLsFromPage(Document doc) {
             List<String> result = new ArrayList<String>();
-                for (Element el : doc.select("div.pinbin-copy > a > img")) {
+                for (Element el : doc.select("div.separator > a > img")) {
                     result.add(el.attr("src"));
                 }
             return result;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.60";
+    private static final String DEFAULT_VERSION = "1.7.68";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/UtilsTest.java
Patch:
@@ -3,13 +3,15 @@
 import junit.framework.TestCase;
 import com.rarchives.ripme.utils.Utils;
 
+import java.nio.ByteBuffer;
 import java.util.ArrayList;
 import java.util.Arrays;
 
 public class UtilsTest extends TestCase {
 
     public void testGetEXTFromMagic() {
         assertEquals("jpeg", Utils.getEXTFromMagic(new byte[]{-1, -40, -1, -37, 0, 0, 0, 0}));
+        assertEquals("png", Utils.getEXTFromMagic(new byte[]{-119, 80, 78, 71, 13, 0, 0, 0}));
     }
 
     public void testStripURLParameter() {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EromeRipperTest.java
Patch:
@@ -33,7 +33,7 @@ public void testPageContainsAlbums() throws IOException {
     }
 
     public void testRip() throws IOException {
-        URL url = new URL("https://www.erome.com/a/4FqeUxil");
+        URL url = new URL("https://www.erome.com/a/vlefBdsg");
         EromeRipper ripper = new EromeRipper(url);
         testRipper(ripper);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -11,15 +11,15 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
-    public void GfycatGoodURL() throws IOException{
+    public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);
     }
     /**
      * Rips badly formatted URL directly from Gfycat
      * @throws IOException 
      */
-    public void GfycatBadURL() throws IOException {
+    public void testGfycatBadURL() throws IOException {
         GfycatRipper ripper  = new GfycatRipper(new URL("https://gfycat.com/gifs/detail/limitedtestyamericancrow"));
         testRipper(ripper);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,7 @@
 public class MotherlessRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     public void testMotherlessAlbumRip() throws IOException {
-        MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G1E5C971"));
+        MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));
         testRipper(ripper);
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VscoRipperTest.java
Patch:
@@ -11,7 +11,7 @@ public class VscoRipperTest extends RippersTest {
      * @throws IOException 
      */
     public void testSingleImageRip() throws IOException {
-        VscoRipper ripper = new VscoRipper(new URL("https://vsco.co/minijello/media/571cd612542220261a123441"));
+        VscoRipper ripper = new VscoRipper(new URL("https://vsco.co/jonathangodoy/media/5b2c92b2e112534b6716cc7e"));
         testRipper(ripper);
     }
     

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.67";
+    private static final String DEFAULT_VERSION = "1.7.68";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/TsuminoRipper.java
Patch:
@@ -47,7 +47,7 @@ private JSONArray getPageUrls() {
         try {
             // This sessionId will expire and need to be replaced
             cookies.put("ASP.NET_SessionId","c4rbzccf0dvy3e0cloolmlkq");
-            Document doc = Jsoup.connect(postURL).data("q", getAlbumID()).userAgent(USER_AGENT).cookies(cookies).referrer("http://www.tsumino.com/Read/View/" + getAlbumID()).post();
+            Document doc = Jsoup.connect(postURL).data("q", getAlbumID()).userAgent(USER_AGENT).cookies(cookies).referrer("http://www.tsumino.com/Read/View/" + getAlbumID()).get();
             String jsonInfo = doc.html().replaceAll("<html>","").replaceAll("<head></head>", "").replaceAll("<body>", "").replaceAll("</body>", "")
                     .replaceAll("</html>", "").replaceAll("\n", "");
             JSONObject json = new JSONObject(jsonInfo);

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -86,7 +86,6 @@ public String getAlbumTitle(URL url) throws MalformedURLException {
     @Override
     public boolean canRip(URL url) {
         for (ChanSite _chanSite : explicit_domains) {
-            LOGGER.info(_chanSite.domains);
             if (_chanSite.domains.contains(url.getHost())) {
                 return true;
             }

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -154,6 +154,7 @@ public final class MainWindow implements Runnable, RipStatusHandler {
             "fi_FI",
             "fr_CH",
             "in_ID",
+            "it_IT",
             "kr_KR",
             "nl_NL",
             "pl_PL",

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -154,6 +154,7 @@ public final class MainWindow implements Runnable, RipStatusHandler {
             "fi_FI",
             "fr_CH",
             "in_ID",
+            "it_IT",
             "kr_KR",
             "nl_NL",
             "pl_PL",

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.66";
+    private static final String DEFAULT_VERSION = "1.7.67";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -214,6 +214,7 @@ public void run() {
                 }
                 byte[] data = new byte[1024 * 256];
                 int bytesRead;
+                boolean shouldSkipFileDownload = huc.getContentLength() / 10000000 >= 10;
                 while ( (bytesRead = bis.read(data)) != -1) {
                     try {
                         observer.stopCheck();
@@ -228,7 +229,7 @@ public void run() {
                         observer.sendUpdate(STATUS.COMPLETED_BYTES, bytesDownloaded);
                     }
                     // If this is a test and we're downloading a large file
-                    if (AbstractRipper.isThisATest() && bytesTotal / 10000000 >= 10) {
+                    if (AbstractRipper.isThisATest() && shouldSkipFileDownload) {
                         logger.debug("Not downloading whole file because it is over 10mb and this is a test");
                         bis.close();
                         fos.close();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/XhamsterRipperTest.java
Patch:
@@ -35,7 +35,7 @@ public void testGetGID() throws IOException {
     }
 
     public void testGetNextPage() throws IOException {
-        XhamsterRipper ripper = new XhamsterRipper(new URL("https://pt.xhamster.com/photos/gallery/silvana-7105696"));
+        XhamsterRipper ripper = new XhamsterRipper(new URL("https://pt.xhamster.com/photos/gallery/mega-compil-6-10728626"));
         Document doc = ripper.getFirstPage();
         try {
             ripper.getNextPage(doc);

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -214,6 +214,7 @@ public void run() {
                 }
                 byte[] data = new byte[1024 * 256];
                 int bytesRead;
+                boolean shouldSkipFileDownload = huc.getContentLength() / 10000000 >= 10;
                 while ( (bytesRead = bis.read(data)) != -1) {
                     try {
                         observer.stopCheck();
@@ -228,7 +229,7 @@ public void run() {
                         observer.sendUpdate(STATUS.COMPLETED_BYTES, bytesDownloaded);
                     }
                     // If this is a test and we're downloading a large file
-                    if (AbstractRipper.isThisATest() && bytesTotal / 10000000 >= 10) {
+                    if (AbstractRipper.isThisATest() && shouldSkipFileDownload) {
                         logger.debug("Not downloading whole file because it is over 10mb and this is a test");
                         bis.close();
                         fos.close();

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -155,6 +155,7 @@ public List<String> getURLsFromPage(Document doc) {
               } catch (IOException e) {
                   LOGGER.error("Was unable to load page " + pageWithImageUrl);
               }
+          }
         } else {
             result.add(doc.select("div.player-container > a").attr("href"));
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.65";
+    private static final String DEFAULT_VERSION = "1.7.66";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VscoRipperTest.java
Patch:
@@ -11,7 +11,7 @@ public class VscoRipperTest extends RippersTest {
      * @throws IOException 
      */
     public void testSingleImageRip() throws IOException {
-        VscoRipper ripper = new VscoRipper(new URL("https://vsco.co/minijello/media/571cd612542220261a123441"));
+        VscoRipper ripper = new VscoRipper(new URL("https://vsco.co/jonathangodoy/media/5b2c92b2e112534b6716cc7e"));
         testRipper(ripper);
     }
     

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -129,6 +129,9 @@ private List<String> getMediaFromPage(Document doc) {
         for (Element el : doc.select("source[label=HD]")) {
             results.add("https:" + el.attr("src"));
         }
+        for (Element el : doc.select("source[label=SD]")) {
+            results.add("https:" + el.attr("src"));
+        }
         return results;
     }
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EromeRipperTest.java
Patch:
@@ -33,7 +33,7 @@ public void testPageContainsAlbums() throws IOException {
     }
 
     public void testRip() throws IOException {
-        URL url = new URL("https://www.erome.com/a/4FqeUxil");
+        URL url = new URL("https://www.erome.com/a/vlefBdsg");
         EromeRipper ripper = new EromeRipper(url);
         testRipper(ripper);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EightmusesRipperTest.java
Patch:
@@ -21,7 +21,6 @@ public void testEightmusesAlbum() throws IOException {
     public void testGID() throws IOException {
         EightmusesRipper ripper = new EightmusesRipper(new URL("https://www.8muses.com/comix/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore"));
         assertEquals("Affect3D-Comics", ripper.getGID(new URL("https://www.8muses.com/comics/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore")));
-        assertEquals("Affect3D-Comics", ripper.getSubdir("After Party - Issue 1"));
     }
 
     public void testGetSubdir() throws IOException {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/RulePornRipperTest.java
Patch:
@@ -3,17 +3,17 @@
 import java.io.IOException;
 import java.net.URL;
 
-import com.rarchives.ripme.ripper.rippers.Tubex6Ripper;
+import com.rarchives.ripme.ripper.rippers.RulePornRipper;
 
 public class RulePornRipperTest extends RippersTest {
     public void testRip() throws IOException {
-        Tubex6Ripper ripper = new Tubex6Ripper(new URL("https://ruleporn.com/are-you-going-to-fill-my-lil-pussy-up/"));
+        RulePornRipper ripper = new RulePornRipper(new URL("https://ruleporn.com/are-you-going-to-fill-my-lil-pussy-up/"));
         testRipper(ripper);
     }
 
     public void testGetGID() throws IOException {
         URL url = new URL("https://ruleporn.com/are-you-going-to-fill-my-lil-pussy-up/");
-        Tubex6Ripper ripper = new Tubex6Ripper(url);
+        RulePornRipper ripper = new RulePornRipper(url);
         assertEquals("are-you-going-to-fill-my-lil-pussy-up", ripper.getGID(url));
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.64";
+    private static final String DEFAULT_VERSION = "1.7.65";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -113,9 +113,9 @@ public boolean canRip(URL url) {
 
     @Override
     public Document getNextPage(Document doc) throws IOException {
-        if (doc.select("a.next").first() != null) {
-            if (doc.select("a.next").first().attr("href").startsWith("http")) {
-                return Http.url(doc.select("a.next").first().attr("href")).get();
+        if (doc.select("a[data-page=next]").first() != null) {
+            if (doc.select("a[data-page=next]").first().attr("href").startsWith("http")) {
+                return Http.url(doc.select("a[data-page=next]").first().attr("href")).get();
             }
         }
         throw new IOException("No more pages");

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -69,9 +69,9 @@ public boolean canRip(URL url) {
 
     @Override
     public Document getNextPage(Document doc) throws IOException {
-        if (doc.select("a.next").first() != null) {
-            if (doc.select("a.next").first().attr("href").startsWith("http")) {
-                return Http.url(doc.select("a.next").first().attr("href")).get();
+        if (doc.select("a[data-page=next]").first() != null) {
+            if (doc.select("a[data-page=next]").first().attr("href").startsWith("http")) {
+                return Http.url(doc.select("a[data-page=next]").first().attr("href")).get();
             }
         }
         throw new IOException("No more pages");

File: src/main/java/com/rarchives/ripme/ripper/rippers/HbrowseRipper.java
Patch:
@@ -32,7 +32,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("http://www.hbrowse.com/(\\d+)/[a-zA-Z0-9]*");
+            Pattern p = Pattern.compile("https?://www.hbrowse.com/(\\d+)/[a-zA-Z0-9]*");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);
@@ -45,7 +45,7 @@ public String getGID(URL url) throws MalformedURLException {
         public Document getFirstPage() throws IOException {
             // "url" is an instance field of the superclass
             Document tempDoc = Http.url(url).get();
-            return Http.url(tempDoc.select("td[id=pageTopHome] > a[title=view thumbnails (top)]").attr("href")).get();
+            return Http.url("https://www.hbrowse.com" + tempDoc.select("td[id=pageTopHome] > a[title=view thumbnails (top)]").attr("href")).get();
         }
 
         @Override
@@ -66,7 +66,7 @@ public List<String> getURLsFromPage(Document doc) {
             List<String> result = new ArrayList<String>();
             for (Element el : doc.select("table > tbody > tr > td > a > img")) {
                 String imageURL = el.attr("src").replace("/zzz", "");
-                result.add(imageURL);
+                result.add("https://www.hbrowse.com" + imageURL);
             }
                 return result;
         }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/SpankBangRipperTest.java
Patch:
@@ -14,8 +14,6 @@ public void testSpankBangVideo() throws IOException {
         if (Utils.getConfigBoolean("test.run_flaky_tests", false)) {
             SpankbangRipper ripper = new SpankbangRipper(new URL("https://spankbang.com/2a7fh/video/mdb901"));  //most popular video of all time on site; should stay up
             testRipper(ripper);
-        } else {
-            LOGGER.info("Skipping SpankBang ripper test");
         }
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/ViewcomicRipper.java
Patch:
@@ -69,7 +69,7 @@ public Document getFirstPage() throws IOException {
         @Override
         public List<String> getURLsFromPage(Document doc) {
             List<String> result = new ArrayList<String>();
-                for (Element el : doc.select("div.pinbin-copy > a > img")) {
+                for (Element el : doc.select("div.separator > a > img")) {
                     result.add(el.attr("src"));
                 }
             return result;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ViewcomicRipper.java
Patch:
@@ -69,7 +69,7 @@ public Document getFirstPage() throws IOException {
         @Override
         public List<String> getURLsFromPage(Document doc) {
             List<String> result = new ArrayList<String>();
-                for (Element el : doc.select("div.pinbin-copy > a > img")) {
+                for (Element el : doc.select("div.separator > a > img")) {
                     result.add(el.attr("src"));
                 }
             return result;

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -1078,7 +1078,7 @@ private void appendLog(final String text, final Color color) {
      * @param line the string to log
      * @param color the color of the line for the GUI log
      */
-    public void dobuleLog(String line, Color color) {
+    public void displayAndLogError(String line, Color color) {
         appendLog(line, color);
         LOGGER.error(line);
     }
@@ -1255,7 +1255,7 @@ public void actionPerformed(ActionEvent event) {
                                 queueListModel.add(queueListModel.size(), realURL);
                                 ripTextfield.setText("");
                             } else {
-                                dobuleLog("Can't find ripper for " + realURL, Color.RED);
+                                displayAndLogError("Can't find ripper for " + realURL, Color.RED);
                             }
                         }
                     }

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -1238,7 +1238,8 @@ public void actionPerformed(ActionEvent event) {
                                 queueListModel.add(queueListModel.size(), realURL);
                                 ripTextfield.setText("");
                             } else {
-                                LOGGER.error("Can't find ripper for " +realURL);
+                                appendLog("Can't find ripper for " + realURL, Color.RED);
+                                LOGGER.error("Can't find ripper for " + realURL);
                             }
                         }
                     }

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -1238,7 +1238,8 @@ public void actionPerformed(ActionEvent event) {
                                 queueListModel.add(queueListModel.size(), realURL);
                                 ripTextfield.setText("");
                             } else {
-                                LOGGER.error("Can't find ripper for " +realURL);
+                                appendLog("Can't find ripper for " + realURL, Color.RED);
+                                LOGGER.error("Can't find ripper for " + realURL);
                             }
                         }
                     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,7 @@
 public class MotherlessRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     public void testMotherlessAlbumRip() throws IOException {
-        MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G1E5C971"));
+        MotherlessRipper ripper = new MotherlessRipper(new URL("https://motherless.com/G1168D90"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.62";
+    private static final String DEFAULT_VERSION = "1.7.63";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -300,7 +300,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      Prefix to prepend to the saved filename.
      * @param subdirectory
      *      Sub-directory of the working directory to save the images to.
-     * @return True on success, false on failure.
+     * @return True on success, flase on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix, String subdirectory) {
         return addURLToDownload(url, prefix, subdirectory, null, null, null);
@@ -317,7 +317,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      URL to download
      * @param prefix
      *      Text to append to saved filename.
-     * @return True on success, false on failure.
+     * @return True on success, flase on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix) {
         // Use empty subdirectory

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -300,7 +300,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      Prefix to prepend to the saved filename.
      * @param subdirectory
      *      Sub-directory of the working directory to save the images to.
-     * @return True on success, false on failure.
+     * @return True on success, flase on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix, String subdirectory) {
         return addURLToDownload(url, prefix, subdirectory, null, null, null);
@@ -317,7 +317,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      URL to download
      * @param prefix
      *      Text to append to saved filename.
-     * @return True on success, false on failure.
+     * @return True on success, flase on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix) {
         // Use empty subdirectory

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -73,7 +73,7 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        Elements videos = doc.select("source#mp4Source");
+        Elements videos = doc.select("source");
         String vidUrl = videos.first().attr("src");
         if (vidUrl.startsWith("//")) {
             vidUrl = "http:" + vidUrl;
@@ -95,9 +95,9 @@ public static String getVideoURL(URL url) throws IOException {
         url = new URL(url.toExternalForm().replace("/gifs/detail", ""));
 
         Document doc = Http.url(url).get();
-        Elements videos = doc.select("source#mp4Source");
+        Elements videos = doc.select("source");
         if (videos.isEmpty()) {
-            throw new IOException("Could not find source#mp4source at " + url);
+            throw new IOException("Could not find source at " + url);
         }
         String vidUrl = videos.first().attr("src");
         if (vidUrl.startsWith("//")) {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -11,15 +11,15 @@ public class GfycatRipperTest extends RippersTest {
      * Rips correctly formatted URL directly from Gfycat
      * @throws IOException 
      */
-    public void GfycatGoodURL() throws IOException{
+    public void testGfycatGoodURL() throws IOException{
         GfycatRipper ripper = new GfycatRipper(new URL("https://gfycat.com/TemptingExcellentIchthyosaurs"));
         testRipper(ripper);
     }
     /**
      * Rips badly formatted URL directly from Gfycat
      * @throws IOException 
      */
-    public void GfycatBadURL() throws IOException {
+    public void testGfycatBadURL() throws IOException {
         GfycatRipper ripper  = new GfycatRipper(new URL("https://gfycat.com/gifs/detail/limitedtestyamericancrow"));
         testRipper(ripper);
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -95,9 +95,9 @@ public static String getVideoURL(URL url) throws IOException {
         url = new URL(url.toExternalForm().replace("/gifs/detail", ""));
 
         Document doc = Http.url(url).get();
-        Elements videos = doc.select("source#mp4Source");
+        Elements videos = doc.select("source");
         if (videos.isEmpty()) {
-            throw new IOException("Could not find source#mp4source at " + url);
+            throw new IOException("Could not find source at " + url);
         }
         String vidUrl = videos.first().attr("src");
         if (vidUrl.startsWith("//")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/GfycatRipper.java
Patch:
@@ -73,7 +73,7 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        Elements videos = doc.select("source#mp4Source");
+        Elements videos = doc.select("source");
         String vidUrl = videos.first().attr("src");
         if (vidUrl.startsWith("//")) {
             vidUrl = "http:" + vidUrl;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.61";
+    private static final String DEFAULT_VERSION = "1.7.62";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -537,7 +537,7 @@ public void setValueAt(Object value, int row, int col) {
         configPreferMp4 = addNewCheckbox(rb.getString("prefer.mp4.over.gif"),"prefer.mp4", false);
         configWindowPosition = addNewCheckbox(rb.getString("restore.window.position"), "window.position", true);
         configURLHistoryCheckbox = addNewCheckbox(rb.getString("remember.url.history"), "remember.url_history", true);
-        configUrlFileChooserButton = new JButton("Download url list");
+        configUrlFileChooserButton = new JButton(rb.getString("download.url.list"));
 
         configLogLevelCombobox = new JComboBox<>(new String[] {"Log level: Error", "Log level: Warn", "Log level: Info", "Log level: Debug"});
         configSelectLangComboBox = new JComboBox<>(supportedLanges);
@@ -637,6 +637,8 @@ private void changeLocale() {
         configSaveAlbumTitles.setText(rb.getString("save.album.titles"));
         configClipboardAutorip.setText(rb.getString("autorip.from.clipboard"));
         configSaveDescriptions.setText(rb.getString("save.descriptions"));
+        configUrlFileChooserButton.setText(rb.getString("download.url.list"));
+        configSaveDirButton.setText(rb.getString("select.save.dir") + "...");
         configPreferMp4.setText(rb.getString("prefer.mp4.over.gif"));
         configWindowPosition.setText(rb.getString("restore.window.position"));
         configURLHistoryCheckbox.setText(rb.getString("remember.url.history"));

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -537,7 +537,7 @@ public void setValueAt(Object value, int row, int col) {
         configPreferMp4 = addNewCheckbox(rb.getString("prefer.mp4.over.gif"),"prefer.mp4", false);
         configWindowPosition = addNewCheckbox(rb.getString("restore.window.position"), "window.position", true);
         configURLHistoryCheckbox = addNewCheckbox(rb.getString("remember.url.history"), "remember.url_history", true);
-        configUrlFileChooserButton = new JButton("Download url list");
+        configUrlFileChooserButton = new JButton(rb.getString("download.url.list"));
 
         configLogLevelCombobox = new JComboBox<>(new String[] {"Log level: Error", "Log level: Warn", "Log level: Info", "Log level: Debug"});
         configSelectLangComboBox = new JComboBox<>(supportedLanges);
@@ -637,6 +637,8 @@ private void changeLocale() {
         configSaveAlbumTitles.setText(rb.getString("save.album.titles"));
         configClipboardAutorip.setText(rb.getString("autorip.from.clipboard"));
         configSaveDescriptions.setText(rb.getString("save.descriptions"));
+        configUrlFileChooserButton.setText(rb.getString("download.url.list"));
+        configSaveDirButton.setText(rb.getString("select.save.dir") + "...");
         configPreferMp4.setText(rb.getString("prefer.mp4.over.gif"));
         configWindowPosition.setText(rb.getString("restore.window.position"));
         configURLHistoryCheckbox.setText(rb.getString("remember.url.history"));

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -300,7 +300,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      Prefix to prepend to the saved filename.
      * @param subdirectory
      *      Sub-directory of the working directory to save the images to.
-     * @return True on success, flase on failure.
+     * @return True on success, false on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix, String subdirectory) {
         return addURLToDownload(url, prefix, subdirectory, null, null, null);
@@ -317,7 +317,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      URL to download
      * @param prefix
      *      Text to append to saved filename.
-     * @return True on success, flase on failure.
+     * @return True on success, false on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix) {
         // Use empty subdirectory

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -47,7 +47,7 @@ public abstract class AbstractRipper
     // Everytime addUrlToDownload skips a already downloaded url this increases by 1
     public int alreadyDownloadedUrls = 0;
     private boolean shouldStop = false;
-    private boolean thisIsATest = false;
+    private static boolean thisIsATest = false;
 
     public void stop() {
         shouldStop = true;
@@ -611,7 +611,7 @@ public void markAsTest() {
         LOGGER.debug("THIS IS A TEST RIP");
         thisIsATest = true;
     }
-    protected boolean isThisATest() {
+    protected static boolean isThisATest() {
         return thisIsATest;
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/HitomiRipper.java
Patch:
@@ -59,7 +59,7 @@ public List<String> getURLsFromPage(Document doc) {
         LOGGER.info(json);
         JSONArray json_data = new JSONArray(json);
         for (int i = 0; i < json_data.length(); i++) {
-            result.add("https://0a.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));
+            result.add("https://ba.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));
         }
 
         return result;

File: src/main/java/com/rarchives/ripme/ripper/rippers/HitomiRipper.java
Patch:
@@ -59,7 +59,7 @@ public List<String> getURLsFromPage(Document doc) {
         LOGGER.info(json);
         JSONArray json_data = new JSONArray(json);
         for (int i = 0; i < json_data.length(); i++) {
-            result.add("https://0a.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));
+            result.add("https://ba.hitomi.la/galleries/" + galleryId + "/" + json_data.getJSONObject(i).getString("name"));
         }
 
         return result;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.60";
+    private static final String DEFAULT_VERSION = "1.7.61";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/JabArchivesRipper.java
Patch:
@@ -33,7 +33,7 @@ public String getDomain() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://jabarchives.com/main/view/([a-zA-Z0-9_]+).*$");
+        Pattern p = Pattern.compile("^https?://(?:www\\.)?jabarchives.com/main/view/([a-zA-Z0-9_]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             // Return the text contained between () in the regex

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -224,7 +224,6 @@ private boolean saveText(URL url, String subdirectory, String text, int index, S
             if (!subdirectory.equals("")) { // Not sure about this part
                 subdirectory = File.separator + subdirectory;
             }
-            // TODO Get prefix working again, probably requires reworking a lot of stuff! (Might be fixed now)
             saveFileAs = new File(
                     workingDir.getCanonicalPath()
                     + subdirectory

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.59";
+    private static final String DEFAULT_VERSION = "1.7.60";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -191,12 +191,9 @@ public String getPrefixShort(int index) {
     }
 
     private String deobfuscateJSON(String obfuscatedString) {
-        LOGGER.info("obfuscatedString: " + obfuscatedString);
         StringBuilder deobfuscatedString = new StringBuilder();
         // The first char in one of 8muses obfuscated strings is always ! so we replace it
         for (char ch : obfuscatedString.replaceFirst("!", "").toCharArray()){
-            LOGGER.info(ch + ":" + deobfuscateChar(ch));
-            LOGGER.info((int) ch + ":" + (int) deobfuscateChar(ch).charAt(0));
             deobfuscatedString.append(deobfuscateChar(ch));
         }
         return deobfuscatedString.toString();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ArtStationRipperTest.java
Patch:
@@ -23,6 +23,7 @@ public void testArtStationProjects() throws IOException {
     public void testArtStationUserProfiles() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("https://www.artstation.com/heitoramatsu"));
+        contentURLs.add(new URL("https://artstation.com/kuvshinov_ilya"));
         contentURLs.add(new URL("http://artstation.com/givemeapiggy"));
         for (URL url : contentURLs) {
             ArtStationRipper ripper = new ArtStationRipper(url);

File: src/main/java/com/rarchives/ripme/ripper/rippers/JabArchivesRipper.java
Patch:
@@ -57,7 +57,7 @@ public Document getNextPage(Document doc) throws IOException {
         if (hrefs.isEmpty()) {
             throw new IOException("No more pages");
         }
-        String nextUrl = "http://jabarchives.com" + hrefs.first().attr("href");
+        String nextUrl = "https://jabarchives.com" + hrefs.first().attr("href");
         sleep(500);
         return Http.url(nextUrl).get();
     }
@@ -66,7 +66,7 @@ public Document getNextPage(Document doc) throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<String>();
         for (Element el : doc.select("#contentMain img")) {
-            result.add("http://jabarchives.com" + el.attr("src").replace("thumb", "large"));
+            result.add("https://jabarchives.com" + el.attr("src").replace("thumb", "large"));
         }
         return result;
     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.58";
+    private static final String DEFAULT_VERSION = "1.7.59";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ManganeloRipper.java
Patch:
@@ -99,7 +99,7 @@ public List<String> getURLsFromPage(Document doc) {
             Collections.reverse(urlsToGrab);
 
             for (String url : urlsToGrab) {
-                result.addAll(getURLsFromChap("https:" + url));
+                result.addAll(getURLsFromChap(url));
             }
         } else if (url.toExternalForm().contains("/chapter/")) {
             result.addAll(getURLsFromChap(doc));

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -105,7 +105,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://www.erome.com/a/([a-zA-Z0-9]*)/?$");
+        Pattern p = Pattern.compile("^https?://www.erome.com/[ai]/([a-zA-Z0-9]*)/?$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/EromeRipper.java
Patch:
@@ -105,7 +105,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://www.erome.com/a/([a-zA-Z0-9]*)/?$");
+        Pattern p = Pattern.compile("^https?://www.erome.com/[ai]/([a-zA-Z0-9]*)/?$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/ManganeloRipper.java
Patch:
@@ -99,7 +99,7 @@ public List<String> getURLsFromPage(Document doc) {
             Collections.reverse(urlsToGrab);
 
             for (String url : urlsToGrab) {
-                result.addAll(getURLsFromChap("https:" + url));
+                result.addAll(getURLsFromChap(url));
             }
         } else if (url.toExternalForm().contains("/chapter/")) {
             result.addAll(getURLsFromChap(doc));

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -299,7 +299,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      Prefix to prepend to the saved filename.
      * @param subdirectory
      *      Sub-directory of the working directory to save the images to.
-     * @return True on success, flase on failure.
+     * @return True on success, false on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix, String subdirectory) {
         return addURLToDownload(url, prefix, subdirectory, null, null, null);
@@ -316,7 +316,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      URL to download
      * @param prefix
      *      Text to append to saved filename.
-     * @return True on success, flase on failure.
+     * @return True on success, false on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix) {
         // Use empty subdirectory

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -299,7 +299,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      Prefix to prepend to the saved filename.
      * @param subdirectory
      *      Sub-directory of the working directory to save the images to.
-     * @return True on success, flase on failure.
+     * @return True on success, false on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix, String subdirectory) {
         return addURLToDownload(url, prefix, subdirectory, null, null, null);
@@ -316,7 +316,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
      *      URL to download
      * @param prefix
      *      Text to append to saved filename.
-     * @return True on success, flase on failure.
+     * @return True on success, false on failure.
      */
     protected boolean addURLToDownload(URL url, String prefix) {
         // Use empty subdirectory

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -71,10 +71,7 @@ public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<Strin
             try (FileWriter fw = new FileWriter(urlFile, true)) {
                 fw.write(url.toExternalForm());
                 fw.write("\n");
-
-                RipStatusMessage msg = new RipStatusMessage(STATUS.DOWNLOAD_COMPLETE, urlFile);
                 itemsCompleted.put(url, new File(urlFile));
-                observer.update(this, msg);
             } catch (IOException e) {
                 LOGGER.error("Error while writing to " + urlFile, e);
             }

File: src/main/java/com/rarchives/ripme/ripper/rippers/DeviantartRipper.java
Patch:
@@ -260,13 +260,13 @@ public List<String> getURLsFromJSON(JSONObject json) {
             if (doc.html().contains("ismature")) {
                 LOGGER.info("Downloading nsfw image");
                 String nsfwImage = getFullsizedNSFWImage(doc.select("span").attr("href"));
-                if (nsfwImage != null) {
+                if (nsfwImage != null && nsfwImage.startsWith("http")) {
                     imageURLs.add(nsfwImage);
                 }
             }
             try {
                 String imageURL = doc.select("span").first().attr("data-super-full-img");
-                if (!imageURL.isEmpty()) {
+                if (!imageURL.isEmpty() && imageURL.startsWith("http")) {
                     imageURLs.add(imageURL);
                 }
             } catch (NullPointerException e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/DeviantartRipper.java
Patch:
@@ -260,13 +260,13 @@ public List<String> getURLsFromJSON(JSONObject json) {
             if (doc.html().contains("ismature")) {
                 LOGGER.info("Downloading nsfw image");
                 String nsfwImage = getFullsizedNSFWImage(doc.select("span").attr("href"));
-                if (nsfwImage != null) {
+                if (nsfwImage != null && nsfwImage.startsWith("http")) {
                     imageURLs.add(nsfwImage);
                 }
             }
             try {
                 String imageURL = doc.select("span").first().attr("data-super-full-img");
-                if (!imageURL.isEmpty()) {
+                if (!imageURL.isEmpty() && imageURL.startsWith("http")) {
                     imageURLs.add(imageURL);
                 }
             } catch (NullPointerException e) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.57";
+    private static final String DEFAULT_VERSION = "1.7.58";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ManganeloRipper.java
Patch:
@@ -99,7 +99,7 @@ public List<String> getURLsFromPage(Document doc) {
             Collections.reverse(urlsToGrab);
 
             for (String url : urlsToGrab) {
-                result.addAll(getURLsFromChap(url));
+                result.addAll(getURLsFromChap("https:" + url));
             }
         } else if (url.toExternalForm().contains("/chapter/")) {
             result.addAll(getURLsFromChap(doc));

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -128,9 +128,9 @@ public static void updateProgramGUI(JLabel configUpdateLabel) {
             logger.info("Found newer version: " + latestVersion);
             int result = JOptionPane.showConfirmDialog(
                     null,
-                    "<html><font color=\"green\">New version (" + latestVersion + ") is available!</font>"
-                    + "<br><br>Recent changes:" + changeList
-                    + "<br><br>Do you want to download and run the newest version?</html>",
+                    String.format("<html><font color=\"green\">New version (%s) is available!</font>"
+                            + "<br><br>Recent changes: %s"
+                            + "<br><br>Do you want to download and run the newest version?</html>", latestVersion, changeList.replaceAll("\n", "")),
                     "RipMe Updater",
                     JOptionPane.YES_NO_OPTION);
             if (result != JOptionPane.YES_OPTION) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -128,9 +128,9 @@ public static void updateProgramGUI(JLabel configUpdateLabel) {
             logger.info("Found newer version: " + latestVersion);
             int result = JOptionPane.showConfirmDialog(
                     null,
-                    "<html><font color=\"green\">New version (" + latestVersion + ") is available!</font>"
-                    + "<br><br>Recent changes:" + changeList
-                    + "<br><br>Do you want to download and run the newest version?</html>",
+                    String.format("<html><font color=\"green\">New version (%s) is available!</font>"
+                            + "<br><br>Recent changes: %s"
+                            + "<br><br>Do you want to download and run the newest version?</html>", latestVersion, changeList.replaceAll("\n", "")),
                     "RipMe Updater",
                     JOptionPane.YES_NO_OPTION);
             if (result != JOptionPane.YES_OPTION) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ManganeloRipper.java
Patch:
@@ -99,7 +99,7 @@ public List<String> getURLsFromPage(Document doc) {
             Collections.reverse(urlsToGrab);
 
             for (String url : urlsToGrab) {
-                result.addAll(getURLsFromChap(url));
+                result.addAll(getURLsFromChap("https:" + url));
             }
         } else if (url.toExternalForm().contains("/chapter/")) {
             result.addAll(getURLsFromChap(doc));

File: src/main/java/com/rarchives/ripme/ripper/rippers/HitomiRipper.java
Patch:
@@ -47,7 +47,7 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public Document getFirstPage() throws IOException {
         // if we go to /GALLERYID.js we get a nice json array of all images in the gallery
-        return Http.url(new URL(url.toExternalForm().replaceAll(".html", ".js"))).ignoreContentType().get();
+        return Http.url(new URL(url.toExternalForm().replaceAll("hitomi", "ltn.hitomi").replaceAll(".html", ".js"))).ignoreContentType().get();
     }
 
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/DeviantartRipper.java
Patch:
@@ -122,7 +122,7 @@ public String getGID(URL url) throws MalformedURLException {
     }
 
     private String getUsernameFromURL(String u) {
-        Pattern p = Pattern.compile("^https?://www\\.deviantart\\.com/([a-zA-Z0-9\\-]+)/gallery/\\S+");
+        Pattern p = Pattern.compile("^https?://www\\.deviantart\\.com/([a-zA-Z0-9\\-]+)/gallery/?(\\S+)?");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -125,7 +125,6 @@ private String getApiURL(Long maxID) {
                         .append("&include_entities=true")
                         .append("&exclude_replies=true")
                         .append("&trim_user=true")
-                        .append("&include_rts=true")
                         .append("&count=" + 200)
                         .append("&tweet_mode=extended");
                 break;

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -125,7 +125,6 @@ private String getApiURL(Long maxID) {
                         .append("&include_entities=true")
                         .append("&exclude_replies=true")
                         .append("&trim_user=true")
-                        .append("&include_rts=true")
                         .append("&count=" + 200)
                         .append("&tweet_mode=extended");
                 break;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.55";
+    private static final String DEFAULT_VERSION = "1.7.56";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DeviantartRipperTest.java
Patch:
@@ -7,18 +7,18 @@
 
 public class DeviantartRipperTest extends RippersTest {
     public void testDeviantartAlbum() throws IOException {
-        DeviantartRipper ripper = new DeviantartRipper(new URL("http://airgee.deviantart.com/gallery/"));
+        DeviantartRipper ripper = new DeviantartRipper(new URL("https://www.deviantart.com/airgee/gallery/"));
         testRipper(ripper);
     }
 
     public void testDeviantartNSFWAlbum() throws IOException {
         // NSFW gallery
-        DeviantartRipper ripper = new DeviantartRipper(new URL("http://faterkcx.deviantart.com/gallery/"));
+        DeviantartRipper ripper = new DeviantartRipper(new URL("https://www.deviantart.com/faterkcx/gallery/"));
         testRipper(ripper);
     }
 
     public void testGetGID() throws IOException {
-        URL url = new URL("http://airgee.deviantart.com/gallery/");
+        URL url = new URL("https://www.deviantart.com/airgee/gallery/");
         DeviantartRipper ripper = new DeviantartRipper(url);
         assertEquals("airgee", ripper.getGID(url));
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/DeviantartRipperTest.java
Patch:
@@ -7,18 +7,18 @@
 
 public class DeviantartRipperTest extends RippersTest {
     public void testDeviantartAlbum() throws IOException {
-        DeviantartRipper ripper = new DeviantartRipper(new URL("http://airgee.deviantart.com/gallery/"));
+        DeviantartRipper ripper = new DeviantartRipper(new URL("https://www.deviantart.com/airgee/gallery/"));
         testRipper(ripper);
     }
 
     public void testDeviantartNSFWAlbum() throws IOException {
         // NSFW gallery
-        DeviantartRipper ripper = new DeviantartRipper(new URL("http://faterkcx.deviantart.com/gallery/"));
+        DeviantartRipper ripper = new DeviantartRipper(new URL("https://www.deviantart.com/faterkcx/gallery/"));
         testRipper(ripper);
     }
 
     public void testGetGID() throws IOException {
-        URL url = new URL("http://airgee.deviantart.com/gallery/");
+        URL url = new URL("https://www.deviantart.com/airgee/gallery/");
         DeviantartRipper ripper = new DeviantartRipper(url);
         assertEquals("airgee", ripper.getGID(url));
     }

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -130,7 +130,7 @@ public void run() {
 
                 int statusCode = huc.getResponseCode();
                 logger.debug("Status code: " + statusCode);
-                if (statusCode != 206 && observer.tryResumeDownload()) {
+                if (statusCode != 206 && observer.tryResumeDownload() && saveAs.exists()) {
                     // TODO find a better way to handle servers that don't support resuming downloads then just erroring out
                     throw new IOException("Server doesn't support resuming downloads");
                 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GfycatRipperTest.java
Patch:
@@ -1,6 +1,6 @@
 package com.rarchives.ripme.tst.ripper.rippers;
 
-import com.rarchives.ripme.ripper.rippers.video.GfycatRipper;
+import com.rarchives.ripme.ripper.rippers.GfycatRipper;
 import java.io.IOException;
 import java.net.URL;
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/RedditRipperTest.java
Patch:
@@ -5,7 +5,6 @@
 import java.net.URL;
 
 import com.rarchives.ripme.ripper.rippers.RedditRipper;
-import com.rarchives.ripme.ripper.rippers.video.GfycatRipper;
 
 public class RedditRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/253 - Disabled tests: RedditRipperTest#testRedditSubreddit*Rip is flaky

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.54";
+    private static final String DEFAULT_VERSION = "1.7.55";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -97,7 +97,7 @@ public void rip() throws IOException {
 
         while (doc != null) {
             if (alreadyDownloadedUrls >= Utils.getConfigInteger("history.end_rip_after_already_seen", 1000000000) && !isThisATest()) {
-                sendUpdate(STATUS.DOWNLOAD_COMPLETE, "Already seen the last " + alreadyDownloadedUrls + " images ending rip");
+                sendUpdate(STATUS.DOWNLOAD_COMPLETE_HISTORY, "Already seen the last " + alreadyDownloadedUrls + " images ending rip");
                 break;
             }
             List<String> imageURLs = getURLsFromPage(doc);

File: src/main/java/com/rarchives/ripme/ui/RipStatusMessage.java
Patch:
@@ -10,6 +10,7 @@ public enum STATUS {
         DOWNLOAD_STARTED("Download Started"),
         DOWNLOAD_COMPLETE("Download Complete"),
         DOWNLOAD_ERRORED("Download Errored"),
+        DOWNLOAD_COMPLETE_HISTORY("Download Complete History"),
         RIP_COMPLETE("Rip Complete"),
         DOWNLOAD_WARN("Download problem"),
         TOTAL_BYTES("Total bytes"),

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -471,7 +471,7 @@ private String getQHash(Document doc) {
             return null;
         }
         if (!rippingTag) {
-            Pattern jsP = Pattern.compile("m=\"9ca88e465c3f866a76f7adee3871bdd8\",g=Object\\(c.b\\)\\(\\{pageSize:p.a,pagesToPreload:0,getState:function\\(e,t\\)\\{var o;return null===\\(o=e.profilePosts.byUserId.get\\(t\\)\\)\\|\\|void 0===o\\?void 0:o\\.pagination},queryId:.([a-zA-Z0-9]+)");
+            Pattern jsP = Pattern.compile("byUserId\\.get\\(t\\)\\)\\|\\|void 0===r\\?void 0:r\\.pagination},queryId:.([a-zA-Z0-9]+)");
             Matcher m = jsP.matcher(sb.toString());
             if (m.find()) {
                 return m.group(1);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.53";
+    private static final String DEFAULT_VERSION = "1.7.54";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractJSONRipper.java
Patch:
@@ -69,7 +69,7 @@ public void rip() throws IOException {
                 }
             }
 
-            if (imageURLs.isEmpty()) {
+            if (imageURLs.isEmpty() && !hasASAPRipping()) {
                 throw new IOException("No images found at " + this.url);
             }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -249,7 +249,9 @@ public String getAfter(JSONObject json) {
     @Override
     public List<String> getURLsFromJSON(JSONObject json) {
         List<String> imageURLs = new ArrayList<>();
-        nextPageID = getAfter(json);
+        if (!url.toExternalForm().contains("/p/")) {
+            nextPageID = getAfter(json);
+        }
 
         // get the rhx_gis value so we can get the next page later on
         if (rhx_gis == null) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.52";
+    private static final String DEFAULT_VERSION = "1.7.53";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ZizkiRipper.java
Patch:
@@ -49,9 +49,8 @@ public String getGID(URL url) throws MalformedURLException {
     public String getAlbumTitle(URL url) throws MalformedURLException {
         try {
             // Attempt to use album title as GID
-            Element titleElement = getFirstPage().select("meta[name=description]").first();
-            String title = titleElement.attr("content");
-            title = title.substring(title.lastIndexOf('/') + 1);
+            Element titleElement = getFirstPage().select("h1.title").first();
+            String title = titleElement.text();
 
             Element authorSpan = getFirstPage().select("span[class=creator]").first();
             String author = authorSpan.select("a").first().text();

File: src/main/java/com/rarchives/ripme/utils/RipUtils.java
Patch:
@@ -86,6 +86,9 @@ else if (url.toExternalForm().contains("eroshare.com")) {
                 logger.warn("Exception while retrieving eroshare page:", e);
             }
             return result;
+        } else if (url.toExternalForm().contains("v.redd.it")) {
+            result.add(url);
+            return result;
         }
 
         else if (url.toExternalForm().contains("erome.com")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ZizkiRipper.java
Patch:
@@ -49,9 +49,8 @@ public String getGID(URL url) throws MalformedURLException {
     public String getAlbumTitle(URL url) throws MalformedURLException {
         try {
             // Attempt to use album title as GID
-            Element titleElement = getFirstPage().select("meta[name=description]").first();
-            String title = titleElement.attr("content");
-            title = title.substring(title.lastIndexOf('/') + 1);
+            Element titleElement = getFirstPage().select("h1.title").first();
+            String title = titleElement.text();
 
             Element authorSpan = getFirstPage().select("span[class=creator]").first();
             String author = authorSpan.select("a").first().text();

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -62,7 +62,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public boolean canRip(URL url) {
-        Pattern p = Pattern.compile("^https?://[wmde.]*xhamster\\.com/photos/gallery/.*?(\\d+)$");
+        Pattern p = Pattern.compile("^https?://([\\w\\w]*\\.)?xhamster\\.com/photos/gallery/.*?(\\d+)$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -62,7 +62,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public boolean canRip(URL url) {
-        Pattern p = Pattern.compile("^https?://[\\w\\w]*\\.xhamster\\.com/photos/gallery/.*?(\\d+)$");
+        Pattern p = Pattern.compile("^https?://([\\w\\w]*\\.)?xhamster\\.com/photos/gallery/.*?(\\d+)$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.50";
+    private static final String DEFAULT_VERSION = "1.7.51";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/TheyiffgalleryRipper.java
Patch:
@@ -59,8 +59,8 @@ public Document getNextPage(Document doc) throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("ul.thumbnails > li.gdthumb")) {
-            String imageSource = el.select("a > img").attr("src");
+        for (Element el : doc.select("img.thumbnail")) {
+            String imageSource = el.attr("src");
             imageSource = imageSource.replaceAll("_data/i", "");
             imageSource = imageSource.replaceAll("-\\w\\w_\\w\\d+x\\d+", "");
             result.add("https://theyiffgallery.com" + imageSource);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TheyiffgalleryRipper.java
Patch:
@@ -59,8 +59,8 @@ public Document getNextPage(Document doc) throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<>();
-        for (Element el : doc.select("ul.thumbnails > li.gdthumb")) {
-            String imageSource = el.select("a > img").attr("src");
+        for (Element el : doc.select("img.thumbnail")) {
+            String imageSource = el.attr("src");
             imageSource = imageSource.replaceAll("_data/i", "");
             imageSource = imageSource.replaceAll("-\\w\\w_\\w\\d+x\\d+", "");
             result.add("https://theyiffgallery.com" + imageSource);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.49";
+    private static final String DEFAULT_VERSION = "1.7.50";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -20,7 +20,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.49";
+    private static final String DEFAULT_VERSION = "1.7.50";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.47";
+    private static final String DEFAULT_VERSION = "1.7.48";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/MyhentaicomicsRipper.java
Patch:
@@ -99,7 +99,7 @@ public Document getNextPage(Document doc) throws IOException {
             Pattern p = Pattern.compile("/index.php/[a-zA-Z0-9_-]*\\?page=\\d");
             Matcher m = p.matcher(nextPage);
             if (m.matches()) {
-                nextUrl = "http://myhentaicomics.com" + m.group(0);
+                nextUrl = "https://myhentaicomics.com" + m.group(0);
                 }
             if (nextUrl.equals("")) {
                 throw new IOException("No more pages");
@@ -120,7 +120,7 @@ public List<String> getURLsFromPage(Document doc) {
             if (!imageSource.startsWith("http://") && !imageSource.startsWith("https://")) {
             // We replace thumbs with resizes so we can the full sized images
             imageSource = imageSource.replace("thumbs", "resizes");
-            result.add("http://myhentaicomics.com/" + imageSource);
+            result.add("https://myhentaicomics.com" + imageSource);
                 }
             }
         return result;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.46";
+    private static final String DEFAULT_VERSION = "1.7.47";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -7,9 +7,7 @@
 
 public class Hentai2readRipperTest extends RippersTest {
     public void testHentai2readAlbum() throws IOException {
-        Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/"));
-        testRipper(ripper);
-        ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
+        Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
         testRipper(ripper);
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.45";
+    private static final String DEFAULT_VERSION = "1.7.46";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/SinnercomicsRipper.java
Patch:
@@ -34,7 +34,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p = Pattern.compile("^https?://sinnercomics.com/comic/([a-zA-Z0-9-]*)/?$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            return m.group(1);
+            return m.group(1).replaceAll("-page-\\d+", "");
         }
         throw new MalformedURLException("Expected sinnercomics.com URL format: " +
                         "sinnercomics.com/comic/albumName - got " + url + " instead");

File: src/main/java/com/rarchives/ripme/ripper/rippers/Hentai2readRipper.java
Patch:
@@ -50,7 +50,7 @@ public Document getFirstPage() throws IOException {
                 tempDoc = Http.url(url).get();
                 // Get the thumbnail page so we can rip all images without loading every page in the comic
                 thumbnailLink = tempDoc.select("div.col-xs-12 > div.reader-controls > div.controls-block > button > a").attr("href");
-                if (thumbnailLink != null) {
+                if (!thumbnailLink.equals("")) {
                     return Http.url(thumbnailLink).get();
                 } else {
                     return Http.url(tempDoc.select("a[data-original-title=Thumbnails").attr("href")).get();

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -126,9 +126,9 @@ public List<String> getURLsFromPage(Document page) {
                         image = getFullSizeImage(imageHref);
                         URL imageUrl = new URL(image);
                         if (Utils.getConfigBoolean("8muses.use_short_names", false)) {
-                            addURLToDownload(imageUrl, getPrefixShort(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, "");
+                            addURLToDownload(imageUrl, getPrefixShort(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, "", null, true);
                         } else {
-                            addURLToDownload(imageUrl, getPrefixLong(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies);
+                            addURLToDownload(imageUrl, getPrefixLong(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, "", null, true);
                         }
                         // X is our page index
                         x++;

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -66,7 +66,7 @@ protected List<String> getAlbumsToQueue(Document doc) {
         return null;
     }
 
-    // If a page has Queue support than it has no images we want to download, just a list of urls we want to add to
+    // If a page has Queue support then it has no images we want to download, just a list of urls we want to add to
     // the queue
     protected boolean hasQueueSupport() {
         return false;
@@ -91,6 +91,7 @@ public void rip() throws IOException {
                 MainWindow.addUrlToQueue(url);
             }
 
+            // We set doc to null here so the while loop below this doesn't fire
             doc = null;
         }
 

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.44";
+    private static final String DEFAULT_VERSION = "1.7.45";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.43";
+    private static final String DEFAULT_VERSION = "1.7.44";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.42";
+    private static final String DEFAULT_VERSION = "1.7.43";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -430,7 +430,7 @@ private String getQHash(Document doc) {
             return null;
         }
         if (!rippingTag) {
-            Pattern jsP = Pattern.compile("\\?n.pagination:n},queryId:.([a-zA-Z0-9]+).");
+            Pattern jsP = Pattern.compile("o},queryId:.([a-zA-Z0-9]+).");
             Matcher m = jsP.matcher(sb.toString());
             if (m.find()) {
                 return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -430,7 +430,7 @@ private String getQHash(Document doc) {
             return null;
         }
         if (!rippingTag) {
-            Pattern jsP = Pattern.compile("\\?n.pagination:n},queryId:.([a-zA-Z0-9]+).");
+            Pattern jsP = Pattern.compile("o},queryId:.([a-zA-Z0-9]+).");
             Matcher m = jsP.matcher(sb.toString());
             if (m.find()) {
                 return m.group(1);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.41";
+    private static final String DEFAULT_VERSION = "1.7.42";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -50,7 +50,7 @@ public int getCount() {
     /**
      * Queues multiple URLs of single images to download from a single Album URL
      */
-    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies) {
+    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
         // Only download one file if this is a test.
         if (super.isThisATest() &&
                 (itemsPending.size() > 0 || itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
@@ -82,7 +82,7 @@ public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<Strin
         }
         else {
             itemsPending.put(url, saveAs);
-            DownloadFileThread dft = new DownloadFileThread(url,  saveAs,  this);
+            DownloadFileThread dft = new DownloadFileThread(url,  saveAs,  this, getFileExtFromMIME);
             if (referrer != null) {
                 dft.setReferrer(referrer);
             }
@@ -96,7 +96,7 @@ public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<Strin
 
     @Override
     public boolean addURLToDownload(URL url, File saveAs) {
-        return addURLToDownload(url, saveAs, null, null);
+        return addURLToDownload(url, saveAs, null, null, false);
     }
 
     /**

File: src/main/java/com/rarchives/ripme/ripper/VideoRipper.java
Patch:
@@ -10,6 +10,7 @@
 import com.rarchives.ripme.ui.RipStatusMessage;
 import com.rarchives.ripme.ui.RipStatusMessage.STATUS;
 import com.rarchives.ripme.utils.Utils;
+import com.sun.org.apache.xpath.internal.operations.Bool;
 
 public abstract class VideoRipper extends AbstractRipper {
 
@@ -70,7 +71,7 @@ public boolean addURLToDownload(URL url, File saveAs) {
     }
 
     @Override
-    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies) {
+    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
         return addURLToDownload(url, saveAs);
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/FivehundredpxRipper.java
Patch:
@@ -332,7 +332,7 @@ public void downloadURL(URL url, int index) {
         String[] fields = u.split("/");
         String prefix = getPrefix(index) + fields[fields.length - 3];
         File saveAs = new File(getWorkingDir() + File.separator + prefix + ".jpg");
-        addURLToDownload(url,  saveAs,  "", null);
+        addURLToDownload(url,  saveAs,  "", null, false);
     }
 
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -430,7 +430,7 @@ private String getQHash(Document doc) {
             return null;
         }
         if (!rippingTag) {
-            Pattern jsP = Pattern.compile("o},queryId:.([a-zA-Z0-9]+).");
+            Pattern jsP = Pattern.compile("\\?n.pagination:n},queryId:.([a-zA-Z0-9]+).");
             Matcher m = jsP.matcher(sb.toString());
             if (m.find()) {
                 return m.group(1);
@@ -442,7 +442,7 @@ private String getQHash(Document doc) {
                 return m.group(1);
             }
         }
-        logger.info("Could not find query_hash on " + jsFileURL);
+        logger.error("Could not find query_hash on " + jsFileURL);
         return null;
 
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -430,7 +430,7 @@ private String getQHash(Document doc) {
             return null;
         }
         if (!rippingTag) {
-            Pattern jsP = Pattern.compile("o},queryId:.([a-zA-Z0-9]+).");
+            Pattern jsP = Pattern.compile("\\?n.pagination:n},queryId:.([a-zA-Z0-9]+).");
             Matcher m = jsP.matcher(sb.toString());
             if (m.find()) {
                 return m.group(1);
@@ -442,7 +442,7 @@ private String getQHash(Document doc) {
                 return m.group(1);
             }
         }
-        logger.info("Could not find query_hash on " + jsFileURL);
+        logger.error("Could not find query_hash on " + jsFileURL);
         return null;
 
     }

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -50,7 +50,7 @@ public int getCount() {
     /**
      * Queues multiple URLs of single images to download from a single Album URL
      */
-    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies) {
+    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
         // Only download one file if this is a test.
         if (super.isThisATest() &&
                 (itemsPending.size() > 0 || itemsCompleted.size() > 0 || itemsErrored.size() > 0)) {
@@ -82,7 +82,7 @@ public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<Strin
         }
         else {
             itemsPending.put(url, saveAs);
-            DownloadFileThread dft = new DownloadFileThread(url,  saveAs,  this);
+            DownloadFileThread dft = new DownloadFileThread(url,  saveAs,  this, getFileExtFromMIME);
             if (referrer != null) {
                 dft.setReferrer(referrer);
             }
@@ -96,7 +96,7 @@ public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<Strin
 
     @Override
     public boolean addURLToDownload(URL url, File saveAs) {
-        return addURLToDownload(url, saveAs, null, null);
+        return addURLToDownload(url, saveAs, null, null, false);
     }
 
     /**

File: src/main/java/com/rarchives/ripme/ripper/VideoRipper.java
Patch:
@@ -10,6 +10,7 @@
 import com.rarchives.ripme.ui.RipStatusMessage;
 import com.rarchives.ripme.ui.RipStatusMessage.STATUS;
 import com.rarchives.ripme.utils.Utils;
+import com.sun.org.apache.xpath.internal.operations.Bool;
 
 public abstract class VideoRipper extends AbstractRipper {
 
@@ -70,7 +71,7 @@ public boolean addURLToDownload(URL url, File saveAs) {
     }
 
     @Override
-    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies) {
+    public boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String,String> cookies, Boolean getFileExtFromMIME) {
         return addURLToDownload(url, saveAs);
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/FivehundredpxRipper.java
Patch:
@@ -332,7 +332,7 @@ public void downloadURL(URL url, int index) {
         String[] fields = u.split("/");
         String prefix = getPrefix(index) + fields[fields.length - 3];
         File saveAs = new File(getWorkingDir() + File.separator + prefix + ".jpg");
-        addURLToDownload(url,  saveAs,  "", null);
+        addURLToDownload(url,  saveAs,  "", null, false);
     }
 
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.39";
+    private static final String DEFAULT_VERSION = "1.7.40";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/HypnohubRipperTest.java
Patch:
@@ -17,9 +17,9 @@ public void testRip() throws IOException {
     public void testGetGID() throws IOException {
         URL poolURL = new URL("http://hypnohub.net/pool/show/2303");
         HypnohubRipper ripper = new HypnohubRipper(poolURL);
-        assertEquals("hypnohub_2303", ripper.getGID(poolURL));
+        assertEquals("2303", ripper.getGID(poolURL));
 
         URL postURL = new URL("http://hypnohub.net/post/show/63464/black_hair-bracelet-collar-corruption-female_only-");
-        assertEquals("hypnohub_63464_black_hair-bracelet-collar-corruption-female_only-", ripper.getGID(postURL));
+        assertEquals("63464_black_hair-bracelet-collar-corruption-female_only-", ripper.getGID(postURL));
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.38";
+    private static final String DEFAULT_VERSION = "1.7.39";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.36";
+    private static final String DEFAULT_VERSION = "1.7.37";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.35";
+    private static final String DEFAULT_VERSION = "1.7.36";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/Hentai2readRipper.java
Patch:
@@ -33,7 +33,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("https?://hentai2read\\.com/([a-zA-Z0-9_-]*)/\\d/?");
+            Pattern p = Pattern.compile("https?://hentai2read\\.com/([a-zA-Z0-9_-]*)/(\\d)?/?");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/Hentai2readRipperTest.java
Patch:
@@ -9,5 +9,7 @@ public class Hentai2readRipperTest extends RippersTest {
     public void testHentai2readAlbum() throws IOException {
         Hentai2readRipper ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/"));
         testRipper(ripper);
+        ripper = new Hentai2readRipper(new URL("https://hentai2read.com/sm_school_memorial/1/"));
+        testRipper(ripper);
     }
 }
\ No newline at end of file

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -374,7 +374,7 @@ public Document getNextPage(Document doc) throws IOException {
             try {
                 // Sleep for a while to avoid a ban
                 sleep(2500);
-                String vars = "{\"id\":\"" + userID + "\",\"first\":100,\"after\":\"" + nextPageID + "\"}";
+                String vars = "{\"id\":\"" + userID + "\",\"first\":50,\"after\":\"" + nextPageID + "\"}";
                 String ig_gis = getIGGis(vars);
                 logger.info(ig_gis);
                 toreturn = Http.url("https://www.instagram.com/graphql/query/?query_hash=" + qHash + "&variables=" + vars

File: src/main/java/com/rarchives/ripme/ripper/rippers/Hentai2readRipper.java
Patch:
@@ -33,7 +33,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("https?://hentai2read\\.com/([a-zA-Z0-9_-]*)/\\d/?");
+            Pattern p = Pattern.compile("https?://hentai2read\\.com/([a-zA-Z0-9_-]*)/(\\d)?/?");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -374,7 +374,7 @@ public Document getNextPage(Document doc) throws IOException {
             try {
                 // Sleep for a while to avoid a ban
                 sleep(2500);
-                String vars = "{\"id\":\"" + userID + "\",\"first\":100,\"after\":\"" + nextPageID + "\"}";
+                String vars = "{\"id\":\"" + userID + "\",\"first\":50,\"after\":\"" + nextPageID + "\"}";
                 String ig_gis = getIGGis(vars);
                 logger.info(ig_gis);
                 toreturn = Http.url("https://www.instagram.com/graphql/query/?query_hash=" + qHash + "&variables=" + vars

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.34";
+    private static final String DEFAULT_VERSION = "1.7.35";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -328,7 +328,7 @@ public List<String> getURLsFromPage(Document doc) {
     }
 
     private String getIGGis(String variables) {
-        String stringToMD5 = rhx_gis + ":" + csrftoken + ":" + variables;
+        String stringToMD5 = rhx_gis + ":" + variables;
         logger.debug("String to md5 is \"" + stringToMD5 + "\"");
         try {
             byte[] bytesOfMessage = stringToMD5.getBytes("UTF-8");

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -328,7 +328,7 @@ public List<String> getURLsFromPage(Document doc) {
     }
 
     private String getIGGis(String variables) {
-        String stringToMD5 = rhx_gis + ":" + csrftoken + ":" + variables;
+        String stringToMD5 = rhx_gis + ":" + variables;
         logger.debug("String to md5 is \"" + stringToMD5 + "\"");
         try {
             byte[] bytesOfMessage = stringToMD5.getBytes("UTF-8");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.33";
+    private static final String DEFAULT_VERSION = "1.7.34";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/WebtoonsRipper.java
Patch:
@@ -36,7 +36,7 @@ public String getDomain() {
 
     @Override
     public boolean canRip(URL url) {
-        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z]+/[a-zA-Z]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
+        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z-_]+/[a-zA-Z_-]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
         Matcher mat = pat.matcher(url.toExternalForm());
         if (mat.matches()) {
             return true;
@@ -47,7 +47,7 @@ public boolean canRip(URL url) {
 
     @Override
     public String getAlbumTitle(URL url) throws MalformedURLException {
-        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z]+/[a-zA-Z]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
+        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z-_]+/[a-zA-Z_-]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
         Matcher mat = pat.matcher(url.toExternalForm());
         if (mat.matches()) {
             return getHost() + "_" + mat.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/WebtoonsRipper.java
Patch:
@@ -36,7 +36,7 @@ public String getDomain() {
 
     @Override
     public boolean canRip(URL url) {
-        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z]+/[a-zA-Z]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
+        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z-_]+/[a-zA-Z_-]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
         Matcher mat = pat.matcher(url.toExternalForm());
         if (mat.matches()) {
             return true;
@@ -47,7 +47,7 @@ public boolean canRip(URL url) {
 
     @Override
     public String getAlbumTitle(URL url) throws MalformedURLException {
-        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z]+/[a-zA-Z]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
+        Pattern pat = Pattern.compile("https?://www.webtoons.com/[a-zA-Z-_]+/[a-zA-Z_-]+/([a-zA-Z0-9_-]*)/[a-zA-Z0-9_-]+/\\S*");
         Matcher mat = pat.matcher(url.toExternalForm());
         if (mat.matches()) {
             return getHost() + "_" + mat.group(1);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.32";
+    private static final String DEFAULT_VERSION = "1.7.33";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -328,7 +328,7 @@ public List<String> getURLsFromPage(Document doc) {
     }
 
     private String getIGGis(String variables) {
-        String stringToMD5 = rhx_gis + ":" + csrftoken + ":" + USER_AGENT + ":" + variables;
+        String stringToMD5 = rhx_gis + ":" + csrftoken + ":" + variables;
         logger.debug("String to md5 is \"" + stringToMD5 + "\"");
         try {
             byte[] bytesOfMessage = stringToMD5.getBytes("UTF-8");

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -328,7 +328,7 @@ public List<String> getURLsFromPage(Document doc) {
     }
 
     private String getIGGis(String variables) {
-        String stringToMD5 = rhx_gis + ":" + csrftoken + ":" + USER_AGENT + ":" + variables;
+        String stringToMD5 = rhx_gis + ":" + csrftoken + ":" + variables;
         logger.debug("String to md5 is \"" + stringToMD5 + "\"");
         try {
             byte[] bytesOfMessage = stringToMD5.getBytes("UTF-8");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.30";
+    private static final String DEFAULT_VERSION = "1.7.31";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.29";
+    private static final String DEFAULT_VERSION = "1.7.30";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -47,7 +47,7 @@ public static void main(String[] args) throws MalformedURLException {
             System.exit(0);
         }
 
-        if (GraphicsEnvironment.isHeadless()) {
+        if (GraphicsEnvironment.isHeadless() || args.length > 0) {
             handleArguments(args);
         } else {
             if (SystemUtils.IS_OS_MAC_OSX) {

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -47,7 +47,7 @@ public static void main(String[] args) throws MalformedURLException {
             System.exit(0);
         }
 
-        if (GraphicsEnvironment.isHeadless()) {
+        if (GraphicsEnvironment.isHeadless() || args.length > 0) {
             handleArguments(args);
         } else {
             if (SystemUtils.IS_OS_MAC_OSX) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.28";
+    private static final String DEFAULT_VERSION = "1.7.29";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.27";
+    private static final String DEFAULT_VERSION = "1.7.28";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoundryRipper.java
Patch:
@@ -68,8 +68,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public Document getNextPage(Document doc) throws IOException {
-        if (doc.select("li.next.hidden").size() != 0) {
-            // Last page
+        if (doc.select("li.next > a").size() == 0) {
             throw new IOException("No more pages");
         }
         Elements els = doc.select("li.next > a");

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoundryRipper.java
Patch:
@@ -68,7 +68,8 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public Document getNextPage(Document doc) throws IOException {
-        if (doc.select("li.next > a").size() == 0) {
+        if (doc.select("li.next.hidden").size() != 0) {
+            // Last page
             throw new IOException("No more pages");
         }
         Elements els = doc.select("li.next > a");

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoundryRipper.java
Patch:
@@ -68,8 +68,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public Document getNextPage(Document doc) throws IOException {
-        if (doc.select("li.next.hidden").size() != 0) {
-            // Last page
+        if (doc.select("li.next > a").size() == 0) {
             throw new IOException("No more pages");
         }
         Elements els = doc.select("li.next > a");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.26";
+    private static final String DEFAULT_VERSION = "1.7.27";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -150,6 +150,8 @@ private String stripHTMLTags(String t) {
                 " <body>", "");
         t.replaceAll("</body>\n" +
                 "</html>", "");
+        t = t.replaceAll("\n", "");
+        t = t.replaceAll("=\"\"", "");
         return t;
     }
 
@@ -352,6 +354,7 @@ public void downloadURL(URL url, int index) {
     }
 
     private boolean pageHasImages(Document doc) {
+        logger.info("BAD DATA: " + stripHTMLTags(doc.html()));
         JSONObject json = new JSONObject(stripHTMLTags(doc.html()));
         int numberOfImages = json.getJSONObject("data").getJSONObject("user")
                 .getJSONObject("edge_owner_to_timeline_media").getJSONArray("edges").length();

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.25";
+    private static final String DEFAULT_VERSION = "1.7.26";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.24";
+    private static final String DEFAULT_VERSION = "1.7.25";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -125,7 +125,7 @@ public List<String> getURLsFromPage(Document page) {
                         logger.info("Retrieving full-size image location from " + imageHref);
                         image = getFullSizeImage(imageHref);
                         URL imageUrl = new URL(image);
-                        addURLToDownload(imageUrl, getPrefix(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies);
+                        addURLToDownload(imageUrl, getPrefix(x), getSubdir(page.select("title").text()), this.url.toExternalForm(), cookies, "");
                         // X is our page index
                         x++;
 
@@ -180,6 +180,6 @@ public void downloadURL(URL url, int index) {
 
     @Override
     public String getPrefix(int index) {
-        return String.format("%03d_", index);
+        return String.format("%03d", index);
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FemjoyhunterRipperTest.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.rarchives.ripme.ripper.rippers.FemjoyhunterRipper;
 
-public class FemjoyRipperTest extends RippersTest {
+public class FemjoyhunterRipperTest extends RippersTest {
     public void testRip() throws IOException {
         FemjoyhunterRipper ripper = new FemjoyhunterRipper(new URL("https://www.femjoyhunter.com/alisa-i-got-nice-big-breasts-and-fine-ass-so-she-seems-to-be-a-hottest-brunette-5936/"));
         testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.22";
+    private static final String DEFAULT_VERSION = "1.7.23";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.20";
+    private static final String DEFAULT_VERSION = "1.7.21";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -68,7 +68,7 @@ public void rip() throws IOException {
         Document doc = getFirstPage();
 
         while (doc != null) {
-            if (alreadyDownloadedUrls >= Utils.getConfigInteger("history.end_rip_after_already_seen", -1) && !isThisATest()) {
+            if (alreadyDownloadedUrls >= Utils.getConfigInteger("history.end_rip_after_already_seen", 1000000000) && !isThisATest()) {
                 sendUpdate(STATUS.DOWNLOAD_COMPLETE, "Already seen the last " + alreadyDownloadedUrls + " images ending rip");
                 break;
             }

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -68,7 +68,7 @@ public void rip() throws IOException {
         Document doc = getFirstPage();
 
         while (doc != null) {
-            if (alreadyDownloadedUrls >= Utils.getConfigInteger("history.end_rip_after_already_seen", -1) && !isThisATest()) {
+            if (alreadyDownloadedUrls >= Utils.getConfigInteger("history.end_rip_after_already_seen", 1000000000) && !isThisATest()) {
                 sendUpdate(STATUS.DOWNLOAD_COMPLETE, "Already seen the last " + alreadyDownloadedUrls + " images ending rip");
                 break;
             }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.19";
+    private static final String DEFAULT_VERSION = "1.7.20";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EightmusesRipperTest.java
Patch:
@@ -10,6 +10,9 @@ public void testEightmusesAlbum() throws IOException {
         // A simple image album
         EightmusesRipper ripper = new EightmusesRipper(new URL("https://www.8muses.com/comix/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore"));
         testRipper(ripper);
+        // Test the new url format
+        ripper = new EightmusesRipper(new URL("https://www.8muses.com/comics/album/Affect3D-Comics/TheDude3DX/Lust-Unleashed-The-Urge-To-Explore"));
+        testRipper(ripper);
         // Test pages with subalbums
         ripper = new EightmusesRipper(new URL("https://www.8muses.com/comix/album/Blacknwhitecomics_com-Comix/BlacknWhiteComics/The-Mayor"));
         testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -93,7 +93,7 @@ public List<String> getURLsFromPage(Document page) {
         Elements pageImages = page.getElementsByClass("c-tile");
         for (Element thumb : pageImages) {
             // If true this link is a sub album
-            if (thumb.attr("href").contains("/comix/album/")) {
+            if (thumb.attr("href").contains("/comics/album/")) {
                 String subUrl = "https://www.8muses.com" + thumb.attr("href");
                 try {
                     logger.info("Retrieving " + subUrl);
@@ -106,7 +106,8 @@ public List<String> getURLsFromPage(Document page) {
                     logger.warn("Error while loading subalbum " + subUrl, e);
                 }
 
-            } else if (thumb.attr("href").contains("/comix/picture/")) {
+            } else if (thumb.attr("href").contains("/comics/picture/")) {
+                logger.info("This page is a album");
                 logger.info("Ripping image");
                 if (super.isStopped()) break;
                 // Find thumbnail image source

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -68,8 +68,7 @@ public void rip() throws IOException {
         Document doc = getFirstPage();
 
         while (doc != null) {
-            logger.debug("alreadyDownloadedUrls is " + alreadyDownloadedUrls);
-            if (alreadyDownloadedUrls >= Utils.getConfigInteger("skip_after_already_seen", -1) && !isThisATest()) {
+            if (alreadyDownloadedUrls >= Utils.getConfigInteger("history.end_rip_after_already_seen", -1) && !isThisATest()) {
                 sendUpdate(STATUS.DOWNLOAD_COMPLETE, "Already seen the last " + alreadyDownloadedUrls + " images ending rip");
                 break;
             }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,7 @@
 public class MotherlessRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     public void testMotherlessAlbumRip() throws IOException {
-        MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G4DAA18D"));
+        MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G1E5C971"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgurRipper.java
Patch:
@@ -213,6 +213,7 @@ private void ripAlbum(URL url, String subdirectory) throws IOException {
                 saveAs += String.format("%03d_", index);
             }
             saveAs += imgurImage.getSaveAs();
+            saveAs = saveAs.replaceAll("\\?\\d", "");
             addURLToDownload(imgurImage.url, new File(saveAs));
         }
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -8,7 +8,7 @@
 public class MotherlessRipperTest extends RippersTest {
     // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     public void testMotherlessAlbumRip() throws IOException {
-        MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G4DAA18D"));
+        MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G1E5C971"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.16";
+    private static final String DEFAULT_VERSION = "1.7.17";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.14";
+    private static final String DEFAULT_VERSION = "1.7.15";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/PornhubRipper.java
Patch:
@@ -28,7 +28,7 @@ public String getHost() {
 
     @Override
     public boolean canRip(URL url) {
-        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=[0-9]+.*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=[a-z0-9]+$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
@@ -40,7 +40,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=([0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=([a-z0-9]+)$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -69,7 +69,7 @@ public void rip() throws IOException {
 
                 vidUrl = null;
                 for (String quality : new String[] {"1080", "720", "480", "240"}) {
-                    Pattern pv = Pattern.compile("\"quality\":\"" + quality + "\",\"videoUrl\":\"(.*?)\"");
+                    Pattern pv = Pattern.compile("\"format\":\"\",\"quality\":\"" + quality + "\",\"videoUrl\":\"(.*?)\"");
                     Matcher mv = pv.matcher(html);
                     if (mv.find()) {
                         vidUrl = mv.group(1).replace("\\/", "/");

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VideoRippersTest.java
Patch:
@@ -68,7 +68,7 @@ public void testXvideosRipper() throws IOException {
 
     public void testPornhubRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
-        contentURLs.add(new URL("http://www.pornhub.com/view_video.php?viewkey=993166542"));
+        contentURLs.add(new URL("https://www.pornhub.com/view_video.php?viewkey=ph5a329fa707269"));
         for (URL url : contentURLs) {
             PornhubRipper ripper = new PornhubRipper(url);
             videoTestHelper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/PornhubRipper.java
Patch:
@@ -28,7 +28,7 @@ public String getHost() {
 
     @Override
     public boolean canRip(URL url) {
-        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=[0-9]+.*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=[a-z0-9]+$");
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
@@ -40,7 +40,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=([0-9]+).*$");
+        Pattern p = Pattern.compile("^https?://[wm.]*pornhub\\.com/view_video.php\\?viewkey=([a-z0-9]+)$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -69,7 +69,7 @@ public void rip() throws IOException {
 
                 vidUrl = null;
                 for (String quality : new String[] {"1080", "720", "480", "240"}) {
-                    Pattern pv = Pattern.compile("\"quality\":\"" + quality + "\",\"videoUrl\":\"(.*?)\"");
+                    Pattern pv = Pattern.compile("\"format\":\"\",\"quality\":\"" + quality + "\",\"videoUrl\":\"(.*?)\"");
                     Matcher mv = pv.matcher(html);
                     if (mv.find()) {
                         vidUrl = mv.group(1).replace("\\/", "/");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.13";
+    private static final String DEFAULT_VERSION = "1.7.14";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VideoRippersTest.java
Patch:
@@ -56,8 +56,6 @@ public void testXvideosRipper() throws IOException {
         }
     }
 
-    // https://github.com/RipMeApp/ripme/issues/187
-    /*
     public void testPornhubRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.pornhub.com/view_video.php?viewkey=993166542"));
@@ -66,7 +64,6 @@ public void testPornhubRipper() throws IOException {
             videoTestHelper(ripper);
         }
     }
-    */
 
     // https://github.com/RipMeApp/ripme/issues/186
     /*

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.11";
+    private static final String DEFAULT_VERSION = "1.7.12";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VideoRippersTest.java
Patch:
@@ -56,8 +56,6 @@ public void testXvideosRipper() throws IOException {
         }
     }
 
-    // https://github.com/RipMeApp/ripme/issues/187
-    /*
     public void testPornhubRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://www.pornhub.com/view_video.php?viewkey=993166542"));
@@ -66,7 +64,6 @@ public void testPornhubRipper() throws IOException {
             videoTestHelper(ripper);
         }
     }
-    */
 
     // https://github.com/RipMeApp/ripme/issues/186
     /*

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.12";
+    private static final String DEFAULT_VERSION = "1.7.13";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/XhamsterRipper.java
Patch:
@@ -39,10 +39,10 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://.*xhamster\\.com/(movies|videos)/.*$");
+        Pattern p = Pattern.compile("^https?://.*xhamster\\.com/(movies|videos)/(.*)$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            return m.group(1);
+            return m.group(2);
         }
 
         throw new MalformedURLException(
@@ -56,7 +56,7 @@ public String getGID(URL url) throws MalformedURLException {
     public void rip() throws IOException {
         logger.info("Retrieving " + this.url);
         Document doc = Http.url(url).get();
-        Elements videos = doc.select("a.mp4Thumb");
+        Elements videos = doc.select("div.player-container > a");
         if (videos.size() == 0) {
             throw new IOException("Could not find Embed code at " + url);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/XhamsterRipper.java
Patch:
@@ -39,10 +39,10 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://.*xhamster\\.com/(movies|videos)/.*$");
+        Pattern p = Pattern.compile("^https?://.*xhamster\\.com/(movies|videos)/(.*)$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            return m.group(1);
+            return m.group(2);
         }
 
         throw new MalformedURLException(
@@ -56,7 +56,7 @@ public String getGID(URL url) throws MalformedURLException {
     public void rip() throws IOException {
         logger.info("Retrieving " + this.url);
         Document doc = Http.url(url).get();
-        Elements videos = doc.select("a.mp4Thumb");
+        Elements videos = doc.select("div.player-container > a");
         if (videos.size() == 0) {
             throw new IOException("Could not find Embed code at " + url);
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.10";
+    private static final String DEFAULT_VERSION = "1.7.11";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/RedditRipperTest.java
Patch:
@@ -30,7 +30,7 @@ public void testRedditPostRip() throws IOException {
      * @throws IOException 
      */
     public void testRedditGfyGoodURL() throws IOException {
-        GfycatRipper ripper = new GfycatRipper(new URL("https://www.reddit.com/r/bottesting/comments/7msozf/good_link/"));
+        RedditRipper ripper = new RedditRipper(new URL("https://www.reddit.com/r/bottesting/comments/7msozf/good_link/"));
         testRipper(ripper);
     }
     
@@ -41,7 +41,7 @@ public void testRedditGfyGoodURL() throws IOException {
      * @throws IOException 
      */
     public void testRedditGfyBadURL() throws IOException {
-        GfycatRipper ripper = new GfycatRipper(new URL("https://www.reddit.com/r/bottesting/comments/7msmhi/bad_link/"));
+        RedditRipper ripper = new RedditRipper(new URL("https://www.reddit.com/r/bottesting/comments/7msmhi/bad_link/"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.9";
+    private static final String DEFAULT_VERSION = "1.7.10";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaiCafeRipper.java
Patch:
@@ -31,7 +31,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("https?://hentai\\.cafe/([a-zA-Z1-9_\\-%]*)/?$");
+            Pattern p = Pattern.compile("https?://hentai\\.cafe/([a-zA-Z0-9_\\-%]*)/?$");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaiCafeRipper.java
Patch:
@@ -31,7 +31,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("https?://hentai\\.cafe/([a-zA-Z1-9_\\-%]*)/?$");
+            Pattern p = Pattern.compile("https?://hentai\\.cafe/([a-zA-Z0-9_\\-%]*)/?$");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuskatorRipperTest.java
Patch:
@@ -7,7 +7,7 @@
 
 public class FuskatorRipperTest extends RippersTest {
     public void testFuskatorAlbum() throws IOException {
-        FuskatorRipper ripper = new FuskatorRipper(new URL("http://fuskator.com/full/emJa1U6cqbi/index.html"));
+        FuskatorRipper ripper = new FuskatorRipper(new URL("https://fuskator.com/thumbs/hqt6pPXAf9z/Shaved-Blonde-Babe-Katerina-Ambre.html"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.7";
+    private static final String DEFAULT_VERSION = "1.7.8";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/TumblrRipper.java
Patch:
@@ -192,7 +192,7 @@ private boolean handleJSON(JSONObject json) {
                 for (int j = 0; j < photos.length(); j++) {
                     photo = photos.getJSONObject(j);
                     try {
-                        fileURL = new URL(photo.getJSONObject("original_size").getString("url"));
+                        fileURL = new URL(photo.getJSONObject("original_size").getString("url").replaceAll("http", "https"));
                         m = p.matcher(fileURL.toString());
                         if (m.matches()) {
                             addURLToDownload(fileURL);
@@ -206,7 +206,7 @@ private boolean handleJSON(JSONObject json) {
                 }
             } else if (post.has("video_url")) {
                 try {
-                    fileURL = new URL(post.getString("video_url"));
+                    fileURL = new URL(post.getString("video_url").replaceAll("http", "https"));
                     addURLToDownload(fileURL);
                 } catch (Exception e) {
                         logger.error("[!] Error while parsing video in " + post, e);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.6";
+    private static final String DEFAULT_VERSION = "1.7.7";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -53,7 +53,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
     protected boolean hasDescriptionSupport() {
         return false;
     }
-    public boolean hasASAPRipping() {return false;}
+    public boolean hasASAPRipping() { return false; }
     protected String[] getDescription(String url, Document page) throws IOException {
         throw new IOException("getDescription not implemented"); // Do I do this or make an abstract function?
     }
@@ -69,9 +69,8 @@ public void rip() throws IOException {
         Document doc = getFirstPage();
 
         while (doc != null) {
-            List<String> imageURLs;
+            List<String> imageURLs = getURLsFromPage(doc);
             if (!hasASAPRipping()) {
-                imageURLs = getURLsFromPage(doc);
                 // Remove all but 1 image
                 if (isThisATest()) {
                     while (imageURLs.size() > 1) {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BcfakesRipperTest.java
Patch:
@@ -6,7 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.BcfakesRipper;
 
 public class BcfakesRipperTest extends RippersTest {
-    public void testVidbleRip() throws IOException {
+    public void testRip() throws IOException {
         BcfakesRipper ripper = new BcfakesRipper(new URL("http://www.bcfakes.com/celebritylist/olivia-wilde/"));
         testRipper(ripper);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/CfakeRipperTest.java
Patch:
@@ -6,7 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.CfakeRipper;
 
 public class CfakeRipperTest extends RippersTest {
-    public void testVidbleRip() throws IOException {
+    public void testRip() throws IOException {
         CfakeRipper ripper = new CfakeRipper(new URL("http://cfake.com/picture/Zooey_Deschanel/1264"));
         testRipper(ripper);
     }

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -31,7 +31,7 @@ public abstract class AbstractRipper
     private final String URLHistoryFile = Utils.getURLHistoryFile();
 
     public static final String USER_AGENT =
-            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:36.0) Gecko/20100101 Firefox/36.0";
+            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36";
 
     protected URL url;
     protected File workingDir;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.3";
+    private static final String DEFAULT_VERSION = "1.7.4";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.2";
+    private static final String DEFAULT_VERSION = "1.7.3";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TapasticRipperTest.java
Patch:
@@ -7,7 +7,7 @@
 
 public class TapasticRipperTest extends RippersTest {
     public void testTapasticRip() throws IOException {
-        TapasticRipper ripper = new TapasticRipper(new URL("http://tapastic.com/episode/2139"));
+        TapasticRipper ripper = new TapasticRipper(new URL("https://tapas.io/series/tsiwbakd-comic"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.7.0";
+    private static final String DEFAULT_VERSION = "1.7.1";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuraffinityRipperTest.java
Patch:
@@ -6,11 +6,8 @@
 import com.rarchives.ripme.ripper.rippers.FuraffinityRipper;
 
 public class FuraffinityRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/183
-    /*
     public void testFuraffinityAlbum() throws IOException {
         FuraffinityRipper ripper = new FuraffinityRipper(new URL("https://www.furaffinity.net/gallery/mustardgas/"));
         testRipper(ripper);
     }
-    */
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuraffinityRipperTest.java
Patch:
@@ -6,11 +6,8 @@
 import com.rarchives.ripme.ripper.rippers.FuraffinityRipper;
 
 public class FuraffinityRipperTest extends RippersTest {
-    // https://github.com/RipMeApp/ripme/issues/183
-    /*
     public void testFuraffinityAlbum() throws IOException {
         FuraffinityRipper ripper = new FuraffinityRipper(new URL("https://www.furaffinity.net/gallery/mustardgas/"));
         testRipper(ripper);
     }
-    */
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/WordpressComicRipper.java
Patch:
@@ -275,9 +275,10 @@ public List<String> getURLsFromPage(Document doc) {
         }
 
         // freeadultcomix gets it own if because it needs to add http://freeadultcomix.com to the start of each link
+        // TODO review the above comment which no longer applies -- see if there's a refactoring we should do here.
         if (url.toExternalForm().contains("freeadultcomix.com")) {
             for (Element elem : doc.select("div.single-post > p > img.aligncenter")) {
-                result.add("http://freeadultcomix.com" + elem.attr("src"));
+                result.add(elem.attr("src"));
             }
         }
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/EhentaiRipperTest.java
Patch:
@@ -6,7 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.EHentaiRipper;
 
 public class EhentaiRipperTest extends RippersTest {
-    public void testHentaiCafeAlbum() throws IOException {
+    public void testEHentaiAlbum() throws IOException {
         EHentaiRipper ripper = new EHentaiRipper(new URL("https://e-hentai.org/g/1144492/e823bdf9a5/"));
         testRipper(ripper);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MyhentaicomicsRipperTest.java
Patch:
@@ -6,7 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.MyhentaicomicsRipper;
 
 public class MyhentaicomicsRipperTest extends RippersTest {
-    public void testHentaiCafeAlbum() throws IOException {
+    public void testMyhentaicomicsAlbum() throws IOException {
         MyhentaicomicsRipper ripper = new MyhentaicomicsRipper(new URL("http://myhentaicomics.com/index.php/Nienna-Lost-Tales"));
         testRipper(ripper);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TumblrRipperTest.java
Patch:
@@ -7,6 +7,7 @@
 import com.rarchives.ripme.ripper.rippers.TumblrRipper;
 
 public class TumblrRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/250
     /*
     public void testTumblrFullRip() throws IOException {
         TumblrRipper ripper = new TumblrRipper(new URL("http://wrouinr.tumblr.com/archive"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TwitterRipperTest.java
Patch:
@@ -11,9 +11,10 @@ public void testTwitterUserRip() throws IOException {
         testRipper(ripper);
     }
 
+    // https://github.com/RipMeApp/ripme/issues/251
     /*
     public void testTwitterSearchRip() throws IOException {
-        TwitterRipper ripper = new TwitterRipper(new URL("https://twitter.com/search?q=from%3ADaisyfairymfc%20filter%3Aimages&src=typd"));
+        TwitterRipper ripper = new TwitterRipper(new URL("https://twitter.com/search?f=tweets&q=from%3Aalinalixxx%20filter%3Aimages&src=typd"));
         testRipper(ripper);
     }
     */

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TwodgalleriesRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.TwodgalleriesRipper;
 
 public class TwodgalleriesRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/182
     /*
     public void testTwodgalleriesRip() throws IOException {
         TwodgalleriesRipper ripper = new TwodgalleriesRipper(new URL("http://www.2dgalleries.com/artist/regis-loisel-6477"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VideoRippersTest.java
Patch:
@@ -45,6 +45,7 @@ public void testXvideosRipper() throws IOException {
         }
     }
 
+    // https://github.com/RipMeApp/ripme/issues/187
     /*
     public void testPornhubRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
@@ -56,6 +57,7 @@ public void testPornhubRipper() throws IOException {
     }
     */
 
+    // https://github.com/RipMeApp/ripme/issues/186
     /*
     public void testVineRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<>();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VineRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.VineRipper;
 
 public class VineRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/181
     /*
     public void testVineRip() throws IOException {
         VineRipper ripper = new VineRipper(new URL("https://vine.co/u/954440445776334848"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VkRipperTest.java
Patch:
@@ -6,8 +6,10 @@
 import com.rarchives.ripme.ripper.rippers.VkRipper;
 
 public class VkRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/252
     // Not supported (error): https://vk.com/helga_model (Profile Page)
     // Not supported (rips nothing): https://vk.com/albums45506334 (all albums under a Profile Page)
+
     // EXAMPLE: https://vk.com/photos45506334 (all photos for a model)
     // EXAMPLE: https://vk.com/album45506334_0 (a single album - profile pictures)
     // EXAMPLE: https://vk.com/album45506334_00?rev=1 (a single album - wall pictures)

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/MotherlessRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.MotherlessRipper;
 
 public class MotherlessRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/238 - MotherlessRipperTest is flaky on Travis CI
     public void testMotherlessAlbumRip() throws IOException {
         MotherlessRipper ripper = new MotherlessRipper(new URL("http://motherless.com/G4DAA18D"));
         testRipper(ripper);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FineboxRipperTest.java
Patch:
@@ -6,6 +6,8 @@
 import com.rarchives.ripme.ripper.rippers.FineboxRipper;
 
 public class FineboxRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/242
+
     /*
     public void testVineboxAlbum() throws IOException {
         FineboxRipper ripper = new FineboxRipper(new URL("http://vinebox.co/u/wi57hMjc2Ka"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FlickrRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.FlickrRipper;
 
 public class FlickrRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/243
     /*
     public void testFlickrAlbum() throws IOException {
         FlickrRipper ripper = new FlickrRipper(new URL("https://www.flickr.com/photos/leavingallbehind/sets/72157621895942720/"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/FuraffinityRipperTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.rarchives.ripme.ripper.rippers.FuraffinityRipper;
 
 public class FuraffinityRipperTest extends RippersTest {
+    // https://github.com/RipMeApp/ripme/issues/183
     /*
     public void testFuraffinityAlbum() throws IOException {
         FuraffinityRipper ripper = new FuraffinityRipper(new URL("https://www.furaffinity.net/gallery/mustardgas/"));

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -23,7 +23,7 @@
 public class Http {
 
     private static final int    TIMEOUT = Utils.getConfigInteger("page.timeout", 5 * 1000);
-    private static final Logger logger  = Logger.getLogger(AbstractRipper.class);
+    private static final Logger logger  = Logger.getLogger(Http.class);
 
     private int retries;
     private String url;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.11";
+    private static final String DEFAULT_VERSION = "1.6.12";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -183,6 +183,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
             if (!subdirectory.equals("")) {
                 subdirectory = File.separator + subdirectory;
             }
+            prefix = Utils.filesystemSanitized(prefix);
             saveFileAs = new File(
                     workingDir.getCanonicalPath()
                     + subdirectory

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -144,6 +144,7 @@ public List<String> getURLsFromPage(Document doc) {
                 Long epoch = data.getLong("date");
                 Instant instant = Instant.ofEpochSecond(epoch);
                 String image_date = DateTimeFormatter.ofPattern("yyyy_MM_dd_hh:mm_").format(ZonedDateTime.ofInstant(instant, ZoneOffset.UTC));
+
                 try {
                     if (!data.getBoolean("is_video")) {
                         if (imageURLs.size() == 0) {
@@ -158,8 +159,8 @@ public List<String> getURLsFromPage(Document doc) {
                 } catch (MalformedURLException e) {
                     return imageURLs;
                 }
-                nextPageID = data.getString("id");
 
+                nextPageID = data.getString("id");
 
                 if (isThisATest()) {
                     break;

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/MotherlessVideoRipper.java
Patch:
@@ -55,7 +55,7 @@ public void rip() throws IOException {
         logger.info("    Retrieving " + this.url);
         String html = Http.url(this.url).get().toString();
         if (html.contains("__fileurl = '")) {
-            System.err.println("WTF");
+            logger.error("WTF");
         }
         List<String> vidUrls = Utils.between(html, "__fileurl = '", "';");
         if (vidUrls.size() == 0) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -111,7 +111,7 @@ private static boolean isNewerVersion(String latestVersion) {
         int[] oldVersions = versionStringToInt(getThisJarVersion());
         int[] newVersions = versionStringToInt(latestVersion);
         if (oldVersions.length < newVersions.length) {
-            System.err.println("Calculated: " + getThisJarVersion() + " < " + latestVersion);
+            logger.error("Calculated: " + getThisJarVersion() + " < " + latestVersion);
             return true;
         }
 

File: src/main/java/com/rarchives/ripme/utils/RipUtils.java
Patch:
@@ -94,7 +94,7 @@ else if (url.toExternalForm().contains("eroshare.com")) {
         Pattern p = Pattern.compile("https?://i.reddituploads.com/([a-zA-Z0-9]+)\\?.*");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            System.out.println("URL: " + url.toExternalForm());
+            logger.info("URL: " + url.toExternalForm());
             String u = url.toExternalForm().replaceAll("&amp;", "&");
             try {
                 result.add(new URL(u));

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.10";
+    private static final String DEFAULT_VERSION = "1.6.11";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -194,7 +194,7 @@ public void testModelmayhemRip() throws IOException {
     }
 
     public void testPichunterRip() throws IOException {
-        AbstractRipper ripper = new PichunterRipper(new URL("http://www.pichunter.com/tags/all/Sex/14"));
+        AbstractRipper ripper = new PichunterRipper(new URL("https://www.pichunter.com/models/Madison_Ivy"));
         testRipper(ripper);
     }
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -23,6 +23,7 @@ public void testInstagramGID() throws IOException {
         }
     }
 
+    /*
     public void testInstagramAlbums() throws IOException {
         List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://instagram.com/anacheri"));
@@ -31,5 +32,6 @@ public void testInstagramAlbums() throws IOException {
             testRipper(ripper);
         }
     }
+    */
 
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.9";
+    private static final String DEFAULT_VERSION = "1.6.10";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/WebtoonsRipper.java
Patch:
@@ -63,7 +63,7 @@ public String getGID(URL url) throws MalformedURLException {
         if (mat.matches()) {
             return mat.group(1);
         }
-        throw new MalformedURLException("You should never see this error message");
+        throw new MalformedURLException("Expected URL format: http://www.webtoons.com/LANG/CAT/TITLE/VOL/, got: " + url);
     }
 
 

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.8";
+    private static final String DEFAULT_VERSION = "1.6.9";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -159,7 +159,7 @@ public void setObserver(RipStatusHandler obs) {
     protected abstract boolean addURLToDownload(URL url, File saveAs, String referrer, Map<String, String> cookies);
 
     protected boolean addURLToDownload(URL url, String prefix, String subdirectory, String referrer, Map<String, String> cookies) {
-        if (Utils.getConfigBoolean("remember.url_history", true)) {
+        if (Utils.getConfigBoolean("remember.url_history", true) && !isThisATest()) {
             if (hasDownloadedURL(url.toExternalForm())) {
                 sendUpdate(STATUS.DOWNLOAD_WARN, "Already downloaded " + url.toExternalForm());
                 return false;
@@ -198,7 +198,7 @@ protected boolean addURLToDownload(URL url, String prefix, String subdirectory,
             logger.info("[+] Creating directory: " + Utils.removeCWD(saveFileAs.getParent()));
             saveFileAs.getParentFile().mkdirs();
         }
-        if (Utils.getConfigBoolean("remember.url_history", true)) {
+        if (Utils.getConfigBoolean("remember.url_history", true) && !isThisATest()) {
             try {
                 writeDownloadedURL(url.toExternalForm() + "\n");
             } catch (IOException e) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaiCafeRipper.java
Patch:
@@ -16,7 +16,7 @@
 public class HentaiCafeRipper extends AbstractHTMLRipper {
 
     public HentaiCafeRipper(URL url) throws IOException {
-    super(url);
+        super(url);
     }
 
         @Override

File: src/main/java/com/rarchives/ripme/ripper/rippers/WebtoonsRipper.java
Patch:
@@ -63,7 +63,7 @@ public String getGID(URL url) throws MalformedURLException {
         if (mat.matches()) {
             return mat.group(1);
         }
-        throw new MalformedURLException("You should never see this error message");
+        throw new MalformedURLException("Expected URL format: http://www.webtoons.com/LANG/CAT/TITLE/VOL/, got: " + url);
     }
 
 

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -179,7 +179,6 @@ private static boolean portableMode() {
 
     public static String getConfigDir() {
         if (portableMode()) {
-            logger.info("Running in portable mode");
             try {
                 return new File(".").getCanonicalPath();
             } catch (Exception e) {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -187,7 +187,7 @@ public void testMinusAlbumRip() throws IOException {
     */
 
     public void testModelmayhemRip() throws IOException {
-        AbstractRipper ripper = new ModelmayhemRipper(new URL("http://www.modelmayhem.com/portfolio/520206/viewall"));
+        AbstractRipper ripper = new ModelmayhemRipper(new URL("https://www.modelmayhem.com/portfolio/520206/viewall"));
         testRipper(ripper);
     }
 
@@ -268,7 +268,7 @@ public void testVkPhotosRip() throws IOException {
     }
 
     public void testXhamsterAlbums() throws IOException {
-        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/polaroids-2-8940215"));
+        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/sexy-preggo-girls-9026608"));
         testRipper(ripper);
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -187,7 +187,7 @@ public void testMinusAlbumRip() throws IOException {
     */
 
     public void testModelmayhemRip() throws IOException {
-        AbstractRipper ripper = new ModelmayhemRipper(new URL("http://www.modelmayhem.com/portfolio/520206/viewall"));
+        AbstractRipper ripper = new ModelmayhemRipper(new URL("https://www.modelmayhem.com/portfolio/520206/viewall"));
         testRipper(ripper);
     }
 
@@ -268,7 +268,7 @@ public void testVkPhotosRip() throws IOException {
     }
 
     public void testXhamsterAlbums() throws IOException {
-        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/polaroids-2-8940215"));
+        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/sexy-preggo-girls-9026608"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.6";
+    private static final String DEFAULT_VERSION = "1.6.7";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -15,7 +15,6 @@ public void testInstagramGID() throws IOException {
         Map<URL, String> testURLs = new HashMap<>();
         testURLs.put(new URL("http://instagram.com/Test_User"), "Test_User");
         testURLs.put(new URL("http://instagram.com/_test_user_"), "_test_user_");
-        testURLs.put(new URL("http://instagram.com/-test-user-"), "-test-user-");
         for (URL url : testURLs.keySet()) {
             InstagramRipper ripper = new InstagramRipper(url);
             ripper.setup();

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.5";
+    private static final String DEFAULT_VERSION = "1.6.6";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -50,6 +50,7 @@ public List<String> getURLsFromPage(Document doc) {
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
             String image = thumb.attr("src").replaceAll("thumbs", "images");
             image = image.replace("_b", "_o");
+            image = image.replaceAll("\\d-s", "i");
             imageURLs.add(image);
         }
         return imageURLs;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.2";
+    private static final String DEFAULT_VERSION = "1.6.3";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/Hentai2readRipper.java
Patch:
@@ -106,7 +106,7 @@ public Document getNextPage(Document doc) throws IOException {
             // Sleep for half a sec to avoid getting IP banned
             sleep(500);
             return Http.url(nextUrl).get();
-            }
+        }
 
         @Override
         public void downloadURL(URL url, int index) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -48,7 +48,7 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
-            String image = thumb.attr("src").replaceAll("thumbs.imgbox.com", "images.imgbox.com");
+            String image = thumb.attr("src").replaceAll("thumbs", "images");
             image = image.replace("_b", "_o");
             imageURLs.add(image);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/PorncomixRipper.java
Patch:
@@ -34,7 +34,7 @@ public String getDomain() {
 
         @Override
         public String getGID(URL url) throws MalformedURLException {
-            Pattern p = Pattern.compile("https?://www.porncomix.info/([a-zA-Z1-9_-]*)/?$");
+            Pattern p = Pattern.compile("https?://www.porncomix.info/([a-zA-Z0-9_\\-]*)/?$");
             Matcher m = p.matcher(url.toExternalForm());
             if (m.matches()) {
                 return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -48,7 +48,7 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
-            String image = thumb.attr("src").replaceAll("thumbs.imgbox.com", "images.imgbox.com");
+            String image = thumb.attr("src").replaceAll("thumbs", "images");
             image = image.replace("_b", "_o");
             imageURLs.add(image);
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.6.1";
+    private static final String DEFAULT_VERSION = "1.6.2";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ShesFreakyRipper.java
Patch:
@@ -51,7 +51,7 @@ public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("a[data-lightbox=\"gallery\"]")) {
             String image = thumb.attr("href");
-            imageURLs.add(image);
+            imageURLs.add("https:" + image);
         }
         return imageURLs;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -48,9 +48,8 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
-            String image = thumb.attr("src")
-                                .replaceAll("[-a-zA-Z0-9.]+s.imgbox.com",
-                                            "i.imgbox.com");
+            String image = thumb.attr("src").replaceAll("thumbs.imgbox.com", "images.imgbox.com");
+            image = image.replace("_b", "_o");
             imageURLs.add(image);
         }
         return imageURLs;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -48,9 +48,8 @@ public Document getFirstPage() throws IOException {
     public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
-            String image = thumb.attr("src")
-                                .replaceAll("[-a-zA-Z0-9.]+s.imgbox.com",
-                                            "i.imgbox.com");
+            String image = thumb.attr("src").replaceAll("thumbs.imgbox.com", "images.imgbox.com");
+            image = image.replace("_b", "_o");
             imageURLs.add(image);
         }
         return imageURLs;

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -24,12 +24,12 @@
  * Thread for downloading files.
  * Includes retry logic, observer notifications, and other goodies.
  */
-public class DownloadFileThread extends Thread {
+class DownloadFileThread extends Thread {
 
     private static final Logger logger = Logger.getLogger(DownloadFileThread.class);
 
     private String referrer = "";
-    private Map<String,String> cookies = new HashMap<String,String>();
+    private Map<String,String> cookies = new HashMap<>();
 
     private URL url;
     private File saveAs;

File: src/main/java/com/rarchives/ripme/ripper/DownloadVideoThread.java
Patch:
@@ -20,7 +20,7 @@
  * Thread for downloading files.
  * Includes retry logic, observer notifications, and other goodies.
  */
-public class DownloadVideoThread extends Thread {
+class DownloadVideoThread extends Thread {
 
     private static final Logger logger = Logger.getLogger(DownloadVideoThread.class);
 

File: src/main/java/com/rarchives/ripme/ripper/RipperInterface.java
Patch:
@@ -8,7 +8,7 @@
  * I have no idea why I made this interface. Everything is captured within the AbstractRipper.
  * Oh well, here's to encapsulation and abstraction! (raises glass)
  */
-public interface RipperInterface {
+interface RipperInterface {
     void rip() throws IOException;
     boolean canRip(URL url);
     URL sanitizeURL(URL url) throws MalformedURLException;

File: src/main/java/com/rarchives/ripme/ripper/VideoRipper.java
Patch:
@@ -16,7 +16,7 @@ public abstract class VideoRipper extends AbstractRipper {
     private int bytesTotal = 1,
                  bytesCompleted = 1;
 
-    public VideoRipper(URL url) throws IOException {
+    protected VideoRipper(URL url) throws IOException {
         super(url);
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/AerisdiesRipper.java
Patch:
@@ -23,7 +23,7 @@
 public class AerisdiesRipper extends AbstractHTMLRipper {
 
     private Document albumDoc = null;
-    private Map<String,String> cookies = new HashMap<String,String>();
+    private Map<String,String> cookies = new HashMap<>();
 
 
     public AerisdiesRipper(URL url) throws IOException {
@@ -74,7 +74,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         Elements albumElements = page.select("div.imgbox > a > img");
             for (Element imageBox : albumElements) {
                 String imageUrl = imageBox.attr("src");

File: src/main/java/com/rarchives/ripme/ripper/rippers/BcfakesRipper.java
Patch:
@@ -66,7 +66,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.ngg-gallery-thumbnail > a > img")) {
             String imageURL = thumb.attr("src");
             imageURL = imageURL.replace("thumbs/thumbs_", "");

File: src/main/java/com/rarchives/ripme/ripper/rippers/ButttoucherRipper.java
Patch:
@@ -33,7 +33,7 @@ public String getDomain() {
     public String getGID(URL url) throws MalformedURLException {
         Pattern p; Matcher m;
 
-        p = Pattern.compile("^.*butttoucher.com/users/([a-zA-Z0-9_\\-]{1,}).*$");
+        p = Pattern.compile("^.*butttoucher.com/users/([a-zA-Z0-9_\\-]+).*$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -51,7 +51,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> thumbs = new ArrayList<String>();
+        List<String> thumbs = new ArrayList<>();
         for (Element thumb : page.select(".thumb img")) {
             if (!thumb.hasAttr("src")) {
                 continue;

File: src/main/java/com/rarchives/ripme/ripper/rippers/CfakeRipper.java
Patch:
@@ -71,7 +71,7 @@ public Document getNextPage(Document doc) throws IOException {
 
         @Override
         public List<String> getURLsFromPage(Document doc) {
-            List<String> result = new ArrayList<String>();
+            List<String> result = new ArrayList<>();
                 for (Element el : doc.select("table.display > tbody > tr > td > table > tbody > tr > td > a")) {
                     if (el.attr("href").contains("upload")) {
                         return result;

File: src/main/java/com/rarchives/ripme/ripper/rippers/DatwinRipper.java
Patch:
@@ -49,7 +49,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("img.attachment-thumbnail")) {
             String image = thumb.attr("src");
             image = image.replaceAll("-\\d{1,3}x\\d{1,3}", "");

File: src/main/java/com/rarchives/ripme/ripper/rippers/DrawcrowdRipper.java
Patch:
@@ -72,7 +72,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : page.select("div.item.asset img")) {
             String image = thumb.attr("src");
             image = image

File: src/main/java/com/rarchives/ripme/ripper/rippers/EHentaiRipper.java
Patch:
@@ -39,7 +39,7 @@ public DownloadThreadPool getThreadPool() {
     // Current HTML document
     private Document albumDoc = null;
 
-    private static final Map<String,String> cookies = new HashMap<String,String>();
+    private static final Map<String,String> cookies = new HashMap<>();
     static {
         cookies.put("nw", "1");
         cookies.put("tip", "1");
@@ -162,7 +162,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         Elements thumbs = page.select("#gdt > .gdtm a");
         // Iterate over images on page
         for (Element thumb : thumbs) {
@@ -193,7 +193,7 @@ private class EHentaiImageThread extends Thread {
         private int index;
         private File workingDir;
 
-        public EHentaiImageThread(URL url, int index, File workingDir) {
+        EHentaiImageThread(URL url, int index, File workingDir) {
             super();
             this.url = url;
             this.index = index;

File: src/main/java/com/rarchives/ripme/ripper/rippers/FapprovedRipper.java
Patch:
@@ -80,7 +80,7 @@ private String getPageURL(int index) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element image : page.select("div.actual-image img")) {
             String imageURL = image.attr("src");
             if (imageURL.startsWith("//")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/FineboxRipper.java
Patch:
@@ -80,7 +80,7 @@ public String getHost() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(www\\.)?(v|f)inebox\\.co/u/([a-zA-Z0-9]{1,}).*$");
+        Pattern p = Pattern.compile("^https?://(www\\.)?([vf])inebox\\.co/u/([a-zA-Z0-9]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (!m.matches()) {
             throw new MalformedURLException("Expected format: http://"+DOMAIN+"/u/USERNAME");

File: src/main/java/com/rarchives/ripme/ripper/rippers/FivehundredpxRipper.java
Patch:
@@ -256,7 +256,7 @@ public JSONObject getNextPage(JSONObject json) throws IOException {
 
     @Override
     public List<String> getURLsFromJSON(JSONObject json) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         JSONArray photos = json.getJSONArray("photos");
         for (int i = 0; i < photos.length(); i++) {
             if (super.isStopped()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuskatorRipper.java
Patch:
@@ -60,7 +60,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         String html = doc.html();
         // Get "baseUrl"
         String baseUrl = Utils.between(html, "unescape('", "'").get(0);

File: src/main/java/com/rarchives/ripme/ripper/rippers/GifyoRipper.java
Patch:
@@ -22,7 +22,7 @@
 public class GifyoRipper extends AbstractHTMLRipper {
 
     private int page = 0;
-    private Map<String,String> cookies = new HashMap<String,String>();
+    private Map<String,String> cookies = new HashMap<>();
 
     public GifyoRipper(URL url) throws IOException {
         super(url);
@@ -70,7 +70,7 @@ public Document getFirstPage() throws IOException {
     @Override
     public Document getNextPage(Document doc) throws IOException {
         page++;
-        Map<String,String> postData = new HashMap<String,String>();
+        Map<String,String> postData = new HashMap<>();
         postData.put("cmd", "refreshData");
         postData.put("view", "gif");
         postData.put("layout", "grid");
@@ -92,7 +92,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element image : doc.select("img.profile_gif")) {
             String imageUrl = image.attr("data-animated");
             if (imageUrl.startsWith("//")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/GirlsOfDesireRipper.java
Patch:
@@ -50,7 +50,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p;
         Matcher m;
 
-        p = Pattern.compile("^www\\.girlsofdesire\\.org\\/galleries\\/([\\w\\d-]+)\\/$");
+        p = Pattern.compile("^www\\.girlsofdesire\\.org/galleries/([\\w\\d-]+)/$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -72,7 +72,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("td.vtop > a > img")) {
             String imgSrc = thumb.attr("src");
             imgSrc = imgSrc.replaceAll("_thumb\\.", ".");

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaiCafeRipper.java
Patch:
@@ -64,7 +64,7 @@ public Document getNextPage(Document doc) throws IOException {
 
         @Override
         public List<String> getURLsFromPage(Document doc) {
-            List<String> result = new ArrayList<String>();
+            List<String> result = new ArrayList<>();
                 result.add(doc.select("div[id=page] > div.inner > a > img.open").attr("src"));
                 return result;
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoundryRipper.java
Patch:
@@ -20,7 +20,7 @@
 
 public class HentaifoundryRipper extends AbstractHTMLRipper {
 
-    private Map<String,String> cookies = new HashMap<String,String>();
+    private Map<String,String> cookies = new HashMap<>();
     public HentaifoundryRipper(URL url) throws IOException {
         super(url);
     }
@@ -84,7 +84,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         Pattern imgRegex = Pattern.compile(".*/user/([a-zA-Z0-9\\-_]+)/(\\d+)/.*");
         for (Element thumb : doc.select("div.thumb_square > a.thumbLink")) {
             if (isStopped()) {
@@ -115,7 +115,7 @@ public List<String> getURLsFromPage(Document doc) {
                 imagePage = null;
             }
             // This is here for when the image is resized to a thumbnail because ripme doesn't report a screensize
-            if (imagePage.select("div.boxbody > img.center").attr("src").contains("thumbs.") == true) {
+            if (imagePage.select("div.boxbody > img.center").attr("src").contains("thumbs.")) {
                 imageURLs.add("http:" + imagePage.select("div.boxbody > img.center").attr("onclick").replace("this.src=", "").replace("'", "").replace("; $(#resize_message).hide();", ""));
             }
             else {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagearnRipper.java
Patch:
@@ -31,7 +31,7 @@ public String getDomain() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^.*imagearn.com/{1,}gallery.php\\?id=([0-9]{1,}).*$");
+        Pattern p = Pattern.compile("^.*imagearn.com/+gallery.php\\?id=([0-9]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -43,7 +43,7 @@ public String getGID(URL url) throws MalformedURLException {
     }
 
     public URL sanitizeURL(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^.*imagearn.com/{1,}image.php\\?id=[0-9]{1,}.*$");
+        Pattern p = Pattern.compile("^.*imagearn.com/+image.php\\?id=[0-9]+.*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             // URL points to imagearn *image*, not gallery
@@ -77,7 +77,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div#gallery > div > a")) {
             String imageURL = thumb.attr("href");
             try {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagebamRipper.java
Patch:
@@ -81,7 +81,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div > a[target=_blank]:not(.footera)")) {
             imageURLs.add(thumb.attr("href"));
         }
@@ -124,7 +124,7 @@ private class ImagebamImageThread extends Thread {
         private URL url;
         private int index;
 
-        public ImagebamImageThread(URL url, int index) {
+        ImagebamImageThread(URL url, int index) {
             super();
             this.url = url;
             this.index = index;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagefapRipper.java
Patch:
@@ -120,7 +120,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("#gallery img")) {
             if (!thumb.hasAttr("src") || !thumb.hasAttr("width")) {
                 continue;
@@ -129,7 +129,7 @@ public List<String> getURLsFromPage(Document doc) {
             image = image.replaceAll(
                     "http://x.*.fap.to/images/thumb/",
                     "http://fap.to/images/full/");
-            image = image.replaceAll("w[0-9]{1,}-h[0-9]{1,}/", "");
+            image = image.replaceAll("w[0-9]+-h[0-9]+/", "");
             imageURLs.add(image);
             if (isThisATest()) {
                 break;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagestashRipper.java
Patch:
@@ -67,7 +67,7 @@ public JSONObject getNextPage(JSONObject json) throws IOException {
 
     @Override
     public List<String> getURLsFromJSON(JSONObject json) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         JSONArray images = json.getJSONArray("images");
         for (int i = 0; i < images.length(); i++) {
             JSONObject image = images.getJSONObject(i);

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagevenueRipper.java
Patch:
@@ -62,7 +62,7 @@ public Document getFirstPage() throws IOException {
     }
 
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("a[target=_blank]")) {
             imageURLs.add(thumb.attr("href"));
         }
@@ -83,7 +83,7 @@ private class ImagevenueImageThread extends Thread {
         private URL url;
         private int index;
 
-        public ImagevenueImageThread(URL url, int index) {
+        ImagevenueImageThread(URL url, int index) {
             super();
             this.url = url;
             this.index = index;

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -46,7 +46,7 @@ public Document getFirstPage() throws IOException {
     }
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
             String image = thumb.attr("src")
                                 .replaceAll("[-a-zA-Z0-9.]+s.imgbox.com",

File: src/main/java/com/rarchives/ripme/ripper/rippers/JagodibujaRipper.java
Patch:
@@ -50,7 +50,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         for (Element comicPageUrl : doc.select("div.gallery-icon > a")) {
             try {
                 sleep(500);

File: src/main/java/com/rarchives/ripme/ripper/rippers/LusciousRipper.java
Patch:
@@ -51,7 +51,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> urls = new ArrayList<String>();
+        List<String> urls = new ArrayList<>();
         Elements urlElements = page.select("img#single_picture");
         for (Element e : urlElements) {
             urls.add(e.attr("src"));

File: src/main/java/com/rarchives/ripme/ripper/rippers/MediacrushRipper.java
Patch:
@@ -25,7 +25,7 @@
 public class MediacrushRipper extends AbstractJSONRipper {
 
     /** Ordered list of preferred formats, sorted by preference (low-to-high) */
-    private static final Map<String, Integer> PREFERRED_FORMATS = new HashMap<String,Integer>();
+    private static final Map<String, Integer> PREFERRED_FORMATS = new HashMap<>();
     static {
         PREFERRED_FORMATS.put("mp4", 0);
         PREFERRED_FORMATS.put("wemb",1);
@@ -36,7 +36,7 @@ public class MediacrushRipper extends AbstractJSONRipper {
         PREFERRED_FORMATS.put("png", 6);
         PREFERRED_FORMATS.put("jpg", 7);
         PREFERRED_FORMATS.put("jpeg",8);
-    };
+    }
 
     public MediacrushRipper(URL url) throws IOException {
         super(url);
@@ -113,7 +113,7 @@ public JSONObject getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromJSON(JSONObject json) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         // Iterate over all files
         JSONArray files = json.getJSONArray("files");
         for (int i = 0; i < files.length(); i++) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ModelmayhemRipper.java
Patch:
@@ -41,7 +41,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
     @Override
     public void rip() throws IOException {
         Map<String,String> cookies  = null,
-                           postData = new HashMap<String,String>();
+                           postData = new HashMap<>();
         String gid = getGID(this.url),
                ref = "http://www.modelmayhem.com/" + gid;
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -126,7 +126,7 @@ private class MotherlessImageThread extends Thread {
         private URL url;
         private int index;
 
-        public MotherlessImageThread(URL url, int index) {
+        MotherlessImageThread(URL url, int index) {
             super();
             this.url = url;
             this.index = index;
@@ -142,7 +142,7 @@ public void run() {
                 Document doc = Http.url(u)
                                    .referrer(u)
                                    .get();
-                Pattern p = Pattern.compile("^.*__fileurl = '([^']{1,})';.*$", Pattern.DOTALL);
+                Pattern p = Pattern.compile("^.*__fileurl = '([^']+)';.*$", Pattern.DOTALL);
                 Matcher m = p.matcher(doc.outerHtml());
                 if (m.matches()) {
                     String file = m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/NatalieMuRipper.java
Patch:
@@ -86,7 +86,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         Pattern p; Matcher m;
         //select all album thumbnails
         for (Element span : page.select(".NA_articleGallery span")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/NhentaiRipper.java
Patch:
@@ -87,7 +87,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         Elements thumbs = page.select(".gallerythumb");
         for (Element el : thumbs) {
             String imageUrl = el.attr("href");

File: src/main/java/com/rarchives/ripme/ripper/rippers/NudeGalsRipper.java
Patch:
@@ -55,7 +55,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p;
         Matcher m;
 
-        p = Pattern.compile("^.*nude-gals\\.com\\/photoshoot\\.php\\?photoshoot_id=(\\d+)$");
+        p = Pattern.compile("^.*nude-gals\\.com/photoshoot\\.php\\?photoshoot_id=(\\d+)$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);
@@ -77,7 +77,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
 
         Elements thumbs = doc.select("#grid_container .grid > .grid_box");
         for (Element thumb : thumbs) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/PornhubRipper.java
Patch:
@@ -19,7 +19,7 @@
 
 public class PornhubRipper extends AlbumRipper {
     // All sleep times are in milliseconds
-    private static final int IMAGE_SLEEP_TIME    = 1  * 1000;
+    private static final int IMAGE_SLEEP_TIME    = 1000;
 
     private static final String DOMAIN = "pornhub.com", HOST = "Pornhub";
 
@@ -134,7 +134,7 @@ private class PornhubImageThread extends Thread {
         private URL url;
         private int index;
 
-        public PornhubImageThread(URL url, int index, File workingDir) {
+        PornhubImageThread(URL url, int index, File workingDir) {
             super();
             this.url = url;
             this.index = index;

File: src/main/java/com/rarchives/ripme/ripper/rippers/RajceRipper.java
Patch:
@@ -64,7 +64,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         for (Element el : page.select("a.photoThumb")) {
             result.add(el.attr("href"));
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/ShesFreakyRipper.java
Patch:
@@ -48,7 +48,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("a[data-lightbox=\"gallery\"]")) {
             String image = thumb.attr("href");
             imageURLs.add(image);

File: src/main/java/com/rarchives/ripme/ripper/rippers/SinnercomicsRipper.java
Patch:
@@ -71,7 +71,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         for (Element el : doc.select("meta[property=og:image]")) {
             String imageSource = el.attr("content");
             imageSource = imageSource.replace(" alt=", "");

File: src/main/java/com/rarchives/ripme/ripper/rippers/SupertangasRipper.java
Patch:
@@ -63,7 +63,7 @@ public void rip() throws IOException {
             }
             for (Element imageElement : images) {
                 String image = imageElement.attr("href");
-                image = image.replaceAll("\\/fotos\\/", "/fotos/images/");
+                image = image.replaceAll("/fotos/", "/fotos/images/");
                 addURLToDownload(new URL(image));
             }
             try {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ThechiveRipper.java
Patch:
@@ -23,7 +23,6 @@
 import org.jsoup.select.Elements;
 
 public class ThechiveRipper extends AbstractHTMLRipper {
-    public static boolean isTag;
 
     public ThechiveRipper(URL url) throws IOException {
     super(url);
@@ -44,7 +43,7 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p = Pattern.compile("^https?://thechive.com/[0-9]*/[0-9]*/[0-9]*/([a-zA-Z0-9_\\-]*)/?$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            isTag = false;
+            boolean isTag = false;
             return m.group(1);
         }
         throw new MalformedURLException("Expected thechive.com URL format: " +
@@ -59,7 +58,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> result = new ArrayList<String>();
+        List<String> result = new ArrayList<>();
         for (Element el : doc.select("img.attachment-gallery-item-full")) {
             String imageSource = el.attr("src");
             // We replace thumbs with resizes so we can the full sized images

File: src/main/java/com/rarchives/ripme/ripper/rippers/TumblrRipper.java
Patch:
@@ -77,7 +77,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
         return url;
     }
 
-    public boolean isTumblrURL(URL url) {
+    private boolean isTumblrURL(URL url) {
         String checkURL = "http://api.tumblr.com/v2/blog/";
         checkURL += url.getHost();
         checkURL += "/info?api_key=" + getApiKey();
@@ -202,7 +202,6 @@ private boolean handleJSON(JSONObject json) {
                         }
                     } catch (Exception e) {
                         logger.error("[!] Error while parsing photo in " + photo, e);
-                        continue;
                     }
                 }
             } else if (post.has("video_url")) {
@@ -254,7 +253,7 @@ public String getHost() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        final String DOMAIN_REGEX = "^https?://([a-zA-Z0-9\\-\\.]+)";
+        final String DOMAIN_REGEX = "^https?://([a-zA-Z0-9\\-.]+)";
 
         Pattern p;
         Matcher m;

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwodgalleriesRipper.java
Patch:
@@ -22,7 +22,7 @@
 public class TwodgalleriesRipper extends AbstractHTMLRipper {
 
     private int offset = 0;
-    private Map<String,String> cookies = new HashMap<String,String>();
+    private Map<String,String> cookies = new HashMap<>();
 
     public TwodgalleriesRipper(URL url) throws IOException {
         super(url);
@@ -90,7 +90,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         for (Element thumb : doc.select("div.hcaption > img")) {
             String image = thumb.attr("src");
             image = image.replace("/200H/", "/");
@@ -114,7 +114,7 @@ private void login() throws IOException {
         cookies = resp.cookies();
         String ctoken = resp.parse().select("form > input[name=ctoken]").first().attr("value");
 
-        Map<String,String> postdata = new HashMap<String,String>();
+        Map<String,String> postdata = new HashMap<>();
         postdata.put("user[login]", new String(Base64.decode("cmlwbWU=")));
         postdata.put("user[password]", new String(Base64.decode("cmlwcGVy")));
         postdata.put("rememberme", "1");

File: src/main/java/com/rarchives/ripme/ripper/rippers/VidbleRipper.java
Patch:
@@ -56,7 +56,7 @@ public List<String> getURLsFromPage(Document doc) {
     }
 
     private static List<String> getURLsFromPageStatic(Document doc) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         Elements els = doc.select("#ContentPlaceHolder1_divContent");
         Elements imgs = els.select("img");
         for (Element img : imgs) {
@@ -76,7 +76,7 @@ public void downloadURL(URL url, int index) {
     }
 
     public static List<URL> getURLsFromPage(URL url) throws IOException {
-        List<URL> urls = new ArrayList<URL>();
+        List<URL> urls = new ArrayList<>();
         Document doc = Http.url(url).get();
         for (String stringURL : getURLsFromPageStatic(doc)) {
             urls.add(new URL(stringURL));

File: src/main/java/com/rarchives/ripme/ripper/rippers/VineRipper.java
Patch:
@@ -84,7 +84,7 @@ public String getHost() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(www\\.)?vine\\.co/u/([0-9]{1,}).*$");
+        Pattern p = Pattern.compile("^https?://(www\\.)?vine\\.co/u/([0-9]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (!m.matches()) {
             throw new MalformedURLException("Expected format: http://vine.co/u/######");

File: src/main/java/com/rarchives/ripme/ripper/rippers/XbooruRipper.java
Patch:
@@ -57,7 +57,7 @@ public Document getNextPage(Document doc) throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> res = new ArrayList<String>(100);
+        List<String> res = new ArrayList<>(100);
         for (Element e : page.getElementsByTag("post")) {
             res.add(e.absUrl("file_url") + "#" + e.attr("id"));
         }
@@ -71,7 +71,7 @@ public void downloadURL(URL url, int index) {
 
     private String getTerm(URL url) throws MalformedURLException {
         if (gidPattern == null) {
-            gidPattern = Pattern.compile("^https?://(www\\.)?xbooru\\.com/(index.php)?.*([?&]tags=([a-zA-Z0-9$_.+!*'(),%-]+))(\\&|(#.*)?$)");
+            gidPattern = Pattern.compile("^https?://(www\\.)?xbooru\\.com/(index.php)?.*([?&]tags=([a-zA-Z0-9$_.+!*'(),%-]+))(&|(#.*)?$)");
         }
 
         Matcher m = gidPattern.matcher(url.toExternalForm());

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -87,7 +87,7 @@ public String getHost() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://[wmde.]*xhamster\\.com/photos/gallery/.*?(\\d{1,})$");
+        Pattern p = Pattern.compile("^https?://[wmde.]*xhamster\\.com/photos/gallery/.*?(\\d+)$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/ZizkiRipper.java
Patch:
@@ -20,7 +20,7 @@
 public class ZizkiRipper extends AbstractHTMLRipper {
 
     private Document albumDoc = null;
-    private Map<String,String> cookies = new HashMap<String,String>();
+    private Map<String,String> cookies = new HashMap<>();
 
     public ZizkiRipper(URL url) throws IOException {
         super(url);
@@ -76,7 +76,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document page) {
-        List<String> imageURLs = new ArrayList<String>();
+        List<String> imageURLs = new ArrayList<>();
         // Page contains images
         logger.info("Look for images.");
         for (Element thumb : page.select("img")) {
@@ -99,7 +99,6 @@ public List<String> getURLsFromPage(Document page) {
                      src = thumb.attr("src");
                      logger.debug("Found url with " + src);
                      if (!src.contains("zizki.com")) {
-                       continue;
                      } else {
                        imageURLs.add(src.replace("/styles/medium/public/","/styles/large/public/"));
                      }

File: src/main/java/com/rarchives/ripme/ripper/rippers/tamindirmp3.java
Patch:
@@ -48,7 +48,7 @@ public Document getFirstPage() throws IOException {
 
     @Override
     public List<String> getURLsFromPage(Document doc) {
-        List<String> music = new ArrayList<String>();
+        List<String> music = new ArrayList<>();
         for (Element el : doc.select("mp3")) {
             music.add(el.attr("src"));
         }

File: src/main/java/com/rarchives/ripme/ui/ContextMenuMouseListener.java
Patch:
@@ -30,7 +30,7 @@ public class ContextMenuMouseListener extends MouseAdapter {
     private String savedString = "";
     private Actions lastActionSelected;
 
-    private enum Actions { UNDO, CUT, COPY, PASTE, SELECT_ALL };
+    private enum Actions { UNDO, CUT, COPY, PASTE, SELECT_ALL }
 
     @SuppressWarnings("serial")
     public ContextMenuMouseListener() {

File: src/main/java/com/rarchives/ripme/utils/AES.java
Patch:
@@ -8,7 +8,7 @@
 import javax.crypto.spec.IvParameterSpec;
 import javax.crypto.spec.SecretKeySpec;
 
-public class AES {
+class AES {
 
     /**
      * Hack to get JCE Unlimited Strenght so we can use weird AES encryption stuff.

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -10,7 +10,7 @@
 public class ImagefapRipperTest extends RippersTest {
 
     public void testImagefapAlbums() throws IOException {
-        Map<URL, String> testURLs = new HashMap<URL, String>();
+        Map<URL, String> testURLs = new HashMap<>();
         // Album with specific title
         testURLs.put(new URL("http://www.imagefap.com/pictures/4649440/Frozen-%28Elsa-and-Anna%29?view=2"),
                              "Frozen (Elsa and Anna)");

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgurRipperTest.java
Patch:
@@ -16,7 +16,7 @@
 public class ImgurRipperTest extends RippersTest {
 
     public void testImgurURLFailures() throws IOException {
-        List<URL> failURLs = new ArrayList<URL>();
+        List<URL> failURLs = new ArrayList<>();
         // Imgur urls that should not work
         failURLs.add(new URL("http://imgur.com"));
         failURLs.add(new URL("http://imgur.com/"));
@@ -31,13 +31,12 @@ public void testImgurURLFailures() throws IOException {
                 fail("Instantiated ripper for URL that should not work: " + url);
             } catch (Exception e) {
                 // Expected
-                continue;
             }
         }
     }
 
     public void testImgurAlbums() throws IOException {
-        List<URL> contentURLs = new ArrayList<URL>();
+        List<URL> contentURLs = new ArrayList<>();
         // URLs that should return more than 1 image
         contentURLs.add(new URL("http://imgur.com/a/dS9OQ#0")); // Horizontal layout
         contentURLs.add(new URL("http://imgur.com/a/YpsW9#0")); // Grid layout

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -12,7 +12,7 @@
 public class InstagramRipperTest extends RippersTest {
 
     public void testInstagramGID() throws IOException {
-        Map<URL, String> testURLs = new HashMap<URL, String>();
+        Map<URL, String> testURLs = new HashMap<>();
         testURLs.put(new URL("http://instagram.com/Test_User"), "Test_User");
         testURLs.put(new URL("http://instagram.com/_test_user_"), "_test_user_");
         testURLs.put(new URL("http://instagram.com/-test-user-"), "-test-user-");
@@ -25,7 +25,7 @@ public void testInstagramGID() throws IOException {
     }
 
     public void testInstagramAlbums() throws IOException {
-        List<URL> contentURLs = new ArrayList<URL>();
+        List<URL> contentURLs = new ArrayList<>();
         contentURLs.add(new URL("http://instagram.com/anacheri"));
         for (URL url : contentURLs) {
             InstagramRipper ripper = new InstagramRipper(url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -169,7 +169,7 @@ public void testImagevenueRip() throws IOException {
     }
 
     public void testImgboxRip() throws IOException {
-        AbstractRipper ripper = new ImgboxRipper(new URL("http://imgbox.com/g/sEMHfsqx4w"));
+        AbstractRipper ripper = new ImgboxRipper(new URL("https://imgbox.com/g/FJPF7t26FD"));
         testRipper(ripper);
     }
 
@@ -217,7 +217,7 @@ public void testPhotobucketRip() throws IOException {
     }
 
     public void testPornhubRip() throws IOException {
-        AbstractRipper ripper = new PornhubRipper(new URL("http://www.pornhub.com/album/428351"));
+        AbstractRipper ripper = new PornhubRipper(new URL("https://www.pornhub.com/album/15680522"));
         testRipper(ripper);
     }
 
@@ -276,7 +276,7 @@ public void testVkPhotosRip() throws IOException {
     }
 
     public void testXhamsterAlbums() throws IOException {
-        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/volleyball-sluts-8305007"));
+        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/polaroids-2-8940215"));
         testRipper(ripper);
     }
 }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -16,7 +16,6 @@ public void testInstagramGID() throws IOException {
         testURLs.put(new URL("http://instagram.com/Test_User"), "Test_User");
         testURLs.put(new URL("http://instagram.com/_test_user_"), "_test_user_");
         testURLs.put(new URL("http://instagram.com/-test-user-"), "-test-user-");
-        testURLs.put(new URL("http://statigr.am/username"), "username");
         for (URL url : testURLs.keySet()) {
             InstagramRipper ripper = new InstagramRipper(url);
             ripper.setup();

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/VideoRippersTest.java
Patch:
@@ -37,8 +37,8 @@ private void videoTestHelper(VideoRipper ripper) {
 
     public void testXvideosRipper() throws IOException {
         List<URL> contentURLs = new ArrayList<URL>();
-        contentURLs.add(new URL("http://www.xvideos.com/video1428195/stephanie_first_time_anal"));
-        contentURLs.add(new URL("http://www.xvideos.com/video7136868/vid-20140205-wa0011"));
+        contentURLs.add(new URL("https://www.xvideos.com/video19719109/ziggy_star_ultra_hard_anal_pounding"));
+        contentURLs.add(new URL("https://www.xvideos.com/video23515878/dee_s_pool_toys"));
         for (URL url : contentURLs) {
             XvideosRipper ripper = new XvideosRipper(url);
             videoTestHelper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/rippers/ShesFreakyRipper.java
Patch:
@@ -51,7 +51,7 @@ public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<String>();
         for (Element thumb : doc.select("a[data-lightbox=\"gallery\"]")) {
             String image = thumb.attr("href");
-            imageURLs.add(image);
+            imageURLs.add("https:" + image);
         }
         return imageURLs;
     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.14";
+    private static final String DEFAULT_VERSION = "1.5.15";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaiCafeRipper.java
Patch:
@@ -19,7 +19,7 @@
 public class HentaiCafeRipper extends AbstractHTMLRipper {
 
     public HentaiCafeRipper(URL url) throws IOException {
-    super(url);
+        super(url);
     }
 
         @Override

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.13";
+    private static final String DEFAULT_VERSION = "1.5.14";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -224,12 +224,12 @@ public static CommandLine getArgs(String[] args) {
     }
 
     private static void loadHistory() {
-        File historyFile = new File("history.json");
+        File historyFile = new File(Utils.getConfigDir() + File.separator + "history.json");
         HISTORY.clear();
         if (historyFile.exists()) {
             try {
-                logger.info("Loading history from history.json");
-                HISTORY.fromFile("history.json");
+                logger.info("Loading history from " + historyFile.getCanonicalPath());
+                HISTORY.fromFile(historyFile.getCanonicalPath());
             } catch (IOException e) {
                 logger.error("Failed to load history from file " + historyFile, e);
                 System.out.println(

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -224,12 +224,12 @@ public static CommandLine getArgs(String[] args) {
     }
 
     private static void loadHistory() {
-        File historyFile = new File("history.json");
+        File historyFile = new File(Utils.getConfigDir() + File.separator + "history.json");
         HISTORY.clear();
         if (historyFile.exists()) {
             try {
-                logger.info("Loading history from history.json");
-                HISTORY.fromFile("history.json");
+                logger.info("Loading history from " + historyFile.getCanonicalPath());
+                HISTORY.fromFile(historyFile.getCanonicalPath());
             } catch (IOException e) {
                 logger.error("Failed to load history from file " + historyFile, e);
                 System.out.println(

File: src/main/java/com/rarchives/ripme/ripper/rippers/SankakuComplexRipper.java
Patch:
@@ -43,7 +43,7 @@ public String getGID(URL url) throws MalformedURLException {
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             try {
-                return URLDecoder.decode(m.group(1), "UTF-8");
+                return URLDecoder.decode(m.group(2), "UTF-8");
             } catch (UnsupportedEncodingException e) {
                 throw new MalformedURLException("Cannot decode tag name '" + m.group(1) + "'");
             }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.12";
+    private static final String DEFAULT_VERSION = "1.5.13";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.11";
+    private static final String DEFAULT_VERSION = "1.5.12";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.9";
+    private static final String DEFAULT_VERSION = "1.5.10";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.7";
+    private static final String DEFAULT_VERSION = "1.5.8";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.5";
+    private static final String DEFAULT_VERSION = "1.5.6";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/SmuttyRipper.java
Patch:
@@ -84,7 +84,7 @@ public void rip() throws IOException {
                     }
                 }
                 imageUrl = sb.toString();
-                addURLToDownload(new URL(imageUrl));
+                addURLToDownload(new URL("http:" + imageUrl));
             }
             if (doc.select("#next").size() == 0) {
                 break; // No more pages

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -173,7 +173,9 @@ private String getFullSizeImage(String imageUrl) throws IOException {
         sendUpdate(STATUS.LOADING_RESOURCE, imageUrl);
         Document doc = new Http(imageUrl).get(); // Retrieve the webpage  of the image URL
         Element fullSizeImage = doc.select(".photo").first(); // Select the "photo" element from the page (there should only be 1)
-        String path = "https://cdn.ampproject.org/i/s/www.8muses.com/data/ufu/small/" + fullSizeImage.children().select("#imageName").attr("value"); // Append the path to the fullsize image file to the standard prefix
+        // subdir is the sub dir the cdn has the image stored in
+        String subdir = doc.select("input#imageDir").first().attr("value");
+        String path = "https://cdn.ampproject.org/i/s/www.8muses.com/" + subdir + "small/" + fullSizeImage.children().select("#imageName").attr("value"); // Append the path to the fullsize image file to the standard prefix
         return path;
     }
 

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.5.1";
+    private static final String DEFAULT_VERSION = "1.5.2";
     private static final String REPO_NAME = "ripmeapp/ripme";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/" + REPO_NAME + "/master/ripme.json";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -276,7 +276,7 @@ public void testVkPhotosRip() throws IOException {
     }
 
     public void testXhamsterAlbums() throws IOException {
-        XhamsterRipper ripper = new XhamsterRipper(new URL("http://xhamster.com/photos/gallery/1462237/alyssa_gadson.html"));
+        XhamsterRipper ripper = new XhamsterRipper(new URL("https://xhamster.com/photos/gallery/volleyball-sluts-8305007"));
         testRipper(ripper);
     }
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgurRipper.java
Patch:
@@ -104,6 +104,7 @@ public String getAlbumTitle(URL url) throws MalformedURLException {
                 */
 
                 String title = null;
+                final String defaultTitle = "Imgur: The most awesome images on the Internet";
                 logger.info("Trying to get album title");
                 elems = albumDoc.select("meta[property=og:title]");
                 if (elems != null) {
@@ -112,15 +113,15 @@ public String getAlbumTitle(URL url) throws MalformedURLException {
                 }
                 // This is here encase the album is unnamed, to prevent
                 // Imgur: The most awesome images on the Internet from being added onto the album name
-                if (title.contains("Imgur: The most awesome images on the Internet")) {
+                if (title.contains(defaultTitle)) {
                     logger.debug("Album is untitled or imgur is returning the default title");
                     // We set the title to "" here because if it's found in the next few attempts it will be changed
                     // but if it's nto found there will be no reason to set it later
                     title = "";
                     logger.debug("Trying to use title tag to get title");
                     elems = albumDoc.select("title");
                     if (elems != null) {
-                        if (elems.text().contains("Imgur: The most awesome images on the Internet")) {
+                        if (elems.text().contains(defaultTitle)) {
                             logger.debug("Was unable to get album title or album was untitled");
                         }
                         else {

File: src/main/java/com/rarchives/ripme/ripper/AbstractJSONRipper.java
Patch:
@@ -40,7 +40,7 @@ public boolean keepSortOrder() {
     public boolean canRip(URL url) {
         return url.getHost().endsWith(getDomain());
     }
-    
+
     @Override
     public URL sanitizeURL(URL url) throws MalformedURLException {
         return url;

File: src/main/java/com/rarchives/ripme/ripper/DownloadVideoThread.java
Patch:
@@ -135,7 +135,7 @@ public void run() {
         observer.downloadCompleted(url, saveAs);
         logger.info("[+] Saved " + url + " as " + this.prettySaveAs);
     }
-    
+
     private int getTotalBytes(URL url) throws IOException {
         HttpURLConnection conn = (HttpURLConnection) url.openConnection();
         conn.setRequestMethod("HEAD");

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -121,7 +121,7 @@ private String getOriginalUrl(String imageURL) {
         imageURL = imageURL.replaceAll("\\?ig_cache_key.+$", "");
         return imageURL;
     }
-    
+
     private String getMedia(JSONObject data) {
         String imageURL = "";
         if (data.has("videos")) {
@@ -131,14 +131,14 @@ private String getMedia(JSONObject data) {
         }
         return imageURL;
     }
-	
+
     @Override
     public List<String> getURLsFromJSON(JSONObject json) {
         List<String> imageURLs = new ArrayList<String>();
         JSONArray datas = json.getJSONArray("items");
         for (int i = 0; i < datas.length(); i++) {
             JSONObject data = (JSONObject) datas.get(i);
-			
+
             String dataType = data.getString("type");
             if (dataType.equals("carousel")) {
                 JSONArray carouselMedias = data.getJSONArray("carousel_media");

File: src/main/java/com/rarchives/ripme/ripper/rippers/ModelmayhemRipper.java
Patch:
@@ -55,7 +55,7 @@ public void rip() throws IOException {
                     .method(Method.GET)
                     .execute();
         cookies = resp.cookies();
-        
+
         resp = Jsoup.connect("http://www.modelmayhem.com/includes/js/auth.php")
                 .cookies(cookies)
                 .ignoreContentType(true)

File: src/main/java/com/rarchives/ripme/ripper/rippers/NfsfwRipper.java
Patch:
@@ -41,7 +41,7 @@ public String getHost() {
     public URL sanitizeURL(URL url) throws MalformedURLException {
         return url;
     }
-    
+
     @Override
     public String getAlbumTitle(URL url) throws MalformedURLException {
         try {
@@ -185,7 +185,7 @@ public void run() {
             }
         }
     }
-    
+
     private class Pair {
         public String first, second;
         public Pair(String first, String second) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/TeenplanetRipper.java
Patch:
@@ -34,7 +34,7 @@ public String getHost() {
     public URL sanitizeURL(URL url) throws MalformedURLException {
         return url;
     }
-    
+
     public String getAlbumTitle(URL url) throws MalformedURLException {
         try {
             // Attempt to use album title as GID

File: src/main/java/com/rarchives/ripme/ripper/rippers/VkRipper.java
Patch:
@@ -160,7 +160,7 @@ private void ripImages() throws IOException {
         }
         waitForThreads();
     }
-    
+
     private Map<String,String> getPhotoIDsToURLs(String photoID) throws IOException {
         Map<String,String> photoIDsToURLs = new HashMap<String,String>();
         Map<String,String> postData = new HashMap<String,String>();

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/MotherlessVideoRipper.java
Patch:
@@ -30,7 +30,7 @@ public boolean canRip(URL url) {
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
-    
+
     @Override
     public URL sanitizeURL(URL url) throws MalformedURLException {
         return url;

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/ViddmeRipper.java
Patch:
@@ -31,7 +31,7 @@ public boolean canRip(URL url) {
         Matcher m = p.matcher(url.toExternalForm());
         return m.matches();
     }
-    
+
     @Override
     public URL sanitizeURL(URL url) throws MalformedURLException {
         return url;

File: src/main/java/com/rarchives/ripme/ui/RipStatusComplete.java
Patch:
@@ -16,7 +16,7 @@ public RipStatusComplete(File dir, int count) {
         this.dir = dir;
         this.count = count;
     }
-    
+
     public String getDir() {
         String result;
         try {

File: src/main/java/com/rarchives/ripme/utils/AES.java
Patch:
@@ -31,7 +31,7 @@ public static String decrypt(String cipherText, String key, int nBits) throws Ex
         nBits = nBits / 8;
         byte[] data = Base64.decode(cipherText);
         byte[] k = Arrays.copyOf(key.getBytes(), nBits);
- 
+
         Cipher cipher = Cipher.getInstance("AES/CTR/NoPadding");
         SecretKey secretKey = generateSecretKey(k, nBits);
         byte[] nonceBytes = Arrays.copyOf(Arrays.copyOf(data, 8), nBits / 2);

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -17,7 +17,7 @@
 
 /**
  * Wrapper around the Jsoup connection methods.
- * 
+ *
  * Benefit is retry logic.
  */
 public class Http {
@@ -38,7 +38,7 @@ public Http(URL url) {
         this.url = url.toExternalForm();
         defaultSettings();
     }
-    
+
     public static Http url(String url) {
         return new Http(url);
     }

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImagefapRipperTest.java
Patch:
@@ -8,7 +8,7 @@
 import com.rarchives.ripme.ripper.rippers.ImagefapRipper;
 
 public class ImagefapRipperTest extends RippersTest {
-    
+
     public void testImagefapAlbums() throws IOException {
         Map<URL, String> testURLs = new HashMap<URL, String>();
         // Album with specific title

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -49,7 +49,7 @@ public String getGID(URL url) throws MalformedURLException {
 
     @Override
     public URL sanitizeURL(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^.*instagram\\.com/([a-zA-Z0-9\\-_.]{3,}).*$");
+        Pattern p = Pattern.compile("^.*instagram\\.com/([a-zA-Z0-9\\-_.]+).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return new URL("http://instagram.com/" + m.group(1));

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.17";
+    private static final String DEFAULT_VERSION = "1.4.18";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.15";
+    private static final String DEFAULT_VERSION = "1.4.16";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.14";
+    private static final String DEFAULT_VERSION = "1.4.15";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.12";
+    private static final String DEFAULT_VERSION = "1.4.13";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuraffinityRipper.java
Patch:
@@ -177,6 +177,7 @@ public boolean saveText(URL url, String subdirectory, String text, int index) {
         String saveAs = "";
         File saveFileAs;
         saveAs = text.split("\n")[0];
+        saveAs = saveAs.replaceAll("^(\\S+)\\s+by\\s+(.*)$", "$2_$1");
         for (int i = 1;i < text.split("\n").length; i++) {
              newText = newText.replace("\\","").replace("/","").replace("~","") + "\n" + text.split("\n")[i];
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.11";
+    private static final String DEFAULT_VERSION = "1.4.12";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -709,6 +709,7 @@ public void mouseClicked(MouseEvent e) {
         configSaveDirButton.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent arg0) {
+                UIManager.put("FileChooser.useSystemExtensionHiding", false);
                 JFileChooser jfc = new JFileChooser(Utils.getWorkingDirectory());
                 jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                 int returnVal = jfc.showDialog(null, "select directory");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.10";
+    private static final String DEFAULT_VERSION = "1.4.11";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ripper/rippers/DeviantartRipper.java
Patch:
@@ -363,7 +363,7 @@ public String smallToFull(String thumb, String page) {
             if (els.size() > 0) {
                 // Full-size image
                 String downloadLink = els.get(0).attr("href");
-                logger.info("Found download page: " + downloadLink);
+                logger.info("Found download button link: " + downloadLink);
                 HttpURLConnection con = (HttpURLConnection) new URL(downloadLink).openConnection();
                 con.setRequestProperty("Referer",this.url.toString());
                 String cookieString = "";
@@ -376,10 +376,11 @@ public String smallToFull(String thumb, String page) {
                 con.setInstanceFollowRedirects(true);
                 con.connect();
                 int code = con.getResponseCode();
-                String location = con.getHeaderField("Location");
+                String location = con.getURL().toString();
                 con.disconnect();
                 if (location.contains("//orig")) {
                     fsimage = location;
+                    logger.info("Found image download: " + location);
                 }
             }
             if (fsimage != null) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.8";
+    private static final String DEFAULT_VERSION = "1.4.9";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ripper/rippers/DeviantartRipper.java
Patch:
@@ -180,9 +180,9 @@ public List<String> getURLsFromPage(Document page) {
     @Override
     public List<String> getDescriptionsFromPage(Document page) {
         List<String> textURLs = new ArrayList<String>();
-
         // Iterate over all thumbnails
-        for (Element thumb : page.select("div.zones-container a.thumb")) {
+        for (Element thumb : page.select("div.zones-container span.thumb")) {
+            logger.info(thumb.attr("href"));
             if (isStopped()) {
                 break;
             }
@@ -191,6 +191,7 @@ public List<String> getDescriptionsFromPage(Document page) {
                 continue; // a.thumbs to other albums are invisible
             }
             textURLs.add(thumb.attr("href"));
+
         }
         return textURLs;
     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.6";
+    private static final String DEFAULT_VERSION = "1.4.7";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ripper/rippers/WordpressComicRipper.java
Patch:
@@ -69,13 +69,13 @@ public String getAlbumTitle(URL url) throws MalformedURLException {
                 return "totempole666.com" + "_" + "The_cummoner";
             }
 
-            Pattern buttsmithyPat = Pattern.compile("https?://buttsmithy.com/archives/comic/([a-zA-Z0-9_-])/?$");
+            Pattern buttsmithyPat = Pattern.compile("https?://buttsmithy.com/archives/comic/([a-zA-Z0-9_-]*)/?$");
             Matcher buttsmithyMat = buttsmithyPat.matcher(url.toExternalForm());
             if (buttsmithyMat.matches()) {
-                return "totempole666.com" + "_" + "Alfie";
+                return "buttsmithy.com" + "_" + "Alfie";
             }
 
-            Pattern theMonsterUnderTheBedPat = Pattern.compile("https?://themonsterunderthebed.net/?comic=([a-zA-Z0-9_-])/?$");
+            Pattern theMonsterUnderTheBedPat = Pattern.compile("https?://themonsterunderthebed.net/?comic=([a-zA-Z0-9_-]*)/?$");
             Matcher theMonsterUnderTheBedMat = theMonsterUnderTheBedPat.matcher(url.toExternalForm());
             if (theMonsterUnderTheBedMat.matches()) {
                 return "themonsterunderthebed.net_TheMonsterUnderTheBed";

File: src/main/java/com/rarchives/ripme/ripper/rippers/HentaifoundryRipper.java
Patch:
@@ -94,7 +94,7 @@ public List<String> getURLsFromPage(Document doc) {
                 logger.info("Couldn't find user & image ID in " + thumb.attr("href"));
                 continue;
             }
-            String[] titleSplit = thumb.attr("herf").split("/");
+            String[] titleSplit = thumb.attr("href").split("/");
             String title = titleSplit[titleSplit.length -1];
             String user = imgMatcher.group(1),
                 imageId = imgMatcher.group(2);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.4";
+    private static final String DEFAULT_VERSION = "1.4.5";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ripper/rippers/SinnercomicsRipper.java
Patch:
@@ -74,6 +74,7 @@ public List<String> getURLsFromPage(Document doc) {
         List<String> result = new ArrayList<String>();
         for (Element el : doc.select("meta[property=og:image]")) {
             String imageSource = el.attr("content");
+            imageSource = imageSource.replace(" alt=", "");
             result.add(imageSource);
         }
         return result;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.2";
+    private static final String DEFAULT_VERSION = "1.4.3";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.4.0";
+    private static final String DEFAULT_VERSION = "1.4.1";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -49,7 +49,7 @@ public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<String>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
             String image = thumb.attr("src")
-                                .replaceAll("[a-zA-Z0-9.]+s.imgbox.com",
+                                .replaceAll("[-a-zA-Z0-9.]+s.imgbox.com",
                                             "i.imgbox.com");
             imageURLs.add(image);
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.3.9";
+    private static final String DEFAULT_VERSION = "1.4.0";
     private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,8 +21,8 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.3.7";
-    private static final String updateJsonURL = "https://cdn.rawgit.com/4pr0n/ripme/master/ripme.json";
+    private static final String DEFAULT_VERSION = "1.3.8";
+    private static final String updateJsonURL = "https://raw.githubusercontent.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";
 

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,8 +21,8 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.3.5";
-    private static final String updateJsonURL = "https://cdn.rawgit.com/4pr0n/ripme/" + DEFAULT_VERSION + "/ripme.json";
+    private static final String DEFAULT_VERSION = "1.3.6";
+    private static final String updateJsonURL = "https://cdn.rawgit.com/4pr0n/ripme/master/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";
 

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,8 +21,8 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.3.1";
-    private static final String updateJsonURL = "https://cdn.rawgit.com/4pr0n/ripme/master/ripme.json";
+    private static final String DEFAULT_VERSION = "1.3.2";
+    private static final String updateJsonURL = "https://cdn.rawgit.com/4pr0n/ripme/" + DEFAULT_VERSION + "/ripme.json";
     private static final String mainFileName = "ripme.jar";
     private static final String updateFileName = "ripme.jar.update";
 
@@ -34,7 +34,7 @@ public static String getThisJarVersion() {
         String thisVersion = UpdateUtils.class.getPackage().getImplementationVersion();
         if (thisVersion == null) {
             // Version is null if we're not running from the JAR
-            thisVersion = DEFAULT_VERSION; ; // Super-high version number
+            thisVersion = DEFAULT_VERSION; // Super-high version number
         }
         return thisVersion;
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/XhamsterRipper.java
Patch:
@@ -46,8 +46,8 @@ public void rip() throws IOException {
                 }
                 String image = thumb.attr("src");
                 image = image.replaceAll(
-                        "http://p[0-9]*\\.",
-                        "http://up.");
+                        "https://upt.xhcdn\\.",
+                        "http://up.xhamster.");
                 image = image.replaceAll(
                         "_160\\.",
                         "_1000.");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.2.12";
+    private static final String DEFAULT_VERSION = "1.2.13";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -178,7 +178,9 @@ protected void waitForThreads() {
      */
     public void retrievingSource(String url) {
         RipStatusMessage msg = new RipStatusMessage(STATUS.LOADING_RESOURCE, url);
-        observer.update(this,  msg);
+        if (observer != null) {
+			observer.update(this,  msg);
+        }
     }
 
     /**

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.2.8";
+    private static final String DEFAULT_VERSION = "1.2.9";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.2.6";
+    private static final String DEFAULT_VERSION = "1.2.7";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -176,7 +176,7 @@ protected void waitForThreads() {
      * @param url
      *      URL being retrieved
      */
-    public void retrievingSource(URL url) {
+    public void retrievingSource(String url) {
         RipStatusMessage msg = new RipStatusMessage(STATUS.LOADING_RESOURCE, url);
         observer.update(this,  msg);
     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.2.5";
+    private static final String DEFAULT_VERSION = "1.2.6";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractHTMLRipper.java
Patch:
@@ -88,7 +88,7 @@ public void rip() throws IOException {
                     break;
                 }
             }
-            if (hasDescriptionSupport()) {
+            if (hasDescriptionSupport() && Utils.getConfigBoolean("descriptions.save", false)) {
                 logger.debug("Fetching description(s) from " + doc.location());
             	List<String> textURLs = getDescriptionsFromPage(doc);
             	if (textURLs.size() > 0) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.2.3";
+    private static final String DEFAULT_VERSION = "1.2.4";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/TumblrRipper.java
Patch:
@@ -225,7 +225,7 @@ public String getGID(URL url) throws MalformedURLException {
             return this.subdomain + "_post_" + this.postNumber;
         }
         // Subdomain-level URL
-        p = Pattern.compile(DOMAIN_REGEX + ".*$");
+        p = Pattern.compile(DOMAIN_REGEX + "/?$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             this.albumType = ALBUM_TYPE.SUBDOMAIN;

File: src/main/java/com/rarchives/ripme/ripper/rippers/PornhubRipper.java
Patch:
@@ -122,7 +122,7 @@ public void rip() throws IOException {
     }
 
     public boolean canRip(URL url) {
-        return url.getHost().endsWith(DOMAIN);
+        return url.getHost().endsWith(DOMAIN) && url.getPath().startsWith("/album");
     }
 
     /**

File: src/main/java/com/rarchives/ripme/ripper/rippers/ShesFreakyRipper.java
Patch:
@@ -49,7 +49,7 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<String>();
-        for (Element thumb : doc.select("a.highslide")) {
+        for (Element thumb : doc.select("a[data-lightbox=\"gallery\"]")) {
             String image = thumb.attr("href");
             imageURLs.add(image);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/GfycatRipper.java
Patch:
@@ -65,7 +65,7 @@ public void rip() throws IOException {
     public static String getVideoURL(URL url) throws IOException {
         logger.info("Retrieving " + url.toExternalForm());
         Document doc = Http.url(url).get();
-        Elements videos = doc.select("source#mp4source");
+        Elements videos = doc.select("source#mp4Source");
         if (videos.size() == 0) {
             throw new IOException("Could not find source#mp4source at " + url);
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/tamindirmp3.java
Patch:
@@ -52,7 +52,7 @@ public List<String> getURLsFromPage(Document doc) {
         for (Element el : doc.select("mp3")) {
             music.add(el.attr("src"));
         }
-        return music
+        return music;
     }
     @Override
     public void downloadURL(URL url, int index) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -23,7 +23,7 @@ public class ChanRipper extends AbstractHTMLRipper {
         new ChanSite(Arrays.asList("archive.moe"),        Arrays.asList("data.archive.moe")),
         new ChanSite(Arrays.asList("4archive.org"),       Arrays.asList("imgur.com")),
         new ChanSite(Arrays.asList("archive.4plebs.org"), Arrays.asList("img.4plebs.org")),
-        new ChanSite(Arrays.asList("fgts.jp"),            Arrays.asList("dat.fgts.jp"))
+        new ChanSite(Arrays.asList("fgts.jp"),            Arrays.asList("dat.fgtsi.org"))
         );
     public static List<String> url_piece_blacklist = Arrays.asList(
         "=http",

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -23,7 +23,7 @@ public class ChanRipper extends AbstractHTMLRipper {
         new ChanSite(Arrays.asList("archive.moe"),        Arrays.asList("data.archive.moe")),
         new ChanSite(Arrays.asList("4archive.org"),       Arrays.asList("imgur.com")),
         new ChanSite(Arrays.asList("archive.4plebs.org"), Arrays.asList("img.4plebs.org")),
-        new ChanSite(Arrays.asList("fgts.jp"),            Arrays.asList("dat.fgts.jp"))
+        new ChanSite(Arrays.asList("fgts.jp"),            Arrays.asList("dat.fgtsi.org"))
         );
     public static List<String> url_piece_blacklist = Arrays.asList(
         "=http",

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.9";
+    private static final String DEFAULT_VERSION = "1.2.0";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagebamRipper.java
Patch:
@@ -139,7 +139,7 @@ private void fetchImage() {
             try {
                 Document doc = Http.url(url).get();
                 // Find image
-                Elements images = doc.select("td > img");
+                Elements images = doc.select(".image-container img");
                 if (images.size() == 0) {
                     logger.warn("Image not found at " + this.url);
                     return;

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -60,6 +60,8 @@ public void testDeviantartNSFWAlbum() throws IOException {
     public void testEightmusesAlbum() throws IOException {
         EightmusesRipper ripper = new EightmusesRipper(new URL("http://www.8muses.com/index/category/jab-hotassneighbor7"));
         testRipper(ripper);
+        ripper = new EightmusesRipper(new URL("https://www.8muses.com/album/jab-comics/a-model-life"));
+        testRipper(ripper);
     }
 
     public void testVineboxAlbum() throws IOException {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.8";
+    private static final String DEFAULT_VERSION = "1.1.9";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgurRipperTest.java
Patch:
@@ -33,7 +33,6 @@ public void testImgurURLFailures() throws IOException {
     public void testImgurAlbums() throws IOException {
         List<URL> contentURLs = new ArrayList<URL>();
         // URLs that should return more than 1 image
-        contentURLs.add(new URL("http://imgur.com/a/hqJIu")); // Vertical layout
         contentURLs.add(new URL("http://imgur.com/a/dS9OQ#0")); // Horizontal layout
         contentURLs.add(new URL("http://imgur.com/a/YpsW9#0")); // Grid layout
         contentURLs.add(new URL("http://imgur.com/a/WxG6f/layout/vertical#0"));

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -27,7 +27,7 @@ public void testInstagramGID() throws IOException {
 
     public void testInstagramAlbums() throws IOException {
         List<URL> contentURLs = new ArrayList<URL>();
-        contentURLs.add(new URL("http://instagram.com/tayloralesia/"));
+        contentURLs.add(new URL("http://instagram.com/anacheri"));
         for (URL url : contentURLs) {
             InstagramRipper ripper = new InstagramRipper(url);
             testRipper(ripper);

File: src/main/java/com/rarchives/ripme/ripper/rippers/SankakuComplexRipper.java
Patch:
@@ -83,8 +83,7 @@ public List<String> getURLsFromPage(Document doc) {
     public void downloadURL(URL url, int index) {
         // Mock up the URL of the post page based on the post ID at the end of the URL.
         String postId = url.toExternalForm().replaceAll(".*\\?", "");
-        String refererURL = "https://idol.sankakucomplex.com/post/show/" + postId;
-        addURLToDownload(url, postId + "_", "", refererURL, cookies);
+        addURLToDownload(url, postId + "_", "", "", null);
     }
 
     @Override

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/BasicRippersTest.java
Patch:
@@ -228,7 +228,7 @@ public void testPornhubRip() throws IOException {
     }
 
     public void testSankakuChanRip() throws IOException {
-        AbstractRipper ripper = new SankakuComplexRipper(new URL("https://chan.sankakucomplex.com/?tags=blue_necktie"));
+        AbstractRipper ripper = new SankakuComplexRipper(new URL("https://chan.sankakucomplex.com/?tags=1girl"));
         testRipper(ripper);
     }
     public void testSankakuIdolRip() throws IOException {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagestashRipper.java
Patch:
@@ -73,7 +73,7 @@ public List<String> getURLsFromJSON(JSONObject json) {
             JSONObject image = images.getJSONObject(i);
             String imageURL = image.getString("src");
             if (imageURL.startsWith("/")) {
-                imageURL = "http://imagestash.org" + imageURL;
+                imageURL = "https://imagestash.org" + imageURL;
             }
             imageURLs.add(imageURL);
         }

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -123,16 +123,18 @@ public JSONObject getJSON() throws IOException {
 
     public Response response() throws IOException {
         Response response = null;
+        IOException lastException = null;
         int retries = this.retries;
         while (--retries >= 0) {
             try {
                 response = connection.execute();
                 return response;
             } catch (IOException e) {
                 logger.warn("Error while loading " + url, e);
+                lastException = e;
                 continue;
             }
         }
-        throw new IOException("Failed to load " + url + " after " + this.retries + " attempts");
+        throw new IOException("Failed to load " + url + " after " + this.retries + " attempts", lastException);
     }
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagefapRipper.java
Patch:
@@ -139,7 +139,8 @@ public List<String> getURLsFromPage(Document doc) {
     
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        // Send referrer for image downloads
+        addURLToDownload(url, getPrefix(index), "", this.url.toExternalForm(), null);
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagefapRipper.java
Patch:
@@ -139,7 +139,8 @@ public List<String> getURLsFromPage(Document doc) {
     
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        // Send referrer for image downloads
+        addURLToDownload(url, getPrefix(index), "", this.url.toExternalForm(), null);
     }
 
     @Override

File: src/main/java/com/rarchives/ripme/ripper/AlbumRipper.java
Patch:
@@ -175,6 +175,7 @@ public void setWorkingDir(URL url) throws IOException {
         } else {
             title = super.getAlbumTitle(this.url);
         }
+        logger.debug("Using album title '" + title + "'");
         title = Utils.filesystemSafe(title);
         path += title + File.separator;
         this.workingDir = new File(path);

File: src/main/java/com/rarchives/ripme/ripper/DownloadVideoThread.java
Patch:
@@ -71,7 +71,7 @@ public void run() {
         }
         observer.setBytesTotal(bytesTotal);
         observer.sendUpdate(STATUS.TOTAL_BYTES, bytesTotal);
-        logger.info("Size of file at " + this.url + " = " + bytesTotal + "b");
+        logger.debug("Size of file at " + this.url + " = " + bytesTotal + "b");
 
         int tries = 0; // Number of attempts to download
         do {
@@ -95,6 +95,7 @@ public void run() {
                 huc.setRequestProperty("Referer", this.url.toExternalForm()); // Sic
                 huc.setRequestProperty("User-agent", AbstractRipper.USER_AGENT);
                 tries += 1;
+                logger.debug("Request properties: " + huc.getRequestProperties().toString());
                 huc.connect();
                 // Check status code
                 bis = new BufferedInputStream(huc.getInputStream());

File: src/main/java/com/rarchives/ripme/ripper/VideoRipper.java
Patch:
@@ -58,6 +58,9 @@ public boolean addURLToDownload(URL url, File saveAs) {
         }
         else {
             if (isThisATest()) {
+                // Tests shouldn't download the whole video
+                // Just change this.url to the download URL so the test knows we found it.
+                logger.debug("Test rip, found URL: " + url);
                 this.url = url;
                 return true;
             }

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuskatorRipper.java
Patch:
@@ -63,7 +63,7 @@ public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<String>();
         String html = doc.html();
         // Get "baseUrl"
-        String baseUrl = Utils.between(html, "var baseUrl = unescape('", "'").get(0);
+        String baseUrl = Utils.between(html, "unescape('", "'").get(0);
         try {
             baseUrl = URLDecoder.decode(baseUrl, "UTF-8");
         } catch (UnsupportedEncodingException e) {
@@ -73,7 +73,7 @@ public List<String> getURLsFromPage(Document doc) {
             baseUrl = "http:" + baseUrl;
         }
         // Iterate over images
-        for (String filename : Utils.between(html, ".src=baseUrl+'", "'")) {
+        for (String filename : Utils.between(html, "+'", "'")) {
             imageURLs.add(baseUrl + filename);
         }
         return imageURLs;

File: src/main/java/com/rarchives/ripme/ripper/rippers/GifyoRipper.java
Patch:
@@ -93,16 +93,16 @@ public Document getNextPage(Document doc) throws IOException {
     @Override
     public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<String>();
-        for (Element image : doc.select("div.gif img")) {
-            String imageUrl = image.attr("src");
+        for (Element image : doc.select("img.profile_gif")) {
+            String imageUrl = image.attr("data-animated");
             if (imageUrl.startsWith("//")) {
                 imageUrl = "http:" + imageUrl;
             }
             imageUrl = imageUrl.replace("/medium/", "/large/");
             imageUrl = imageUrl.replace("_s.gif", ".gif");
             imageURLs.add(imageUrl);
         }
-        logger.info("Found " + imageURLs.size() + " images");
+        logger.debug("Found " + imageURLs.size() + " images");
         return imageURLs;
     }
     

File: src/main/java/com/rarchives/ripme/ripper/rippers/PhotobucketRipper.java
Patch:
@@ -167,7 +167,7 @@ public List<String> ripAlbumAndGetSubalbums(String theUrl) throws IOException {
                 filesIndex += 1;
                 addURLToDownload(new URL(image), 
                         "",
-                        object.getString("location"),
+                        object.getString("location").replaceAll(" ", "_"),
                         albumDoc.location(),
                         pageResponse.cookies());
             }

File: src/main/java/com/rarchives/ripme/ripper/rippers/TapasticRipper.java
Patch:
@@ -88,6 +88,9 @@ public void downloadURL(URL url, int index) {
                 prefix.append(episode.filename.replace(" ", "-"));
                 prefix.append("-");
                 addURLToDownload(new URL(link), prefix.toString());
+                if (isThisATest()) {
+                    break;
+                }
             }
         } catch (IOException e) {
             logger.error("[!] Exception while downloading " + url, e);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TeenplanetRipper.java
Patch:
@@ -88,6 +88,9 @@ public void rip() throws IOException {
                 prefix = String.format("%03d_", index);
             }
             addURLToDownload(new URL(image), prefix);
+            if (isThisATest()) {
+                break;
+            }
         }
         waitForThreads();
     }

File: src/main/java/com/rarchives/ripme/ripper/rippers/VidbleRipper.java
Patch:
@@ -59,7 +59,7 @@ private static List<String> getURLsFromPageStatic(Document doc) {
         Elements els = doc.select("#ContentPlaceHolder1_thumbs");
         String thumbs = els.first().attr("value");
         for (String thumb : thumbs.split(",")) {
-            if (thumb.trim().equals("")) {
+            if (thumb.trim().equals("") || thumb.contains("reddit.com")) {
                 continue;
             }
             thumb = thumb.replaceAll("_[a-zA-Z]{3,5}", "");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.5";
+    private static final String DEFAULT_VERSION = "1.1.6";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/History.java
Patch:
@@ -12,6 +12,7 @@
 
 import org.apache.commons.io.IOUtils;
 import org.json.JSONArray;
+import org.json.JSONException;
 import org.json.JSONObject;
 
 public class History {
@@ -100,6 +101,8 @@ public void fromFile(String filename) throws IOException {
             String jsonString = IOUtils.toString(is);
             JSONArray jsonArray = new JSONArray(jsonString);
             fromJSON(jsonArray);
+        } catch (JSONException e) {
+            throw new IOException("Failed to load JSON file " + filename + ": " + e.getMessage(), e);
         } finally {
             is.close();
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.4";
+    private static final String DEFAULT_VERSION = "1.1.5";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.3";
+    private static final String DEFAULT_VERSION = "1.1.4";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/HistoryMenuMouseListener.java
Patch:
@@ -46,7 +46,7 @@ public void actionPerformed(ActionEvent ae) {
             @Override
             public void actionPerformed(ActionEvent ae) {
                 for (int row : tableComponent.getSelectedRows()) {
-                    tableComponent.setValueAt(new Boolean(false), row, 4);
+                    tableComponent.setValueAt(new Boolean(true), row, 4);
                 }
             }
         };

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.2";
+    private static final String DEFAULT_VERSION = "1.1.3";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -344,6 +344,7 @@ public void setValueAt(Object value, int row, int col) {
             }
         };
         historyTable = new JTable(historyTableModel);
+        historyTable.addMouseListener(new HistoryMenuMouseListener());
         historyTable.setAutoCreateRowSorter(true);
         for (int i = 0; i < historyTable.getColumnModel().getColumnCount(); i++) {
             int width = 130; // Default
@@ -625,7 +626,7 @@ public void actionPerformed(ActionEvent event) {
                 if (added == 0) {
                     JOptionPane.showMessageDialog(null,
                                                   "No history entries have been 'Checked'\n" + 
-                                                  "Check an entry by clicking the checkbox to the right of the URL",
+                                                  "Check an entry by clicking the checkbox to the right of the URL or Right-click a URL to check/uncheck all items",
                                                   "RipMe Error",
                                                   JOptionPane.ERROR_MESSAGE);
                     return;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.1";
+    private static final String DEFAULT_VERSION = "1.1.2";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -28,7 +28,7 @@ public abstract class AbstractRipper
     protected static final Logger logger = Logger.getLogger(AbstractRipper.class);
 
     public static final String USER_AGENT = 
-            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:29.0) Gecko/20100101 Firefox/29.0";
+            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:34.0) Gecko/20100101 Firefox/34.0";
 
     protected URL url;
     protected File workingDir;

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -99,7 +99,9 @@ public void run() {
                 huc.setInstanceFollowRedirects(true);
                 huc.setConnectTimeout(TIMEOUT);
                 huc.setRequestProperty("accept",  "*/*");
-                huc.setRequestProperty("Referer", referrer); // Sic
+                if (!referrer.equals("")) {
+                    huc.setRequestProperty("Referer", referrer); // Sic
+                }
                 huc.setRequestProperty("User-agent", AbstractRipper.USER_AGENT);
                 String cookie = "";
                 for (String key : cookies.keySet()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/RedditRipper.java
Patch:
@@ -195,7 +195,7 @@ public void handleURL(String theUrl, String id) {
 
         List<URL> urls = RipUtils.getFilesFromURL(originalURL);
         if (urls.size() == 1) {
-            addURLToDownload(urls.get(0), id + "-");
+            addURLToDownload(urls.get(0), id + "-", "", theUrl, null);
         } else if (urls.size() > 1) {
             for (int i = 0; i < urls.size(); i++) {
                 String prefix = id + "-";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.1.0";
+    private static final String DEFAULT_VERSION = "1.1.1";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -198,7 +198,7 @@ public void retrievingSource(URL url) {
      * @param url
      * @param message
      */
-    public abstract void downloadProblem(URL url, String message);
+    public abstract void downloadExists(URL url, File file);
 
     /**
      * @return Number of files downloaded.

File: src/main/java/com/rarchives/ripme/ripper/DownloadFileThread.java
Patch:
@@ -73,7 +73,7 @@ public void run() {
                 saveAs.delete();
             } else {
                 logger.info("[!] Skipping " + url + " -- file already exists: " + prettySaveAs);
-                observer.downloadProblem(url, "File already exists: " + prettySaveAs);
+                observer.downloadExists(url, saveAs);
                 return;
             }
         }

File: src/main/java/com/rarchives/ripme/ripper/DownloadVideoThread.java
Patch:
@@ -56,7 +56,7 @@ public void run() {
                 saveAs.delete();
             } else {
                 logger.info("[!] Skipping " + url + " -- file already exists: " + prettySaveAs);
-                observer.downloadProblem(url, "File already exists: " + prettySaveAs);
+                observer.downloadExists(url, saveAs);
                 return;
             }
         }

File: src/main/java/com/rarchives/ripme/ripper/VideoRipper.java
Patch:
@@ -111,11 +111,11 @@ public void downloadErrored(URL url, String reason) {
         checkIfComplete();
     }
     @Override
-    public void downloadProblem(URL url, String message) {
+    public void downloadExists(URL url, File file) {
         if (observer == null) {
             return;
         }
-        observer.update(this, new RipStatusMessage(STATUS.DOWNLOAD_WARN, url + " : " + message));
+        observer.update(this, new RipStatusMessage(STATUS.DOWNLOAD_WARN, url + " already saved as " + file));
         checkIfComplete();
     }
 

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -333,6 +333,9 @@ public static void configureLogger() {
             PropertyConfigurator.configure(stream);
         }
         logger.info("Loaded " + logFile);
+        try {
+            stream.close();
+        } catch (IOException e) { }
     }
 
     /**

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.92";
+    private static final String DEFAULT_VERSION = "1.0.93";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.91";
+    private static final String DEFAULT_VERSION = "1.0.92";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/CheebyRipper.java
Patch:
@@ -56,8 +56,8 @@ public Document getFirstPage() throws IOException {
     @Override
     public Document getNextPage(Document doc) throws IOException {
         sleep(500);
-        offset += 10;
-        String url = this.url + "?limit=10&offset=" + offset;
+        offset += 1;
+        String url = this.url + "?p=" + offset;
         Document nextDoc = Http.url(url).get();
         if (nextDoc.select("div.i a img").size() == 0) {
             throw new IOException("No more images to fetch");

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -4,6 +4,7 @@
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -14,7 +15,6 @@
 import com.rarchives.ripme.ripper.AbstractHTMLRipper;
 import com.rarchives.ripme.ripper.rippers.ripperhelpers.ChanSite;
 import com.rarchives.ripme.utils.Http;
-import java.util.Arrays;
 
 public class ChanRipper extends AbstractHTMLRipper {
     
@@ -157,6 +157,6 @@ public List<String> getURLsFromPage(Document page) {
 
     @Override
     public void downloadURL(URL url, int index) {
-        addURLToDownload(url, getPrefix(index));
+        addURLToDownload(url, getPrefix(index), "", this.url.toString(), null);
     } 
 }

File: src/main/java/com/rarchives/ripme/ripper/rippers/VidmeRipper.java
Patch:
@@ -38,7 +38,7 @@ public Document getFirstPage() throws IOException {
 
 	@Override
 	public List<String> getURLsFromPage(Document page) {
-		List<String> result = new LinkedList<>();
+		List<String> result = new LinkedList<String>();
 		for(Element elem : page.select("a.js-download-video-link")){
 			String link = StringEscapeUtils.unescapeHtml(elem.attr("data-href").toString());
 			result.add(link);

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -231,10 +231,12 @@ public static ArrayList<Class<?>> getClassesForPackage(String pkgname) {
                             classes.add(Class.forName(className));
                         } catch (ClassNotFoundException e) {
                             logger.error("ClassNotFoundException loading " + className);
+                            jarFile.close(); // Resource leak fix?
                             throw new RuntimeException("ClassNotFoundException loading " + className);
                         }
                     }
                 }
+                jarFile.close(); // Eclipse said not closing it would have a resource leak
             } catch (IOException e) {
                 logger.error("Error while loading jar file:", e);
                 throw new RuntimeException(pkgname + " (" + directory + ") does not appear to be a valid package", e);

File: src/main/java/com/rarchives/ripme/ripper/rippers/MinusRipper.java
Patch:
@@ -66,8 +66,8 @@ public String getGID(URL url) throws MalformedURLException {
         // http://minus.com/mw7ztQ6xzP7ae
         // http://vampyr3.minus.com/mw7ztQ6xzP7ae
         String u = url.toExternalForm();
-        u = u.replace("www.minus.com", "minus.com");
-        u = u.replace("/i.minus.com", "minus.com");
+        u = u.replace("/www.minus.com", "/minus.com");
+        u = u.replace("/i.minus.com", "/minus.com");
         Pattern p; Matcher m;
 
         p = Pattern.compile("^https?://minus\\.com/m([a-zA-Z0-9]+).*$");

File: src/main/java/com/rarchives/ripme/utils/Http.java
Patch:
@@ -118,7 +118,7 @@ public Document post() throws IOException {
 
     public JSONObject getJSON() throws IOException {
         ignoreContentType();
-        String jsonString = response().body().replace("&quot;", "\"");
+        String jsonString = response().body();
         return new JSONObject(jsonString);
     }
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/MinusRipper.java
Patch:
@@ -67,7 +67,7 @@ public String getGID(URL url) throws MalformedURLException {
         // http://vampyr3.minus.com/mw7ztQ6xzP7ae
         String u = url.toExternalForm();
         u = u.replace("www.minus.com", "minus.com");
-        u = u.replace("i.minus.com", "minus.com");
+        u = u.replace("/i.minus.com", "minus.com");
         Pattern p; Matcher m;
 
         p = Pattern.compile("^https?://minus\\.com/m([a-zA-Z0-9]+).*$");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.90";
+    private static final String DEFAULT_VERSION = "1.0.91";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -441,6 +441,9 @@ public void changedUpdate(DocumentEvent e) {
             private void update() {
                 try {
                     String urlText = ripTextfield.getText().trim();
+                    if (urlText.equals("")) {
+                        return;
+                    }
                     if (!urlText.startsWith("http")) {
                         urlText = "http://" + urlText;
                     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.89";
+    private static final String DEFAULT_VERSION = "1.0.90";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/FapprovedRipper.java
Patch:
@@ -86,6 +86,9 @@ public List<String> getURLsFromPage(Document page) {
             if (imageURL.startsWith("//")) {
                 imageURL = "http:" + imageURL;
             }
+            else if (imageURL.startsWith("/")) {
+                imageURL = "http://fapproved.com" + imageURL;
+            }
             imageURLs.add(imageURL);
         }
         return imageURLs;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.88";
+    private static final String DEFAULT_VERSION = "1.0.89";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgboxRipper.java
Patch:
@@ -49,8 +49,8 @@ public List<String> getURLsFromPage(Document doc) {
         List<String> imageURLs = new ArrayList<String>();
         for (Element thumb : doc.select("div.boxed-content > a > img")) {
             String image = thumb.attr("src")
-                                .replace("s.imgbox.com",
-                                         "i.imgbox.com");
+                                .replaceAll("[a-zA-Z0-9.]+s.imgbox.com",
+                                            "i.imgbox.com");
             imageURLs.add(image);
         }
         return imageURLs;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.87";
+    private static final String DEFAULT_VERSION = "1.0.88";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -448,7 +448,7 @@ private void update() {
                     AbstractRipper ripper = AbstractRipper.getRipper(url);
                     statusWithColor(ripper.getHost() + " album detected", Color.GREEN);
                 } catch (Exception e) {
-                    statusWithColor("Can't rip this URL", Color.RED);
+                    statusWithColor("Can't rip this URL: "+e.getMessage(), Color.RED);
                 }
             }
         });

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.85";
+    private static final String DEFAULT_VERSION = "1.0.86";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ModelmayhemRipper.java
Patch:
@@ -58,6 +58,7 @@ public void rip() throws IOException {
         
         resp = Jsoup.connect("http://www.modelmayhem.com/includes/js/auth.php")
                 .cookies(cookies)
+                .ignoreContentType(true)
                 .referrer(ref)
                 .userAgent(USER_AGENT)
                 .method(Method.GET)

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.84";
+    private static final String DEFAULT_VERSION = "1.0.85";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -457,6 +457,7 @@ private void update() {
             public void actionPerformed(ActionEvent event) {
                 if (ripper != null) {
                     ripper.stop();
+                    isRipping = false;
                     stopButton.setEnabled(false);
                     statusProgress.setValue(0);
                     statusProgress.setVisible(false);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.83";
+    private static final String DEFAULT_VERSION = "1.0.84";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.82";
+    private static final String DEFAULT_VERSION = "1.0.83";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.81";
+    private static final String DEFAULT_VERSION = "1.0.82";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/PhotobucketRipper.java
Patch:
@@ -130,7 +130,7 @@ public List<String> ripAlbumAndGetSubalbums(String theUrl) throws IOException {
             }
             pageIndex++;
             if (pageIndex > 1 || pageResponse == null) {
-                url = theUrl + String.format("?sort=3&page=", pageIndex);
+                url = theUrl + String.format("?sort=3&page=%d", pageIndex);
                 logger.info("    Retrieving " + url);
                 pageResponse = Http.url(url).response();
             }
@@ -139,10 +139,10 @@ public List<String> ripAlbumAndGetSubalbums(String theUrl) throws IOException {
             String jsonString = null;
             for (Element script : albumDoc.select("script[type=text/javascript]")) {
                 String data = script.data();
+                // Ensure this chunk of javascript contains the album info
                 if (!data.contains("libraryAlbumsPageCollectionData")) {
                     continue;
                 }
-                // Ensure this chunk of javascript contains the album info
                 // Grab the JSON
                 Pattern p; Matcher m;
                 p = Pattern.compile("^.*collectionData: (\\{.*\\}).*$", Pattern.DOTALL);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TumblrRipper.java
Patch:
@@ -26,10 +26,10 @@ private enum ALBUM_TYPE {
     }
     private ALBUM_TYPE albumType;
     private String subdomain, tagName, postNumber;
-    
+
     private static final String API_KEY;
     static {
-        API_KEY = Utils.getConfigString("tumblr.auth", null);
+        API_KEY = Utils.getConfigString("tumblr.auth", "v5kUqGQXUtmF7K0itri1DGtgTs0VQpbSEbh1jxYgj9d2Sq18F8");
     }
 
     public TumblrRipper(URL url) throws IOException {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.80";
+    private static final String DEFAULT_VERSION = "1.0.81";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ButttoucherRipper.java
Patch:
@@ -52,7 +52,7 @@ public Document getFirstPage() throws IOException {
     @Override
     public List<String> getURLsFromPage(Document page) {
         List<String> thumbs = new ArrayList<String>();
-        for (Element thumb : page.select("div.image-gallery > a > img")) {
+        for (Element thumb : page.select(".thumb img")) {
             if (!thumb.hasAttr("src")) {
                 continue;
             }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.79";
+    private static final String DEFAULT_VERSION = "1.0.80";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.76";
+    private static final String DEFAULT_VERSION = "1.0.77";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/ChanRipper.java
Patch:
@@ -49,7 +49,7 @@ public String getGID(URL url) throws MalformedURLException {
 
         String u = url.toExternalForm();
         if (u.contains("/res/")) {
-            p = Pattern.compile("^.*(chan|anon-ib).*\\.[a-z]{2,3}/[a-zA-Z0-9]+/res/([0-9]+)(\\.html|\\.php)?.*$");
+            p = Pattern.compile("^.*(chan|anon-ib).*\\.[a-z]{2,3}/[a-zA-Z0-9/]+/res/([0-9]+)(\\.html|\\.php)?.*$");
             m = p.matcher(u);
             if (m.matches()) {
                 return m.group(2);

File: src/main/java/com/rarchives/ripme/utils/RipUtils.java
Patch:
@@ -26,6 +26,7 @@ public class RipUtils {
     public static List<URL> getFilesFromURL(URL url) {
         List<URL> result = new ArrayList<URL>();
 
+        logger.debug("Checking " + url);
         // Imgur album
         if ((url.getHost().endsWith("imgur.com")) 
                 && url.toExternalForm().contains("imgur.com/a/")) {
@@ -60,7 +61,7 @@ else if (url.toExternalForm().contains("vidble.com/album/")) {
         }
 
         // Direct link to image
-        Pattern p = Pattern.compile("(https?://[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(/\\S*)\\.(jpg|jpeg|gif|png|mp4))");
+        Pattern p = Pattern.compile("(https?://[a-zA-Z0-9\\-\\.]+\\.[a-zA-Z]{2,3}(/\\S*)\\.(jpg|jpeg|gif|png|mp4)(\\?.*)?)");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             try {
@@ -72,7 +73,7 @@ else if (url.toExternalForm().contains("vidble.com/album/")) {
             }
         }
         
-        if(url.getHost().equals("imgur.com") || 
+        if (url.getHost().equals("imgur.com") || 
                 url.getHost().equals("m.imgur.com")){
             try {
                 // Fetch the page

File: src/main/java/com/rarchives/ripme/ripper/rippers/FuraffinityRipper.java
Patch:
@@ -73,7 +73,7 @@ public Document getFirstPage() throws IOException {
 			formData.put("pass", pass);
 			formData.put("login", "Login to FurAffinity");
 			
-			Response doLogin=Http.url(urlBase+"/login/")
+			Response doLogin=Http.url(urlBase+"/login/?ref=http://www.furaffinity.net/")
 					.referrer(urlBase+"/login/")
 					.cookies(cookies)
 					.data(formData)

File: src/main/java/com/rarchives/ripme/ripper/rippers/EightmusesRipper.java
Patch:
@@ -129,6 +129,7 @@ else if (thumb.hasAttr("src")) {
                 if (image.contains("-cu_")) {
                     image = image.replaceAll("-cu_[^.]+", "-me");
                 }
+                image = image.replaceAll(" ", "%20");
                 imageURLs.add(image);
             }
         }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.68";
+    private static final String DEFAULT_VERSION = "1.0.69";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/video/ViddmeRipper.java
Patch:
@@ -8,7 +8,6 @@
 
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
-import org.jsoup.nodes.Element;
 import org.jsoup.select.Elements;
 
 import com.rarchives.ripme.ripper.VideoRipper;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.65";
+    private static final String DEFAULT_VERSION = "1.0.66";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.62";
+    private static final String DEFAULT_VERSION = "1.0.63";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -384,7 +384,7 @@ private void update() {
                 }
                 try {
                     String urlText = ripTextfield.getText().trim();
-                    if (!urlText.startsWith("http:")) {
+                    if (!urlText.startsWith("http")) {
                         urlText = "http://" + urlText;
                     }
                     URL url = new URL(urlText);

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -41,6 +41,7 @@ public static void main(String[] args) throws MalformedURLException {
 
     public static void rip(URL url) throws Exception {
         AbstractRipper ripper = AbstractRipper.getRipper(url);
+        ripper.setup();
         ripper.rip();
     }
 

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.59";
+    private static final String DEFAULT_VERSION = "1.0.60";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.57";
+    private static final String DEFAULT_VERSION = "1.0.58";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -25,7 +25,7 @@ public abstract class AbstractRipper
     protected static final Logger logger = Logger.getLogger(AbstractRipper.class);
 
     public static final String USER_AGENT = 
-            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:27.0) Gecko/20100101 Firefox/27.0";
+            "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:29.0) Gecko/20100101 Firefox/29.0";
 
     protected URL url;
     protected File workingDir;

File: src/main/java/com/rarchives/ripme/ripper/rippers/RedditRipper.java
Patch:
@@ -196,7 +196,7 @@ public void handleURL(String theUrl, String id) {
                 if (Utils.getConfigBoolean("download.save_order", true)) {
                     prefix += String.format("%03d-", i + 1);
                 }
-                addURLToDownload(urls.get(i), prefix);
+                addURLToDownload(urls.get(i), prefix, "", theUrl, null);
             }
         }
     }

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.55";
+    private static final String DEFAULT_VERSION = "1.0.56";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.52";
+    private static final String DEFAULT_VERSION = "1.0.53";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.51";
+    private static final String DEFAULT_VERSION = "1.0.52";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/EHentaiRipper.java
Patch:
@@ -72,8 +72,8 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public void rip() throws IOException {
         int index = 0;
-        logger.info("    Retrieving " + this.url.toExternalForm());
         if (albumDoc == null) {
+            logger.info("    Retrieving " + this.url.toExternalForm());
             albumDoc = Jsoup.connect(this.url.toExternalForm()).get();
         }
         Elements select = albumDoc.select("#gdt > .gdtm");
@@ -85,13 +85,15 @@ public void rip() throws IOException {
         URL cursorUrl = new URL(href), prevUrl = null;
 
         while (!cursorUrl.equals(prevUrl)) {
+            prevUrl = cursorUrl;
             Document cursorDoc = Jsoup.connect(cursorUrl.toExternalForm())
                                       .userAgent(USER_AGENT)
                                       .get();
 
             Elements a = cursorDoc.select(".sni > a");
             Elements images = a.select("img");
             if (images.size() == 0) {
+                logger.info("cursorDoc: " + cursorDoc.toString());
                 logger.error("No images found at " + cursorUrl);
                 break;
             }
@@ -122,7 +124,6 @@ public void rip() throws IOException {
                 addURLToDownload(new URL(imgsrc), prefix);
             }
 
-            prevUrl = cursorUrl;
             String nextUrl = a.attr("href");
             if (nextUrl.equals("")) {
                 logger.warn("Next page URL is empty, via " + a);

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.41";
+    private static final String DEFAULT_VERSION = "1.0.42";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.39";
+    private static final String DEFAULT_VERSION = "1.0.40";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.38";
+    private static final String DEFAULT_VERSION = "1.0.39";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/EHentaiRipper.java
Patch:
@@ -60,10 +60,10 @@ public String getGID(URL url) throws MalformedURLException {
 
         System.out.println(url);
 
-        p = Pattern.compile("^.*g\\.e-hentai\\.org/g/[0-9]+/[a-fA-F0-9]+)/$");
+        p = Pattern.compile("^.*g\\.e-hentai\\.org/g/([0-9]+)/([a-fA-F0-9]+)/$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
-            return m.group(1);
+            return m.group(1) + "-" + m.group(2);
         }
 
         throw new MalformedURLException(

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -47,7 +47,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(www\\.)?motherless\\.com/G([MVI][A-F0-9]{6,8}).*$");
+        Pattern p = Pattern.compile("^https?://(www\\.)?motherless\\.com/G([MVI]?[A-F0-9]{6,8}).*$");
         Matcher m = p.matcher(url.toExternalForm());
         System.err.println(url.toExternalForm());
         if (!m.matches()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -47,7 +47,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(www\\.)?motherless\\.com/G([MVI][A-F0-9]{6,8}).*$");
+        Pattern p = Pattern.compile("^https?://(www\\.)?motherless\\.com/G([MVI]?[A-F0-9]{6,8}).*$");
         Matcher m = p.matcher(url.toExternalForm());
         System.err.println(url.toExternalForm());
         if (!m.matches()) {

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -290,9 +290,11 @@ public void run() {
             rip();
         } catch (HttpStatusException e) {
             logger.error("Got exception while running ripper:", e);
+            waitForThreads();
             sendUpdate(STATUS.RIP_ERRORED, "Status=" + e.getStatusCode() + ", URL=" + e.getUrl());
         } catch (IOException e) {
             logger.error("Got exception while running ripper:", e);
+            waitForThreads();
             sendUpdate(STATUS.RIP_ERRORED, e.getMessage());
         } finally {
             if (this.workingDir.list().length == 0) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -21,7 +21,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.34";
+    private static final String DEFAULT_VERSION = "1.0.35";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/RipStatusMessage.java
Patch:
@@ -13,7 +13,8 @@ public enum STATUS {
         RIP_COMPLETE("Rip Complete"), 
         DOWNLOAD_WARN("Download problem"),
         TOTAL_BYTES("Total bytes"),
-        COMPLETED_BYTES("Completed bytes");
+        COMPLETED_BYTES("Completed bytes"),
+        RIP_ERRORED("Rip Errored");
 
         String value;
         STATUS(String value) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.31";
+    private static final String DEFAULT_VERSION = "1.0.32";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -5,6 +5,7 @@
 import java.lang.reflect.Constructor;
 import java.net.URISyntaxException;
 import java.net.URL;
+import java.net.URLDecoder;
 import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.List;
@@ -206,8 +207,8 @@ public static ArrayList<Class<?>> getClassesForPackage(String pkgname) {
             try {
                 String jarPath = fullPath
                         .replaceFirst("[.]jar[!].*", ".jar")
-                        .replaceFirst("file:", "")
-                        .replaceAll("%20", " ");
+                        .replaceFirst("file:", "");
+                jarPath = URLDecoder.decode(jarPath, "UTF-8");
                 JarFile jarFile = new JarFile(jarPath);
                 Enumeration<JarEntry> entries = jarFile.entries();
                 while(entries.hasMoreElements()) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImgurRipper.java
Patch:
@@ -129,6 +129,7 @@ public static ImgurAlbum getImgurAlbum(URL url) throws IOException {
         logger.info("    Retrieving " + url.toExternalForm());
         Document doc = Jsoup.connect(url.toExternalForm())
                             .userAgent(USER_AGENT)
+                            .maxBodySize(0)
                             .get();
 
         // Try to use embedded JSON to retrieve images

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -150,7 +150,7 @@ public void run() {
                 UpdateUtils.updateProgram(configUpdateLabel);
             }
         };
-        SwingUtilities.invokeLater(r);
+        new Thread(r).start();
     }
     
     public void run() {
@@ -695,8 +695,7 @@ private Thread ripAlbum(String urlString) {
 
     class RipButtonHandler implements ActionListener {
         public void actionPerformed(ActionEvent event) {
-            Thread t = ripAlbum(ripTextfield.getText());
-            SwingUtilities.invokeLater(t);
+            ripAlbum(ripTextfield.getText());
         }
     }
     

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.30";
+    private static final String DEFAULT_VERSION = "1.0.31";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.28";
+    private static final String DEFAULT_VERSION = "1.0.29";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/TumblrRipper.java
Patch:
@@ -166,14 +166,14 @@ public String getGID(URL url) throws MalformedURLException {
         Pattern p;
         Matcher m;
         // Tagged URL
-        p = Pattern.compile("^https?://([a-zA-Z0-9\\-]{1,})\\.tumblr\\.com/tagged/([a-zA-Z0-9\\-]{1,}).*$");
+        p = Pattern.compile("^https?://([a-zA-Z0-9\\-]{1,})\\.tumblr\\.com/tagged/([a-zA-Z0-9\\-%]{1,}).*$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             this.albumType = ALBUM_TYPE.TAG;
             this.subdomain = m.group(1);
             this.tagName = m.group(2);
             this.tagName = this.tagName.replace('-', '+').replace("_", "%20");
-            return this.subdomain + "_tag_" + this.tagName;
+            return this.subdomain + "_tag_" + this.tagName.replace("%20", " ");
         }
         // Post URL
         p = Pattern.compile("^https?://([a-zA-Z0-9\\-]{1,})\\.tumblr\\.com/post/([0-9]{1,}).*$");

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.23";
+    private static final String DEFAULT_VERSION = "1.0.24";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -16,6 +16,7 @@ public void testInstagramGID() throws IOException {
         testURLs.put(new URL("http://instagram.com/Test_User"), "Test_User");
         testURLs.put(new URL("http://instagram.com/_test_user_"), "_test_user_");
         testURLs.put(new URL("http://instagram.com/-test-user-"), "-test-user-");
+        testURLs.put(new URL("http://statigr.am/username"), "username");
         for (URL url : testURLs.keySet()) {
             InstagramRipper ripper = new InstagramRipper(url);
             assertEquals(testURLs.get(url), ripper.getGID(ripper.getURL()));

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.21";
+    private static final String DEFAULT_VERSION = "1.0.22";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.18";
+    private static final String DEFAULT_VERSION = "1.0.19";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -32,7 +32,7 @@ public boolean canRip(URL url) {
 
     @Override
     public URL sanitizeURL(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://instagram\\.com/p/([a-zA-Z0-9]{1,}).*$");
+        Pattern p = Pattern.compile("^https?://instagram\\.com/p/([a-zA-Z0-9\\-_]{1,}).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             // Link to photo, not the user account
@@ -43,7 +43,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
                 throw new MalformedURLException("Failed to retrieve user page from " + url);
             }
         }
-        p = Pattern.compile("^.*instagram.com/([a-zA-Z0-9]{3,}).*$");
+        p = Pattern.compile("^.*instagram.com/([a-zA-Z0-9\\-_]{3,}).*$");
         m = p.matcher(url.toExternalForm());
         if (!m.matches()) {
             throw new MalformedURLException("Expected username in URL (instagram.com/username and not " + url);
@@ -132,7 +132,7 @@ public String getHost() {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://statigr.am/([a-zA-Z0-9]{3,}).*$");
+        Pattern p = Pattern.compile("^https?://statigr.am/([a-zA-Z0-9\\-_]{3,}).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             return m.group(1);

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -55,14 +55,14 @@ public boolean canRip(URL url) {
     @Override
     public URL sanitizeURL(URL url) throws MalformedURLException {
         // https://twitter.com/search?q=from%3Apurrbunny%20filter%3Aimages&src=typd
-        Pattern p = Pattern.compile("^https?://(m\\.)?twitter\\.com/search\\?q=([a-zA-Z0-9%]{1,}).*$");
+        Pattern p = Pattern.compile("^https?://(m\\.)?twitter\\.com/search\\?q=([a-zA-Z0-9%\\-_]{1,}).*$");
         Matcher m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             albumType = ALBUM_TYPE.SEARCH;
             searchText = m.group(2);
             return url;
         }
-        p = Pattern.compile("^https?://(m\\.)?twitter\\.com/([a-zA-Z0-9]{1,}).*$");
+        p = Pattern.compile("^https?://(m\\.)?twitter\\.com/([a-zA-Z0-9\\-_]{1,}).*$");
         m = p.matcher(url.toExternalForm());
         if (m.matches()) {
             albumType = ALBUM_TYPE.ACCOUNT;

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -19,7 +19,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.13";
+    private static final String DEFAULT_VERSION = "1.0.14";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/ClipboardUtils.java
Patch:
@@ -45,7 +45,7 @@ public static String getClipboardString() {
 }
 
 class AutoripThread extends Thread {
-    public volatile boolean isRunning = false;
+    protected volatile boolean isRunning = false;
     Set<String> rippedURLs = new HashSet<String>();
 
     public void run() {

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -162,7 +162,6 @@ public void shutdownCleanup() {
         Utils.setConfigBoolean("auto.update", configAutoupdateCheckbox.isSelected());
         saveHistory();
         Utils.saveConfig();
-        ClipboardUtils.setClipboardAutoRip(false);
     }
 
     private void status(String text) {

File: src/main/java/com/rarchives/ripme/ui/ClipboardUtils.java
Patch:
@@ -45,7 +45,7 @@ public static String getClipboardString() {
 }
 
 class AutoripThread extends Thread {
-    public volatile boolean isRunning = false;
+    protected volatile boolean isRunning = false;
     Set<String> rippedURLs = new HashSet<String>();
 
     public void run() {

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -162,7 +162,6 @@ public void shutdownCleanup() {
         Utils.setConfigBoolean("auto.update", configAutoupdateCheckbox.isSelected());
         saveHistory();
         Utils.saveConfig();
-        ClipboardUtils.setClipboardAutoRip(false);
     }
 
     private void status(String text) {

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -17,7 +17,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.11";
+    private static final String DEFAULT_VERSION = "1.0.12";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/ui/UpdateUtils.java
Patch:
@@ -17,7 +17,7 @@
 public class UpdateUtils {
 
     private static final Logger logger = Logger.getLogger(UpdateUtils.class);
-    private static final String DEFAULT_VERSION = "1.0.10";
+    private static final String DEFAULT_VERSION = "1.0.11";
     private static final String updateJsonURL = "http://rarchives.com/ripme.json";
     private static final String updateJarURL = "http://rarchives.com/ripme.jar";
     private static final String mainFileName = "ripme.jar";

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -12,7 +12,6 @@
 
 import org.apache.commons.configuration.ConfigurationException;
 import org.apache.commons.configuration.PropertiesConfiguration;
-import org.apache.commons.configuration.reloading.FileChangedReloadingStrategy;
 import org.apache.log4j.Logger;
 
 /**
@@ -34,7 +33,6 @@ public class Utils {
                 configPath = configFile;
             }
             config = new PropertiesConfiguration(configPath);
-            config.setReloadingStrategy(new FileChangedReloadingStrategy());
             logger.info("Loaded " + config.getPath());
         } catch (Exception e) {
             logger.error("[!] Failed to load properties file from " + configFile, e);

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -159,7 +159,9 @@ public static ArrayList<Class<?>> getClassesForPackage(String pkgname) {
         }
         else {
             try {
+                logger.debug("fullPath = " + fullPath);
                 String jarPath = fullPath.replaceFirst("[.]jar[!].*", ".jar").replaceFirst("file:", "");
+                logger.debug("jarPath = " + jarPath);
                 JarFile jarFile = new JarFile(jarPath);
                 Enumeration<JarEntry> entries = jarFile.entries();
                 while(entries.hasMoreElements()) {
@@ -175,6 +177,7 @@ public static ArrayList<Class<?>> getClassesForPackage(String pkgname) {
                     }
                 }
             } catch (IOException e) {
+                logger.error("Error while loading jar file:", e);
                 throw new RuntimeException(pkgname + " (" + directory + ") does not appear to be a valid package", e);
             }
         }

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -26,7 +26,7 @@ public class App {
 
     public static void main(String[] args) throws MalformedURLException {
         logger.info("Initialized ripme v" + UpdateUtils.getThisJarVersion());
-
+        UpdateUtils.moveUpdatedJar();
         if (args.length > 0) {
             CommandLine cl = handleArguments(args);
 

File: src/main/java/com/rarchives/ripme/ripper/rippers/GonewildRipper.java
Patch:
@@ -34,7 +34,7 @@ public boolean canRip(URL url) {
     }
 
     private Matcher getUsernameMatcher(URL url) {
-        Pattern p = Pattern.compile("^https?://[a-z]{0,3}\\.?gonewild\\.com/(u|user)/([a-zA-Z0-9\\-]{3,})/?.*$");
+        Pattern p = Pattern.compile("^.*gonewild(\\.com?/|:)(user/)?([a-zA-Z0-9\\-_]{3,})[/?]?.*$");
         return p.matcher(url.toExternalForm());
     }
 

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -290,6 +290,8 @@ public static AbstractRipper getRipper(URL url) throws Exception {
                 AbstractRipper ripper = (AbstractRipper) constructor.newInstance(url);
                 return ripper;
             } catch (Exception e) {
+                System.err.println(constructor.getName());
+                e.printStackTrace();
                 // Incompatible rippers *will* throw exceptions during instantiation.
             }
         }

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -47,8 +47,9 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
 
     @Override
     public String getGID(URL url) throws MalformedURLException {
-        Pattern p = Pattern.compile("^https?://(www\\.)?motherless\\.com/G([VI][A-F0-9]{6,8}).*$");
+        Pattern p = Pattern.compile("^https?://(www\\.)?motherless\\.com/G([MVI][A-F0-9]{6,8}).*$");
         Matcher m = p.matcher(url.toExternalForm());
+        System.err.println(url.toExternalForm());
         if (!m.matches()) {
             throw new MalformedURLException("Expected URL format: http://motherless.com/GIXXXXXXX, got: " + url);
         }

File: src/main/java/com/rarchives/ripme/utils/Utils.java
Patch:
@@ -20,7 +20,7 @@
 public class Utils {
 
     public  static final String RIP_DIRECTORY = "rips";
-    private static final File configFile = new File("src/main/resources/rip.properties");
+    private static final String configFile = "rip.properties";
     private static final Logger logger = Logger.getLogger(Utils.class);
 
     private static Configuration config;

File: src/main/java/com/rarchives/ripme/ripper/rippers/GonewildRipper.java
Patch:
@@ -34,7 +34,7 @@ public boolean canRip(URL url) {
     }
 
     private Matcher getUsernameMatcher(URL url) {
-        Pattern p = Pattern.compile("^https?://[a-z]{0,3}\\.?reddit\\.com/(u|user)/([a-zA-Z0-9\\-]{3,})/?.*$");
+        Pattern p = Pattern.compile("^https?://[a-z]{0,3}\\.?gonewild\\.com/(u|user)/([a-zA-Z0-9\\-]{3,})/?.*$");
         return p.matcher(url.toExternalForm());
     }
 

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/GonewildRipperTest.java
Patch:
@@ -14,7 +14,7 @@ public void testInstagramAlbums() throws IOException {
             return;
         }
         List<URL> contentURLs = new ArrayList<URL>();
-        contentURLs.add(new URL("http://reddit.com/u/amle69"));
+        contentURLs.add(new URL("http://gonewild.com/u/amle69"));
         for (URL url : contentURLs) {
             try {
                 GonewildRipper ripper = new GonewildRipper(url);

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -101,7 +101,7 @@ public void run() {
         mainFrame.setVisible(true);
     }
 
-    public synchronized static void status(String text) {
+    private void status(String text) {
         statusLabel.setText(text);
         mainFrame.pack();
     }

File: src/main/java/com/rarchives/ripme/ui/MainWindow.java
Patch:
@@ -162,7 +162,9 @@ private void createUI(Container pane) {
         historyListModel  = new DefaultListModel();
         historyList       = new JList(historyListModel);
         historyList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
-        historyListScroll = new JScrollPane(historyList);
+        historyListScroll = new JScrollPane(historyList,
+                JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,
+                JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
         historyButtonRemove = new JButton("Remove");
         historyButtonClear  = new JButton("Clear");
         historyButtonRerip  = new JButton("Re-rip All");

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TumblrRipperTest.java
Patch:
@@ -10,13 +10,13 @@
 public class TumblrRipperTest extends RippersTest {
     
     public void testTumblrAlbums() throws IOException {
-        if (false && !DOWNLOAD_CONTENT) {
+        if (!DOWNLOAD_CONTENT) {
             return;
         }
         List<URL> contentURLs = new ArrayList<URL>();
         contentURLs.add(new URL("http://wrouinr.tumblr.com/archive"));
-        //contentURLs.add(new URL("http://topinstagirls.tumblr.com/tagged/berlinskaya"));
-        //contentURLs.add(new URL("http://fittingroomgirls.tumblr.com/post/78268776776"));
+        contentURLs.add(new URL("http://topinstagirls.tumblr.com/tagged/berlinskaya"));
+        contentURLs.add(new URL("http://fittingroomgirls.tumblr.com/post/78268776776"));
         for (URL url : contentURLs) {
             try {
                 TumblrRipper ripper = new TumblrRipper(url);

File: src/main/java/com/rarchives/ripme/ripper/DownloadThreadPool.java
Patch:
@@ -33,7 +33,7 @@ private void initialize(String threadPoolName) {
     public void addThread(Thread t) {
         threadPool.execute(t);
     }
-    
+
     public void waitForThreads() {
         threadPool.shutdown();
         try {

File: src/main/java/com/rarchives/ripme/ripper/rippers/ImagefapRipper.java
Patch:
@@ -60,7 +60,7 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public void rip() throws IOException {
         int index = 0;
-        logger.info("[ ] Retrieving " + this.url.toExternalForm());
+        logger.info("    Retrieving " + this.url.toExternalForm());
         Document doc = Jsoup.connect(this.url.toExternalForm()).get();
         for (Element thumb : doc.select("#gallery img")) {
             if (!thumb.hasAttr("src") || !thumb.hasAttr("width")) {

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -63,7 +63,7 @@ private URL getUserPageFromImage(URL url) throws IOException {
     }
     
     private String getUserID(URL url) throws IOException {
-        logger.info("   Retrieving " + url);
+        logger.info("    Retrieving " + url);
         Document doc = Jsoup.connect(this.url.toExternalForm()).get();
         for (Element element : doc.select("input[id=user_public]")) {
             return element.attr("value");

File: src/main/java/com/rarchives/ripme/ripper/rippers/MotherlessRipper.java
Patch:
@@ -58,7 +58,7 @@ public String getGID(URL url) throws MalformedURLException {
     @Override
     public void rip() throws IOException {
         int index = 0;
-        logger.info("[ ] Retrieving " + this.url.toExternalForm());
+        logger.info("    Retrieving " + this.url.toExternalForm());
         Document doc = Jsoup.connect(this.url.toExternalForm())
                             .userAgent(USER_AGENT)
                             .get();

File: src/main/java/com/rarchives/ripme/ripper/rippers/SeeniveRipper.java
Patch:
@@ -41,7 +41,7 @@ public URL sanitizeURL(URL url) throws MalformedURLException {
     @Override
     public void rip() throws IOException {
         String baseURL = this.url.toExternalForm();
-        logger.info("[ ] Retrieving " + baseURL);
+        logger.info("    Retrieving " + baseURL);
         Document doc = Jsoup.connect(baseURL)
                             .header("Referer", baseURL)
                             .userAgent(USER_AGENT)

File: src/main/java/com/rarchives/ripme/ripper/rippers/TwitterRipper.java
Patch:
@@ -144,7 +144,7 @@ private String getApiURL(String maxID) {
     
     private List<JSONObject> getTweets(String url) throws IOException {
         List<JSONObject> tweets = new ArrayList<JSONObject>();
-        logger.info("   Retrieving " + url);
+        logger.info("    Retrieving " + url);
         Document doc = Jsoup.connect(url)
                             .ignoreContentType(true)
                             .header("Authorization", "Bearer " + accessToken)

File: src/main/java/com/rarchives/ripme/ripper/rippers/VineboxRipper.java
Patch:
@@ -41,7 +41,7 @@ public void rip() throws IOException {
         while (true) {
             page++;
             String urlPaged = this.url.toExternalForm() + "?page=" + page;
-            logger.info("[ ] Retrieving " + urlPaged);
+            logger.info("    Retrieving " + urlPaged);
             try {
                 doc = Jsoup.connect(urlPaged).get();
             } catch (HttpStatusException e) {

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/TumblrRipperTest.java
Patch:
@@ -15,8 +15,8 @@ public void testTumblrAlbums() throws IOException {
         }
         List<URL> contentURLs = new ArrayList<URL>();
         contentURLs.add(new URL("http://wrouinr.tumblr.com/archive"));
-        contentURLs.add(new URL("http://topinstagirls.tumblr.com/tagged/berlinskaya"));
-        contentURLs.add(new URL("http://fittingroomgirls.tumblr.com/post/78268776776"));
+        //contentURLs.add(new URL("http://topinstagirls.tumblr.com/tagged/berlinskaya"));
+        //contentURLs.add(new URL("http://fittingroomgirls.tumblr.com/post/78268776776"));
         for (URL url : contentURLs) {
             try {
                 TumblrRipper ripper = new TumblrRipper(url);

File: src/main/java/com/rarchives/ripme/ripper/rippers/InstagramRipper.java
Patch:
@@ -19,7 +19,7 @@ public class InstagramRipper extends AbstractRipper {
 
     private static final String DOMAIN = "instagram.com",
                                 HOST   = "instagram";
-    private static final Logger logger = Logger.getLogger(ImagearnRipper.class);
+    private static final Logger logger = Logger.getLogger(InstagramRipper.class);
 
     public InstagramRipper(URL url) throws IOException {
         super(url);

File: src/main/java/com/rarchives/ripme/ripper/AbstractRipper.java
Patch:
@@ -244,7 +244,7 @@ private static List<Constructor<?>> getRipperConstructors() throws Exception {
     }
 
     public void sendUpdate(STATUS status, Object message) {
-        if (observer != null) {
+        if (observer == null) {
             return;
         }
         synchronized (observer) {
@@ -275,4 +275,4 @@ public void run() {
             logger.error("Got exception while running ripper:", e);
         }
     }
-}
+}
\ No newline at end of file

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/ImgurRipperTest.java
Patch:
@@ -46,7 +46,7 @@ public void testImgurURLPasses() throws IOException {
         for (URL url : passURLs) {
             try {
                 ImgurRipper ripper = new ImgurRipper(url);
-                assertTrue(ripper.canRip(url));
+                assert(ripper.canRip(url));
                 deleteDir(ripper.getWorkingDir());
             } catch (Exception e) {
                 fail("Failed to instantiate ripper for " + url);

File: src/test/java/com/rarchives/ripme/tst/ripper/rippers/InstagramRipperTest.java
Patch:
@@ -7,7 +7,6 @@
 
 import com.rarchives.ripme.ripper.rippers.InstagramRipper;
 
-
 public class InstagramRipperTest extends RippersTest {
     
     public void testInstagramAlbums() throws IOException {

File: src/test/java/com/rarchives/ripme/tst/AppTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.rarchives.ripme;
+package com.rarchives.ripme.tst;
 
 import junit.framework.Test;
 import junit.framework.TestCase;

File: src/main/java/com/rarchives/ripme/App.java
Patch:
@@ -47,7 +47,7 @@ public static void rip(URL url) {
             AbstractRipper ripper = AbstractRipper.getRipper(url);
             ripper.rip();
         } catch (Exception e) {
-            logger.error("[!] Caught exception: " + e.getMessage(), e);
+            logger.error("[!] Error while ripping: " + e.getMessage(), e);
             System.exit(-1);
         }
     }

