File: bottomsheet/src/main/java/com/flipboard/bottomsheet/BottomSheetLayout.java
Patch:
@@ -239,8 +239,8 @@ public boolean onKeyPreIme(int keyCode, @NonNull KeyEvent event) {
         return super.onKeyPreIme(keyCode, event);
     }
 
-    private void setSheetTranslation(float sheetTranslation) {
-        this.sheetTranslation = sheetTranslation;
+    private void setSheetTranslation(float newTranslation) {
+        this.sheetTranslation = Math.min(newTranslation, getMaxSheetTranslation());
         int bottomClip = (int) (getHeight() - Math.ceil(sheetTranslation));
         this.contentClipRect.set(0, 0, getWidth(), bottomClip);
         getSheetView().setTranslationY(getHeight() - sheetTranslation);

File: bottomsheet/src/main/java/com/flipboard/bottomsheet/BottomSheetLayout.java
Patch:
@@ -239,8 +239,8 @@ public boolean onKeyPreIme(int keyCode, @NonNull KeyEvent event) {
         return super.onKeyPreIme(keyCode, event);
     }
 
-    private void setSheetTranslation(float sheetTranslation) {
-        this.sheetTranslation = sheetTranslation;
+    private void setSheetTranslation(float newTranslation) {
+        this.sheetTranslation = Math.min(newTranslation, getMaxSheetTranslation());
         int bottomClip = (int) (getHeight() - Math.ceil(sheetTranslation));
         this.contentClipRect.set(0, 0, getWidth(), bottomClip);
         getSheetView().setTranslationY(getHeight() - sheetTranslation);

File: bottomsheet/src/main/java/com/flipboard/bottomsheet/BottomSheetLayout.java
Patch:
@@ -495,7 +495,7 @@ private void initializeSheetValues() {
     public void expandSheet() {
         cancelCurrentAnimation();
         setSheetLayerTypeIfEnabled(LAYER_TYPE_NONE);
-        ObjectAnimator anim = ObjectAnimator.ofFloat(this, SHEET_TRANSLATION, getHeight());
+        ObjectAnimator anim = ObjectAnimator.ofFloat(this, SHEET_TRANSLATION, getMaxSheetTranslation());
         anim.setDuration(ANIMATION_DURATION);
         anim.setInterpolator(animationInterpolator);
         anim.addListener(new CancelDetectionAnimationListener() {

File: bottomsheet-sample/src/main/java/com/flipboard/bottomsheet/sample/PickerActivity.java
Patch:
@@ -67,7 +67,7 @@ public int compare(IntentPickerSheetView.ActivityInfo lhs, IntentPickerSheetView
 
                 // Add custom mixin example
                 Drawable customDrawable = ResourcesCompat.getDrawable(getResources(), R.mipmap.ic_launcher, null);
-                IntentPickerSheetView.ActivityInfo customInfo = new IntentPickerSheetView.ActivityInfo(customDrawable, "Custom mix-in", MainActivity.class);
+                IntentPickerSheetView.ActivityInfo customInfo = new IntentPickerSheetView.ActivityInfo(customDrawable, "Custom mix-in", PickerActivity.this, MainActivity.class);
                 intentPickerSheet.setMixins(Collections.singletonList(customInfo));
 
                 bottomSheetLayout.showWithSheetView(intentPickerSheet);

File: bottomsheet-commons/src/main/java/com/flipboard/bottomsheet/commons/IntentPickerSheetView.java
Patch:
@@ -78,11 +78,11 @@ public static class ActivityInfo {
         private AsyncTask<Void, Void, Drawable> iconLoadTask;
         public Object tag;
 
-        public ActivityInfo(Drawable icon, String label, Class<?> clazz) {
+        public ActivityInfo(Drawable icon, String label, Context context, Class<?> clazz) {
             this.icon = icon;
             resolveInfo = null;
             this.label = label;
-            this.componentName = new ComponentName(clazz.getPackage().getName(), clazz.getName());
+            this.componentName = new ComponentName(context, clazz.getName());
         }
 
         ActivityInfo(ResolveInfo resolveInfo, CharSequence label, ComponentName componentName) {

File: bottomsheet-sample/src/main/java/com/flipboard/bottomsheet/sample/PickerActivity.java
Patch:
@@ -67,7 +67,7 @@ public int compare(IntentPickerSheetView.ActivityInfo lhs, IntentPickerSheetView
 
                 // Add custom mixin example
                 Drawable customDrawable = ResourcesCompat.getDrawable(getResources(), R.mipmap.ic_launcher, null);
-                IntentPickerSheetView.ActivityInfo customInfo = new IntentPickerSheetView.ActivityInfo(customDrawable, "Custom mix-in", MainActivity.class);
+                IntentPickerSheetView.ActivityInfo customInfo = new IntentPickerSheetView.ActivityInfo(customDrawable, "Custom mix-in", PickerActivity.this, MainActivity.class);
                 intentPickerSheet.setMixins(Collections.singletonList(customInfo));
 
                 bottomSheetLayout.showWithSheetView(intentPickerSheet);

File: bottomsheet-commons/src/main/java/com/flipboard/bottomsheet/commons/ImagePickerSheetView.java
Patch:
@@ -190,6 +190,7 @@ protected ImagePickerSheetView(final Builder builder) {
         // Set up the grid
         tileGrid = (GridView) findViewById(R.id.grid);
         spacing = getResources().getDimensionPixelSize(R.dimen.bottomsheet_image_tile_spacing);
+        tileGrid.setDrawSelectorOnTop(true);
         tileGrid.setVerticalSpacing(spacing);
         tileGrid.setHorizontalSpacing(spacing);
         tileGrid.setPadding(spacing, 0, spacing, 0);
@@ -254,7 +255,6 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         float density = getResources().getDisplayMetrics().density;
         final int numColumns = (int) (width / (100 * density));
         thumbnailSize = Math.round((width - ((numColumns - 1) * spacing)) / 3.0f);
-        tileGrid.setDrawSelectorOnTop(true);
         tileGrid.setNumColumns(numColumns);
         super.onMeasure(widthMeasureSpec, heightMeasureSpec);
     }

File: bottomsheet/src/main/java/com/flipboard/bottomsheet/BottomSheetLayout.java
Patch:
@@ -611,7 +611,7 @@ public void showWithSheetView(View sheetView, ViewTransformer viewTransformer, O
 
         LayoutParams params = (LayoutParams) sheetView.getLayoutParams();
         if (params == null) {
-            params = new LayoutParams(isTablet ? LayoutParams.WRAP_CONTENT : LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT, Gravity.CENTER_HORIZONTAL);
+            params = new LayoutParams(isTablet ? LayoutParams.WRAP_CONTENT : LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT, Gravity.CENTER_HORIZONTAL);
         }
 
         if (isTablet && params.width == FrameLayout.LayoutParams.WRAP_CONTENT) {

File: bottomsheet/src/main/java/com/flipboard/bottomsheet/BottomSheetLayout.java
Patch:
@@ -150,6 +150,7 @@ private void init() {
         Point point = new Point();
         ((WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getSize(point);
         screenWidth = point.x;
+        sheetEndX = screenWidth;
     }
 
     /**
@@ -418,7 +419,7 @@ public boolean onTouchEvent(@NonNull MotionEvent event) {
     }
 
     private boolean isXInSheet(float x) {
-        return !isTablet || x > sheetStartX && x < sheetEndX;
+        return !isTablet || x >= sheetStartX && x <= sheetEndX;
     }
 
     private boolean isAnimating() {
@@ -685,7 +686,7 @@ public void onAnimationEnd(Animator animation) {
         anim.start();
         currentAnimator = anim;
         sheetStartX = 0;
-        sheetEndX = 0;
+        sheetEndX = screenWidth;
     }
 
     /**

File: bottomsheet-commons/src/main/java/com/flipboard/bottomsheet/commons/IntentPickerSheetView.java
Patch:
@@ -140,7 +140,7 @@ protected void onAttachedToWindow() {
     protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
         super.onLayout(changed, left, top, right, bottom);
         final float density = getResources().getDisplayMetrics().density;
-        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN) {
+        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN_MR1) {
             appGrid.setNumColumns((int) (getWidth() / (100 * density)));
         } else {
             // On Jelly Bean and below setNumColumns does not redraw the view if we call it during

File: bottomsheet-commons/src/main/java/com/flipboard/bottomsheet/commons/MenuSheetView.java
Patch:
@@ -128,7 +128,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         super.onLayout(changed, left, top, right, bottom);
         if (menuType == GRID) {
             final float density = getResources().getDisplayMetrics().density;
-            if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN) {
+            if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN_MR1) {
                 ((GridView) absListView).setNumColumns((int) (getWidth() / (100 * density)));
             } else {
                 // On Jelly Bean and below setNumColumns does not redraw the view if we call it during

File: bottomsheet-commons/src/main/java/com/flipboard/bottomsheet/commons/IntentPickerSheetView.java
Patch:
@@ -158,7 +158,7 @@ public ActivityInfo getItem(int position) {
 
         @Override
         public long getItemId(int position) {
-            return activityInfos.get(position).label.hashCode();
+            return activityInfos.get(position).componentName.hashCode();
         }
 
         @Override

File: bottomsheet-sample/src/main/java/com/flipboard/bottomsheet/sample/MenuActivity.java
Patch:
@@ -22,6 +22,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_menu);
         bottomSheetLayout = (BottomSheetLayout) findViewById(R.id.bottomsheet);
+        bottomSheetLayout.setDismissMode(BottomSheetLayout.State.PEEKED);
         findViewById(R.id.list_button).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {

File: bottomsheet-sample/src/main/java/com/flipboard/bottomsheet/sample/PickerActivity.java
Patch:
@@ -47,14 +47,14 @@ public void onIntentPicked(Intent intent) {
                 // Filter out built in sharing options such as bluetooth and beam.
                 intentPickerSheet.setFilter(new IntentPickerSheetView.Filter() {
                     @Override
-                    public boolean include(IntentPickerSheetView.ActvityInfo info) {
+                    public boolean include(IntentPickerSheetView.ActivityInfo info) {
                         return !info.componentName.getPackageName().startsWith("com.android");
                     }
                 });
                 // Sort activities in reverse order for no good reason
-                intentPickerSheet.setSortMethod(new Comparator<IntentPickerSheetView.ActvityInfo>() {
+                intentPickerSheet.setSortMethod(new Comparator<IntentPickerSheetView.ActivityInfo>() {
                     @Override
-                    public int compare(IntentPickerSheetView.ActvityInfo lhs, IntentPickerSheetView.ActvityInfo rhs) {
+                    public int compare(IntentPickerSheetView.ActivityInfo lhs, IntentPickerSheetView.ActivityInfo rhs) {
                         return rhs.label.compareTo(lhs.label);
                     }
                 });

File: bottomsheet/src/main/java/com/flipboard/bottomsheet/OnSheetDismissedListener.java
Patch:
@@ -5,8 +5,8 @@ public interface OnSheetDismissedListener {
     /**
      * Called when the presented sheet has been dismissed.
      *
-     * @param bottomSheet The bottom sheet which contained the presented sheet.
+     * @param bottomSheetLayout The bottom sheet which contained the presented sheet.
      */
-    void onDismissed(BottomSheet bottomSheet);
+    void onDismissed(BottomSheetLayout bottomSheetLayout);
 
 }

File: bottomsheet/src/main/java/com/flipboard/bottomsheet/ViewTransformer.java
Patch:
@@ -14,6 +14,6 @@ public interface ViewTransformer {
      * @param parent The BottomSheet presenting the sheet view.
      * @param view The content view to transform.
      */
-    void transformView(float translation, float maxTranslation, float peekedTranslation, BottomSheet parent, View view);
+    void transformView(float translation, float maxTranslation, float peekedTranslation, BottomSheetLayout parent, View view);
 
 }

