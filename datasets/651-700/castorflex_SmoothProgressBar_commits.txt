File: library/src/main/java/fr/castorflex/android/smoothprogressbar/SmoothProgressDrawable.java
Patch:
@@ -16,6 +16,8 @@
 import android.view.animation.AccelerateInterpolator;
 import android.view.animation.Interpolator;
 
+import java.util.Locale;
+
 import static fr.castorflex.android.smoothprogressbar.SmoothProgressBarUtils.checkColors;
 import static fr.castorflex.android.smoothprogressbar.SmoothProgressBarUtils.checkNotNull;
 import static fr.castorflex.android.smoothprogressbar.SmoothProgressBarUtils.checkPositive;
@@ -624,7 +626,7 @@ public void setCallbacks(Callbacks callbacks) {
 
   private void checkColorIndex(int index) {
     if (index < 0 || index >= mColors.length) {
-      throw new IllegalArgumentException(String.format("Index %d not valid", index));
+      throw new IllegalArgumentException(String.format(Locale.US, "Index %d not valid", index));
     }
   }
 

File: library-circular/src/main/java/fr.castorflex.android.circularprogressbar/PowerSaveModeDelegate.java
Patch:
@@ -39,7 +39,7 @@ public void stop() {
 
   @Override
   public void progressiveStop(CircularProgressDrawable.OnEndListener listener) {
-    stop();
+    mParent.stop();
   }
 
   private final Runnable mRunnable = new Runnable() {

File: library-circular/src/main/java/fr.castorflex.android.circularprogressbar/CircularProgressDrawable.java
Patch:
@@ -149,7 +149,7 @@ public void progressiveStop() {
 
   public static class Builder {
     private static final Interpolator DEFAULT_ROTATION_INTERPOLATOR = new LinearInterpolator();
-    private static final Interpolator DEFAULT_SWEEP_INTERPOLATOR = new DecelerateInterpolator();
+    private static final Interpolator DEFAULT_SWEEP_INTERPOLATOR = new FastOutSlowInInterpolator();
 
     private Interpolator mSweepInterpolator = DEFAULT_SWEEP_INTERPOLATOR;
     private Interpolator mAngleInterpolator = DEFAULT_ROTATION_INTERPOLATOR;

File: library-circular/src/main/java/fr.castorflex.android.circularprogressbar/CircularProgressBar.java
Patch:
@@ -7,9 +7,6 @@
 import android.util.AttributeSet;
 import android.widget.ProgressBar;
 
-/**
- * Created by castorflex on 11/10/13.
- */
 public class CircularProgressBar extends ProgressBar {
 
   public CircularProgressBar(Context context) {

File: library-circular/src/main/java/fr.castorflex.android.circularprogressbar/CircularProgressBar.java
Patch:
@@ -24,7 +24,7 @@ public CircularProgressBar(Context context, AttributeSet attrs, int defStyle) {
     super(context, attrs, defStyle);
 
     if (isInEditMode()) {
-      setIndeterminateDrawable(new CircularProgressDrawable.Builder(context).build());
+      setIndeterminateDrawable(new CircularProgressDrawable.Builder(context, true).build());
       return;
     }
 

File: library/src/main/java/fr/castorflex/android/smoothprogressbar/SmoothProgressBar.java
Patch:
@@ -35,7 +35,7 @@ public SmoothProgressBar(Context context, AttributeSet attrs, int defStyle) {
     super(context, attrs, defStyle);
 
     if (isInEditMode()) {
-      setIndeterminateDrawable(new SmoothProgressDrawable.Builder(context).build());
+      setIndeterminateDrawable(new SmoothProgressDrawable.Builder(context, true).build());
       return;
     }
 

File: library/src/main/java/fr/castorflex/android/smoothprogressbar/SmoothProgressDrawable.java
Patch:
@@ -272,9 +272,9 @@ private void drawGradient(Canvas canvas) {
     }
     mLinearGradientColors[mLinearGradientColors.length - 1] = mColors[currentIndexColor];
 
-    float left = mReversed ? (mMirrorMode ? Math.abs(mBounds.left - mBounds.right) / 2 : mBounds.right) : mBounds.left;
+    float left = mReversed ? (mMirrorMode ? Math.abs(mBounds.left - mBounds.right) / 2 : mBounds.left) : mBounds.left;
     float right = mMirrorMode ? (mReversed ? mBounds.left : Math.abs(mBounds.left - mBounds.right) / 2) :
-        (mReversed ? mBounds.left : mBounds.right);
+        mBounds.right;
     float top = mBounds.centerY() - mStrokeWidth / 2;
     float bottom = mBounds.centerY() + mStrokeWidth / 2;
     LinearGradient linearGradient = new LinearGradient(left, top, right, bottom,

File: library/src/main/java/fr/castorflex/android/smoothprogressbar/SmoothProgressBar.java
Patch:
@@ -40,7 +40,7 @@ public SmoothProgressBar(Context context, AttributeSet attrs, int defStyle) {
         final int sectionsCount = a.getInteger(R.styleable.SmoothProgressBar_spb_sections_count, res.getInteger(R.integer.spb_default_sections_count));
         final int separatorLength = a.getDimensionPixelSize(R.styleable.SmoothProgressBar_spb_stroke_separator_length, res.getDimensionPixelSize(R.dimen.spb_default_stroke_separator_length));
         final int width = a.getDimensionPixelSize(R.styleable.SmoothProgressBar_spb_stroke_width, res.getDimensionPixelSize(R.dimen.spb_default_stroke_width));
-        final String strSpeed = a.getString(R.styleable.SmoothProgressBar_spb_speed);
+        final float speed = a.getFloat(R.styleable.SmoothProgressBar_spb_speed, Float.parseFloat(res.getString(R.string.spb_default_speed)));
         final int iInterpolator = a.getInteger(R.styleable.SmoothProgressBar_spb_interpolator, res.getInteger(R.integer.spb_default_interpolator));
         final boolean reversed = a.getBoolean(R.styleable.SmoothProgressBar_spb_reversed, res.getBoolean(R.bool.spb_default_reversed));
         final boolean mirrorMode = a.getBoolean(R.styleable.SmoothProgressBar_spb_mirror_mode, res.getBoolean(R.bool.spb_default_mirror_mode));
@@ -71,14 +71,14 @@ public SmoothProgressBar(Context context, AttributeSet attrs, int defStyle) {
         }
 
         SmoothProgressDrawable.Builder builder = new SmoothProgressDrawable.Builder(context)
+                .speed(speed)
                 .interpolator(interpolator)
                 .sectionsCount(sectionsCount)
                 .separatorLength(separatorLength)
                 .width(width)
                 .reversed(reversed)
                 .mirrorMode(mirrorMode);
 
-        if (strSpeed != null) builder.speed(Float.parseFloat(strSpeed));
         if(colors != null && colors.length > 0)
             builder.colors(colors);
         else

File: sample/src/main/java/fr/castorflex/android/smoothprogressbar/sample/MakeCustomActivity.java
Patch:
@@ -86,7 +86,7 @@ public void onStopTrackingTouch(SeekBar seekBar) {
         mSeekBarSectionsCount.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
             @Override
             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
-                mSectionsCount = progress;
+                mSectionsCount = progress + 1;
                 mTextViewSectionsCount.setText("Sections count: " + mSectionsCount);
             }
 

File: library/src/main/java/fr/castorflex/android/smoothprogressbar/SmoothProgressDrawable.java
Patch:
@@ -100,7 +100,7 @@ private void drawStrokes(Canvas canvas) {
             prev = Math.max(0f, xOffset - xSectionWidth);
             ratioSectionWidth = Math.abs(
                     mInterpolator.getInterpolation(prev) -
-                    mInterpolator.getInterpolation(xOffset));
+                    mInterpolator.getInterpolation(Math.min(xOffset, 1f)));
             sectionWidth = (int) (width * ratioSectionWidth);
 
             if (sectionWidth + prev < width)

