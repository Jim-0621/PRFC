File: sample/src/main/java/com/readystatesoftware/chuck/sample/MainActivity.java
Patch:
@@ -66,7 +66,7 @@ private void doHttpActivity() {
         SampleApiService.HttpbinApi api = SampleApiService.getInstance(getClient(this));
         Callback<Void> cb = new Callback<Void>() {
             @Override public void onResponse(Call call, Response response) {}
-            @Override public void onFailure(Call call, Throwable t) {}
+            @Override public void onFailure(Call call, Throwable t) { t.printStackTrace(); }
         };
         api.get().enqueue(cb);
         api.post(new SampleApiService.Data("posted")).enqueue(cb);

File: library/src/main/java/com/readystatesoftware/chuck/internal/data/HttpTransaction.java
Patch:
@@ -17,9 +17,9 @@
 
 import android.net.Uri;
 
+import com.google.gson.reflect.TypeToken;
 import com.readystatesoftware.chuck.internal.support.FormatUtils;
 import com.readystatesoftware.chuck.internal.support.JsonConvertor;
-import com.google.gson.reflect.TypeToken;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: library/src/main/java/com/readystatesoftware/chuck/internal/support/FormatUtils.java
Patch:
@@ -143,4 +143,4 @@ public static String getShareCurlCommand(HttpTransaction transaction) {
     private static String v(String string) {
         return (string != null) ? string : "";
     }
-}
+}
\ No newline at end of file

File: library/src/main/java/com/readystatesoftware/chuck/internal/data/HttpTransaction.java
Patch:
@@ -17,9 +17,9 @@
 
 import android.net.Uri;
 
+import com.google.gson.reflect.TypeToken;
 import com.readystatesoftware.chuck.internal.support.FormatUtils;
 import com.readystatesoftware.chuck.internal.support.JsonConvertor;
-import com.google.gson.reflect.TypeToken;
 
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: library/src/main/java/com/readystatesoftware/chuck/internal/support/FormatUtils.java
Patch:
@@ -143,4 +143,4 @@ public static String getShareCurlCommand(HttpTransaction transaction) {
     private static String v(String string) {
         return (string != null) ? string : "";
     }
-}
+}
\ No newline at end of file

File: library/src/main/java/com/readystatesoftware/chuck/ChuckInterceptor.java
Patch:
@@ -107,6 +107,7 @@ public ChuckInterceptor showNotification(boolean show) {
      */
     public ChuckInterceptor maxContentLength(long max) {
         this.maxContentLength = max;
+        return this;
     }
   
     /**

File: library/src/main/java/com/readystatesoftware/chuck/internal/ui/TransactionListFragment.java
Patch:
@@ -127,7 +127,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public Loader<Cursor> onCreateLoader(int id, Bundle args) {
         CursorLoader loader = new CursorLoader(getContext());
         loader.setUri(ChuckContentProvider.TRANSACTION_URI);
-        if (currentFilter != null) {
+        if (!TextUtils.isEmpty(currentFilter)) {
             if (TextUtils.isDigitsOnly(currentFilter)) {
                 loader.setSelection("responseCode LIKE ?");
                 loader.setSelectionArgs(new String[]{ currentFilter + "%" });

File: library/src/main/java/com/readystatesoftware/chuck/internal/ui/TransactionListFragment.java
Patch:
@@ -127,7 +127,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public Loader<Cursor> onCreateLoader(int id, Bundle args) {
         CursorLoader loader = new CursorLoader(getContext());
         loader.setUri(ChuckContentProvider.TRANSACTION_URI);
-        if (currentFilter != null) {
+        if (!TextUtils.isEmpty(currentFilter)) {
             if (TextUtils.isDigitsOnly(currentFilter)) {
                 loader.setSelection("responseCode LIKE ?");
                 loader.setSelectionArgs(new String[]{ currentFilter + "%" });

File: library/src/main/java/com/readystatesoftware/chuck/internal/ui/TransactionListFragment.java
Patch:
@@ -105,7 +105,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
     public boolean onOptionsItemSelected(MenuItem item) {
         if (item.getItemId() == R.id.clear) {
             getContext().getContentResolver().delete(ChuckContentProvider.TRANSACTION_URI, null, null);
-            new NotificationHelper(getContext()).dismiss();
+            NotificationHelper.clearBuffer();
             return true;
         } else if (item.getItemId() == R.id.browse_sql) {
             SQLiteUtils.browseDatabase(getContext());

File: library/src/main/java/com/github/jgilfelt/chuck/ChuckInterceptor.java
Patch:
@@ -91,7 +91,7 @@ public ChuckInterceptor showNotification(boolean show) {
         try {
             response = chain.proceed(request);
         } catch (Exception e) {
-            transaction.setError(e.getMessage());
+            transaction.setError(e.toString());
             update(transaction, transactionUri);
             throw e;
         }

File: sample/src/main/java/com/github/jgilfelt/chuck/sample/MainActivity.java
Patch:
@@ -37,7 +37,7 @@ public void onClick(View view) {
     private OkHttpClient getClient(Context context) {
         return new OkHttpClient.Builder()
                 .addInterceptor(new ChuckInterceptor(context)) // <- Add ChuckInterceptor in your OkHttp client builder
-                .addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))
+                .addNetworkInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))
                 .build();
     }
 
@@ -57,7 +57,7 @@ private void doHttpActivity() {
         api.status(500).enqueue(cb);
         api.delay(9).enqueue(cb);
         api.delay(15).enqueue(cb);
-        api.redirectTo("http://example.com").enqueue(cb);
+        api.redirectTo("https://http2.akamai.com").enqueue(cb); // h2
         api.redirect(3).enqueue(cb);
         api.stream(500).enqueue(cb);
         api.streamBytes(2048).enqueue(cb);

File: library/src/main/java/com/github/jgilfelt/chuck/ChuckInterceptor.java
Patch:
@@ -131,9 +131,7 @@ public ChuckInterceptor(Context context) {
                 }
             }
             if (isPlaintext(buffer)) {
-                if (contentLength > 0) {
-                    transaction.setResponseBody(buffer.clone().readString(charset));
-                }
+                transaction.setResponseBody(buffer.clone().readString(charset));
             } else {
                 transaction.setResponseBodyIsPlainText(false);
             }

File: sample/src/main/java/com/github/jgilfelt/chuck/sample/MainActivity.java
Patch:
@@ -42,8 +42,8 @@ public void onClick(View view) {
 
     private OkHttpClient getClient(Context context) {
         return new OkHttpClient.Builder()
-                .addNetworkInterceptor(new ChuckInterceptor(context)) // <- Add ChuckInterceptor as an OkHttp network interceptor
-                .addNetworkInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))
+                .addInterceptor(new ChuckInterceptor(context)) // <- Add ChuckInterceptor in your OkHttp client builder
+                .addInterceptor(new HttpLoggingInterceptor().setLevel(HttpLoggingInterceptor.Level.BODY))
                 .build();
     }
 

File: library/src/main/java/com/github/jgilfelt/chuck/ChuckInterceptor.java
Patch:
@@ -146,6 +146,7 @@ public ChuckInterceptor(Context context) {
             } else {
                 transaction.setResponseBodyIsPlainText(false);
             }
+            transaction.setResponseContentLength(buffer.size());
         }
 
         update(transaction, transactionUri);

File: library/src/main/java/com/github/jgilfelt/chuck/support/JsonConvertor.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.jgilfelt.chuck.data;
+package com.github.jgilfelt.chuck.support;
 
 import com.google.gson.FieldNamingPolicy;
 import com.google.gson.Gson;
@@ -23,5 +23,4 @@ public static Gson getInstance() {
         }
         return gson;
     }
-
 }

File: library/src/main/java/com/github/jgilfelt/chuck/data/ChuckContentProvider.java
Patch:
@@ -41,11 +41,13 @@ public Cursor query(Uri uri, String[] projection, String selection, String[] sel
         SQLiteDatabase db = databaseHelper.getWritableDatabase();
         switch (matcher.match(uri)) {
             case TRANSACTIONS:
-                return cupboard().withDatabase(db).query(HttpTransaction.class).
+                Cursor cursor = cupboard().withDatabase(db).query(HttpTransaction.class).
                         withProjection(projection).
                         withSelection(selection, selectionArgs).
                         orderBy(sortOrder).
                         getCursor();
+                cursor.setNotificationUri(getContext().getContentResolver(), uri);
+                return cursor;
             case TRANSACTION:
                 return cupboard().withDatabase(db).query(HttpTransaction.class).
                         byId(ContentUris.parseId(uri)).

File: library/src/main/java/com/github/jgilfelt/chuck/ChuckInterceptor.java
Patch:
@@ -11,7 +11,7 @@
 
 import com.github.jgilfelt.chuck.data.ChuckContentProvider;
 import com.github.jgilfelt.chuck.data.HttpTransaction;
-import com.github.jgilfelt.chuck.ui.ChuckMainActivity;
+import com.github.jgilfelt.chuck.ui.MainActivity;
 
 import java.io.EOFException;
 import java.io.IOException;
@@ -175,8 +175,8 @@ private synchronized void addToBuffer(HttpTransaction transaction) {
 
     private synchronized void showNotification() {
         NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context)
-                .setContentIntent(PendingIntent.getActivity(context, 0, new Intent(context, ChuckMainActivity.class), 0))
-                .setSmallIcon(R.drawable.ic_chuck_notification_black_24dp)
+                .setContentIntent(PendingIntent.getActivity(context, 0, new Intent(context, MainActivity.class), 0))
+                .setSmallIcon(R.drawable.chuck_ic_notification_black_24dp)
                 .setContentTitle("Chuck is logging");
         NotificationCompat.InboxStyle inboxStyle =
                 new NotificationCompat.InboxStyle();

File: library/src/main/java/com/github/jgilfelt/chuck/ui/MainActivity.java
Patch:
@@ -9,7 +9,7 @@
 
 import static nl.qbusict.cupboard.CupboardFactory.cupboard;
 
-public class ChuckMainActivity extends AppCompatActivity implements TransactionListFragment.OnListFragmentInteractionListener {
+public class MainActivity extends AppCompatActivity implements TransactionListFragment.OnListFragmentInteractionListener {
 
     // TODO
     static {
@@ -19,7 +19,7 @@ public class ChuckMainActivity extends AppCompatActivity implements TransactionL
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_chuck_main);
+        setContentView(R.layout.chuck_activity_main);
         if (savedInstanceState == null) {
             getSupportFragmentManager().beginTransaction()
                     .add(R.id.container, TransactionListFragment.newInstance())

File: library/src/main/java/com/github/jgilfelt/chuck/ui/TransactionAdapter.java
Patch:
@@ -27,7 +27,7 @@ public TransactionAdapter(Context context, OnListFragmentInteractionListener lis
         cursorAdapter = new CursorAdapter(TransactionAdapter.this.context, null, CursorAdapter.FLAG_REGISTER_CONTENT_OBSERVER) {
             @Override
             public View newView(Context context, Cursor cursor, ViewGroup parent) {
-                View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_transaction, parent, false);
+                View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.chuck_list_item_transaction, parent, false);
                 ViewHolder holder = new ViewHolder(itemView);
                 itemView.setTag(holder);
                 return itemView;

File: library/src/main/java/com/github/jgilfelt/chuck/ui/TransactionListFragment.java
Patch:
@@ -38,7 +38,7 @@ public static TransactionListFragment newInstance() {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_transaction_list, container, false);
+        View view = inflater.inflate(R.layout.chuck_fragment_transaction_list, container, false);
         if (view instanceof RecyclerView) {
             Context context = view.getContext();
             RecyclerView recyclerView = (RecyclerView) view;

File: sample/src/main/java/com/github/jgilfelt/chuck/sample/MainActivity.java
Patch:
@@ -6,8 +6,6 @@
 import android.view.View;
 import android.widget.Toast;
 
-import com.github.jgilfelt.chuck.ui.ChuckMainActivity;
-
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
@@ -52,7 +50,7 @@ public void onClick(View view) {
         findViewById(R.id.chuck).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                startActivity(new Intent(MainActivity.this, ChuckMainActivity.class));
+                startActivity(new Intent(MainActivity.this, com.github.jgilfelt.chuck.ui.MainActivity.class));
             }
         });
 

