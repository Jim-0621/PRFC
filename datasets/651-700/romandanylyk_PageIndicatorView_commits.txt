File: sample/src/main/java/com/rd/pageindicatorview/home/HomeActivity.java
Patch:
@@ -99,6 +99,6 @@ private void updateIndicator() {
         pageIndicatorView.setRtlMode(customization.getRtlMode());
         pageIndicatorView.setInteractiveAnimation(customization.isInteractiveAnimation());
         pageIndicatorView.setAutoVisibility(customization.isAutoVisibility());
-//        pageIndicatorView.setFadeOnIdle(customization.isFadeOnIdle());
+        pageIndicatorView.setFadeOnIdle(customization.isFadeOnIdle());
     }
 }

File: sample/src/main/java/com/rd/pageindicatorview/home/HomeFragment.java
Patch:
@@ -30,7 +30,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 		HomeAdapter adapter = new HomeAdapter();
 		adapter.setData(createPageList());
 
-		ViewPager pager = view.findViewById(R.id.viewPager2);
+		ViewPager pager = view.findViewById(R.id.viewPager);
 		pager.setAdapter(adapter);
 	}
 

File: pageindicatorview/src/main/java/com/rd/draw/data/Indicator.java
Patch:
@@ -143,7 +143,7 @@ public void setSelectedColor(int selectedColor) {
     }
 
     public boolean isInteractiveAnimation() {
-        return interactiveAnimation && viewPagerId != View.NO_ID;
+        return interactiveAnimation;
     }
 
     public void setInteractiveAnimation(boolean interactiveAnimation) {

File: pageindicatorview/src/main/java/com/rd/animation/type/AnimationType.java
Patch:
@@ -1,3 +1,3 @@
 package com.rd.animation.type;
 
-public enum AnimationType {NONE, COLOR, SCALE, WORM, SLIDE, FILL, THIN_WORM, DROP, SWAP}
+public enum AnimationType {NONE, COLOR, SCALE, WORM, SLIDE, FILL, THIN_WORM, DROP, SWAP, SCALE_DOWN}

File: pageindicatorview/src/main/java/com/rd/draw/controller/AttributeController.java
Patch:
@@ -150,6 +150,8 @@ private AnimationType getAnimationType(int index) {
                 return AnimationType.DROP;
             case 8:
                 return AnimationType.SWAP;
+            case 9:
+                return AnimationType.SCALE_DOWN;
         }
 
         return AnimationType.NONE;

File: sample/src/main/java/com/rd/pageindicatorview/data/CustomizationConverter.java
Patch:
@@ -35,6 +35,9 @@ public static AnimationType getAnimationType(int position) {
             case 8:
                 return AnimationType.SWAP;
 
+            case 9:
+                return AnimationType.SCALE_DOWN;
+
             default:
                 return AnimationType.NONE;
         }

File: pageindicatorview/src/main/java/com/rd/PageIndicatorView2.java
Patch:
@@ -140,7 +140,7 @@ public int getCount() {
 
     /**
      * Dynamic count will automatically update number of circle indicators
-     * if {@link ViewPager} page count updated on run-time. If new count will be bigger than current count,
+     * if {@link ViewPager} page count updates on run-time. If new count will be bigger than current count,
      * selected circle will stay as it is, otherwise it will be set to last one.
      * Note: works if {@link ViewPager} set and already have it's adapter. See {@link #setViewPager(ViewPager)}.
      *
@@ -485,7 +485,7 @@ public void setRtlMode(@Nullable RtlMode mode) {
      */
     public void setSelection(int position) {
         Indicator indicator = manager.indicator();
-        if (indicator.isInteractiveAnimation()) {
+        if (indicator.isInteractiveAnimation() && indicator.getAnimationType() != AnimationType.NONE) {
             return;
         }
 

File: pageindicatorview/src/main/java/com/rd/draw/drawer/type/DropDrawer.java
Patch:
@@ -3,7 +3,6 @@
 import android.graphics.Canvas;
 import android.graphics.Paint;
 import android.support.annotation.NonNull;
-import android.util.Log;
 import com.rd.animation.data.Value;
 import com.rd.animation.data.type.DropAnimationValue;
 import com.rd.draw.data.Indicator;
@@ -34,8 +33,6 @@ public void draw(
         canvas.drawCircle(coordinateX, coordinateY, radius, paint);
 
         paint.setColor(selectedColor);
-        Log.e("TEST", "WIDTH " + v.getWidth() + " HEIGHT: " + v.getHeight());
-
         if (indicator.getOrientation() == Orientation.HORIZONTAL) {
             canvas.drawCircle(v.getWidth(), v.getHeight(), v.getRadius(), paint);
         } else {

File: sample/src/main/java/com/rd/pageindicatorview/data/Customization.java
Patch:
@@ -12,8 +12,8 @@ public class Customization implements Parcelable {
     private Orientation orientation = Orientation.HORIZONTAL;
     private RtlMode rtlMode = RtlMode.Off;
 
-    private boolean interactiveAnimation;
-    private boolean autoVisibility;
+    private boolean interactiveAnimation = false;
+    private boolean autoVisibility = true;
 
     public AnimationType getAnimationType() {
         return animationType;

File: sample/src/main/java/com/rd/pageindicatorview/home/HomeActivity.java
Patch:
@@ -62,7 +62,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     @SuppressWarnings("ConstantConditions")
     private void initViews() {
 
-        HomeAdapter adapter = new HomeAdapter();
+        final HomeAdapter adapter = new HomeAdapter();
         adapter.setData(createPageList());
 
         ViewPager pager = (ViewPager) findViewById(R.id.viewPager);

File: pageindicatorview/src/main/java/com/rd/PageIndicatorView.java
Patch:
@@ -1185,8 +1185,6 @@ private AnimationType getAnimationType(int index) {
                 return AnimationType.DROP;
             case 8:
                 return AnimationType.SWAP;
-            case 9:
-                return AnimationType.DRAG_WORM;
         }
 
         return AnimationType.NONE;

File: pageindicatorview/src/main/java/com/rd/animation/type/AnimationType.java
Patch:
@@ -1,3 +1,3 @@
 package com.rd.animation.type;
 
-public enum AnimationType {NONE, COLOR, SCALE, WORM, SLIDE, FILL, THIN_WORM, DROP, SWAP,DRAG_WORM}
+public enum AnimationType {NONE, COLOR, SCALE, WORM, SLIDE, FILL, THIN_WORM, DROP, SWAP}

File: pageindicatorview/src/main/java/com/rd/animation/type/ColorAnimation.java
Patch:
@@ -5,7 +5,7 @@
 import android.animation.ValueAnimator;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-import android.view.animation.DecelerateInterpolator;
+import android.view.animation.AccelerateDecelerateInterpolator;
 import com.rd.animation.controller.ValueController;
 import com.rd.animation.data.type.ColorAnimationValue;
 
@@ -32,7 +32,7 @@ public ColorAnimation(@Nullable ValueController.UpdateListener listener) {
     public ValueAnimator createAnimator() {
         ValueAnimator animator = new ValueAnimator();
         animator.setDuration(BaseAnimation.DEFAULT_ANIMATION_TIME);
-        animator.setInterpolator(new DecelerateInterpolator());
+        animator.setInterpolator(new AccelerateDecelerateInterpolator());
         animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {

File: pageindicatorview/src/main/java/com/rd/animation/type/ScaleAnimation.java
Patch:
@@ -4,7 +4,7 @@
 import android.animation.PropertyValuesHolder;
 import android.animation.ValueAnimator;
 import android.support.annotation.NonNull;
-import android.view.animation.DecelerateInterpolator;
+import android.view.animation.AccelerateDecelerateInterpolator;
 import com.rd.animation.controller.ValueController;
 import com.rd.animation.data.type.ScaleAnimationValue;
 
@@ -32,7 +32,7 @@ public ScaleAnimation(@NonNull ValueController.UpdateListener listener) {
     public ValueAnimator createAnimator() {
         ValueAnimator animator = new ValueAnimator();
         animator.setDuration(BaseAnimation.DEFAULT_ANIMATION_TIME);
-        animator.setInterpolator(new DecelerateInterpolator());
+        animator.setInterpolator(new AccelerateDecelerateInterpolator());
         animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {

File: pageindicatorview/src/main/java/com/rd/draw/DrawManager.java
Patch:
@@ -35,7 +35,7 @@ public Indicator indicator() {
         return indicator;
     }
 
-    public void updateValue(@NonNull Value value) {
+    public void updateValue(@Nullable Value value) {
         drawController.updateValue(value);
     }
 

File: pageindicatorview/src/main/java/com/rd/draw/controller/AttributeController.java
Patch:
@@ -150,8 +150,6 @@ private AnimationType getAnimationType(int index) {
                 return AnimationType.DROP;
             case 8:
                 return AnimationType.SWAP;
-            case 9:
-                return AnimationType.DRAG_WORM;
         }
 
         return AnimationType.NONE;

File: pageindicatorview/src/main/java/com/rd/draw/controller/DrawController.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.graphics.Canvas;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 import com.rd.animation.data.Value;
 import com.rd.animation.type.AnimationType;
 import com.rd.draw.data.Indicator;
@@ -19,7 +20,7 @@ public DrawController(@NonNull Indicator indicator) {
         this.drawer = new Drawer(indicator);
     }
 
-    public void updateValue(@NonNull Value value) {
+    public void updateValue(@Nullable Value value) {
         this.value = value;
     }
 

File: pageindicatorview/src/main/java/com/rd/utils/CoordinatesUtils.java
Patch:
@@ -80,7 +80,7 @@ private static int getVerticalCoordinate(@NonNull Indicator indicator) {
         int coordinate = radius;
 
         if (indicator.getAnimationType() == AnimationType.DROP) {
-            coordinate += radius;
+            coordinate += radius * 2;
         }
 
         return coordinate;

File: pageindicatorview/src/main/java/com/rd/animation/AnimationManager.java
Patch:
@@ -10,8 +10,7 @@ public class AnimationManager {
     private AnimationController animationController;
 
     public AnimationManager(@NonNull Indicator indicator, @NonNull ValueController.UpdateListener listener) {
-        ValueController valueController = new ValueController(listener);
-        this.animationController = new AnimationController(valueController, indicator);
+        this.animationController = new AnimationController(indicator, listener);
     }
 
     public void basic() {

File: pageindicatorview/src/main/java/com/rd/animation/controller/ValueController.java
Patch:
@@ -19,7 +19,7 @@ public class ValueController {
     private UpdateListener updateListener;
 
     public interface UpdateListener {
-        void onValueUpdated(@NonNull Value value);
+        void onValueUpdated(@Nullable Value value);
     }
 
     public ValueController(@Nullable UpdateListener listener) {

File: pageindicatorview/src/main/java/com/rd/animation/type/DropAnimation.java
Patch:
@@ -136,7 +136,7 @@ private void onAnimatorUpdate(@NonNull ValueAnimator animation, @NonNull Animati
         }
 
         if (listener != null) {
-            listener.onDropAnimationUpdated(value);
+            listener.onValueUpdated(value);
         }
     }
 

File: pageindicatorview/src/main/java/com/rd/animation/type/FillAnimation.java
Patch:
@@ -140,7 +140,7 @@ private void onAnimateUpdated(@NonNull ValueAnimator animation) {
         value.setStrokeReverse(strokeReverse);
 
         if (listener != null) {
-            listener.onFillAnimationUpdated(value);
+            listener.onValueUpdated(value);
         }
     }
 

File: pageindicatorview/src/main/java/com/rd/animation/type/ScaleAnimation.java
Patch:
@@ -79,7 +79,7 @@ private void onAnimateUpdated(@NonNull ValueAnimator animation) {
         value.setRadiusReverse(radiusReverse);
 
         if (listener != null) {
-            listener.onScaleAnimationUpdated(value);
+            listener.onValueUpdated(value);
         }
     }
 

File: pageindicatorview/src/main/java/com/rd/animation/type/SlideAnimation.java
Patch:
@@ -77,7 +77,7 @@ private void onAnimateUpdated(@NonNull ValueAnimator animation) {
         value.setWidth(width);
 
         if (listener != null) {
-            listener.onSlideAnimationUpdated(value);
+            listener.onValueUpdated(value);
         }
     }
 

File: pageindicatorview/src/main/java/com/rd/animation/type/SwapAnimation.java
Patch:
@@ -76,7 +76,7 @@ private void onAnimateUpdated(@NonNull ValueAnimator animation) {
         value.setWidth(coordinate);
 
         if (listener != null) {
-            listener.onSwapAnimationUpdated(value);
+            listener.onValueUpdated(value);
         }
     }
 

File: pageindicatorview/src/main/java/com/rd/animation/type/ThinWormAnimation.java
Patch:
@@ -70,7 +70,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 onAnimateUpdated(animation);
 
                 if (listener != null) {
-                    listener.onThinWormAnimationUpdated(value);
+                    listener.onValueUpdated(value);
                 }
             }
         });

File: pageindicatorview/src/main/java/com/rd/draw/controller/DrawController.java
Patch:
@@ -49,18 +49,18 @@ private void drawIndicator(
         boolean isSelectedItem = selectedItem | selectingItem;
         drawer.setup(position, coordinateX, coordinateY);
 
-        if (isSelectedItem) {
+        if (value != null && isSelectedItem) {
             drawWithAnimation(canvas);
         } else {
-            drawer.drawBasic(canvas);
+            drawer.drawBasic(canvas, isSelectedItem);
         }
     }
 
     private void drawWithAnimation(@NonNull Canvas canvas) {
         AnimationType animationType = indicator.getAnimationType();
         switch (animationType) {
             case NONE:
-                drawer.drawBasic(canvas);
+                drawer.drawBasic(canvas, true);
                 break;
 
             case COLOR:

File: pageindicatorview/src/main/java/com/rd/draw/drawer/BasicDrawer.java
Patch:
@@ -22,6 +22,7 @@ public class BasicDrawer extends BaseDrawer {
     public void draw(
             @NonNull Canvas canvas,
             int position,
+            boolean isSelectedItem,
             int coordinateX,
             int coordinateY) {
 
@@ -34,7 +35,7 @@ public void draw(
         int selectedPosition = indicator.getSelectedPosition();
         AnimationType animationType = indicator.getAnimationType();
 
-        if (animationType == AnimationType.SCALE) {
+        if (animationType == AnimationType.SCALE && !isSelectedItem) {
             radius *= scaleFactor;
         }
 

File: pageindicatorview/src/main/java/com/rd/draw/drawer/Drawer.java
Patch:
@@ -32,9 +32,9 @@ public void setup(int position, int coordinateX, int coordinateY) {
         this.coordinateY = coordinateY;
     }
 
-    public void drawBasic(@NonNull Canvas canvas) {
+    public void drawBasic(@NonNull Canvas canvas, boolean isSelectedItem) {
         if (colorDrawer != null) {
-            basicDrawer.draw(canvas, position, coordinateX, coordinateY);
+            basicDrawer.draw(canvas, position, isSelectedItem, coordinateX, coordinateY);
         }
     }
 

File: sample/src/main/java/com/rd/pageindicatorview/home/HomeActivity.java
Patch:
@@ -23,7 +23,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @SuppressWarnings("ConstantConditions")
     private void initViews() {
-        final HomeAdapter adapter = new HomeAdapter();
+        HomeAdapter adapter = new HomeAdapter();
         adapter.setData(createPageList());
 
         ViewPager pager = (ViewPager) findViewById(R.id.viewPager);

File: pageindicatorview/src/main/java/com/rd/PageIndicatorView.java
Patch:
@@ -138,9 +138,10 @@ protected void onRestoreInstanceState(Parcelable state) {
             this.selectedPosition = positionSavedState.getSelectedPosition();
             this.selectingPosition = positionSavedState.getSelectingPosition();
             this.lastSelectedPosition = positionSavedState.getLastSelectedPosition();
+            super.onRestoreInstanceState(positionSavedState.getSuperState());
+        } else {
+            super.onRestoreInstanceState(state);
         }
-
-        super.onRestoreInstanceState(state);
     }
 
     @SuppressWarnings("UnnecessaryLocalVariable")

File: pageindicatorview/src/main/java/com/rd/PageIndicatorView.java
Patch:
@@ -138,9 +138,10 @@ protected void onRestoreInstanceState(Parcelable state) {
             this.selectedPosition = positionSavedState.getSelectedPosition();
             this.selectingPosition = positionSavedState.getSelectingPosition();
             this.lastSelectedPosition = positionSavedState.getLastSelectedPosition();
+            super.onRestoreInstanceState(positionSavedState.getSuperState());
+        } else {
+            super.onRestoreInstanceState(state);
         }
-
-        super.onRestoreInstanceState(state);
     }
 
     @SuppressWarnings("UnnecessaryLocalVariable")

File: pageindicatorview/src/main/java/com/rd/animation/ThinWormAnimation.java
Patch:
@@ -92,7 +92,9 @@ public ThinWormAnimation progress(float progress) {
                     currPlayTime = anim.getDuration();
                 }
 
-                anim.setCurrentPlayTime(currPlayTime);
+                if (anim.getValues() != null && anim.getValues().length > 0) {
+                    anim.setCurrentPlayTime(currPlayTime);
+                }
             }
         }
 

File: pageindicatorview/src/main/java/com/rd/animation/WormAnimation.java
Patch:
@@ -72,7 +72,9 @@ public WormAnimation progress(float progress) {
                     currPlayTime = animDuration;
                 }
 
-                animator.setCurrentPlayTime(currPlayTime);
+                if (animator.getValues() != null && animator.getValues().length > 0) {
+                    animator.setCurrentPlayTime(currPlayTime);
+                }
                 playTimeLeft -= currPlayTime;
             }
         }

File: sample/src/main/java/com/rd/pageindicatorview/home/HomeActivity.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
 import android.support.v4.view.ViewPager;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;

File: pageindicatorview/src/main/java/com/rd/pageindicatorview/view/PageIndicatorView.java
Patch:
@@ -26,12 +26,13 @@ public class PageIndicatorView extends View implements ViewPager.OnPageChangeLis
     private static final String DEFAULT_UNSELECTED_COLOR = "#33ffffff";
     private static final String DEFAULT_SELECTED_COLOR = "#ffffff";
 
+    private static final int DEFAULT_CIRCLES_COUNT = 3;
     private static final int DEFAULT_RADIUS_DP = 6;
     private static final int DEFAULT_PADDING_DP = 8;
 
     private int radiusPx = DensityUtils.dpToPx(DEFAULT_RADIUS_DP);
     private int paddingPx = DensityUtils.dpToPx(DEFAULT_PADDING_DP);
-    private int count;
+    private int count = DEFAULT_CIRCLES_COUNT;
 
     //Color
     private int unselectedColor = Color.parseColor(DEFAULT_UNSELECTED_COLOR);
@@ -638,7 +639,7 @@ private void initAttributes(@Nullable AttributeSet attrs) {
 
         TypedArray typedArray = getContext().obtainStyledAttributes(attrs, R.styleable.PageIndicatorView, 0, 0);
 
-        count = typedArray.getInt(R.styleable.PageIndicatorView_count, 0);
+        count = typedArray.getInt(R.styleable.PageIndicatorView_count, DEFAULT_CIRCLES_COUNT);
         int position = typedArray.getInt(R.styleable.PageIndicatorView_select, 0);
 
         if (position < 0) {

File: app/src/main/java/com/rd/pageindicatorview/home/HomeActivity.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.rd.pageindicatorview.R;
 import com.rd.pageindicatorview.view.PageIndicatorView;
+import com.rd.pageindicatorview.view.animation.AnimationType;
 
 public class HomeActivity extends AppCompatActivity {
 
@@ -24,7 +25,6 @@ private void initViews() {
         pager.setAdapter(adapter);
 
         final PageIndicatorView pageIndicatorView = (PageIndicatorView) findViewById(R.id.pageIndicatorView);
-        pageIndicatorView.setCount(8);
         pageIndicatorView.setViewPager(pager);
     }
 }

File: app/src/main/java/com/rd/pageindicatorview/home/HomeActivity.java
Patch:
@@ -23,7 +23,8 @@ private void initViews() {
         ViewPager pager = (ViewPager) findViewById(R.id.viewPager);
         pager.setAdapter(adapter);
 
-        PageIndicatorView pageIndicatorView = (PageIndicatorView) findViewById(R.id.pageIndicatorView);
+        final PageIndicatorView pageIndicatorView = (PageIndicatorView) findViewById(R.id.pageIndicatorView);
+        pageIndicatorView.setCount(8);
         pageIndicatorView.setViewPager(pager);
     }
 }

File: app/src/main/java/com/rd/dotpagerview/views/AnimationType.java
Patch:
@@ -1,3 +1,3 @@
 package com.rd.dotpagerview.views;
 
-public enum AnimationType {NONE, COLOR, SCALE, COLOR_AND_SCALE}
+public enum AnimationType {NONE, COLOR, SCALE, COLOR_AND_SCALE, SLIDE}

