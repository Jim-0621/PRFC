File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -256,6 +256,7 @@ public void onCreate(Bundle savedInstanceState) {
         final Activity activity = requireActivity();
         activity.getWindow().setSoftInputMode(
                 WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
+        setStyle(AppCompatDialogFragment.STYLE_NO_TITLE, 0);
         mCurrentView = UNINITIALIZED;
         if (savedInstanceState != null) {
             mCalendar.set(Calendar.YEAR, savedInstanceState.getInt(KEY_SELECTED_YEAR));

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -631,6 +631,7 @@ public void setLocale(Locale locale) {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        setStyle(AppCompatDialogFragment.STYLE_NO_TITLE, 0);
         if (savedInstanceState != null && savedInstanceState.containsKey(KEY_INITIAL_TIME)
                     && savedInstanceState.containsKey(KEY_IS_24_HOUR_VIEW)) {
             mInitialTime = savedInstanceState.getParcelable(KEY_INITIAL_TIME);
@@ -671,7 +672,6 @@ affect the behaviour of the picker (in the unlikely event the user reconfigures
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-
         int viewRes = mVersion == Version.VERSION_1 ? R.layout.mdtp_time_picker_dialog : R.layout.mdtp_time_picker_dialog_v2;
         View view = inflater.inflate(viewRes, container,false);
         KeyboardListener keyboardListener = new KeyboardListener();

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -28,7 +28,7 @@
 import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
-import androidx.fragment.app.DialogFragment;
+import androidx.appcompat.app.AppCompatDialogFragment;
 import androidx.core.content.ContextCompat;
 import androidx.core.content.res.ResourcesCompat;
 import android.text.format.DateFormat;
@@ -59,7 +59,7 @@
 /**
  * Dialog allowing users to select a date.
  */
-public class DatePickerDialog extends DialogFragment implements
+public class DatePickerDialog extends AppCompatDialogFragment implements
         OnClickListener, DatePickerController {
 
     public enum Version {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -31,7 +31,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
-import androidx.fragment.app.DialogFragment;
+import androidx.appcompat.app.AppCompatDialogFragment;
 import androidx.core.content.ContextCompat;
 import androidx.core.content.res.ResourcesCompat;
 import android.util.Log;
@@ -61,7 +61,7 @@
 /**
  * Dialog to set a time.
  */
-public class TimePickerDialog extends DialogFragment implements
+public class TimePickerDialog extends AppCompatDialogFragment implements
         OnValueSelectedListener, TimePickerController {
     private static final String TAG = "TimePickerDialog";
 
@@ -258,6 +258,7 @@ public void setTitle(String title) {
         mTitle = title;
     }
 
+    @SuppressWarnings("unused")
     public String getTitle() {
         return mTitle;
     }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DayPickerView.java
Patch:
@@ -259,7 +259,7 @@ public int getMostVisiblePosition() {
         return getChildAdapterPosition(getMostVisibleMonth());
     }
 
-    public MonthView getMostVisibleMonth() {
+    public @Nullable MonthView getMostVisibleMonth() {
         boolean verticalScroll = mController.getScrollOrientation() == DatePickerDialog.ScrollOrientation.VERTICAL;
         final int maxSize = verticalScroll ? getHeight() : getWidth();
         int maxDisplayedSize = 0;
@@ -358,6 +358,8 @@ void accessibilityAnnouncePageChanged() {
         if (mv != null) {
             String monthYear = getMonthAndYearString(mv.mMonth, mv.mYear, mController.getLocale());
             Utils.tryAccessibilityAnnounce(this, monthYear);
+        } else {
+            Log.w("DayPickerView", "Tried to announce before layout was initialized");
         }
     }
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -520,22 +520,22 @@ private void setCurrentView(final int viewIndex) {
                         pulseAnimator.setStartDelay(ANIMATION_DELAY);
                         mDelayAnimation = false;
                     }
-                    mDayPickerView.onDateChanged();
                     if (mCurrentView != viewIndex) {
                         mMonthAndDayView.setSelected(true);
                         mYearView.setSelected(false);
                         mAnimator.setDisplayedChild(MONTH_AND_DAY_VIEW);
                         mCurrentView = viewIndex;
                     }
+                    mDayPickerView.onDateChanged();
                     pulseAnimator.start();
                 } else {
-                    mDayPickerView.onDateChanged();
                     if (mCurrentView != viewIndex) {
                         mMonthAndDayView.setSelected(true);
                         mYearView.setSelected(false);
                         mAnimator.setDisplayedChild(MONTH_AND_DAY_VIEW);
                         mCurrentView = viewIndex;
                     }
+                    mDayPickerView.onDateChanged();
                 }
 
                 int flags = DateUtils.FORMAT_SHOW_DATE;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DayPickerGroup.java
Patch:
@@ -162,6 +162,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
     @Override
     public void onPageChanged(int position) {
         updateButtonVisibility(position);
+        dayPickerView.accessibilityAnnouncePageChanged();
     }
 
     @Override

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/MonthView.java
Patch:
@@ -705,6 +705,9 @@ protected void onPopulateNodeForVirtualView(int virtualViewId,
             node.setBoundsInParent(mTempRect);
             node.addAction(AccessibilityNodeInfo.ACTION_CLICK);
 
+            // Flag non-selectable dates as disabled
+            node.setEnabled(!mController.isOutOfRange(mYear, mMonth, virtualViewId));
+
             if (virtualViewId == mSelectedDay) {
                 node.setSelected(true);
             }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DayPickerGroup.java
Patch:
@@ -179,7 +179,7 @@ public void onClick(@NonNull View v) {
         // updateButtonVisibility only triggers when a scroll is completed. So a user might
         // click the button when the animation is still ongoing potentially pushing the target
         // position outside of the bounds of the dayPickerView
-        if (position >= 0 || position < dayPickerView.getCount()) {
+        if (position >= 0 && position < dayPickerView.getCount()) {
             dayPickerView.smoothScrollToPosition(position);
             updateButtonVisibility(position);
         }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/DefaultTimepointLimiter.java
Patch:
@@ -98,7 +98,7 @@ void setDisabledTimes(@NonNull Timepoint[] disabledTimes) {
         return mDisabledTimes.toArray(new Timepoint[mDisabledTimes.size()]);
     }
 
-    private TreeSet<Timepoint> getExclusiveSelectableTimes(TreeSet<Timepoint> selectable, TreeSet<Timepoint> disabled) {
+    @NonNull private TreeSet<Timepoint> getExclusiveSelectableTimes(@NonNull TreeSet<Timepoint> selectable, @NonNull TreeSet<Timepoint> disabled) {
         TreeSet<Timepoint> output = new TreeSet<>(selectable);
         output.removeAll(disabled);
         return output;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -458,7 +458,7 @@ public void setTimeInterval(@IntRange(from=1, to=24) int hourInterval,
     @SuppressWarnings("SameParameterValue")
     public void setTimeInterval(@IntRange(from=1, to=24) int hourInterval,
                                 @IntRange(from=1, to=60) int minuteInterval) {
-        setTimeInterval(hourInterval, minuteInterval, 1);
+        setTimeInterval(hourInterval, minuteInterval, 60);
     }
 
     /**
@@ -471,7 +471,7 @@ public void setTimeInterval(@IntRange(from=1, to=24) int hourInterval,
      */
     @SuppressWarnings("unused")
     public void setTimeInterval(@IntRange(from=1, to=24) int hourInterval) {
-        setTimeInterval(hourInterval, 1);
+        setTimeInterval(hourInterval, 60);
     }
 
     public void setOnTimeSetListener(OnTimeSetListener callback) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -588,10 +588,10 @@ private void updateDisplay(boolean announce) {
         if (mVersion == Version.VERSION_1) {
             if (mDatePickerHeaderView != null) {
                 if (mTitle != null)
-                    mDatePickerHeaderView.setText(mTitle.toUpperCase(mLocale));
+                    mDatePickerHeaderView.setText(mTitle);
                 else {
                     mDatePickerHeaderView.setText(mCalendar.getDisplayName(Calendar.DAY_OF_WEEK, Calendar.LONG,
-                            mLocale).toUpperCase(mLocale));
+                            mLocale));
                 }
             }
             mSelectedMonthTextView.setText(MONTH_FORMAT.format(mCalendar.getTime()));

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -998,7 +998,7 @@ else if (mIs24HourMode && !mEnableSeconds && mEnableMinutes) {
         TextView timePickerHeader = view.findViewById(R.id.mdtp_time_picker_header);
         if (!mTitle.isEmpty()) {
             timePickerHeader.setVisibility(TextView.VISIBLE);
-            timePickerHeader.setText(mTitle.toUpperCase(mLocale));
+            timePickerHeader.setText(mTitle);
         }
 
         // Set the theme at the end so that the initialize()s above don't counteract the theme.

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DayPickerView.java
Patch:
@@ -243,7 +243,6 @@ public boolean goTo(MonthAdapter.CalendarDay day, boolean animate, boolean setSe
     public void postSetSelection(final int position) {
         clearFocus();
         post(new Runnable() {
-
             @Override
             public void run() {
                 ((LinearLayoutManager) getLayoutManager()).scrollToPositionWithOffset(position, 0);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/GravitySnapHelper.java
Patch:
@@ -48,7 +48,7 @@ public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
             if (newState == RecyclerView.SCROLL_STATE_SETTLING) {
                 snapping = false;
             }
-            if (newState == RecyclerView.SCROLL_STATE_IDLE && snapping && listener != null) {
+            if (newState == RecyclerView.SCROLL_STATE_IDLE && listener != null) {
                 int position = getSnappedPosition(recyclerView);
                 if (position != RecyclerView.NO_POSITION) {
                     listener.onSnap(position);
@@ -58,6 +58,7 @@ public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
         }
     };
 
+    @SuppressWarnings("unused")
     public GravitySnapHelper(int gravity) {
         this(gravity, null);
     }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -807,8 +807,9 @@ public Calendar getMaxDate() {
      */
     @SuppressWarnings("unused")
     public void setHighlightedDays(Calendar[] highlightedDays) {
-        for (Calendar highlightedDay : highlightedDays) Utils.trimToMidnight((Calendar) highlightedDay.clone());
-        this.highlightedDays.addAll(Arrays.asList(highlightedDays));
+        for (Calendar highlightedDay : highlightedDays) {
+            this.highlightedDays.add(Utils.trimToMidnight((Calendar) highlightedDay.clone()));
+        }
         if (mDayPickerView != null) mDayPickerView.onChange();
     }
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -207,7 +207,7 @@ public static DatePickerDialog newInstance(OnDateSetListener callBack, int year,
     @SuppressWarnings("unused")
     public static DatePickerDialog newInstance(OnDateSetListener callback) {
         Calendar now = Calendar.getInstance();
-        return DatePickerDialog.newInstance(callback, now.get(Calendar.YEAR), now.get(Calendar.MONTH), now.get(Calendar.DAY_OF_MONTH));
+        return DatePickerDialog.newInstance(callback, now);
     }
 
     @SuppressWarnings("unused")
@@ -219,7 +219,7 @@ public static DatePickerDialog newInstance(OnDateSetListener callback, Calendar
 
     public void initialize(OnDateSetListener callBack, Calendar initialSelection) {
         mCallBack = callBack;
-        mCalendar = Utils.trimToMidnight(initialSelection);
+        mCalendar = Utils.trimToMidnight((Calendar) initialSelection.clone());
         mScrollOrientation = null;
         //noinspection deprecation
         setTimeZone(mCalendar.getTimeZone());
@@ -807,7 +807,7 @@ public Calendar getMaxDate() {
      */
     @SuppressWarnings("unused")
     public void setHighlightedDays(Calendar[] highlightedDays) {
-        for (Calendar highlightedDay : highlightedDays) Utils.trimToMidnight(highlightedDay);
+        for (Calendar highlightedDay : highlightedDays) Utils.trimToMidnight((Calendar) highlightedDay.clone());
         this.highlightedDays.addAll(Arrays.asList(highlightedDays));
         if (mDayPickerView != null) mDayPickerView.onChange();
     }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DefaultDateRangeLimiter.java
Patch:
@@ -81,12 +81,12 @@ public DefaultDateRangeLimiter[] newArray(int size) {
     };
 
     void setSelectableDays(@NonNull Calendar[] days) {
-        for (Calendar selectableDay : days) Utils.trimToMidnight(selectableDay);
+        for (Calendar selectableDay : days) Utils.trimToMidnight((Calendar) selectableDay.clone());
         this.selectableDays.addAll(Arrays.asList(days));
     }
 
     void setDisabledDays(@NonNull Calendar[] days) {
-        for (Calendar disabledDay : days) Utils.trimToMidnight(disabledDay);
+        for (Calendar disabledDay : days) Utils.trimToMidnight((Calendar) disabledDay.clone());
         this.disabledDays.addAll(Arrays.asList(days));
     }
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -400,6 +400,7 @@ affect the behaviour of the picker (in the unlikely event the user reconfigures
         animation2.setDuration(ANIMATION_DURATION);
         mAnimator.setOutAnimation(animation2);
 
+        String buttonTypeface = activity.getResources().getString(R.string.mdtp_button_typeface);
         Button okButton = view.findViewById(R.id.mdtp_ok);
         okButton.setOnClickListener(new OnClickListener() {
 
@@ -410,7 +411,7 @@ public void onClick(View v) {
                 dismiss();
             }
         });
-        okButton.setTypeface(TypefaceHelper.get(activity, "Roboto-Medium"));
+        okButton.setTypeface(TypefaceHelper.get(activity, buttonTypeface));
         if (mOkString != null) okButton.setText(mOkString);
         else okButton.setText(mOkResid);
 
@@ -422,7 +423,7 @@ public void onClick(View v) {
                 if (getDialog() != null) getDialog().cancel();
             }
         });
-        cancelButton.setTypeface(TypefaceHelper.get(activity, "Roboto-Medium"));
+        cancelButton.setTypeface(TypefaceHelper.get(activity, buttonTypeface));
         if (mCancelString != null) cancelButton.setText(mCancelString);
         else cancelButton.setText(mCancelResid);
         cancelButton.setVisibility(isCancelable() ? View.VISIBLE : View.GONE);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -732,6 +732,7 @@ public void onClick(View view) {
             }
         });
 
+        String buttonTypeface = context.getResources().getString(R.string.mdtp_button_typeface);
         mOkButton = view.findViewById(R.id.mdtp_ok);
         mOkButton.setOnClickListener(new OnClickListener() {
             @Override
@@ -746,7 +747,7 @@ public void onClick(View v) {
             }
         });
         mOkButton.setOnKeyListener(keyboardListener);
-        mOkButton.setTypeface(TypefaceHelper.get(context, "Roboto-Medium"));
+        mOkButton.setTypeface(TypefaceHelper.get(context, buttonTypeface));
         if(mOkString != null) mOkButton.setText(mOkString);
         else mOkButton.setText(mOkResid);
 
@@ -758,7 +759,7 @@ public void onClick(View v) {
                 if (getDialog() != null) getDialog().cancel();
             }
         });
-        mCancelButton.setTypeface(TypefaceHelper.get(context, "Roboto-Medium"));
+        mCancelButton.setTypeface(TypefaceHelper.get(context, buttonTypeface));
         if(mCancelString != null) mCancelButton.setText(mCancelString);
         else mCancelButton.setText(mCancelResid);
         mCancelButton.setVisibility(isCancelable() ? View.VISIBLE : View.GONE);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerController.java
Patch:
@@ -17,6 +17,7 @@
 package com.wdullaer.materialdatetimepicker.date;
 
 import java.util.Calendar;
+import java.util.Locale;
 import java.util.TimeZone;
 
 /**
@@ -57,6 +58,8 @@ public interface DatePickerController {
 
     TimeZone getTimeZone();
 
+    Locale getLocale();
+
     DatePickerDialog.Version getVersion();
 
     DatePickerDialog.ScrollOrientation getScrollOrientation();

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/SimpleMonthView.java
Patch:
@@ -55,6 +55,6 @@ public void drawMonthDay(Canvas canvas, int year, int month, int day,
             mMonthNumPaint.setColor(isHighlighted(year, month, day) ? mHighlightedDayTextColor : mDayTextColor);
         }
 
-        canvas.drawText(String.valueOf(day), x, y, mMonthNumPaint);
+        canvas.drawText(String.format(mController.getLocale(), "%d", day), x, y, mMonthNumPaint);
     }
 }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/YearPickerView.java
Patch:
@@ -132,7 +132,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             }
             int year = mMinYear + position;
             boolean selected = mController.getSelectedDay().year == year;
-            v.setText(String.valueOf(year));
+            v.setText(String.format(mController.getLocale(),"%d", year));
             v.drawIndicator(selected);
             v.requestLayout();
             if (selected) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/AmPmCirclesView.java
Patch:
@@ -30,6 +30,7 @@
 import com.wdullaer.materialdatetimepicker.Utils;
 
 import java.text.DateFormatSymbols;
+import java.util.Locale;
 
 /**
  * Draw the two smaller AM and PM circles next to where the larger circle will be.
@@ -73,7 +74,7 @@ public AmPmCirclesView(Context context) {
         mIsInitialized = false;
     }
 
-    public void initialize(Context context, TimePickerController controller, int amOrPm) {
+    public void initialize(Context context, Locale locale, TimePickerController controller, int amOrPm) {
         if (mIsInitialized) {
             Log.e(TAG, "AmPmCirclesView may only be initialized once.");
             return;
@@ -107,7 +108,7 @@ public void initialize(Context context, TimePickerController controller, int amO
                 Float.parseFloat(res.getString(R.string.mdtp_circle_radius_multiplier));
         mAmPmCircleRadiusMultiplier =
                 Float.parseFloat(res.getString(R.string.mdtp_ampm_circle_radius_multiplier));
-        String[] amPmTexts = new DateFormatSymbols().getAmPmStrings();
+        String[] amPmTexts = new DateFormatSymbols(locale).getAmPmStrings();
         mAmText = amPmTexts[0];
         mPmText = amPmTexts[1];
 

File: sample/src/main/java/com/wdullaer/datetimepickerexample/DatePickerFragment.java
Patch:
@@ -15,6 +15,7 @@
 import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;
 
 import java.util.Calendar;
+import java.util.Locale;
 
 /**
  * A simple {@link Fragment} subclass.

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DayPickerView.java
Patch:
@@ -383,7 +383,7 @@ public boolean performAccessibilityAction(int action, Bundle arguments) {
         int minMonth = mController.getStartDate().get(Calendar.MONTH);
         int month = (firstVisiblePosition + minMonth) % MonthAdapter.MONTHS_IN_YEAR;
         int year = (firstVisiblePosition + minMonth) / MonthAdapter.MONTHS_IN_YEAR + mController.getMinYear();
-        MonthAdapter.CalendarDay day = new MonthAdapter.CalendarDay(year, month, 1);
+        MonthAdapter.CalendarDay day = new MonthAdapter.CalendarDay(year, month, 1, mController.getTimeZone());
 
         // Scroll either forward or backward one month.
         if (action == AccessibilityNodeInfo.ACTION_SCROLL_FORWARD) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/MonthView.java
Patch:
@@ -533,7 +533,7 @@ private void onDayClick(int day) {
 
 
         if (mOnDayClickListener != null) {
-            mOnDayClickListener.onDayClick(this, new CalendarDay(mYear, mMonth, day));
+            mOnDayClickListener.onDayClick(this, new CalendarDay(mYear, mMonth, day, mController.getTimeZone()));
         }
 
         // This is a no-op if accessibility is turned off.
@@ -606,7 +606,7 @@ private String getWeekDayLabel(Calendar day) {
     public CalendarDay getAccessibilityFocus() {
         final int day = mTouchHelper.getFocusedVirtualView();
         if (day >= 0) {
-            return new CalendarDay(mYear, mMonth, day);
+            return new CalendarDay(mYear, mMonth, day, mController.getTimeZone());
         }
         return null;
     }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerController.java
Patch:
@@ -58,4 +58,6 @@ public interface DatePickerController {
     TimeZone getTimeZone();
 
     DatePickerDialog.Version getVersion();
+
+    DatePickerDialog.ScrollOrientation getScrollOrientation();
 }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DateRangeLimiter.java
Patch:
@@ -19,7 +19,6 @@
 import android.os.Parcelable;
 import android.support.annotation.NonNull;
 
-import java.io.Serializable;
 import java.util.Calendar;
 
 @SuppressWarnings("WeakerAccess")

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DayPickerView.java
Patch:
@@ -101,7 +101,7 @@ public void setController(DatePickerController controller) {
     }
 
     public void init(Context context) {
-        int scrollOrientation = mController.getVersion() == DatePickerDialog.Version.VERSION_1
+        int scrollOrientation = mController.getScrollOrientation() == DatePickerDialog.ScrollOrientation.VERTICAL
                 ? LinearLayoutManager.VERTICAL
                 : LinearLayoutManager.HORIZONTAL;
         linearLayoutManager = new LinearLayoutManager(context, scrollOrientation, false);
@@ -126,7 +126,7 @@ public void setScrollOrientation(int orientation) {
     protected void setUpRecyclerView() {
         setVerticalScrollBarEnabled(false);
         setFadingEdgeLength(0);
-        int gravity = mController.getVersion() == DatePickerDialog.Version.VERSION_1
+        int gravity = mController.getScrollOrientation() == DatePickerDialog.ScrollOrientation.VERTICAL
                 ? Gravity.TOP
                 : Gravity.START;
         GravitySnapHelper helper = new GravitySnapHelper(gravity);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -343,9 +343,11 @@ affect the behaviour of the picker (in the unlikely event the user reconfigures
         mSelectYear = res.getString(R.string.mdtp_select_year);
 
         int bgColorResource = mThemeDark ? R.color.mdtp_date_picker_view_animator_dark_theme : R.color.mdtp_date_picker_view_animator;
-        view.setBackgroundColor(ContextCompat.getColor(activity, bgColorResource));
+        int bgColor = ContextCompat.getColor(activity, bgColorResource);
+        view.setBackgroundColor(bgColor);
 
         mAnimator = view.findViewById(R.id.mdtp_animator);
+        mAnimator.setBackgroundColor(bgColor);
         mAnimator.addView(mDayPickerView);
         mAnimator.addView(mYearPickerView);
         mAnimator.setDateMillis(mCalendar.getTimeInMillis());

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -343,9 +343,11 @@ affect the behaviour of the picker (in the unlikely event the user reconfigures
         mSelectYear = res.getString(R.string.mdtp_select_year);
 
         int bgColorResource = mThemeDark ? R.color.mdtp_date_picker_view_animator_dark_theme : R.color.mdtp_date_picker_view_animator;
-        view.setBackgroundColor(ContextCompat.getColor(activity, bgColorResource));
+        int bgColor = ContextCompat.getColor(activity, bgColorResource);
+        view.setBackgroundColor(bgColor);
 
         mAnimator = view.findViewById(R.id.mdtp_animator);
+        mAnimator.setBackgroundColor(bgColor);
         mAnimator.addView(mDayPickerView);
         mAnimator.addView(mYearPickerView);
         mAnimator.setDateMillis(mCalendar.getTimeInMillis());

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/DefaultTimepointLimiter.java
Patch:
@@ -125,7 +125,7 @@ public boolean isOutOfRange(@NonNull Timepoint current) {
     public boolean isAmDisabled() {
         Timepoint midday = new Timepoint(12);
 
-        if(mMinTime != null && mMinTime.compareTo(midday) > 0) return true;
+        if(mMinTime != null && mMinTime.compareTo(midday) >= 0) return true;
 
         if(mSelectableTimes != null) {
             for(Timepoint t : mSelectableTimes) if(t.compareTo(midday) < 0) return false;

File: library/src/test/java/com/wdullaer/materialdatetimepicker/date/DefaultDateRangeLimiterTest.java
Patch:
@@ -331,7 +331,7 @@ public void isOutOfRangeShouldReturnTrueIfDateIsBeforeMin() {
         day.set(Calendar.YEAR, 1999);
 
         limiter.setMinDate(day);
-        day.roll(Calendar.DAY_OF_MONTH, false);
+        day.add(Calendar.DAY_OF_MONTH, -1);
         int year = day.get(Calendar.YEAR);
         int month = day.get(Calendar.MONTH);
         int dayNumber = day.get(Calendar.DAY_OF_MONTH);
@@ -362,7 +362,7 @@ public void isOutOfRangeShouldReturnTrueIfDateIsAfterMax() {
         day.set(Calendar.YEAR, 1999);
 
         limiter.setMaxDate(day);
-        day.roll(Calendar.DAY_OF_MONTH, true);
+        day.add(Calendar.DAY_OF_MONTH, 1);
         int year = day.get(Calendar.YEAR);
         int month = day.get(Calendar.MONTH);
         int dayNumber = day.get(Calendar.DAY_OF_MONTH);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DateRangeLimiter.java
Patch:
@@ -16,11 +16,13 @@
 
 package com.wdullaer.materialdatetimepicker.date;
 
+import android.os.Parcelable;
+
 import java.io.Serializable;
 import java.util.Calendar;
 
 @SuppressWarnings("WeakerAccess")
-public interface DateRangeLimiter extends Serializable {
+public interface DateRangeLimiter extends Parcelable {
     int getMinYear();
 
     int getMaxYear();

File: sample/src/main/java/com/wdullaer/datetimepickerexample/MainActivity.java
Patch:
@@ -34,7 +34,7 @@ private class PickerAdapter extends FragmentPagerAdapter {
         Fragment timePickerFragment;
         Fragment datePickerFragment;
 
-        public PickerAdapter(FragmentManager fm) {
+        PickerAdapter(FragmentManager fm) {
             super(fm);
             timePickerFragment = new TimePickerFragment();
             datePickerFragment = new DatePickerFragment();
@@ -56,7 +56,7 @@ public Fragment getItem(int position) {
             }
         }
 
-        public int getTitle(int position) {
+        int getTitle(int position) {
             switch(position) {
                 case 0:
                     return R.string.tab_title_time;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -187,7 +187,7 @@ public interface OnDateSetListener {
     /**
      * The callback used to notify other date picker components of a change in selected date.
      */
-    interface OnDateChangedListener {
+    protected interface OnDateChangedListener {
 
         void onDateChanged();
     }

File: sample/src/main/java/com/wdullaer/datetimepickerexample/MainActivity.java
Patch:
@@ -29,7 +29,7 @@ protected void onCreate(Bundle savedInstanceState) {
         for(int i=0;i<adapter.getCount();i++) tabLayout.getTabAt(i).setText(adapter.getTitle(i));
     }
 
-    class PickerAdapter extends FragmentPagerAdapter {
+    private class PickerAdapter extends FragmentPagerAdapter {
         private static final int NUM_PAGES = 2;
         Fragment timePickerFragment;
         Fragment datePickerFragment;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -712,7 +712,7 @@ public void setYearRange(int startYear, int endYear) {
      */
     @SuppressWarnings("unused")
     public void setMinDate(Calendar calendar) {
-        mMinDate = trimToMidnight(calendar);
+        mMinDate = trimToMidnight((Calendar) calendar.clone());
 
         if (mDayPickerView != null) {
             mDayPickerView.onChange();
@@ -734,7 +734,7 @@ public Calendar getMinDate() {
      */
     @SuppressWarnings("unused")
     public void setMaxDate(Calendar calendar) {
-        mMaxDate = trimToMidnight(calendar);
+        mMaxDate = trimToMidnight((Calendar) calendar.clone());
 
         if (mDayPickerView != null) {
             mDayPickerView.onChange();

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -1123,15 +1123,17 @@ public Timepoint roundToNearest(@NonNull Timepoint time, @Nullable Timepoint.TYP
             int currentDistance = Integer.MAX_VALUE;
             Timepoint output = time;
             for(Timepoint t : mSelectableTimes) {
+                Log.d("Timepoing", "" +  type + " " + time + " compared to " + t.toString());
                 // type == null: no restrictions
                 // type == HOUR: do not change the hour
                 if (type == Timepoint.TYPE.HOUR && t.getHour() != time.getHour()) continue;
                 // type == MINUTE: do not change hour or minute
                 if (type == Timepoint.TYPE.MINUTE  && t.getHour() != time.getHour() && t.getMinute() != time.getMinute()) continue;
                 // type == SECOND: cannot change anything, return input
                 if (type == Timepoint.TYPE.SECOND) return time;
+                Log.d("Timepoing", "Comparing");
                 int newDistance = Math.abs(t.compareTo(time));
-                if(newDistance < currentDistance) {
+                if (newDistance < currentDistance) {
                     currentDistance = newDistance;
                     output = t;
                 }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerController.java
Patch:
@@ -38,7 +38,7 @@ public interface DatePickerController {
 
     int getAccentColor();
     
-    Calendar[] getHighlightedDays();
+    boolean isHighlighted(int year, int month, int day);
 
     int getFirstDayOfWeek();
 

File: sample/src/main/java/com/wdullaer/datetimepickerexample/MainActivity.java
Patch:
@@ -30,7 +30,7 @@ protected void onCreate(Bundle savedInstanceState) {
     }
 
     class PickerAdapter extends FragmentPagerAdapter {
-        private static final int NUM_PAGES = 3;
+        private static final int NUM_PAGES = 2;
         Fragment timePickerFragment;
         Fragment datePickerFragment;
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -173,7 +173,7 @@ public interface OnTimeSetListener {
          * @param minute The minute that was set.
          * @param second The second that was set
          */
-        void onTimeSet(RadialPickerLayout view, int hourOfDay, int minute, int second);
+        void onTimeSet(TimePickerDialog view, int hourOfDay, int minute, int second);
     }
 
     public TimePickerDialog() {
@@ -1090,7 +1090,7 @@ private boolean processKeyUp(int keyCode) {
                 finishKbMode(false);
             }
             if (mCallback != null) {
-                mCallback.onTimeSet(mTimePicker,
+                mCallback.onTimeSet(this,
                         mTimePicker.getHours(), mTimePicker.getMinutes(), mTimePicker.getSeconds());
             }
             dismiss();
@@ -1689,7 +1689,7 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
 
     public void notifyOnDateListener() {
         if (mCallback != null) {
-            mCallback.onTimeSet(mTimePicker, mTimePicker.getHours(), mTimePicker.getMinutes(), mTimePicker.getSeconds());
+            mCallback.onTimeSet(this, mTimePicker.getHours(), mTimePicker.getMinutes(), mTimePicker.getSeconds());
         }
     }
 

File: sample/src/main/java/com/wdullaer/datetimepickerexample/TimePickerFragment.java
Patch:
@@ -12,7 +12,6 @@
 import android.widget.CheckBox;
 import android.widget.TextView;
 
-import com.wdullaer.materialdatetimepicker.time.RadialPickerLayout;
 import com.wdullaer.materialdatetimepicker.time.TimePickerDialog;
 
 import java.util.Calendar;
@@ -101,7 +100,7 @@ public void onResume() {
     }
 
     @Override
-    public void onTimeSet(RadialPickerLayout view, int hourOfDay, int minute, int second) {
+    public void onTimeSet(TimePickerDialog view, int hourOfDay, int minute, int second) {
         String hourString = hourOfDay < 10 ? "0"+hourOfDay : ""+hourOfDay;
         String minuteString = minute < 10 ? "0"+minute : ""+minute;
         String secondString = second < 10 ? "0"+second : ""+second;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerController.java
Patch:
@@ -39,8 +39,6 @@ public interface DatePickerController {
     
     Calendar[] getHighlightedDays();
 
-    Calendar[] getSelectableDays();
-
     int getFirstDayOfWeek();
 
     int getMinYear();

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -598,7 +598,7 @@ public void onClick(View v) {
 
         // Disable seconds picker
         if (!mEnableSeconds) {
-            mSecondSpaceView.setVisibility(View.GONE);
+            mSecondView.setVisibility(View.GONE);
             view.findViewById(R.id.separator_seconds).setVisibility(View.GONE);
         }
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/RadialPickerLayout.java
Patch:
@@ -196,9 +196,9 @@ public boolean isValidSelection(int selection) {
         RadialTextsView.SelectionValidator hourValidator = new RadialTextsView.SelectionValidator() {
             @Override
             public boolean isValidSelection(int selection) {
-                if(!mIs24HourMode && getIsCurrentlyAmOrPm() == PM) selection = (selection+12)%24;
-                if(!mIs24HourMode && getIsCurrentlyAmOrPm() == AM) selection = selection%12;
                 Timepoint newTime = new Timepoint(selection, mCurrentTime.getMinute(), mCurrentTime.getSecond());
+                if(!mIs24HourMode && getIsCurrentlyAmOrPm() == PM) newTime.setPM();
+                if(!mIs24HourMode && getIsCurrentlyAmOrPm() == AM) newTime.setAM();
                 return !mController.isOutOfRange(newTime, HOUR_INDEX);
             }
         };

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -570,7 +570,7 @@ public void onClick(View v) {
         TextView timePickerHeader = (TextView) view.findViewById(R.id.time_picker_header);
         if (!mTitle.isEmpty()) {
             timePickerHeader.setVisibility(TextView.VISIBLE);
-            timePickerHeader.setText(mTitle);
+            timePickerHeader.setText(mTitle.toUpperCase(Locale.getDefault()));
         }
 
         // Set the theme at the end so that the initialize()s above don't counteract the theme.

File: library/src/main/java/com/wdullaer/materialdatetimepicker/Utils.java
Patch:
@@ -165,7 +165,7 @@ public static int getAccentColorFromThemeIfAvailable(Context context) {
      * @return true if dark mode, false if light.
      */
     public static boolean isDarkTheme(Context context, boolean current) {
-        return resolveBoolean(context, R.attr.mdtp_dark_theme, current);
+        return resolveBoolean(context, R.attr.mdtp_theme_dark, current);
     }
 
     /**

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -76,6 +76,7 @@ public class DatePickerDialog extends DialogFragment implements
     private static final String KEY_HIGHLIGHTED_DAYS = "highlighted_days";
     private static final String KEY_SELECTABLE_DAYS = "selectable_days";
     private static final String KEY_THEME_DARK = "theme_dark";
+    private static final String KEY_THEME_DARK_CHANGED = "theme_dark_changed";
     private static final String KEY_ACCENT = "accent";
     private static final String KEY_VIBRATE = "vibrate";
     private static final String KEY_DISMISS = "dismiss";
@@ -204,7 +205,6 @@ public void onCreate(Bundle savedInstanceState) {
             mCalendar.set(Calendar.MONTH, savedInstanceState.getInt(KEY_SELECTED_MONTH));
             mCalendar.set(Calendar.DAY_OF_MONTH, savedInstanceState.getInt(KEY_SELECTED_DAY));
             mDefaultView = savedInstanceState.getInt(KEY_DEFAULT_VIEW);
-            mThemeDarkChanged = true;
         }
     }
 
@@ -231,6 +231,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
         outState.putSerializable(KEY_HIGHLIGHTED_DAYS, highlightedDays);
         outState.putSerializable(KEY_SELECTABLE_DAYS, selectableDays);
         outState.putBoolean(KEY_THEME_DARK, mThemeDark);
+        outState.putBoolean(KEY_THEME_DARK_CHANGED, mThemeDarkChanged);
         outState.putInt(KEY_ACCENT, mAccentColor);
         outState.putBoolean(KEY_VIBRATE, mVibrate);
         outState.putBoolean(KEY_DISMISS, mDismissOnPause);
@@ -272,6 +273,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             highlightedDays = (Calendar[])savedInstanceState.getSerializable(KEY_HIGHLIGHTED_DAYS);
             selectableDays = (Calendar[])savedInstanceState.getSerializable(KEY_SELECTABLE_DAYS);
             mThemeDark = savedInstanceState.getBoolean(KEY_THEME_DARK);
+            mThemeDarkChanged = savedInstanceState.getBoolean(KEY_THEME_DARK_CHANGED);
             mAccentColor = savedInstanceState.getInt(KEY_ACCENT);
             mVibrate = savedInstanceState.getBoolean(KEY_VIBRATE);
             mDismissOnPause = savedInstanceState.getBoolean(KEY_DISMISS);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/YearPickerView.java
Patch:
@@ -110,7 +110,7 @@ public YearAdapter(Context context, int resource, List<String> objects) {
         public View getView(int position, View convertView, ViewGroup parent) {
             TextViewWithCircularIndicator v = (TextViewWithCircularIndicator)
                     super.getView(position, convertView, parent);
-            v.setAccentColor(mController.getAccentColor());
+            v.setAccentColor(mController.getAccentColor(), mController.isThemeDark());
             v.requestLayout();
             int year = getYearFromTextView(v);
             boolean selected = mController.getSelectedDay().year == year;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerController.java
Patch:
@@ -31,7 +31,7 @@ public interface TimePickerController {
      * @param index int - The current view to consider when calculating the range
      * @return boolean - true if this is not a selectable value
      */
-    boolean isOutOfRange(TimePoint time, int index);
+    boolean isOutOfRange(Timepoint time, int index);
 
     /**
      * @return boolean - true if AM times are outside the range of valid selections
@@ -52,5 +52,5 @@ public interface TimePickerController {
      * @param type Timepoint.TYPE - whether we should round the hours, minutes or seconds
      * @return timepoint - the nearest valid timepoint
      */
-    TimePoint roundToNearest(TimePoint time, TimePoint.TYPE type);
+    Timepoint roundToNearest(Timepoint time, Timepoint.TYPE type);
 }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/RadialSelectorView.java
Patch:
@@ -305,7 +305,7 @@ public void onDraw(Canvas canvas) {
 
         // Draw the line from the center of the circle.
         mPaint.setAlpha(255);
-        mPaint.setStrokeWidth(4);
+        mPaint.setStrokeWidth(2);
         canvas.drawLine(mXCenter, mYCenter, pointX, pointY, mPaint);
     }
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -232,7 +232,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
         Log.d(TAG, "onCreateView: ");
 
-        View view = inflater.inflate(R.layout.mdtp_date_picker_dialog, container);
+        View view = inflater.inflate(R.layout.mdtp_date_picker_dialog, container, false);
 
         mDayOfWeekView = (TextView) view.findViewById(R.id.date_picker_header);
         mMonthAndDayView = (LinearLayout) view.findViewById(R.id.date_picker_month_and_day);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -294,7 +294,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.mdtp_time_picker_dialog, container);
+        View view = inflater.inflate(R.layout.mdtp_time_picker_dialog, container, false);
         KeyboardListener keyboardListener = new KeyboardListener();
         view.findViewById(R.id.time_picker_dialog).setOnKeyListener(keyboardListener);
 

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerController.java
Patch:
@@ -31,7 +31,7 @@ public interface TimePickerController {
      * @param index int - The current view to consider when calculating the range
      * @return boolean - true if this is not a selectable value
      */
-    boolean isOutOfRange(Timepoint time, int index);
+    boolean isOutOfRange(TimePoint time, int index);
 
     /**
      * @return boolean - true if AM times are outside the range of valid selections
@@ -52,5 +52,5 @@ public interface TimePickerController {
      * @param type Timepoint.TYPE - whether we should round the hours, minutes or seconds
      * @return timepoint - the nearest valid timepoint
      */
-    Timepoint roundToNearest(Timepoint time, Timepoint.TYPE type);
+    TimePoint roundToNearest(TimePoint time, TimePoint.TYPE type);
 }

File: sample/src/main/java/com/wdullaer/datetimepickerexample/MainActivity.java
Patch:
@@ -13,7 +13,6 @@
 import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;
 import com.wdullaer.materialdatetimepicker.time.RadialPickerLayout;
 import com.wdullaer.materialdatetimepicker.time.TimePickerDialog;
-import com.wdullaer.materialdatetimepicker.time.Timepoint;
 
 import java.util.Calendar;
 

File: sample/src/main/java/com/wdullaer/datetimepickerexample/MainActivity.java
Patch:
@@ -13,6 +13,7 @@
 import com.wdullaer.materialdatetimepicker.date.DatePickerDialog;
 import com.wdullaer.materialdatetimepicker.time.RadialPickerLayout;
 import com.wdullaer.materialdatetimepicker.time.TimePickerDialog;
+import com.wdullaer.materialdatetimepicker.time.Timepoint;
 
 import java.util.Calendar;
 
@@ -82,7 +83,8 @@ public void onCancel(DialogInterface dialogInterface) {
                         Log.d("TimePicker", "Dialog was cancelled");
                     }
                 });
-                tpd.setMinTime(14, 30, 0);
+                Timepoint[] timeArray = {new Timepoint(11,15), new Timepoint(11,30)};
+                tpd.setSelectableTimes(timeArray);
                 tpd.show(getFragmentManager(), "Timepickerdialog");
             }
         });

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerController.java
Patch:
@@ -47,9 +47,7 @@ public interface DatePickerController {
 
     int getMaxYear();
 
-    Calendar getMinDate();
-
-    Calendar getMaxDate();
+    boolean isOutOfRange(int year, int month, int day);
 
     void tryVibrate();
 }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/SimpleMonthView.java
Patch:
@@ -43,7 +43,7 @@ public void drawMonthDay(Canvas canvas, int year, int month, int day,
         }
 
         // If we have a mindate or maxdate, gray out the day number if it's outside the range.
-        if (isOutOfRange(year, month, day)) {
+        if (mController.isOutOfRange(year, month, day)) {
             mMonthNumPaint.setColor(mDisabledDayTextColor);
         }
         else if (mSelectedDay == day) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/YearPickerView.java
Patch:
@@ -69,7 +69,7 @@ public YearPickerView(Context context, DatePickerController controller) {
     }
 
     private void init(Context context) {
-        ArrayList<String> years = new ArrayList<String>();
+        ArrayList<String> years = new ArrayList<>();
         for (int year = mController.getMinYear(); year <= mController.getMaxYear(); year++) {
             years.add(String.format("%d", year));
         }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -184,6 +184,7 @@ public void onCreate(Bundle savedInstanceState) {
         final Activity activity = getActivity();
         activity.getWindow().setSoftInputMode(
                 WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_HIDDEN);
+        mCurrentView = UNINITIALIZED;
         if (savedInstanceState != null) {
             mCalendar.set(Calendar.YEAR, savedInstanceState.getInt(KEY_SELECTED_YEAR));
             mCalendar.set(Calendar.MONTH, savedInstanceState.getInt(KEY_SELECTED_MONTH));

File: sample/src/main/java/com/wdullaer/datetimepickerexample/MainActivity.java
Patch:
@@ -32,6 +32,7 @@ public class MainActivity extends AppCompatActivity implements
     private CheckBox dismissTime;
     private CheckBox dismissDate;
     private CheckBox titleTime;
+    private CheckBox showYearFirst;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -53,6 +54,7 @@ protected void onCreate(Bundle savedInstanceState) {
         dismissTime = (CheckBox) findViewById(R.id.dismiss_time);
         dismissDate = (CheckBox) findViewById(R.id.dismiss_date);
         titleTime = (CheckBox) findViewById(R.id.title_time);
+        showYearFirst = (CheckBox) findViewById(R.id.show_year_first);
 
         // Show a timepicker when the timeButton is clicked
         timeButton.setOnClickListener(new View.OnClickListener() {
@@ -101,6 +103,7 @@ public void onClick(View v) {
                 if (modeCustomAccentDate.isChecked()) {
                     dpd.setAccentColor(Color.parseColor("#9C27B0"));
                 }
+                dpd.showYearPickerFirst(showYearFirst.isChecked());
                 dpd.show(getFragmentManager(), "Datepickerdialog");
             }
         });

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -405,7 +405,7 @@ public void onClick(View v) {
             mOkButton.setTextColor(mAccentColor);
             mCancelButton.setTextColor(mAccentColor);
             mTimePicker.setAccentColor(mAccentColor);
-            timePickerHeader.setBackgroundColor(mAccentColor);
+            timePickerHeader.setBackgroundColor(Utils.darkenColor(mAccentColor));
             view.findViewById(R.id.time_display_background).setBackgroundColor(mAccentColor);
             view.findViewById(R.id.time_display).setBackgroundColor(mAccentColor);
         }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -313,7 +313,7 @@ public void onClick(View v) {
             }
         }
         if (mAccentColor != -1) {
-            view.findViewById(R.id.date_picker_header).setBackgroundColor(Utils.darkenColor(mAccentColor));
+            if(mDayOfWeekView != null) mDayOfWeekView.setBackgroundColor(Utils.darkenColor(mAccentColor));
             view.findViewById(R.id.day_picker_selected_date_layout).setBackgroundColor(mAccentColor);
             okButton.setTextColor(mAccentColor);
             cancelButton.setTextColor(mAccentColor);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/RadialPickerLayout.java
Patch:
@@ -207,7 +207,7 @@ public void initialize(Context context, TimePickerDialog timePickerDialog,
         }
         mHourRadialTextsView.initialize(res,
                 hoursTexts, (is24HourMode? innerHoursTexts : null), mHideAmPm, true);
-        mHourRadialTextsView.setSelection(is24HourMode ? initialHoursOfDay : initialHoursOfDay % 12);
+        mHourRadialTextsView.setSelection(is24HourMode ? initialHoursOfDay : hours[initialHoursOfDay % 12]);
         mHourRadialTextsView.invalidate();
         mMinuteRadialTextsView.initialize(res, minutesTexts, null, mHideAmPm, false);
         mMinuteRadialTextsView.setSelection(initialMinutes);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -294,7 +294,7 @@ public void onClick(View v) {
             @Override
             public void onClick(View v) {
                 tryVibrate();
-                getDialog().cancel();
+                if(getDialog() != null) getDialog().cancel();
             }
         });
         cancelButton.setTypeface(TypefaceHelper.get(activity,"Roboto-Medium"));

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -313,7 +313,7 @@ public void onClick(View v) {
             @Override
             public void onClick(View v) {
                 tryVibrate();
-                getDialog().cancel();
+                if(getDialog() != null) getDialog().cancel();
             }
         });
         mCancelButton.setTypeface(TypefaceHelper.get(getDialog().getContext(),"Roboto-Medium"));

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/MonthView.java
Patch:
@@ -451,8 +451,7 @@ private String getMonthAndYearString() {
                 | DateUtils.FORMAT_NO_MONTH_DAY;
         mStringBuilder.setLength(0);
         long millis = mCalendar.getTimeInMillis();
-        return DateUtils.formatDateRange(getContext(), mFormatter, millis, millis, flags,
-                Calendar.getInstance().getTimeZone().toString()).toString();
+        return DateUtils.formatDateRange(getContext(), mFormatter, millis, millis, flags, null).toString();
     }
 
     protected void drawMonthTitle(Canvas canvas) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/MonthView.java
Patch:
@@ -381,7 +381,7 @@ public void setMonthParams(HashMap<String, Integer> params) {
             mWeekStart = mCalendar.getFirstDayOfWeek();
         }
 
-        mNumCells = Utils.getDaysInMonth(mMonth, mYear);
+        mNumCells = mCalendar.getActualMaximum(Calendar.DAY_OF_MONTH);
         for (int i = 0; i < mNumCells; i++) {
             final int day = i + 1;
             if (sameDay(day, today)) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -551,7 +551,7 @@ public void setOnDismissListener(DialogInterface.OnDismissListener onDismissList
     //      e.g. Switching from 2012 to 2013 when Feb 29, 2012 is selected -> Feb 28, 2013
     private void adjustDayInMonthIfNeeded(int month, int year) {
         int day = mCalendar.get(Calendar.DAY_OF_MONTH);
-        int daysInMonth = Utils.getDaysInMonth(month, year);
+        int daysInMonth = mCalendar.getActualMaximum(Calendar.DAY_OF_MONTH);
         if (day > daysInMonth) {
             mCalendar.set(Calendar.DAY_OF_MONTH, daysInMonth);
         }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/MonthView.java
Patch:
@@ -381,7 +381,7 @@ public void setMonthParams(HashMap<String, Integer> params) {
             mWeekStart = mCalendar.getFirstDayOfWeek();
         }
 
-        mNumCells = Utils.getDaysInMonth(mMonth, mYear);
+        mNumCells = mCalendar.getActualMaximum(Calendar.DAY_OF_MONTH);
         for (int i = 0; i < mNumCells; i++) {
             final int day = i + 1;
             if (sameDay(day, today)) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/HapticFeedbackController.java
Patch:
@@ -13,7 +13,7 @@
  */
 public class HapticFeedbackController {
     private static final int VIBRATE_DELAY_MS = 125;
-    private static final int VIBRATE_LENGTH_MS = 5;
+    private static final int VIBRATE_LENGTH_MS = 50;
 
     private static boolean checkGlobalSetting(Context context) {
         return Settings.System.getInt(context.getContentResolver(),

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/MonthView.java
Patch:
@@ -420,7 +420,7 @@ private boolean sameDay(int day, Calendar today) {
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec), mRowHeight * mNumRows
-                + getMonthHeaderSize());
+                + getMonthHeaderSize() + 5);
     }
 
     @Override

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -395,8 +395,8 @@ public void setFirstDayOfWeek(int startOfWeek) {
     }
 
     public void setYearRange(int startYear, int endYear) {
-        if (endYear <= startYear) {
-            throw new IllegalArgumentException("Year end must be larger than year start");
+        if (endYear < startYear) {
+            throw new IllegalArgumentException("Year end must be larger than or equal to year start");
         }
         mMinYear = startYear;
         mMaxYear = endYear;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -349,6 +349,8 @@ public void onClick(View v) {
         int timeDisplay = res.getColor(R.color.mdtp_numbers_text_color);
         ColorStateList doneTextColor = res.getColorStateList(R.color.mdtp_done_text_color);
         int doneBackground = R.drawable.mdtp_done_background_color;
+        int backgroundColor = res.getColor(R.color.mdtp_background_color);
+        int darkBackgroundColor = res.getColor(R.color.mdtp_light_gray);
 
         int darkGray = res.getColor(R.color.mdtp_dark_gray);
         int lightGray = res.getColor(R.color.mdtp_light_gray);
@@ -364,6 +366,7 @@ public void onClick(View v) {
         //view.findViewById(R.id.line).setBackgroundColor(mThemeDark? darkLine : line);
         //mOkButton.setTextColor(mThemeDark? darkDoneTextColor : doneTextColor);
         mTimePicker.setBackgroundColor(mThemeDark? lightGray : circleBackground);
+        view.findViewById(R.id.time_picker_dialog).setBackgroundColor(mThemeDark ? darkBackgroundColor : backgroundColor);
         //mOkButton.setBackgroundResource(mThemeDark? darkDoneBackground : doneBackground);
         return view;
     }

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -267,6 +267,7 @@ public void onClick(View v) {
             }
         });
         cancelButton.setTypeface(TypefaceHelper.get(activity,"Roboto-Medium"));
+        cancelButton.setVisibility(isCancelable() ? View.VISIBLE : View.GONE);
 
         updateDisplay(false);
         setCurrentView(currentView);

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -279,6 +279,7 @@ public void onClick(View v) {
             }
         });
         mCancelButton.setTypeface(TypefaceHelper.get(getDialog().getContext(),"Roboto-Medium"));
+        mCancelButton.setVisibility(isCancelable() ? View.VISIBLE : View.GONE);
 
         // Enable or disable the AM/PM view.
         mAmPmHitspace = view.findViewById(R.id.ampm_hitspace);
@@ -504,7 +505,7 @@ private void setCurrentItemShowing(int index, boolean animateCircle, boolean del
      */
     private boolean processKeyUp(int keyCode) {
         if (keyCode == KeyEvent.KEYCODE_ESCAPE || keyCode == KeyEvent.KEYCODE_BACK) {
-            dismiss();
+            if(isCancelable()) dismiss();
             return true;
         } else if (keyCode == KeyEvent.KEYCODE_TAB) {
             if(mInKbMode) {

File: library/src/main/java/com/wdullaer/materialdatetimepicker/Utils.java
Patch:
@@ -42,9 +42,6 @@ public class Utils {
     // Alpha level for fully opaque.
     public static final int FULL_ALPHA = 255;
 
-
-    static final String SHARED_PREFS_NAME = "com.android.calendar_preferences";
-
     public static boolean isJellybeanOrLater() {
       return Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN;
     }
@@ -143,6 +140,7 @@ public static ObjectAnimator getPulseAnimator(View labelToAnimate, float decreas
     /**
      * Convert Dp to Pixel
      */
+    @SuppressWarnings("unused")
     public static int dpToPx(float dp, Resources resources){
         float px = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, resources.getDisplayMetrics());
         return (int) px;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/date/DatePickerDialog.java
Patch:
@@ -21,6 +21,7 @@
 import android.app.DialogFragment;
 import android.content.res.Resources;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.text.format.DateUtils;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -172,7 +173,7 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    public void onSaveInstanceState(Bundle outState) {
+    public void onSaveInstanceState(@NonNull Bundle outState) {
         super.onSaveInstanceState(outState);
         outState.putInt(KEY_SELECTED_YEAR, mCalendar.get(Calendar.YEAR));
         outState.putInt(KEY_SELECTED_MONTH, mCalendar.get(Calendar.MONTH));

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/RadialTextsView.java
Patch:
@@ -182,6 +182,7 @@ public boolean hasOverlappingRendering() {
     /**
      * Used by the animation to move the numbers in and out.
      */
+    @SuppressWarnings("unused")
     public void setAnimationRadiusMultiplier(float animationRadiusMultiplier) {
         mAnimationRadiusMultiplier = animationRadiusMultiplier;
         mTextGridValuesDirty = true;

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -23,6 +23,7 @@
 import android.content.res.ColorStateList;
 import android.content.res.Resources;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.util.Log;
 import android.view.KeyCharacterMap;
 import android.view.KeyEvent;
@@ -386,7 +387,7 @@ private void updateAmPmDisplay(int amOrPm) {
     }
 
     @Override
-    public void onSaveInstanceState(Bundle outState) {
+    public void onSaveInstanceState(@NonNull Bundle outState) {
         if (mTimePicker != null) {
             outState.putInt(KEY_HOUR_OF_DAY, mTimePicker.getHours());
             outState.putInt(KEY_MINUTE, mTimePicker.getMinutes());
@@ -779,8 +780,7 @@ private int[] getEnteredTime(Boolean[] enteredZeros) {
             }
         }
 
-        int[] ret = {hour, minute, amOrPm};
-        return ret;
+        return new int[] {hour, minute, amOrPm};
     }
 
     /**

File: library/src/main/java/com/wdullaer/materialdatetimepicker/time/TimePickerDialog.java
Patch:
@@ -130,10 +130,12 @@ public TimePickerDialog() {
         // Empty constructor required for dialog fragment.
     }
 
+    /**
     public TimePickerDialog(Context context, int theme, OnTimeSetListener callback,
             int hourOfDay, int minute, boolean is24HourMode) {
         // Empty constructor required for dialog fragment.
     }
+     **/
 
     public static TimePickerDialog newInstance(OnTimeSetListener callback,
             int hourOfDay, int minute, boolean is24HourMode) {

