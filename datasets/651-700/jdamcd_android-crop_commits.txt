File: lib/src/main/java/com/soundcloud/android/crop/Crop.java
Patch:
@@ -250,7 +250,7 @@ private static Intent getImagePicker() {
     }
 
     private static void showImagePickerError(Context context) {
-        Toast.makeText(context, R.string.crop__pick_error, Toast.LENGTH_SHORT).show();
+        Toast.makeText(context.getApplicationContext(), R.string.crop__pick_error, Toast.LENGTH_SHORT).show();
     }
 
 }

File: lib/src/main/java/com/soundcloud/android/crop/CropImageActivity.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.soundcloud.android.crop;
 
+import android.annotation.TargetApi;
 import android.content.Intent;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -80,6 +81,7 @@ public void onCreate(Bundle icicle) {
         startCrop();
     }
 
+    @TargetApi(Build.VERSION_CODES.KITKAT)
     private void setupWindowFlags() {
         requestWindowFeature(Window.FEATURE_NO_TITLE);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {

File: lib/src/main/java/com/soundcloud/android/crop/CropImageActivity.java
Patch:
@@ -122,7 +122,7 @@ private void setupFromIntent() {
 
         sourceUri = intent.getData();
         if (sourceUri != null) {
-            exifRotation = CropUtil.getExifRotation(CropUtil.getFromMediaUri(getContentResolver(), sourceUri));
+            exifRotation = CropUtil.getExifRotation(CropUtil.getFromMediaUri(this, getContentResolver(), sourceUri));
 
             InputStream is = null;
             try {
@@ -421,8 +421,8 @@ private void saveOutput(Bitmap croppedImage) {
             if (!IN_MEMORY_CROP) {
                 // In-memory crop negates the rotation
                 CropUtil.copyExifRotation(
-                        CropUtil.getFromMediaUri(getContentResolver(), sourceUri),
-                        CropUtil.getFromMediaUri(getContentResolver(), saveUri)
+                        CropUtil.getFromMediaUri(this, getContentResolver(), sourceUri),
+                        CropUtil.getFromMediaUri(this, getContentResolver(), saveUri)
                 );
             }
 

File: lib/src/main/java/com/soundcloud/android/crop/CropUtil.java
Patch:
@@ -123,7 +123,7 @@ public static File getFromMediaUri(Context context, ContentResolver resolver, Ur
 
     private static String getTempFilename(Context context) throws IOException {
       File outputDir = context.getCacheDir(); // context being the Activity pointer
-      File outputFile = File.createTempFile("prefix", "extension", outputDir);
+      File outputFile = File.createTempFile("image", "tmp", outputDir);
       return outputFile.getAbsolutePath();
     }
 

File: lib/src/androidTest/java/com/soundcloud/android/crop/CropBuilderTest.java
Patch:
@@ -65,7 +65,7 @@ public void testFixedAspectRatioSetAsExtras() {
     }
 
     public void testMaxSizeSetAsExtras() {
-        builder.withMazSize(400, 300);
+        builder.withMaxSize(400, 300);
 
         Intent intent = builder.getIntent(activity);
 
@@ -74,7 +74,7 @@ public void testMaxSizeSetAsExtras() {
     }
 
     public void testBuildsIntentWithMultipleOptions() {
-        builder.asSquare().withMazSize(200, 200);
+        builder.asSquare().withMaxSize(200, 200);
 
         Intent intent = builder.getIntent(activity);
 

File: lib/src/main/java/com/soundcloud/android/crop/Crop.java
Patch:
@@ -87,7 +87,7 @@ public Crop asSquare() {
      * @param width Max width
      * @param height Max height
      */
-    public Crop withMazSize(int width, int height) {
+    public Crop withMaxSize(int width, int height) {
         cropIntent.putExtra(Extra.MAX_X, width);
         cropIntent.putExtra(Extra.MAX_Y, height);
         return this;

File: lib/src/main/java/com/soundcloud/android/crop/Crop.java
Patch:
@@ -138,7 +138,7 @@ public static void pickImage(Activity activity) {
         try {
             activity.startActivityForResult(intent, REQUEST_PICK);
         } catch (ActivityNotFoundException e) {
-            Toast.makeText(activity, R.string.error_pick_image, Toast.LENGTH_SHORT).show();
+            Toast.makeText(activity, R.string.crop__pick_error, Toast.LENGTH_SHORT).show();
         }
     }
 

File: lib/src/main/java/com/soundcloud/android/crop/CropImageActivity.java
Patch:
@@ -70,7 +70,7 @@ public class CropImageActivity extends MonitoredActivity {
     public void onCreate(Bundle icicle) {
         super.onCreate(icicle);
         requestWindowFeature(Window.FEATURE_NO_TITLE);
-        setContentView(R.layout.activity_crop);
+        setContentView(R.layout.crop__activity_crop);
         initViews();
 
         setupFromIntent();
@@ -143,7 +143,7 @@ private void startCrop() {
             return;
         }
         mImageView.setImageRotateBitmapResetBase(mRotateBitmap, true);
-        Util.startBackgroundJob(this, null, getResources().getString(R.string.wait),
+        Util.startBackgroundJob(this, null, getResources().getString(R.string.crop__wait),
                 new Runnable() {
                     public void run() {
                         final CountDownLatch latch = new CountDownLatch(1);
@@ -285,7 +285,7 @@ private void returnImageData(Bitmap croppedImage) {
     private void saveImage(Bitmap croppedImage) {
         if (croppedImage != null) {
             final Bitmap b = croppedImage;
-            Util.startBackgroundJob(this, null, getResources().getString(R.string.saving),
+            Util.startBackgroundJob(this, null, getResources().getString(R.string.crop__saving),
                     new Runnable() {
                         public void run() {
                             saveOutput(b);

File: lib/src/main/java/com/soundcloud/android/crop/HighlightView.java
Patch:
@@ -90,8 +90,8 @@ public void setup(Matrix m, Rect imageRect, RectF cropRect,
 
     private void initResources() {
         android.content.res.Resources resources = mContext.getResources();
-        mResizeDrawableWidth = resources.getDrawable(R.drawable.crop_width);
-        mResizeDrawableHeight = resources.getDrawable(R.drawable.crop_height);
+        mResizeDrawableWidth = resources.getDrawable(R.drawable.crop__handle_width);
+        mResizeDrawableHeight = resources.getDrawable(R.drawable.crop__handle_height);
     }
 
     protected void draw(Canvas canvas) {

File: lib/src/main/java/com/soundcloud/android/crop/CropImageActivity.java
Patch:
@@ -384,9 +384,9 @@ private void saveOutput(Bitmap croppedImage) {
                     croppedImage.compress(Bitmap.CompressFormat.JPEG, 90, outputStream);
                 }
 
-            } catch (IOException ex) {
-                // TODO: report error to caller
-                Log.e(Util.TAG, "Cannot open file: " + mSaveUri, ex);
+            } catch (IOException e) {
+                setResultException(e);
+                Log.e(Util.TAG, "Cannot open file: " + mSaveUri, e);
             } finally {
                 Util.closeSilently(outputStream);
             }

