File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/ModelConstants.java
Patch:
@@ -57,7 +57,7 @@ public static void init(AndroidAnnotationsEnvironment environment) {
 			throw new IllegalArgumentException("'" + classSuffix + "' may not be an empty string.");
 		}
 
-		if (!SourceVersion.isName(classSuffix) || classSuffix.contains(".")) {
+		if (!SourceVersion.isName("ValidName" + classSuffix) || classSuffix.contains(".")) {
 			throw new IllegalArgumentException("'" + classSuffix + "' may not be a valid Java identifier.");
 		}
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/ModelConstants.java
Patch:
@@ -57,7 +57,7 @@ public static void init(AndroidAnnotationsEnvironment environment) {
 			throw new IllegalArgumentException("'" + classSuffix + "' may not be an empty string.");
 		}
 
-		if (!SourceVersion.isName(classSuffix) || classSuffix.contains(".")) {
+		if (!SourceVersion.isName("ValidName" + classSuffix) || classSuffix.contains(".")) {
 			throw new IllegalArgumentException("'" + classSuffix + "' may not be a valid Java identifier.");
 		}
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/ContextCompatAwareResHandler.java
Patch:
@@ -45,10 +45,10 @@ abstract class ContextCompatAwareResHandler extends AbstractResHandler {
 
 	@Override
 	protected IJExpression getInstanceInvocation(EComponentHolder holder, JFieldRef idRef, IJAssignmentTarget fieldRef, JBlock targetBlock) {
-		if (hasTargetMethodInContextCompat()) {
-			return getClasses().CONTEXT_COMPAT.staticInvoke(androidRes.getResourceMethodName()).arg(holder.getContextRef()).arg(idRef);
-		} else if (hasTargetMethodInAndroidxContextCompat()) {
+		if (hasTargetMethodInAndroidxContextCompat()) {
 			return getClasses().ANDROIDX_CONTEXT_COMPAT.staticInvoke(androidRes.getResourceMethodName()).arg(holder.getContextRef()).arg(idRef);
+		} else if (hasTargetMethodInContextCompat()) {
+			return getClasses().CONTEXT_COMPAT.staticInvoke(androidRes.getResourceMethodName()).arg(holder.getContextRef()).arg(idRef);
 		} else if (shouldUseContextMethod()) {
 			return holder.getContextRef().invoke(androidRes.getResourceMethodName()).arg(idRef);
 		} else if (!shouldUseContextMethod() && hasTargetMethodInContext()) {

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/PreferenceChangeHandler.java
Patch:
@@ -119,7 +119,7 @@ protected String getSetterName() {
 
 	@Override
 	protected AbstractJClass getListenerClass(HasPreferences holder) {
-		return holder.usingSupportV7Preference() ? getClasses().SUPPORT_V7_PREFERENCE_CHANGE_LISTENER
-				: holder.usingAndroidxPreference() ? getClasses().ANDROIDX_PREFERENCE_CHANGE_LISTENER : getClasses().PREFERENCE_CHANGE_LISTENER;
+		return holder.usingAndroidxPreference() ? getClasses().ANDROIDX_PREFERENCE_CHANGE_LISTENER
+				: holder.usingSupportV7Preference() ? getClasses().SUPPORT_V7_PREFERENCE_CHANGE_LISTENER : getClasses().PREFERENCE_CHANGE_LISTENER;
 	}
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/PreferenceClickHandler.java
Patch:
@@ -92,8 +92,8 @@ protected String getSetterName() {
 
 	@Override
 	protected AbstractJClass getListenerClass(HasPreferences holder) {
-		return holder.usingSupportV7Preference() ? getClasses().SUPPORT_V7_PREFERENCE_CLICK_LISTENER
-				: holder.usingAndroidxPreference() ? getClasses().ANDROIDX_PREFERENCE_CLICK_LISTENER : getClasses().PREFERENCE_CLICK_LISTENER;
+		return holder.usingAndroidxPreference() ? getClasses().ANDROIDX_PREFERENCE_CLICK_LISTENER
+				: holder.usingSupportV7Preference() ? getClasses().SUPPORT_V7_PREFERENCE_CLICK_LISTENER : getClasses().PREFERENCE_CLICK_LISTENER;
 	}
 
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/AndroidAnnotationProcessor.java
Patch:
@@ -91,7 +91,7 @@ public synchronized void init(ProcessingEnvironment processingEnv) {
 			plugins.add(0, corePlugin);
 			androidAnnotationsEnv.setPlugins(plugins);
 		} catch (Exception e) {
-			LOGGER.error("Can't load plugins", e);
+			LOGGER.error(e, "Can't load plugins");
 		}
 	}
 
@@ -246,7 +246,7 @@ private void handleException(Set<? extends TypeElement> annotations, RoundEnviro
 		Iterator<? extends TypeElement> iterator = annotations.iterator();
 		if (iterator.hasNext()) {
 			Element element = roundEnv.getElementsAnnotatedWith(iterator.next()).iterator().next();
-			LOGGER.error("Something went wrong: {}", element, errorMessage);
+			LOGGER.error(element, "Something went wrong: {}", errorMessage);
 		} else {
 			LOGGER.error("Something went wrong: {}", errorMessage);
 		}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/generation/SourceCodeWriter.java
Patch:
@@ -70,7 +70,7 @@ public OutputStream openBinary(JPackage pkg, String fileName) throws IOException
 
 			return sourceFile.openOutputStream();
 		} catch (FilerException e) {
-			LOGGER.error("Could not generate source file for {}", qualifiedClassName, e.getMessage());
+			LOGGER.error("Could not generate source file for {} due to error: {}", qualifiedClassName, e.getMessage());
 			/*
 			 * This exception is expected, when some files are created twice. We
 			 * cannot delete existing files, unless using a dirty hack. Files a

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/process/ModelProcessor.java
Patch:
@@ -197,7 +197,7 @@ private boolean generateElements(AnnotationElements validatedModel, ProcessHolde
 							if (validatedElements.contains(enclosingElement)) {
 								isElementRemaining = true;
 							} else {
-								LOGGER.error("Enclosing element {} has not been successfully validated", annotatedElement, enclosingElement);
+								LOGGER.error(annotatedElement, "Enclosing element {} has not been successfully validated", enclosingElement);
 							}
 						} else {
 							GeneratedClassHolder generatedClassHolder = generatingAnnotationHandler.createGeneratedClassHolder(environment, typeElement);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/process/ModelValidator.java
Patch:
@@ -71,17 +71,17 @@ public AnnotationElements validate(AnnotationElements extractedModel, Annotation
 
 				AnnotationMirror annotationMirror = elementValidation.getAnnotationMirror();
 				for (ElementValidation.Error error : elementValidation.getErrors()) {
-					LOGGER.error(error.getMessage(), error.getElement(), annotationMirror);
+					LOGGER.error(error.getElement(), annotationMirror, error.getMessage());
 				}
 
 				for (String warning : elementValidation.getWarnings()) {
-					LOGGER.warn(warning, elementValidation.getElement(), annotationMirror);
+					LOGGER.warn(elementValidation.getElement(), annotationMirror, warning);
 				}
 
 				if (elementValidation.isValid()) {
 					validatedAnnotatedElements.add(annotatedElement);
 				} else {
-					LOGGER.warn("Element {} invalidated by {}", annotatedElement, annotatedElement, validatorSimpleName);
+					LOGGER.warn(annotatedElement, "Element {} invalidated by {}", annotatedElement, validatorSimpleName);
 				}
 			}
 		}

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringValidatorHelper.java
Patch:
@@ -569,10 +569,10 @@ public void restInterfaceHasFormConverter(Element element, ElementValidation val
 
 		boolean formConverterFound = false;
 
-		TypeElement formConverter = annotationHelper.getElementUtils().getTypeElement(FORM_HTTP_MESSAGE_CONVERTER);
+		TypeMirror formConverter = annotationHelper.getElementUtils().getTypeElement(FORM_HTTP_MESSAGE_CONVERTER).asType();
 
 		for (DeclaredType converter : converters) {
-			if (formConverter != null && annotationHelper.isSubtype(formConverter.asType(), converter)) {
+			if (formConverter != null && annotationHelper.isSubtype(converter, formConverter)) {
 				formConverterFound = true;
 				break;
 			}

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringValidatorHelper.java
Patch:
@@ -569,10 +569,10 @@ public void restInterfaceHasFormConverter(Element element, ElementValidation val
 
 		boolean formConverterFound = false;
 
-		TypeElement formConverter = annotationHelper.getElementUtils().getTypeElement(FORM_HTTP_MESSAGE_CONVERTER);
+		TypeMirror formConverter = annotationHelper.getElementUtils().getTypeElement(FORM_HTTP_MESSAGE_CONVERTER).asType();
 
 		for (DeclaredType converter : converters) {
-			if (formConverter != null && annotationHelper.isSubtype(formConverter.asType(), converter)) {
+			if (formConverter != null && annotationHelper.isSubtype(converter, formConverter)) {
 				formConverterFound = true;
 				break;
 			}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationsEnvironment.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -61,6 +62,8 @@ public interface AndroidAnnotationsEnvironment {
 
 	AndroidManifest getAndroidManifest();
 
+	AnnotationElements getExtractedElements();
+
 	AnnotationElements getValidatedElements();
 
 	JCodeModel getCodeModel();

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AppHandler.java
Patch:
@@ -52,7 +52,7 @@ public void validate(Element element, ElementValidation validation) {
 		validatorHelper.isNotPrivate(element, validation);
 
 		Element param = injectHelper.getParam(element);
-		validatorHelper.typeHasAnnotation(EApplication.class, param, validation);
+		validatorHelper.typeHasValidAnnotation(EApplication.class, param, validation);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/LoggerContext.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -85,9 +86,9 @@ public void setEnvironment(AndroidAnnotationsEnvironment environment) {
 		}
 	}
 
-	public void close() {
+	public void close(boolean lastRound) {
 		for (Appender appender : appenders) {
-			appender.close();
+			appender.close(lastRound);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/appender/Appender.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -44,6 +45,6 @@ public void setEnvironment(AndroidAnnotationsEnvironment environment) {
 
 	public abstract void append(Level level, Element element, AnnotationMirror annotationMirror, String message);
 
-	public abstract void close();
+	public abstract void close(boolean lastRound);
 
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/appender/FileAppender.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -57,7 +58,7 @@ public synchronized void open() {
 	}
 
 	@Override
-	public synchronized void close() {
+	public synchronized void close(boolean lastRound) {
 		if (isStreamOpened()) {
 			try {
 				outputStream.close();

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/handler/RestServiceHandler.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -53,7 +54,7 @@ public void validate(Element element, ElementValidation validation) {
 		validatorHelper.isNotPrivate(element, validation);
 
 		Element param = injectHelper.getParam(element);
-		validatorHelper.typeHasAnnotation(Rest.class, param, validation);
+		validatorHelper.typeHasValidAnnotation(Rest.class, param, validation);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/KotlinOpen.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Utility annotation to easily support kotlin-allopen plugin
  *
- * @see "https://github.com/androidannotations/androidannotations/wiki/Kotlin"
+ * @see "https://github.com/androidannotations/androidannotations/wiki/Kotlin-support"
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationsEnvironment.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -61,6 +62,8 @@ public interface AndroidAnnotationsEnvironment {
 
 	AndroidManifest getAndroidManifest();
 
+	AnnotationElements getExtractedElements();
+
 	AnnotationElements getValidatedElements();
 
 	JCodeModel getCodeModel();

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/AndroidAnnotationProcessor.java
Patch:
@@ -154,6 +154,8 @@ private void processThrowing(Set<? extends TypeElement> annotations, RoundEnviro
 		}
 
 		AnnotationElementsHolder extractedModel = extractAnnotations(annotations, roundEnv);
+		androidAnnotationsEnv.setExtractedElements(extractedModel);
+
 		AnnotationElementsHolder validatingHolder = extractedModel.validatingHolder();
 		androidAnnotationsEnv.setValidatedElements(validatingHolder);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AppHandler.java
Patch:
@@ -52,7 +52,7 @@ public void validate(Element element, ElementValidation validation) {
 		validatorHelper.isNotPrivate(element, validation);
 
 		Element param = injectHelper.getParam(element);
-		validatorHelper.typeHasAnnotation(EApplication.class, param, validation);
+		validatorHelper.typeHasValidAnnotation(EApplication.class, param, validation);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/handler/RestServiceHandler.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -53,7 +54,7 @@ public void validate(Element element, ElementValidation validation) {
 		validatorHelper.isNotPrivate(element, validation);
 
 		Element param = injectHelper.getParam(element);
-		validatorHelper.typeHasAnnotation(Rest.class, param, validation);
+		validatorHelper.typeHasValidAnnotation(Rest.class, param, validation);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/appender/ConsoleAppender.java
Patch:
@@ -27,7 +27,7 @@
 
 public class ConsoleAppender extends Appender {
 
-	private static List<String> errors = new LinkedList<>();
+	private final List<String> errors = new LinkedList<>();
 
 	public ConsoleAppender() {
 		super(new FormatterFull());
@@ -52,7 +52,6 @@ public synchronized void close(boolean lastRound) {
 			for (String error : errors) {
 				System.err.println(error);
 			}
-			errors.clear();
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/appender/MessagerAppender.java
Patch:
@@ -32,7 +32,7 @@
 
 public class MessagerAppender extends Appender {
 
-	private static List<Message> errors = new LinkedList<>();
+	private final List<Message> errors = new LinkedList<>();
 
 	private Messager messager;
 
@@ -66,7 +66,6 @@ public synchronized void close(boolean lastRound) {
 				ElementDetails elementDetails = error.getElementDetails();
 				messager.printMessage(error.kind, error.message, elementDetails.getElement(), elementDetails.getAnnotationMirror());
 			}
-			errors.clear();
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/AndroidAnnotationProcessor.java
Patch:
@@ -134,7 +134,7 @@ public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment
 
 		LOGGER.info("Finish processing");
 
-		LoggerContext.getInstance().close();
+		LoggerContext.getInstance().close(roundEnv.processingOver());
 		return true;
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/LoggerContext.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -85,9 +86,9 @@ public void setEnvironment(AndroidAnnotationsEnvironment environment) {
 		}
 	}
 
-	public void close() {
+	public void close(boolean lastRound) {
 		for (Appender appender : appenders) {
-			appender.close();
+			appender.close(lastRound);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/appender/Appender.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -44,6 +45,6 @@ public void setEnvironment(AndroidAnnotationsEnvironment environment) {
 
 	public abstract void append(Level level, Element element, AnnotationMirror annotationMirror, String message);
 
-	public abstract void close();
+	public abstract void close(boolean lastRound);
 
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/appender/FileAppender.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -57,7 +58,7 @@ public synchronized void open() {
 	}
 
 	@Override
-	public synchronized void close() {
+	public synchronized void close(boolean lastRound) {
 		if (isStreamOpened()) {
 			try {
 				outputStream.close();

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/HasReceiverRegistration.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -21,7 +22,7 @@
 import com.helger.jcodemodel.JBlock;
 import com.helger.jcodemodel.JFieldVar;
 
-public interface HasReceiverRegistration extends HasLifecycleMethods {
+public interface HasReceiverRegistration extends HasSimpleLifecycleMethods {
 
 	IJExpression getContextRef();
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/HasReceiverRegistration.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016-2017 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -21,7 +22,7 @@
 import com.helger.jcodemodel.JBlock;
 import com.helger.jcodemodel.JFieldVar;
 
-public interface HasReceiverRegistration extends HasLifecycleMethods {
+public interface HasReceiverRegistration extends HasSimpleLifecycleMethods {
 
 	IJExpression getContextRef();
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EViewHolder.java
Patch:
@@ -254,7 +254,7 @@ private void setOnDetachedFromWindow() {
 		onDetachedFromWindowMethod.annotate(Override.class);
 		JBlock body = onDetachedFromWindowMethod.body();
 		onDetachedFromWindowBeforeSuperBlock = body.blockSimple();
-		body.invoke(_super(), onAttachedToWindowMethod);
+		body.invoke(_super(), onDetachedFromWindowMethod);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -328,7 +328,7 @@ public void copyNonAAAnnotations(IJAnnotatable annotatable, List<? extends Annot
 	public void copyAnnotation(IJAnnotatable annotatable, AnnotationMirror annotationMirror) {
 		Map<? extends ExecutableElement, ? extends AnnotationValue> parameters = annotationMirror.getElementValues();
 
-		if (!hasAnnotation(annotatable, annotationMirror)) {
+		if (!hasAnnotation(annotatable, annotationMirror) || annotatable instanceof JAnnotationArrayMember) {
 			AbstractJClass annotation = typeMirrorToJClass(annotationMirror.getAnnotationType());
 			JAnnotationUse annotate = annotatable.annotate(annotation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EViewHolder.java
Patch:
@@ -254,7 +254,7 @@ private void setOnDetachedFromWindow() {
 		onDetachedFromWindowMethod.annotate(Override.class);
 		JBlock body = onDetachedFromWindowMethod.body();
 		onDetachedFromWindowBeforeSuperBlock = body.blockSimple();
-		body.invoke(_super(), onAttachedToWindowMethod);
+		body.invoke(_super(), onDetachedFromWindowMethod);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/process/ProcessHolder.java
Patch:
@@ -167,6 +167,7 @@ public class Classes {
 	public ProcessHolder(ProcessingEnvironment processingEnvironment) {
 		this.processingEnvironment = processingEnvironment;
 		codeModel = new JCodeModel();
+		codeModel.addDontImportClass(refClass("android.R"));
 		classes = new Classes();
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/databinding/DataBindingTest.java
Patch:
@@ -27,8 +27,8 @@
 public class DataBindingTest extends AAProcessorTestHelper {
 
 	private static final String[] DATA_BINDING_EXPRESSIONS = new String[] {
-		"        ViewGroup contentView = internalFindViewById(R.id.content);",
-		"        viewDataBinding_ = DataBindingUtil.inflate(LayoutInflater.from(this), org.androidannotations.databinding.R.layout.activity_main, contentView, false);",
+		"        ViewGroup contentView = internalFindViewById(android.R.id.content);",
+		"        viewDataBinding_ = DataBindingUtil.inflate(LayoutInflater.from(this), R.layout.activity_main, contentView, false);",
 		"        setContentView(viewDataBinding_.getRoot(), viewDataBinding_.getRoot().getLayoutParams());",
 	};
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -328,7 +328,7 @@ public void copyNonAAAnnotations(IJAnnotatable annotatable, List<? extends Annot
 	public void copyAnnotation(IJAnnotatable annotatable, AnnotationMirror annotationMirror) {
 		Map<? extends ExecutableElement, ? extends AnnotationValue> parameters = annotationMirror.getElementValues();
 
-		if (!hasAnnotation(annotatable, annotationMirror)) {
+		if (!hasAnnotation(annotatable, annotationMirror) || annotatable instanceof JAnnotationArrayMember) {
 			AbstractJClass annotation = typeMirrorToJClass(annotationMirror.getAnnotationType());
 			JAnnotationUse annotate = annotatable.annotate(annotation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/helper/AndroidManifestFinder.java
Patch:
@@ -179,7 +179,7 @@ boolean applies() {
 
 	private static class GradleAndroidManifestFinderStrategy extends AndroidManifestFinderStrategy {
 
-		static final Pattern GRADLE_GEN_FOLDER = Pattern.compile("^(.*?)build[\\\\/]generated[\\\\/]source[\\\\/]apt(.*)$");
+		static final Pattern GRADLE_GEN_FOLDER = Pattern.compile("^(.*?)build[\\\\/]generated[\\\\/]source[\\\\/]k?apt(.*)$");
 
 		GradleAndroidManifestFinderStrategy(String sourceFolder) {
 			super("Gradle", GRADLE_GEN_FOLDER, sourceFolder);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/helper/AndroidManifestFinder.java
Patch:
@@ -189,7 +189,8 @@ private static class GradleAndroidManifestFinderStrategy extends AndroidManifest
 		Iterable<String> possibleLocations() {
 			String gradleVariant = matcher.group(2);
 
-			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/intermediates/bundles" + gradleVariant);
+			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/intermediates/bundles" + gradleVariant,
+					"build/intermediates/manifests/aapt" + gradleVariant);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/internal/helper/AndroidManifestFinderTest.java
Patch:
@@ -55,6 +55,7 @@ public static Iterable<Object[]> createTestData() {
 
 		Object[] gradleManifestFoundInManifests = { GRADLE_GEN_FOLDER, "build/intermediates/manifests/full/debug", true };
 		Object[] gradleManifestFoundInBundles = { GRADLE_GEN_FOLDER, "build/intermediates/bundles/debug", true };
+		Object[] gradleManifestFoundInManifestsAapt = { GRADLE_GEN_FOLDER, "build/intermediates/manifests/aapt/debug", true };
 
 		Object[] mavenManifestFoundInTarget = { MAVEN_GEN_FOLDER, "target", true };
 		Object[] mavenManifestFoundInSrc = { MAVEN_GEN_FOLDER, "src/main", true };
@@ -70,7 +71,8 @@ public static Iterable<Object[]> createTestData() {
 
 		Object[] noGeneratedFolderFound = { "", "", false };
 
-		return Arrays.asList(gradleManifestFoundInManifests, gradleManifestFoundInBundles, mavenManifestFoundInTarget, mavenManifestFoundInSrc, mavenManifestFoundInRoot, eclipseManifestFound,
+		return Arrays.asList(gradleManifestFoundInManifests, gradleManifestFoundInBundles, gradleManifestFoundInManifestsAapt,
+				mavenManifestFoundInTarget, mavenManifestFoundInSrc, mavenManifestFoundInRoot, eclipseManifestFound,
 				gradleManifestNotFound, mavenManifestNotFound, eclipseManifestNotFound, noGeneratedFolderFound);
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/helper/AndroidManifestFinder.java
Patch:
@@ -189,7 +189,8 @@ private static class GradleAndroidManifestFinderStrategy extends AndroidManifest
 		Iterable<String> possibleLocations() {
 			String gradleVariant = matcher.group(2);
 
-			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/intermediates/bundles" + gradleVariant);
+			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/intermediates/bundles" + gradleVariant,
+					"build/intermediates/manifests/aapt" + gradleVariant);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/internal/helper/AndroidManifestFinderTest.java
Patch:
@@ -55,6 +55,7 @@ public static Iterable<Object[]> createTestData() {
 
 		Object[] gradleManifestFoundInManifests = { GRADLE_GEN_FOLDER, "build/intermediates/manifests/full/debug", true };
 		Object[] gradleManifestFoundInBundles = { GRADLE_GEN_FOLDER, "build/intermediates/bundles/debug", true };
+		Object[] gradleManifestFoundInManifestsAapt = { GRADLE_GEN_FOLDER, "build/intermediates/manifests/aapt/debug", true };
 
 		Object[] mavenManifestFoundInTarget = { MAVEN_GEN_FOLDER, "target", true };
 		Object[] mavenManifestFoundInSrc = { MAVEN_GEN_FOLDER, "src/main", true };
@@ -70,7 +71,8 @@ public static Iterable<Object[]> createTestData() {
 
 		Object[] noGeneratedFolderFound = { "", "", false };
 
-		return Arrays.asList(gradleManifestFoundInManifests, gradleManifestFoundInBundles, mavenManifestFoundInTarget, mavenManifestFoundInSrc, mavenManifestFoundInRoot, eclipseManifestFound,
+		return Arrays.asList(gradleManifestFoundInManifests, gradleManifestFoundInBundles, gradleManifestFoundInManifestsAapt,
+				mavenManifestFoundInTarget, mavenManifestFoundInSrc, mavenManifestFoundInRoot, eclipseManifestFound,
 				gradleManifestNotFound, mavenManifestNotFound, eclipseManifestNotFound, noGeneratedFolderFound);
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -293,8 +294,8 @@ private JMethod findAlreadyGeneratedMethod(ExecutableElement executableElement,
 			if (method.name().equals(methodName) && method.params().size() == parameters.size()) {
 				int i = 0;
 				for (JVar param : method.params()) {
-					String searchedParamType = typeMirrorToJClass(parameters.get(i).asType()).name();
-					if (!param.type().name().equals(searchedParamType)) {
+					String searchedParamType = typeMirrorToJClass(parameters.get(i).asType()).fullName();
+					if (!param.type().fullName().equals(searchedParamType)) {
 						continue method;
 					}
 					i++;

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -293,8 +294,8 @@ private JMethod findAlreadyGeneratedMethod(ExecutableElement executableElement,
 			if (method.name().equals(methodName) && method.params().size() == parameters.size()) {
 				int i = 0;
 				for (JVar param : method.params()) {
-					String searchedParamType = typeMirrorToJClass(parameters.get(i).asType()).name();
-					if (!param.type().name().equals(searchedParamType)) {
+					String searchedParamType = typeMirrorToJClass(parameters.get(i).asType()).fullName();
+					if (!param.type().fullName().equals(searchedParamType)) {
 						continue method;
 					}
 					i++;

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EFragmentHolder.java
Patch:
@@ -221,7 +221,7 @@ public JFieldVar getViewDestroyedField() {
 	}
 
 	private void setViewDestroyedField() {
-		viewDestroyedField = generatedClass.field(PRIVATE | VOLATILE, getCodeModel().BOOLEAN, "viewDestroyed" + generationSuffix());
+		viewDestroyedField = generatedClass.field(PRIVATE | VOLATILE, getCodeModel().BOOLEAN, "viewDestroyed" + generationSuffix(), TRUE);
 		getSetContentViewBlock().assign(viewDestroyedField, FALSE);
 		getOnDestroyViewAfterSuperBlock().assign(viewDestroyedField, TRUE);
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EFragmentHolder.java
Patch:
@@ -221,7 +221,7 @@ public JFieldVar getViewDestroyedField() {
 	}
 
 	private void setViewDestroyedField() {
-		viewDestroyedField = generatedClass.field(PRIVATE | VOLATILE, getCodeModel().BOOLEAN, "viewDestroyed" + generationSuffix());
+		viewDestroyedField = generatedClass.field(PRIVATE | VOLATILE, getCodeModel().BOOLEAN, "viewDestroyed" + generationSuffix(), TRUE);
 		getSetContentViewBlock().assign(viewDestroyedField, FALSE);
 		getOnDestroyViewAfterSuperBlock().assign(viewDestroyedField, TRUE);
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EViewHolder.java
Patch:
@@ -49,7 +49,7 @@ public class EViewHolder extends EComponentWithViewSupportHolder implements HasI
 			+ "The alreadyInflated_ hack is needed because of an Android bug\n" // +
 			+ "which leads to infinite calls of onFinishInflate()\n" //
 			+ "when inflating a layout with a parent and using\n" //
-			+ "the <merge /> tag.";
+			+ "the <code>&lt;merge /&gt;</code> tag.";
 
 	private static final String SUPPRESS_WARNING_COMMENT = "" //
 			+ "We use @SuppressWarning here because our java code\n" //

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/SharedPrefHolder.java
Patch:
@@ -134,6 +134,7 @@ public void createFieldMethod(Class<?> prefFieldHelperClass, IJExpression keyExp
 			fieldMethod.javadoc().append("<p><b>Defaults to</b>: " + defaultValueJavaDoc + "</p>\n");
 		}
 		codeModelHelper.addTrimmedDocComment(fieldMethod, docComment);
+		fieldMethod.javadoc().addReturn().append("a {@link " + prefFieldHelperClass.getSimpleName() + "} instance to retrieve or write the pref value");
 		fieldMethod.body()._return(JExpr.invoke(fieldHelperMethodName).arg(keyExpression).arg(defaultValue));
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/generation/SharedPrefWithJavaDoc.java
Patch:
@@ -30,7 +30,6 @@ public interface SharedPrefWithJavaDoc {
 
 	/**
 	 * The Age!
-	 * @return the age as int
 	 * @deprecated use {@link #ageLong()}
 	 */
 	@Deprecated

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/main/java/org/androidannotations/test/preference/PreferencesInjectedActivity.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/main/java/org/androidannotations/test/res/ResActivity.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/AwaitingResultFragmentTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/FragmentArgsTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/FromHtmlActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/GenericFragmentArgsTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/InjectExtraTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/SeekBarChangeListenedActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/TextWatchedActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/UiThreadExecutorTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/afterextras/AfterExtrasActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/afterinject/AfterInjectActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/afterviews/AfterViewsActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/ebean/CyclicSingletonTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/ebean/SomeSingletonTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/efragment/ForceLayoutInjectedListFragmentTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/eintentservice/MyIntentServiceTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/ereceiver/ReceiverWithActionsTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/instancestate/SaveInstanceStateActivityParameterizedTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/instancestate/SaveInstanceStateActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/nonconfiguration/NonConfigurationActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/preference/PreferenceAnnotationsFragmentTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/preference/PreferenceHeadersActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/preference/PreferenceScreenFragmentTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/receiver/ActivityWithReceiverTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/receiver/EViewAndEViewGroupWithReceiverTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/receiver/FragmentWithReceiverTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/res/ResActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/supposethread/SupposeThreadTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/trace/TracedActivityTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-test/src/test/java/org/androidannotations/rest/spring/test/MyServiceTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-test/src/test/java/org/androidannotations/rest/spring/test/RequestTestBuilder.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-test/src/test/java/org/androidannotations/rest/spring/test/RestResponseErrorHandlerTest.java
Patch:
@@ -1,5 +1,6 @@
 /**
  * Copyright (C) 2010-2016 eBusiness Information, Excilys Group
+ * Copyright (C) 2016 the AndroidAnnotations project
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/ebean/CyclicSingletonTest.java
Patch:
@@ -16,6 +16,7 @@
 package org.androidannotations.test.ebean;
 
 import static org.fest.assertions.api.Assertions.assertThat;
+import static org.robolectric.Robolectric.setupActivity;
 
 import org.androidannotations.test.EmptyActivityWithoutLayout_;
 import org.junit.Test;
@@ -27,7 +28,7 @@ public class CyclicSingletonTest {
 
 	@Test
 	public void cyclicSingleton() {
-		EmptyActivityWithoutLayout_ context = new EmptyActivityWithoutLayout_();
+		EmptyActivityWithoutLayout_ context = setupActivity(EmptyActivityWithoutLayout_.class);
 		SomeCyclicSingletonA_ singletonA = SomeCyclicSingletonA_.getInstance_(context);
 		SomeCyclicSingletonB_ singletonB = SomeCyclicSingletonB_.getInstance_(context);
 		assertThat(singletonA.singletonB).isSameAs(singletonB);

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/ebean/SomeSingletonTest.java
Patch:
@@ -17,6 +17,7 @@
 
 import static org.fest.assertions.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
+import static org.robolectric.Robolectric.setupActivity;
 
 import java.lang.reflect.Field;
 
@@ -41,7 +42,7 @@ public void setUp() throws Exception {
 
 	@Test
 	public void getInstanceReturnsSameInstance() {
-		EmptyActivityWithoutLayout_ context = new EmptyActivityWithoutLayout_();
+		EmptyActivityWithoutLayout_ context = setupActivity(EmptyActivityWithoutLayout_.class);
 		SomeSingleton_ firstInstance = SomeSingleton_.getInstance_(context);
 		SomeSingleton_ secondInstance = SomeSingleton_.getInstance_(context);
 		assertThat(firstInstance).isSameAs(secondInstance);

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/eintentservice/MyIntentServiceTest.java
Patch:
@@ -16,6 +16,7 @@
 package org.androidannotations.test.eintentservice;
 
 import static org.fest.assertions.api.Assertions.assertThat;
+import static org.robolectric.Robolectric.setupActivity;
 
 import org.androidannotations.test.EmptyActivityWithoutLayout;
 import org.androidannotations.test.EmptyActivityWithoutLayout_;
@@ -33,7 +34,7 @@ public void testAction() {
 		IntentServiceHandledAction.actionForTestHandled = null;
 
 		// Simulate call to intent builder and retrieve the configured Intent
-		EmptyActivityWithoutLayout context = new EmptyActivityWithoutLayout_();
+		EmptyActivityWithoutLayout context = setupActivity(EmptyActivityWithoutLayout_.class);
 		Intent intent = IntentServiceHandledAction_.intent(context) //
 				.myActionOneParam("test") //
 				.get();

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/ereceiver/ReceiverWithActionsTest.java
Patch:
@@ -92,7 +92,7 @@ public void onIntentParametersActionTest() {
 		Intent extraIntent = new Intent("someAction");
 		intent.putExtra("extraIntent", extraIntent);
 
-		receiver.onReceive(Robolectric.application, intent);
+		receiver.onReceive(RuntimeEnvironment.application, intent);
 
 		assertEquals(intent, receiver.originalIntent);
 		assertEquals(extraIntent, receiver.extraIntent);

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/receiver/EViewAndEViewGroupWithReceiverTest.java
Patch:
@@ -22,6 +22,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
 
 import android.content.Intent;
 import android.support.v4.content.LocalBroadcastManager;
@@ -64,7 +65,7 @@ public void eViewAndEViewGroupReceivedAction2WithExtraTest() {
 		Intent extraIntent = new Intent("someAction");
 		intent.putExtra("extra", extraIntent);
 
-		LocalBroadcastManager.getInstance(Robolectric.application).sendBroadcast(intent);
+		LocalBroadcastManager.getInstance(RuntimeEnvironment.application).sendBroadcast(intent);
 
 		assertTrue(activity.viewWithReceiver.action2Received);
 		assertTrue(activity.viewWithReceiver.action2Extra.equals(extraIntent));

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/res/ResActivityTest.java
Patch:
@@ -111,12 +111,12 @@ public void htmlInjectedNotNull() {
 
 	@Test
 	public void htmlResCorrectlySet() {
-		assertEquals(Html.fromHtml(activity.getString(R.string.hello_html)), activity.helloHtml);
+		assertEquals(Html.fromHtml(activity.getString(R.string.hello_html)).toString(), activity.helloHtml.toString());
 	}
 
 	@Test
 	public void htmlInjectedCorrectlySet() {
-		assertEquals(Html.fromHtml(activity.getString(R.string.hello_html)), activity.htmlInjected);
+		assertEquals(Html.fromHtml(activity.getString(R.string.hello_html)).toString(), activity.htmlInjected.toString());
 	}
 
 	@Test

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemSelect.java
Patch:
@@ -46,17 +46,17 @@
  * 
  * <pre>
  * &#064;ItemSelect(R.id.myList)
- * public void itemSelectedOnMyList() {
+ * public void itemSelectedOnMyList(boolean selected) {
  * 	// ...
  * }
  * 
  * &#064;ItemSelect(R.id.myList)
- * public void myListItemPositionSelected(int position) {
+ * public void myListItemPositionSelected(boolean selected, int position) {
  * 	// ...
  * }
  * 
  * &#064;ItemSelect
- * public void myListItemSelect(MyItem clickedItem) {
+ * public void myListItemSelect(boolean selected, MyItem clickedItem) {
  * 	// ...
  * }
  * 

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemSelect.java
Patch:
@@ -46,17 +46,17 @@
  * 
  * <pre>
  * &#064;ItemSelect(R.id.myList)
- * public void itemSelectedOnMyList() {
+ * public void itemSelectedOnMyList(boolean selected) {
  * 	// ...
  * }
  * 
  * &#064;ItemSelect(R.id.myList)
- * public void myListItemPositionSelected(int position) {
+ * public void myListItemPositionSelected(boolean selected, int position) {
  * 	// ...
  * }
  * 
  * &#064;ItemSelect
- * public void myListItemSelect(MyItem clickedItem) {
+ * public void myListItemSelect(boolean selected, MyItem clickedItem) {
  * 	// ...
  * }
  * 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EServiceHolder.java
Patch:
@@ -125,7 +125,7 @@ public JBlock getOnStopBeforeSuperBlock() {
 
 	@Override
 	public JBlock getOnResumeAfterSuperBlock() {
-		return receiverRegistrationDelegate.getOnAttachAfterSuperBlock();
+		return receiverRegistrationDelegate.getOnResumeAfterSuperBlock();
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AbstractFragmentByHandler.java
Patch:
@@ -55,6 +55,9 @@ public AbstractFragmentByHandler(Class<? extends Annotation> targetClass, Androi
 	@Override
 	protected void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(targetClass, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		Element param = element;
 		if (element instanceof ExecutableElement) {

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AbstractResHandler.java
Patch:
@@ -48,6 +48,9 @@ public AbstractResHandler(AndroidRes androidRes, AndroidAnnotationsEnvironment e
 	@Override
 	public final void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(androidRes.getAnnotationClass(), element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.allowedType(element, androidRes.getAllowedTypes(), validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/AppHandler.java
Patch:
@@ -45,6 +45,9 @@ public AppHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(App.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.isNotPrivate(element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/BeanHandler.java
Patch:
@@ -51,6 +51,9 @@ public BeanHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(Bean.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.typeOrTargetValueHasAnnotation(EBean.class, element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/ExtraHandler.java
Patch:
@@ -66,6 +66,9 @@ public void validate(Element element, ElementValidation validation) {
 		 */
 
 		injectHelper.validate(Extra.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.isNotPrivate(element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/FragmentArgHandler.java
Patch:
@@ -65,6 +65,9 @@ public FragmentArgHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(FragmentArg.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.isNotPrivate(element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/HttpsClientHandler.java
Patch:
@@ -60,6 +60,9 @@ public HttpsClientHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(HttpsClient.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.annotationParameterIsOptionalValidResId(element, IRClass.Res.RAW, "keyStore", validation);
 		validatorHelper.annotationParameterIsOptionalValidResId(element, IRClass.Res.RAW, "trustStore", validation);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/InjectMenuHandler.java
Patch:
@@ -40,6 +40,9 @@ public InjectMenuHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation valid) {
 		injectHelper.validate(InjectMenu.class, element, valid);
+		if (!valid.isValid()) {
+			return;
+		}
 
 		Element param = injectHelper.getParam(element);
 		validatorHelper.isDeclaredType(param, valid);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/OptionsMenuItemHandler.java
Patch:
@@ -44,6 +44,9 @@ public OptionsMenuItemHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(OptionsMenuItem.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		Element param = injectHelper.getParam(element);
 		validatorHelper.isDeclaredType(param, validation);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/PrefHandler.java
Patch:
@@ -46,6 +46,9 @@ public PrefHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(Pref.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.isNotPrivate(element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/PreferenceByKeyHandler.java
Patch:
@@ -47,6 +47,9 @@ public PreferenceByKeyHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	protected void validate(Element element, ElementValidation valid) {
 		injectHelper.validate(PreferenceByKey.class, element, valid);
+		if (!valid.isValid()) {
+			return;
+		}
 
 		if (element.getKind() == ElementKind.PARAMETER) {
 			validatorHelper.enclosingElementExtendsPreferenceActivityOrPreferenceFragment(element.getEnclosingElement(), valid);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/RootContextHandler.java
Patch:
@@ -50,6 +50,9 @@ public RootContextHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(RootContext.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		Element param = injectHelper.getParam(element);
 		validatorHelper.extendsContext(param, validation);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/SystemServiceHandler.java
Patch:
@@ -51,6 +51,9 @@ public SystemServiceHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(SystemService.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.androidService(element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/ViewByIdHandler.java
Patch:
@@ -50,6 +50,9 @@ public ViewByIdHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(ViewById.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		Element param = injectHelper.getParam(element);
 		validatorHelper.isDeclaredType(param, validation);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/ViewsByIdHandler.java
Patch:
@@ -55,6 +55,9 @@ public ViewsByIdHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(ViewsById.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		Element param = injectHelper.getParam(element);
 		validatorHelper.isDeclaredType(param, validation);

File: AndroidAnnotations/androidannotations-ormlite/ormlite/src/main/java/org/androidannotations/ormlite/handler/OrmLiteDaoHandler.java
Patch:
@@ -60,6 +60,9 @@ public OrmLiteDaoHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(OrmLiteDao.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.isNotPrivate(element, validation);
 

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/handler/RestServiceHandler.java
Patch:
@@ -46,6 +46,9 @@ public RestServiceHandler(AndroidAnnotationsEnvironment environment) {
 	@Override
 	public void validate(Element element, ElementValidation validation) {
 		injectHelper.validate(RestService.class, element, validation);
+		if (!validation.isValid()) {
+			return;
+		}
 
 		validatorHelper.isNotPrivate(element, validation);
 

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -133,7 +133,7 @@ public static synchronized void execute(Task task) {
 			task.executionAsked = true;
 			future = directExecute(task, task.remainingDelay);
 		}
-		if ((task.id != null || task.serial != null) && !task.managed.get()) {
+		if (task.id != null || task.serial != null) {
 			/* keep task */
 			task.future = future;
 			TASKS.add(task);

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/handler/RestMethodHandler.java
Patch:
@@ -203,7 +203,7 @@ private IJExpression setCookies(ExecutableElement executableElement, RestHolder
 
 			JForEach innerForEach = forLoopBody.forEach(getClasses().STRING, "thisCookieName", requestedCookiesVar);
 			JBlock innerBody = innerForEach.body();
-			JBlock thenBlock = innerBody._if(JExpr.invoke(rawCookieVar, "startsWith").arg(innerForEach.var()))._then();
+			JBlock thenBlock = innerBody._if(JExpr.invoke(rawCookieVar, "startsWith").arg(innerForEach.var().plus("=")))._then();
 
 			// where does the cookie VALUE end?
 			JInvocation valueEnd = rawCookieVar.invoke("indexOf").arg(JExpr.lit(';'));

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/handler/RestMethodHandler.java
Patch:
@@ -203,7 +203,7 @@ private IJExpression setCookies(ExecutableElement executableElement, RestHolder
 
 			JForEach innerForEach = forLoopBody.forEach(getClasses().STRING, "thisCookieName", requestedCookiesVar);
 			JBlock innerBody = innerForEach.body();
-			JBlock thenBlock = innerBody._if(JExpr.invoke(rawCookieVar, "startsWith").arg(innerForEach.var()))._then();
+			JBlock thenBlock = innerBody._if(JExpr.invoke(rawCookieVar, "startsWith").arg(innerForEach.var().plus("=")))._then();
 
 			// where does the cookie VALUE end?
 			JInvocation valueEnd = rawCookieVar.invoke("indexOf").arg(JExpr.lit(';'));

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsMenuItem.java
Patch:
@@ -22,8 +22,8 @@
 
 /**
  * <p>
- * Use it on android.app.Fragment or android.support.v4.app.Fragment fields in
- * activity classes to inject a menu item.
+ * Use it on {@link android.view.MenuItem MenuItem} fields or methods with applicable
+ * parameters in activity classes to inject a menu item.
  * </p>
  * <p>
  * The field or method parameter MUST be of type {@link android.view.MenuItem}

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsMenuItem.java
Patch:
@@ -22,8 +22,8 @@
 
 /**
  * <p>
- * Use it on android.app.Fragment or android.support.v4.app.Fragment fields in
- * activity classes to inject a menu item.
+ * Use it on {@link android.view.MenuItem MenuItem} fields or methods with applicable
+ * parameters in activity classes to inject a menu item.
  * </p>
  * <p>
  * The field or method parameter MUST be of type {@link android.view.MenuItem}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/handler/AnnotationHandler.java
Patch:
@@ -27,4 +27,6 @@ public interface AnnotationHandler<T extends GeneratedClassHolder> {
 	ElementValidation validate(Element element);
 
 	void process(Element element, T holder) throws Exception;
+
+	boolean isEnabled();
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/process/ModelValidator.java
Patch:
@@ -53,6 +53,9 @@ public AnnotationElements validate(AnnotationElements extractedModel, Annotation
 		 */
 
 		for (AnnotationHandler annotationHandler : environment.getHandlers()) {
+			if (!annotationHandler.isEnabled()) {
+				continue;
+			}
 			String validatorSimpleName = annotationHandler.getClass().getSimpleName();
 			String annotationName = annotationHandler.getTarget();
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/AndroidAnnotationProcessor.java
Patch:
@@ -229,7 +229,7 @@ private ModelProcessor.ProcessResult processAnnotations(AnnotationElements valid
 	private void generateSources(ModelProcessor.ProcessResult processResult) throws IOException {
 		timeStats.start("Generate Sources");
 		LOGGER.info("Number of files generated by AndroidAnnotations: {}", processResult.codeModel.countArtifacts());
-		CodeModelGenerator modelGenerator = new CodeModelGenerator(processingEnv.getFiler(), coreVersion);
+		CodeModelGenerator modelGenerator = new CodeModelGenerator(processingEnv.getFiler(), coreVersion, androidAnnotationsEnv.getOptionValue(CodeModelGenerator.OPTION_ENCODING));
 		modelGenerator.generate(processResult);
 		timeStats.stop("Generate Sources");
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/Options.java
Patch:
@@ -25,6 +25,7 @@
 import org.androidannotations.Option;
 import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.BaseGeneratedClassHolder;
+import org.androidannotations.internal.generation.CodeModelGenerator;
 import org.androidannotations.internal.helper.AndroidManifestFinder;
 import org.androidannotations.internal.rclass.ProjectRClassFinder;
 import org.androidannotations.logger.LoggerContext;
@@ -46,6 +47,7 @@ public Options(ProcessingEnvironment processingEnvironment) {
 		addSupportedOption(LoggerContext.OPTION_LOG_APPENDER_CONSOLE);
 		addSupportedOption(LoggerContext.OPTION_LOG_APPENDER_FILE);
 		addSupportedOption(BaseGeneratedClassHolder.OPTION_GENERATE_FINAL_CLASSES);
+		addSupportedOption(CodeModelGenerator.OPTION_ENCODING);
 	}
 
 	public void addAllSupportedOptions(List<Option> options) {

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/generation/ResourceCodeWriter.java
Patch:
@@ -17,6 +17,7 @@
 
 import java.io.IOException;
 import java.io.OutputStream;
+import java.nio.charset.Charset;
 
 import javax.annotation.processing.Filer;
 import javax.tools.FileObject;
@@ -29,8 +30,8 @@ public class ResourceCodeWriter extends AbstractCodeWriter {
 
 	private final Filer filer;
 
-	public ResourceCodeWriter(Filer filer) {
-		super(null);
+	public ResourceCodeWriter(Filer filer, Charset charset) {
+		super(charset);
 		this.filer = filer;
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/generation/SourceCodeWriter.java
Patch:
@@ -17,6 +17,7 @@
 
 import java.io.IOException;
 import java.io.OutputStream;
+import java.nio.charset.Charset;
 
 import javax.annotation.processing.Filer;
 import javax.annotation.processing.FilerException;
@@ -44,8 +45,8 @@ public void write(int arg0) throws IOException {
 		}
 	}
 
-	public SourceCodeWriter(Filer filer, OriginatingElements originatingElements) {
-		super(null);
+	public SourceCodeWriter(Filer filer, OriginatingElements originatingElements, Charset charset) {
+		super(charset);
 		this.filer = filer;
 		this.originatingElements = originatingElements;
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -141,7 +141,6 @@ public final class CanonicalNameConstants {
 	public static final String APPCOMPAT_ACTIVITY = "android.support.v7.app.AppCompatActivity";
 	public static final String VIEW_PAGER = "android.support.v4.view.ViewPager";
 	public static final String PAGE_CHANGE_LISTENER = "android.support.v4.view.ViewPager.OnPageChangeListener";
-	public static final String INSTANT_RUN_APPLICATION = "com.android.tools.fd.runtime.BootstrapApplication";
 
 	/*
 	 * Android permission

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -141,7 +141,6 @@ public final class CanonicalNameConstants {
 	public static final String APPCOMPAT_ACTIVITY = "android.support.v7.app.AppCompatActivity";
 	public static final String VIEW_PAGER = "android.support.v4.view.ViewPager";
 	public static final String PAGE_CHANGE_LISTENER = "android.support.v4.view.ViewPager.OnPageChangeListener";
-	public static final String INSTANT_RUN_APPLICATION = "com.android.tools.fd.runtime.BootstrapApplication";
 
 	/*
 	 * Android permission

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -426,7 +426,7 @@ private void postExecute() {
 					if (next != null) {
 						if (next.remainingDelay != 0) {
 							/* the delay may not have elapsed yet */
-							next.remainingDelay = Math.max(0L, targetTimeMillis - System.currentTimeMillis());
+							next.remainingDelay = Math.max(0L, next.targetTimeMillis - System.currentTimeMillis());
 						}
 						/* a task having the same serial was queued, execute it */
 						BackgroundExecutor.execute(next);

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -426,7 +426,7 @@ private void postExecute() {
 					if (next != null) {
 						if (next.remainingDelay != 0) {
 							/* the delay may not have elapsed yet */
-							next.remainingDelay = Math.max(0L, targetTimeMillis - System.currentTimeMillis());
+							next.remainingDelay = Math.max(0L, next.targetTimeMillis - System.currentTimeMillis());
 						}
 						/* a task having the same serial was queued, execute it */
 						BackgroundExecutor.execute(next);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -309,7 +309,7 @@ private JMethod findAlreadyGeneratedMethod(ExecutableElement executableElement,
 	private void addParamToMethod(JMethod method, VariableElement parameter, int mod, Map<String, TypeMirror> actualTypes, boolean varParam) {
 		String parameterName = parameter.getSimpleName().toString();
 		AbstractJClass parameterClass = typeMirrorToJClass(parameter.asType(), actualTypes);
-		JVar param = varParam ? method.varParam(parameterClass.elementType(), parameterName) : method.param(mod, parameterClass, parameterName);
+		JVar param = varParam ? method.varParam(mod, parameterClass.elementType(), parameterName) : method.param(mod, parameterClass, parameterName);
 		copyNonAAAnnotations(param, parameter.getAnnotationMirrors());
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -133,7 +133,7 @@ public static synchronized void execute(Task task) {
 			task.executionAsked = true;
 			future = directExecute(task, task.remainingDelay);
 		}
-		if (task.id != null || task.serial != null) {
+		if ((task.id != null || task.serial != null) && !task.managed.get()) {
 			/* keep task */
 			task.future = future;
 			TASKS.add(task);

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -133,7 +133,7 @@ public static synchronized void execute(Task task) {
 			task.executionAsked = true;
 			future = directExecute(task, task.remainingDelay);
 		}
-		if (task.id != null || task.serial != null) {
+		if ((task.id != null || task.serial != null) && !task.managed.get()) {
 			/* keep task */
 			task.future = future;
 			TASKS.add(task);

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/annotations/Background.java
Patch:
@@ -191,7 +191,7 @@
 	 *
 	 * @return the delay of the execution
 	 */
-	int delay() default 0;
+	long delay() default 0;
 
 	/**
 	 * Serial execution group.

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/BackgroundHandler.java
Patch:
@@ -70,7 +70,7 @@ public void process(Element element, EComponentHolder holder) throws Exception {
 
 		Background annotation = element.getAnnotation(Background.class);
 		String id = annotation.id();
-		int delay = annotation.delay();
+		long delay = annotation.delay();
 		String serial = annotation.serial();
 
 		AbstractJClass backgroundExecutorClass = getJClass(BackgroundExecutor.class);

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -93,7 +93,7 @@ private BackgroundExecutor() {
 	 *             if the current executor set by {@link #setExecutor(Executor)}
 	 *             does not support scheduling
 	 */
-	private static Future<?> directExecute(Runnable runnable, int delay) {
+	private static Future<?> directExecute(Runnable runnable, long delay) {
 		Future<?> future = null;
 		if (delay > 0) {
 			/* no serial, but a delay: schedule the task */
@@ -360,7 +360,7 @@ private static Task take(String serial) {
 	public static abstract class Task implements Runnable {
 
 		private String id;
-		private int remainingDelay;
+		private long remainingDelay;
 		private long targetTimeMillis; /* since epoch */
 		private String serial;
 		private boolean executionAsked;
@@ -426,7 +426,7 @@ private void postExecute() {
 					if (next != null) {
 						if (next.remainingDelay != 0) {
 							/* the delay may not have elapsed yet */
-							next.remainingDelay = Math.max(0, (int) (targetTimeMillis - System.currentTimeMillis()));
+							next.remainingDelay = Math.max(0L, targetTimeMillis - System.currentTimeMillis());
 						}
 						/* a task having the same serial was queued, execute it */
 						BackgroundExecutor.execute(next);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/helper/AndroidManifestFinder.java
Patch:
@@ -186,7 +186,7 @@ private static class GradleAndroidManifestFinderStrategy extends AndroidManifest
 		Iterable<String> possibleLocations() {
 			String gradleVariant = matcher.group(2);
 
-			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/bundles" + gradleVariant);
+			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/intermediates/bundles" + gradleVariant);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/internal/helper/AndroidManifestFinderTest.java
Patch:
@@ -54,7 +54,7 @@ public AndroidManifestFinderTest(String genFolderPath, String manifestFolderPath
 	public static Iterable<Object[]> createTestData() {
 
 		Object[] gradleManifestFoundInManifests = { GRADLE_GEN_FOLDER, "build/intermediates/manifests/full/debug", true };
-		Object[] gradleManifestFoundInBundles = { GRADLE_GEN_FOLDER, "build/bundles/debug", true };
+		Object[] gradleManifestFoundInBundles = { GRADLE_GEN_FOLDER, "build/intermediates/bundles/debug", true };
 
 		Object[] mavenManifestFoundInTarget = { MAVEN_GEN_FOLDER, "target", true };
 		Object[] mavenManifestFoundInSrc = { MAVEN_GEN_FOLDER, "src/main", true };

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/helper/AndroidManifestFinder.java
Patch:
@@ -186,7 +186,7 @@ private static class GradleAndroidManifestFinderStrategy extends AndroidManifest
 		Iterable<String> possibleLocations() {
 			String gradleVariant = matcher.group(2);
 
-			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/bundles" + gradleVariant);
+			return Arrays.asList("build/intermediates/manifests/full" + gradleVariant, "build/intermediates/bundles" + gradleVariant);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/internal/helper/AndroidManifestFinderTest.java
Patch:
@@ -54,7 +54,7 @@ public AndroidManifestFinderTest(String genFolderPath, String manifestFolderPath
 	public static Iterable<Object[]> createTestData() {
 
 		Object[] gradleManifestFoundInManifests = { GRADLE_GEN_FOLDER, "build/intermediates/manifests/full/debug", true };
-		Object[] gradleManifestFoundInBundles = { GRADLE_GEN_FOLDER, "build/bundles/debug", true };
+		Object[] gradleManifestFoundInBundles = { GRADLE_GEN_FOLDER, "build/intermediates/bundles/debug", true };
 
 		Object[] mavenManifestFoundInTarget = { MAVEN_GEN_FOLDER, "target", true };
 		Object[] mavenManifestFoundInSrc = { MAVEN_GEN_FOLDER, "src/main", true };

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/instancestate/SaveInstanceStateActivityParameterizedTest.java
Patch:
@@ -94,6 +94,8 @@ public static Collection<Object[]> generateTestCases() throws Exception {
 				{ "myParcelableBeanArrayList", Lists.newArrayList(new MyParcelableBean(1), new MyParcelableBean(2), new MyParcelableBean(3)) }, //
 				{ "myGenericParcelableBeanArrayList", myGenericParcelableBeanArrayList }, //
 				{ "mySerializableBeanArrayList", Lists.newArrayList(new MySerializableBean(1), new MySerializableBean(2), new MySerializableBean(3)) }, //
+				{ "myCharSequenceArray", new CharSequence[] { "C1", "C2" } }, //
+				{ "myCharSequenceArrayList", Lists.newArrayList("C1", "C2") }, //
 				{ "nullWrappedLong", null }, //
 		};
 		// CHECKSTYLE:ON

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/test/java/org/androidannotations/test/instancestate/SaveInstanceStateActivityParameterizedTest.java
Patch:
@@ -94,6 +94,8 @@ public static Collection<Object[]> generateTestCases() throws Exception {
 				{ "myParcelableBeanArrayList", Lists.newArrayList(new MyParcelableBean(1), new MyParcelableBean(2), new MyParcelableBean(3)) }, //
 				{ "myGenericParcelableBeanArrayList", myGenericParcelableBeanArrayList }, //
 				{ "mySerializableBeanArrayList", Lists.newArrayList(new MySerializableBean(1), new MySerializableBean(2), new MySerializableBean(3)) }, //
+				{ "myCharSequenceArray", new CharSequence[] { "C1", "C2" } }, //
+				{ "myCharSequenceArrayList", Lists.newArrayList("C1", "C2") }, //
 				{ "nullWrappedLong", null }, //
 		};
 		// CHECKSTYLE:ON

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/BundleHelper.java
Patch:
@@ -54,6 +54,8 @@ public class BundleHelper {
 		METHOD_SUFFIX_BY_TYPE_NAME.put("char[]", "CharArray");
 
 		METHOD_SUFFIX_BY_TYPE_NAME.put(CHAR_SEQUENCE, "CharSequence");
+		METHOD_SUFFIX_BY_TYPE_NAME.put(CHAR_SEQUENCE + "[]", "CharSequenceArray");
+		METHOD_SUFFIX_BY_TYPE_NAME.put("java.util.ArrayList<" + CHAR_SEQUENCE + ">", "CharSequenceArrayList");
 
 		METHOD_SUFFIX_BY_TYPE_NAME.put("double", "Double");
 		METHOD_SUFFIX_BY_TYPE_NAME.put("double[]", "DoubleArray");

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -135,6 +135,8 @@ public final class CanonicalNameConstants {
 	public static final String SUPPORT_V7_PREFERENCE_CLICK_LISTENER = "android.support.v7.preference.Preference.OnPreferenceClickListener";
 	public static final String PREFERENCE_ACTIVITY_HEADER = "android.preference.PreferenceActivity.Header";
 	public static final String APP_WIDGET_MANAGER = "android.appwidget.AppWidgetManager";
+	public static final String WIFI_MANAGER = "android.net.wifi.WifiManager";
+	public static final String AUDIO_MANAGER = "android.media.AudioManager";
 	public static final String ACTIONBAR_ACTIVITY = "android.support.v7.app.ActionBarActivity";
 	public static final String APPCOMPAT_ACTIVITY = "android.support.v7.app.AppCompatActivity";
 

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-test/src/main/java/org/androidannotations/rest/spring/test/PathRestService.java
Patch:
@@ -25,5 +25,5 @@
 public interface PathRestService extends RestClientSupport {
 
 	@Get(value = "{hello}{bye}{parameterName}")
-	void get(@Path("hello") String bye, @Path("bye") String hello, String parameterName);
+	void get(@Path("hello") String bye, @Path("bye") String hello, @Path String parameterName);
 }

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/test/java/org/androidannotations/rest/spring/ClientWithParameters.java
Patch:
@@ -16,6 +16,7 @@
 package org.androidannotations.rest.spring;
 
 import org.androidannotations.rest.spring.annotations.Field;
+import org.androidannotations.rest.spring.annotations.Path;
 import org.androidannotations.rest.spring.annotations.Put;
 import org.androidannotations.rest.spring.annotations.Rest;
 import org.springframework.http.converter.FormHttpMessageConverter;
@@ -33,6 +34,6 @@ public interface ClientWithParameters {
 	void moreParameter(@Field int id, @Field String str);
 
 	@Put("/{url}")
-	void oneParameterWithUrl(@Field int id, String url);
+	void oneParameterWithUrl(@Field int id, @Path String url);
 
 }

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/test/java/org/androidannotations/rest/spring/ClientWithPostParameters.java
Patch:
@@ -16,6 +16,7 @@
 package org.androidannotations.rest.spring;
 
 import org.androidannotations.rest.spring.annotations.Field;
+import org.androidannotations.rest.spring.annotations.Path;
 import org.androidannotations.rest.spring.annotations.Post;
 import org.androidannotations.rest.spring.annotations.Rest;
 import org.springframework.core.io.ClassPathResource;
@@ -46,7 +47,7 @@ public interface ClientWithPostParameters {
 	void twoFieldssOneWithName(@Field String a, @Field("c") String b);
 
 	@Post("/{url}")
-	void fieldAndUrlVariable(@Field String a, String url);
+	void fieldAndUrlVariable(@Field String a, @Path String url);
 
 	@Post("/")
 	void fieldClassPathResource(@Field ClassPathResource res);

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/test/java/org/androidannotations/rest/spring/RestTest.java
Patch:
@@ -132,7 +132,7 @@ public void fieldPathParamOnSameArgument() throws IOException {
 		assertCompilationErrorOn(FieldPathParamOnSameArgument.class, "@Field", result);
 		assertCompilationErrorOn(FieldPathParamOnSameArgument.class, "@Path", result);
 
-		assertCompilationErrorCount(3, result);
+		assertCompilationErrorCount(2, result);
 	}
 
 	@Test

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -135,6 +135,7 @@ public final class CanonicalNameConstants {
 	public static final String SUPPORT_V7_PREFERENCE_CLICK_LISTENER = "android.support.v7.preference.Preference.OnPreferenceClickListener";
 	public static final String PREFERENCE_ACTIVITY_HEADER = "android.preference.PreferenceActivity.Header";
 	public static final String APP_WIDGET_MANAGER = "android.appwidget.AppWidgetManager";
+	public static final String WIFI_MANAGER = "android.net.wifi.WifiManager";
 	public static final String ACTIONBAR_ACTIVITY = "android.support.v7.app.ActionBarActivity";
 	public static final String APPCOMPAT_ACTIVITY = "android.support.v7.app.AppCompatActivity";
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/LoggerContext.java
Patch:
@@ -31,12 +31,12 @@
 
 public final class LoggerContext {
 
-	public static final Option OPTION_LOG_LEVEL = new Option("logLevel", "DEBUG");
+	public static final Option OPTION_LOG_LEVEL = new Option("logLevel", "WARN");
 	public static final Option OPTION_LOG_APPENDER_CONSOLE = new Option("logAppenderConsole", "false");
 	public static final Option OPTION_LOG_APPENDER_FILE = new Option("logAppenderFile", "true");
 
 	private static LoggerContext instance = null;
-	private static final Level DEFAULT_LEVEL = Level.DEBUG;
+	private static final Level DEFAULT_LEVEL = Level.WARN;
 
 	private Level currentLevel = DEFAULT_LEVEL;
 	private List<Appender> appenders = new ArrayList<>();

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/LoggerContext.java
Patch:
@@ -31,12 +31,12 @@
 
 public final class LoggerContext {
 
-	public static final Option OPTION_LOG_LEVEL = new Option("logLevel", "DEBUG");
+	public static final Option OPTION_LOG_LEVEL = new Option("logLevel", "WARN");
 	public static final Option OPTION_LOG_APPENDER_CONSOLE = new Option("logAppenderConsole", "false");
 	public static final Option OPTION_LOG_APPENDER_FILE = new Option("logAppenderFile", "true");
 
 	private static LoggerContext instance = null;
-	private static final Level DEFAULT_LEVEL = Level.DEBUG;
+	private static final Level DEFAULT_LEVEL = Level.WARN;
 
 	private Level currentLevel = DEFAULT_LEVEL;
 	private List<Appender> appenders = new ArrayList<>();

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/test/java/org/androidannotations/rest/spring/FieldPathParamOnSameArgument.java
Patch:
@@ -25,6 +25,6 @@
 public interface FieldPathParamOnSameArgument {
 
 	@Post("/fieldPathParamOnSameArgument/{string}")
-	void postParamPathParamOnSameArgument(@Field @Path String string);
+	void postParamPathParamOnSameArgument(@Field @Path int string);
 
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/resources/org/androidannotations/generation/Build.java
Patch:
@@ -28,6 +28,7 @@ public static class VERSION {
 
 	public static class VERSION_CODES {
 		public static final int LOLLIPOP = 21;
+		public static final int M = 23;
 	}
 
 }

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/resources/org/androidannotations/generation/Build.java
Patch:
@@ -28,6 +28,7 @@ public static class VERSION {
 
 	public static class VERSION_CODES {
 		public static final int LOLLIPOP = 21;
+		public static final int M = 23;
 	}
 
 }

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/test/java/org/androidannotations/rest/spring/FieldPathParamOnSameArgument.java
Patch:
@@ -24,7 +24,7 @@
 @Rest(converters = FormHttpMessageConverter.class)
 public interface FieldPathParamOnSameArgument {
 
-	@Post("/fieldPathParamOnSameArgument")
-	void postParamPathParamOnSameArgument(@Field @Path int string);
+	@Post("/fieldPathParamOnSameArgument/{string}")
+	void postParamPathParamOnSameArgument(@Field @Path String string);
 
 }

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringValidatorHelper.java
Patch:
@@ -55,6 +55,7 @@
 import org.androidannotations.rest.spring.annotations.Head;
 import org.androidannotations.rest.spring.annotations.Options;
 import org.androidannotations.rest.spring.annotations.Part;
+import org.androidannotations.rest.spring.annotations.Patch;
 import org.androidannotations.rest.spring.annotations.Path;
 import org.androidannotations.rest.spring.annotations.Post;
 import org.androidannotations.rest.spring.annotations.Put;
@@ -68,7 +69,7 @@ public class RestSpringValidatorHelper extends ValidatorHelper {
 
 	private static final List<String> VALID_REST_INTERFACES = asList(RestClientHeaders.class.getName(), RestClientErrorHandling.class.getName(),
 			RestClientRootUrl.class.getName(), RestClientSupport.class.getName());
-	private static final List<Class<? extends Annotation>> REST_ANNOTATION_CLASSES = Arrays.asList(Get.class, Head.class, Options.class, Post.class, Put.class, Delete.class);
+	private static final List<Class<? extends Annotation>> REST_ANNOTATION_CLASSES = Arrays.asList(Get.class, Head.class, Options.class, Post.class, Put.class, Patch.class, Delete.class);
 
 	private static final String METHOD_NAME_SET_ROOT_URL = "setRootUrl";
 	private static final String METHOD_NAME_SET_AUTHENTICATION = "setAuthentication";
@@ -569,7 +570,7 @@ public void elementHasOneOfRestMethodAnnotations(Element element, ElementValidat
 	}
 
 	public void usesSpringAndroid2(Element element, ElementValidation validation) {
-		if (environment().getProcessingEnvironment().getElementUtils().getTypeElement(RestSpringClasses.PARAMETERIZED_TYPE_REFERENCE) != null) {
+		if (environment().getProcessingEnvironment().getElementUtils().getTypeElement(RestSpringClasses.PARAMETERIZED_TYPE_REFERENCE) == null) {
 			validation.addError(element, "To use %s annotated method you must add Spring Android Rest Template 2.0 to your classpath");
 		}
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/LoggerContext.java
Patch:
@@ -92,7 +92,7 @@ public void close() {
 	}
 
 	private void resolveLogLevel(AndroidAnnotationsEnvironment environment) {
-		Level level = Level.DEBUG;
+		Level level = Level.WARN;
 		try {
 			level = Level.parse(environment.getOptionValue(OPTION_LOG_LEVEL));
 		} catch (Exception ignored) {

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/model/AnnotationElementsHolder.java
Patch:
@@ -18,6 +18,7 @@
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.LinkedHashSet;
 import java.util.Map;
 import java.util.Set;
 
@@ -36,7 +37,7 @@ public void putRootAnnotatedElements(String annotationName, Set<? extends Elemen
 	public void putAncestorAnnotatedElement(String annotationName, Element annotatedElement, TypeElement rootTypeElement) {
 		Set<AnnotatedAndRootElements> set = ancestorAnnotatedElementsByAnnotation.get(annotationName);
 		if (set == null) {
-			set = new HashSet<>();
+			set = new LinkedHashSet<>();
 			ancestorAnnotatedElementsByAnnotation.put(annotationName, set);
 		}
 		set.add(new AnnotatedAndRootElements(annotatedElement, rootTypeElement));

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/model/ModelExtractor.java
Patch:
@@ -16,6 +16,7 @@
 package org.androidannotations.internal.model;
 
 import java.util.HashSet;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Set;
 
@@ -71,7 +72,7 @@ private Set<TypeElement> findRootTypeElements(Set<? extends Element> rootElement
 
 	private void extractAncestorsAnnotations(AnnotationElementsHolder extractedModel, Set<String> annotationTypesToCheck, Set<TypeElement> rootTypeElements) {
 		for (TypeElement rootTypeElement : rootTypeElements) {
-			Set<TypeElement> ancestors = new HashSet<>();
+			Set<TypeElement> ancestors = new LinkedHashSet<>();
 			addAncestorsElements(ancestors, rootTypeElement);
 			if (!ancestors.isEmpty()) {
 
@@ -121,8 +122,8 @@ private void addAncestorsElements(Set<TypeElement> elements, TypeElement typeEle
 			DeclaredType ancestorDeclaredType = (DeclaredType) ancestorTypeMirror;
 			Element ancestorElement = ancestorDeclaredType.asElement();
 			if (ancestorElement instanceof TypeElement) {
-				elements.add((TypeElement) ancestorElement);
 				addAncestorsElements(elements, (TypeElement) ancestorElement);
+				elements.add((TypeElement) ancestorElement);
 			}
 		}
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/process/ModelValidator.java
Patch:
@@ -16,7 +16,7 @@
 package org.androidannotations.internal.process;
 
 import java.util.ArrayList;
-import java.util.HashSet;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Set;
 
@@ -58,7 +58,7 @@ public AnnotationElements validate(AnnotationElements extractedModel, Annotation
 
 			Set<? extends Element> annotatedElements = extractedModel.getRootAnnotatedElements(annotationName);
 
-			Set<Element> validatedAnnotatedElements = new HashSet<>();
+			Set<Element> validatedAnnotatedElements = new LinkedHashSet<>();
 
 			validatingHolder.putRootAnnotatedElements(annotationName, validatedAnnotatedElements);
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/menu/R.java
Patch:
@@ -3,5 +3,8 @@
 public class R {
 	public static final class id {
 		public static final int menu = 0x7f06000a;
+		public static final int menu1 = 0x7f06000b;
+		public static final int menu2 = 0x7f06000c;
+		public static final int menu3 = 0x7f06000d;
 	}
 }

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringValidatorHelper.java
Patch:
@@ -570,7 +570,7 @@ public void elementHasOneOfRestMethodAnnotations(Element element, ElementValidat
 	}
 
 	public void usesSpringAndroid2(Element element, ElementValidation validation) {
-		if (environment().getProcessingEnvironment().getElementUtils().getTypeElement(RestSpringClasses.PARAMETERIZED_TYPE_REFERENCE) != null) {
+		if (environment().getProcessingEnvironment().getElementUtils().getTypeElement(RestSpringClasses.PARAMETERIZED_TYPE_REFERENCE) == null) {
 			validation.addError(element, "To use %s annotated method you must add Spring Android Rest Template 2.0 to your classpath");
 		}
 	}

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/logger/LoggerContext.java
Patch:
@@ -92,7 +92,7 @@ public void close() {
 	}
 
 	private void resolveLogLevel(AndroidAnnotationsEnvironment environment) {
-		Level level = Level.DEBUG;
+		Level level = Level.WARN;
 		try {
 			level = Level.parse(environment.getOptionValue(OPTION_LOG_LEVEL));
 		} catch (Exception ignored) {

File: AndroidAnnotations/androidannotations-core/androidannotations-api/src/main/java/org/androidannotations/annotations/Receiver.java
Patch:
@@ -151,9 +151,9 @@ enum RegisterAt {
 	 * <p>
 	 * Should be used on any native, {@link android.os.Parcelable} or
 	 * {@link java.io.Serializable} parameter of a method annotated with
-	 * {@link ReceiverAction} to inject the extra put in the intent parameter of
+	 * {@link Receiver} to inject the extra put in the intent parameter of
 	 * {@code void onReceive(Context context, Intent intent)}. The key of this
-	 * extra is the value of the annotation {@link ReceiverAction.Extra} if it
+	 * extra is the value of the annotation {@link Receiver.Extra} if it
 	 * is set or the name of the parameter.
 	 * If <a href="http://parceler.org">Parceler</a> is on the classpath, extras
 	 * annotated with &#064;Parcel, or collections supported by Parceler will be

File: AndroidAnnotations/androidannotations-core/androidannotations-test/src/main/java/org/androidannotations/test/GenericFragmentArguments.java
Patch:
@@ -15,6 +15,7 @@
  */
 package org.androidannotations.test;
 
+import java.io.Closeable;
 import java.io.Serializable;
 
 import org.androidannotations.annotations.EFragment;
@@ -24,7 +25,7 @@
 import android.app.Fragment;
 
 @EFragment
-public class GenericFragmentArguments<S extends Serializable, P extends Account> extends Fragment {
+public class GenericFragmentArguments<S extends Serializable & Closeable, P extends Account> extends Fragment {
 
 	@FragmentArg
 	S[] serializableArray;

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EBeanHolder.java
Patch:
@@ -88,7 +88,7 @@ public void createFactoryMethod(boolean hasSingletonScope) {
 
 		JMethod factoryMethod = generatedClass.method(PUBLIC | STATIC, narrowedGeneratedClass, GET_INSTANCE_METHOD_NAME);
 
-		codeModelHelper.generifyStaticHelper(factoryMethod, annotatedElement);
+		codeModelHelper.generify(factoryMethod, annotatedElement);
 
 		JVar factoryMethodContextParam = factoryMethod.param(getClasses().CONTEXT, "context");
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/EViewHolder.java
Patch:
@@ -82,7 +82,7 @@ private void createConstructorAndBuilder() {
 			JMethod copyConstructor = generatedClass.constructor(PUBLIC);
 			JMethod staticHelper = generatedClass.method(PUBLIC | STATIC, generatedClass._extends(), "build");
 
-			codeModelHelper.generifyStaticHelper(staticHelper, getAnnotatedElement());
+			codeModelHelper.generify(staticHelper, getAnnotatedElement());
 
 			JBlock body = copyConstructor.body();
 			JInvocation superCall = body.invoke("super");

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/ValidatorParameterHelper.java
Patch:
@@ -97,7 +97,7 @@ public void validate(ExecutableElement executableElement, ElementValidation vali
 		}
 
 		protected void invalidate(ElementValidation validation) {
-			validation.addError("%s can only have the following parameter: " + parameterRequirement);
+			validation.addError("method annotated with %s can only have the following parameter: " + parameterRequirement);
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/ValidatorParameterHelper.java
Patch:
@@ -120,7 +120,7 @@ public V extendsType(String qualifiedName) {
 		}
 
 		public V anyType() {
-			return extendsType(CanonicalNameConstants.OBJECT);
+			return param(new AnyTypeParameterRequirement());
 		}
 
 		public V annotatedWith(Class<? extends Annotation> annotationClass) {

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-test/src/main/java/org/androidannotations/rest/spring/test/MyService.java
Patch:
@@ -86,6 +86,9 @@ public interface MyService {
 	@Get("/events/{year}/{location}")
 	List<Event>[] getEventsGenericsArrayList(String location, int year) throws RestClientException;
 
+	@Get("/events/{year}/{location}")
+	List<Event>[][] getEventsGenericsArrayList2(String location, int year) throws RestClientException;
+
 	@Get("/events/{year}/{location}")
 	List<List<Event>> getEventsGenericsListListEvent(String location, int year) throws RestClientException;
 

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringClasses.java
Patch:
@@ -31,6 +31,7 @@ public final class RestSpringClasses {
 	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
 	public static final String NESTED_RUNTIME_EXCEPTION = "org.springframework.core.NestedRuntimeException";
 	public static final String RESPONSE_ERROR_HANDLER = "org.springframework.web.client.ResponseErrorHandler";
+	public static final String PARAMETERIZED_TYPE_REFERENCE = "org.springframework.core.ParameterizedTypeReference";
 
 	private RestSpringClasses() {
 

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-test/src/main/java/org/androidannotations/rest/spring/test/MyService.java
Patch:
@@ -86,6 +86,9 @@ public interface MyService {
 	@Get("/events/{year}/{location}")
 	List<Event>[] getEventsGenericsArrayList(String location, int year) throws RestClientException;
 
+	@Get("/events/{year}/{location}")
+	List<Event>[][] getEventsGenericsArrayList2(String location, int year) throws RestClientException;
+
 	@Get("/events/{year}/{location}")
 	List<List<Event>> getEventsGenericsListListEvent(String location, int year) throws RestClientException;
 

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringClasses.java
Patch:
@@ -31,6 +31,7 @@ public final class RestSpringClasses {
 	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
 	public static final String NESTED_RUNTIME_EXCEPTION = "org.springframework.core.NestedRuntimeException";
 	public static final String RESPONSE_ERROR_HANDLER = "org.springframework.web.client.ResponseErrorHandler";
+	public static final String PARAMETERIZED_TYPE_REFERENCE = "org.springframework.core.ParameterizedTypeReference";
 
 	private RestSpringClasses() {
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/ValidatorParameterHelper.java
Patch:
@@ -222,8 +222,9 @@ private boolean validate(VariableElement parameter) {
 			}
 			if (currentParameterRequirement.isSatisfied(parameter)) {
 				satisfiedParameterRequirements.add(currentParameterRequirement);
-			} else if (!currentParameterRequirement.multiple()) {
-				nextParameterRequirement();
+				if (!currentParameterRequirement.multiple()) {
+					nextParameterRequirement();
+				}
 			} else {
 				if (currentParameterRequirement.required() && !satisfiedParameterRequirements.contains(currentParameterRequirement)) {
 					return false;

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringClasses.java
Patch:
@@ -30,6 +30,7 @@ public final class RestSpringClasses {
 	public static final String HTTP_BASIC_AUTHENTICATION = "org.springframework.http.HttpBasicAuthentication";
 	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
 	public static final String NESTED_RUNTIME_EXCEPTION = "org.springframework.core.NestedRuntimeException";
+	public static final String RESPONSE_ERROR_HANDLER = "org.springframework.web.client.ResponseErrorHandler";
 
 	private RestSpringClasses() {
 

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring/src/main/java/org/androidannotations/rest/spring/helper/RestSpringClasses.java
Patch:
@@ -30,6 +30,7 @@ public final class RestSpringClasses {
 	public static final String HTTP_BASIC_AUTHENTICATION = "org.springframework.http.HttpBasicAuthentication";
 	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
 	public static final String NESTED_RUNTIME_EXCEPTION = "org.springframework.core.NestedRuntimeException";
+	public static final String RESPONSE_ERROR_HANDLER = "org.springframework.web.client.ResponseErrorHandler";
 
 	private RestSpringClasses() {
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifest.java
Patch:
@@ -58,7 +58,7 @@ private AndroidManifest(boolean libraryProject, String applicationPackage, Strin
 		this.minSdkVersion = minSdkVersion;
 		this.maxSdkVersion = maxSdkVersion;
 		this.targetSdkVersion = targetSdkVersion;
-		debugabble = debuggable;
+		this.debugabble = debuggable;
 	}
 
 	// CHECKSTYLE:ON

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/EBeanHandler.java
Patch:
@@ -39,6 +39,8 @@ public EBeanHolder createGeneratedClassHolder(AndroidAnnotationsEnvironment envi
 	public void validate(Element element, ElementValidation valid) {
 		super.validate(element, valid);
 
+		validatorHelper.isNotInterface((TypeElement) element, valid);
+
 		validatorHelper.isNotPrivate(element, valid);
 
 		validatorHelper.isAbstractOrHasEmptyOrContextConstructor(element, valid);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/EBeanHandler.java
Patch:
@@ -39,6 +39,8 @@ public EBeanHolder createGeneratedClassHolder(AndroidAnnotationsEnvironment envi
 	public void validate(Element element, ElementValidation valid) {
 		super.validate(element, valid);
 
+		validatorHelper.isNotInterface((TypeElement) element, valid);
+
 		validatorHelper.isNotPrivate(element, valid);
 
 		validatorHelper.isAbstractOrHasEmptyOrContextConstructor(element, valid);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -205,7 +205,7 @@ public JMethod overrideAnnotatedMethod(ExecutableElement executableElement, Gene
 		String methodName = executableElement.getSimpleName().toString();
 		JClass returnType = typeMirrorToJClass(executableElement.getReturnType(), actualTypes);
 		JMethod method = holder.getGeneratedClass().method(JMod.PUBLIC, returnType, methodName);
-		addNonAAAnotations(method, executableElement.getAnnotationMirrors());
+		addNonAAAnnotations(method, executableElement.getAnnotationMirrors());
 
 		if (!hasAnnotation(method, Override.class)) {
 			method.annotate(Override.class);
@@ -273,10 +273,10 @@ private void addParamToMethod(JMethod method, VariableElement parameter, int mod
 		String parameterName = parameter.getSimpleName().toString();
 		JClass parameterClass = typeMirrorToJClass(parameter.asType(), actualTypes);
 		JVar param = method.param(mod, parameterClass, parameterName);
-		addNonAAAnotations(param, parameter.getAnnotationMirrors());
+		addNonAAAnnotations(param, parameter.getAnnotationMirrors());
 	}
 
-	public void addNonAAAnotations(JAnnotatable annotatable, List<? extends AnnotationMirror> annotationMirrors) {
+	public void addNonAAAnnotations(JAnnotatable annotatable, List<? extends AnnotationMirror> annotationMirrors) {
 		for (AnnotationMirror annotationMirror : annotationMirrors) {
 			if (annotationMirror.getAnnotationType().asElement().getAnnotation(Inherited.class) == null) {
 				JClass annotationClass = typeMirrorToJClass(annotationMirror.getAnnotationType());

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/holder/BaseGeneratedClassHolder.java
Patch:
@@ -75,7 +75,7 @@ protected void setGeneratedClass() throws Exception {
 			generatedClass.generify(typeParam.getSimpleName().toString(), bound);
 		}
 		setExtends();
-		codeModelHelper.addNonAAAnotations(generatedClass, annotatedElement.getAnnotationMirrors());
+		codeModelHelper.addNonAAAnnotations(generatedClass, annotatedElement.getAnnotationMirrors());
 	}
 
 	public JClass getAnnotatedClass() {

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/helper/ModelConstants.java
Patch:
@@ -54,11 +54,11 @@ public static void init(AndroidAnnotationsEnvironment environment) {
 		classSuffix = environment.getOptionValue(OPTION_CLASS_SUFFIX).trim();
 
 		if (classSuffix.isEmpty()) {
-			throw new IllegalArgumentException("'" + classSuffix + "' may not be an emtpy string.");
+			throw new IllegalArgumentException("'" + classSuffix + "' may not be an empty string.");
 		}
 
 		if (!SourceVersion.isName(classSuffix) || classSuffix.contains(".")) {
-			throw new IllegalArgumentException("'" + classSuffix + "' is not a valid Java identifier.");
+			throw new IllegalArgumentException("'" + classSuffix + "' may not be a valid Java identifier.");
 		}
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/test/java/org/androidannotations/manifest/AndroidManifestFinderTest.java
Patch:
@@ -55,6 +55,7 @@ public void failsIfCannotFindSpecifiedManifest() {
 
 	@Test
 	public void findsManifestInGeneratedSourceParentFolder() throws Exception {
+		deleteManifestFromParentOfOutputDirectory();
 		copyManifestToParentOfOutputDirectory();
 		CompileResult result = compileFiles(SomeClass.class);
 		assertCompilationSuccessful(result);

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -57,7 +57,7 @@
 import org.androidannotations.process.ModelValidator;
 import org.androidannotations.process.TimeStats;
 import org.androidannotations.rclass.AndroidRClassFinder;
-import org.androidannotations.rclass.CoumpoundRClass;
+import org.androidannotations.rclass.CompoundRClass;
 import org.androidannotations.rclass.IRClass;
 import org.androidannotations.rclass.ProjectRClassFinder;
 
@@ -245,11 +245,11 @@ private Option<IRClass> findRClasses(AndroidManifest androidManifest) throws IOE
 			return Option.absent();
 		}
 
-		IRClass coumpoundRClass = new CoumpoundRClass(rClass.get(), androidRClass.get());
+		IRClass compoundRClass = new CompoundRClass(rClass.get(), androidRClass.get());
 
 		timeStats.stop("Find R Classes");
 
-		return Option.of(coumpoundRClass);
+		return Option.of(compoundRClass);
 	}
 
 	private AnnotationElements validateAnnotations(AnnotationElements extractedModel, AnnotationElementsHolder validatingHolder) throws ValidationException {

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/rclass/CompoundInnerClass.java
Patch:
@@ -19,12 +19,12 @@
 
 import com.sun.codemodel.JFieldRef;
 
-public class CoumpoundInnerClass implements IRInnerClass {
+public class CompoundInnerClass implements IRInnerClass {
 
 	private final IRInnerClass rInnerClass;
 	private final IRInnerClass androidRInnerClass;
 
-	public CoumpoundInnerClass(IRInnerClass rInnerClass, IRInnerClass androidRInnerClass) {
+	public CompoundInnerClass(IRInnerClass rInnerClass, IRInnerClass androidRInnerClass) {
 		this.rInnerClass = rInnerClass;
 		this.androidRInnerClass = androidRInnerClass;
 	}

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-api/src/main/java/org/androidannotations/rest/spring/api/RestClientErrorHandling.java
Patch:
@@ -19,13 +19,13 @@
  * A @Rest interface implementing this interface will automatically have the
  * implementations of this method generated.
  * 
- * @see org.androidannotations.annotations.rest.Rest
+ * @see org.androidannotations.rest.spring.annotations.Rest
  */
 public interface RestClientErrorHandling {
 	/**
 	 * Sets the error handler called when a rest error occurs.
 	 * 
-	 * @param handler {@link org.androidannotations.api.rest.RestErrorHandler}
+	 * @param handler {@link RestErrorHandler}
 	 *      which handle exception from rest service
 	 */
 	void setRestErrorHandler(RestErrorHandler handler);

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-api/src/main/java/org/androidannotations/rest/spring/api/RestClientRootUrl.java
Patch:
@@ -19,7 +19,7 @@
  * A @Rest interface implementing this interface will automatically have the
  * implementations of these methods generated.
  * 
- * @see org.androidannotations.annotations.rest.Rest
+ * @see org.androidannotations.rest.spring.annotations.Rest
  */
 public interface RestClientRootUrl {
 	/**

File: AndroidAnnotations/androidannotations-rest-spring/rest-spring-api/src/main/java/org/androidannotations/rest/spring/api/RestClientSupport.java
Patch:
@@ -21,7 +21,7 @@
  * A @Rest interface implementing this interface will automatically have the
  * implementations of these methods generated.
  * 
- * @see org.androidannotations.annotations.rest.Rest
+ * @see org.androidannotations.rest.spring.annotations.Rest
  */
 public interface RestClientSupport {
 	/**

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/generation/CodeModelGenerator.java
Patch:
@@ -28,8 +28,8 @@ public class CodeModelGenerator {
 
 	public CodeModelGenerator(Filer filer, String aaVersion) {
 		this.filer = filer;
-		this.header = "DO NOT EDIT THIS FILE."
-			+ "Generated using AndroidAnnotations " + aaVersion + ".\n "
+		this.header = "DO NOT EDIT THIS FILE.\n"
+			+ "Generated using AndroidAnnotations " + aaVersion + ".\n\n"
 			+ "You can create a larger work that contains this file and distribute that work under terms of your choice.\n";
 	}
 

File: AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/handler/EProviderHandler.java
Patch:
@@ -40,6 +40,8 @@ public EProviderHolder createGeneratedClassHolder(ProcessHolder processHolder, T
 	public void validate(Element element, AnnotationElements validatedElements, ElementValidation validation) {
 		super.validate(element, validatedElements, validation);
 
+		validatorHelper.extendsProvider(element, validation);
+
 		validatorHelper.componentRegistered(element, androidManifest, validation);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/AbstractPreferenceListenerHandler.java
Patch:
@@ -25,7 +25,7 @@
 import org.androidannotations.holder.FoundPreferenceHolder;
 import org.androidannotations.holder.HasPreferences;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.rclass.IRClass.Res;
 
 import com.sun.codemodel.JClass;
@@ -43,9 +43,9 @@ public AbstractPreferenceListenerHandler(String target, ProcessingEnvironment pr
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
-		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, valid);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/AbstractViewListenerHandler.java
Patch:
@@ -25,7 +25,7 @@
 import org.androidannotations.holder.EComponentWithViewSupportHolder;
 import org.androidannotations.holder.FoundViewHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.rclass.IRClass.Res;
 
 import com.sun.codemodel.JClass;
@@ -43,9 +43,9 @@ public AbstractViewListenerHandler(String target, ProcessingEnvironment processi
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
-		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, valid);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/AfterPreferencesHandler.java
Patch:
@@ -22,7 +22,7 @@
 import org.androidannotations.annotations.AfterPreferences;
 import org.androidannotations.holder.HasPreferences;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 
 public class AfterPreferencesHandler extends BaseAnnotationHandler<HasPreferences> {
 
@@ -31,8 +31,8 @@ public AfterPreferencesHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
-		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, valid);
 		validatorHelper.enclosingElementExtendsPreferenceActivityOrPreferenceFragment(element, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/EActivityHandler.java
Patch:
@@ -26,7 +26,7 @@
 import org.androidannotations.helper.IdValidatorHelper;
 import org.androidannotations.holder.EActivityHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.process.ProcessHolder;
 import org.androidannotations.rclass.IRClass;
 
@@ -49,7 +49,7 @@ public EActivityHolder createGeneratedClassHolder(ProcessHolder processHolder, T
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
 
 		validatorHelper.extendsActivity(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/EApplicationHandler.java
Patch:
@@ -22,7 +22,7 @@
 import org.androidannotations.annotations.EApplication;
 import org.androidannotations.holder.EApplicationHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.process.ProcessHolder;
 
 public class EApplicationHandler extends BaseGeneratingAnnotationHandler<EApplicationHolder> {
@@ -37,7 +37,7 @@ public EApplicationHolder createGeneratedClassHolder(ProcessHolder processHolder
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
 
 		validatorHelper.extendsApplication(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/EBeanHandler.java
Patch:
@@ -22,7 +22,7 @@
 import org.androidannotations.annotations.EBean;
 import org.androidannotations.holder.EBeanHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.process.ProcessHolder;
 
 public class EBeanHandler extends BaseGeneratingAnnotationHandler<EBeanHolder> {
@@ -37,7 +37,7 @@ public EBeanHolder createGeneratedClassHolder(ProcessHolder processHolder, TypeE
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraParameterHandler.java
Patch:
@@ -31,7 +31,6 @@
 import org.androidannotations.helper.CaseHelper;
 import org.androidannotations.holder.GeneratedClassHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
@@ -40,6 +39,8 @@
 import com.sun.codemodel.JFieldVar;
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
+import org.androidannotations.process.ElementValidation;
+
 
 public abstract class ExtraParameterHandler extends BaseAnnotationHandler<GeneratedClassHolder> {
 
@@ -53,7 +54,7 @@ public ExtraParameterHandler(Class<? extends Annotation> targetClass, Class<? ex
 	}
 
 	@Override
-	protected void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	protected void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		validatorHelper.enclosingMethodHasAnnotation(methodAnnotationClass, element, validatedElements, valid);
 
 		validatorHelper.canBePutInABundle(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/InjectMenuHandler.java
Patch:
@@ -22,7 +22,7 @@
 import org.androidannotations.annotations.InjectMenu;
 import org.androidannotations.holder.HasOptionsMenu;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
@@ -34,8 +34,8 @@ public InjectMenuHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
-		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, valid);
 
 		validatorHelper.isDeclaredType(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/PreferenceChangeHandler.java
Patch:
@@ -28,7 +28,6 @@
 import org.androidannotations.helper.CanonicalNameConstants;
 import org.androidannotations.holder.HasPreferences;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
@@ -39,6 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 import com.sun.codemodel.JVar;
+import org.androidannotations.process.ElementValidation;
 
 public class PreferenceChangeHandler extends AbstractPreferenceListenerHandler {
 
@@ -47,8 +47,9 @@ public PreferenceChangeHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
+
 		validatorHelper.enclosingElementExtendsPreferenceActivityOrPreferenceFragment(element, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/PreferenceClickHandler.java
Patch:
@@ -28,7 +28,7 @@
 import org.androidannotations.helper.CanonicalNameConstants;
 import org.androidannotations.holder.HasPreferences;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
@@ -46,7 +46,7 @@ public PreferenceClickHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
 		validatorHelper.enclosingElementExtendsPreferenceActivityOrPreferenceFragment(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/PreferenceHeadersHandler.java
Patch:
@@ -23,7 +23,7 @@
 import org.androidannotations.helper.IdValidatorHelper;
 import org.androidannotations.holder.HasPreferenceHeaders;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.rclass.IRClass;
 
 import com.sun.codemodel.JBlock;
@@ -41,10 +41,10 @@ public PreferenceHeadersHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	protected void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	protected void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		validatorHelper.isPreferenceFragmentClassPresent(element, valid);
 		validatorHelper.extendsPreferenceActivity(element, valid);
-		validatorHelper.hasEActivity(element, validatedElements, valid);
+		validatorHelper.hasEActivity(element, valid);
 		validatorHelper.resIdsExist(element, IRClass.Res.XML, IdValidatorHelper.FallbackStrategy.NEED_RES_ID, valid);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/PreferenceScreenHandler.java
Patch:
@@ -23,7 +23,7 @@
 import org.androidannotations.helper.IdValidatorHelper;
 import org.androidannotations.holder.HasPreferences;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 import org.androidannotations.rclass.IRClass;
 
 import com.sun.codemodel.JFieldRef;
@@ -38,9 +38,9 @@ public PreferenceScreenHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	protected void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	protected void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		validatorHelper.extendsPreferenceActivityOrPreferenceFragment(element, valid);
-		validatorHelper.hasEActivityOrEFragment(element, validatedElements, valid);
+		validatorHelper.hasEActivityOrEFragment(element, valid);
 		validatorHelper.resIdsExist(element, IRClass.Res.XML, IdValidatorHelper.FallbackStrategy.NEED_RES_ID, valid);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ProduceHandler.java
Patch:
@@ -23,7 +23,7 @@
 import org.androidannotations.helper.TargetAnnotationHelper;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 
 public class ProduceHandler extends BaseAnnotationHandler<EComponentHolder> {
 
@@ -35,7 +35,7 @@ public ProduceHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		if (!annotationHelper.enclosingElementHasEnhancedComponentAnnotation(element)) {
 			valid.invalidate();
 			return;
@@ -46,7 +46,7 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 		/*
 		 * We check that twice to skip invalid annotated elements
 		 */
-		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(executableElement, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(executableElement, valid);
 
 		validatorHelper.returnTypeIsNotVoid(executableElement, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/SubscribeHandler.java
Patch:
@@ -23,7 +23,7 @@
 import org.androidannotations.helper.TargetAnnotationHelper;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 
 public class SubscribeHandler extends BaseAnnotationHandler<EComponentHolder> {
 
@@ -35,7 +35,7 @@ public SubscribeHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		if (!annotationHelper.enclosingElementHasEnhancedComponentAnnotation(element)) {
 			valid.invalidate();
 			return;
@@ -46,7 +46,7 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 		/*
 		 * We check that twice to skip invalid annotated elements
 		 */
-		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(executableElement, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(executableElement, valid);
 
 		validatorHelper.returnTypeIsVoid(executableElement, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/UiThreadHandler.java
Patch:
@@ -26,7 +26,7 @@
 import org.androidannotations.api.UiThreadExecutor;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
-import org.androidannotations.process.IsValid;
+import org.androidannotations.process.ElementValidation;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
@@ -49,7 +49,7 @@ public UiThreadHandler(ProcessingEnvironment processingEnvironment) {
 	}
 
 	@Override
-	public void validate(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void validate(Element element, AnnotationElements validatedElements, ElementValidation valid) {
 		super.validate(element, validatedElements, valid);
 
 		validatorHelper.usesEnqueueIfHasId(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/FragmentArgHandler.java
Patch:
@@ -109,7 +109,7 @@ private void createBuilderInjectionMethod(Element element, EFragmentHolder holde
 		TypeMirror type = codeModelHelper.getActualType(element, holder);
 		JClass paramClass = codeModelHelper.typeMirrorToJClass(type, holder);
 
-		JMethod method = builderClass.method(PUBLIC, builderClass, fieldName);
+		JMethod method = builderClass.method(PUBLIC, holder.narrow(builderClass), fieldName);
 		JVar arg = method.param(paramClass, fieldName);
 		method.body().invoke(builderArgsField, bundleHelper.getMethodNameToSave()).arg(argKeyStaticField).arg(arg);
 		method.body()._return(_this());

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -62,7 +62,7 @@ public RestHolder(ProcessHolder processHolder, TypeElement annotatedElement) thr
 	protected void setExtends() {
 		String annotatedComponentQualifiedName = annotatedElement.getQualifiedName().toString();
 		JClass annotatedComponent = codeModel().directClass(annotatedComponentQualifiedName);
-		generatedClass._implements(annotatedComponent);
+		generatedClass._implements(narrow(annotatedComponent));
 	}
 
 	private void implementMethods() {
@@ -286,7 +286,8 @@ private void setAuthenticationField() {
 	}
 
 	public JFieldVar getRestErrorHandlerField() {
-		// restErrorHandlerField is created only if the method setRestErrorHandler is implemented
+		// restErrorHandlerField is created only if the method
+		// setRestErrorHandler is implemented
 		return restErrorHandlerField;
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -62,7 +62,7 @@ public RestHolder(ProcessHolder processHolder, TypeElement annotatedElement) thr
 	protected void setExtends() {
 		String annotatedComponentQualifiedName = annotatedElement.getQualifiedName().toString();
 		JClass annotatedComponent = codeModel().directClass(annotatedComponentQualifiedName);
-		generatedClass._implements(annotatedComponent);
+		generatedClass._implements(narrow(annotatedComponent));
 	}
 
 	private void implementMethods() {
@@ -286,7 +286,8 @@ private void setAuthenticationField() {
 	}
 
 	public JFieldVar getRestErrorHandlerField() {
-		// restErrorHandlerField is created only if the method setRestErrorHandler is implemented
+		// restErrorHandlerField is created only if the method
+		// setRestErrorHandler is implemented
 		return restErrorHandlerField;
 	}
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EFragment.java
Patch:
@@ -22,9 +22,8 @@
 
 /**
  * <p>
- * Should be used on android.app.Fragment or link
- * android.support.v4.app.Fragment classes to enable usage of
- * AndroidAnnotations.
+ * Should be used on android.app.Fragment or android.support.v4.app.Fragment
+ * classes to enable usage of AndroidAnnotations.
  * </p>
  * <p>
  * Your code related to injected beans should go in an {@link AfterInject}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/OptionsMenuItemHandler.java
Patch:
@@ -15,7 +15,7 @@
  */
 package org.androidannotations.handler;
 
-import static com.sun.codemodel.JExpr.ref;
+import static com.sun.codemodel.JExpr._this;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
@@ -68,6 +68,6 @@ public void process(Element element, HasOptionsMenu holder) {
 		JVar menuParam = holder.getOnCreateOptionsMenuMenuParam();
 
 		JFieldRef idsRef = annotationHelper.extractOneAnnotationFieldRef(processHolder, element, IRClass.Res.ID, true);
-		body.assign(ref(fieldName), menuParam.invoke("findItem").arg(idsRef));
+		body.assign(_this().ref(fieldName), menuParam.invoke("findItem").arg(idsRef));
 	}
 }

File: AndroidAnnotations/functional-test-1-5/src/test/java/org/androidannotations/test15/WakeLockActivityTest.java
Patch:
@@ -31,7 +31,7 @@
 import android.os.PowerManager;
 import android.os.PowerManager.WakeLock;
 
-@Config(manifest = "../functional-test-1-5/AndroidManifest.xml", shadows = CustomShadowPowerManager.class)
+@Config(shadows = CustomShadowPowerManager.class)
 @RunWith(RobolectricTestRunner.class)
 public class WakeLockActivityTest {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/OptionsMenuItemHandler.java
Patch:
@@ -15,7 +15,7 @@
  */
 package org.androidannotations.handler;
 
-import static com.sun.codemodel.JExpr.ref;
+import static com.sun.codemodel.JExpr._this;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
@@ -68,6 +68,6 @@ public void process(Element element, HasOptionsMenu holder) {
 		JVar menuParam = holder.getOnCreateOptionsMenuMenuParam();
 
 		JFieldRef idsRef = annotationHelper.extractOneAnnotationFieldRef(processHolder, element, IRClass.Res.ID, true);
-		body.assign(ref(fieldName), menuParam.invoke("findItem").arg(idsRef));
+		body.assign(_this().ref(fieldName), menuParam.invoke("findItem").arg(idsRef));
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifestFinder.java
Patch:
@@ -133,7 +133,7 @@ private Option<File> findManifestInParentsDirectories() {
 		}
 
 		if (!androidManifestFile.exists()) {
-			LOGGER.error("Could not find the AndroidManifest.xml file, going up from path [{}] found using dummy file [] (max atempts: {})", projectRootHolder.sourcesGenerationFolder.getAbsolutePath(), projectRootHolder.dummySourceFilePath, MAX_PARENTS_FROM_SOURCE_FOLDER);
+			LOGGER.error("Could not find the AndroidManifest.xml file, going up from path [{}] found using dummy file [] (max attempts: {})", projectRootHolder.sourcesGenerationFolder.getAbsolutePath(), projectRootHolder.dummySourceFilePath, MAX_PARENTS_FROM_SOURCE_FOLDER);
 			return Option.absent();
 		} else {
 			LOGGER.debug("AndroidManifest.xml file found in parent folder {}: {}", projectRoot.getAbsolutePath(), androidManifestFile.toString());

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -116,6 +116,7 @@ public final class CanonicalNameConstants {
 	public static final String SUPPORT_V4_PREFERENCE_FRAGMENT = "android.support.v4.preference.PreferenceFragment";
 	public static final String MACHINARIUS_V4_PREFERENCE_FRAGMENT = "com.github.machinarius.preferencefragment.PreferenceFragment";
 	public static final String ACTIVITY_COMPAT = "android.support.v4.app.ActivityCompat";
+	public static final String CONTEXT_COMPAT = "android.support.v4.content.ContextCompat";
 	public static final String PREFERENCE = "android.preference.Preference";
 	public static final String PREFERENCE_CHANGE_LISTENER = "android.preference.Preference.OnPreferenceChangeListener";
 	public static final String PREFERENCE_CLICK_LISTENER = "android.preference.Preference.OnPreferenceClickListener";

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/process/ProcessHolder.java
Patch:
@@ -122,6 +122,7 @@ public class Classes {
 		public final JClass BUILD_VERSION = refClass(CanonicalNameConstants.BUILD_VERSION);
 		public final JClass BUILD_VERSION_CODES = refClass(CanonicalNameConstants.BUILD_VERSION_CODES);
 		public final JClass ACTIVITY_COMPAT = refClass(CanonicalNameConstants.ACTIVITY_COMPAT);
+		public final JClass CONTEXT_COMPAT = refClass(CanonicalNameConstants.CONTEXT_COMPAT);
 		public final JClass APP_WIDGET_MANAGER = refClass(CanonicalNameConstants.APP_WIDGET_MANAGER);
 
 		public final JClass PREFERENCE = refClass(CanonicalNameConstants.PREFERENCE);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -118,7 +118,7 @@ public class ValidatorHelper {
 	private static final List<Receiver.RegisterAt> VALID_SERVICE_REGISTER_AT = Arrays.asList(Receiver.RegisterAt.OnCreateOnDestroy);
 	private static final List<Receiver.RegisterAt> VALID_FRAGMENT_REGISTER_AT = Arrays.asList(Receiver.RegisterAt.OnCreateOnDestroy, Receiver.RegisterAt.OnResumeOnPause, Receiver.RegisterAt.OnStartOnStop, Receiver.RegisterAt.OnAttachOnDetach);
 
-	private static final List<String> VALID_PREFERENCE_CLASSES = asList(CanonicalNameConstants.PREFERENCE_ACTIVITY, CanonicalNameConstants.PREFERENCE_FRAGMENT);
+	private static final List<String> VALID_PREFERENCE_CLASSES = asList(CanonicalNameConstants.PREFERENCE_ACTIVITY, CanonicalNameConstants.PREFERENCE_FRAGMENT, CanonicalNameConstants.SUPPORT_V4_PREFERENCE_FRAGMENT, CanonicalNameConstants.MACHINARIUS_V4_PREFERENCE_FRAGMENT);
 
 	protected final TargetAnnotationHelper annotationHelper;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EActivityHolder.java
Patch:
@@ -778,7 +778,7 @@ protected JFieldVar setDatabaseHelperRef(TypeMirror databaseHelperTypeMirror) {
 
 	@Override
 	public JBlock getPreferenceScreenInitializationBlock() {
-		return getInitBody();
+		return getOnCreate().body();
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -116,7 +116,7 @@ public class ValidatorHelper {
 	private static final List<Receiver.RegisterAt> VALID_SERVICE_REGISTER_AT = Arrays.asList(Receiver.RegisterAt.OnCreateOnDestroy);
 	private static final List<Receiver.RegisterAt> VALID_FRAGMENT_REGISTER_AT = Arrays.asList(Receiver.RegisterAt.OnCreateOnDestroy, Receiver.RegisterAt.OnResumeOnPause, Receiver.RegisterAt.OnStartOnStop, Receiver.RegisterAt.OnAttachOnDetach);
 
-	private static final List<String> VALID_PREFERENCE_CLASSES = asList(CanonicalNameConstants.PREFERENCE_ACTIVITY, CanonicalNameConstants.PREFERENCE_FRAGMENT);
+	private static final List<String> VALID_PREFERENCE_CLASSES = asList(CanonicalNameConstants.PREFERENCE_ACTIVITY, CanonicalNameConstants.PREFERENCE_FRAGMENT, CanonicalNameConstants.SUPPORT_V4_PREFERENCE_FRAGMENT, CanonicalNameConstants.MACHINARIUS_V4_PREFERENCE_FRAGMENT);
 
 	protected final TargetAnnotationHelper annotationHelper;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EActivityHolder.java
Patch:
@@ -778,7 +778,7 @@ protected JFieldVar setDatabaseHelperRef(TypeMirror databaseHelperTypeMirror) {
 
 	@Override
 	public JBlock getPreferenceScreenInitializationBlock() {
-		return getInitBody();
+		return getOnCreate().body();
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -113,6 +113,8 @@ public final class CanonicalNameConstants {
 	public static final String BUILD_VERSION_CODES = "android.os.Build.VERSION_CODES";
 	public static final String PREFERENCE_ACTIVITY = "android.preference.PreferenceActivity";
 	public static final String PREFERENCE_FRAGMENT = "android.preference.PreferenceFragment";
+	public static final String SUPPORT_V4_PREFERENCE_FRAGMENT = "android.support.v4.preference.PreferenceFragment";
+	public static final String MACHINARIUS_V4_PREFERENCE_FRAGMENT = "com.github.machinarius.preferencefragment.PreferenceFragment";
 	public static final String ACTIVITY_COMPAT = "android.support.v4.app.ActivityCompat";
 	public static final String PREFERENCE = "android.preference.Preference";
 	public static final String PREFERENCE_CHANGE_LISTENER = "android.preference.Preference.OnPreferenceChangeListener";

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -116,7 +116,7 @@ public class ValidatorHelper {
 	private static final List<Receiver.RegisterAt> VALID_SERVICE_REGISTER_AT = Arrays.asList(Receiver.RegisterAt.OnCreateOnDestroy);
 	private static final List<Receiver.RegisterAt> VALID_FRAGMENT_REGISTER_AT = Arrays.asList(Receiver.RegisterAt.OnCreateOnDestroy, Receiver.RegisterAt.OnResumeOnPause, Receiver.RegisterAt.OnStartOnStop, Receiver.RegisterAt.OnAttachOnDetach);
 
-	private static final List<String> VALID_PREFERENCE_CLASSES = asList(CanonicalNameConstants.PREFERENCE_ACTIVITY, CanonicalNameConstants.PREFERENCE_FRAGMENT);
+	private static final List<String> VALID_PREFERENCE_CLASSES = asList(CanonicalNameConstants.PREFERENCE_ACTIVITY, CanonicalNameConstants.PREFERENCE_FRAGMENT, CanonicalNameConstants.SUPPORT_V4_PREFERENCE_FRAGMENT, CanonicalNameConstants.MACHINARIUS_V4_PREFERENCE_FRAGMENT);
 
 	protected final TargetAnnotationHelper annotationHelper;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -44,6 +44,8 @@ public final class CanonicalNameConstants {
 	public static final String SQL_EXCEPTION = SQLException.class.getCanonicalName();
 	public static final String INTEGER = Integer.class.getCanonicalName();
 	public static final String BOOLEAN = Boolean.class.getCanonicalName();
+	public static final String FLOAT = Float.class.getCanonicalName();
+	public static final String LONG = Long.class.getCanonicalName();
 	public static final String ARRAYLIST = ArrayList.class.getCanonicalName();
 	public static final String SERIALIZABLE = Serializable.class.getCanonicalName();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EActivityHolder.java
Patch:
@@ -778,7 +778,7 @@ protected JFieldVar setDatabaseHelperRef(TypeMirror databaseHelperTypeMirror) {
 
 	@Override
 	public JBlock getPreferenceScreenInitializationBlock() {
-		return getInitBody();
+		return getOnCreate().body();
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EActivityHolder.java
Patch:
@@ -778,7 +778,7 @@ protected JFieldVar setDatabaseHelperRef(TypeMirror databaseHelperTypeMirror) {
 
 	@Override
 	public JBlock getPreferenceScreenInitializationBlock() {
-		return getInitBody();
+		return getOnCreate().body();
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/PreferenceChange.java
Patch:
@@ -41,9 +41,9 @@
  * <ul>
  * <li>A {@link android.preference.Preference Preference} parameter to know
  * which preference was targeted by this event</li>
- * <li>An {@link Object} or {@link java.util.Set Set of strings} or
- * {@link Boolean} or {@link String} to obtain the new value of the
- * {@link android.preference.Preference Preference}</li>
+ * <li>An {@link Object}, {@link String}, {@link java.util.Set Set of strings}
+ * and also a {@link Boolean} or <code>boolean</code> to obtain the new value of
+ * the {@link android.preference.Preference Preference}</li>
  * </ul>
  * <blockquote>
  * 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorParameterHelper.java
Patch:
@@ -36,7 +36,7 @@ public class ValidatorParameterHelper {
 
 	private static final List<String> ANDROID_SHERLOCK_MENU_ITEM_QUALIFIED_NAMES = asList(CanonicalNameConstants.MENU_ITEM, CanonicalNameConstants.SHERLOCK_MENU_ITEM);
 	private static final List<String> EDITOR_ACTION_ALLOWED_PARAMETER_TYPES = asList(CanonicalNameConstants.TEXT_VIEW, CanonicalNameConstants.INTEGER, "int", CanonicalNameConstants.KEY_EVENT);
-	private static final List<String> PREFERENCE_CHANGE_ALLOWED_NEWVALUE_PARAM = asList(CanonicalNameConstants.OBJECT, CanonicalNameConstants.SET, CanonicalNameConstants.STRING, CanonicalNameConstants.BOOLEAN);
+	private static final List<String> PREFERENCE_CHANGE_ALLOWED_NEWVALUE_PARAM = asList(CanonicalNameConstants.OBJECT, CanonicalNameConstants.STRING_SET, CanonicalNameConstants.STRING, CanonicalNameConstants.BOOLEAN);
 
 	protected final TargetAnnotationHelper annotationHelper;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -37,6 +37,7 @@
 import org.androidannotations.helper.AndroidManifest;
 import org.androidannotations.helper.AndroidManifestFinder;
 import org.androidannotations.helper.ErrorHelper;
+import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.helper.Option;
 import org.androidannotations.helper.OptionsHelper;
 import org.androidannotations.logger.Level;
@@ -69,6 +70,8 @@ public class AndroidAnnotationProcessor extends AbstractProcessor {
 	public synchronized void init(ProcessingEnvironment processingEnv) {
 		super.init(processingEnv);
 
+		ModelConstants.init(processingEnv);
+
 		// Configure Logger
 		LoggerContext loggerContext = LoggerContext.getInstance();
 		loggerContext.setProcessingEnv(processingEnv);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/AppHandler.java
Patch:
@@ -16,13 +16,13 @@
 package org.androidannotations.handler;
 
 import static com.sun.codemodel.JExpr.ref;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 
 import org.androidannotations.annotations.App;
 import org.androidannotations.annotations.EApplication;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.EApplicationHolder;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
@@ -49,7 +49,7 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 	public void process(Element element, EComponentHolder holder) {
 		String fieldName = element.getSimpleName().toString();
 		String applicationQualifiedName = element.asType().toString();
-		JClass applicationClass = refClass(applicationQualifiedName + ModelConstants.GENERATION_SUFFIX);
+		JClass applicationClass = refClass(applicationQualifiedName + classSuffix());
 
 		holder.getInitBody().assign(ref(fieldName), applicationClass.staticInvoke(EApplicationHolder.GET_APPLICATION_INSTANCE));
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/NonConfigurationInstanceHandler.java
Patch:
@@ -18,7 +18,7 @@
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
@@ -91,7 +91,7 @@ private void rebindContextIfBean(Element element, JBlock initIfNonConfigurationN
 				elementType = element.asType();
 			}
 			String typeQualifiedName = elementType.toString();
-			JClass fieldGeneratedBeanClass = refClass(typeQualifiedName + GENERATION_SUFFIX);
+			JClass fieldGeneratedBeanClass = refClass(typeQualifiedName + classSuffix());
 
 			initIfNonConfigurationNotNullBlock.invoke(cast(fieldGeneratedBeanClass, field), "rebind").arg(_this());
 		}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ReceiverHandler.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.List;
 
@@ -30,7 +31,6 @@
 
 import org.androidannotations.annotations.Receiver;
 import org.androidannotations.helper.APTCodeModelHelper;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.HasReceiverRegistration;
 import org.androidannotations.holder.ReceiverRegistrationHolder.IntentFilterData;
 import org.androidannotations.model.AnnotationElements;
@@ -82,7 +82,7 @@ protected void validate(Element element, AnnotationElements validatedElements, I
 	public void process(Element element, HasReceiverRegistration holder) throws Exception {
 
 		String methodName = element.getSimpleName().toString();
-		String receiverName = methodName + "Receiver" + ModelConstants.GENERATION_SUFFIX;
+		String receiverName = methodName + "Receiver" + generationSuffix();
 
 		Receiver annotation = element.getAnnotation(Receiver.class);
 		String[] actions = annotation.actions();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/RoboGuiceHandler.java
Patch:
@@ -19,6 +19,7 @@
 import static com.sun.codemodel.JExpr._super;
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JExpr.invoke;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -96,7 +97,7 @@ private void listenerFields(Element element, EActivityHolder holder) {
 		int i = 1;
 		for (TypeMirror listenterTypeMirror : listenerTypeMirrors) {
 			JClass listenerClass = codeModelHelper.typeMirrorToJClass(listenterTypeMirror, holder);
-			JFieldVar listener = holder.getGeneratedClass().field(JMod.PRIVATE, listenerClass, "listener" + i + "_");
+			JFieldVar listener = holder.getGeneratedClass().field(JMod.PRIVATE, listenerClass, "listener" + i + generationSuffix());
 			codeModelHelper.addSuppressWarnings(listener, "unused");
 			listener.annotate(classes().INJECT);
 			i++;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/rest/RestServiceHandler.java
Patch:
@@ -15,14 +15,15 @@
  */
 package org.androidannotations.handler.rest;
 
+import static org.androidannotations.helper.ModelConstants.classSuffix;
+
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.rest.Rest;
 import org.androidannotations.annotations.rest.RestService;
 import org.androidannotations.handler.BaseAnnotationHandler;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
@@ -53,7 +54,7 @@ public void process(Element element, EComponentHolder holder) {
 		TypeMirror fieldTypeMirror = element.asType();
 		String interfaceName = fieldTypeMirror.toString();
 
-		String generatedClassName = interfaceName + ModelConstants.GENERATION_SUFFIX;
+		String generatedClassName = interfaceName + classSuffix();
 
 		JBlock methodBody = holder.getInitBody();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -17,7 +17,7 @@
 
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr.lit;
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import java.io.StringWriter;
 import java.lang.annotation.Annotation;
@@ -498,7 +498,7 @@ private ExecutableElement getMethod(List<ExecutableElement> methods, String meth
 	public JInvocation newBeanOrEBean(GeneratedClassHolder holder, DeclaredType beanType, JVar contextVar) {
 		if (beanType.asElement().getAnnotation(EBean.class) != null) {
 			String typeQualifiedName = beanType.toString();
-			JClass injectedClass = holder.refClass(typeQualifiedName + GENERATION_SUFFIX);
+			JClass injectedClass = holder.refClass(typeQualifiedName + classSuffix());
 			return injectedClass.staticInvoke(EBeanHolder.GET_INSTANCE_METHOD_NAME).arg(contextVar);
 		} else {
 			return _new(holder.refClass(beanType.toString()));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ActivityIntentBuilder.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
 import static com.sun.codemodel.JMod.STATIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.List;
 
@@ -93,10 +94,10 @@ protected JClass getSuperClass() {
 
 	private void createAdditionalConstructor() {
 		if (hasFragmentInClasspath()) {
-			fragmentField = addFragmentConstructor(holder.classes().FRAGMENT, "fragment_");
+			fragmentField = addFragmentConstructor(holder.classes().FRAGMENT, "fragment" + generationSuffix());
 		}
 		if (hasFragmentSupportInClasspath()) {
-			fragmentSupportField = addFragmentConstructor(holder.classes().SUPPORT_V4_FRAGMENT, "fragmentSupport_");
+			fragmentSupportField = addFragmentConstructor(holder.classes().SUPPORT_V4_FRAGMENT, "fragmentSupport" + generationSuffix());
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AnnotationHelper.java
Patch:
@@ -15,8 +15,8 @@
  */
 package org.androidannotations.helper;
 
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
 import static org.androidannotations.helper.ModelConstants.VALID_ENHANCED_COMPONENT_ANNOTATIONS;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import java.lang.annotation.Annotation;
 import java.lang.reflect.InvocationTargetException;
@@ -92,9 +92,9 @@ public String generatedClassQualifiedNameFromQualifiedName(String qualifiedName)
 		TypeElement type = typeElementFromQualifiedName(qualifiedName);
 		if (type.getNestingKind() == NestingKind.MEMBER) {
 			String parentGeneratedClass = generatedClassQualifiedNameFromQualifiedName(type.getEnclosingElement().asType().toString());
-			return parentGeneratedClass + "." + type.getSimpleName().toString() + GENERATION_SUFFIX;
+			return parentGeneratedClass + "." + type.getSimpleName().toString() + classSuffix();
 		} else {
-			return qualifiedName + GENERATION_SUFFIX;
+			return qualifiedName + classSuffix();
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/IntentBuilder.java
Patch:
@@ -13,6 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
+
 package org.androidannotations.helper;
 
 import static com.sun.codemodel.JExpr._new;
@@ -24,6 +25,7 @@
 import static org.androidannotations.helper.CanonicalNameConstants.PARCELABLE;
 import static org.androidannotations.helper.CanonicalNameConstants.SERIALIZABLE;
 import static org.androidannotations.helper.CanonicalNameConstants.STRING;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -77,7 +79,7 @@ public void build() throws JClassAlreadyExistsException {
 	}
 
 	private void createClass() throws JClassAlreadyExistsException {
-		builderClass = holder.getGeneratedClass()._class(PUBLIC | STATIC, "IntentBuilder_");
+		builderClass = holder.getGeneratedClass()._class(PUBLIC | STATIC, "IntentBuilder" + generationSuffix());
 		builderClass._extends(getSuperClass());
 		holder.setIntentBuilderClass(builderClass);
 		contextField = ref("context");

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ViewNotifierHelper.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import org.androidannotations.api.view.HasViews;
 import org.androidannotations.api.view.OnViewChangedNotifier;
@@ -47,7 +48,7 @@ public void invokeViewChanged(JBlock block) {
 	public JVar replacePreviousNotifier(JBlock block) {
 		JClass notifierClass = holder.refClass(OnViewChangedNotifier.class);
 		if (notifier == null) {
-			notifier = holder.getGeneratedClass().field(PRIVATE | FINAL, notifierClass, "onViewChangedNotifier_", _new(notifierClass));
+			notifier = holder.getGeneratedClass().field(PRIVATE | FINAL, notifierClass, "onViewChangedNotifier" + generationSuffix(), _new(notifierClass));
 			holder.getGeneratedClass()._implements(HasViews.class);
 		}
 		return block.decl(notifierClass, "previousNotifier", notifierClass.staticInvoke("replaceNotifier").arg(notifier));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EApplicationHolder.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
 import static com.sun.codemodel.JMod.STATIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 
@@ -47,7 +48,7 @@ public EApplicationHolder(ProcessHolder processHolder, TypeElement annotatedElem
 	private void createSingleton() {
 		JClass annotatedComponent = generatedClass._extends();
 
-		staticInstanceField = generatedClass.field(PRIVATE | STATIC, annotatedComponent, "INSTANCE_");
+		staticInstanceField = generatedClass.field(PRIVATE | STATIC, annotatedComponent, "INSTANCE" + generationSuffix());
 		// Static singleton getter and setter
 		JMethod getInstance = generatedClass.method(PUBLIC | STATIC, annotatedComponent, GET_APPLICATION_INSTANCE);
 		getInstance.body()._return(staticInstanceField);
@@ -74,6 +75,6 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EProviderHolder.java
Patch:
@@ -19,6 +19,7 @@
 import static com.sun.codemodel.JExpr.invoke;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 
@@ -40,7 +41,7 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 		createOnCreate();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EReceiverHolder.java
Patch:
@@ -17,6 +17,7 @@
 
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 
@@ -50,7 +51,7 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 		contextRef = init.param(classes().CONTEXT, "context");
 		if (onReceiveMethod == null) {
 			createOnReceive();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EServiceHolder.java
Patch:
@@ -18,6 +18,7 @@
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.TypeMirror;
@@ -61,7 +62,7 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 		setOnCreate();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/InstanceStateHolder.java
Patch:
@@ -19,6 +19,7 @@
 import static com.sun.codemodel.JExpr.ref;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.TypeElement;
@@ -63,7 +64,7 @@ public JVar getSaveStateBundleParam() {
 	private void setSaveStateMethod() {
 		JMethod method = getGeneratedClass().method(PUBLIC, codeModel().VOID, "onSaveInstanceState");
 		method.annotate(Override.class);
-		saveStateBundleParam = method.param(classes().BUNDLE, "bundle_");
+		saveStateBundleParam = method.param(classes().BUNDLE, "bundle" + generationSuffix());
 
 		saveStateMethodBody = method.body();
 
@@ -87,7 +88,7 @@ public JVar getRestoreStateBundleParam() {
 	}
 
 	private void setRestoreStateMethod() {
-		restoreStateMethod = getGeneratedClass().method(PRIVATE, codeModel().VOID, "restoreSavedInstanceState_");
+		restoreStateMethod = getGeneratedClass().method(PRIVATE, codeModel().VOID, "restoreSavedInstanceState" + generationSuffix());
 		restoreStateBundleParam = restoreStateMethod.param(classes().BUNDLE, "savedInstanceState");
 		getInit().body().invoke(restoreStateMethod).arg(restoreStateBundleParam);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/ReceiverRegistrationHolder.java
Patch:
@@ -18,6 +18,7 @@
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.Arrays;
 import java.util.HashMap;
@@ -26,7 +27,6 @@
 import java.util.Set;
 
 import org.androidannotations.annotations.Receiver.RegisterAt;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.process.ProcessHolder;
 
 import com.sun.codemodel.JBlock;
@@ -53,7 +53,7 @@ public JFieldVar getIntentFilterField(IntentFilterData intentFilterData) {
 	}
 
 	private JFieldVar createIntentFilterField(IntentFilterData intentFilterData) {
-		String intentFilterName = "intentFilter" + (intentFilterFields.size() + 1) + ModelConstants.GENERATION_SUFFIX;
+		String intentFilterName = "intentFilter" + (intentFilterFields.size() + 1) + generationSuffix();
 		JExpression newIntentFilterExpr = _new(classes().INTENT_FILTER);
 		JFieldVar intentFilterField = getGeneratedClass().field(PRIVATE | FINAL, classes().INTENT_FILTER, intentFilterName, newIntentFilterExpr);
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/utils/AAProcessorTestHelper.java
Patch:
@@ -15,9 +15,9 @@
  */
 package org.androidannotations.utils;
 
-import java.io.File;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
-import org.androidannotations.helper.ModelConstants;
+import java.io.File;
 
 public class AAProcessorTestHelper extends ProcessorTestHelper {
 
@@ -31,7 +31,7 @@ public void addManifestProcessorParameter(Class<?> classOfPackagingContainingMan
 	}
 
 	public File toGeneratedFile(Class<?> compiledClass) {
-		File output = new File(OUTPUT_DIRECTORY, toPath(compiledClass.getPackage()) + "/" + compiledClass.getSimpleName() + ModelConstants.GENERATION_SUFFIX + SOURCE_FILE_SUFFIX);
+		File output = new File(OUTPUT_DIRECTORY, toPath(compiledClass.getPackage()) + "/" + compiledClass.getSimpleName() + classSuffix() + SOURCE_FILE_SUFFIX);
 		return output;
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -37,6 +37,7 @@
 import org.androidannotations.helper.AndroidManifest;
 import org.androidannotations.helper.AndroidManifestFinder;
 import org.androidannotations.helper.ErrorHelper;
+import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.helper.Option;
 import org.androidannotations.helper.OptionsHelper;
 import org.androidannotations.logger.Level;
@@ -69,6 +70,8 @@ public class AndroidAnnotationProcessor extends AbstractProcessor {
 	public synchronized void init(ProcessingEnvironment processingEnv) {
 		super.init(processingEnv);
 
+		ModelConstants.init(processingEnv);
+
 		// Configure Logger
 		LoggerContext loggerContext = LoggerContext.getInstance();
 		loggerContext.setProcessingEnv(processingEnv);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/AppHandler.java
Patch:
@@ -16,13 +16,13 @@
 package org.androidannotations.handler;
 
 import static com.sun.codemodel.JExpr.ref;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 
 import org.androidannotations.annotations.App;
 import org.androidannotations.annotations.EApplication;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.EApplicationHolder;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
@@ -49,7 +49,7 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 	public void process(Element element, EComponentHolder holder) {
 		String fieldName = element.getSimpleName().toString();
 		String applicationQualifiedName = element.asType().toString();
-		JClass applicationClass = refClass(applicationQualifiedName + ModelConstants.GENERATION_SUFFIX);
+		JClass applicationClass = refClass(applicationQualifiedName + classSuffix());
 
 		holder.getInitBody().assign(ref(fieldName), applicationClass.staticInvoke(EApplicationHolder.GET_APPLICATION_INSTANCE));
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/NonConfigurationInstanceHandler.java
Patch:
@@ -18,7 +18,7 @@
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
@@ -91,7 +91,7 @@ private void rebindContextIfBean(Element element, JBlock initIfNonConfigurationN
 				elementType = element.asType();
 			}
 			String typeQualifiedName = elementType.toString();
-			JClass fieldGeneratedBeanClass = refClass(typeQualifiedName + GENERATION_SUFFIX);
+			JClass fieldGeneratedBeanClass = refClass(typeQualifiedName + classSuffix());
 
 			initIfNonConfigurationNotNullBlock.invoke(cast(fieldGeneratedBeanClass, field), "rebind").arg(_this());
 		}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ReceiverHandler.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.List;
 
@@ -30,7 +31,6 @@
 
 import org.androidannotations.annotations.Receiver;
 import org.androidannotations.helper.APTCodeModelHelper;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.HasReceiverRegistration;
 import org.androidannotations.holder.ReceiverRegistrationHolder.IntentFilterData;
 import org.androidannotations.model.AnnotationElements;
@@ -82,7 +82,7 @@ protected void validate(Element element, AnnotationElements validatedElements, I
 	public void process(Element element, HasReceiverRegistration holder) throws Exception {
 
 		String methodName = element.getSimpleName().toString();
-		String receiverName = methodName + "Receiver" + ModelConstants.GENERATION_SUFFIX;
+		String receiverName = methodName + "Receiver" + generationSuffix();
 
 		Receiver annotation = element.getAnnotation(Receiver.class);
 		String[] actions = annotation.actions();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/RoboGuiceHandler.java
Patch:
@@ -19,6 +19,7 @@
 import static com.sun.codemodel.JExpr._super;
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JExpr.invoke;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -96,7 +97,7 @@ private void listenerFields(Element element, EActivityHolder holder) {
 		int i = 1;
 		for (TypeMirror listenterTypeMirror : listenerTypeMirrors) {
 			JClass listenerClass = codeModelHelper.typeMirrorToJClass(listenterTypeMirror, holder);
-			JFieldVar listener = holder.getGeneratedClass().field(JMod.PRIVATE, listenerClass, "listener" + i + "_");
+			JFieldVar listener = holder.getGeneratedClass().field(JMod.PRIVATE, listenerClass, "listener" + i + generationSuffix());
 			codeModelHelper.addSuppressWarnings(listener, "unused");
 			listener.annotate(classes().INJECT);
 			i++;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/rest/RestServiceHandler.java
Patch:
@@ -15,14 +15,15 @@
  */
 package org.androidannotations.handler.rest;
 
+import static org.androidannotations.helper.ModelConstants.classSuffix;
+
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.rest.Rest;
 import org.androidannotations.annotations.rest.RestService;
 import org.androidannotations.handler.BaseAnnotationHandler;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
@@ -53,7 +54,7 @@ public void process(Element element, EComponentHolder holder) {
 		TypeMirror fieldTypeMirror = element.asType();
 		String interfaceName = fieldTypeMirror.toString();
 
-		String generatedClassName = interfaceName + ModelConstants.GENERATION_SUFFIX;
+		String generatedClassName = interfaceName + classSuffix();
 
 		JBlock methodBody = holder.getInitBody();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -17,7 +17,7 @@
 
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr.lit;
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import java.io.StringWriter;
 import java.lang.annotation.Annotation;
@@ -498,7 +498,7 @@ private ExecutableElement getMethod(List<ExecutableElement> methods, String meth
 	public JInvocation newBeanOrEBean(GeneratedClassHolder holder, DeclaredType beanType, JVar contextVar) {
 		if (beanType.asElement().getAnnotation(EBean.class) != null) {
 			String typeQualifiedName = beanType.toString();
-			JClass injectedClass = holder.refClass(typeQualifiedName + GENERATION_SUFFIX);
+			JClass injectedClass = holder.refClass(typeQualifiedName + classSuffix());
 			return injectedClass.staticInvoke(EBeanHolder.GET_INSTANCE_METHOD_NAME).arg(contextVar);
 		} else {
 			return _new(holder.refClass(beanType.toString()));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ActivityIntentBuilder.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
 import static com.sun.codemodel.JMod.STATIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.List;
 
@@ -93,10 +94,10 @@ protected JClass getSuperClass() {
 
 	private void createAdditionalConstructor() {
 		if (hasFragmentInClasspath()) {
-			fragmentField = addFragmentConstructor(holder.classes().FRAGMENT, "fragment_");
+			fragmentField = addFragmentConstructor(holder.classes().FRAGMENT, "fragment" + generationSuffix());
 		}
 		if (hasFragmentSupportInClasspath()) {
-			fragmentSupportField = addFragmentConstructor(holder.classes().SUPPORT_V4_FRAGMENT, "fragmentSupport_");
+			fragmentSupportField = addFragmentConstructor(holder.classes().SUPPORT_V4_FRAGMENT, "fragmentSupport" + generationSuffix());
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AnnotationHelper.java
Patch:
@@ -15,8 +15,8 @@
  */
 package org.androidannotations.helper;
 
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
 import static org.androidannotations.helper.ModelConstants.VALID_ENHANCED_COMPONENT_ANNOTATIONS;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
 import java.lang.annotation.Annotation;
 import java.lang.reflect.InvocationTargetException;
@@ -92,9 +92,9 @@ public String generatedClassQualifiedNameFromQualifiedName(String qualifiedName)
 		TypeElement type = typeElementFromQualifiedName(qualifiedName);
 		if (type.getNestingKind() == NestingKind.MEMBER) {
 			String parentGeneratedClass = generatedClassQualifiedNameFromQualifiedName(type.getEnclosingElement().asType().toString());
-			return parentGeneratedClass + "." + type.getSimpleName().toString() + GENERATION_SUFFIX;
+			return parentGeneratedClass + "." + type.getSimpleName().toString() + classSuffix();
 		} else {
-			return qualifiedName + GENERATION_SUFFIX;
+			return qualifiedName + classSuffix();
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/IntentBuilder.java
Patch:
@@ -13,6 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
+
 package org.androidannotations.helper;
 
 import static com.sun.codemodel.JExpr._new;
@@ -24,6 +25,7 @@
 import static org.androidannotations.helper.CanonicalNameConstants.PARCELABLE;
 import static org.androidannotations.helper.CanonicalNameConstants.SERIALIZABLE;
 import static org.androidannotations.helper.CanonicalNameConstants.STRING;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.HashMap;
 import java.util.Map;
@@ -77,7 +79,7 @@ public void build() throws JClassAlreadyExistsException {
 	}
 
 	private void createClass() throws JClassAlreadyExistsException {
-		builderClass = holder.getGeneratedClass()._class(PUBLIC | STATIC, "IntentBuilder_");
+		builderClass = holder.getGeneratedClass()._class(PUBLIC | STATIC, "IntentBuilder" + generationSuffix());
 		builderClass._extends(getSuperClass());
 		holder.setIntentBuilderClass(builderClass);
 		contextField = ref("context");

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ViewNotifierHelper.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import org.androidannotations.api.view.HasViews;
 import org.androidannotations.api.view.OnViewChangedNotifier;
@@ -47,7 +48,7 @@ public void invokeViewChanged(JBlock block) {
 	public JVar replacePreviousNotifier(JBlock block) {
 		JClass notifierClass = holder.refClass(OnViewChangedNotifier.class);
 		if (notifier == null) {
-			notifier = holder.getGeneratedClass().field(PRIVATE | FINAL, notifierClass, "onViewChangedNotifier_", _new(notifierClass));
+			notifier = holder.getGeneratedClass().field(PRIVATE | FINAL, notifierClass, "onViewChangedNotifier" + generationSuffix(), _new(notifierClass));
 			holder.getGeneratedClass()._implements(HasViews.class);
 		}
 		return block.decl(notifierClass, "previousNotifier", notifierClass.staticInvoke("replaceNotifier").arg(notifier));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EApplicationHolder.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
 import static com.sun.codemodel.JMod.STATIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 
@@ -47,7 +48,7 @@ public EApplicationHolder(ProcessHolder processHolder, TypeElement annotatedElem
 	private void createSingleton() {
 		JClass annotatedComponent = generatedClass._extends();
 
-		staticInstanceField = generatedClass.field(PRIVATE | STATIC, annotatedComponent, "INSTANCE_");
+		staticInstanceField = generatedClass.field(PRIVATE | STATIC, annotatedComponent, "INSTANCE" + generationSuffix());
 		// Static singleton getter and setter
 		JMethod getInstance = generatedClass.method(PUBLIC | STATIC, annotatedComponent, GET_APPLICATION_INSTANCE);
 		getInstance.body()._return(staticInstanceField);
@@ -74,6 +75,6 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EProviderHolder.java
Patch:
@@ -19,6 +19,7 @@
 import static com.sun.codemodel.JExpr.invoke;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 
@@ -40,7 +41,7 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 		createOnCreate();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EReceiverHolder.java
Patch:
@@ -17,6 +17,7 @@
 
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 
@@ -50,7 +51,7 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 		contextRef = init.param(classes().CONTEXT, "context");
 		if (onReceiveMethod == null) {
 			createOnReceive();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EServiceHolder.java
Patch:
@@ -18,6 +18,7 @@
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.TypeMirror;
@@ -61,7 +62,7 @@ protected void setContextRef() {
 
 	@Override
 	protected void setInit() {
-		init = generatedClass.method(PRIVATE, codeModel().VOID, "init_");
+		init = generatedClass.method(PRIVATE, codeModel().VOID, "init" + generationSuffix());
 		setOnCreate();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/InstanceStateHolder.java
Patch:
@@ -19,6 +19,7 @@
 import static com.sun.codemodel.JExpr.ref;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.TypeElement;
@@ -63,7 +64,7 @@ public JVar getSaveStateBundleParam() {
 	private void setSaveStateMethod() {
 		JMethod method = getGeneratedClass().method(PUBLIC, codeModel().VOID, "onSaveInstanceState");
 		method.annotate(Override.class);
-		saveStateBundleParam = method.param(classes().BUNDLE, "bundle_");
+		saveStateBundleParam = method.param(classes().BUNDLE, "bundle" + generationSuffix());
 
 		saveStateMethodBody = method.body();
 
@@ -87,7 +88,7 @@ public JVar getRestoreStateBundleParam() {
 	}
 
 	private void setRestoreStateMethod() {
-		restoreStateMethod = getGeneratedClass().method(PRIVATE, codeModel().VOID, "restoreSavedInstanceState_");
+		restoreStateMethod = getGeneratedClass().method(PRIVATE, codeModel().VOID, "restoreSavedInstanceState" + generationSuffix());
 		restoreStateBundleParam = restoreStateMethod.param(classes().BUNDLE, "savedInstanceState");
 		getInit().body().invoke(restoreStateMethod).arg(restoreStateBundleParam);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/ReceiverRegistrationHolder.java
Patch:
@@ -18,6 +18,7 @@
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
+import static org.androidannotations.helper.ModelConstants.generationSuffix;
 
 import java.util.Arrays;
 import java.util.HashMap;
@@ -26,7 +27,6 @@
 import java.util.Set;
 
 import org.androidannotations.annotations.Receiver.RegisterAt;
-import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.process.ProcessHolder;
 
 import com.sun.codemodel.JBlock;
@@ -53,7 +53,7 @@ public JFieldVar getIntentFilterField(IntentFilterData intentFilterData) {
 	}
 
 	private JFieldVar createIntentFilterField(IntentFilterData intentFilterData) {
-		String intentFilterName = "intentFilter" + (intentFilterFields.size() + 1) + ModelConstants.GENERATION_SUFFIX;
+		String intentFilterName = "intentFilter" + (intentFilterFields.size() + 1) + generationSuffix();
 		JExpression newIntentFilterExpr = _new(classes().INTENT_FILTER);
 		JFieldVar intentFilterField = getGeneratedClass().field(PRIVATE | FINAL, classes().INTENT_FILTER, intentFilterName, newIntentFilterExpr);
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/utils/AAProcessorTestHelper.java
Patch:
@@ -15,9 +15,9 @@
  */
 package org.androidannotations.utils;
 
-import java.io.File;
+import static org.androidannotations.helper.ModelConstants.classSuffix;
 
-import org.androidannotations.helper.ModelConstants;
+import java.io.File;
 
 public class AAProcessorTestHelper extends ProcessorTestHelper {
 
@@ -31,7 +31,7 @@ public void addManifestProcessorParameter(Class<?> classOfPackagingContainingMan
 	}
 
 	public File toGeneratedFile(Class<?> compiledClass) {
-		File output = new File(OUTPUT_DIRECTORY, toPath(compiledClass.getPackage()) + "/" + compiledClass.getSimpleName() + ModelConstants.GENERATION_SUFFIX + SOURCE_FILE_SUFFIX);
+		File output = new File(OUTPUT_DIRECTORY, toPath(compiledClass.getPackage()) + "/" + compiledClass.getSimpleName() + classSuffix() + SOURCE_FILE_SUFFIX);
 		return output;
 	}
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/PreferenceByKey.java
Patch:
@@ -33,7 +33,7 @@
  * The annotation value should be an array of R.string.* fields.
  * </p>
  * <p>
- * Your code related to injected views should go in an
+ * Your code related to injected preferences should go in an
  * {@link org.androidannotations.annotations.AfterPreferences AfterPreferences}
  * annotated method.
  * </p>

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraHandler.java
Patch:
@@ -64,6 +64,8 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
+
+		validatorHelper.canBePutInABundle(element, valid);
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/FragmentArgHandler.java
Patch:
@@ -59,6 +59,8 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 		validatorHelper.enclosingElementHasEFragment(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
+
+		validatorHelper.canBePutInABundle(element, valid);
 	}
 
 	@Override

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/ExtraInjectedActivity.java
Patch:
@@ -15,7 +15,7 @@
  */
 package org.androidannotations.test15;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import org.androidannotations.annotations.EActivity;
 import org.androidannotations.annotations.Extra;
@@ -33,7 +33,7 @@ public class ExtraInjectedActivity extends Activity {
 	CustomData[] arrayExtra;
 
 	@Extra("listExtra")
-	List<String> listExtra;
+	ArrayList<String> listExtra;
 
 	@Extra("intExtra")
 	int intExtra;

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/roboguice/ActivityWithRoboGuice.java
Patch:
@@ -34,7 +34,7 @@
 /**
  * Adapted from http://pivotal.github.com/robolectric/roboguice.html
  */
-@RoboGuice
+@RoboGuice(Counter.class)
 @EActivity(R.layout.injected)
 public class ActivityWithRoboGuice extends Activity {
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/roboguice/ActivityWithRoboGuice.java
Patch:
@@ -34,7 +34,7 @@
 /**
  * Adapted from http://pivotal.github.com/robolectric/roboguice.html
  */
-@RoboGuice
+@RoboGuice(Counter.class)
 @EActivity(R.layout.injected)
 public class ActivityWithRoboGuice extends Activity {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/CheckedChangeHandler.java
Patch:
@@ -38,7 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class CheckedChangeHandler extends AbstractListenerHandler {
+public class CheckedChangeHandler extends AbstractViewListenerHandler {
 
 	public CheckedChangeHandler(ProcessingEnvironment processingEnvironment) {
 		super(CheckedChange.class, processingEnvironment);
@@ -94,7 +94,7 @@ protected JClass getListenerClass() {
 	}
 
 	@Override
-	protected JClass getViewClass() {
+	protected JClass getListenerTargetClass() {
 		return classes().COMPOUND_BUTTON;
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ClickHandler.java
Patch:
@@ -36,7 +36,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class ClickHandler extends AbstractListenerHandler {
+public class ClickHandler extends AbstractViewListenerHandler {
 
 	public ClickHandler(ProcessingEnvironment processingEnvironment) {
 		super(Click.class, processingEnvironment);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/EditorActionHandler.java
Patch:
@@ -39,7 +39,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class EditorActionHandler extends AbstractListenerHandler {
+public class EditorActionHandler extends AbstractViewListenerHandler {
 
 	public EditorActionHandler(ProcessingEnvironment processingEnvironment) {
 		super(EditorAction.class, processingEnvironment);
@@ -108,7 +108,7 @@ protected JClass getListenerClass() {
 	}
 
 	@Override
-	protected JClass getViewClass() {
+	protected JClass getListenerTargetClass() {
 		return classes().TEXT_VIEW;
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/FocusChangeHandler.java
Patch:
@@ -38,7 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class FocusChangeHandler extends AbstractListenerHandler {
+public class FocusChangeHandler extends AbstractViewListenerHandler {
 
 	public FocusChangeHandler(ProcessingEnvironment processingEnvironment) {
 		super(FocusChange.class, processingEnvironment);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ItemClickHandler.java
Patch:
@@ -41,7 +41,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class ItemClickHandler extends AbstractListenerHandler {
+public class ItemClickHandler extends AbstractViewListenerHandler {
 
 	private final APTCodeModelHelper codeModelHelper = new APTCodeModelHelper();
 
@@ -108,7 +108,7 @@ protected JClass getListenerClass() {
 	}
 
 	@Override
-	protected JClass getViewClass() {
+	protected JClass getListenerTargetClass() {
 		return classes().ADAPTER_VIEW.narrow(codeModel().wildcard());
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ItemLongClickHandler.java
Patch:
@@ -42,7 +42,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class ItemLongClickHandler extends AbstractListenerHandler {
+public class ItemLongClickHandler extends AbstractViewListenerHandler {
 
 	private final APTCodeModelHelper codeModelHelper = new APTCodeModelHelper();
 
@@ -115,7 +115,7 @@ protected JClass getListenerClass() {
 	}
 
 	@Override
-	protected JClass getViewClass() {
+	protected JClass getListenerTargetClass() {
 		return classes().ADAPTER_VIEW.narrow(codeModel().wildcard());
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ItemSelectHandler.java
Patch:
@@ -43,7 +43,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class ItemSelectHandler extends AbstractListenerHandler {
+public class ItemSelectHandler extends AbstractViewListenerHandler {
 
 	private JMethod onNothingSelectedMethod;
 
@@ -128,7 +128,7 @@ protected JClass getListenerClass() {
 	}
 
 	@Override
-	protected JClass getViewClass() {
+	protected JClass getListenerTargetClass() {
 		return classes().ADAPTER_VIEW.narrow(codeModel().wildcard());
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/LongClickHandler.java
Patch:
@@ -38,7 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class LongClickHandler extends AbstractListenerHandler {
+public class LongClickHandler extends AbstractViewListenerHandler {
 
 	public LongClickHandler(ProcessingEnvironment processingEnvironment) {
 		super(LongClick.class, processingEnvironment);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/TouchHandler.java
Patch:
@@ -39,7 +39,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class TouchHandler extends AbstractListenerHandler {
+public class TouchHandler extends AbstractViewListenerHandler {
 
 	public TouchHandler(ProcessingEnvironment processingEnvironment) {
 		super(Touch.class, processingEnvironment);

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/bundle/BundleHelper.java
Patch:
@@ -47,6 +47,8 @@ private BundleHelper() {
 	 *            the array is associated with this key
 	 * @param type
 	 *            the desired type of the returned array
+	 * @param <T>
+	 *            the element type of the returned array
 	 * @return a {@link Parcelable} subclass typed array which holds the objects
 	 *         from {@link Bundle#getParcelableArray(String)} or
 	 *         <code>null</code> if {@link Bundle#getParcelableArray(String)}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ItemClickHandler.java
Patch:
@@ -86,7 +86,7 @@ protected void processParameters(EComponentWithViewSupportHolder holder, JMethod
 				call.arg(cast(parameterClass, invoke(onItemClickParentParam, "getAdapter").invoke("getItem").arg(onItemClickPositionParam)));
 
 				if (parameterClass.isParameterized()) {
-					listenerMethod.annotate(SuppressWarnings.class).param("value", "unchecked");
+					codeModelHelper.addSuppressWarnings(listenerMethod, "unchecked");
 				}
 			}
 		}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ItemLongClickHandler.java
Patch:
@@ -93,7 +93,7 @@ protected void processParameters(EComponentWithViewSupportHolder holder, JMethod
 				call.arg(cast(parameterClass, invoke(onItemClickParentParam, "getAdapter").invoke("getItem").arg(onItemClickPositionParam)));
 
 				if (parameterClass.isParameterized()) {
-					listenerMethod.annotate(SuppressWarnings.class).param("value", "unchecked");
+					codeModelHelper.addSuppressWarnings(listenerMethod, "unchecked");
 				}
 			}
 		}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/RoboGuiceHandler.java
Patch:
@@ -96,7 +96,7 @@ private void listenerFields(Element element, EActivityHolder holder) {
 			for (String listenerClassName : listenerClasses) {
 				JClass listenerClass = refClass(listenerClassName);
 				JFieldVar listener = holder.getGeneratedClass().field(JMod.PRIVATE, listenerClass, "listener" + i + "_");
-				listener.annotate(SuppressWarnings.class).param("value", "unused");
+				codeModelHelper.addSuppressWarnings(listener, "unused");
 				listener.annotate(classes().INJECT);
 				i++;
 			}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/BundleHelper.java
Patch:
@@ -229,9 +229,7 @@ public JExpression getExpressionToRestoreFromBundle(JClass variableClass, JExpre
 			expressionToRestore = JExpr.cast(variableClass, expressionToRestore);
 
 			if (restoreCallNeedsSuppressWarning()) {
-				if (!codeModelHelper.hasAnnotation(method, SuppressWarnings.class)) {
-					method.annotate(SuppressWarnings.class).param("value", "unchecked");
-				}
+				codeModelHelper.addSuppressWarnings(method, "unchecked");
 			}
 		}
 		return expressionToRestore;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesCompat.java
Patch:
@@ -48,6 +48,9 @@ public static Set<String> getStringSet(SharedPreferences preferences, String key
 			return invoke(GET_STRING_SET_METHOD, preferences, key, defValues);
 		} catch (NoSuchMethodException e) {
 			String serializedSet = preferences.getString(key, null);
+			if (serializedSet == null) {
+				return defValues;
+			}
 			return SetXmlSerializer.deserialize(serializedSet);
 		}
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/process/ProcessHolder.java
Patch:
@@ -64,6 +64,7 @@ public class Classes {
 		public final JClass LIST = refClass(List.class);
 		public final JClass OBJECT = refClass(Object.class);
 		public final JClass ARRAYS = refClass(Arrays.class);
+		public final JClass HASH_SET = refClass(HashSet.class);
 
 		/*
 		 * Android

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraHandler.java
Patch:
@@ -105,7 +105,7 @@ private void injectExtraInComponent(Element element, HasExtras hasExtras, JField
 		JExpression intent = invoke("getIntent");
 		JBlock ifContainsKey = injectExtrasBlock._if(JExpr.invoke(extras, "containsKey").arg(extraKeyStaticField))._then();
 
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(elementClass, intent, extras, extraKeyStaticField, injectExtrasMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(elementClass, intent, extras, extraKeyStaticField, injectExtrasMethod, hasExtras);
 		ifContainsKey.assign(extraField, restoreMethodCall);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraParameterHandler.java
Patch:
@@ -80,7 +80,7 @@ public JExpression getExtraValue(VariableElement parameter, JVar intent, JVar ex
 		}
 
 		BundleHelper bundleHelper = new BundleHelper(annotationHelper, parameter.asType());
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(parameterClass, intent, extras, getStaticExtraField(generatedClass, extraKey, holder), annotatedMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(parameterClass, intent, extras, getStaticExtraField(generatedClass, extraKey, holder), annotatedMethod, holder);
 
 		return block.decl(parameterClass, parameterName, restoreMethodCall);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/FragmentArgHandler.java
Patch:
@@ -99,7 +99,7 @@ private void injectArgInComponent(Element element, EFragmentHolder holder, Bundl
 		JFieldRef extraField = JExpr.ref(fieldName);
 
 		JBlock ifContainsKey = injectExtrasBlock._if(JExpr.invoke(bundle, "containsKey").arg(extraKeyStaticField))._then();
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, bundle, extraKeyStaticField, injectExtrasMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, bundle, extraKeyStaticField, injectExtrasMethod, holder);
 		ifContainsKey.assign(extraField, restoreMethodCall);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/InstanceStateHandler.java
Patch:
@@ -74,7 +74,7 @@ public void process(Element element, HasInstanceState holder) {
 		JFieldRef ref = ref(fieldName);
 		saveStateBody.invoke(saveStateBundleParam, bundleHelper.getMethodNameToSave()).arg(fieldName).arg(ref);
 
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, restoreStateBundleParam, JExpr.lit(fieldName), restoreStateMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, restoreStateBundleParam, JExpr.lit(fieldName), restoreStateMethod, holder);
 		restoreStateBody.assign(ref, restoreMethodCall);
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ServiceActionHandler.java
Patch:
@@ -114,7 +114,7 @@ private void addActionInOnHandleIntent(EIntentServiceHolder holder, ExecutableEl
 				JClass extraParamClass = codeModelHelper.typeMirrorToJClass(param.asType(), holder);
 
 				BundleHelper bundleHelper = new BundleHelper(annotationHelper, param.asType());
-				JExpression getExtraExpression = bundleHelper.getExpressionToRestoreFromIntentOrBundle(extraParamClass, intent, extras, paramVar, onHandleIntentMethod);
+				JExpression getExtraExpression = bundleHelper.getExpressionToRestoreFromIntentOrBundle(extraParamClass, intent, extras, paramVar, onHandleIntentMethod, holder);
 
 				JVar extraField = callActionBlock.decl(extraParamClass, extraParamName, getExtraExpression);
 				callActionInvocation.arg(extraField);

File: AndroidAnnotations/functional-test-1-5/src/test/java/org/androidannotations/test15/FragmentArgsTest.java
Patch:
@@ -20,9 +20,11 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
 
 import android.os.Bundle;
 
+@Config(shadows = CustomShadowBundle.class)
 @RunWith(RobolectricTestRunner.class)
 public class FragmentArgsTest {
 

File: AndroidAnnotations/functional-test-1-5/src/test/java/org/androidannotations/test15/InjectExtraTest.java
Patch:
@@ -24,11 +24,13 @@
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
 import org.robolectric.util.ActivityController;
 
 import android.app.Activity;
 import android.content.Context;
 
+@Config(shadows = CustomShadowBundle.class)
 @RunWith(RobolectricTestRunner.class)
 public class InjectExtraTest {
 

File: AndroidAnnotations/functional-test-1-5/src/test/java/org/androidannotations/test15/instancestate/SaveInstanceStateActivityParameterizedTest.java
Patch:
@@ -22,15 +22,18 @@
 import java.util.Arrays;
 import java.util.Collection;
 
+import org.androidannotations.test15.CustomShadowBundle;
 import org.fest.util.Lists;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;
 import org.robolectric.ParameterizedRobolectricTestRunnerWorkaround;
 import org.robolectric.Robolectric;
+import org.robolectric.annotation.Config;
 
 import android.os.Bundle;
 
+@Config(shadows = CustomShadowBundle.class)
 @RunWith(ParameterizedRobolectricTestRunnerWorkaround.class)
 public class SaveInstanceStateActivityParameterizedTest {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/process/ProcessHolder.java
Patch:
@@ -64,6 +64,7 @@ public class Classes {
 		public final JClass LIST = refClass(List.class);
 		public final JClass OBJECT = refClass(Object.class);
 		public final JClass ARRAYS = refClass(Arrays.class);
+		public final JClass HASH_SET = refClass(HashSet.class);
 
 		/*
 		 * Android

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesCompat.java
Patch:
@@ -48,6 +48,9 @@ public static Set<String> getStringSet(SharedPreferences preferences, String key
 			return invoke(GET_STRING_SET_METHOD, preferences, key, defValues);
 		} catch (NoSuchMethodException e) {
 			String serializedSet = preferences.getString(key, null);
+			if (serializedSet == null) {
+				return defValues;
+			}
 			return SetXmlSerializer.deserialize(serializedSet);
 		}
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraHandler.java
Patch:
@@ -105,7 +105,7 @@ private void injectExtraInComponent(Element element, HasExtras hasExtras, JField
 		JExpression intent = invoke("getIntent");
 		JBlock ifContainsKey = injectExtrasBlock._if(JExpr.invoke(extras, "containsKey").arg(extraKeyStaticField))._then();
 
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(elementClass, intent, extras, extraKeyStaticField, injectExtrasMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(elementClass, intent, extras, extraKeyStaticField, injectExtrasMethod, hasExtras);
 		ifContainsKey.assign(extraField, restoreMethodCall);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraParameterHandler.java
Patch:
@@ -80,7 +80,7 @@ public JExpression getExtraValue(VariableElement parameter, JVar intent, JVar ex
 		}
 
 		BundleHelper bundleHelper = new BundleHelper(annotationHelper, parameter.asType());
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(parameterClass, intent, extras, getStaticExtraField(generatedClass, extraKey, holder), annotatedMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromIntentOrBundle(parameterClass, intent, extras, getStaticExtraField(generatedClass, extraKey, holder), annotatedMethod, holder);
 
 		return block.decl(parameterClass, parameterName, restoreMethodCall);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/FragmentArgHandler.java
Patch:
@@ -99,7 +99,7 @@ private void injectArgInComponent(Element element, EFragmentHolder holder, Bundl
 		JFieldRef extraField = JExpr.ref(fieldName);
 
 		JBlock ifContainsKey = injectExtrasBlock._if(JExpr.invoke(bundle, "containsKey").arg(extraKeyStaticField))._then();
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, bundle, extraKeyStaticField, injectExtrasMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, bundle, extraKeyStaticField, injectExtrasMethod, holder);
 		ifContainsKey.assign(extraField, restoreMethodCall);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/InstanceStateHandler.java
Patch:
@@ -74,7 +74,7 @@ public void process(Element element, HasInstanceState holder) {
 		JFieldRef ref = ref(fieldName);
 		saveStateBody.invoke(saveStateBundleParam, bundleHelper.getMethodNameToSave()).arg(fieldName).arg(ref);
 
-		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, restoreStateBundleParam, JExpr.lit(fieldName), restoreStateMethod);
+		JExpression restoreMethodCall = bundleHelper.getExpressionToRestoreFromBundle(elementClass, restoreStateBundleParam, JExpr.lit(fieldName), restoreStateMethod, holder);
 		restoreStateBody.assign(ref, restoreMethodCall);
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ServiceActionHandler.java
Patch:
@@ -114,7 +114,7 @@ private void addActionInOnHandleIntent(EIntentServiceHolder holder, ExecutableEl
 				JClass extraParamClass = codeModelHelper.typeMirrorToJClass(param.asType(), holder);
 
 				BundleHelper bundleHelper = new BundleHelper(annotationHelper, param.asType());
-				JExpression getExtraExpression = bundleHelper.getExpressionToRestoreFromIntentOrBundle(extraParamClass, intent, extras, paramVar, onHandleIntentMethod);
+				JExpression getExtraExpression = bundleHelper.getExpressionToRestoreFromIntentOrBundle(extraParamClass, intent, extras, paramVar, onHandleIntentMethod, holder);
 
 				JVar extraField = callActionBlock.decl(extraParamClass, extraParamName, getExtraExpression);
 				callActionInvocation.arg(extraField);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ReceiverHandler.java
Patch:
@@ -32,6 +32,7 @@
 import org.androidannotations.helper.APTCodeModelHelper;
 import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.HasReceiverRegistration;
+import org.androidannotations.holder.ReceiverRegistrationHolder.IntentFilterData;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
 
@@ -89,7 +90,7 @@ public void process(Element element, HasReceiverRegistration holder) throws Exce
 		Receiver.RegisterAt registerAt = annotation.registerAt();
 		boolean local = annotation.local();
 
-		JFieldVar intentFilterField = holder.getIntentFilterField(actions, dataSchemes);
+		JFieldVar intentFilterField = holder.getIntentFilterField(new IntentFilterData(actions, dataSchemes, registerAt));
 		JFieldVar receiverField = createReceiverField(holder, receiverName, methodName, (ExecutableElement) element);
 		registerAndUnregisterReceiver(holder, registerAt, intentFilterField, receiverField, local);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/InstanceStateHolder.java
Patch:
@@ -64,7 +64,7 @@ public JVar getSaveStateBundleParam() {
 	private void setSaveStateMethod() {
 		JMethod method = getGeneratedClass().method(PUBLIC, codeModel().VOID, "onSaveInstanceState");
 		method.annotate(Override.class);
-		saveStateBundleParam = method.param(classes().BUNDLE, "bundle");
+		saveStateBundleParam = method.param(classes().BUNDLE, "bundle_");
 
 		saveStateMethodBody = method.body();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ReceiverHandler.java
Patch:
@@ -32,6 +32,7 @@
 import org.androidannotations.helper.APTCodeModelHelper;
 import org.androidannotations.helper.ModelConstants;
 import org.androidannotations.holder.HasReceiverRegistration;
+import org.androidannotations.holder.ReceiverRegistrationHolder.IntentFilterData;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
 
@@ -89,7 +90,7 @@ public void process(Element element, HasReceiverRegistration holder) throws Exce
 		Receiver.RegisterAt registerAt = annotation.registerAt();
 		boolean local = annotation.local();
 
-		JFieldVar intentFilterField = holder.getIntentFilterField(actions, dataSchemes);
+		JFieldVar intentFilterField = holder.getIntentFilterField(new IntentFilterData(actions, dataSchemes, registerAt));
 		JFieldVar receiverField = createReceiverField(holder, receiverName, methodName, (ExecutableElement) element);
 		registerAndUnregisterReceiver(holder, registerAt, intentFilterField, receiverField, local);
 	}

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/logger/LoggerTest.java
Patch:
@@ -15,8 +15,7 @@
  */
 package org.androidannotations.logger;
 
-import junit.framework.Assert;
-
+import org.junit.Assert;
 import org.junit.Test;
 
 public class LoggerTest {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/SharedPrefHandler.java
Patch:
@@ -79,12 +79,12 @@ public class SharedPrefHandler extends BaseGeneratingAnnotationHandler<SharedPre
 
 	private static final class DefaultPrefInfo<T> {
 		final Class<? extends Annotation> annotationClass;
-		final Class<? extends AbstractPrefField> prefFieldClass;
+		final Class<? extends AbstractPrefField<?>> prefFieldClass;
 		final IRClass.Res resType;
 		final T defaultValue;
 		final String fieldHelperMethodName;
 
-		DefaultPrefInfo(Class<? extends Annotation> annotationClass, Class<? extends AbstractPrefField> prefFieldClass, Res resType, T defaultValue, String fieldHelperMethodName) {
+		DefaultPrefInfo(Class<? extends Annotation> annotationClass, Class<? extends AbstractPrefField<?>> prefFieldClass, Res resType, T defaultValue, String fieldHelperMethodName) {
 			this.annotationClass = annotationClass;
 			this.prefFieldClass = prefFieldClass;
 			this.resType = resType;
@@ -256,7 +256,7 @@ private JExpression generateFieldMethod(SharedPrefHolder holder, ExecutableEleme
 		return createFieldMethod(holder, method, info.annotationClass, info.prefFieldClass, info.defaultValue, info.resType, info.fieldHelperMethodName);
 	}
 
-	private JExpression createFieldMethod(SharedPrefHolder holder, ExecutableElement method, Class<? extends Annotation> annotationClass, Class<? extends AbstractPrefField> prefFieldClass, Object defaultValue, Res resType, String fieldHelperMethodName) {
+	private JExpression createFieldMethod(SharedPrefHolder holder, ExecutableElement method, Class<? extends Annotation> annotationClass, Class<? extends AbstractPrefField<?>> prefFieldClass, Object defaultValue, Res resType, String fieldHelperMethodName) {
 		Annotation annotation = method.getAnnotation(annotationClass);
 		JExpression defaultValueExpr;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/logger/appender/FileAppender.java
Patch:
@@ -80,9 +80,7 @@ public synchronized void append(Level level, Element element, AnnotationMirror a
 	@Override
 	public void setProcessingEnv(ProcessingEnvironment processingEnv) {
 		super.setProcessingEnv(processingEnv);
-		if (file == null) {
-			resolveLogFile();
-		}
+		resolveLogFile();
 	}
 
 	private void resolveLogFile() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/logger/appender/FileAppender.java
Patch:
@@ -80,9 +80,7 @@ public synchronized void append(Level level, Element element, AnnotationMirror a
 	@Override
 	public void setProcessingEnv(ProcessingEnvironment processingEnv) {
 		super.setProcessingEnv(processingEnv);
-		if (file == null) {
-			resolveLogFile();
-		}
+		resolveLogFile();
 	}
 
 	private void resolveLogFile() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/logger/appender/FileAppender.java
Patch:
@@ -80,7 +80,9 @@ public synchronized void append(Level level, Element element, AnnotationMirror a
 	@Override
 	public void setProcessingEnv(ProcessingEnvironment processingEnv) {
 		super.setProcessingEnv(processingEnv);
-		resolveLogFile();
+		if (file == null) {
+			resolveLogFile();
+		}
 	}
 
 	private void resolveLogFile() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/logger/appender/FileAppender.java
Patch:
@@ -80,7 +80,9 @@ public synchronized void append(Level level, Element element, AnnotationMirror a
 	@Override
 	public void setProcessingEnv(ProcessingEnvironment processingEnv) {
 		super.setProcessingEnv(processingEnv);
-		resolveLogFile();
+		if (file == null) {
+			resolveLogFile();
+		}
 	}
 
 	private void resolveLogFile() {

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -76,13 +76,15 @@
 
 	/**
 	 * The R.id.* fields which refer to the TextViews.
+	 * 
+	 * @return the ids of the TextViews.
 	 */
 	int[] value() default ResId.DEFAULT_VALUE;
 
 	/**
 	 * The resource names as a strings which refer to the TextViews.
 	 * 
-	 * @return
+	 * @return the resource names of the TextViews.
 	 */
 	String[] resName() default "";
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Bean.java
Patch:
@@ -62,7 +62,9 @@
 public @interface Bean {
 
 	/**
-	 * The implementation class.
+	 * The implementation class of the injected bean.
+	 * 
+	 * @return the implementation class
 	 */
 	Class<?> value() default Void.class;
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/CustomTitle.java
Patch:
@@ -47,6 +47,8 @@
 
 	/**
 	 * R.layout.* field which refers the the title layout.
+	 * 
+	 * @return the id of the layout
 	 */
 	int value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EBean.java
Patch:
@@ -110,6 +110,8 @@ public enum Scope {
 
 	/**
 	 * The scope of the enhanced bean.
+	 * 
+	 * @return the scope of the bean.
 	 */
 	Scope scope() default Scope.Default;
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Extra.java
Patch:
@@ -82,6 +82,8 @@
 
 	/**
 	 * The key of the injected extra.
+	 * 
+	 * @return the key of the extra
 	 */
 	String value() default "";
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentArg.java
Patch:
@@ -74,6 +74,8 @@
 
 	/**
 	 * The key of the injected Fragment argument.
+	 * 
+	 * @return the key of the argument
 	 */
 	String value() default "";
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentByTag.java
Patch:
@@ -74,7 +74,9 @@
 public @interface FragmentByTag {
 
 	/**
-	 * The tag of the Fragment.
+	 * The tag of the injected Fragment.
+	 * 
+	 * @return the tag of the Fragment
 	 */
 	String value() default "";
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/RoboGuice.java
Patch:
@@ -68,6 +68,8 @@
 	/**
 	 * The RoboGuice listener classes to bind to this activity. Will add an
 	 * injected listener field to the subclass.
+	 * 
+	 * @return the RoboGuice listener classes
 	 */
 	Class<?>[] value() default {};
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ServiceAction.java
Patch:
@@ -96,6 +96,8 @@
 	/**
 	 * Define the action's name. If this field isn't set the annotated method
 	 * name will be used.
+	 * 
+	 * @return the name of the action
 	 */
 	String value() default "";
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SupposeBackground.java
Patch:
@@ -64,6 +64,8 @@
 	 * then any background thread is allowed.
 	 *
 	 * @see org.androidannotations.api.BackgroundExecutor#checkBgThread(String...)
+	 * 
+	 * @return the allowed serials
 	 */
 	String[] serial() default {};
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/WindowFeature.java
Patch:
@@ -53,6 +53,8 @@
 
 	/**
 	 * An array of integers which are <code>Window.FEATURE_*</code> fields.
+	 * 
+	 * @return the Window feature constants
 	 */
 	int[] value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Accept.java
Patch:
@@ -66,7 +66,9 @@
 	/**
 	 * The accepted media type.
 	 * 
-	 * @see {@link org.androidannotations.api.rest.MediaType MediaType}
+	 * @see org.androidannotations.api.rest.MediaType
+	 * 
+	 * @return the media type
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Delete.java
Patch:
@@ -59,6 +59,8 @@
 
 	/**
 	 * The URI or the full URL of the web service.
+	 * 
+	 * @return the address of the web service
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Get.java
Patch:
@@ -78,6 +78,8 @@
 
 	/**
 	 * The URI or the full URL of the web service.
+	 * 
+	 * @return the address of the web service
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Head.java
Patch:
@@ -60,6 +60,8 @@
 
 	/**
 	 * The URI or the full URL of the web service.
+	 * 
+	 * @return the address of the web service
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Options.java
Patch:
@@ -60,6 +60,8 @@
 
 	/**
 	 * The URI or the full URL of the web service.
+	 * 
+	 * @return the address of the web service
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Post.java
Patch:
@@ -63,6 +63,8 @@
 
 	/**
 	 * The URI or the full URL of the web service.
+	 * 
+	 * @return the address of the web service
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Put.java
Patch:
@@ -59,6 +59,8 @@
 
 	/**
 	 * The URI or the full URL of the web service.
+	 * 
+	 * @return the address of the web service
 	 */
 	String value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/RequiresCookie.java
Patch:
@@ -84,6 +84,8 @@
 
 	/**
 	 * The names of the cookies.
+	 * 
+	 * @return the cookie names
 	 */
 	String[] value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/RequiresCookieInUrl.java
Patch:
@@ -40,6 +40,8 @@
 
 	/**
 	 * The names of the cookies.
+	 * 
+	 * @return the cookie names
 	 */
 	String[] value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/RequiresHeader.java
Patch:
@@ -84,6 +84,8 @@
 
 	/**
 	 * The names of the headers.
+	 * 
+	 * @return the header names
 	 */
 	String[] value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/SetsCookie.java
Patch:
@@ -64,6 +64,8 @@
 
 	/**
 	 * The names of the cookies to be kept.
+	 * 
+	 * @return the cookie names
 	 */
 	String[] value();
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultStringSet.java
Patch:
@@ -52,6 +52,8 @@
 
 	/**
 	 * The R.string.* field which refers to the key of the preference.
+	 * 
+	 * @return the resource name of the preference key
 	 */
 	int keyRes() default ResId.DEFAULT_VALUE;
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -38,7 +38,7 @@ public AndroidSystemServices() {
 		registeredServices.put("android.appwidget.AppWidgetManager", "android.content.Context.APPWIDGET_SERVICE");
 		registeredServices.put("android.media.AudioManager", "android.content.Context.AUDIO_SERVICE");
 		registeredServices.put("android.app.backup.IBackupManager", "android.content.Context.BACKUP_SERVICE");
-		registeredServices.put("android.bluetooth.BluetoothAdapter", "android.content.Context.BLUETOOTH_SERVICE");
+		registeredServices.put("android.bluetooth.BluetoothManager", "android.content.Context.BLUETOOTH_SERVICE");
 		registeredServices.put("android.hardware.camera2.CameraManager", "android.content.Context.CAMERA_SERVICE");
 		registeredServices.put("android.view.accessibility.CaptioningManager", "android.content.Context.CAPTIONING_SERVICE");
 		registeredServices.put("android.content.ClipboardManager", "android.content.Context.CLIPBOARD_SERVICE");

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/ActivityWithServices.java
Patch:
@@ -83,7 +83,7 @@ public class ActivityWithServices extends Activity {
 	
 	// TODO API 18
 	// @SystemService
-	// BluetoothAdapter bluetoothAdapter;
+	// BluetoothManager bluetoothManager;
 	
 	// @SystemService
 	// CameraManager cameraManager; // hidden API

File: AndroidAnnotations/functional-test-1-5/src/test/java/org/androidannotations/test15/ServiceInjectionTest.java
Patch:
@@ -39,7 +39,7 @@ public void servicesAreInjected() {
 		// assertThat(activity.appWidgetManager).isNotNull(); // hidden API
 		assertThat(activity.audioManager).isNotNull();
 		// assertThat(activity.backupManager).isNotNull(); // hidden API
-		// assertThat(activity.bluetoothAdapter).isNotNull(); // TODO API 18
+		// assertThat(activity.bluetoothManager).isNotNull(); // TODO API 18
 		// assertThat(activity.cameraManager).isNotNull(); // hidden API
 		// assertThat(activity.captioningManager).isNotNull(); // TODO API 19
 		assertThat(activity.contentClipboardManager).isNotNull();

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/AwaitingResultFragment.java
Patch:
@@ -15,7 +15,7 @@
  */
 package org.androidannotations.test15;
 
-import android.app.Fragment;
+import android.support.v4.app.Fragment;
 import android.content.Intent;
 import android.net.Uri;
 import org.androidannotations.annotations.EFragment;
@@ -25,7 +25,7 @@
 @EFragment(R.layout.views_injected)
 public class AwaitingResultFragment extends Fragment {
 
-	private static final int FIRST_REQUEST = 11;
+	static final int FIRST_REQUEST = 11;
 	private static final int SECOND_REQUEST = 22;
 	private static final int THIRD_REQUEST = 33;
 	private static final int FORTH_REQUEST = 44;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -38,7 +38,7 @@ public AndroidSystemServices() {
 		registeredServices.put("android.appwidget.AppWidgetManager", "android.content.Context.APPWIDGET_SERVICE");
 		registeredServices.put("android.media.AudioManager", "android.content.Context.AUDIO_SERVICE");
 		registeredServices.put("android.app.backup.IBackupManager", "android.content.Context.BACKUP_SERVICE");
-		registeredServices.put("android.bluetooth.BluetoothAdapter", "android.content.Context.BLUETOOTH_SERVICE");
+		registeredServices.put("android.bluetooth.BluetoothManager", "android.content.Context.BLUETOOTH_SERVICE");
 		registeredServices.put("android.hardware.camera2.CameraManager", "android.content.Context.CAMERA_SERVICE");
 		registeredServices.put("android.view.accessibility.CaptioningManager", "android.content.Context.CAPTIONING_SERVICE");
 		registeredServices.put("android.content.ClipboardManager", "android.content.Context.CLIPBOARD_SERVICE");

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/ActivityWithServices.java
Patch:
@@ -83,7 +83,7 @@ public class ActivityWithServices extends Activity {
 	
 	// TODO API 18
 	// @SystemService
-	// BluetoothAdapter bluetoothAdapter;
+	// BluetoothManager bluetoothManager;
 	
 	// @SystemService
 	// CameraManager cameraManager; // hidden API

File: AndroidAnnotations/functional-test-1-5/src/test/java/org/androidannotations/test15/ServiceInjectionTest.java
Patch:
@@ -39,7 +39,7 @@ public void servicesAreInjected() {
 		// assertThat(activity.appWidgetManager).isNotNull(); // hidden API
 		assertThat(activity.audioManager).isNotNull();
 		// assertThat(activity.backupManager).isNotNull(); // hidden API
-		// assertThat(activity.bluetoothAdapter).isNotNull(); // TODO API 18
+		// assertThat(activity.bluetoothManager).isNotNull(); // TODO API 18
 		// assertThat(activity.cameraManager).isNotNull(); // hidden API
 		// assertThat(activity.captioningManager).isNotNull(); // TODO API 19
 		assertThat(activity.contentClipboardManager).isNotNull();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -141,6 +141,7 @@ public final class CanonicalNameConstants {
 	/*
 	 * RoboGuice
 	 */
+	public static final String ROBO_APPLICATION = "roboguice.application.RoboApplication";
 	public static final String ROBO_CONTEXT = "roboguice.util.RoboContext";
 	public static final String ROBO_INJECTOR = "roboguice.inject.RoboInjector";
 	public static final String KEY = "com.google.inject.Key";
@@ -152,6 +153,7 @@ public final class CanonicalNameConstants {
 	public static final String ON_NEW_INTENT_EVENT = "roboguice.activity.event.OnNewIntentEvent";
 	public static final String EVENT_MANAGER = "roboguice.event.EventManager";
 	public static final String CONTEXT_SCOPE = "roboguice.inject.ContextScope";
+	public static final String VIEW_MEMBERS_INJECTOR = "roboguice.inject.ViewListener.ViewMembersInjector";
 	public static final String ROBO_GUICE = "roboguice.RoboGuice";
 	public static final String INJECT = "com.google.inject.Inject";
 	public static final String ON_STOP_EVENT = "roboguice.activity.event.OnStopEvent";

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/HasOnActivityResult.java
Patch:
@@ -26,7 +26,5 @@ public interface HasOnActivityResult extends GeneratedClassHolder {
 
 	JVar getOnActivityResultResultCodeParam();
 
-	JVar getOnActivityResultExtras();
-
 	JMethod getOnActivityResultMethod();
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -193,7 +193,7 @@ public void isPublic(Element element, IsValid valid) {
 	}
 
 	public void isStatic(Element element, IsValid valid) {
-		if (!annotationHelper.isPublic(element)) {
+		if (!annotationHelper.isStatic(element)) {
 			valid.invalidate();
 			annotationHelper.printAnnotationError(element, "%s cannot be used on a non static inner element");
 		}

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/innerclasses/ActivityWithInnerEnhancedClasses.java
Patch:
@@ -42,7 +42,7 @@ public InnerViewGroup(Context context) {
 	}
 
 	@EBean
-	public static class InnerBean {
+	protected static class InnerBean {
 
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -193,7 +193,7 @@ public void isPublic(Element element, IsValid valid) {
 	}
 
 	public void isStatic(Element element, IsValid valid) {
-		if (!annotationHelper.isPublic(element)) {
+		if (!annotationHelper.isStatic(element)) {
 			valid.invalidate();
 			annotationHelper.printAnnotationError(element, "%s cannot be used on a non static inner element");
 		}

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/innerclasses/ActivityWithInnerEnhancedClasses.java
Patch:
@@ -42,7 +42,7 @@ public InnerViewGroup(Context context) {
 	}
 
 	@EBean
-	public static class InnerBean {
+	protected static class InnerBean {
 
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraHandler.java
Patch:
@@ -23,6 +23,7 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
+import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.Extra;
 import org.androidannotations.helper.APTCodeModelHelper;
@@ -94,7 +95,8 @@ private void injectExtraInComponent(Element element, HasExtras hasExtras, JField
 		JVar extras = hasExtras.getInjectExtras();
 		JBlock injectExtrasBlock = hasExtras.getInjectExtrasBlock();
 
-		BundleHelper bundleHelper = new BundleHelper(annotationHelper, element);
+		TypeMirror type = codeModelHelper.getActualType(element, hasExtras);
+		BundleHelper bundleHelper = new BundleHelper(annotationHelper, type);
 
 		JFieldRef extraField = JExpr.ref(fieldName);
 		JBlock ifContainsKey = injectExtrasBlock._if(JExpr.invoke(extras, "containsKey").arg(extraKeyStaticField))._then();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ServiceActionHandler.java
Patch:
@@ -98,7 +98,7 @@ private void addActionInOnHandleIntent(EIntentServiceHolder holder, ExecutableEl
                 String extraParamName = paramName + "Extra";
                 JFieldVar paramVar = getStaticExtraField(holder, paramName);
                 JClass extraParamClass = codeModelHelper.typeMirrorToJClass(param.asType(), holder);
-                BundleHelper bundleHelper = new BundleHelper(annotationHelper, param);
+                BundleHelper bundleHelper = new BundleHelper(annotationHelper, param.asType());
 
                 JExpression getExtraExpression = JExpr.invoke(extras, bundleHelper.getMethodNameToRestore()).arg(paramVar);
                 if (bundleHelper.restoreCallNeedCastStatement()) {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ExtraHandler.java
Patch:
@@ -23,6 +23,7 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
+import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.Extra;
 import org.androidannotations.helper.APTCodeModelHelper;
@@ -94,7 +95,8 @@ private void injectExtraInComponent(Element element, HasExtras hasExtras, JField
 		JVar extras = hasExtras.getInjectExtras();
 		JBlock injectExtrasBlock = hasExtras.getInjectExtrasBlock();
 
-		BundleHelper bundleHelper = new BundleHelper(annotationHelper, element);
+		TypeMirror type = codeModelHelper.getActualType(element, hasExtras);
+		BundleHelper bundleHelper = new BundleHelper(annotationHelper, type);
 
 		JFieldRef extraField = JExpr.ref(fieldName);
 		JBlock ifContainsKey = injectExtrasBlock._if(JExpr.invoke(extras, "containsKey").arg(extraKeyStaticField))._then();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ServiceActionHandler.java
Patch:
@@ -98,7 +98,7 @@ private void addActionInOnHandleIntent(EIntentServiceHolder holder, ExecutableEl
                 String extraParamName = paramName + "Extra";
                 JFieldVar paramVar = getStaticExtraField(holder, paramName);
                 JClass extraParamClass = codeModelHelper.typeMirrorToJClass(param.asType(), holder);
-                BundleHelper bundleHelper = new BundleHelper(annotationHelper, param);
+                BundleHelper bundleHelper = new BundleHelper(annotationHelper, param.asType());
 
                 JExpression getExtraExpression = JExpr.invoke(extras, bundleHelper.getMethodNameToRestore()).arg(paramVar);
                 if (bundleHelper.restoreCallNeedCastStatement()) {

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Receiver.java
Patch:
@@ -70,10 +70,10 @@
  *      &#064;Receiver(actions = {@link android.net.wifi.WifiManager#WIFI_STATE_CHANGED_ACTION}, registerAt = RegisterAt.OnResumeOnPause)
  *      public void onWifiStateChangedWithoutIntent();
  *      
- *      &#064;Receiver(actions = {@link android.Intent.ACTION_VIEW}, dataSchemes = "http")
+ *      &#064;Receiver(actions = {@link android.content.Intent#ACTION_VIEW}, dataSchemes = "http")
  *      public void onHttpUrlOpened(Intent intent);
  *      
- *      &#064;Receiver(actions = {@link android.Intent.ACTION_VIEW}, dataSchemes = {"http", "https"})
+ *      &#064;Receiver(actions = {@link android.content.Intent#ACTION_VIEW}, dataSchemes = {"http", "https"})
  *      public void onHttpOrHttpsUrlOpened(Intent intent);
  * 
  * }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Receiver.java
Patch:
@@ -70,10 +70,10 @@
  *      &#064;Receiver(actions = {@link android.net.wifi.WifiManager#WIFI_STATE_CHANGED_ACTION}, registerAt = RegisterAt.OnResumeOnPause)
  *      public void onWifiStateChangedWithoutIntent();
  *      
- *      &#064;Receiver(actions = {@link android.Intent.ACTION_VIEW}, dataSchemes = "http")
+ *      &#064;Receiver(actions = {@link android.content.Intent#ACTION_VIEW}, dataSchemes = "http")
  *      public void onHttpUrlOpened(Intent intent);
  *      
- *      &#064;Receiver(actions = {@link android.Intent.ACTION_VIEW}, dataSchemes = {"http", "https"})
+ *      &#064;Receiver(actions = {@link android.content.Intent#ACTION_VIEW}, dataSchemes = {"http", "https"})
  *      public void onHttpOrHttpsUrlOpened(Intent intent);
  * 
  * }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -141,6 +141,7 @@ public final class CanonicalNameConstants {
 	/*
 	 * RoboGuice
 	 */
+	public static final String ROBO_APPLICATION = "roboguice.application.RoboApplication";
 	public static final String ROBO_CONTEXT = "roboguice.util.RoboContext";
 	public static final String ROBO_INJECTOR = "roboguice.inject.RoboInjector";
 	public static final String KEY = "com.google.inject.Key";
@@ -152,6 +153,7 @@ public final class CanonicalNameConstants {
 	public static final String ON_NEW_INTENT_EVENT = "roboguice.activity.event.OnNewIntentEvent";
 	public static final String EVENT_MANAGER = "roboguice.event.EventManager";
 	public static final String CONTEXT_SCOPE = "roboguice.inject.ContextScope";
+	public static final String VIEW_MEMBERS_INJECTOR = "roboguice.inject.ViewListener.ViewMembersInjector";
 	public static final String ROBO_GUICE = "roboguice.RoboGuice";
 	public static final String INJECT = "com.google.inject.Inject";
 	public static final String ON_STOP_EVENT = "roboguice.activity.event.OnStopEvent";

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/receiver/ActivityWithReceiver.java
Patch:
@@ -42,7 +42,7 @@ protected void onLocalWifiStateChanged() {
 	}
 
 	@Receiver(actions = "CUSTOM_HTTP_ACTION", dataSchemes = "http", registerAt = Receiver.RegisterAt.OnCreateOnDestroy)
-	protected void onDataShemeHttp(Intent intent) {
+	protected void onDataSchemeHttp(Intent intent) {
 		dataSchemeHttpIntentReceived = true;
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ReceiverActionHandler.java
Patch:
@@ -112,7 +112,7 @@ private void addActionInOnReceive(EReceiverHolder holder, ExecutableElement exec
 					paramName = annotation.value();
 				}
 
-				String extraParamName = paramName + "Extra";
+				String extraParamName = paramName.replaceAll("\\.", "_") + "_Extra";
 				JFieldVar paramVar = getStaticExtraField(holder, paramName);
 				JClass extraParamClass = codeModelHelper.typeMirrorToJClass(param.asType(), holder);
 				BundleHelper bundleHelper = new BundleHelper(annotationHelper, param);

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ViewsById.java
Patch:
@@ -41,7 +41,7 @@
  * &#064;EActivity(R.layout.main)
  * public class MyActivity extends Activity {
  *
- * 	// Injects R.id.myEditText
+ * 	// Injects R.id.edit1 and R.id.edit2 into the List.
  * 	&#064;ViewsById({R.id.edit1, R.id.edit2})
  * 	List&lt;EditText&gt; myEditTexts;
  *

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ViewsById.java
Patch:
@@ -41,7 +41,7 @@
  * &#064;EActivity(R.layout.main)
  * public class MyActivity extends Activity {
  *
- * 	// Injects R.id.myEditText
+ * 	// Injects R.id.edit1 and R.id.edit2 into the List.
  * 	&#064;ViewsById({R.id.edit1, R.id.edit2})
  * 	List&lt;EditText&gt; myEditTexts;
  *

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EFragmentHolder.java
Patch:
@@ -126,7 +126,7 @@ private void setFindViewById() {
 	private void setFragmentBuilder() throws JClassAlreadyExistsException {
 		fragmentBuilderClass = generatedClass._class(PUBLIC | STATIC, "FragmentBuilder_");
 		JClass superClass = refClass(org.androidannotations.api.builder.FragmentBuilder.class);
-		superClass = superClass.narrow(fragmentBuilderClass, getGeneratedClass());
+		superClass = superClass.narrow(fragmentBuilderClass, getAnnotatedClass());
 		fragmentBuilderClass._extends(superClass);
 		fragmentArgumentsBuilderField = ref("args");
 		setFragmentBuilderBuild();

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Fullscreen.java
Patch:
@@ -21,8 +21,9 @@
 import java.lang.annotation.Target;
 
 /**
+ * <p>
  * Should be used on {@link EActivity} classes that must be fullscreen.
- * <p/>
+ * </p>
  * <blockquote>
  * 
  * Example :

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/InstanceState.java
Patch:
@@ -21,9 +21,11 @@
 import java.lang.annotation.Target;
 
 /**
+ * <p>
  * Use on activity fields to save and restore their values when the system calls
  * <code>onSaveInstanceState(Bundle)</code> and <code>onCreate(Bundle)</code>.
- * <p/>
+ * </p>
+ *
  * <blockquote>
  * 
  * Example :

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SystemService.java
Patch:
@@ -21,9 +21,10 @@
 import java.lang.annotation.Target;
 
 /**
+ * <p>
  * Use it on a SystemService fields in any enhanced classes to inject the
  * according manager.
- * <p/>
+ * </p>
  * <blockquote>
  * 
  * Example :

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestClientErrorHandling.java
Patch:
@@ -23,7 +23,8 @@ public interface RestClientErrorHandling {
 	/**
 	 * Sets the error handler called when a rest error occurs.
 	 * 
-	 * @param handler
+	 * @param handler {@link org.androidannotations.api.rest.RestErrorHandler}
+	 *      which handle exception from rest service
 	 */
 	void setRestErrorHandler(RestErrorHandler handler);
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestClientRootUrl.java
Patch:
@@ -30,7 +30,7 @@ public interface RestClientRootUrl {
 	/**
 	 * Sets the root URL for the rest service.
 	 * 
-	 * @param rootUrl
+	 * @param rootUrl The new root url
 	 */
 	void setRootUrl(String rootUrl);
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestClientSupport.java
Patch:
@@ -32,7 +32,7 @@ public interface RestClientSupport {
 	/**
 	 * Sets the rest template used by the rest service implementation.
 	 * 
-	 * @param rt
+	 * @param rt New {@link RestTemplate}
 	 */
 	void setRestTemplate(RestTemplate rt);
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestErrorHandler.java
Patch:
@@ -24,7 +24,7 @@ public interface RestErrorHandler {
 	/**
 	 * Called when an exception occurs within the rest client.
 	 * 
-	 * @param e
+	 * @param e Exception thrown by the Rest service
 	 */
 	void onRestClientExceptionThrown(NestedRuntimeException e);
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Fullscreen.java
Patch:
@@ -21,8 +21,9 @@
 import java.lang.annotation.Target;
 
 /**
+ * <p>
  * Should be used on {@link EActivity} classes that must be fullscreen.
- * <p/>
+ * </p>
  * <blockquote>
  * 
  * Example :

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/InstanceState.java
Patch:
@@ -21,9 +21,11 @@
 import java.lang.annotation.Target;
 
 /**
+ * <p>
  * Use on activity fields to save and restore their values when the system calls
  * <code>onSaveInstanceState(Bundle)</code> and <code>onCreate(Bundle)</code>.
- * <p/>
+ * </p>
+ *
  * <blockquote>
  * 
  * Example :

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SystemService.java
Patch:
@@ -21,9 +21,10 @@
 import java.lang.annotation.Target;
 
 /**
+ * <p>
  * Use it on a SystemService fields in any enhanced classes to inject the
  * according manager.
- * <p/>
+ * </p>
  * <blockquote>
  * 
  * Example :

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestClientErrorHandling.java
Patch:
@@ -23,7 +23,8 @@ public interface RestClientErrorHandling {
 	/**
 	 * Sets the error handler called when a rest error occurs.
 	 * 
-	 * @param handler
+	 * @param handler {@link org.androidannotations.api.rest.RestErrorHandler}
+	 *      which handle exception from rest service
 	 */
 	void setRestErrorHandler(RestErrorHandler handler);
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestClientRootUrl.java
Patch:
@@ -30,7 +30,7 @@ public interface RestClientRootUrl {
 	/**
 	 * Sets the root URL for the rest service.
 	 * 
-	 * @param rootUrl
+	 * @param rootUrl The new root url
 	 */
 	void setRootUrl(String rootUrl);
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestClientSupport.java
Patch:
@@ -32,7 +32,7 @@ public interface RestClientSupport {
 	/**
 	 * Sets the rest template used by the rest service implementation.
 	 * 
-	 * @param rt
+	 * @param rt New {@link RestTemplate}
 	 */
 	void setRestTemplate(RestTemplate rt);
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestErrorHandler.java
Patch:
@@ -24,7 +24,7 @@ public interface RestErrorHandler {
 	/**
 	 * Called when an exception occurs within the rest client.
 	 * 
-	 * @param e
+	 * @param e Exception thrown by the Rest service
 	 */
 	void onRestClientExceptionThrown(NestedRuntimeException e);
 }

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/IgnoredWhenDetached.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/IgnoredWhenDetachedHandler.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/IgnoredWhenDetachedHandler.java
Patch:
@@ -20,6 +20,7 @@
 import org.androidannotations.annotations.IgnoredWhenDetached;
 import org.androidannotations.helper.APTCodeModelHelper;
 import org.androidannotations.holder.EComponentHolder;
+import org.androidannotations.holder.EFragmentHolder;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
 
@@ -29,7 +30,7 @@
 
 import static com.sun.codemodel.JExpr.*;
 
-public class IgnoredWhenDetachedHandler extends BaseAnnotationHandler<EComponentHolder> {
+public class IgnoredWhenDetachedHandler extends BaseAnnotationHandler<EFragmentHolder> {
 
 	private final APTCodeModelHelper codeModelHelper = new APTCodeModelHelper();
 
@@ -46,7 +47,7 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 	}
 
 	@Override
-	public void process(Element element, EComponentHolder holder) throws Exception {
+	public void process(Element element, EFragmentHolder holder) throws Exception {
 		ExecutableElement executableElement = (ExecutableElement) element;
 		JMethod delegatingMethod = codeModelHelper.overrideAnnotatedMethod(executableElement, holder);
 		JBlock previousMethodBody = codeModelHelper.removeBody(delegatingMethod);

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/efragment/MyListFragment.java
Patch:
@@ -55,7 +55,7 @@ void uiThread() {
 		didExecute = true;
 	}
 
-	@UiThread
+	@UiThread(propagation = UiThread.Propagation.REUSE)
 	@IgnoredWhenDetached
 	void uiThreadIgnored() {
 		didExecute = true;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestErrorHandler.java
Patch:
@@ -15,7 +15,7 @@
  */
 package org.androidannotations.api.rest;
 
-import org.springframework.web.client.RestClientException;
+import org.springframework.core.NestedRuntimeException;
 
 /**
  * This interface is used for handling rest client exceptions.
@@ -26,5 +26,5 @@ public interface RestErrorHandler {
 	 * 
 	 * @param e
 	 */
-	void onRestClientExceptionThrown(RestClientException e);
+	void onRestClientExceptionThrown(NestedRuntimeException e);
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/rest/RestMethodHandler.java
Patch:
@@ -230,7 +230,7 @@ private JBlock surroundWithRestTryCatch(RestHolder holder, JBlock block, boolean
 			JTryBlock tryBlock = newBlock._try();
 			codeModelHelper.copy(block, tryBlock.body());
 
-			JCatchBlock jCatch = tryBlock._catch(classes().REST_CLIENT_EXCEPTION);
+			JCatchBlock jCatch = tryBlock._catch(classes().NESTED_RUNTIME_EXCEPTION);
 
 			JBlock catchBlock = jCatch.body();
 			JConditional conditional = catchBlock._if(JOp.ne(holder.getRestErrorHandlerField(), JExpr._null()));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -137,6 +137,7 @@ public final class CanonicalNameConstants {
 	public static final String HTTP_AUTHENTICATION = "org.springframework.http.HttpAuthentication";
 	public static final String HTTP_BASIC_AUTHENTICATION = "org.springframework.http.HttpBasicAuthentication";
 	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
+	public static final String NESTED_RUNTIME_EXCEPTION = "org.springframework.core.NestedRuntimeException";
 
 	/*
 	 * RoboGuice

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/process/ProcessHolder.java
Patch:
@@ -177,6 +177,7 @@ public class Classes {
 		public final JClass HTTP_AUTHENTICATION = refClass(CanonicalNameConstants.HTTP_AUTHENTICATION);
 		public final JClass HTTP_BASIC_AUTHENTICATION = refClass(CanonicalNameConstants.HTTP_BASIC_AUTHENTICATION);
 		public final JClass REST_CLIENT_EXCEPTION = refClass(CanonicalNameConstants.REST_CLIENT_EXCEPTION);
+		public final JClass NESTED_RUNTIME_EXCEPTION = refClass(CanonicalNameConstants.NESTED_RUNTIME_EXCEPTION);
 	}
 
 	private final Map<Element, GeneratedClassHolder> generatedClassHolders = new HashMap<Element, GeneratedClassHolder>();

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/RestErrorHandler.java
Patch:
@@ -15,7 +15,7 @@
  */
 package org.androidannotations.api.rest;
 
-import org.springframework.web.client.RestClientException;
+import org.springframework.core.NestedRuntimeException;
 
 /**
  * This interface is used for handling rest client exceptions.
@@ -26,5 +26,5 @@ public interface RestErrorHandler {
 	 * 
 	 * @param e
 	 */
-	void onRestClientExceptionThrown(RestClientException e);
+	void onRestClientExceptionThrown(NestedRuntimeException e);
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/rest/RestMethodHandler.java
Patch:
@@ -230,7 +230,7 @@ private JBlock surroundWithRestTryCatch(RestHolder holder, JBlock block, boolean
 			JTryBlock tryBlock = newBlock._try();
 			codeModelHelper.copy(block, tryBlock.body());
 
-			JCatchBlock jCatch = tryBlock._catch(classes().REST_CLIENT_EXCEPTION);
+			JCatchBlock jCatch = tryBlock._catch(classes().NESTED_RUNTIME_EXCEPTION);
 
 			JBlock catchBlock = jCatch.body();
 			JConditional conditional = catchBlock._if(JOp.ne(holder.getRestErrorHandlerField(), JExpr._null()));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -137,6 +137,7 @@ public final class CanonicalNameConstants {
 	public static final String HTTP_AUTHENTICATION = "org.springframework.http.HttpAuthentication";
 	public static final String HTTP_BASIC_AUTHENTICATION = "org.springframework.http.HttpBasicAuthentication";
 	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
+	public static final String NESTED_RUNTIME_EXCEPTION = "org.springframework.core.NestedRuntimeException";
 
 	/*
 	 * RoboGuice

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/process/ProcessHolder.java
Patch:
@@ -177,6 +177,7 @@ public class Classes {
 		public final JClass HTTP_AUTHENTICATION = refClass(CanonicalNameConstants.HTTP_AUTHENTICATION);
 		public final JClass HTTP_BASIC_AUTHENTICATION = refClass(CanonicalNameConstants.HTTP_BASIC_AUTHENTICATION);
 		public final JClass REST_CLIENT_EXCEPTION = refClass(CanonicalNameConstants.REST_CLIENT_EXCEPTION);
+		public final JClass NESTED_RUNTIME_EXCEPTION = refClass(CanonicalNameConstants.NESTED_RUNTIME_EXCEPTION);
 	}
 
 	private final Map<Element, GeneratedClassHolder> generatedClassHolders = new HashMap<Element, GeneratedClassHolder>();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -142,7 +142,7 @@ public final class CanonicalNameConstants {
 	 * RoboGuice
 	 */
 	public static final String ROBO_CONTEXT = "roboguice.util.RoboContext";
-	public static final String INJECTOR = "com.google.inject.Injector";
+	public static final String ROBO_INJECTOR = "roboguice.inject.RoboInjector";
 	public static final String KEY = "com.google.inject.Key";
 	public static final String CONTENT_VIEW_LISTENER = "roboguice.inject.ContentViewListener";
 	public static final String ON_RESTART_EVENT = "roboguice.activity.event.OnRestartEvent";

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -664,13 +664,13 @@ public void hasRoboGuiceJars(Element element, IsValid valid) {
 		}
 
 		try {
-			if (elementUtils.getTypeElement(CanonicalNameConstants.INJECTOR) == null) {
+			if (elementUtils.getTypeElement(CanonicalNameConstants.ROBO_INJECTOR) == null) {
 				valid.invalidate();
-				annotationHelper.printAnnotationError(element, "Could not find the Guice framework in the classpath, the following class is missing: " + CanonicalNameConstants.INJECTOR);
+				annotationHelper.printAnnotationError(element, "Could not find the Guice framework in the classpath, the following class is missing: " + CanonicalNameConstants.ROBO_INJECTOR);
 			}
 		} catch (RuntimeException e) {
 			valid.invalidate();
-			annotationHelper.printAnnotationError(element, "Could not find the Guice framework in the classpath, the following class is missing: " + CanonicalNameConstants.INJECTOR);
+			annotationHelper.printAnnotationError(element, "Could not find the Guice framework in the classpath, the following class is missing: " + CanonicalNameConstants.ROBO_INJECTOR);
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/process/ProcessHolder.java
Patch:
@@ -130,7 +130,7 @@ public class Classes {
 		 * RoboGuice
 		 */
 		public final JClass ROBO_CONTEXT = refClass(CanonicalNameConstants.ROBO_CONTEXT);
-		public final JClass INJECTOR = refClass(CanonicalNameConstants.INJECTOR);
+		public final JClass ROBO_INJECTOR = refClass(CanonicalNameConstants.ROBO_INJECTOR);
 		public final JClass CONTENT_VIEW_LISTENER = refClass(CanonicalNameConstants.CONTENT_VIEW_LISTENER);
 		public final JClass KEY = refClass(CanonicalNameConstants.KEY);
 		public final JClass ON_RESTART_EVENT = refClass(CanonicalNameConstants.ON_RESTART_EVENT);

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/instancestate/SaveInstanceStateActivityParameterizedTest.java
Patch:
@@ -25,13 +25,13 @@
 import org.fest.util.Lists;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.ParameterizedRobolectricTestRunner;
+import org.robolectric.ParameterizedRobolectricTestRunnerWorkaround;
 import org.robolectric.ParameterizedRobolectricTestRunner.Parameters;
 import org.robolectric.Robolectric;
 
 import android.os.Bundle;
 
-@RunWith(ParameterizedRobolectricTestRunner.class)
+@RunWith(ParameterizedRobolectricTestRunnerWorkaround.class)
 public class SaveInstanceStateActivityParameterizedTest {
 	
 	@Parameters(name = "{0}")

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EditorAction.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/EditorActionHandler.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/EditorActionsHandledActivity.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/EBeanConverter.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/EBeanInterceptor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/MyRequestFactory.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -205,6 +205,7 @@ private void implementSetErrorHandler(List<ExecutableElement> methods) {
 		JMethod setErrorHandlerMethod = codeModelHelper.implementMethod(this, methods, "setRestErrorHandler", TypeKind.VOID.toString(), RestErrorHandler.class.getName());
 
 		if (setErrorHandlerMethod != null) {
+			setRestErrorHandlerField();
 			setErrorHandlerMethod.body().assign(_this().ref(getRestErrorHandlerField()), setErrorHandlerMethod.params().get(0));
 		}
 	}
@@ -291,9 +292,7 @@ private void setAuthenticationField() {
 	}
 
 	public JFieldVar getRestErrorHandlerField() {
-		if (restErrorHandlerField == null) {
-			setRestErrorHandlerField();
-		}
+		// restErrorHandlerField is created only if the method setRestErrorHandler is implemented
 		return restErrorHandlerField;
 	}
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/HttpMethodsService.java
Patch:
@@ -24,14 +24,16 @@
 import org.androidannotations.annotations.rest.Post;
 import org.androidannotations.annotations.rest.Put;
 import org.androidannotations.annotations.rest.Rest;
+import org.androidannotations.api.rest.RestClientErrorHandling;
+import org.androidannotations.api.rest.RestErrorHandler;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpMethod;
 import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;
 import org.springframework.web.client.RestTemplate;
 
 // if defined, the rootUrl will be added as a prefix to every request
 @Rest(rootUrl = "http://company.com/ajax/services", converters = { MappingJacksonHttpMessageConverter.class }, interceptors = { RequestInterceptor.class })
-public interface HttpMethodsService {
+public interface HttpMethodsService extends RestClientErrorHandling {
 
 	@Delete("/delete/")
 	void delete();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/AnnotationHandlers.java
Patch:
@@ -129,6 +129,8 @@ public AnnotationHandlers(ProcessingEnvironment processingEnvironment) {
         add(new UiThreadHandler(processingEnvironment));
         add(new BackgroundHandler(processingEnvironment));
 
+		/* SupposeUiThreadHandler and SupposeBackgroundHandler must be
+		 after all handlers that modifies generated method body */
         add(new SupposeUiThreadHandler(processingEnvironment));
         add(new SupposeBackgroundHandler(processingEnvironment));
 	}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/AbstractActivityTest.java
Patch:
@@ -21,8 +21,9 @@
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
 
-@RunWith(AndroidAnnotationsTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 public class AbstractActivityTest {
 
 	@Test

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/AwaitingResultActivityTest.java
Patch:
@@ -19,8 +19,9 @@
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
 
-@RunWith(AndroidAnnotationsTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 public class AwaitingResultActivityTest {
 
 	@Test

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/eintentservice/MyIntentServiceTest.java
Patch:
@@ -17,15 +17,15 @@
 
 import static org.fest.assertions.Assertions.assertThat;
 
-import org.androidannotations.test15.AndroidAnnotationsTestRunner;
 import org.androidannotations.test15.EmptyActivityWithoutLayout;
 import org.androidannotations.test15.EmptyActivityWithoutLayout_;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
 
 import android.content.Intent;
 
-@RunWith(AndroidAnnotationsTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 public class MyIntentServiceTest {
 
 	@Test

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/inheritance/InheritanceTest.java
Patch:
@@ -20,14 +20,14 @@
 
 import org.androidannotations.api.view.HasViews;
 import org.androidannotations.api.view.OnViewChangedNotifier;
-import org.androidannotations.test15.AndroidAnnotationsTestRunner;
 import org.junit.Test;
 import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
 
 import android.app.Activity;
 import android.content.Context;
 
-@RunWith(AndroidAnnotationsTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 public class InheritanceTest {
 
 	@Test

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/rest/HttpMethodServiceTest.java
Patch:
@@ -19,17 +19,17 @@
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
-import org.androidannotations.test15.AndroidAnnotationsTestRunner;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.Mockito;
+import org.robolectric.RobolectricTestRunner;
 import org.springframework.http.HttpEntity;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpMethod;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.client.RestTemplate;
 
-@RunWith(AndroidAnnotationsTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 public class HttpMethodServiceTest {
 	
 	@Test

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/rest/RequestTestBuilder.java
Patch:
@@ -29,14 +29,13 @@
 import org.apache.http.message.BasicHeader;
 import org.mockito.ArgumentMatcher;
 import org.mockito.Mockito;
+import org.robolectric.Robolectric;
 import org.springframework.http.HttpEntity;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpMethod;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.client.RestTemplate;
 
-import com.xtremelabs.robolectric.Robolectric;
-
 public class RequestTestBuilder {
 	private MyService_ myService = new MyService_(null);
 	private HttpEntityArgumentMatcher entityArgumentMatcher = new HttpEntityArgumentMatcher();;

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/roboguice/RobolectricSampleTestModule.java
Patch:
@@ -17,13 +17,13 @@
 
 import java.util.Date;
 
-import roboguice.config.AbstractAndroidModule;
 import roboguice.util.Ln;
 import android.util.Log;
 
+import com.google.inject.AbstractModule;
 import com.google.inject.Scopes;
 
-public class RobolectricSampleTestModule extends AbstractAndroidModule {
+public class RobolectricSampleTestModule extends AbstractModule {
 
 	@Override
 	protected void configure() {

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/EBeanConverter.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/EBeanInterceptor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/MyRequestFactory.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2014 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/roboguice/RobolectricSampleModule.java
Patch:
@@ -15,9 +15,10 @@
  */
 package org.androidannotations.test15.roboguice;
 
-import roboguice.config.AbstractAndroidModule;
+import com.google.inject.AbstractModule;
 
-public class RobolectricSampleModule extends AbstractAndroidModule {
+
+public class RobolectricSampleModule extends AbstractModule {
 
 	@Override
 	protected void configure() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/SharedPrefHandler.java
Patch:
@@ -263,7 +263,7 @@ private JExpression createFieldMethod(SharedPrefHolder holder, ExecutableElement
 			annotationClass = null;
 		}
 
-		int keyResId = ResId.DEFAULT_VALUE;
+		Integer keyResId = ResId.DEFAULT_VALUE;
 
 		if (annotationClass != null) {
 			keyResId = annotationHelper.extractAnnotationParameter(method, annotationClass.getName(), "keyRes");

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/MyService.java
Patch:
@@ -112,6 +112,7 @@ public interface MyService {
 	GenericEvent<GenericEvent<GenericEvent<String>>> getEventsGenericsInception(String location, int year) throws RestClientException;
 
 	@Get("/events/{year}/{location}")
+	@SetsCookie({ "xt", "sjsaid" })
 	Map<String, Event> getEventsGenericsMap(String location, int year) throws RestClientException;
 
 	@RequiresCookie("sjsaid")

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/MyService.java
Patch:
@@ -112,6 +112,7 @@ public interface MyService {
 	GenericEvent<GenericEvent<GenericEvent<String>>> getEventsGenericsInception(String location, int year) throws RestClientException;
 
 	@Get("/events/{year}/{location}")
+	@SetsCookie({ "xt", "sjsaid" })
 	Map<String, Event> getEventsGenericsMap(String location, int year) throws RestClientException;
 
 	@RequiresCookie("sjsaid")

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/receiver/ReceiverRegistrationTest.java
Patch:
@@ -46,7 +46,6 @@ public void activity_with_invalid_registerAt_not_compile() throws IOException {
 	public void activity_with_two_method_with_same_name_not_compile() throws IOException {
 		CompileResult result = compileFiles(ActivityWithTwoSameNameMethod.class);
 		assertCompilationErrorOn(ActivityWithTwoSameNameMethod.class, "@Receiver", result);
-		assertCompilationErrorCount(2, result);
 	}
 
 	@Test

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/BeanHandler.java
Patch:
@@ -30,7 +30,6 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
-import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.TypeMirror;
 
 import static com.sun.codemodel.JExpr._null;
@@ -63,8 +62,7 @@ public void process(Element element, EComponentHolder holder) throws Exception {
 		}
 
 		String typeQualifiedName = typeMirror.toString();
-		TypeElement elementType = processingEnvironment().getElementUtils().getTypeElement(typeQualifiedName);
-		JClass injectedClass = processHolder.getGeneratedClassHolder(elementType).getGeneratedClass();
+		JClass injectedClass = refClass(annotationHelper.generatedClassQualifiedNameFromQualifiedName(typeQualifiedName));
 
 		String fieldName = element.getSimpleName().toString();
 		JFieldRef beanField = ref(fieldName);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -569,6 +569,7 @@ public void isSharedPreference(Element element, AnnotationElements validatedElem
 			boolean sharedPrefValidatedInRound = false;
 			if (elementTypeName.endsWith(GENERATION_SUFFIX)) {
 				String prefTypeName = elementTypeName.substring(0, elementTypeName.length() - GENERATION_SUFFIX.length());
+				prefTypeName = prefTypeName.replace("_.", ".");
 
 				Set<? extends Element> sharedPrefElements = validatedElements.getRootAnnotatedElements(SharedPref.class.getName());
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/prefs/PrefsActivity.java
Patch:
@@ -45,4 +45,7 @@ public class PrefsActivity extends Activity {
 	@Pref
 	UniquePrefs_ uniquePrefs;
 
+	@Pref
+	InnerPrefs_.InnerSharedPrefs_ innerPrefs;
+
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/BeanHandler.java
Patch:
@@ -62,11 +62,11 @@ public void process(Element element, EComponentHolder holder) throws Exception {
 			typeMirror = holder.processingEnvironment().getTypeUtils().erasure(typeMirror);
 		}
 
-		String fieldName = element.getSimpleName().toString();
 		String typeQualifiedName = typeMirror.toString();
 		TypeElement elementType = processingEnvironment().getElementUtils().getTypeElement(typeQualifiedName);
 		JClass injectedClass = processHolder.getGeneratedClassHolder(elementType).getGeneratedClass();
 
+		String fieldName = element.getSimpleName().toString();
 		JFieldRef beanField = ref(fieldName);
 		JBlock block = holder.getInitBody();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -178,6 +178,7 @@ private void implementSetErrorHandler(List<ExecutableElement> methods) {
 		JMethod setErrorHandlerMethod = codeModelHelper.implementMethod(this, methods, "setRestErrorHandler", TypeKind.VOID.toString(), RestErrorHandler.class.getName());
 
 		if (setErrorHandlerMethod != null) {
+			setRestErrorHandlerField();
 			setErrorHandlerMethod.body().assign(_this().ref(getRestErrorHandlerField()), setErrorHandlerMethod.params().get(0));
 		}
 	}
@@ -256,9 +257,7 @@ private void setAuthenticationField() {
 	}
 
 	public JFieldVar getRestErrorHandlerField() {
-		if (restErrorHandlerField == null) {
-			setRestErrorHandlerField();
-		}
+		// restErrorHandlerField is created only if the method setRestErrorHandler is implemented
 		return restErrorHandlerField;
 	}
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/rest/HttpMethodsService.java
Patch:
@@ -24,14 +24,16 @@
 import org.androidannotations.annotations.rest.Post;
 import org.androidannotations.annotations.rest.Put;
 import org.androidannotations.annotations.rest.Rest;
+import org.androidannotations.api.rest.RestClientErrorHandling;
+import org.androidannotations.api.rest.RestErrorHandler;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpMethod;
 import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;
 import org.springframework.web.client.RestTemplate;
 
 // if defined, the rootUrl will be added as a prefix to every request
 @Rest(rootUrl = "http://company.com/ajax/services", converters = { MappingJacksonHttpMessageConverter.class }, interceptors = { RequestInterceptor.class })
-public interface HttpMethodsService {
+public interface HttpMethodsService extends RestClientErrorHandling {
 
 	@Delete("/delete/")
 	void delete();

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -24,7 +24,8 @@
 
 /**
  * Use on {@link java.lang.Integer} or <code>int</code> array fields in any
- * enhanced classes that should be injected with this specific color resource.
+ * enhanced classes that should be injected with this specific int array
+ * resource.
  * <p/>
  * The annotation value must be one of R.array.* fields. If the value is not
  * set, the field name will be used as the R.array.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link android.content.res.XmlResourceParser} fields in any enhanced
- * classes that should be injected with this specific movie resource.
+ * classes that should be injected with this specific layout resource.
  * <p/>
  * The annotation value must be one of R.layout.* fields. If the value is not
  * set, the field name will be used as the R.layout.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.String} array fields in any enhanced classes that
- * should be injected with this specific color resource.
+ * should be injected with this specific string array resource.
  * <p/>
  * The annotation value must be one of R.array.* fields. If the value is not
  * set, the field name will be used as the R.array.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.String} fields in any enhanced classes that should be
- * injected with this specific color resource.
+ * injected with this specific string resource.
  * <p/>
  * The annotation value must be one of R.string.* fields. If the value is not
  * set, the field name will be used as the R.string.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.CharSequence} array fields in any enhanced classes
- * that should be injected with this specific color resource.
+ * that should be injected with this specific string array resource.
  * <p/>
  * The annotation value must be one of R.array.* fields. If the value is not
  * set, the field name will be used as the R.array.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.CharSequence} fields in any enhanced classes that
- * should be injected with this specific color resource.
+ * should be injected with this specific string resource.
  * <p/>
  * The annotation value must be one of R.string.* fields. If the value is not
  * set, the field name will be used as the R.string.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -24,7 +24,8 @@
 
 /**
  * Use on {@link java.lang.Integer} or <code>int</code> array fields in any
- * enhanced classes that should be injected with this specific color resource.
+ * enhanced classes that should be injected with this specific int array
+ * resource.
  * <p/>
  * The annotation value must be one of R.array.* fields. If the value is not
  * set, the field name will be used as the R.array.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link android.content.res.XmlResourceParser} fields in any enhanced
- * classes that should be injected with this specific movie resource.
+ * classes that should be injected with this specific layout resource.
  * <p/>
  * The annotation value must be one of R.layout.* fields. If the value is not
  * set, the field name will be used as the R.layout.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.String} array fields in any enhanced classes that
- * should be injected with this specific color resource.
+ * should be injected with this specific string array resource.
  * <p/>
  * The annotation value must be one of R.array.* fields. If the value is not
  * set, the field name will be used as the R.array.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.String} fields in any enhanced classes that should be
- * injected with this specific color resource.
+ * injected with this specific string resource.
  * <p/>
  * The annotation value must be one of R.string.* fields. If the value is not
  * set, the field name will be used as the R.string.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.CharSequence} array fields in any enhanced classes
- * that should be injected with this specific color resource.
+ * that should be injected with this specific string array resource.
  * <p/>
  * The annotation value must be one of R.array.* fields. If the value is not
  * set, the field name will be used as the R.array.* field name.

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextRes.java
Patch:
@@ -24,7 +24,7 @@
 
 /**
  * Use on {@link java.lang.CharSequence} fields in any enhanced classes that
- * should be injected with this specific color resource.
+ * should be injected with this specific string resource.
  * <p/>
  * The annotation value must be one of R.string.* fields. If the value is not
  * set, the field name will be used as the R.string.* field name.

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EComponentWithViewSupportHolder.java
Patch:
@@ -32,7 +32,6 @@
 import org.androidannotations.api.view.HasViews;
 import org.androidannotations.api.view.OnViewChangedListener;
 import org.androidannotations.api.view.OnViewChangedNotifier;
-import org.androidannotations.helper.APTCodeModelHelper;
 import org.androidannotations.helper.ViewNotifierHelper;
 import org.androidannotations.process.ProcessHolder;
 
@@ -47,7 +46,6 @@
 
 public abstract class EComponentWithViewSupportHolder extends EComponentHolder {
 
-	private APTCodeModelHelper codeModelHelper;
 	protected ViewNotifierHelper viewNotifierHelper;
 	private JBlock onViewChangedBody;
 	private JVar onViewChangedHasViewsParam;
@@ -60,7 +58,6 @@ public abstract class EComponentWithViewSupportHolder extends EComponentHolder {
 
 	public EComponentWithViewSupportHolder(ProcessHolder processHolder, TypeElement annotatedElement) throws Exception {
 		super(processHolder, annotatedElement);
-		codeModelHelper = new APTCodeModelHelper();
 		viewNotifierHelper = new ViewNotifierHelper(this);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EIntentServiceHolder.java
Patch:
@@ -19,7 +19,6 @@
 
 import javax.lang.model.element.TypeElement;
 
-import org.androidannotations.helper.APTCodeModelHelper;
 import org.androidannotations.helper.AndroidManifest;
 import org.androidannotations.process.ProcessHolder;
 
@@ -31,8 +30,6 @@
 
 public class EIntentServiceHolder extends EServiceHolder {
 
-    private APTCodeModelHelper codeModelHelper = new APTCodeModelHelper();
-
     private JVar onHandleIntentIntent;
     private JMethod onHandleIntentMethod;
     private JBlock onHandleIntentBody;

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/TracedActivity.java
Patch:
@@ -45,6 +45,7 @@ public class TracedActivity extends Activity {
 	public boolean overloadedMethodInt = false;
 	public boolean overloadedMethodIntFLoat = false;
 
+	@Trace
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/TracedActivity.java
Patch:
@@ -45,6 +45,7 @@ public class TracedActivity extends Activity {
 	public boolean overloadedMethodInt = false;
 	public boolean overloadedMethodIntFLoat = false;
 
+	@Trace
 	@Override
 	public void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -82,7 +82,7 @@ public JClass typeMirrorToJClass(TypeMirror type, GeneratedClassHolder holder) {
             if (bound == null) {
                 bound = wildcardType.getSuperBound();
                 if (bound == null) {
-                    throw new IllegalArgumentException("There are should be 'extends' or 'super' in the wildcard");
+                    return holder.classes().OBJECT.wildcard();
                 }
                 return superWildcard(typeMirrorToJClass(bound, holder));
             }
@@ -147,7 +147,6 @@ public JMethod overrideAnnotatedMethod(ExecutableElement executableElement, Gene
 		JMethod method = holder.getGeneratedClass().method(JMod.PUBLIC, returnType, methodName);
 		method.annotate(Override.class);
 
-        System.out.println(executableType.getTypeVariables());
         for (TypeVariable typeParameter : executableType.getTypeVariables()) {
             TypeMirror bound = typeParameter.getUpperBound();
             JClass jClassBounds = typeMirrorToJClass(bound, holder);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/HierarchyViewerSupportHandler.java
Patch:
@@ -21,7 +21,6 @@
 import javax.lang.model.element.Element;
 
 import org.androidannotations.annotations.HierarchyViewerSupport;
-import org.androidannotations.api.ViewServer;
 import org.androidannotations.holder.EActivityHolder;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
@@ -45,8 +44,6 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 
 	@Override
 	public void process(Element element, EActivityHolder holder) throws Exception {
-		generateApiClass(element, ViewServer.class);
-
 		JInvocation viewServerInvocation = classes().VIEW_SERVER.staticInvoke("get").arg(_this());
 
 		holder.getOnViewChangedBody().invoke(viewServerInvocation, "addWindow").arg(_this());

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/OnBackPressedApiDependenciesTest.java
Patch:
@@ -18,7 +18,6 @@
 import java.io.IOException;
 
 import org.androidannotations.AndroidAnnotationProcessor;
-import org.androidannotations.api.SdkVersionHelper;
 import org.androidannotations.utils.AAProcessorTestHelper;
 import org.junit.Before;
 import org.junit.Test;
@@ -35,14 +34,12 @@ public void setup() {
 	@Test
 	public void activity_with_on_back_pressed_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithOnBackPressedMethod.class);
-		assertClassSourcesGeneratedToOutput(SdkVersionHelper.class);
 		assertCompilationSuccessful(result);
 	}
 
 	@Test
 	public void activity_without_on_back_pressed_do_not_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithBackgroundMethod.class);
-		assertClassSourcesNotGeneratedToOutput(SdkVersionHelper.class);
 		assertCompilationSuccessful(result);
 	}
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/OnBackgroundApiDependenciesTest.java
Patch:
@@ -18,7 +18,6 @@
 import java.io.IOException;
 
 import org.androidannotations.AndroidAnnotationProcessor;
-import org.androidannotations.api.BackgroundExecutor;
 import org.androidannotations.utils.AAProcessorTestHelper;
 import org.junit.Before;
 import org.junit.Test;
@@ -35,14 +34,12 @@ public void setup() {
 	@Test
 	public void activity_with_background_annotated_method_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithBackgroundMethod.class);
-		assertClassSourcesGeneratedToOutput(BackgroundExecutor.class);
 		assertCompilationSuccessful(result);
 	}
 
 	@Test
 	public void activity_without_background_annotated_method_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithOnBackPressedMethod.class);
-		assertClassSourcesNotGeneratedToOutput(BackgroundExecutor.class);
 		assertCompilationSuccessful(result);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/HierarchyViewerSupportHandler.java
Patch:
@@ -21,7 +21,6 @@
 import javax.lang.model.element.Element;
 
 import org.androidannotations.annotations.HierarchyViewerSupport;
-import org.androidannotations.api.ViewServer;
 import org.androidannotations.holder.EActivityHolder;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
@@ -45,8 +44,6 @@ public void validate(Element element, AnnotationElements validatedElements, IsVa
 
 	@Override
 	public void process(Element element, EActivityHolder holder) throws Exception {
-		generateApiClass(element, ViewServer.class);
-
 		JInvocation viewServerInvocation = classes().VIEW_SERVER.staticInvoke("get").arg(_this());
 
 		holder.getOnViewChangedBody().invoke(viewServerInvocation, "addWindow").arg(_this());

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/OnBackPressedApiDependenciesTest.java
Patch:
@@ -18,7 +18,6 @@
 import java.io.IOException;
 
 import org.androidannotations.AndroidAnnotationProcessor;
-import org.androidannotations.api.SdkVersionHelper;
 import org.androidannotations.utils.AAProcessorTestHelper;
 import org.junit.Before;
 import org.junit.Test;
@@ -35,14 +34,12 @@ public void setup() {
 	@Test
 	public void activity_with_on_back_pressed_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithOnBackPressedMethod.class);
-		assertClassSourcesGeneratedToOutput(SdkVersionHelper.class);
 		assertCompilationSuccessful(result);
 	}
 
 	@Test
 	public void activity_without_on_back_pressed_do_not_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithBackgroundMethod.class);
-		assertClassSourcesNotGeneratedToOutput(SdkVersionHelper.class);
 		assertCompilationSuccessful(result);
 	}
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/OnBackgroundApiDependenciesTest.java
Patch:
@@ -18,7 +18,6 @@
 import java.io.IOException;
 
 import org.androidannotations.AndroidAnnotationProcessor;
-import org.androidannotations.api.BackgroundExecutor;
 import org.androidannotations.utils.AAProcessorTestHelper;
 import org.junit.Before;
 import org.junit.Test;
@@ -35,14 +34,12 @@ public void setup() {
 	@Test
 	public void activity_with_background_annotated_method_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithBackgroundMethod.class);
-		assertClassSourcesGeneratedToOutput(BackgroundExecutor.class);
 		assertCompilationSuccessful(result);
 	}
 
 	@Test
 	public void activity_without_background_annotated_method_generate_api_dependency() throws IOException {
 		CompileResult result = compileFiles(ActivityWithOnBackPressedMethod.class);
-		assertClassSourcesNotGeneratedToOutput(BackgroundExecutor.class);
 		assertCompilationSuccessful(result);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/OptionsHelper.java
Patch:
@@ -81,7 +81,7 @@ private boolean getBoolean(Option option) {
 			String trace = options.get(key);
 			return !"false".equals(trace);
 		} else {
-			return true;
+			return false;
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/OptionsHelper.java
Patch:
@@ -81,7 +81,7 @@ private boolean getBoolean(Option option) {
 			String trace = options.get(key);
 			return !"false".equals(trace);
 		} else {
-			return true;
+			return false;
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -266,7 +266,7 @@ private void handleException(Set<? extends TypeElement> annotations, RoundEnviro
 		Iterator<? extends TypeElement> iterator = annotations.iterator();
 		if (iterator.hasNext()) {
 			Element element = roundEnv.getElementsAnnotatedWith(iterator.next()).iterator().next();
-			LOGGER.error("Something went wront : {}", errorMessage, element);
+			LOGGER.error("Something went wront : {}", element, errorMessage);
 		} else {
 			LOGGER.error("Something went wront : {}", errorMessage);
 		}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -266,7 +266,7 @@ private void handleException(Set<? extends TypeElement> annotations, RoundEnviro
 		Iterator<? extends TypeElement> iterator = annotations.iterator();
 		if (iterator.hasNext()) {
 			Element element = roundEnv.getElementsAnnotatedWith(iterator.next()).iterator().next();
-			LOGGER.error("Something went wront : {}", errorMessage, element);
+			LOGGER.error("Something went wront : {}", element, errorMessage);
 		} else {
 			LOGGER.error("Something went wront : {}", errorMessage);
 		}

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterViews.java
Patch:
@@ -26,8 +26,9 @@
  * Methods annotated with @{@link AfterViews} will be called after
  * {@link Activity#setContentView(int)} is called by the generated activity.
  * <p/>
- * This occurs AFTER <b>super.onCreate() is called</b>. Any view depending code
- * should be done in an {@link AfterViews} annotated method.
+ * This occurs AFTER <code>setContentView(View)</code> which is called at the
+ * end of super.onCreate(). Any view depending code should be done in an
+ * {@link AfterViews} annotated method.
  * <p/>
  * The method MUST have zero parameters.
  * <p/>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Background.java
Patch:
@@ -60,7 +60,7 @@
  * </blockquote>
  * <p/>
  * <b>Note</b>: Cancellation may or may not be successful. If the task wasn't
- * executed yet, it will be removed from the pool. But i could fail if task has
+ * executed yet, it will be removed from the pool. But it could fail if task has
  * already completed, has already been cancelled, or could not be cancelled for
  * some other reason. See {@link Future#cancel(boolean)} for more information.
  * 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Click.java
Patch:
@@ -25,8 +25,8 @@
  * by {@link android.view.View.OnClickListener#onClick(android.view.View)} when
  * the view has been clicked by the user.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method MAY have one parameter:
  * <ul>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/CustomTitle.java
Patch:
@@ -21,16 +21,16 @@
 import java.lang.annotation.Target;
 
 /**
- * Use it on activities to set a custom title layout.
+ * Use it on {@link EActivity} annotated classes to set a custom title layout.
  * <p/>
- * The activity must be annotated with {@link EActivity}.
+ * The annotation value is mandatory and should be one of R.layout.* fields.
  * <p/>
  * <blockquote>
  * 
  * Example :
  * 
  * <pre>
- * &#064;CustomTitle(R.string.activityTitle)
+ * &#064;CustomTitle(R.layout.activityTitleLayout)
  * &#064;EActivity(R.layout.main)
  * public class MyActivity extends Activity {
  * 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EActivity.java
Patch:
@@ -35,8 +35,8 @@
  * AndroidAnnotations to create Abstract classes that handle common code.
  * <p/>
  * The annotation value should be one of R.layout.* fields. If not set, no
- * content view will be set, and you should call the setContentView() method
- * yourself, in <b>onCreate()</b>
+ * content view will be set, and you should call the
+ * <code>setContentView()</code> method yourself, in <code>onCreate()</code>
  * <p/>
  * <blockquote>
  * 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EBean.java
Patch:
@@ -23,6 +23,9 @@
 /**
  * Should be used on custom classes to enable usage of AndroidAnnotations.
  * <p/>
+ * This class MUST have either a default constructor (ie without parameters) or
+ * a constructor with only a parameter of type {@link android.app.Context}.
+ * <p/>
  * Your code related to injected beans should go in an {@link AfterInject}
  * annotated method.
  * <p/>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EFragment.java
Patch:
@@ -36,8 +36,9 @@
  * AndroidAnnotations to create Abstract classes that handle common code.
  * <p/>
  * The annotation value should be one of R.layout.* fields. If not set, no
- * content view will be set, and you should call the setContentView() method
- * yourself, in <b>onCreate()</b>
+ * content view will be set, and you should call the
+ * <code>inflater.inflate()</code> method yourself, in
+ * <code>onCreateView()</code>.
  * <p/>
  * The generated class will also contain a FragmentBuilder to build fragment
  * with a fluent API. Arguments can be passed by using {@link FragmentArg}

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FromHtml.java
Patch:
@@ -27,8 +27,9 @@
  * {@link android.widget.TextView} subclass field annotated with
  * {@link ViewById} to inject text as HTML.
  * <p/>
- * The annotation value should be a R.id.* field that refers to string resource.
- * If not set, the method name will be used as the R.id.* field name.
+ * The annotation value should be a R.string.* field that refers to string
+ * resource. If not set, the method name will be used as the R.string.* field
+ * name.
  * <p/>
  * <blockquote>
  * 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemClick.java
Patch:
@@ -27,8 +27,8 @@
  * AdapterView<?>, android.view.View, int, long)} when a list item has been
  * clicked by the user.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method MAY have one parameter :
  * <ul>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -27,8 +27,8 @@
  * widget. AdapterView<?>, android.view.View, int, long)} when a list item has
  * been long clicked by the user.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method MAY have one parameter :
  * <ul>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemSelect.java
Patch:
@@ -27,8 +27,8 @@
  * widget. AdapterView<?>, android.view.View, int, long)} when a list item has
  * been selected by the user.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method MAY have one or two parameters :
  * <ul>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/LongClick.java
Patch:
@@ -26,8 +26,8 @@
  * {@link android.view.View.OnLongClickListener#onLongClick(android.view.View)}
  * when the view has been long clicked by the user.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method may return a <code>boolean</code>, void, or a
  * {@link java.lang.Boolean}. If returning void, it will be considered as

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/NoTitle.java
Patch:
@@ -24,7 +24,7 @@
  * Should be used on {@link EActivity} classes that must have no title.
  * <p/>
  * <b>Note:</b> This annotation has been deprecated. Please use
- * <code>WindowFeature(Window.FEATURE_NO_TITLE})</code> instead
+ * <code>&#064;WindowFeature(Window.FEATURE_NO_TITLE})</code> instead
  * 
  * @see WindowFeature
  */

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsItem.java
Patch:
@@ -24,8 +24,8 @@
  * This annotation is intended to be used on methods to receive click on menu
  * items.
  * <p/>
- * The annotation value should be one or more of R.id.* fields. If not set, the
- * method name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method may return a <code>boolean</code>, void, or a
  * {@link java.lang.Boolean}. If returning void, it will be considered as

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -24,7 +24,7 @@
  * Should be used on {@link EActivity} or {@link EFragment} annotated classes to
  * inject one or multiple menus.
  * <p/>
- * The annotation value should be one or more R.menu.* fields.
+ * The annotation value should be one or several R.menu.* fields.
  * <p/>
  * <b>Note:</b> Fragment menus are compounds with parent Activity menus
  * <p/>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsMenuItem.java
Patch:
@@ -28,8 +28,8 @@
  * The field MUST be of type {@link link android.view.MenuItem} or
  * {@link com.actionbarsherlock.view.MenuItem}.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * <blockquote>
  * 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OrmLiteDao.java
Patch:
@@ -28,7 +28,7 @@
  * <ul>
  * <li><i>helper</i>: should hold the class of your database helper which should
  * extend {@link com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper}</li>
- * <li><i>model</i>: hould point to the model class that the DAO relates to. It
+ * <li><i>model</i>: should point to the model class that the DAO relates to. It
  * should match the type of the first generic parameter of your Dao.</li>
  * </ul>
  * <p/>

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Touch.java
Patch:
@@ -28,8 +28,8 @@
  * {@link android.view.View.OnTouchListener#onTouch(android.view.View, MotionEvent)}
  * when the view has been touched by the user.
  * <p/>
- * The annotation value should be one of R.id.* fields. If not set, the method
- * name will be used as the R.id.* field name.
+ * The annotation value should be one or several of R.id.* fields. If not set,
+ * the method name will be used as the R.id.* field name.
  * <p/>
  * The method may return a <code>boolean</code>, <code>void</code>, or a
  * {@link Boolean}. If returning void, it will be considered as returning true

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/WindowFeature.java
Patch:
@@ -23,6 +23,9 @@
 /**
  * Should be used on {@link EActivity} classes to set custom window features.
  * <p/>
+ * The annotation value should be one or several of {@link android.view.Window}
+ * constants.
+ * <p/>
  * <b>Note:</b> This should replace {@link NoTitle} annotation.
  * <p/>
  * <blockquote>

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -231,7 +231,7 @@ private void setAvailableHeadersField() {
 		JClass stringClass = classes().STRING;
 		JClass mapClass = classes().HASH_MAP.narrow(stringClass, stringClass);
 		availableHeadersField = getGeneratedClass().field(JMod.PRIVATE, mapClass, "availableHeaders");
-		init.body().assign(availableHeadersField, _new(mapClass));
+		getInit().body().assign(availableHeadersField, _new(mapClass));
 	}
 
 	public JFieldVar getAvailableCookiesField() {
@@ -245,7 +245,7 @@ private void setAvailableCookiesField() {
 		JClass stringClass = classes().STRING;
 		JClass mapClass = classes().HASH_MAP.narrow(stringClass, stringClass);
 		availableCookiesField = getGeneratedClass().field(JMod.PRIVATE, mapClass, "availableCookies");
-		init.body().assign(availableCookiesField, _new(mapClass));
+		getInit().body().assign(availableCookiesField, _new(mapClass));
 	}
 
 	public JFieldVar getAuthenticationField() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -231,7 +231,7 @@ private void setAvailableHeadersField() {
 		JClass stringClass = classes().STRING;
 		JClass mapClass = classes().HASH_MAP.narrow(stringClass, stringClass);
 		availableHeadersField = getGeneratedClass().field(JMod.PRIVATE, mapClass, "availableHeaders");
-		init.body().assign(availableHeadersField, _new(mapClass));
+		getInit().body().assign(availableHeadersField, _new(mapClass));
 	}
 
 	public JFieldVar getAvailableCookiesField() {
@@ -245,7 +245,7 @@ private void setAvailableCookiesField() {
 		JClass stringClass = classes().STRING;
 		JClass mapClass = classes().HASH_MAP.narrow(stringClass, stringClass);
 		availableCookiesField = getGeneratedClass().field(JMod.PRIVATE, mapClass, "availableCookies");
-		init.body().assign(availableCookiesField, _new(mapClass));
+		getInit().body().assign(availableCookiesField, _new(mapClass));
 	}
 
 	public JFieldVar getAuthenticationField() {

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -20,6 +20,8 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
+import org.androidannotations.api.sharedpreferences.SharedPreferencesHelper;
+
 /**
  * Injects a {@link SharedPref}
  * 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/BaseAnnotationHandler.java
Patch:
@@ -18,8 +18,6 @@
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 
-import com.sun.codemodel.JClass;
-import com.sun.codemodel.JCodeModel;
 import org.androidannotations.helper.AndroidManifest;
 import org.androidannotations.helper.IdAnnotationHelper;
 import org.androidannotations.helper.IdValidatorHelper;
@@ -30,6 +28,9 @@
 import org.androidannotations.process.ProcessHolder;
 import org.androidannotations.rclass.IRClass;
 
+import com.sun.codemodel.JClass;
+import com.sun.codemodel.JCodeModel;
+
 public abstract class BaseAnnotationHandler<T extends GeneratedClassHolder> implements AnnotationHandler<T> {
 
 	private final String target;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/FromHtmlHandler.java
Patch:
@@ -29,7 +29,6 @@
 import org.androidannotations.model.AndroidSystemServices;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
-import org.androidannotations.process.ProcessHolder;
 import org.androidannotations.rclass.IRClass;
 
 import com.sun.codemodel.JBlock;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/ResHandler.java
Patch:
@@ -32,7 +32,6 @@
 import org.androidannotations.model.AndroidSystemServices;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
-import org.androidannotations.process.ProcessHolder;
 import org.androidannotations.rclass.IRClass;
 
 import com.sun.codemodel.JBlock;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/TouchHandler.java
Patch:
@@ -25,9 +25,9 @@
 import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.Touch;
+import org.androidannotations.helper.CanonicalNameConstants;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
-import org.androidannotations.helper.CanonicalNameConstants;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/TraceHandler.java
Patch:
@@ -30,11 +30,9 @@
 import org.androidannotations.holder.EComponentHolder;
 import org.androidannotations.model.AnnotationElements;
 import org.androidannotations.process.IsValid;
-import org.androidannotations.process.ProcessHolder;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
-import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JConditional;
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JExpression;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/rest/GetHandler.java
Patch:
@@ -16,7 +16,6 @@
 package org.androidannotations.handler.rest;
 
 import javax.annotation.processing.ProcessingEnvironment;
-
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/IdAnnotationHelper.java
Patch:
@@ -20,7 +20,6 @@
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 
-import org.androidannotations.holder.GeneratedClassHolder;
 import org.androidannotations.process.ProcessHolder;
 import org.androidannotations.rclass.IRClass;
 import org.androidannotations.rclass.IRClass.Res;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/HasIntentBuilder.java
Patch:
@@ -15,9 +15,10 @@
  */
 package org.androidannotations.holder;
 
+import org.androidannotations.helper.IntentBuilder;
+
 import com.sun.codemodel.JDefinedClass;
 import com.sun.codemodel.JFieldVar;
-import org.androidannotations.helper.IntentBuilder;
 
 public interface HasIntentBuilder extends GeneratedClassHolder {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/CoumpoundInnerClass.java
Patch:
@@ -15,9 +15,10 @@
  */
 package org.androidannotations.rclass;
 
-import com.sun.codemodel.JFieldRef;
 import org.androidannotations.process.ProcessHolder;
 
+import com.sun.codemodel.JFieldRef;
+
 public class CoumpoundInnerClass implements IRInnerClass {
 
 	private final IRInnerClass rInnerClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/IRInnerClass.java
Patch:
@@ -15,9 +15,10 @@
  */
 package org.androidannotations.rclass;
 
-import com.sun.codemodel.JFieldRef;
 import org.androidannotations.process.ProcessHolder;
 
+import com.sun.codemodel.JFieldRef;
+
 public interface IRInnerClass {
 
 	boolean containsIdValue(Integer idValue);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/RInnerClass.java
Patch:
@@ -28,10 +28,10 @@
 import javax.lang.model.util.ElementFilter;
 
 import org.androidannotations.helper.CaseHelper;
+import org.androidannotations.process.ProcessHolder;
 
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JFieldRef;
-import org.androidannotations.process.ProcessHolder;
 
 public class RInnerClass implements IRInnerClass {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/SomeActivity.java
Patch:
@@ -15,12 +15,12 @@
  */
 package org.androidannotations.ebean;
 
-import android.app.Activity;
-
 import org.androidannotations.annotations.Bean;
 import org.androidannotations.annotations.EActivity;
 import org.androidannotations.annotations.NonConfigurationInstance;
 
+import android.app.Activity;
+
 @EActivity
 public class SomeActivity extends Activity {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/ActivityInManifest.java
Patch:
@@ -15,10 +15,10 @@
  */
 package org.androidannotations.generation;
 
-import android.app.Activity;
-
 import org.androidannotations.annotations.EActivity;
 
+import android.app.Activity;
+
 @EActivity
 public class ActivityInManifest extends Activity {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/ActivityInManifest.java
Patch:
@@ -15,10 +15,10 @@
  */
 package org.androidannotations.manifest;
 
-import android.app.Activity;
-
 import org.androidannotations.annotations.EActivity;
 
+import android.app.Activity;
+
 @EActivity
 public class ActivityInManifest extends Activity {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/ActivityNotInManifest.java
Patch:
@@ -15,10 +15,10 @@
  */
 package org.androidannotations.manifest;
 
-import android.app.Activity;
-
 import org.androidannotations.annotations.EActivity;
 
+import android.app.Activity;
+
 @EActivity
 public class ActivityNotInManifest extends Activity {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/ActivitySubclassInManifest.java
Patch:
@@ -15,10 +15,10 @@
  */
 package org.androidannotations.manifest;
 
-import android.app.Activity;
-
 import org.androidannotations.annotations.EActivity;
 
+import android.app.Activity;
+
 @EActivity
 public class ActivitySubclassInManifest extends Activity {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/rest/ClientWithValidConverter.java
Patch:
@@ -15,9 +15,8 @@
  */
 package org.androidannotations.rest;
 
-import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;
-
 import org.androidannotations.annotations.rest.Rest;
+import org.springframework.http.converter.json.MappingJacksonHttpMessageConverter;
 
 @Rest(converters = { MappingJacksonHttpMessageConverter.class })
 public interface ClientWithValidConverter {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/rest/RestConverterTest.java
Patch:
@@ -17,11 +17,10 @@
 
 import java.io.IOException;
 
-import org.junit.Before;
-import org.junit.Test;
-
 import org.androidannotations.AndroidAnnotationProcessor;
 import org.androidannotations.utils.AAProcessorTestHelper;
+import org.junit.Before;
+import org.junit.Test;
 
 public class RestConverterTest extends AAProcessorTestHelper {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EActivityHolder.java
Patch:
@@ -189,15 +189,15 @@ protected void setOnStop() {
 		JMethod method = generatedClass.method(JMod.PUBLIC, codeModel().VOID, "onStop");
 		method.annotate(Override.class);
 		JBlock body = method.body();
-		getRoboGuiceHolder().onStopBeforeSuperBlock = body.block();
 		body.invoke(_super(), method);
+        getRoboGuiceHolder().onStop = method;
 	}
 
 	protected void setOnDestroy() {
 		JMethod method = generatedClass.method(JMod.PUBLIC, codeModel().VOID, "onDestroy");
 		method.annotate(Override.class);
 		JBlock body = method.body();
-		getRoboGuiceHolder().onDestroyBeforeSuperBlock = body.block();
+		getRoboGuiceHolder().onDestroy = method;
 		body.invoke(_super(), method);
 		onDestroyAfterSuperBlock = body.block();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/handler/rest/RestMethodHandler.java
Patch:
@@ -135,7 +135,8 @@ protected JExpression getHttpMethod() {
 
 	protected JExpression getRequestEntity(ExecutableElement element, RestHolder holder, JBlock methodBody, TreeMap<String, JVar> params) {
 		JVar httpHeaders = restAnnotationHelper.declareHttpHeaders(element, holder, methodBody);
-		return restAnnotationHelper.declareHttpEntity(processHolder, methodBody, params, httpHeaders);
+        JVar entitySentToServer = restAnnotationHelper.getEntitySentToServer(element, params);
+		return restAnnotationHelper.declareHttpEntity(processHolder, methodBody, entitySentToServer, httpHeaders);
 	}
 
     protected JExpression getResponseClass(Element element, RestHolder holder) {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -138,7 +138,7 @@ private String getAAProcessorVersion() {
 	}
 
 	private String getAAApiVersion() {
-		return propertiesApi.getProperty("version", null);
+		return propertiesApi.getProperty("version", "unknown");
 	}
 
 	private void processThrowing(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) throws ProcessingException, Exception {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -37,6 +37,7 @@
 import javax.lang.model.element.TypeElement;
 import javax.tools.Diagnostic;
 
+import org.androidannotations.annotations.EActivity;
 import org.androidannotations.exception.ProcessingException;
 import org.androidannotations.exception.VersionMismatchException;
 import org.androidannotations.generation.CodeModelGenerator;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -126,7 +126,7 @@ private void loadPropertyFile() throws FileNotFoundException {
 	private void loadApiPropertyFile() throws FileNotFoundException {
 		String filename = "androidannotations-api.properties";
 		try {
-			URL url = getClass().getClassLoader().getResource(filename);
+			URL url = EActivity.class.getClassLoader().getResource(filename);
 			propertiesApi.load(url.openStream());
 		} catch (Exception e) {
 			throw new FileNotFoundException(filename + " couldn't be parsed. Please check your classpath and verify that AA-API's version is at least 3.0");

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/ExtraInjectedActivity.java
Patch:
@@ -26,7 +26,7 @@
 @EActivity
 public class ExtraInjectedActivity extends Activity {
 
-	@Extra("stringExtra")
+	@Extra("aStringExtra")
 	String stringExtra;
 
 	@Extra("arrayExtra")

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/SharedPrefsApiDependenciesTest.java
Patch:
@@ -65,10 +65,10 @@ public void setup() {
 	}
 
 	@Test
-	public void shared_prefs_generate_api_dependencies() throws IOException {
+	public void class_with_prefs_do_not_generate_api_dependencies() throws IOException {
 		compileFiles(SharedPrefs.class);
 		for (Class<?> apiDependency : SHARED_PREF_API_DEPENDENCIES) {
-			assertClassSourcesGeneratedToOutput(apiDependency);
+			assertClassSourcesNotGeneratedToOutput(apiDependency);
 		}
 	}
 

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/EmptyActivityWithLayoutTest.java
Patch:
@@ -27,9 +27,8 @@ public class EmptyActivityWithLayoutTest {
 	public void shouldHaveLayoutAfterCreate() {
 		EmptyActivityWithLayout_ activity = new EmptyActivityWithLayout_();
 
-		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
-
 		activity.onCreate(null);
+		activity.setContentView(R.layout.main);
 
 		assertThat(activity.findViewById(R.id.helloTextView)).hasId(
 				R.id.helloTextView);

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/EmptyActivityWithoutLayoutTest.java
Patch:
@@ -20,16 +20,17 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
+import android.view.View;
+
 @RunWith(AndroidAnnotationsTestRunner.class)
 public class EmptyActivityWithoutLayoutTest {
 
 	@Test
 	public void shouldHaveNoLayoutAfterCreate() {
 		EmptyActivityWithoutLayout_ activity = new EmptyActivityWithoutLayout_();
 
-		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
-
 		activity.onCreate(null);
+		activity.setContentView(new View(activity));
 
 		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -551,7 +551,7 @@ private ProcessResult processAnnotations(AnnotationElements validatedModel, IRCl
 	private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices androidSystemServices, AndroidManifest androidManifest, AnnotationElements validatedModel) {
 		ModelProcessor modelProcessor = new ModelProcessor();
 		modelProcessor.register(new EApplicationProcessor());
-		modelProcessor.register(new EActivityProcessor(processingEnv, rClass));
+		modelProcessor.register(new EActivityProcessor(processingEnv, rClass, androidManifest));
 		modelProcessor.register(new EServiceProcessor(processingEnv));
 		modelProcessor.register(new EIntentServiceProcessor(processingEnv));
 		modelProcessor.register(new EReceiverProcessor());

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -365,7 +365,7 @@ private String getAAProcessorVersion() {
 	}
 
 	private String getAAApiVersion() {
-		return propertiesApi.getProperty("version", null);
+		return propertiesApi.getProperty("version", "unknown");
 	}
 
 	private void processThrowing(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) throws ProcessingException, Exception {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeansHolder.java
Patch:
@@ -43,6 +43,7 @@ public class Classes {
 		 */
 		public final JClass RUNTIME_EXCEPTION = refClass(RuntimeException.class);
 		public final JClass EXCEPTION = refClass(Exception.class);
+		public final JClass THROWABLE = refClass(Throwable.class);
 		public final JClass CHAR_SEQUENCE = refClass(CharSequence.class);
 		public final JClass CLASS_CAST_EXCEPTION = refClass(ClassCastException.class);
 		public final JClass SERIALIZABLE = refClass(Serializable.class);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeansHolder.java
Patch:
@@ -43,6 +43,7 @@ public class Classes {
 		 */
 		public final JClass RUNTIME_EXCEPTION = refClass(RuntimeException.class);
 		public final JClass EXCEPTION = refClass(Exception.class);
+		public final JClass THROWABLE = refClass(Throwable.class);
 		public final JClass CHAR_SEQUENCE = refClass(CharSequence.class);
 		public final JClass CLASS_CAST_EXCEPTION = refClass(ClassCastException.class);
 		public final JClass SERIALIZABLE = refClass(Serializable.class);

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/rest/HttpMethodServiceTest.java
Patch:
@@ -63,7 +63,7 @@ public void use_head_http_method() {
 
 		RestTemplate restTemplate = mock(RestTemplate.class);
 		ResponseEntity<Object> response = mock(ResponseEntity.class);
-		when(restTemplate.exchange("http://company.com/ajax/services/head/", HttpMethod.HEAD, null, null)).thenReturn(response);
+		when(restTemplate.exchange(Mockito.anyString(), Mockito.<HttpMethod> eq(HttpMethod.HEAD), Mockito.<HttpEntity<?>> any(), Mockito.<Class<Object>> any())).thenReturn(response);
 
 		service.setRestTemplate(restTemplate);
 
@@ -79,7 +79,7 @@ public void use_options_http_method() {
 
 		RestTemplate restTemplate = mock(RestTemplate.class);
 		ResponseEntity<Object> response = mock(ResponseEntity.class);
-		when(restTemplate.exchange("http://company.com/ajax/services/options/", HttpMethod.OPTIONS, null, null)).thenReturn(response);
+		when(restTemplate.exchange(Mockito.anyString(), Mockito.<HttpMethod> eq(HttpMethod.OPTIONS), Mockito.<HttpEntity<?>> any(), Mockito.<Class<Object>> any())).thenReturn(response);
 		HttpHeaders headers = mock(HttpHeaders.class);
 		when(response.getHeaders()).thenReturn(headers);
 		

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorParameterHelper.java
Patch:
@@ -169,7 +169,8 @@ public void hasOneMotionEventOrTwoMotionEventViewParameters(ExecutableElement ex
 			if (parameters.size() == 1 && !firstParameterType.equals(CanonicalNameConstants.MOTION_EVENT)) {
 				valid.invalidate();
 				annotationHelper.printAnnotationError(executableElement, "the parameter must be a " + CanonicalNameConstants.MOTION_EVENT + ", not a " + firstParameterType);
-			} else { // if (parameters.size() == 2)
+			}
+			if (parameters.size() == 2) {
 				VariableElement secondParameter = parameters.get(1);
 				String secondParameterType = secondParameter.asType().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -354,7 +354,7 @@ private void loadPropertyFile() throws FileNotFoundException {
 	private void loadApiPropertyFile() throws FileNotFoundException {
 		String filename = "androidannotations-api.properties";
 		try {
-			URL url = getClass().getClassLoader().getResource(filename);
+			URL url = EActivity.class.getClassLoader().getResource(filename);
 			propertiesApi.load(url.openStream());
 		} catch (Exception e) {
 			throw new FileNotFoundException(filename + " couldn't be parsed. Please check your classpath and verify that AA-API's version is at least 3.0");

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -354,7 +354,7 @@ private void loadPropertyFile() throws FileNotFoundException {
 	private void loadApiPropertyFile() throws FileNotFoundException {
 		String filename = "androidannotations-api.properties";
 		try {
-			URL url = getClass().getClassLoader().getResource(filename);
+			URL url = EActivity.class.getClassLoader().getResource(filename);
 			propertiesApi.load(url.openStream());
 		} catch (Exception e) {
 			throw new FileNotFoundException(filename + " couldn't be parsed. Please check your classpath and verify that AA-API's version is at least 3.0");

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -319,7 +319,7 @@ private void checkApiAndCoreVersions() throws VersionMismatchException {
 		String coreVersion = getAAProcessorVersion();
 
 		if (!apiVersion.equals(coreVersion)) {
-			throw new VersionMismatchException("AndroidAnnotation version for API (" + apiVersion + ") and core (" + coreVersion + " doesn't match. Please check your classpath)");
+			throw new VersionMismatchException("AndroidAnnotation version for API (" + apiVersion + ") and core (" + coreVersion + ") doesn't match. Please check your classpath");
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -319,7 +319,7 @@ private void checkApiAndCoreVersions() throws VersionMismatchException {
 		String coreVersion = getAAProcessorVersion();
 
 		if (!apiVersion.equals(coreVersion)) {
-			throw new VersionMismatchException("AndroidAnnotation version for API (" + apiVersion + ") and core (" + coreVersion + " doesn't match. Please check your classpath)");
+			throw new VersionMismatchException("AndroidAnnotation version for API (" + apiVersion + ") and core (" + coreVersion + ") doesn't match. Please check your classpath");
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -422,7 +422,7 @@ private void addIntentBuilder(JCodeModel codeModel, EBeanHolder holder, Annotati
 		}
 	}
 
-	public JInvocation addIntentBuilderPutExtraMethod(JCodeModel codeModel, EBeanHolder holder, APTCodeModelHelper helper, ProcessingEnvironment processingEnv, JMethod method, TypeMirror elementType, String parameterName, String extraName) {
+	public JInvocation addIntentBuilderPutExtraMethod(JCodeModel codeModel, EBeanHolder holder, APTCodeModelHelper helper, ProcessingEnvironment processingEnv, JMethod method, TypeMirror elementType, String parameterName, JFieldVar extraKeyField) {
 		boolean castToSerializable = false;
 		boolean castToParcelable = false;
 		if (elementType.getKind() == TypeKind.DECLARED) {
@@ -445,7 +445,7 @@ public JInvocation addIntentBuilderPutExtraMethod(JCodeModel codeModel, EBeanHol
 		JClass parameterClass = helper.typeMirrorToJClass(elementType, holder);
 		JVar extraParameterVar = method.param(parameterClass, parameterName);
 		JBlock body = method.body();
-		JInvocation invocation = body.invoke(holder.intentField, "putExtra").arg(extraName);
+		JInvocation invocation = body.invoke(holder.intentField, "putExtra").arg(extraKeyField);
 		if (castToSerializable) {
 			return invocation.arg(cast(holder.classes().SERIALIZABLE, extraParameterVar));
 		} else if (castToParcelable) {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -123,7 +123,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 				// flags()
 				JMethod method = holder.intentBuilderClass.method(PUBLIC, holder.intentBuilderClass, fieldName);
 
-				helper.addIntentBuilderPutExtraMethod(codeModel, holder, helper, processingEnv, method, elementType, fieldName, staticFieldName);
+				helper.addIntentBuilderPutExtraMethod(codeModel, holder, helper, processingEnv, method, elementType, fieldName, extraKeyField);
 
 				JBlock body = method.body();
 				body._return(_this());

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/ExtraInjectedActivity.java
Patch:
@@ -26,7 +26,7 @@
 @EActivity
 public class ExtraInjectedActivity extends Activity {
 
-	@Extra("stringExtra")
+	@Extra("aStringExtra")
 	String stringExtra;
 
 	@Extra("arrayExtra")

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -422,7 +422,7 @@ private void addIntentBuilder(JCodeModel codeModel, EBeanHolder holder, Annotati
 		}
 	}
 
-	public JInvocation addIntentBuilderPutExtraMethod(JCodeModel codeModel, EBeanHolder holder, APTCodeModelHelper helper, ProcessingEnvironment processingEnv, JMethod method, TypeMirror elementType, String parameterName, String extraName) {
+	public JInvocation addIntentBuilderPutExtraMethod(JCodeModel codeModel, EBeanHolder holder, APTCodeModelHelper helper, ProcessingEnvironment processingEnv, JMethod method, TypeMirror elementType, String parameterName, JFieldVar extraKeyField) {
 		boolean castToSerializable = false;
 		boolean castToParcelable = false;
 		if (elementType.getKind() == TypeKind.DECLARED) {
@@ -445,7 +445,7 @@ public JInvocation addIntentBuilderPutExtraMethod(JCodeModel codeModel, EBeanHol
 		JClass parameterClass = helper.typeMirrorToJClass(elementType, holder);
 		JVar extraParameterVar = method.param(parameterClass, parameterName);
 		JBlock body = method.body();
-		JInvocation invocation = body.invoke(holder.intentField, "putExtra").arg(extraName);
+		JInvocation invocation = body.invoke(holder.intentField, "putExtra").arg(extraKeyField);
 		if (castToSerializable) {
 			return invocation.arg(cast(holder.classes().SERIALIZABLE, extraParameterVar));
 		} else if (castToParcelable) {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -123,7 +123,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 				// flags()
 				JMethod method = holder.intentBuilderClass.method(PUBLIC, holder.intentBuilderClass, fieldName);
 
-				helper.addIntentBuilderPutExtraMethod(codeModel, holder, helper, processingEnv, method, elementType, fieldName, staticFieldName);
+				helper.addIntentBuilderPutExtraMethod(codeModel, holder, helper, processingEnv, method, elementType, fieldName, extraKeyField);
 
 				JBlock body = method.body();
 				body._return(_this());

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/SharedPrefsApiDependenciesTest.java
Patch:
@@ -65,10 +65,10 @@ public void setup() {
 	}
 
 	@Test
-	public void shared_prefs_generate_api_dependencies() throws IOException {
+	public void class_with_prefs_do_not_generate_api_dependencies() throws IOException {
 		compileFiles(SharedPrefs.class);
 		for (Class<?> apiDependency : SHARED_PREF_API_DEPENDENCIES) {
-			assertClassSourcesGeneratedToOutput(apiDependency);
+			assertClassSourcesNotGeneratedToOutput(apiDependency);
 		}
 	}
 

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/EmptyActivityWithLayoutTest.java
Patch:
@@ -27,9 +27,8 @@ public class EmptyActivityWithLayoutTest {
 	public void shouldHaveLayoutAfterCreate() {
 		EmptyActivityWithLayout_ activity = new EmptyActivityWithLayout_();
 
-		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
-
 		activity.onCreate(null);
+		activity.setContentView(R.layout.main);
 
 		assertThat(activity.findViewById(R.id.helloTextView)).hasId(R.id.helloTextView);
 	}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/EmptyActivityWithoutLayoutTest.java
Patch:
@@ -20,16 +20,17 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
+import android.view.View;
+
 @RunWith(AndroidAnnotationsTestRunner.class)
 public class EmptyActivityWithoutLayoutTest {
 
 	@Test
 	public void shouldHaveNoLayoutAfterCreate() {
 		EmptyActivityWithoutLayout_ activity = new EmptyActivityWithoutLayout_();
 
-		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
-
 		activity.onCreate(null);
+		activity.setContentView(new View(activity));
 
 		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
 	}

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/SharedPrefsApiDependenciesTest.java
Patch:
@@ -65,10 +65,10 @@ public void setup() {
 	}
 
 	@Test
-	public void shared_prefs_generate_api_dependencies() throws IOException {
+	public void class_with_prefs_do_not_generate_api_dependencies() throws IOException {
 		compileFiles(SharedPrefs.class);
 		for (Class<?> apiDependency : SHARED_PREF_API_DEPENDENCIES) {
-			assertClassSourcesGeneratedToOutput(apiDependency);
+			assertClassSourcesNotGeneratedToOutput(apiDependency);
 		}
 	}
 

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/EmptyActivityWithLayoutTest.java
Patch:
@@ -27,9 +27,8 @@ public class EmptyActivityWithLayoutTest {
 	public void shouldHaveLayoutAfterCreate() {
 		EmptyActivityWithLayout_ activity = new EmptyActivityWithLayout_();
 
-		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
-
 		activity.onCreate(null);
+		activity.setContentView(R.layout.main);
 
 		assertThat(activity.findViewById(R.id.helloTextView)).hasId(R.id.helloTextView);
 	}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/EmptyActivityWithoutLayoutTest.java
Patch:
@@ -20,16 +20,17 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
+import android.view.View;
+
 @RunWith(AndroidAnnotationsTestRunner.class)
 public class EmptyActivityWithoutLayoutTest {
 
 	@Test
 	public void shouldHaveNoLayoutAfterCreate() {
 		EmptyActivityWithoutLayout_ activity = new EmptyActivityWithoutLayout_();
 
-		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
-
 		activity.onCreate(null);
+		activity.setContentView(new View(activity));
 
 		assertThat(activity.findViewById(R.id.helloTextView)).isNull();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -487,7 +487,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		ModelProcessor modelProcessor = new ModelProcessor();
 		modelProcessor.register(new EApplicationProcessor());
 		modelProcessor.register(new EActivityProcessor(processingEnv, rClass));
-		modelProcessor.register(new EServiceProcessor());
+		modelProcessor.register(new EServiceProcessor(processingEnv));
 		modelProcessor.register(new EReceiverProcessor());
 		modelProcessor.register(new EProviderProcessor());
 		modelProcessor.register(new EFragmentProcessor(processingEnv, rClass));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -201,7 +201,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		}
 
-		aptCodeModelHelper.addActivityIntentBuilder(codeModel, holder);
+		aptCodeModelHelper.addActivityIntentBuilder(codeModel, holder, annotationHelper);
 
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -61,7 +61,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 		executeMethod.annotate(Override.class);
 
 		JBlock runMethodBody = executeMethod.body();
-		helper.surroundWithTryCatch(holder, runMethodBody, previousMethodBody, "A runtime exception was thrown while executing code in a background task");
+		helper.surroundWithTryCatch(holder, runMethodBody, previousMethodBody, "A runtime exception was thrown while executing code in a background task", true);
 
 		Background annotation = element.getAnnotation(Background.class);
 		String id = annotation.id();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -127,6 +127,7 @@ public final class CanonicalNameConstants {
 	public static final String REST_TEMPLATE = "org.springframework.web.client.RestTemplate";
 	public static final String HTTP_MESSAGE_CONVERTER = "org.springframework.http.converter.HttpMessageConverter";
 	public static final String CLIENT_HTTP_REQUEST_INTERCEPTOR = "org.springframework.http.client.ClientHttpRequestInterceptor";
+	public static final String REST_CLIENT_EXCEPTION = "org.springframework.web.client.RestClientException";
 
 	/*
 	 * RoboGuice

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestImplementationHolder.java
Patch:
@@ -32,4 +32,6 @@ public class RestImplementationHolder {
 
 	public JFieldVar authenticationField;
 
+	public JFieldVar restErrorHandlerField;
+
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -57,7 +57,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isTopLevel(typeElement, valid);
 
-		validatorHelper.doesNotExtendOtherInterfaces(typeElement, valid);
+		validatorHelper.doesNotExtendInvalidInterfaces(typeElement, valid);
 
 		validatorHelper.unannotatedMethodReturnsRestTemplate(typeElement, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/RestAnnotationHelper.java
Patch:
@@ -291,7 +291,7 @@ public JExpression declareHttpEntity(ProcessHolder holder, JBlock body, TreeMap<
 		if (httpHeaders != null) {
 			newHttpEntityVarCall.arg(httpHeaders);
 		} else if (entitySentToServer == null) {
-			newHttpEntityVarCall.arg(JExpr._null());
+			return JExpr._null();
 		}
 
 		return body.decl(narrowedHttpEntity, "requestEntity", newHttpEntityVarCall);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/RestHolder.java
Patch:
@@ -292,7 +292,7 @@ private void setAvailableHeadersField() {
 		JClass stringClass = classes().STRING;
 		JClass mapClass = classes().HASH_MAP.narrow(stringClass, stringClass);
 		availableHeadersField = getGeneratedClass().field(JMod.PRIVATE, mapClass, "availableHeaders");
-		init.body().assign(availableHeadersField, _new(classes().HASH_MAP));
+		init.body().assign(availableHeadersField, _new(mapClass));
 	}
 
 	public JFieldVar getAvailableCookiesField() {
@@ -306,7 +306,7 @@ private void setAvailableCookiesField() {
 		JClass stringClass = classes().STRING;
 		JClass mapClass = classes().HASH_MAP.narrow(stringClass, stringClass);
 		availableCookiesField = getGeneratedClass().field(JMod.PRIVATE, mapClass, "availableCookies");
-		init.body().assign(availableCookiesField, _new(classes().HASH_MAP));
+		init.body().assign(availableCookiesField, _new(mapClass));
 	}
 
 	public JFieldVar getAuthenticationField() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -31,7 +31,8 @@ public class BackgroundExecutor {
 
 	private static final String TAG = "BackgroundExecutor";
 
-	private static Executor executor = Executors.newScheduledThreadPool(2 * Runtime.getRuntime().availableProcessors());
+	public static Executor DEFAULT_EXECUTOR = Executors.newScheduledThreadPool(2 * Runtime.getRuntime().availableProcessors());
+	private static Executor executor = DEFAULT_EXECUTOR;
 
 	private static final List<Task> tasks = new ArrayList<Task>();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/holder/EActivityHolder.java
Patch:
@@ -91,6 +91,7 @@ public EActivityHolder(ProcessHolder processHolder, TypeElement annotatedElement
 		super(processHolder, annotatedElement);
 		instanceStateHolder = new InstanceStateHolder(this);
 		onActivityResultHolder = new OnActivityResultHolder(this);
+		setSetContentView();
 		createIntentBuilder();
 		handleBackPressed();
 	}
@@ -307,6 +308,8 @@ public JMethod getSetContentViewLayout() {
 	}
 
 	private void setSetContentView() {
+		getOnCreate();
+
 		String setContentViewMethodName;
 		if (usesGreenDroid()) {
 			setContentViewMethodName = "setActionBarContentView";

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -19,6 +19,7 @@
 import static org.androidannotations.helper.CanonicalNameConstants.PRODUCE;
 import static org.androidannotations.helper.CanonicalNameConstants.SUBSCRIBE;
 import static org.androidannotations.helper.ModelConstants.TRACE_OPTION;
+import static org.androidannotations.rclass.ProjectRClassFinder.RESOURCE_PACKAGE_NAME_OPTION;
 
 import java.io.IOException;
 import java.io.PrintWriter;
@@ -270,7 +271,7 @@
 import org.androidannotations.validation.rest.RestValidator;
 
 @SupportedSourceVersion(SourceVersion.RELEASE_6)
-@SupportedOptions({ TRACE_OPTION, ANDROID_MANIFEST_FILE_OPTION })
+@SupportedOptions({ TRACE_OPTION, ANDROID_MANIFEST_FILE_OPTION, RESOURCE_PACKAGE_NAME_OPTION })
 public class AndroidAnnotationProcessor extends AbstractProcessor {
 
 	private final TimeStats timeStats = new TimeStats();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -19,6 +19,7 @@
 import static org.androidannotations.helper.CanonicalNameConstants.PRODUCE;
 import static org.androidannotations.helper.CanonicalNameConstants.SUBSCRIBE;
 import static org.androidannotations.helper.ModelConstants.TRACE_OPTION;
+import static org.androidannotations.rclass.ProjectRClassFinder.RESOURCE_PACKAGE_NAME_OPTION;
 
 import java.io.IOException;
 import java.io.PrintWriter;
@@ -264,7 +265,7 @@
 import org.androidannotations.validation.rest.RestValidator;
 
 @SupportedSourceVersion(SourceVersion.RELEASE_6)
-@SupportedOptions({ TRACE_OPTION, ANDROID_MANIFEST_FILE_OPTION })
+@SupportedOptions({ TRACE_OPTION, ANDROID_MANIFEST_FILE_OPTION, RESOURCE_PACKAGE_NAME_OPTION })
 public class AndroidAnnotationProcessor extends AbstractProcessor {
 
 	private final TimeStats timeStats = new TimeStats();

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EIntentService.java
Patch:
@@ -21,7 +21,7 @@
 import java.lang.annotation.Target;
 
 /**
- * Use this annotation to enhance an Android Service
+ * Use this annotation to enhance an Android IntentService
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestProcessor.java
Patch:
@@ -174,9 +174,9 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 	private void implementGetRootUrl(RestImplementationHolder holder, EBeansHolder eBeansHolder, List<ExecutableElement> methods) {
 		for (ExecutableElement method : methods) {
-			if (method.getParameters().size() == 0 && method.getReturnType().toString().equals(STRING) && method.getSimpleName().toString().equals("getRootUrl")) {
-				String methodName = method.getSimpleName().toString();
+			String methodName = method.getSimpleName().toString();
 
+			if (method.getParameters().size() == 0 && method.getReturnType().toString().equals(STRING) && methodName.equals("getRootUrl")) {
 				JMethod getRootUrlMethod = holder.restImplementationClass.method(JMod.PUBLIC, eBeansHolder.refClass(STRING), methodName);
 
 				getRootUrlMethod.annotate(Override.class);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -91,6 +91,7 @@ public final class CanonicalNameConstants {
 	public static final String MOTION_EVENT = "android.view.MotionEvent";
 	public static final String HANDLER = "android.os.Handler";
 	public static final String SERVICE = "android.app.Service";
+	public static final String INTENT_SERVICE = "android.app.IntentService";
 	public static final String BROADCAST_RECEIVER = "android.content.BroadcastReceiver";
 	public static final String CONTENT_PROVIDER = "android.content.ContentProvider";
 	public static final String SQLITE_DATABASE = "android.database.sqlite.SQLiteDatabase";

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeanHolder.java
Patch:
@@ -130,6 +130,9 @@ public class EBeanHolder {
 
 	private ViewChangedHolder viewChangedHolder;
 
+	public JVar onHandleIntentIntent;
+	public JBlock onHandleIntentBody;
+
 	/**
 	 * Only defined in beans that implement {@link HasViews}
 	 */

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -188,7 +188,9 @@ public static void setExecutor(Executor executor) {
 	 * @param id
 	 *            the cancellation identifier
 	 * @param mayInterruptIfRunning
-	 *            <code>true<.code> if the thread executing this task should be interrupted; otherwise, in-progress tasks are allowed to complete
+	 *            <code>true</code> if the thread executing this task should be
+	 *            interrupted; otherwise, in-progress tasks are allowed to
+	 *            complete
 	 */
 	public static synchronized void cancelAll(String id, boolean mayInterruptIfRunning) {
 		for (int i = tasks.size() - 1; i >= 0; i--) {

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/ThreadActivityTest.java
Patch:
@@ -171,7 +171,7 @@ public void serializedBackgroundTasks() {
 	 * half not cancelled.
 	 * 
 	 * Once all tasks have completed execution, check if and only if the items from the uncancelled
-	 * tasks are the list.
+	 * tasks are in the list.
 	 */
 	@Test
 	public void cancellableBackgroundTasks() {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -487,7 +487,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new EViewGroupProcessor(processingEnv, rClass));
 		modelProcessor.register(new EViewProcessor());
 		modelProcessor.register(new EBeanProcessor());
-		modelProcessor.register(new SharedPrefProcessor());
+		modelProcessor.register(new SharedPrefProcessor(processingEnv, rClass));
 		modelProcessor.register(new PrefProcessor(validatedModel));
 		modelProcessor.register(new RoboGuiceProcessor());
 		modelProcessor.register(new ViewByIdProcessor(processingEnv, rClass));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -483,7 +483,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new EViewGroupProcessor(processingEnv, rClass));
 		modelProcessor.register(new EViewProcessor());
 		modelProcessor.register(new EBeanProcessor());
-		modelProcessor.register(new SharedPrefProcessor());
+		modelProcessor.register(new SharedPrefProcessor(processingEnv, rClass));
 		modelProcessor.register(new PrefProcessor(validatedModel));
 		modelProcessor.register(new RoboGuiceProcessor());
 		modelProcessor.register(new ViewByIdProcessor(processingEnv, rClass));

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/ThreadActivityTest.java
Patch:
@@ -59,7 +59,7 @@ public void backgroundDelegatesToExecutor() {
 
 	/**
 	 * Start several requests which add an item to a list in background, with
-	 * "@Background" serial attribute enabled, so the request must be executed
+	 * "@Background" serial attribute enabled, so the requests must be executed
 	 * sequentially.
 	 * 
 	 * Once all tasks have completed execution, check if the items in the list

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Background.java
Patch:
@@ -28,5 +28,7 @@
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Background {
-	long delay() default 0;
+	int delay() default 0; /* in milliseconds */
+
+	String serial() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -55,12 +55,13 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 		{
 			// Execute Runnable
 			Background annotation = element.getAnnotation(Background.class);
-			long delay = annotation.delay();
+			int delay = annotation.delay();
+			String serial = annotation.serial();
 
 			JClass backgroundExecutorClass = holder.refClass(BackgroundExecutor.class);
 			JInvocation executeCall;
 
-			executeCall = backgroundExecutorClass.staticInvoke("execute").arg(_new(anonymousRunnableClass)).arg(lit(delay));
+			executeCall = backgroundExecutorClass.staticInvoke("execute").arg(_new(anonymousRunnableClass)).arg(lit(delay)).arg(lit(serial));
 
 			delegatingMethod.body().add(executeCall);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorParameterHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AbstractListenerProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/CheckedChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FocusChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/CheckedChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/FocusChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/CheckedChangeHandledActivity.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/FocusChangeHandledActivity.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ProduceValidator.java
Patch:
@@ -64,9 +64,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotFinal(element, valid);
 
-		validatorHelper.zeroParameter(executableElement, valid);
+		validatorHelper.param.zeroParameter(executableElement, valid);
 
 		return valid.isValid();
 	}
-
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SubscribeValidator.java
Patch:
@@ -64,7 +64,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotFinal(element, valid);
 
-		validatorHelper.hasExactlyOneParameter(executableElement, valid);
+		validatorHelper.param.hasExactlyOneParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/CheckedChangeHandledActivity.java
Patch:
@@ -17,9 +17,7 @@
 
 import org.androidannotations.annotations.CheckedChange;
 import org.androidannotations.annotations.EActivity;
-import org.androidannotations.annotations.FocusChange;
 
-import android.view.View;
 import android.widget.CompoundButton;
 
 @EActivity(R.layout.clickable_widgets)

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifestFinder.java
Patch:
@@ -40,7 +40,7 @@
 
 public class AndroidManifestFinder {
 
-	private static final String ANDROID_MANIFEST_FILE_OPTION = "androidManifestFile";
+	public static final String ANDROID_MANIFEST_FILE_OPTION = "androidManifestFile";
 
 	private static final int MAX_PARENTS_FROM_SOURCE_FOLDER = 10;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ModelConstants.java
Patch:
@@ -19,6 +19,8 @@ public abstract class ModelConstants {
 
 	public static final String GENERATION_SUFFIX = "_";
 
+	public static final String TRACE_OPTION = "trace";
+
 	private ModelConstants() {
 	}
 

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/ApplicationInjectedActivityTest.java
Patch:
@@ -27,7 +27,7 @@ public class ApplicationInjectedActivityTest {
 	
 	@Test
 	public void should_have_application_after_create() {
-		new SampleRoboApplication().onCreate();
+		new SampleRoboApplication_().onCreate();
 		ApplicationInjectedActivity_ activity = new ApplicationInjectedActivity_();
 		
 		activity.onCreate(null);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -268,7 +268,7 @@ public JBlock ifContextInstanceOfActivity(EBeanHolder holder, JBlock methodBody)
 		return methodBody._if(holder.contextRef._instanceof(holder.classes().ACTIVITY))._then();
 	}
 
-	public void copyConstructorsAndAddStaticEViewBuilders(Element element, JCodeModel codeModel, JClass eBeanClass, EBeanHolder holder, JMethod setContentViewMethod) {
+	public void copyConstructorsAndAddStaticEViewBuilders(Element element, JCodeModel codeModel, JClass eBeanClass, EBeanHolder holder, JMethod setContentViewMethod, JMethod init) {
 		List<ExecutableElement> constructors = new ArrayList<ExecutableElement>();
 		for (Element e : element.getEnclosedElements()) {
 			if (e.getKind() == CONSTRUCTOR) {
@@ -294,7 +294,7 @@ public void copyConstructorsAndAddStaticEViewBuilders(Element element, JCodeMode
 			JVar newCall = staticHelper.body().decl(holder.generatedClass, "instance", newInvocation);
 			staticHelper.body().invoke(newCall, "onFinishInflate");
 			staticHelper.body()._return(newCall);
-			body.invoke(holder.init);
+			body.invoke(init);
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterInjectProcessor.java
Patch:
@@ -33,7 +33,7 @@ public Class<? extends Annotation> getTarget() {
 	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		String methodName = element.getSimpleName().toString();
 
-		holder.init.body().invoke(methodName);
+		holder.initBody.invoke(methodName);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterViewsProcessor.java
Patch:
@@ -20,6 +20,7 @@
 import javax.lang.model.element.Element;
 
 import org.androidannotations.annotations.AfterViews;
+
 import com.sun.codemodel.JCodeModel;
 
 public class AfterViewsProcessor implements DecoratingElementProcessor {
@@ -33,7 +34,7 @@ public Class<? extends Annotation> getTarget() {
 	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		String methodName = element.getSimpleName().toString();
 
-		holder.afterSetContentView.body().invoke(methodName);
+		holder.onViewChanged().body().invoke(methodName);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AppProcessor.java
Patch:
@@ -42,7 +42,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String fieldName = element.getSimpleName().toString();
 
-		holder.init.body().assign(ref(fieldName), applicationClass.staticInvoke(EApplicationProcessor.GET_APPLICATION_INSTANCE));
+		holder.initBody.assign(ref(fieldName), applicationClass.staticInvoke(EApplicationProcessor.GET_APPLICATION_INSTANCE));
 
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/CustomTitleProcessor.java
Patch:
@@ -46,8 +46,8 @@ public Class<? extends Annotation> getTarget() {
 	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		JFieldRef customTitleFeature = holder.classes().WINDOW.staticRef("FEATURE_CUSTOM_TITLE");
 
-		holder.init.body().invoke("requestWindowFeature").arg(customTitleFeature);
+		holder.initBody.invoke("requestWindowFeature").arg(customTitleFeature);
 		JFieldRef contentViewId = annotationHelper.extractAnnotationFieldRefs(holder, element, CustomTitle.class, rClass.get(Res.LAYOUT), false).get(0);
-		holder.afterSetContentView.body().add(holder.contextRef.invoke("getWindow").invoke("setFeatureInt").arg(customTitleFeature).arg(contentViewId));
+		holder.onViewChanged().body().add(holder.contextRef.invoke("getWindow").invoke("setFeatureInt").arg(customTitleFeature).arg(contentViewId));
 	}
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -61,13 +61,14 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		holder.contextRef = invoke("getContext");
 
-		holder.init = holder.generatedClass.method(PRIVATE, codeModel.VOID, "init_");
+		JMethod init = holder.generatedClass.method(PRIVATE, codeModel.VOID, "init_");
+		holder.initBody = init.body();
 		{
 			// onCreate
 			JMethod onCreate = holder.generatedClass.method(PUBLIC, codeModel.BOOLEAN, "onCreate");
 			onCreate.annotate(Override.class);
 			JBlock onCreateBody = onCreate.body();
-			onCreateBody.invoke(holder.init);
+			onCreateBody.invoke(init);
 			onCreateBody._return(invoke(_super(), onCreate));
 		}
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -215,6 +215,6 @@ private void overrideSetIntent(EBeanHolder holder, JCodeModel codeModel, JMethod
 	}
 
 	private void injectExtrasOnInit(EBeanHolder holder, JClass intentClass, JMethod injectExtrasMethod) {
-		holder.init.body().invoke(injectExtrasMethod);
+		holder.initBody.invoke(injectExtrasMethod);
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FragmentArgProcessor.java
Patch:
@@ -146,6 +146,6 @@ private void injectFragmentArguments(EBeanHolder holder, JCodeModel codeModel) {
 	}
 
 	private void injectArgumentsOnInit(EBeanHolder holder, JClass intentClass, JMethod injectArgumentsMethod) {
-		holder.init.body().invoke(injectArgumentsMethod);
+		holder.initBody.invoke(injectArgumentsMethod);
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -34,6 +34,7 @@
 import org.androidannotations.processing.EBeansHolder.Classes;
 import org.androidannotations.rclass.IRClass;
 import org.androidannotations.rclass.IRClass.Res;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
@@ -74,9 +75,8 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 				holder.findNativeFragmentById = holder.generatedClass.method(PRIVATE, classes.FRAGMENT, "findNativeFragmentById");
 				JVar idParam = holder.findNativeFragmentById.param(codeModel.INT, "id");
 
-				holder.findNativeFragmentById.javadoc().add("You should check that context is an activity before calling this method");
-
 				JBlock body = holder.findNativeFragmentById.body();
+				body._if(holder.contextRef._instanceof(classes.ACTIVITY).not())._then()._return(_null());
 
 				JVar activityVar = body.decl(classes.ACTIVITY, "activity_", cast(classes.ACTIVITY, holder.contextRef));
 
@@ -104,7 +104,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			findFragmentById = holder.findSupportFragmentById;
 		}
 
-		JBlock methodBody = holder.afterSetContentView.body();
+		JBlock methodBody = holder.onViewChanged().body();
 
 		JFieldRef idRef = annotationHelper.extractOneAnnotationFieldRef(holder, element, Res.ID, true);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FragmentByTagProcessor.java
Patch:
@@ -79,9 +79,8 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 				holder.findNativeFragmentByTag = holder.generatedClass.method(PRIVATE, classes.FRAGMENT, "findNativeFragmentByTag");
 				JVar tagParam = holder.findNativeFragmentByTag.param(classes.STRING, "tag");
 
-				holder.findNativeFragmentByTag.javadoc().add("You should check that context is an activity before calling this method");
-
 				JBlock body = holder.findNativeFragmentByTag.body();
+				body._if(holder.contextRef._instanceof(classes.ACTIVITY).not())._then()._return(_null());
 
 				JVar activityVar = body.decl(classes.ACTIVITY, "activity_", cast(classes.ACTIVITY, holder.contextRef));
 
@@ -109,7 +108,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			findFragmentByTag = holder.findSupportFragmentByTag;
 		}
 
-		JBlock methodBody = holder.afterSetContentView.body();
+		JBlock methodBody = holder.onViewChanged().body();
 		methodBody.assign(ref(fieldName), cast(holder.refClass(typeQualifiedName), invoke(findFragmentByTag).arg(lit(tagValue))));
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -28,6 +28,7 @@
 import org.androidannotations.processing.EBeansHolder.Classes;
 import org.androidannotations.rclass.IRClass;
 import org.androidannotations.rclass.IRClass.Res;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
@@ -53,7 +54,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 
 		JFieldRef idRef = annotationHelper.extractOneAnnotationFieldRef(holder, element, Res.STRING, true);
 
-		JBlock methodBody = holder.afterSetContentView.body();
+		JBlock methodBody = holder.onViewChanged().body();
 
 		//
 		methodBody. //

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FullscreenProcessor.java
Patch:
@@ -39,7 +39,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		JFieldRef fullScreen = holder.classes().WINDOW_MANAGER_LAYOUT_PARAMS.staticRef("FLAG_FULLSCREEN");
 
 		JInvocation arg = invoke(invoke("getWindow"), "setFlags").arg(fullScreen).arg(fullScreen);
-		holder.init.body().add(arg);
+		holder.initBody.add(arg);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/HttpsClientProcessor.java
Patch:
@@ -75,7 +75,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		boolean useCustomKeyStore = ResId.DEFAULT_VALUE != keyStoreRawId ? true : false;
 
 		String fieldName = element.getSimpleName().toString();
-		JBlock methodBody = holder.init.body();
+		JBlock methodBody = holder.initBody;
 
 		Classes classes = holder.classes();
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -108,9 +108,10 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			}
 		}
 
+		ViewChangedHolder onViewChanged = holder.onViewChanged();
 		for (JFieldRef idRef : idsRefs) {
-			JBlock block = holder.afterSetContentView.body().block();
-			JVar view = block.decl(narrowAdapterViewClass, "view", JExpr.cast(narrowAdapterViewClass, JExpr.invoke("findViewById").arg(idRef)));
+			JBlock block = onViewChanged.body().block();
+			JVar view = block.decl(narrowAdapterViewClass, "view", cast(narrowAdapterViewClass, onViewChanged.findViewById(idRef)));
 			block._if(view.ne(_null()))._then().invoke(view, "setOnItemLongClickListener").arg(_new(onItemLongClickListenerClass));
 		}
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -91,11 +91,11 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			call.arg(viewParam);
 		}
 
+		ViewChangedHolder onViewChanged = holder.onViewChanged();
 		for (JFieldRef idRef : idsRefs) {
-			JBlock block = holder.afterSetContentView.body().block();
-			JInvocation findViewById = JExpr.invoke("findViewById");
+			JBlock block = onViewChanged.body().block();
 
-			JVar view = block.decl(classes.VIEW, "view", findViewById.arg(idRef));
+			JVar view = block.decl(classes.VIEW, "view", onViewChanged.findViewById(idRef));
 			block._if(view.ne(JExpr._null()))._then().invoke(view, "setOnLongClickListener").arg(JExpr._new(listenerAnonymousClass));
 		}
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NoTitleProcessor.java
Patch:
@@ -35,7 +35,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		JFieldRef noTitle = holder.classes().WINDOW.staticRef("FEATURE_NO_TITLE");
 
-		holder.init.body().invoke("requestWindowFeature").arg(noTitle);
+		holder.initBody.invoke("requestWindowFeature").arg(noTitle);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -15,14 +15,14 @@
  */
 package org.androidannotations.processing;
 
-import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr._null;
 import static com.sun.codemodel.JExpr._super;
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PUBLIC;
+import static org.androidannotations.helper.ModelConstants.GENERATION_SUFFIX;
 
 import java.lang.annotation.Annotation;
 
@@ -37,6 +37,7 @@
 import org.androidannotations.helper.APTCodeModelHelper;
 import org.androidannotations.helper.AnnotationHelper;
 import org.androidannotations.helper.CanonicalNameConstants;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JClassAlreadyExistsException;
@@ -94,7 +95,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 
 			{
 				// init()
-				JBlock initBody = holder.init.body();
+				JBlock initBody = holder.initBody;
 				ncHolder.initNonConfigurationInstance = initBody.decl(ncHolder.holderClass, "nonConfigurationInstance", cast(ncHolder.holderClass, _super().invoke(getLastNonConfigurationInstanceName)));
 				ncHolder.initIfNonConfigurationNotNullBody = initBody._if(ncHolder.initNonConfigurationInstance.ne(_null()))._then();
 			}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -117,7 +117,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			}
 
 			if (isFragment) {
-				holder.init.body().invoke("setHasOptionsMenu").arg(JExpr.TRUE);
+				holder.initBody.invoke("setHasOptionsMenu").arg(JExpr.TRUE);
 			}
 
 			holder.onCreateOptionMenuMethodBody = body;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OrmLiteDaoProcessor.java
Patch:
@@ -66,7 +66,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		// connection source field
 		boolean connectionSourceInjected = holder.generatedClass.fields().containsKey(CONNECTION_SOURCE_FIELD_NAME);
 
-		JBlock initBody = holder.init.body();
+		JBlock initBody = holder.initBody;
 
 		JFieldVar connectionSourceRef;
 		if (connectionSourceInjected) {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/PrefProcessor.java
Patch:
@@ -29,6 +29,7 @@
 import org.androidannotations.annotations.sharedpreferences.Pref;
 import org.androidannotations.annotations.sharedpreferences.SharedPref;
 import org.androidannotations.model.AnnotationElements;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpr;
@@ -74,7 +75,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		}
 
-		JBlock methodBody = holder.init.body();
+		JBlock methodBody = holder.initBody;
 
 		JFieldRef field = JExpr.ref(fieldName);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ResProcessor.java
Patch:
@@ -31,6 +31,7 @@
 import org.androidannotations.processing.EBeansHolder.Classes;
 import org.androidannotations.rclass.IRClass;
 import org.androidannotations.rclass.IRClass.Res;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
@@ -61,7 +62,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		JFieldRef idRef = annotationHelper.extractOneAnnotationFieldRef(holder, element, resInnerClass, true);
 
-		JBlock methodBody = holder.init.body();
+		JBlock methodBody = holder.initBody;
 
 		TypeMirror fieldTypeMirror = element.asType();
 		String fieldType = fieldTypeMirror.toString();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -22,6 +22,7 @@
 
 import org.androidannotations.annotations.rest.RestService;
 import org.androidannotations.helper.ModelConstants;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpr;
@@ -44,7 +45,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String generatedClassName = interfaceName + ModelConstants.GENERATION_SUFFIX;
 
-		JBlock methodBody = holder.init.body();
+		JBlock methodBody = holder.initBody;
 
 		JFieldRef field = JExpr.ref(fieldName);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -15,16 +15,17 @@
  */
 package org.androidannotations.processing;
 
-import static org.androidannotations.helper.CanonicalNameConstants.CONTEXT;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
+import static org.androidannotations.helper.CanonicalNameConstants.CONTEXT;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.RootContext;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -45,7 +46,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String typeQualifiedName = elementType.toString();
 
-		JBlock body = holder.init.body();
+		JBlock body = holder.initBody;
 		if (CONTEXT.equals(typeQualifiedName)) {
 			body.assign(ref(fieldName), holder.contextRef);
 		} else {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -25,6 +25,7 @@
 
 import org.androidannotations.annotations.SystemService;
 import org.androidannotations.model.AndroidSystemServices;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
@@ -52,7 +53,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		JFieldRef serviceRef = androidSystemServices.getServiceConstant(serviceType, holder);
 
-		JBlock methodBody = holder.init.body();
+		JBlock methodBody = holder.initBody;
 
 		methodBody.assign(ref(fieldName), cast(holder.refClass(fieldTypeQualifiedName), holder.contextRef.invoke("getSystemService").arg(serviceRef)));
 	}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/ApplicationInjectedActivityTest.java
Patch:
@@ -28,7 +28,7 @@ public class ApplicationInjectedActivityTest {
 	@Test
 	public void should_have_application_after_create() {
 		ApplicationInjectedActivity_ activity = new ApplicationInjectedActivity_();
-
+		
 		activity.onCreate(null);
 
 		assertThat(activity.customApplication).isNotNull();

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/org/androidannotations/test15/greendroid/MyGreenDroidActivityTest.java
Patch:
@@ -36,6 +36,7 @@ public void when_layout_defined_then_onCreate_calls_setActionBarContentView_with
 	@Test
 	public void afterViews_method_is_called_in_setActionBarContentView() {
 		MyGreenDroidActivity_ activity = new MyGreenDroidActivity_();
+		activity.onCreate(null);
 		activity.setActionBarContentView(0);
 		assertThat(activity.afterViewsCalled).isTrue();
 	}

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/efragment/BeanWithFragments.java
Patch:
@@ -22,7 +22,7 @@
 
 @EBean
 public class BeanWithFragments {
-
+	
 	@FragmentById
 	public MyFragment myFragment;
 	

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/efragment/BeanWithSupportFragments.java
Patch:
@@ -22,7 +22,7 @@
 
 @EBean
 public class BeanWithSupportFragments {
-
+	
 	@FragmentById
 	public MySupportFragment mySupportFragment;
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/efragment/MyFragmentActivity.java
Patch:
@@ -26,7 +26,7 @@
 
 @EActivity(R.layout.fragments)
 public class MyFragmentActivity extends Activity {
-
+	
 	@FragmentById
 	public MyFragment myFragment;
 	

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/eservice/MyService.java
Patch:
@@ -60,9 +60,10 @@ protected void onHandleIntent(Intent intent) {
 	@Trace
 	@UiThread
 	void showToast() {
-		Toast.makeText(getApplicationContext(), "Hello World!", Toast.LENGTH_LONG).show();
+		Toast.makeText(getApplicationContext(), "Hello World!",
+				Toast.LENGTH_LONG).show();
 	}
-	
+
 	@Trace
 	@Background
 	void workInBackground() {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/utils/ProcessorTestHelper.java
Patch:
@@ -149,10 +149,9 @@ private static void assertCompilationDiagnostingOn(Kind expectedDiagnosticKind,
 					if (expectedErrorPath.endsWith(source.toUri().toString())) {
 
 						CharSequence sourceContent = source.getCharContent(true);
-
 						if (diagnostic.getPosition() != Diagnostic.NOPOS) {
 							CharSequence contentInError = sourceContent.subSequence((int) diagnostic.getStartPosition(), (int) diagnostic.getEndPosition());
-							if (expectedContentInError.equals(contentInError.toString())) {
+							if (contentInError.toString().contains(expectedContentInError)) {
 								return;
 							}
 						}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OnActivityResultValidator.java
Patch:
@@ -56,7 +56,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OnActivityResultValidator.java
Patch:
@@ -56,7 +56,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -477,7 +477,7 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new PostValidator(processingEnv));
 		modelValidator.register(new PutValidator(processingEnv));
 		modelValidator.register(new AcceptValidator(processingEnv));
-		modelValidator.register(new AppValidator(processingEnv, androidManifest));
+		modelValidator.register(new AppValidator(processingEnv));
 		modelValidator.register(new OptionsMenuValidator(processingEnv, rClass));
 		modelValidator.register(new OptionsItemValidator(processingEnv, rClass));
 		modelValidator.register(new NoTitleValidator(processingEnv));

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterInject.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterViews.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/App.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Background.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Bean.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/BeforeTextChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Click.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/CustomTitle.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EActivity.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EApplication.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EBean.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EFragment.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EProvider.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EReceiver.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EService.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EView.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EViewGroup.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Extra.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentArg.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentById.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentByTag.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FromHtml.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Fullscreen.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/HttpsClient.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -53,8 +53,6 @@
  * <b>Note</b>:
  * <tt>Prior to ICS, Android accepts [Key|Trust]store only in BKS format
  * (Bouncycastle Key Store)</tt>
- * 
- * @author Nabil Hachicha
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/InstanceState.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemSelect.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -35,8 +35,6 @@
  * The annotation value should be one of R.id.* fields. If not set, the method
  * name will be used as the R.id.* field name.
  * 
- * @author Pierre-Yves Ricau
- * @author Mathieu Boniface
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/NoTitle.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/NonConfigurationInstance.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OnActivityResult.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -82,8 +82,6 @@
  * @see android.app.Activity#onActivityResult(int, int, Intent)
  * 
  * 
- * @author Mathieu Boniface < mat.boniface@gmail.com >
- * 
  */
 
 @Retention(RetentionPolicy.CLASS)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsItem.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OrmLiteDao.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ResId.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/RoboGuice.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/RootContext.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SeekBarProgressChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SeekBarTouchStart.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SeekBarTouchStop.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SystemService.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/TextChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Touch.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -33,7 +33,6 @@
  * The annotation value should be one of R.id.* fields. If not set, the method
  * name will be used as the R.id.* field name.
  * 
- * @author Mathieu Boniface
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Trace.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -32,7 +32,6 @@
  * <i>level</i> (optional) : the log level used for the log message. (default :
  * LOG.INFO).
  * 
- * @author Mathieu Boniface
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Transactional.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/UiThread.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ViewById.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/AnimationRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/BooleanRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/ColorRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/ColorStateListRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DimensionPixelOffsetRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DimensionPixelSizeRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DimensionRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DrawableRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/HtmlRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/IntegerRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/MovieRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Accept.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Delete.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Get.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Head.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Options.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Post.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Put.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Rest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/RestService.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultBoolean.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultFloat.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultInt.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultLong.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultString.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/SharedPref.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/MediaType.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/eclipse/org/androidannotations/Activator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/annotationprocessor/AnnotatedAbstractProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -29,7 +29,6 @@
  * {@link AbstractProcessor#getSupportedAnnotationTypes()}, enabling usage of
  * {@link SupportedAnnotationClasses} on a {@link Processor}.
  * 
- * @author Pierre-Yves Ricau
  */
 public abstract class AnnotatedAbstractProcessor extends AbstractProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/annotationprocessor/SupportedAnnotationClasses.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,7 +31,6 @@
  * Its main purpose is to be safe from renaming annotations targeted by an
  * annotation processor.
  * 
- * @author Pierre-Yves Ricau
  */
 @Documented
 @Target(ElementType.TYPE)

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/SdkVersionHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/rest/MediaType.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/AbstractPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/AbstractPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/BooleanPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/BooleanPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/EditorHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/FloatPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/FloatPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/IntPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/IntPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/LongPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/LongPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesCompat.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/StringPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/StringPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/ApiCodeGenerator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/CodeModelGenerator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/ResourceCodeWriter.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/SourceCodewriter.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifestFinder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/BundleHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CaseHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/GreenDroidConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/HasTarget.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/IdAnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ModelConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/OnSeekBarChangeListenerHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/Option.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/RestAnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/RoboGuiceConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/TargetAnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/TextWatcherHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ThirdPartyLibHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/TimeStats.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AndroidRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AnnotationElements.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AnnotationElementsHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/ModelExtractor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AbstractTrackingTouchProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -38,7 +38,6 @@
  * Note: this could probably be moved to a helper, rather then being an abstract
  * class (favor composition over inheritance)
  * 
- * @author Mathieu Boniface
  */
 public abstract class AbstractTrackingTouchProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterInjectProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterTextChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -40,7 +40,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Mathieu Boniface
  */
 public class AfterTextChangeProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterViewsProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AppProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/BeanProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/BeforeTextChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -41,7 +41,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Mathieu Boniface
  */
 public class BeforeTextChangeProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/CustomTitleProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/DecoratingElementProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EApplicationProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeanHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeanProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeansHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EFragmentProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EReceiverProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EServiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EViewProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FragmentArgProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FragmentByTagProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FullscreenProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/GeneratingElementProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/HierarchyViewerSupportProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/InstanceStateProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -48,8 +48,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Pierre-Yves Ricau
- * @author Mathieu Boniface
  */
 public class ItemSelectedProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ModelProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NoTitleProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NonConfigurationHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OnActivityResultProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -43,7 +43,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Mathieu Boniface
  */
 public class OnActivityResultProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OnSeekBarChangeListenerHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -48,7 +48,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Pierre-Yves Ricau
  */
 public class OptionsItemProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OriginatingElements.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OrmLiteDaoProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,6 +27,7 @@
 import org.androidannotations.annotations.OrmLiteDao;
 import org.androidannotations.helper.TargetAnnotationHelper;
 import org.androidannotations.processing.EBeansHolder.Classes;
+
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCatchBlock;
 import com.sun.codemodel.JCodeModel;
@@ -37,8 +38,6 @@
 
 /**
  * This class generates the code that creates DAOs with ORMLite
- * 
- * @author Johan Poirier <johan.poirier@gmail.com>
  */
 public class OrmLiteDaoProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/PrefProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ResProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RoboGuiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SeekBarProgressChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -40,7 +40,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Mathieu Boniface
  */
 public class SeekBarProgressChangeProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SeekBarTouchStartProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,7 +24,6 @@
 import com.sun.codemodel.JMethod;
 
 /**
- * @author Mathieu Boniface
  */
 public class SeekBarTouchStartProcessor extends AbstractTrackingTouchProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SeekBarTouchStopProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,7 +24,6 @@
 import com.sun.codemodel.JMethod;
 
 /**
- * @author Mathieu Boniface
  */
 public class SeekBarTouchStopProcessor extends AbstractTrackingTouchProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SharedPrefProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TextChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -40,7 +40,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Mathieu Boniface
  */
 public class TextChangeProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TextWatcherHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TouchProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -44,8 +44,6 @@
 import com.sun.codemodel.JVar;
 
 /**
- * @author Pierre-Yves Ricau
- * @author Mathieu Boniface
  */
 public class TouchProcessor implements DecoratingElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TraceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/UiThreadProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ViewByIdProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/DeleteProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/GetPostProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/GetProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/HeadProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/MethodProcessorHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/OptionsProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/PostProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/PutProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestImplementationHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestImplementationsHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/AndroidRClassFinder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/CoumpoundInnerClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/CoumpoundRClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/IRClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/IRInnerClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/ManifestPackageExtractor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/ProjectRClassFinder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/RClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/RInnerClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/AbstractSeekBarTouchValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/AfterInjectValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/AfterTextChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/AfterViewsValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/AppValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/BeanValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/BeforeTextChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ClickValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/CustomTitleValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EActivityValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EApplicationValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EBeanValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EFragmentValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EProviderValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EReceiverValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EServiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EViewGroupValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/EViewValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ElementValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ExtraValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/FragmentArgValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/FragmentByIdValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/FragmentByTagValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/FromHtmlValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/FullscreenValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/HierarchyViewerSupportValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/InstanceStateValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/IsValid.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ItemSelectedValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,7 +30,6 @@
 import org.androidannotations.rclass.IRClass.Res;
 
 /**
- * @author Pierre-Yves Ricau
  */
 public class ItemSelectedValidator implements ElementValidator {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ModelValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/NoTitleValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/NonConfigurationInstanceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/OnActivityResultValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -33,7 +33,6 @@
 import org.androidannotations.rclass.IRClass;
 
 /**
- * @author Mathieu Boniface
  */
 public class OnActivityResultValidator implements ElementValidator {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/OptionsItemValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,7 +30,6 @@
 import org.androidannotations.rclass.IRClass.Res;
 
 /**
- * @author Pierre-Yves Ricau
  */
 public class OptionsItemValidator implements ElementValidator {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/OptionsMenuValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/OrmLiteDaoValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/PrefValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ResValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/RestServiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/RoboGuiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/RootContextValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/RunnableValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SeekBarProgressChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SeekBarTouchStartValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SeekBarTouchStopValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SharedPrefValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SystemServiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/TextChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/TouchValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/TraceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/AcceptValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/DeleteValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/GetValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/HeadValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/OptionsValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/PostValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/PutValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/EBeanTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/SomeActivity.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/SomeImplementation.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/SomeInterface.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/ActivityWithBackgroundMethod.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/ActivityWithOnBackPressedMethod.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/OnBackPressedApiDependenciesTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/generation/OnBackgroundApiDependenciesTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2013 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -645,7 +645,7 @@ public void isSharedPreference(Element element, AnnotationElements validatedElem
 		/*
 		 * The type is not available yet because it has just been generated
 		 */
-		if (type instanceof ErrorType) {
+		if (type instanceof ErrorType  || type.getKind() == TypeKind.ERROR) {
 			String elementTypeName = type.toString();
 
 			boolean sharedPrefValidatedInRound = false;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/PrefProcessor.java
Patch:
@@ -23,6 +23,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.ErrorType;
+import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.sharedpreferences.Pref;
@@ -54,7 +55,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		TypeMirror fieldTypeMirror = element.asType();
 
 		String fieldType = fieldTypeMirror.toString();
-		if (fieldTypeMirror instanceof ErrorType) {
+		if (fieldTypeMirror instanceof ErrorType || fieldTypeMirror.getKind() == TypeKind.ERROR) {
 			String elementTypeName = fieldTypeMirror.toString();
 			String prefTypeName = elementTypeName.substring(0, elementTypeName.length() - GENERATION_SUFFIX.length());
 			Set<? extends Element> sharedPrefElements = validatedModel.getRootAnnotatedElements(SharedPref.class.getName());

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -643,7 +643,7 @@ public void isSharedPreference(Element element, AnnotationElements validatedElem
 		/*
 		 * The type is not available yet because it has just been generated
 		 */
-		if (type instanceof ErrorType) {
+		if (type instanceof ErrorType  || type.getKind() == TypeKind.ERROR) {
 			String elementTypeName = type.toString();
 
 			boolean sharedPrefValidatedInRound = false;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/PrefProcessor.java
Patch:
@@ -23,6 +23,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.ErrorType;
+import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
 import org.androidannotations.annotations.sharedpreferences.Pref;
@@ -54,7 +55,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		TypeMirror fieldTypeMirror = element.asType();
 
 		String fieldType = fieldTypeMirror.toString();
-		if (fieldTypeMirror instanceof ErrorType) {
+		if (fieldTypeMirror instanceof ErrorType || fieldTypeMirror.getKind() == TypeKind.ERROR) {
 			String elementTypeName = fieldTypeMirror.toString();
 			String prefTypeName = elementTypeName.substring(0, elementTypeName.length() - GENERATION_SUFFIX.length());
 			Set<? extends Element> sharedPrefElements = validatedModel.getRootAnnotatedElements(SharedPref.class.getName());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -22,7 +22,6 @@
 import com.googlecode.androidannotations.annotations.EViewGroup;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.sun.codemodel.JBlock;
-import com.sun.codemodel.JCase;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
@@ -91,7 +90,7 @@ public class EBeanHolder {
 	/**
 	 * OnActivityResult byResultCode
 	 */
-	public final HashMap<Integer, JCase> onActivityResultCases = new HashMap<Integer, JCase>();
+	public final HashMap<Integer, JBlock> onActivityResultCases = new HashMap<Integer, JBlock>();
 
 	public JSwitch onActivityResultSwitch;
 	public JMethod onActivityResultMethod;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -69,9 +69,6 @@ protected void generateRestTemplateCallBlock(MethodProcessorHolder methodHolder)
 			method = holder.restImplementationClass.method(JMod.PUBLIC, methodHolder.getMethodReturnClass(), methodName);
 		}
 		method.annotate(Override.class);
-		if (expectedClass != methodReturnClass && !methodReturnClass.fullName().startsWith(CanonicalNameConstants.RESPONSE_ENTITY)) {
-			method.annotate(SuppressWarnings.class).param("value", "unchecked");
-		}
 
 		// Keep a reference on method's body
 		JBlock body = method.body();

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestProcessor.java
Patch:
@@ -20,6 +20,7 @@
 import static com.sun.codemodel.JExpr.invoke;
 import static com.sun.codemodel.JExpr.lit;
 import static org.androidannotations.helper.CanonicalNameConstants.ARRAYLIST;
+import static org.androidannotations.helper.CanonicalNameConstants.CLIENT_HTTP_REQUEST_INTERCEPTOR;
 import static org.androidannotations.helper.CanonicalNameConstants.REST_TEMPLATE;
 import static org.androidannotations.helper.CanonicalNameConstants.STRING;
 
@@ -108,6 +109,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 				List<DeclaredType> interceptors = annotationHelper.extractAnnotationClassArrayParameter(element, getTarget(), "interceptors");
 				if (interceptors != null) {
 					JClass listClass = eBeansHolder.refClass(ARRAYLIST);
+					JClass clientInterceptorClass = eBeansHolder.refClass(CLIENT_HTTP_REQUEST_INTERCEPTOR);
+					listClass = listClass.narrow(clientInterceptorClass);
 					constructorBody.add(invoke(holder.restTemplateField, "setInterceptors").arg(_new(listClass)));
 					for (DeclaredType interceptorType : interceptors) {
 						JClass interceptorClass = eBeansHolder.refClass(interceptorType.toString());

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeanHolder.java
Patch:
@@ -25,7 +25,6 @@
 import org.androidannotations.processing.EBeansHolder.Classes;
 
 import com.sun.codemodel.JBlock;
-import com.sun.codemodel.JCase;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
@@ -94,7 +93,7 @@ public class EBeanHolder {
 	/**
 	 * OnActivityResult byResultCode
 	 */
-	public final HashMap<Integer, JCase> onActivityResultCases = new HashMap<Integer, JCase>();
+	public final HashMap<Integer, JBlock> onActivityResultCases = new HashMap<Integer, JBlock>();
 
 	public JSwitch onActivityResultSwitch;
 	public JMethod onActivityResultMethod;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -20,8 +20,6 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import org.androidannotations.api.sharedpreferences.SharedPreferencesHelper;
-
 /**
  * Injects a {@link SharedPref}
  * 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesCompat.java
Patch:
@@ -25,7 +25,7 @@
  * Reflection utils to call SharedPreferences$Editor.apply when possible,
  * falling back to commit when apply isn't available.
  */
-abstract class SharedPreferencesCompat {
+public abstract class SharedPreferencesCompat {
 
 	private SharedPreferencesCompat() {
 	}

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -23,6 +23,7 @@
 import org.androidannotations.annotations.Background;
 import org.androidannotations.api.BackgroundExecutor;
 import org.androidannotations.helper.APTCodeModelHelper;
+
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JClassAlreadyExistsException;
 import com.sun.codemodel.JCodeModel;
@@ -45,6 +46,8 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 
+		holder.generateApiClass(element, BackgroundExecutor.class);
+
 		JMethod delegatingMethod = helper.overrideAnnotatedMethod(executableElement, holder);
 
 		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(holder, delegatingMethod);

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/CodeModelGenerator.java
Patch:
@@ -37,9 +37,9 @@ public CodeModelGenerator(Filer filer, Messager messager) {
 	public void generate(ProcessResult processResult) throws IOException {
 
 		ApiCodeGenerator apiCodeGenerator = new ApiCodeGenerator(filer);
-		apiCodeGenerator.writeApiClasses(processResult.apiClassesToGenerate, processResult.originatingElementsHolder);
+		apiCodeGenerator.writeApiClasses(processResult.apiClassesToGenerate, processResult.originatingElements);
 
-		SourceCodewriter sourceCodeWriter = new SourceCodewriter(filer, messager, processResult.originatingElementsHolder);
+		SourceCodewriter sourceCodeWriter = new SourceCodewriter(filer, messager, processResult.originatingElements);
 
 		PrologCodeWriter prologCodeWriter = new PrologCodeWriter(sourceCodeWriter, "DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.\n");
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/CustomTitle.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 
 import java.lang.annotation.ElementType;
@@ -30,5 +30,5 @@
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface CustomTitle {
-    int value() default ResId.DEFAULT_VALUE;
+    int value();
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/org/androidannotations/test15/CustomTitleActivity.java
Patch:
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.test15;
+package org.androidannotations.test15;
 
 import android.app.Activity;
 
-import com.googlecode.androidannotations.annotations.EActivity;
-import com.googlecode.androidannotations.annotations.CustomTitle;
+import org.androidannotations.annotations.EActivity;
+import org.androidannotations.annotations.CustomTitle;
 
 @EActivity
 @CustomTitle(R.layout.component)

File: AndroidAnnotations/androidannotations-api/src/main/eclipse/org/androidannotations/api/Activator.java
Patch:
@@ -1,3 +1,4 @@
+package org.androidannotations.api;
 /**
  * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
@@ -13,7 +14,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations;
+
 
 import org.eclipse.core.runtime.Plugin;
 import org.osgi.framework.BundleContext;
@@ -24,7 +25,7 @@
 public class Activator extends Plugin {
 
         // The plug-in ID
-        public static final String PLUGIN_ID = "com.googlecode.androidannotations";
+        public static final String PLUGIN_ID = "org.androidannotations-api";
 
         // The shared instance
         private static Activator plugin;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterInject.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/AfterViews.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/App.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Background.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Bean.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/BeforeTextChange.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Click.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EActivity.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EApplication.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EBean.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.api.Scope;
+import org.androidannotations.api.Scope;
 
 /**
  * Should be used on custom classes to enable usage of AndroidAnnotations

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EFragment.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EProvider.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EReceiver.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EService.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EView.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/EViewGroup.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Extra.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentArg.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentById.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FragmentByTag.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/FromHtml.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Fullscreen.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/HttpsClient.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -70,4 +70,4 @@
 	String keyStorePwd() default DEFAULT_PASSWD;
 
 	boolean allowAllHostnames() default true;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/InstanceState.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemClick.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ItemSelect.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/LongClick.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/NoTitle.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/NonConfigurationInstance.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OnActivityResult.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsItem.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/OrmLiteDao.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -31,4 +31,4 @@
 
 	Class<?> model();
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ResId.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 public abstract class ResId {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/RoboGuice.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/RootContext.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SeekBarProgressChange.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -86,8 +86,8 @@
  * 
  * @since 2.7
  * 
- * @see com.googlecode.androidannotations.annotations.SeekBarTouchStart
- * @see com.googlecode.androidannotations.annotations.SeekBarTouchStop
+ * @see org.androidannotations.annotations.SeekBarTouchStart
+ * @see org.androidannotations.annotations.SeekBarTouchStop
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SeekBarTouchStart.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -44,8 +44,8 @@
  * 
  * @since 2.7
  * 
- * @see com.googlecode.androidannotations.annotations.SeekBarTouchStop
- * @see com.googlecode.androidannotations.annotations.SeekBarProgressChange
+ * @see org.androidannotations.annotations.SeekBarTouchStop
+ * @see org.androidannotations.annotations.SeekBarProgressChange
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SeekBarTouchStop.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
@@ -44,8 +44,8 @@
  * 
  * @since 2.7
  * 
- * @see com.googlecode.androidannotations.annotations.SeekBarTouchStart
- * @see com.googlecode.androidannotations.annotations.SeekBarProgressChange
+ * @see org.androidannotations.annotations.SeekBarTouchStart
+ * @see org.androidannotations.annotations.SeekBarProgressChange
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/SystemService.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/TextChange.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Touch.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Trace.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/Transactional.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/UiThread.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/ViewById.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations;
+package org.androidannotations.annotations;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/AnimationRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/BooleanRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/ColorRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with values from

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/ColorStateListRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DimensionPixelOffsetRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DimensionPixelSizeRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DimensionRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/DrawableRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/HtmlRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/IntegerRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/MovieRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with values from

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/StringRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with values from

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/res/TextRes.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.res;
+package org.androidannotations.annotations.res;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.annotations.ResId;
+import org.androidannotations.annotations.ResId;
 
 /**
  * Use on fields in activity classes that should be injected with this specific

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Accept.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Delete.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Get.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Head.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Options.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Post.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Put.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Rest.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/RestService.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.rest;
+package org.androidannotations.annotations.rest;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultBoolean.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultFloat.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultInt.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultLong.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/DefaultString.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper;
+import org.androidannotations.api.sharedpreferences.SharedPreferencesHelper;
 
 /**
  * Injects a {@link SharedPref}

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/sharedpreferences/SharedPref.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotations.sharedpreferences;
+package org.androidannotations.annotations.sharedpreferences;
 
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api;
+package org.androidannotations.api;
 
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/Scope.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api;
+package org.androidannotations.api;
 
 public enum Scope {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/SdkVersionHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api;
+package org.androidannotations.api;
 
 import android.os.Build;
 import android.os.Build.VERSION;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/rest/MediaType.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.rest;
+package org.androidannotations.api.rest;
 
 public final class MediaType {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/AbstractPrefEditorField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 
 public abstract class AbstractPrefEditorField<T extends EditorHelper<T>> {

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/AbstractPrefField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/BooleanPrefEditorField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 public final class BooleanPrefEditorField<T extends EditorHelper<T>> extends AbstractPrefEditorField<T> {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/BooleanPrefField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/EditorHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.Editor;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/FloatPrefEditorField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 public final class FloatPrefEditorField<T extends EditorHelper<T>> extends AbstractPrefEditorField<T> {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/FloatPrefField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/IntPrefEditorField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 public final class IntPrefEditorField<T extends EditorHelper<T>> extends AbstractPrefEditorField<T> {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/IntPrefField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/LongPrefEditorField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 public final class LongPrefEditorField<T extends EditorHelper<T>> extends AbstractPrefEditorField<T> {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/LongPrefField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesCompat.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/SharedPreferencesHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/StringPrefEditorField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 public final class StringPrefEditorField<T extends EditorHelper<T>> extends AbstractPrefEditorField<T> {
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/api/sharedpreferences/StringPrefField.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.api.sharedpreferences;
+package org.androidannotations.api.sharedpreferences;
 
 import android.content.SharedPreferences;
 

File: AndroidAnnotations/androidannotations/src/main/eclipse/org/androidannotations/Activator.java
Patch:
@@ -1,4 +1,3 @@
-package com.googlecode.androidannotations.api;
 /**
  * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
@@ -14,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-
+package org.androidannotations;
 
 import org.eclipse.core.runtime.Plugin;
 import org.osgi.framework.BundleContext;
@@ -25,7 +24,7 @@
 public class Activator extends Plugin {
 
         // The plug-in ID
-        public static final String PLUGIN_ID = "com.googlecode.androidannotations-api";
+        public static final String PLUGIN_ID = "org.androidannotations";
 
         // The shared instance
         private static Activator plugin;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/annotationprocessor/AnnotatedAbstractProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotationprocessor;
+package org.androidannotations.annotationprocessor;
 
 import java.lang.annotation.Annotation;
 import java.util.Collections;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/annotationprocessor/SupportedAnnotationClasses.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.annotationprocessor;
+package org.androidannotations.annotationprocessor;
 
 import java.lang.annotation.Annotation;
 import java.lang.annotation.Documented;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/CodeModelGenerator.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.generation;
+package org.androidannotations.generation;
 
 import java.io.IOException;
 
 import javax.annotation.processing.Filer;
 import javax.annotation.processing.Messager;
 
-import com.googlecode.androidannotations.processing.ModelProcessor.ProcessResult;
+import org.androidannotations.processing.ModelProcessor.ProcessResult;
 import com.sun.codemodel.writer.PrologCodeWriter;
 
 public class CodeModelGenerator {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/ResourceCodeWriter.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.generation;
+package org.androidannotations.generation;
 
 import java.io.IOException;
 import java.io.OutputStream;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/generation/SourceCodewriter.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.generation;
+package org.androidannotations.generation;
 
 import java.io.IOException;
 import java.io.OutputStream;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr._this;
@@ -35,8 +35,8 @@
 import javax.lang.model.type.DeclaredType;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.processing.EBeanHolder;
-import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
+import org.androidannotations.processing.EBeanHolder;
+import org.androidannotations.processing.EBeansHolder.Classes;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCatchBlock;
 import com.sun.codemodel.JClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidConstants.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 public abstract class AndroidConstants {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifest.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.util.Collections;
 import java.util.List;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifestFinder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.io.File;
 import java.io.FileInputStream;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.net.URI;
 import java.sql.SQLException;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CaseHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.util.ArrayList;
 import java.util.List;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/GreenDroidConstants.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.util.Arrays;
 import java.util.List;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/HasTarget.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.lang.annotation.Annotation;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/ModelConstants.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 public abstract class ModelConstants {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/RestAnnotationHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.lang.annotation.Annotation;
 import java.util.ArrayList;
@@ -25,7 +25,7 @@
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.VariableElement;
 
-import com.googlecode.androidannotations.validation.IsValid;
+import org.androidannotations.validation.IsValid;
 
 public class RestAnnotationHelper extends TargetAnnotationHelper {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/RoboGuiceConstants.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 public abstract class RoboGuiceConstants {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/SherlockHelper.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.DeclaredType;
 import javax.lang.model.type.NoType;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.processing.EBeanHolder;
 
 /**
  * @author Eric Kok

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/TargetAnnotationHelper.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.lang.annotation.Annotation;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/TimeStats.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.helper;
+package org.androidannotations.helper;
 
 import java.util.ArrayList;
 import java.util.Collections;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.model;
+package org.androidannotations.model;
 
 import java.util.HashMap;
 import java.util.Map;
 
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JFieldRef;
 
 public class AndroidSystemServices {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AnnotationElements.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.model;
+package org.androidannotations.model;
 
 import java.util.Set;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/AnnotationElementsHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.model;
+package org.androidannotations.model;
 
 import java.util.Collections;
 import java.util.HashMap;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/model/ModelExtractor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.model;
+package org.androidannotations.model;
 
 import java.lang.annotation.Annotation;
 import java.util.HashSet;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterInjectProcessor.java
Patch:
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.annotations.AfterInject;
+import org.androidannotations.annotations.AfterInject;
 import com.sun.codemodel.JCodeModel;
 
 public class AfterInjectProcessor implements DecoratingElementProcessor {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AfterViewsProcessor.java
Patch:
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.annotations.AfterViews;
+import org.androidannotations.annotations.AfterViews;
 import com.sun.codemodel.JCodeModel;
 
 public class AfterViewsProcessor implements DecoratingElementProcessor {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/AppProcessor.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
-import static com.googlecode.androidannotations.helper.CanonicalNameConstants.APPLICATION;
+import static org.androidannotations.helper.CanonicalNameConstants.APPLICATION;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
 
@@ -24,7 +24,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.annotations.App;
+import org.androidannotations.annotations.App;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JInvocation;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/DecoratingElementProcessor.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.helper.HasTarget;
+import org.androidannotations.helper.HasTarget;
 import com.sun.codemodel.JCodeModel;
 
 /**

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EApplicationProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JMod.FINAL;
@@ -25,8 +25,8 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.TypeElement;
 
-import com.googlecode.androidannotations.annotations.EApplication;
-import com.googlecode.androidannotations.helper.ModelConstants;
+import org.androidannotations.annotations.EApplication;
+import org.androidannotations.helper.ModelConstants;
 import com.sun.codemodel.ClassType;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EBeansHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.io.FileInputStream;
 import java.io.InputStream;
@@ -25,7 +25,7 @@
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.helper.CanonicalNameConstants;
+import org.androidannotations.helper.CanonicalNameConstants;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import static com.sun.codemodel.JExpr._super;
 import static com.sun.codemodel.JExpr.invoke;
@@ -26,8 +26,8 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.TypeElement;
 
-import com.googlecode.androidannotations.annotations.EProvider;
-import com.googlecode.androidannotations.helper.ModelConstants;
+import org.androidannotations.annotations.EProvider;
+import org.androidannotations.helper.ModelConstants;
 import com.sun.codemodel.ClassType;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/FullscreenProcessor.java
Patch:
@@ -13,15 +13,15 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import static com.sun.codemodel.JExpr.invoke;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.annotations.Fullscreen;
+import org.androidannotations.annotations.Fullscreen;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/GeneratingElementProcessor.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.helper.HasTarget;
+import org.androidannotations.helper.HasTarget;
 import com.sun.codemodel.JCodeModel;
 
 public interface GeneratingElementProcessor extends HasTarget {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/ModelProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 import java.util.ArrayList;
@@ -26,8 +26,8 @@
 import javax.lang.model.element.Modifier;
 import javax.lang.model.element.TypeElement;
 
-import com.googlecode.androidannotations.model.AnnotationElements;
-import com.googlecode.androidannotations.model.AnnotationElements.AnnotatedAndRootElements;
+import org.androidannotations.model.AnnotationElements;
+import org.androidannotations.model.AnnotationElements.AnnotatedAndRootElements;
 import com.sun.codemodel.JCodeModel;
 
 public class ModelProcessor {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NoTitleProcessor.java
Patch:
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.annotations.NoTitle;
+import org.androidannotations.annotations.NoTitle;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/NonConfigurationHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JDefinedClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/OnSeekBarChangeListenerHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -13,15 +13,15 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.annotations.rest.RestService;
-import com.googlecode.androidannotations.helper.ModelConstants;
+import org.androidannotations.annotations.rest.RestService;
+import org.androidannotations.helper.ModelConstants;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpr;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RoboGuiceProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr._super;
@@ -31,8 +31,8 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.RoboGuice;
-import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
+import org.androidannotations.annotations.RoboGuice;
+import org.androidannotations.processing.EBeansHolder.Classes;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
-import static com.googlecode.androidannotations.helper.CanonicalNameConstants.CONTEXT;
+import static org.androidannotations.helper.CanonicalNameConstants.CONTEXT;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
 
@@ -24,7 +24,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.annotations.RootContext;
+import org.androidannotations.annotations.RootContext;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SeekBarTouchStartProcessor.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 
-import com.googlecode.androidannotations.annotations.SeekBarTouchStart;
-import com.googlecode.androidannotations.rclass.IRClass;
+import org.androidannotations.annotations.SeekBarTouchStart;
+import org.androidannotations.rclass.IRClass;
 import com.sun.codemodel.JMethod;
 
 /**

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SeekBarTouchStopProcessor.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 
-import com.googlecode.androidannotations.annotations.SeekBarTouchStop;
-import com.googlecode.androidannotations.rclass.IRClass;
+import org.androidannotations.annotations.SeekBarTouchStop;
+import org.androidannotations.rclass.IRClass;
 import com.sun.codemodel.JMethod;
 
 /**

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
@@ -23,8 +23,8 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.annotations.SystemService;
-import com.googlecode.androidannotations.model.AndroidSystemServices;
+import org.androidannotations.annotations.SystemService;
+import org.androidannotations.model.AndroidSystemServices;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TextWatcherHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -13,15 +13,15 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import java.lang.annotation.Annotation;
 
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.Transactional;
-import com.googlecode.androidannotations.helper.APTCodeModelHelper;
+import org.androidannotations.annotations.Transactional;
+import org.androidannotations.helper.APTCodeModelHelper;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCatchBlock;
 import com.sun.codemodel.JClass;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/UiThreadProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing;
+package org.androidannotations.processing;
 
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr.lit;
@@ -23,8 +23,8 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.UiThread;
-import com.googlecode.androidannotations.helper.APTCodeModelHelper;
+import org.androidannotations.annotations.UiThread;
+import org.androidannotations.helper.APTCodeModelHelper;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JClassAlreadyExistsException;
 import com.sun.codemodel.JCodeModel;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/DeleteProcessor.java
Patch:
@@ -13,16 +13,16 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing.rest;
+package org.androidannotations.processing.rest;
 
 import java.lang.annotation.Annotation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.rest.Delete;
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.annotations.rest.Delete;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpr;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/HeadProcessor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing.rest;
+package org.androidannotations.processing.rest;
 
 import java.lang.annotation.Annotation;
 
@@ -22,8 +22,8 @@
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.annotations.rest.Head;
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.annotations.rest.Head;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/MethodProcessorHolder.java
Patch:
@@ -13,13 +13,13 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing.rest;
+package org.androidannotations.processing.rest;
 
 import java.util.TreeMap;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/PutProcessor.java
Patch:
@@ -13,16 +13,16 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing.rest;
+package org.androidannotations.processing.rest;
 
 import java.lang.annotation.Annotation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.rest.Put;
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.annotations.rest.Put;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpr;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestImplementationHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing.rest;
+package org.androidannotations.processing.rest;
 
 import com.sun.codemodel.JDefinedClass;
 import com.sun.codemodel.JFieldVar;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/processing/rest/RestImplementationsHolder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.processing.rest;
+package org.androidannotations.processing.rest;
 
 import java.util.HashMap;
 import java.util.Map;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/AndroidRClassFinder.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.TypeElement;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/CoumpoundInnerClass.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JFieldRef;
 
 public class CoumpoundInnerClass implements IRInnerClass {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/CoumpoundRClass.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import java.util.HashMap;
 import java.util.Map;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/IRClass.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import java.util.Locale;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/IRInnerClass.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JFieldRef;
 
 public interface IRInnerClass {

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/ManifestPackageExtractor.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/ProjectRClassFinder.java
Patch:
@@ -13,15 +13,15 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import javax.annotation.processing.Messager;
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.util.Elements;
 import javax.tools.Diagnostic.Kind;
 
-import com.googlecode.androidannotations.helper.AndroidManifest;
+import org.androidannotations.helper.AndroidManifest;
 
 public class ProjectRClassFinder {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/RClass.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import java.util.HashMap;
 import java.util.List;

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/rclass/RInnerClass.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import java.util.HashMap;
 import java.util.HashSet;
@@ -27,8 +27,8 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.util.ElementFilter;
 
-import com.googlecode.androidannotations.helper.CaseHelper;
-import com.googlecode.androidannotations.processing.EBeanHolder;
+import org.androidannotations.helper.CaseHelper;
+import org.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JFieldRef;
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ElementValidator.java
Patch:
@@ -13,12 +13,12 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.validation;
+package org.androidannotations.validation;
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.helper.HasTarget;
-import com.googlecode.androidannotations.model.AnnotationElements;
+import org.androidannotations.helper.HasTarget;
+import org.androidannotations.model.AnnotationElements;
 
 public interface ElementValidator extends HasTarget {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/IsValid.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.validation;
+package org.androidannotations.validation;
 
 public class IsValid {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/ModelValidator.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.validation;
+package org.androidannotations.validation;
 
 import java.lang.annotation.Annotation;
 import java.util.ArrayList;
@@ -23,8 +23,8 @@
 
 import javax.lang.model.element.Element;
 
-import com.googlecode.androidannotations.model.AnnotationElements;
-import com.googlecode.androidannotations.model.AnnotationElementsHolder;
+import org.androidannotations.model.AnnotationElements;
+import org.androidannotations.model.AnnotationElementsHolder;
 
 public class ModelValidator {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SeekBarTouchStartValidator.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.validation;
+package org.androidannotations.validation;
 
 import java.lang.annotation.Annotation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 
-import com.googlecode.androidannotations.annotations.SeekBarTouchStart;
-import com.googlecode.androidannotations.rclass.IRClass;
+import org.androidannotations.annotations.SeekBarTouchStart;
+import org.androidannotations.rclass.IRClass;
 
 public class SeekBarTouchStartValidator extends AbstractSeekBarTouchValidator {
 

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/SeekBarTouchStopValidator.java
Patch:
@@ -13,14 +13,14 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.validation;
+package org.androidannotations.validation;
 
 import java.lang.annotation.Annotation;
 
 import javax.annotation.processing.ProcessingEnvironment;
 
-import com.googlecode.androidannotations.annotations.SeekBarTouchStop;
-import com.googlecode.androidannotations.rclass.IRClass;
+import org.androidannotations.annotations.SeekBarTouchStop;
+import org.androidannotations.rclass.IRClass;
 
 public class SeekBarTouchStopValidator extends AbstractSeekBarTouchValidator {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/SomeImplementation.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.ebean;
+package org.androidannotations.ebean;
 
-import com.googlecode.androidannotations.annotations.EBean;
+import org.androidannotations.annotations.EBean;
 
 @EBean
 public class SomeImplementation implements SomeInterface {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/ebean/SomeInterface.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.ebean;
+package org.androidannotations.ebean;
 
 public interface SomeInterface {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/ActivityInManifest.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.manifest;
+package org.androidannotations.manifest;
 
 import android.app.Activity;
 
-import com.googlecode.androidannotations.annotations.EActivity;
+import org.androidannotations.annotations.EActivity;
 
 @EActivity
 public class ActivityInManifest extends Activity {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/ActivityNotInManifest.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.manifest;
+package org.androidannotations.manifest;
 
 import android.app.Activity;
 
-import com.googlecode.androidannotations.annotations.EActivity;
+import org.androidannotations.annotations.EActivity;
 
 @EActivity
 public class ActivityNotInManifest extends Activity {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/ActivitySubclassInManifest.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.manifest;
+package org.androidannotations.manifest;
 
 import android.app.Activity;
 
-import com.googlecode.androidannotations.annotations.EActivity;
+import org.androidannotations.annotations.EActivity;
 
 @EActivity
 public class ActivitySubclassInManifest extends Activity {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/AndroidManifestFinderTest.java
Patch:
@@ -13,20 +13,20 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.manifest;
+package org.androidannotations.manifest;
 
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 
+import org.androidannotations.AndroidAnnotationProcessor;
+import org.androidannotations.utils.AAProcessorTestHelper;
 import org.junit.Before;
 import org.junit.Test;
 
 import com.google.common.io.Files;
 import com.google.common.io.InputSupplier;
-import com.googlecode.androidannotations.AndroidAnnotationProcessor;
-import com.googlecode.androidannotations.utils.AAProcessorTestHelper;
 
 public class AndroidManifestFinderTest extends AAProcessorTestHelper {
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/manifest/SomeClass.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.manifest;
+package org.androidannotations.manifest;
 
-import com.googlecode.androidannotations.annotations.EBean;
+import org.androidannotations.annotations.EBean;
 
 @EBean
 public class SomeClass {

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/rclass/ManifestPackageExtractorTest.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rclass;
+package org.androidannotations.rclass;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/rest/AbstractConverter.java
Patch:
@@ -13,7 +13,7 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rest;
+package org.androidannotations.rest;
 
 import org.springframework.http.converter.AbstractHttpMessageConverter;
 

File: AndroidAnnotations/androidannotations/src/test/java/org/androidannotations/rest/ClassClient.java
Patch:
@@ -13,9 +13,9 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.rest;
+package org.androidannotations.rest;
 
-import com.googlecode.androidannotations.annotations.rest.Rest;
+import org.androidannotations.annotations.rest.Rest;
 
 @Rest(converters = {})
 public class ClassClient {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OnActivityResultValidator.java
Patch:
@@ -56,7 +56,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OnActivityResultValidator.java
Patch:
@@ -56,7 +56,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations-api/src/main/java/org/androidannotations/annotations/rest/Rest.java
Patch:
@@ -23,5 +23,6 @@
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface Rest {
-	String value() default "";
+	String rootUrl() default "";
+	Class<?>[] converters();
 }

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -539,7 +539,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new FragmentArgProcessor(processingEnv));
 		modelProcessor.register(new SystemServiceProcessor(androidSystemServices));
 		RestImplementationsHolder restImplementationHolder = new RestImplementationsHolder();
-		modelProcessor.register(new RestProcessor(restImplementationHolder));
+		modelProcessor.register(new RestProcessor(processingEnv, restImplementationHolder));
 		modelProcessor.register(new GetProcessor(processingEnv, restImplementationHolder));
 		modelProcessor.register(new PostProcessor(processingEnv, restImplementationHolder));
 		modelProcessor.register(new PutProcessor(processingEnv, restImplementationHolder));

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -99,6 +99,7 @@ public final class CanonicalNameConstants {
 	public static final String HTTP_METHOD = "org.springframework.http.HttpMethod";
 	public static final String HTTP_ENTITY = "org.springframework.http.HttpEntity";
 	public static final String REST_TEMPLATE = "org.springframework.web.client.RestTemplate";
+	public static final String HTTP_MESSAGE_CONVERTER = "org.springframework.http.converter.HttpMessageConverter";
 
 	/*
 	 * RoboGuice

File: AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -44,7 +44,6 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public boolean validate(Element element, AnnotationElements validatedElements) {
-
 		IsValid valid = new IsValid();
 
 		TypeElement typeElement = (TypeElement) element;
@@ -61,6 +60,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.unannotatedMethodReturnsRestTemplate(typeElement, valid);
 
+		validatorHelper.validateConverters(element, valid);
+
 		return valid.isValid();
 	}
 

File: AndroidAnnotations/androidannotations-api/src/main/java/com/googlecode/androidannotations/annotations/rest/Rest.java
Patch:
@@ -23,5 +23,6 @@
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface Rest {
-	String value() default "";
+	String rootUrl() default "";
+	Class<?>[] converters();
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -539,7 +539,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new FragmentArgProcessor(processingEnv));
 		modelProcessor.register(new SystemServiceProcessor(androidSystemServices));
 		RestImplementationsHolder restImplementationHolder = new RestImplementationsHolder();
-		modelProcessor.register(new RestProcessor(restImplementationHolder));
+		modelProcessor.register(new RestProcessor(processingEnv, restImplementationHolder));
 		modelProcessor.register(new GetProcessor(processingEnv, restImplementationHolder));
 		modelProcessor.register(new PostProcessor(processingEnv, restImplementationHolder));
 		modelProcessor.register(new PutProcessor(processingEnv, restImplementationHolder));

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -99,6 +99,7 @@ public final class CanonicalNameConstants {
 	public static final String HTTP_METHOD = "org.springframework.http.HttpMethod";
 	public static final String HTTP_ENTITY = "org.springframework.http.HttpEntity";
 	public static final String REST_TEMPLATE = "org.springframework.web.client.RestTemplate";
+	public static final String HTTP_MESSAGE_CONVERTER = "org.springframework.http.converter.HttpMessageConverter";
 
 	/*
 	 * RoboGuice

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -44,7 +44,6 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public boolean validate(Element element, AnnotationElements validatedElements) {
-
 		IsValid valid = new IsValid();
 
 		TypeElement typeElement = (TypeElement) element;
@@ -61,6 +60,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.unannotatedMethodReturnsRestTemplate(typeElement, valid);
 
+		validatorHelper.validateConverters(element, valid);
+
 		return valid.isValid();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -18,6 +18,7 @@
 import java.lang.annotation.Annotation;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.TreeMap;
 
@@ -29,8 +30,8 @@
 import com.googlecode.androidannotations.annotations.rest.Accept;
 import com.googlecode.androidannotations.helper.CanonicalNameConstants;
 import com.googlecode.androidannotations.helper.RestAnnotationHelper;
-import com.googlecode.androidannotations.processing.EBeanHolder;
 import com.googlecode.androidannotations.processing.DecoratingElementProcessor;
+import com.googlecode.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -81,7 +82,7 @@ protected void generateRestTemplateCallBlock(MethodProcessorHolder methodHolder)
 		EBeanHolder eBeanHolder = methodHolder.getHolder();
 		JClass httpMethod = eBeanHolder.refClass(CanonicalNameConstants.HTTP_METHOD);
 		// add method type param
-		String restMethodInCapitalLetters = getTarget().getSimpleName().toUpperCase();
+		String restMethodInCapitalLetters = getTarget().getSimpleName().toUpperCase(Locale.ENGLISH);
 		restCall.arg(httpMethod.staticRef(restMethodInCapitalLetters));
 
 		TreeMap<String, JVar> methodParams = (TreeMap<String, JVar>) generateMethodParamsVar(eBeanHolder, method, executableElement, holder);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/IRClass.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.googlecode.androidannotations.rclass;
 
+import java.util.Locale;
+
 public interface IRClass {
 
 	public enum Res {
 		LAYOUT, ID, STRING, ARRAY, COLOR, ANIM, BOOL, DIMEN, DRAWABLE, INTEGER, MOVIE, MENU, RAW;
 		public String rName() {
-			return toString().toLowerCase();
+			return toString().toLowerCase(Locale.ENGLISH);
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -18,6 +18,7 @@
 import java.lang.annotation.Annotation;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Locale;
 import java.util.Map;
 import java.util.TreeMap;
 
@@ -29,8 +30,8 @@
 import com.googlecode.androidannotations.annotations.rest.Accept;
 import com.googlecode.androidannotations.helper.CanonicalNameConstants;
 import com.googlecode.androidannotations.helper.RestAnnotationHelper;
-import com.googlecode.androidannotations.processing.EBeanHolder;
 import com.googlecode.androidannotations.processing.DecoratingElementProcessor;
+import com.googlecode.androidannotations.processing.EBeanHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -81,7 +82,7 @@ protected void generateRestTemplateCallBlock(MethodProcessorHolder methodHolder)
 		EBeanHolder eBeanHolder = methodHolder.getHolder();
 		JClass httpMethod = eBeanHolder.refClass(CanonicalNameConstants.HTTP_METHOD);
 		// add method type param
-		String restMethodInCapitalLetters = getTarget().getSimpleName().toUpperCase();
+		String restMethodInCapitalLetters = getTarget().getSimpleName().toUpperCase(Locale.ENGLISH);
 		restCall.arg(httpMethod.staticRef(restMethodInCapitalLetters));
 
 		TreeMap<String, JVar> methodParams = (TreeMap<String, JVar>) generateMethodParamsVar(eBeanHolder, method, executableElement, holder);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/IRClass.java
Patch:
@@ -15,12 +15,14 @@
  */
 package com.googlecode.androidannotations.rclass;
 
+import java.util.Locale;
+
 public interface IRClass {
 
 	public enum Res {
 		LAYOUT, ID, STRING, ARRAY, COLOR, ANIM, BOOL, DIMEN, DRAWABLE, INTEGER, MOVIE, MENU, RAW;
 		public String rName() {
-			return toString().toLowerCase();
+			return toString().toLowerCase(Locale.ENGLISH);
 		}
 	}
 

File: AndroidAnnotations/androidannotations/src/test/java/com/googlecode/androidannotations/utils/AAProcessorTestHelper.java
Patch:
@@ -8,8 +8,7 @@ public class AAProcessorTestHelper extends ProcessorTestHelper {
 
 	public void addManifestProcessorParameter(Class<?> classOfPackagingContainingManifest) {
 		String manifestPath = classOfPackagingContainingManifest.getResource("AndroidManifest.xml").getPath();
-		String manifestPackagePath = manifestPath.substring(0, manifestPath.lastIndexOf("/"));
-		addProcessorParameter("androidManifestFile", manifestPackagePath);
+		addProcessorParameter("androidManifestFile", manifestPath);
 	}
 
 	public File toGeneratedFile(Class<?> compiledClass) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -122,7 +122,7 @@ public void uniqueId(Element element, AnnotationElements validatedElements, IsVa
 
 	public void annotationValuePositiveAndInAShort(Element element, IsValid valid, int value) {
 		if (value < 0 || value > 0xFFFF) {
-			annotationHelper.printAnnotationError(element, "The requestCode must be positive and inferior or equal to 32767");
+			annotationHelper.printAnnotationError(element, "Due to a restriction in the fragment API, the requestCode has to be a positive integer inferior or equal to 0xFFFF");
 			valid.invalidate();
 		}
 	}

File: AndroidAnnotations/androidannotations-api/src/main/java/com/googlecode/androidannotations/annotations/OnActivityResult.java
Patch:
@@ -94,8 +94,6 @@
 @Target(ElementType.METHOD)
 public @interface OnActivityResult {
 
-	public static final int DEFAULT_VALUE = Integer.MAX_VALUE - 1;
-
-	int value() default DEFAULT_VALUE;
+	int value();
 
 }

File: AndroidAnnotations/androidannotations/src/test/java/com/googlecode/androidannotations/manifest/AndroidManifestErrorsTest.java
Patch:
@@ -13,7 +13,7 @@ public class AndroidManifestErrorsTest extends AAProcessorTestHelper {
 	@Before
 	public void setup() {
 		addManifestProcessorParameter(AndroidManifestErrorsTest.class);
-		addProcessor(new AndroidAnnotationProcessor());
+		addProcessor(AndroidAnnotationProcessor.class);
 	}
 
 	@Test

File: AndroidAnnotations/androidannotations/src/test/java/com/googlecode/androidannotations/manifest/AndroidManifestFinderTest.java
Patch:
@@ -17,7 +17,7 @@ public class AndroidManifestFinderTest extends AAProcessorTestHelper {
 
 	@Before
 	public void setup() {
-		addProcessor(new AndroidAnnotationProcessor());
+		addProcessor(AndroidAnnotationProcessor.class);
 	}
 
 	@Test

File: AndroidAnnotations/androidannotations/src/test/java/com/googlecode/androidannotations/utils/AAProcessorTestHelper.java
Patch:
@@ -13,7 +13,7 @@ public void addManifestProcessorParameter(Class<?> classOfPackagingContainingMan
 	}
 
 	public File toGeneratedFile(Class<?> compiledClass) {
-		File output = new File(OUTPUT_DIRECTORY, toPath(compiledClass.getPackage()) + "/" + compiledClass + ModelConstants.GENERATION_SUFFIX + SOURCE_FILE_SUFFIX);
+		File output = new File(OUTPUT_DIRECTORY, toPath(compiledClass.getPackage()) + "/" + compiledClass.getSimpleName() + ModelConstants.GENERATION_SUFFIX + SOURCE_FILE_SUFFIX);
 		return output;
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -29,7 +29,6 @@
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.element.TypeElement;
-import javax.lang.model.type.TypeMirror;
 
 import com.googlecode.androidannotations.annotations.Bean;
 import com.googlecode.androidannotations.annotations.NonConfigurationInstance;
@@ -81,12 +80,12 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 			ncHolder.holderConstructor.body() //
 					.assign(_this().ref(superNonConfigurationInstanceField), superNonConfigurationInstanceParam);
 
-			TypeMirror fragmentActivityType = annotationHelper.typeElementFromQualifiedName(CanonicalNameConstants.FRAGMENT_ACTIVITY).asType();
+			TypeElement fragmentActivityTypeElement = annotationHelper.typeElementFromQualifiedName(CanonicalNameConstants.FRAGMENT_ACTIVITY);
 			TypeElement typeElement = annotationHelper.typeElementFromQualifiedName(holder.generatedClass._extends().fullName());
 
 			String getLastNonConfigurationInstanceName = "getLastNonConfigurationInstance";
 			String onRetainNonConfigurationInstanceName = "onRetainNonConfigurationInstance";
-			if (annotationHelper.isSubtype(typeElement.asType(), fragmentActivityType)) {
+			if (fragmentActivityTypeElement != null && annotationHelper.isSubtype(typeElement.asType(), fragmentActivityTypeElement.asType())) {
 				getLastNonConfigurationInstanceName = "getLastCustomNonConfigurationInstance";
 				onRetainNonConfigurationInstanceName = "onRetainCustomNonConfigurationInstance";
 			}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -460,6 +460,7 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new FullscreenValidator(processingEnv));
 		modelValidator.register(new RestServiceValidator(processingEnv));
 		modelValidator.register(new RootContextValidator(processingEnv));
+		modelValidator.register(new NonConfigurationInstanceValidator(processingEnv));
 		modelValidator.register(new BeanValidator(processingEnv));
 		modelValidator.register(new AfterInjectValidator(processingEnv));
 		modelValidator.register(new BeforeTextChangeValidator(processingEnv, rClass));
@@ -477,7 +478,6 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new RunnableValidator(UiThread.class, processingEnv));
 		modelValidator.register(new RunnableValidator(Background.class, processingEnv));
 		modelValidator.register(new InstanceStateValidator(processingEnv));
-		modelValidator.register(new NonConfigurationInstanceValidator(processingEnv));
 		modelValidator.register(new OrmLiteDaoValidator(processingEnv, rClass));
 		modelValidator.register(new HttpsClientValidator(processingEnv, rClass));
 		modelValidator.register(new OnActivityResultValidator(processingEnv, rClass));
@@ -548,6 +548,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new RestServiceProcessor());
 		modelProcessor.register(new OrmLiteDaoProcessor(processingEnv));
 		modelProcessor.register(new RootContextProcessor());
+		modelProcessor.register(new NonConfigurationInstanceProcessor(processingEnv));
 		modelProcessor.register(new BeanProcessor(processingEnv));
 		modelProcessor.register(new BeforeTextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new TextChangeProcessor(processingEnv, rClass));
@@ -567,7 +568,6 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new BackgroundProcessor());
 		modelProcessor.register(new AfterInjectProcessor());
 		modelProcessor.register(new InstanceStateProcessor(processingEnv));
-		modelProcessor.register(new NonConfigurationInstanceProcessor(processingEnv));
 		modelProcessor.register(new HttpsClientProcessor(rClass));
 		modelProcessor.register(new OnActivityResultProcessor(processingEnv, rClass));
 		return modelProcessor;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationHolder.java
Patch:
@@ -22,14 +22,14 @@
 import com.sun.codemodel.JVar;
 
 public class NonConfigurationHolder {
-	
+
 	public JDefinedClass holderClass;
 
 	public JMethod holderConstructor;
 
 	public JInvocation newHolder;
 
-	public JBlock initIfNonConfiguration;
+	public JBlock initIfNonConfigurationNotNullBody;
 
 	public JVar initNonConfigurationInstance;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -95,7 +95,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 				// init()
 				JBlock initBody = holder.init.body();
 				ncHolder.initNonConfigurationInstance = initBody.decl(ncHolder.holderClass, "nonConfigurationInstance", cast(ncHolder.holderClass, _super().invoke(getLastNonConfigurationInstanceName)));
-				ncHolder.initIfNonConfiguration = initBody._if(ncHolder.initNonConfigurationInstance.ne(_null()))._then();
+				ncHolder.initIfNonConfigurationNotNullBody = initBody._if(ncHolder.initNonConfigurationInstance.ne(_null()))._then();
 			}
 
 			{
@@ -134,13 +134,13 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 
 		ncHolder.newHolder.arg(field);
 
-		ncHolder.initIfNonConfiguration.assign(field, ncHolder.initNonConfigurationInstance.ref(field));
+		ncHolder.initIfNonConfigurationNotNullBody.assign(field, ncHolder.initNonConfigurationInstance.ref(field));
 
 		boolean hasBeanAnnotation = element.getAnnotation(Bean.class) != null;
 		if (hasBeanAnnotation) {
 			JClass fieldGeneratedBeanClass = holder.refClass(fieldType.fullName() + GENERATION_SUFFIX);
 
-			ncHolder.initIfNonConfiguration.invoke(cast(fieldGeneratedBeanClass, field), "rebind").arg(_this());
+			ncHolder.initIfNonConfigurationNotNullBody.invoke(cast(fieldGeneratedBeanClass, field), "rebind").arg(_this());
 		}
 
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EBeanValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.hasEmptyConstructor(element, valid);
+		validatorHelper.hasEmptyOrContextConstructor(element, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/SherlockHelper.java
Patch:
@@ -38,7 +38,7 @@ public SherlockHelper(AnnotationHelper annotationHelper) {
 	 * types
 	 */
 	public boolean usesSherlock(EBeanHolder holder) {
-		TypeElement typeElement = annotationHelper.typeElementFromQualifiedName(holder.eBean._extends().fullName());
+		TypeElement typeElement = annotationHelper.typeElementFromQualifiedName(holder.generatedClass._extends().fullName());
 
 		TypeMirror superType;
 		while (!((superType = typeElement.getSuperclass()) instanceof NoType)) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AbstractTrackingTouchProcessor.java
Patch:
@@ -68,7 +68,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			JBlock methodBody = methodToCall.body();
 
 			methodBody.add(previousBody);
-			JExpression activityRef = holder.eBean.staticRef("this");
+			JExpression activityRef = holder.generatedClass.staticRef("this");
 			textChangeCall = methodBody.invoke(activityRef, methodName);
 
 			ExecutableElement executableElement = (ExecutableElement) element;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AfterTextChangeProcessor.java
Patch:
@@ -96,7 +96,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			JBlock methodBody = methodToCall.body();
 
 			methodBody.add(previousBody);
-			JExpression activityRef = holder.eBean.staticRef("this");
+			JExpression activityRef = holder.generatedClass.staticRef("this");
 			textChangeCall = methodBody.invoke(activityRef, methodName);
 
 			for (int i = 0; i < parameters.size(); i++) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeforeTextChangeProcessor.java
Patch:
@@ -109,7 +109,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			JBlock methodBody = methodToCall.body();
 
 			methodBody.add(previousBody);
-			JExpression activityRef = holder.eBean.staticRef("this");
+			JExpression activityRef = holder.generatedClass.staticRef("this");
 			textChangeCall = methodBody.invoke(activityRef, methodName);
 
 			for (int i = 0; i < parameters.size(); i++) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -79,7 +79,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		onClickMethod.annotate(Override.class);
 		JVar onClickViewParam = onClickMethod.param(classes.VIEW, "view");
 
-		JExpression activityRef = holder.eBean.staticRef("this");
+		JExpression activityRef = holder.generatedClass.staticRef("this");
 		JInvocation clickCall = onClickMethod.body().invoke(activityRef, methodName);
 
 		if (hasViewParameter) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -33,7 +33,7 @@
 
 public class EBeanHolder {
 
-	public JDefinedClass eBean;
+	public final JDefinedClass generatedClass;
 	/**
 	 * Only defined on activities
 	 */
@@ -104,9 +104,10 @@ public class EBeanHolder {
 	private final EBeansHolder eBeansHolder;
 	public final Class<? extends Annotation> eBeanAnnotation;
 
-	public EBeanHolder(EBeansHolder eBeansHolder, Class<? extends Annotation> eBeanAnnotation) {
+	public EBeanHolder(EBeansHolder eBeansHolder, Class<? extends Annotation> eBeanAnnotation, JDefinedClass generatedClass) {
 		this.eBeansHolder = eBeansHolder;
 		this.eBeanAnnotation = eBeanAnnotation;
+		this.generatedClass = generatedClass;
 	}
 
 	public Classes classes() {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -71,7 +71,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			findFragmentById = null;
 
 			if (holder.findNativeFragmentById == null) {
-				holder.findNativeFragmentById = holder.eBean.method(PRIVATE, classes.FRAGMENT, "findNativeFragmentById");
+				holder.findNativeFragmentById = holder.generatedClass.method(PRIVATE, classes.FRAGMENT, "findNativeFragmentById");
 				JVar idParam = holder.findNativeFragmentById.param(codeModel.INT, "id");
 
 				holder.findNativeFragmentById.javadoc().add("You should check that context is an activity before calling this method");
@@ -89,7 +89,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			// Injecting support fragment
 
 			if (holder.findSupportFragmentById == null) {
-				holder.findSupportFragmentById = holder.eBean.method(PRIVATE, classes.SUPPORT_V4_FRAGMENT, "findSupportFragmentById");
+				holder.findSupportFragmentById = holder.generatedClass.method(PRIVATE, classes.SUPPORT_V4_FRAGMENT, "findSupportFragmentById");
 				JVar idParam = holder.findSupportFragmentById.param(codeModel.INT, "id");
 
 				JBlock body = holder.findSupportFragmentById.body();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByTagProcessor.java
Patch:
@@ -74,7 +74,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			findFragmentByTag = null;
 
 			if (holder.findNativeFragmentByTag == null) {
-				holder.findNativeFragmentByTag = holder.eBean.method(PRIVATE, classes.FRAGMENT, "findNativeFragmentByTag");
+				holder.findNativeFragmentByTag = holder.generatedClass.method(PRIVATE, classes.FRAGMENT, "findNativeFragmentByTag");
 				JVar tagParam = holder.findNativeFragmentByTag.param(classes.STRING, "tag");
 
 				holder.findNativeFragmentByTag.javadoc().add("You should check that context is an activity before calling this method");
@@ -92,7 +92,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			// Injecting support fragment
 
 			if (holder.findSupportFragmentByTag == null) {
-				holder.findSupportFragmentByTag = holder.eBean.method(PRIVATE, classes.SUPPORT_V4_FRAGMENT, "findSupportFragmentByTag");
+				holder.findSupportFragmentByTag = holder.generatedClass.method(PRIVATE, classes.SUPPORT_V4_FRAGMENT, "findSupportFragmentByTag");
 				JVar tagParam = holder.findSupportFragmentByTag.param(classes.STRING, "tag");
 
 				JBlock body = holder.findSupportFragmentByTag.body();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/InstanceStateProcessor.java
Patch:
@@ -202,7 +202,7 @@ private JBlock getRestoreStateBody(JCodeModel codeModel, EBeanHolder holder) {
 
 		if (holder.restoreSavedInstanceStateMethod == null) {
 
-			holder.restoreSavedInstanceStateMethod = holder.eBean.method(PRIVATE, codeModel.VOID, "restoreSavedInstanceState_");
+			holder.restoreSavedInstanceStateMethod = holder.generatedClass.method(PRIVATE, codeModel.VOID, "restoreSavedInstanceState_");
 
 			JVar savedInstanceState = holder.restoreSavedInstanceStateMethod.param(holder.classes().BUNDLE, "savedInstanceState");
 
@@ -220,7 +220,7 @@ private JBlock getRestoreStateBody(JCodeModel codeModel, EBeanHolder holder) {
 	private JBlock getSaveStateMethodBody(JCodeModel codeModel, EBeanHolder holder) {
 
 		if (holder.saveInstanceStateBlock == null) {
-			JMethod method = holder.eBean.method(PUBLIC, codeModel.VOID, "onSaveInstanceState");
+			JMethod method = holder.generatedClass.method(PUBLIC, codeModel.VOID, "onSaveInstanceState");
 			method.annotate(Override.class);
 			method.param(holder.classes().BUNDLE, BUNDLE_PARAM_NAME);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -81,7 +81,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		JBlock listenerMethodBody = listenerMethod.body();
 
-		JExpression activityRef = holder.eBean.staticRef("this");
+		JExpression activityRef = holder.generatedClass.staticRef("this");
 		JInvocation call = JExpr.invoke(activityRef, methodName);
 
 		if (returnMethodResult) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OnActivityResultProcessor.java
Patch:
@@ -114,7 +114,7 @@ private JBlock getOrCreateOnActivityResultMethodBody(JCodeModel codeModel, EBean
 
 		if (holder.onActivityResultMethod == null) {
 
-			JMethod onActivityResultMethod = holder.eBean.method(JMod.PUBLIC, codeModel.VOID, "onActivityResult");
+			JMethod onActivityResultMethod = holder.generatedClass.method(JMod.PUBLIC, codeModel.VOID, "onActivityResult");
 			JVar resultCodeParameter = onActivityResultMethod.param(codeModel.INT, "requestCode");
 			onActivityResultMethod.param(codeModel.INT, "resultCode");
 			onActivityResultMethod.param(intentClass, "data");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -88,7 +88,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		if (holder.onOptionsItemSelectedIfElseBlock == null) {
-			JMethod method = holder.eBean.method(JMod.PUBLIC, codeModel.BOOLEAN, "onOptionsItemSelected");
+			JMethod method = holder.generatedClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onOptionsItemSelected");
 			method.annotate(Override.class);
 			holder.onOptionsItemSelectedItem = method.param(menuItemClass, "item");
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -86,7 +86,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			returnType = codeModel.BOOLEAN;
 		}
 
-		JMethod method = holder.eBean.method(PUBLIC, returnType, "onCreateOptionsMenu");
+		JMethod method = holder.generatedClass.method(PUBLIC, returnType, "onCreateOptionsMenu");
 		method.annotate(Override.class);
 		JVar menuParam = method.param(menuClass, "menu");
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SeekBarProgressChangeProcessor.java
Patch:
@@ -95,7 +95,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			JBlock methodBody = methodToCall.body();
 
 			methodBody.add(previousBody);
-			JExpression activityRef = holder.eBean.staticRef("this");
+			JExpression activityRef = holder.generatedClass.staticRef("this");
 			textChangeCall = methodBody.invoke(activityRef, methodName);
 
 			for (int i = 0; i < parameters.size(); i++) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SharedPrefProcessor.java
Patch:
@@ -100,6 +100,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		String helperQualifiedName = interfaceQualifiedName + ModelConstants.GENERATION_SUFFIX;
 		JDefinedClass helperClass = codeModel._class(JMod.PUBLIC | JMod.FINAL, helperQualifiedName, ClassType.CLASS);
+		eBeansHolder.create(typeElement, getTarget(), helperClass);
 
 		helperClass._extends(SharedPreferencesHelper.class);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TextChangeProcessor.java
Patch:
@@ -109,7 +109,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 			JBlock methodBody = methodToCall.body();
 
 			methodBody.add(previousBody);
-			JExpression activityRef = holder.eBean.staticRef("this");
+			JExpression activityRef = holder.generatedClass.staticRef("this");
 			textChangeCall = methodBody.invoke(activityRef, methodName);
 
 			for (int i = 0; i < parameters.size(); i++) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -61,7 +61,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		JTryBlock tryBlock = body._try();
 
-		JExpression activitySuper = holder.eBean.staticRef("super");
+		JExpression activitySuper = holder.generatedClass.staticRef("super");
 		JInvocation superCall = JExpr.invoke(activitySuper, method);
 
 		for (JVar param : method.params()) {
@@ -86,7 +86,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		JInvocation errorInvoke = catchBody.staticInvoke(holder.classes().LOG, "e");
 
-		errorInvoke.arg(holder.eBean.name());
+		errorInvoke.arg(holder.generatedClass.name());
 		errorInvoke.arg("Error in transaction");
 		errorInvoke.arg(exceptionParam);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/UiThreadProcessor.java
Patch:
@@ -59,7 +59,7 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) t
 
 			if (holder.handler == null) {
 				JClass handlerClass = holder.classes().HANDLER;
-				holder.handler = holder.eBean.field(JMod.PRIVATE, handlerClass, "handler_", JExpr._new(handlerClass));
+				holder.handler = holder.generatedClass.field(JMod.PRIVATE, handlerClass, "handler_", JExpr._new(handlerClass));
 			}
 
 			if (delay == 0) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/RestProcessor.java
Patch:
@@ -57,17 +57,16 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		eBeansHolder.create(element, getTarget());
 		RestImplementationHolder holder = restImplementationHolder.create(element);
 
 		TypeElement typeElement = (TypeElement) element;
 		String interfaceName = typeElement.getQualifiedName().toString();
 
 		String implementationName = interfaceName + ModelConstants.GENERATION_SUFFIX;
 
-		// holder.restImplementationClass = codeModel._class(JMod.PUBLIC |
-		// JMod.ABSTRACT, implementationName, ClassType.CLASS);
 		holder.restImplementationClass = codeModel._class(JMod.PUBLIC, implementationName, ClassType.CLASS);
+		eBeansHolder.create(element, getTarget(), holder.restImplementationClass);
+
 		JClass interfaceClass = eBeansHolder.refClass(interfaceName);
 		holder.restImplementationClass._implements(interfaceClass);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -25,6 +25,7 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
+import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.TypeMirror;
 
 import com.googlecode.androidannotations.annotations.FragmentById;
@@ -62,12 +63,11 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		TypeMirror elementType = element.asType();
 		String typeQualifiedName = elementType.toString();
 
-		TypeMirror nativeFragmentType = annotationHelper.typeElementFromQualifiedName(CanonicalNameConstants.FRAGMENT).asType();
+		TypeElement nativeFragmentElement = annotationHelper.typeElementFromQualifiedName(CanonicalNameConstants.FRAGMENT);
 
 		JMethod findFragmentById;
-		if (annotationHelper.isSubtype(elementType, nativeFragmentType)) {
+		if (nativeFragmentElement != null && annotationHelper.isSubtype(elementType, nativeFragmentElement.asType())) {
 			// Injecting native fragment
-
 			findFragmentById = null;
 
 			if (holder.findNativeFragmentById == null) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -25,6 +25,7 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
+import javax.lang.model.element.TypeElement;
 import javax.lang.model.type.TypeMirror;
 
 import com.googlecode.androidannotations.annotations.FragmentById;
@@ -62,12 +63,11 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		TypeMirror elementType = element.asType();
 		String typeQualifiedName = elementType.toString();
 
-		TypeMirror nativeFragmentType = annotationHelper.typeElementFromQualifiedName(CanonicalNameConstants.FRAGMENT).asType();
+		TypeElement nativeFragmentElement = annotationHelper.typeElementFromQualifiedName(CanonicalNameConstants.FRAGMENT);
 
 		JMethod findFragmentById;
-		if (annotationHelper.isSubtype(elementType, nativeFragmentType)) {
+		if (nativeFragmentElement != null && annotationHelper.isSubtype(elementType, nativeFragmentElement.asType())) {
 			// Injecting native fragment
-
 			findFragmentById = null;
 
 			if (holder.findNativeFragmentById == null) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/TextChange.java
Patch:
@@ -32,8 +32,8 @@
  * 
  * The method may have multiple parameter :
  * <ul>
- * <li>A android.widget.TextView parameter to know which view has targeted this
- * event
+ * <li>A {@link android.widget.TextView} parameter to know which view has
+ * targeted this event
  * <li>An java.lang.CharSequence parameter to get the modified text.
  * <li>An int parameter named start to get the start position of the modified
  * text.

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeansHolder.java
Patch:
@@ -55,6 +55,8 @@ public class Classes {
 		public final JClass ACTIVITY = refClass(CanonicalNameConstants.ACTIVITY);
 		public final JClass EDITABLE = refClass(CanonicalNameConstants.EDITABLE);
 		public final JClass TEXT_WATCHER = refClass(CanonicalNameConstants.TEXT_WATCHER);
+		public final JClass SEEKBAR = refClass(CanonicalNameConstants.SEEKBAR);
+		public final JClass ON_SEEKBAR_CHANGE_LISTENER = refClass(CanonicalNameConstants.ON_SEEKBAR_CHANGE_LISTENER);
 		public final JClass TEXT_VIEW = refClass(CanonicalNameConstants.TEXT_VIEW);
 		public final JClass VIEW = refClass(CanonicalNameConstants.VIEW);
 		public final JClass VIEW_ON_CLICK_LISTENER = refClass(CanonicalNameConstants.VIEW_ON_CLICK_LISTENER);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -28,7 +28,6 @@
 import com.sun.codemodel.JExpression;
 import com.sun.codemodel.JFieldVar;
 import com.sun.codemodel.JMethod;
-import com.sun.codemodel.JSwitch;
 import com.sun.codemodel.JVar;
 
 public class EBeanHolder {
@@ -52,7 +51,8 @@ public class EBeanHolder {
 
 	public JFieldVar handler;
 
-	public JSwitch onOptionsItemSelectedSwitch;
+	public JBlock onOptionsItemSelectedIfElseBlock;
+	public JVar onOptionsItemSelectedItemId;
 	public JVar onOptionsItemSelectedItem;
 
 	public JMethod restoreSavedInstanceStateMethod;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/GetProcessor.java
Patch:
@@ -61,13 +61,13 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		String returnTypeString = returnType.toString();
 
 		if (returnType.getKind() != TypeKind.VOID) {
-			DeclaredType declaredReturnType = (DeclaredType) returnType;
-
 			if (returnTypeString.startsWith(CanonicalNameConstants.RESPONSE_ENTITY)) {
+				DeclaredType declaredReturnType = (DeclaredType) returnType;
 				TypeMirror typeParameter = declaredReturnType.getTypeArguments().get(0);
 				expectedClass = holder.refClass(typeParameter.toString());
 				generatedReturnClass = holder.refClass(CanonicalNameConstants.RESPONSE_ENTITY).narrow(expectedClass);
 			} else if (returnType.getKind() == TypeKind.DECLARED) {
+				DeclaredType declaredReturnType = (DeclaredType) returnType;
 				TypeMirror enclosingType = declaredReturnType.getEnclosingType();
 				if (enclosingType instanceof NoType) {
 					expectedClass = holder.parseClass(declaredReturnType.toString());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -28,7 +28,6 @@
 import com.sun.codemodel.JExpression;
 import com.sun.codemodel.JFieldVar;
 import com.sun.codemodel.JMethod;
-import com.sun.codemodel.JSwitch;
 import com.sun.codemodel.JVar;
 
 public class EBeanHolder {
@@ -52,7 +51,8 @@ public class EBeanHolder {
 
 	public JFieldVar handler;
 
-	public JSwitch onOptionsItemSelectedSwitch;
+	public JBlock onOptionsItemSelectedIfElseBlock;
+	public JVar onOptionsItemSelectedItemId;
 	public JVar onOptionsItemSelectedItem;
 
 	public JMethod restoreSavedInstanceStateMethod;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EApplicationValidator.java
Patch:
@@ -50,8 +50,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		validatorHelper.extendsApplication(element, valid);
 
 		validatorHelper.isNotFinal(element, valid);
-		
-		validatorHelper.isNotAbstract(element, valid);
 
 		validatorHelper.applicationRegistered(element, androidManifest, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EBeanValidator.java
Patch:
@@ -46,8 +46,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotFinal(element, valid);
 
-		validatorHelper.isNotAbstract(element, valid);
-
 		validatorHelper.isNotPrivate(element, valid);
 
 		validatorHelper.hasEmptyConstructor(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EFragmentValidator.java
Patch:
@@ -49,8 +49,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotFinal(element, valid);
 
-		validatorHelper.isNotAbstract(element, valid);
-
 		validatorHelper.resIdsExist(element, Res.LAYOUT, FallbackStrategy.ALLOW_NO_RES_ID, valid);
 
 		validatorHelper.isNotPrivate(element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ProgressChange.java
Patch:
@@ -50,7 +50,7 @@
  * 
  * </blockquote> <blockquote>
  * 
- * All of those parameters are optional.
+ * All these parameters are optional.
  * 
  * </blockquote> <blockquote>
  * 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TrackingTouchStopValidator.java
Patch:
@@ -22,7 +22,7 @@
 import com.googlecode.androidannotations.annotations.TrackingTouchStop;
 import com.googlecode.androidannotations.rclass.IRClass;
 
-public class TrackingTouchStopValidator extends TrackingTouchStartValidator implements ElementValidator {
+public class TrackingTouchStopValidator extends AbstractTrackingTouchValidator {
 
 	public TrackingTouchStopValidator(ProcessingEnvironment processingEnv, IRClass rClass) {
 		super(processingEnv, rClass);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/generation/SourceCodewriter.java
Patch:
@@ -52,6 +52,7 @@ public OutputStream openBinary(JPackage pkg, String fileName) throws IOException
 		message.printMessage(Kind.NOTE, "Generating source file: " + qualifiedClassName);
 		try {
 			JavaFileObject sourceFile = filer.createSourceFile(qualifiedClassName);
+			
 			return sourceFile.openOutputStream();
 		} catch (FilerException e) {
 			message.printMessage(Kind.NOTE, "Could not generate source file for " + qualifiedClassName + ", message: " + e.getMessage());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/generation/SourceCodewriter.java
Patch:
@@ -52,6 +52,7 @@ public OutputStream openBinary(JPackage pkg, String fileName) throws IOException
 		message.printMessage(Kind.NOTE, "Generating source file: " + qualifiedClassName);
 		try {
 			JavaFileObject sourceFile = filer.createSourceFile(qualifiedClassName);
+			
 			return sourceFile.openOutputStream();
 		} catch (FilerException e) {
 			message.printMessage(Kind.NOTE, "Could not generate source file for " + qualifiedClassName + ", message: " + e.getMessage());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ProgressChangeValidator.java
Patch:
@@ -103,9 +103,6 @@ private void haveProgressChangeMethodParameters(ExecutableElement executableElem
 			annotationHelper.printAnnotationError(executableElement, "Unrecognized parameter '" + parameter.toString() + "'. %s signature should be " + executableElement.getSimpleName() + "(SeekBar seekBar, int progress, boolean fromUser). The 'fromUser' and 'progress' parameters are optional.");
 			valid.invalidate();
 		}
-		if (!seekBarParameterFound) {
-			annotationHelper.printAnnotationError(executableElement, "SeekBar parameter not found. The method should declare at least on parameter of type android.widget.SeekBar ");
-		}
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OrmLiteDao.java
Patch:
@@ -21,7 +21,7 @@
 import java.lang.annotation.Target;
 
 /**
- * Injects and OrmLite Dao, configured with the provided mode and helper classes
+ * Injects an OrmLite Dao, configured with the provided mode and helper classes
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/HttpsClient.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/HttpsClientProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -12,8 +12,6 @@
  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  * License for the specific language governing permissions and limitations under
  * the License.
- * 
- * @author Nabil Hachicha
  */
 package com.googlecode.androidannotations.processing;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/HttpsClientValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -12,8 +12,6 @@
  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  * License for the specific language governing permissions and limitations under
  * the License.
- * 
- * @author Nabil Hachicha
  */
 package com.googlecode.androidannotations.validation;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeansHolder.java
Patch:
@@ -169,7 +169,7 @@ public JClass refClass(String fullyQualifiedClassName) {
 		if (refClass == null) {
 			try {
 				refClass = codeModel.ref(fullyQualifiedClassName);
-			} catch (NoClassDefFoundError ignored) {
+			} catch (Throwable ignored) {
 				refClass = codeModel.directClass(fullyQualifiedClassName);
 			}
 			loadedClasses.put(fullyQualifiedClassName, refClass);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -522,7 +522,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new NoTitleProcessor());
 		modelProcessor.register(new FullscreenProcessor());
 		modelProcessor.register(new RestServiceProcessor());
-		modelProcessor.register(new OrmLiteDaoProcessor());
+		modelProcessor.register(new OrmLiteDaoProcessor(processingEnv));
 		modelProcessor.register(new RootContextProcessor());
 		modelProcessor.register(new BeanProcessor(processingEnv));
 		modelProcessor.register(new AfterViewsProcessor());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OrmLiteDaoValidator.java
Patch:
@@ -46,11 +46,13 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
+		validatorHelper.hasOrmLiteJars(element, valid);
+
 		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.extendsOrmLiteDao(element, valid);
+		validatorHelper.extendsOrmLiteDaoWithValidModelParameter(element, valid);
 
 		validatorHelper.hasASqlLiteOpenHelperParameterizedType(element, valid);
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ormlite/OrmLiteActivity.java
Patch:
@@ -24,7 +24,6 @@
 
 @EActivity
 public class OrmLiteActivity extends Activity {
-
 	@OrmLiteDao(helper = DatabaseHelper.class, model = User.class)
 	UserDao userDao;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ProgressChangeProcessor.java
Patch:
@@ -88,10 +88,10 @@ public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		for (JFieldRef idRef : idsRefs) {
-			OnSeekBarChangeListenerHolder textWatcherHolder = helper.getOrCreateListener(codeModel, holder, idRef);
+			OnSeekBarChangeListenerHolder onSeekBarChangeListenerHolder = helper.getOrCreateListener(codeModel, holder, idRef);
 
 			JInvocation textChangeCall;
-			JMethod methodToCall = textWatcherHolder.onProgressChangedMethod;
+			JMethod methodToCall = onSeekBarChangeListenerHolder.onProgressChangedMethod;
 
 			JBlock previousBody = codeModelHelper.removeBody(methodToCall);
 			JBlock methodBody = methodToCall.body();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterInject.java
Patch:
@@ -33,7 +33,7 @@
  * class.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface AfterInject {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -74,7 +74,7 @@
  * 	// Something Here
  * }
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface AfterTextChange {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterViews.java
Patch:
@@ -35,7 +35,7 @@
  * activity.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface AfterViews {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/App.java
Patch:
@@ -24,7 +24,7 @@
  * Injects the application. Please check that your registered the application in
  * the AndroidManifest.xml class prior to using this annotation.
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface App {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Background.java
Patch:
@@ -25,7 +25,7 @@
  * must belong to an activity annotated with @Layout.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Background {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/BeforeTextChange.java
Patch:
@@ -81,7 +81,7 @@
  * 
  * </blockquote>
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface BeforeTextChange {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Click.java
Patch:
@@ -30,7 +30,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Click {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -41,7 +41,7 @@
  * AndroidAnnotations.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EActivity {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EFragment.java
Patch:
@@ -27,7 +27,7 @@
  * to handle the view creation by yourself.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EFragment {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EProvider.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Use this annotation to enhance an Android ContentProvider
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EProvider {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EReceiver.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Use this annotation to enhance an Android BroadcastReceiver
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EReceiver {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EService.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Use this annotation to enhance an Android Service
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EService {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EView.java
Patch:
@@ -46,7 +46,7 @@
  *      to build a custom component.</a>
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EView {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EViewGroup.java
Patch:
@@ -46,7 +46,7 @@
  *      to build a custom component.</a>
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EViewGroup {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Extra.java
Patch:
@@ -30,7 +30,7 @@
  * annotated extras.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface Extra {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentById.java
Patch:
@@ -27,7 +27,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface FragmentById {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentByTag.java
Patch:
@@ -27,7 +27,7 @@
  * field name will be used as tag name name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface FragmentByTag {
 	String value() default "";

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FromHtml.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface FromHtml {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Fullscreen.java
Patch:
@@ -26,7 +26,7 @@
  * The activity must be annotated with {@link EActivity}.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface Fullscreen {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/HttpsClient.java
Patch:
@@ -56,7 +56,7 @@
  * 
  * @author Nabil Hachicha
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface HttpsClient {
 	public static final String DEFAULT_PASSWD = "changeit";

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/InstanceState.java
Patch:
@@ -24,7 +24,7 @@
  * Use on activity fields to save and restore their values when the
  * system calls onSaveInstanceState(Bundle) and onCreate(Bundle).
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface InstanceState {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java
Patch:
@@ -37,7 +37,7 @@
  * @author Mathieu Boniface
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface ItemClick {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -41,7 +41,7 @@
  * @author Mathieu Boniface
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface ItemLongClick {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java
Patch:
@@ -38,7 +38,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface ItemSelect {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/LongClick.java
Patch:
@@ -38,7 +38,7 @@
  * @author Mathieu Boniface
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface LongClick {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/NoTitle.java
Patch:
@@ -26,7 +26,7 @@
  * The activity must be annotated with {@link EActivity}.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface NoTitle {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/NonConfigurationInstance.java
Patch:
@@ -38,7 +38,7 @@
  * This caution doesn't apply to beans annotated with {@link Bean}, because
  * AndroidAnnotations automatically takes care of rebinding their context.
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface NonConfigurationInstance {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsItem.java
Patch:
@@ -30,7 +30,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface OptionsItem {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -28,7 +28,7 @@
  * The annotation value should be one of R.menu.* fields.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface OptionsMenu {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RoboGuice.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Should be used on Activity classes that use the RoboGuice framework
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface RoboGuice {
 	/**

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RootContext.java
Patch:
@@ -31,7 +31,7 @@
  * on a field that extends Activity, this field will be null at runtime.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface RootContext {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/SystemService.java
Patch:
@@ -24,7 +24,7 @@
  * Use it on manager fields in activity classes
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface SystemService {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/TextChange.java
Patch:
@@ -77,7 +77,7 @@
  * 	// Something Here
  * }
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface TextChange {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Touch.java
Patch:
@@ -35,7 +35,7 @@
  * 
  * @author Mathieu Boniface
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Touch {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Trace.java
Patch:
@@ -34,7 +34,7 @@
  * 
  * @author Mathieu Boniface
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Trace {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Transactional.java
Patch:
@@ -26,7 +26,7 @@
  * The first parameter of the method must be a SQLiteDatabase.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Transactional {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/UiThread.java
Patch:
@@ -27,7 +27,7 @@
  * method will be executed. The default is 0 (no delay).
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface UiThread {
 	long delay() default 0;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ViewById.java
Patch:
@@ -29,7 +29,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface ViewById {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/AnimationRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface AnimationRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/BooleanRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface BooleanRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorRes.java
Patch:
@@ -32,7 +32,7 @@
  * set, the field name will be used as the R.color.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface ColorRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorStateListRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface ColorStateListRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelOffsetRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DimensionPixelOffsetRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelSizeRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DimensionPixelSizeRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DimensionRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DrawableRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DrawableRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/HtmlRes.java
Patch:
@@ -22,7 +22,7 @@
 
 import com.googlecode.androidannotations.annotations.ResId;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface HtmlRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface IntArrayRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntegerRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface IntegerRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface LayoutRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/MovieRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface MovieRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -32,7 +32,7 @@
  * set, the field name will be used as the R.array.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface StringArrayRes {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringRes.java
Patch:
@@ -36,7 +36,7 @@
  * be used.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface StringRes {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface TextArrayRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface TextRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Accept.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target({ ElementType.METHOD, ElementType.TYPE })
 public @interface Accept {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Delete.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Delete {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Get.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Get {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Head.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Head {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Options.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Options {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Post.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Post {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Put.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Put {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/RestService.java
Patch:
@@ -28,7 +28,7 @@
  * interface.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface RestService {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultBoolean.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultBoolean {
 	boolean value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultFloat.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultFloat {
 	float value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultInt.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultInt {
 	int value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultLong.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultLong {
 	long value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultString.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultString {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -29,7 +29,7 @@
  * therefore extends {@link SharedPreferencesHelper}.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface Pref {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/SharedPref.java
Patch:
@@ -27,7 +27,7 @@
  * that will contain access methods related to the methods you define in the
  * interface.
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface SharedPref {
 	public enum Scope {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeforeTextChangeProcessor.java
Patch:
@@ -41,7 +41,7 @@
 /**
  * @author Mathieu Boniface
  */
-public class BeforeTextChangeProcessor implements ElementProcessor {
+public class BeforeTextChangeProcessor implements DecoratingElementProcessor {
 
 	private final TextWatcherHelper helper;
 
@@ -58,8 +58,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EApplicationProcessor.java
Patch:
@@ -34,17 +34,17 @@
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JMethod;
 
-public class EApplicationProcessor implements ElementProcessor {
+public class EApplicationProcessor implements GeneratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return EApplication.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanProcessor.java
Patch:
@@ -41,7 +41,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class EBeanProcessor implements ElementProcessor {
+public class EBeanProcessor implements GeneratingElementProcessor {
 
 	public static final String GET_INSTANCE_METHOD_NAME = "getInstance" + GENERATION_SUFFIX;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EFragmentProcessor.java
Patch:
@@ -44,7 +44,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class EFragmentProcessor implements ElementProcessor {
+public class EFragmentProcessor implements GeneratingElementProcessor {
 
 	private final IdAnnotationHelper helper;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -34,17 +34,17 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JMethod;
 
-public class EProviderProcessor implements ElementProcessor {
+public class EProviderProcessor implements GeneratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return EProvider.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EReceiverProcessor.java
Patch:
@@ -36,17 +36,17 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class EReceiverProcessor implements ElementProcessor {
+public class EReceiverProcessor implements GeneratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return EReceiver.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EServiceProcessor.java
Patch:
@@ -35,7 +35,7 @@
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JMethod;
 
-public class EServiceProcessor implements ElementProcessor {
+public class EServiceProcessor implements GeneratingElementProcessor {
 
 	private final APTCodeModelHelper aptCodeModelHelper;
 
@@ -49,9 +49,9 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -44,7 +44,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 
-public class EViewGroupProcessor implements ElementProcessor {
+public class EViewGroupProcessor implements GeneratingElementProcessor {
 
 	private static final String ALREADY_INFLATED_COMMENT = "" // +
 			+ "The mAlreadyInflated_ hack is needed because of an Android bug\n" // +

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewProcessor.java
Patch:
@@ -38,7 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 
-public class EViewProcessor implements ElementProcessor {
+public class EViewProcessor implements GeneratingElementProcessor {
 
 	private static final String ALREADY_INFLATED_COMMENT = "" // +
 			+ "The mAlreadyInflated_ hack is needed because of an Android bug\n" // +

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -52,7 +52,7 @@
 import com.sun.codemodel.JTypeVar;
 import com.sun.codemodel.JVar;
 
-public class ExtraProcessor implements ElementProcessor {
+public class ExtraProcessor implements DecoratingElementProcessor {
 
 	private final APTCodeModelHelper helper = new APTCodeModelHelper();
 	private final ProcessingEnvironment processingEnv;
@@ -67,7 +67,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Extra annotation = element.getAnnotation(Extra.class);
 		String extraKey = annotation.value();
 		String fieldName = element.getSimpleName().toString();
@@ -79,7 +79,6 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		TypeMirror elementType = element.asType();
 		boolean isPrimitive = elementType.getKind().isPrimitive();
 
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 		Classes classes = holder.classes();
 
 		if (!isPrimitive && holder.cast == null) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -39,7 +39,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class FragmentByIdProcessor implements ElementProcessor {
+public class FragmentByIdProcessor implements DecoratingElementProcessor {
 
 	private final IdAnnotationHelper annotationHelper;
 
@@ -53,9 +53,8 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
 		Classes classes = holder.classes();
 
 		String fieldName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -32,7 +32,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
 
-public class FromHtmlProcessor implements ElementProcessor {
+public class FromHtmlProcessor implements DecoratingElementProcessor {
 
 	private final IdAnnotationHelper annotationHelper;
 
@@ -46,8 +46,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) throws Exception {
 		Classes classes = holder.classes();
 
 		String fieldName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/GeneratingElementProcessor.java
Patch:
@@ -20,7 +20,7 @@
 import com.googlecode.androidannotations.helper.HasTarget;
 import com.sun.codemodel.JCodeModel;
 
-public interface ElementProcessor extends HasTarget {
+public interface GeneratingElementProcessor extends HasTarget {
 
 	void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/HttpsClientProcessor.java
Patch:
@@ -47,7 +47,7 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class HttpsClientProcessor implements ElementProcessor {
+public class HttpsClientProcessor implements DecoratingElementProcessor {
 
 	private final IRClass rClass;
 
@@ -61,8 +61,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		HttpsClient annotation = element.getAnnotation(HttpsClient.class);
 		int trustStoreRawId = annotation.trustStore();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/InstanceStateProcessor.java
Patch:
@@ -48,7 +48,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class InstanceStateProcessor implements ElementProcessor {
+public class InstanceStateProcessor implements DecoratingElementProcessor {
 
 	private static final String BUNDLE_PARAM_NAME = "bundle";
 
@@ -104,8 +104,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		String fieldName = element.getSimpleName().toString();
 
 		JBlock saveStateBody = getSaveStateMethodBody(codeModel, holder);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -46,7 +46,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class ItemClickProcessor implements ElementProcessor {
+public class ItemClickProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -60,8 +60,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -51,7 +51,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class ItemLongClickProcessor implements ElementProcessor {
+public class ItemLongClickProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -65,8 +65,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -51,7 +51,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class ItemSelectedProcessor implements ElementProcessor {
+public class ItemSelectedProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -65,8 +65,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -46,7 +46,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class LongClickProcessor implements ElementProcessor {
+public class LongClickProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -60,8 +60,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -45,7 +45,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class NonConfigurationInstanceProcessor implements ElementProcessor {
+public class NonConfigurationInstanceProcessor implements DecoratingElementProcessor {
 
 	private APTCodeModelHelper aptCodeModelHelper;
 	private AnnotationHelper annotationHelper;
@@ -61,8 +61,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws JClassAlreadyExistsException {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) throws JClassAlreadyExistsException {
 
 		NonConfigurationHolder ncHolder = holder.nonConfigurationHolder;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -49,7 +49,7 @@
 /**
  * @author Pierre-Yves Ricau
  */
-public class OptionsItemProcessor implements ElementProcessor {
+public class OptionsItemProcessor implements DecoratingElementProcessor {
 
 	private final IdAnnotationHelper helper;
 
@@ -66,8 +66,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -42,7 +42,7 @@
 import com.sun.codemodel.JType;
 import com.sun.codemodel.JVar;
 
-public class OptionsMenuProcessor implements ElementProcessor {
+public class OptionsMenuProcessor implements DecoratingElementProcessor {
 
 	private final SherlockHelper sherlockHelper;
 
@@ -59,8 +59,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getRelativeEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		boolean isFragment = holder.eBeanAnnotation == EFragment.class;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -35,7 +35,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
 
-public class ResProcessor implements ElementProcessor {
+public class ResProcessor implements DecoratingElementProcessor {
 
 	private final AndroidRes androidValue;
 
@@ -52,8 +52,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String fieldName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -27,16 +27,15 @@
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JFieldRef;
 
-public class RestServiceProcessor implements ElementProcessor {
+public class RestServiceProcessor implements DecoratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return RestService.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String fieldName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RoboGuiceProcessor.java
Patch:
@@ -45,16 +45,15 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class RoboGuiceProcessor implements ElementProcessor {
+public class RoboGuiceProcessor implements DecoratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return RoboGuice.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getRelativeEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		holder.eBean._implements(holder.classes().INJECTOR_PROVIDER);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -29,16 +29,15 @@
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
 
-public class RootContextProcessor implements ElementProcessor {
+public class RootContextProcessor implements DecoratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return RootContext.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String fieldName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -47,7 +47,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class TouchProcessor implements ElementProcessor {
+public class TouchProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -61,8 +61,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TraceProcessor.java
Patch:
@@ -37,7 +37,7 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class TraceProcessor implements ElementProcessor {
+public class TraceProcessor implements DecoratingElementProcessor {
 
 	private final APTCodeModelHelper helper = new APTCodeModelHelper();
 
@@ -47,8 +47,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -33,7 +33,7 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class TransactionalProcessor implements ElementProcessor {
+public class TransactionalProcessor implements DecoratingElementProcessor {
 
 	private final APTCodeModelHelper helper = new APTCodeModelHelper();
 
@@ -43,8 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ExtendingActivity.java
Patch:
@@ -18,6 +18,6 @@
 import com.googlecode.androidannotations.annotations.EActivity;
 
 @EActivity
-public class ExtendingActivity extends AbstractActivity_ {
+public class ExtendingActivity extends AbstractActivity {
 	
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/prefs/SomePrefs.java
Patch:
@@ -22,7 +22,7 @@
 
 @SharedPref(Scope.UNIQUE)
 public interface SomePrefs {
-
+	
 	@DefaultString("John")
 	String name();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterInject.java
Patch:
@@ -33,7 +33,7 @@
  * class.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface AfterInject {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -74,7 +74,7 @@
  * 	// Something Here
  * }
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface AfterTextChange {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterViews.java
Patch:
@@ -35,7 +35,7 @@
  * activity.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface AfterViews {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/App.java
Patch:
@@ -24,7 +24,7 @@
  * Injects the application. Please check that your registered the application in
  * the AndroidManifest.xml class prior to using this annotation.
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface App {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Background.java
Patch:
@@ -25,7 +25,7 @@
  * must belong to an activity annotated with @Layout.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Background {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/BeforeTextChange.java
Patch:
@@ -81,7 +81,7 @@
  * 
  * </blockquote>
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface BeforeTextChange {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Click.java
Patch:
@@ -30,7 +30,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Click {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -41,7 +41,7 @@
  * AndroidAnnotations.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EActivity {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EFragment.java
Patch:
@@ -27,7 +27,7 @@
  * to handle the view creation by yourself.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EFragment {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EProvider.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Use this annotation to enhance an Android ContentProvider
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EProvider {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EReceiver.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Use this annotation to enhance an Android BroadcastReceiver
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EReceiver {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EService.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Use this annotation to enhance an Android Service
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EService {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EView.java
Patch:
@@ -46,7 +46,7 @@
  *      to build a custom component.</a>
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EView {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EViewGroup.java
Patch:
@@ -46,7 +46,7 @@
  *      to build a custom component.</a>
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EViewGroup {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Extra.java
Patch:
@@ -30,7 +30,7 @@
  * annotated extras.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface Extra {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentById.java
Patch:
@@ -27,7 +27,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface FragmentById {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentByTag.java
Patch:
@@ -27,7 +27,7 @@
  * field name will be used as tag name name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface FragmentByTag {
 	String value() default "";

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FromHtml.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface FromHtml {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Fullscreen.java
Patch:
@@ -26,7 +26,7 @@
  * The activity must be annotated with {@link EActivity}.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface Fullscreen {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/HttpsClient.java
Patch:
@@ -56,7 +56,7 @@
  * 
  * @author Nabil Hachicha
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface HttpsClient {
 	public static final String DEFAULT_PASSWD = "changeit";

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/InstanceState.java
Patch:
@@ -24,7 +24,7 @@
  * Use on activity fields to save and restore their values when the
  * system calls onSaveInstanceState(Bundle) and onCreate(Bundle).
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface InstanceState {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java
Patch:
@@ -37,7 +37,7 @@
  * @author Mathieu Boniface
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface ItemClick {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -41,7 +41,7 @@
  * @author Mathieu Boniface
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface ItemLongClick {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java
Patch:
@@ -38,7 +38,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface ItemSelect {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/LongClick.java
Patch:
@@ -38,7 +38,7 @@
  * @author Mathieu Boniface
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface LongClick {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/NoTitle.java
Patch:
@@ -26,7 +26,7 @@
  * The activity must be annotated with {@link EActivity}.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface NoTitle {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/NonConfigurationInstance.java
Patch:
@@ -38,7 +38,7 @@
  * This caution doesn't apply to beans annotated with {@link Bean}, because
  * AndroidAnnotations automatically takes care of rebinding their context.
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface NonConfigurationInstance {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsItem.java
Patch:
@@ -30,7 +30,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface OptionsItem {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -28,7 +28,7 @@
  * The annotation value should be one of R.menu.* fields.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface OptionsMenu {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RoboGuice.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Should be used on Activity classes that use the RoboGuice framework
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface RoboGuice {
 	/**

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RootContext.java
Patch:
@@ -31,7 +31,7 @@
  * on a field that extends Activity, this field will be null at runtime.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface RootContext {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/SystemService.java
Patch:
@@ -24,7 +24,7 @@
  * Use it on manager fields in activity classes
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface SystemService {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/TextChange.java
Patch:
@@ -77,7 +77,7 @@
  * 	// Something Here
  * }
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface TextChange {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Touch.java
Patch:
@@ -35,7 +35,7 @@
  * 
  * @author Mathieu Boniface
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Touch {
 	int[] value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Trace.java
Patch:
@@ -34,7 +34,7 @@
  * 
  * @author Mathieu Boniface
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Trace {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Transactional.java
Patch:
@@ -26,7 +26,7 @@
  * The first parameter of the method must be a SQLiteDatabase.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Transactional {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/UiThread.java
Patch:
@@ -27,7 +27,7 @@
  * method will be executed. The default is 0 (no delay).
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface UiThread {
 	long delay() default 0;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ViewById.java
Patch:
@@ -29,7 +29,7 @@
  * name will be used as the R.id.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface ViewById {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/AnimationRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface AnimationRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/BooleanRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface BooleanRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorRes.java
Patch:
@@ -32,7 +32,7 @@
  * set, the field name will be used as the R.color.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface ColorRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorStateListRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface ColorStateListRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelOffsetRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DimensionPixelOffsetRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelSizeRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DimensionPixelSizeRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DimensionRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DrawableRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface DrawableRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/HtmlRes.java
Patch:
@@ -22,7 +22,7 @@
 
 import com.googlecode.androidannotations.annotations.ResId;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface HtmlRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface IntArrayRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntegerRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface IntegerRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface LayoutRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/MovieRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface MovieRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -32,7 +32,7 @@
  * set, the field name will be used as the R.array.* field name.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface StringArrayRes {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringRes.java
Patch:
@@ -36,7 +36,7 @@
  * be used.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface StringRes {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface TextArrayRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextRes.java
Patch:
@@ -26,7 +26,7 @@
  * Use on fields in activity classes that should be injected with this specific
  * resource
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface TextRes {
 	int value() default ResId.DEFAULT_VALUE;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Accept.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target({ ElementType.METHOD, ElementType.TYPE })
 public @interface Accept {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Delete.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Delete {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Get.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Get {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Head.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Head {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Options.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Options {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Post.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Post {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Put.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface Put {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/RestService.java
Patch:
@@ -28,7 +28,7 @@
  * interface.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface RestService {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultBoolean.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultBoolean {
 	boolean value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultFloat.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultFloat {
 	float value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultInt.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultInt {
 	int value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultLong.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultLong {
 	long value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultString.java
Patch:
@@ -23,7 +23,7 @@
 /**
  * Default value for a preference field
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.METHOD)
 public @interface DefaultString {
 	String value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -29,7 +29,7 @@
  * therefore extends {@link SharedPreferencesHelper}.
  * 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface Pref {
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/SharedPref.java
Patch:
@@ -27,7 +27,7 @@
  * that will contain access methods related to the methods you define in the
  * interface.
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface SharedPref {
 	public enum Scope {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeforeTextChangeProcessor.java
Patch:
@@ -41,7 +41,7 @@
 /**
  * @author Mathieu Boniface
  */
-public class BeforeTextChangeProcessor implements ElementProcessor {
+public class BeforeTextChangeProcessor implements DecoratingElementProcessor {
 
 	private final TextWatcherHelper helper;
 
@@ -58,8 +58,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EApplicationProcessor.java
Patch:
@@ -34,17 +34,17 @@
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JMethod;
 
-public class EApplicationProcessor implements ElementProcessor {
+public class EApplicationProcessor implements GeneratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return EApplication.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanProcessor.java
Patch:
@@ -41,7 +41,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class EBeanProcessor implements ElementProcessor {
+public class EBeanProcessor implements GeneratingElementProcessor {
 
 	public static final String GET_INSTANCE_METHOD_NAME = "getInstance" + GENERATION_SUFFIX;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EFragmentProcessor.java
Patch:
@@ -44,7 +44,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class EFragmentProcessor implements ElementProcessor {
+public class EFragmentProcessor implements GeneratingElementProcessor {
 
 	private final IdAnnotationHelper helper;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -34,17 +34,17 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JMethod;
 
-public class EProviderProcessor implements ElementProcessor {
+public class EProviderProcessor implements GeneratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return EProvider.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EReceiverProcessor.java
Patch:
@@ -36,17 +36,17 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class EReceiverProcessor implements ElementProcessor {
+public class EReceiverProcessor implements GeneratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return EReceiver.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EServiceProcessor.java
Patch:
@@ -35,7 +35,7 @@
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JMethod;
 
-public class EServiceProcessor implements ElementProcessor {
+public class EServiceProcessor implements GeneratingElementProcessor {
 
 	private final APTCodeModelHelper aptCodeModelHelper;
 
@@ -49,9 +49,9 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
+	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element, getTarget());
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -44,7 +44,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 
-public class EViewGroupProcessor implements ElementProcessor {
+public class EViewGroupProcessor implements GeneratingElementProcessor {
 
 	private static final String ALREADY_INFLATED_COMMENT = "" // +
 			+ "The mAlreadyInflated_ hack is needed because of an Android bug\n" // +

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewProcessor.java
Patch:
@@ -38,7 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 
-public class EViewProcessor implements ElementProcessor {
+public class EViewProcessor implements GeneratingElementProcessor {
 
 	private static final String ALREADY_INFLATED_COMMENT = "" // +
 			+ "The mAlreadyInflated_ hack is needed because of an Android bug\n" // +

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -52,7 +52,7 @@
 import com.sun.codemodel.JTypeVar;
 import com.sun.codemodel.JVar;
 
-public class ExtraProcessor implements ElementProcessor {
+public class ExtraProcessor implements DecoratingElementProcessor {
 
 	private final APTCodeModelHelper helper = new APTCodeModelHelper();
 	private final ProcessingEnvironment processingEnv;
@@ -67,7 +67,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Extra annotation = element.getAnnotation(Extra.class);
 		String extraKey = annotation.value();
 		String fieldName = element.getSimpleName().toString();
@@ -79,7 +79,6 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		TypeMirror elementType = element.asType();
 		boolean isPrimitive = elementType.getKind().isPrimitive();
 
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 		Classes classes = holder.classes();
 
 		if (!isPrimitive && holder.cast == null) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -39,7 +39,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class FragmentByIdProcessor implements ElementProcessor {
+public class FragmentByIdProcessor implements DecoratingElementProcessor {
 
 	private final IdAnnotationHelper annotationHelper;
 
@@ -53,9 +53,8 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
 		Classes classes = holder.classes();
 
 		String fieldName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -32,7 +32,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
 
-public class FromHtmlProcessor implements ElementProcessor {
+public class FromHtmlProcessor implements DecoratingElementProcessor {
 
 	private final IdAnnotationHelper annotationHelper;
 
@@ -46,8 +46,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) throws Exception {
 		Classes classes = holder.classes();
 
 		String fieldName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/GeneratingElementProcessor.java
Patch:
@@ -20,7 +20,7 @@
 import com.googlecode.androidannotations.helper.HasTarget;
 import com.sun.codemodel.JCodeModel;
 
-public interface ElementProcessor extends HasTarget {
+public interface GeneratingElementProcessor extends HasTarget {
 
 	void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/HttpsClientProcessor.java
Patch:
@@ -47,7 +47,7 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class HttpsClientProcessor implements ElementProcessor {
+public class HttpsClientProcessor implements DecoratingElementProcessor {
 
 	private final IRClass rClass;
 
@@ -61,8 +61,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		HttpsClient annotation = element.getAnnotation(HttpsClient.class);
 		int trustStoreRawId = annotation.trustStore();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/InstanceStateProcessor.java
Patch:
@@ -48,7 +48,7 @@
 import com.sun.codemodel.JMethod;
 import com.sun.codemodel.JVar;
 
-public class InstanceStateProcessor implements ElementProcessor {
+public class InstanceStateProcessor implements DecoratingElementProcessor {
 
 	private static final String BUNDLE_PARAM_NAME = "bundle";
 
@@ -104,8 +104,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		String fieldName = element.getSimpleName().toString();
 
 		JBlock saveStateBody = getSaveStateMethodBody(codeModel, holder);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -46,7 +46,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class ItemClickProcessor implements ElementProcessor {
+public class ItemClickProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -60,8 +60,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -51,7 +51,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class ItemLongClickProcessor implements ElementProcessor {
+public class ItemLongClickProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -65,8 +65,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -51,7 +51,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class ItemSelectedProcessor implements ElementProcessor {
+public class ItemSelectedProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -65,8 +65,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -46,7 +46,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class LongClickProcessor implements ElementProcessor {
+public class LongClickProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -60,8 +60,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -45,7 +45,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JVar;
 
-public class NonConfigurationInstanceProcessor implements ElementProcessor {
+public class NonConfigurationInstanceProcessor implements DecoratingElementProcessor {
 
 	private APTCodeModelHelper aptCodeModelHelper;
 	private AnnotationHelper annotationHelper;
@@ -61,8 +61,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws JClassAlreadyExistsException {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) throws JClassAlreadyExistsException {
 
 		NonConfigurationHolder ncHolder = holder.nonConfigurationHolder;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -49,7 +49,7 @@
 /**
  * @author Pierre-Yves Ricau
  */
-public class OptionsItemProcessor implements ElementProcessor {
+public class OptionsItemProcessor implements DecoratingElementProcessor {
 
 	private final IdAnnotationHelper helper;
 
@@ -66,8 +66,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -42,7 +42,7 @@
 import com.sun.codemodel.JType;
 import com.sun.codemodel.JVar;
 
-public class OptionsMenuProcessor implements ElementProcessor {
+public class OptionsMenuProcessor implements DecoratingElementProcessor {
 
 	private final SherlockHelper sherlockHelper;
 
@@ -59,8 +59,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getRelativeEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		boolean isFragment = holder.eBeanAnnotation == EFragment.class;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -35,7 +35,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JFieldRef;
 
-public class ResProcessor implements ElementProcessor {
+public class ResProcessor implements DecoratingElementProcessor {
 
 	private final AndroidRes androidValue;
 
@@ -52,8 +52,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String fieldName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -27,16 +27,15 @@
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JFieldRef;
 
-public class RestServiceProcessor implements ElementProcessor {
+public class RestServiceProcessor implements DecoratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return RestService.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String fieldName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RoboGuiceProcessor.java
Patch:
@@ -45,16 +45,15 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class RoboGuiceProcessor implements ElementProcessor {
+public class RoboGuiceProcessor implements DecoratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return RoboGuice.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getRelativeEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		holder.eBean._implements(holder.classes().INJECTOR_PROVIDER);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -29,16 +29,15 @@
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
 
-public class RootContextProcessor implements ElementProcessor {
+public class RootContextProcessor implements DecoratingElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
 		return RootContext.class;
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) {
-		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		String fieldName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -47,7 +47,7 @@
  * @author Pierre-Yves Ricau
  * @author Mathieu Boniface
  */
-public class TouchProcessor implements ElementProcessor {
+public class TouchProcessor implements DecoratingElementProcessor {
 
 	private IdAnnotationHelper helper;
 
@@ -61,8 +61,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 
 		String methodName = element.getSimpleName().toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TraceProcessor.java
Patch:
@@ -37,7 +37,7 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class TraceProcessor implements ElementProcessor {
+public class TraceProcessor implements DecoratingElementProcessor {
 
 	private final APTCodeModelHelper helper = new APTCodeModelHelper();
 
@@ -47,8 +47,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 		Classes classes = holder.classes();
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -33,7 +33,7 @@
 import com.sun.codemodel.JTryBlock;
 import com.sun.codemodel.JVar;
 
-public class TransactionalProcessor implements ElementProcessor {
+public class TransactionalProcessor implements DecoratingElementProcessor {
 
 	private final APTCodeModelHelper helper = new APTCodeModelHelper();
 
@@ -43,8 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	@Override
-	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
+	public void process(Element element, JCodeModel codeModel, EBeanHolder holder) {
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ExtendingActivity.java
Patch:
@@ -18,6 +18,6 @@
 import com.googlecode.androidannotations.annotations.EActivity;
 
 @EActivity
-public class ExtendingActivity extends AbstractActivity_ {
+public class ExtendingActivity extends AbstractActivity {
 	
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/prefs/SomePrefs.java
Patch:
@@ -22,7 +22,7 @@
 
 @SharedPref(Scope.UNIQUE)
 public interface SomePrefs {
-
+	
 	@DefaultString("John")
 	String name();
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ActivityWithServices.java
Patch:
@@ -76,6 +76,7 @@ public class ActivityWithServices extends Activity {
 	@SystemService
 	WifiManager wifiManager;
 
+	
 	@SystemService
 	InputMethodManager inputMethodManager;
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ViewsInjectedActivity.java
Patch:
@@ -43,7 +43,6 @@ public class ViewsInjectedActivity extends Activity {
 	@AfterViews
 	void incrementCounter() {
 		counter++;
-		startActivityForResult(ActivityWithServices_.intent(this).flags(0).get(), 0);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Accept.java
Patch:
@@ -20,10 +20,8 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.api.rest.MediaType;
-
 @Retention(RetentionPolicy.SOURCE)
 @Target({ ElementType.METHOD, ElementType.TYPE })
 public @interface Accept {
-	MediaType value();
+	String value();
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -197,7 +197,7 @@ protected JVar generateHttpHeadersVar(EBeansHolder activitiesHolder, JBlock body
 			JClass collectionsClass = activitiesHolder.refClass(CanonicalNameConstants.COLLECTIONS);
 			JClass mediaTypeClass = activitiesHolder.refClass(CanonicalNameConstants.MEDIA_TYPE);
 
-			JInvocation mediaTypeListParam = collectionsClass.staticInvoke("singletonList").arg(mediaTypeClass.staticRef(mediaType));
+			JInvocation mediaTypeListParam = collectionsClass.staticInvoke("singletonList").arg(mediaTypeClass.staticInvoke("parseMediaType").arg(mediaType));
 			body.add(JExpr.invoke(httpHeadersVar, "setAccept").arg(mediaTypeListParam));
 		}
 
@@ -210,7 +210,7 @@ private String retrieveAcceptAnnotationValue(ExecutableElement executableElement
 			acceptAnnotation = executableElement.getEnclosingElement().getAnnotation(Accept.class);
 		}
 		if (acceptAnnotation != null) {
-			return acceptAnnotation.value().name();
+			return acceptAnnotation.value();
 		} else {
 			return null;
 		}

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/MyService.java
Patch:
@@ -43,7 +43,7 @@ public interface MyService {
 	EventList getEvents(String location, int year);
 
 	@Get("/events/{year}/{location}")
-	@Accept(MediaType.APPLICATION_JSON)
+	@Accept("application/json")
 	Event[] getEventsArray(String location, int year);
 
 	@Get("/events/{year}/{location}")

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -526,7 +526,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new BackgroundProcessor());
 		modelProcessor.register(new AfterInjectProcessor());
 		modelProcessor.register(new InstanceStateProcessor(processingEnv));
-		modelProcessor.register(new NonConfigurationInstanceProcessor());
+		modelProcessor.register(new NonConfigurationInstanceProcessor(processingEnv));
 		modelProcessor.register(new TextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new BeforeTextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new AfterTextChangeProcessor(processingEnv, rClass));

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Accept.java
Patch:
@@ -20,10 +20,8 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.api.rest.MediaType;
-
 @Retention(RetentionPolicy.SOURCE)
 @Target({ ElementType.METHOD, ElementType.TYPE })
 public @interface Accept {
-	MediaType value();
+	String value();
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -197,7 +197,7 @@ protected JVar generateHttpHeadersVar(EBeansHolder activitiesHolder, JBlock body
 			JClass collectionsClass = activitiesHolder.refClass(CanonicalNameConstants.COLLECTIONS);
 			JClass mediaTypeClass = activitiesHolder.refClass(CanonicalNameConstants.MEDIA_TYPE);
 
-			JInvocation mediaTypeListParam = collectionsClass.staticInvoke("singletonList").arg(mediaTypeClass.staticRef(mediaType));
+			JInvocation mediaTypeListParam = collectionsClass.staticInvoke("singletonList").arg(mediaTypeClass.staticInvoke("parseMediaType").arg(mediaType));
 			body.add(JExpr.invoke(httpHeadersVar, "setAccept").arg(mediaTypeListParam));
 		}
 
@@ -210,7 +210,7 @@ private String retrieveAcceptAnnotationValue(ExecutableElement executableElement
 			acceptAnnotation = executableElement.getEnclosingElement().getAnnotation(Accept.class);
 		}
 		if (acceptAnnotation != null) {
-			return acceptAnnotation.value().name();
+			return acceptAnnotation.value();
 		} else {
 			return null;
 		}

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/MyService.java
Patch:
@@ -43,7 +43,7 @@ public interface MyService {
 	EventList getEvents(String location, int year);
 
 	@Get("/events/{year}/{location}")
-	@Accept(MediaType.APPLICATION_JSON)
+	@Accept("application/json")
 	Event[] getEventsArray(String location, int year);
 
 	@Get("/events/{year}/{location}")

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -89,7 +89,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element);
+		EBeanHolder holder = activitiesHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EApplicationProcessor.java
Patch:
@@ -44,7 +44,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element);
+		EBeanHolder holder = activitiesHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 
@@ -73,6 +73,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		{
 			/*
 			 * Setting to null shouldn't be a problem as long as we don't allow
+			 * 
 			 * @App and @Extra on this component
 			 */
 			holder.initIfActivityBody = null;
@@ -81,5 +82,4 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 	}
 
-
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanProcessor.java
Patch:
@@ -53,7 +53,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = eBeansHolder.create(element);
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeansHolder.java
Patch:
@@ -18,6 +18,7 @@
 import java.io.FileInputStream;
 import java.io.InputStream;
 import java.io.Serializable;
+import java.lang.annotation.Annotation;
 import java.util.HashMap;
 import java.util.Map;
 
@@ -136,8 +137,8 @@ public EBeansHolder(JCodeModel codeModel) {
 		classes = new Classes();
 	}
 
-	public EBeanHolder create(Element activityElement) {
-		EBeanHolder activityHolder = new EBeanHolder(this);
+	public EBeanHolder create(Element activityElement, Class<? extends Annotation> eBeanAnnotation) {
+		EBeanHolder activityHolder = new EBeanHolder(this, eBeanAnnotation);
 		EBeanHolders.put(activityElement, activityHolder);
 		return activityHolder;
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EFragmentProcessor.java
Patch:
@@ -60,7 +60,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = eBeansHolder.create(element);
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -44,7 +44,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element);
+		EBeanHolder holder = activitiesHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 
@@ -73,6 +73,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		{
 			/*
 			 * Setting to null shouldn't be a problem as long as we don't allow
+			 * 
 			 * @App and @Extra on this component
 			 */
 			holder.initIfActivityBody = null;
@@ -81,5 +82,4 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 	}
 
-
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EReceiverProcessor.java
Patch:
@@ -46,7 +46,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element);
+		EBeanHolder holder = activitiesHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EServiceProcessor.java
Patch:
@@ -44,7 +44,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		EBeanHolder holder = activitiesHolder.create(element);
+		EBeanHolder holder = activitiesHolder.create(element, getTarget());
 
 		TypeElement typeElement = (TypeElement) element;
 
@@ -73,6 +73,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		{
 			/*
 			 * Setting to null shouldn't be a problem as long as we don't allow
+			 * 
 			 * @App and @Extra on this component
 			 */
 			holder.initIfActivityBody = null;
@@ -81,5 +82,4 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 	}
 
-
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -77,7 +77,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = eBeansHolder.create(element);
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		Classes classes = holder.classes();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewProcessor.java
Patch:
@@ -68,7 +68,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHolder) throws Exception {
 
-		EBeanHolder holder = eBeansHolder.create(element);
+		EBeanHolder holder = eBeansHolder.create(element, getTarget());
 
 		Classes classes = holder.classes();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OptionsItemValidator.java
Patch:
@@ -56,7 +56,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivityOrEFragment(element, validatedElements, valid);
 
 		validatorHelper.resIdsExist(element, Res.ID, FallbackStrategy.USE_ELEMENT_NAME, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OptionsMenuValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.hasEActivity(element, validatedElements, valid);
+		validatorHelper.hasEActivityOrEFragment(element, validatedElements, valid);
 
 		validatorHelper.resIdsExist(element, Res.MENU, FallbackStrategy.NEED_RES_ID, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -31,7 +31,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface OptionsMenu {
-	int value() default ResId.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
 
-	String resName() default "";
+	String[] resName() default "";
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/menu/OptionsMenuActivity.java
Patch:
@@ -24,7 +24,7 @@
 import com.googlecode.androidannotations.test15.R;
 
 @EActivity
-@OptionsMenu(R.menu.my_menu)
+@OptionsMenu({R.menu.my_menu, R.menu.my_menu2})
 public class OptionsMenuActivity extends Activity {
 
 	boolean menuRefreshSelected;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/GetValidator.java
Patch:
@@ -62,8 +62,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		validatorHelper.doesNotReturnPrimitive(executableElement, valid);
 		
-		validatorHelper.doesNotReturnArray(executableElement, valid);
-
 		restAnnotationHelper.urlVariableNamesExistInParametersAndHasNoOneMoreParameter(executableElement, valid);
 
 		return valid.isValid();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/PostValidator.java
Patch:
@@ -60,8 +60,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		validatorHelper.doesNotReturnPrimitive(executableElement, valid);
 		
-		validatorHelper.doesNotReturnArray(executableElement, valid);
-
 		validatorHelper.returnTypeNotGenericUnlessResponseEntity(executableElement, valid);
 
 		restAnnotationHelper.urlVariableNamesExistInParametersAndHasOnlyOneMoreParameter(executableElement, valid);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/GetValidator.java
Patch:
@@ -62,8 +62,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		validatorHelper.doesNotReturnPrimitive(executableElement, valid);
 		
-		validatorHelper.doesNotReturnArray(executableElement, valid);
-
 		restAnnotationHelper.urlVariableNamesExistInParametersAndHasNoOneMoreParameter(executableElement, valid);
 
 		return valid.isValid();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/PostValidator.java
Patch:
@@ -60,8 +60,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		validatorHelper.doesNotReturnPrimitive(executableElement, valid);
 		
-		validatorHelper.doesNotReturnArray(executableElement, valid);
-
 		validatorHelper.returnTypeNotGenericUnlessResponseEntity(executableElement, valid);
 
 		restAnnotationHelper.urlVariableNamesExistInParametersAndHasOnlyOneMoreParameter(executableElement, valid);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -523,6 +523,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new NoTitleProcessor());
 		modelProcessor.register(new FullscreenProcessor());
 		modelProcessor.register(new RestServiceProcessor());
+		modelProcessor.register(new OrmLiteDaoProcessor());
 		modelProcessor.register(new RootContextProcessor());
 		modelProcessor.register(new BeanProcessor(processingEnv));
 		modelProcessor.register(new AfterViewsProcessor());
@@ -535,7 +536,6 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new TextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new BeforeTextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new AfterTextChangeProcessor(processingEnv, rClass));
-		modelProcessor.register(new OrmLiteDaoProcessor());
 		modelProcessor.register(new HttpsClientProcessor(rClass));
 		return modelProcessor;
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -53,7 +53,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		{
 			// Execute Runnable
-			JClass backgroundExecutorClass = codeModel.ref(BackgroundExecutor.class);
+			JClass backgroundExecutorClass = eBeansHolder.refClass(BackgroundExecutor.class);
 
 			JInvocation executeCall = backgroundExecutorClass.staticInvoke("execute").arg(JExpr._new(anonymousRunnableClass));
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -187,7 +187,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 			JClass keyEventClass = holder.classes().KEY_EVENT;
 			JVar eventParam = onKeyDownMethod.param(keyEventClass, "event");
 
-			JClass versionHelperClass = codeModel.ref(SdkVersionHelper.class);
+			JClass versionHelperClass = holder.refClass(SdkVersionHelper.class);
 
 			JInvocation sdkInt = versionHelperClass.staticInvoke("getSdkInt");
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -79,7 +79,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 			tryBody._return(result);
 		}
 
-		JCatchBlock catchBlock = tryBlock._catch(codeModel.ref(RuntimeException.class));
+		JCatchBlock catchBlock = tryBlock._catch(holder.refClass(RuntimeException.class));
 
 		JVar exceptionParam = catchBlock.param("e");
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -78,6 +78,8 @@
 @Target(ElementType.METHOD)
 public @interface AfterTextChange {
 
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/BeforeTextChange.java
Patch:
@@ -85,6 +85,8 @@
 @Target(ElementType.METHOD)
 public @interface BeforeTextChange {
 
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Click.java
Patch:
@@ -34,6 +34,8 @@
 @Target(ElementType.METHOD)
 public @interface Click {
 
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -44,5 +44,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EActivity {
-	int value() default Id.DEFAULT_VALUE;
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EFragment.java
Patch:
@@ -30,5 +30,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EFragment {
-	int value() default Id.DEFAULT_VALUE;
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EViewGroup.java
Patch:
@@ -49,5 +49,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EViewGroup {
-	int value() default Id.DEFAULT_VALUE;
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentById.java
Patch:
@@ -30,5 +30,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface FragmentById {
-	int value() default Id.DEFAULT_VALUE;
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FromHtml.java
Patch:
@@ -23,5 +23,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface FromHtml {
-	int value() default Id.DEFAULT_VALUE;
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/HttpsClient.java
Patch:
@@ -61,11 +61,11 @@
 public @interface HttpsClient {
 	public static final String DEFAULT_PASSWD = "changeit";
 
-	int trustStore() default Id.DEFAULT_VALUE;
+	int trustStore() default ResId.DEFAULT_VALUE;
 
 	String trustStorePwd() default DEFAULT_PASSWD;
 
-	int keyStore() default Id.DEFAULT_VALUE;
+	int keyStore() default ResId.DEFAULT_VALUE;
 
 	String keyStorePwd() default DEFAULT_PASSWD;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java
Patch:
@@ -40,5 +40,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface ItemClick {
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -44,5 +44,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface ItemLongClick {
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java
Patch:
@@ -41,5 +41,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface ItemSelect {
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/LongClick.java
Patch:
@@ -41,5 +41,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface LongClick {
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsItem.java
Patch:
@@ -34,6 +34,8 @@
 @Target(ElementType.METHOD)
 public @interface OptionsItem {
 
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -31,5 +31,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface OptionsMenu {
-	int value();
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ResId.java
Patch:
@@ -15,11 +15,11 @@
  */
 package com.googlecode.androidannotations.annotations;
 
-public abstract class Id {
+public abstract class ResId {
 
 	public static final int DEFAULT_VALUE = -1;
 
-	private Id() {
+	private ResId() {
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/TextChange.java
Patch:
@@ -81,6 +81,8 @@
 @Target(ElementType.METHOD)
 public @interface TextChange {
 
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Touch.java
Patch:
@@ -38,5 +38,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface Touch {
-	int[] value() default Id.DEFAULT_VALUE;
+	int[] value() default ResId.DEFAULT_VALUE;
+
+	String[] resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ViewById.java
Patch:
@@ -32,5 +32,7 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface ViewById {
-	int value() default Id.DEFAULT_VALUE;
+	int value() default ResId.DEFAULT_VALUE;
+
+	String resName() default "";
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/RestAnnotationHelper.java
Patch:
@@ -95,7 +95,7 @@ public List<String> extractUrlVariableNames(ExecutableElement element) {
 		// String uriTemplate = urlPrefix + urlSuffix;
 
 		List<String> variableNames = new ArrayList<String>();
-		String uriTemplate = extractAnnotationValue(element);
+		String uriTemplate = extractAnnotationValueParameter(element);
 
 		boolean hasValueInAnnotation = uriTemplate != null;
 		if (hasValueInAnnotation) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -328,7 +328,7 @@ public void typeHasAnnotation(Class<? extends Annotation> annotation, TypeMirror
 	}
 
 	public void typeOrTargetValueHasAnnotation(Class<? extends Annotation> annotation, Element element, IsValid valid) {
-		DeclaredType targetAnnotationClassValue = annotationHelper.extractAnnotationClassValue(element);
+		DeclaredType targetAnnotationClassValue = annotationHelper.extractAnnotationClassParameter(element);
 
 		if (targetAnnotationClassValue != null) {
 			typeHasAnnotation(annotation, targetAnnotationClassValue, element, valid);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AfterTextChangeProcessor.java
Patch:
@@ -28,6 +28,7 @@
 import com.googlecode.androidannotations.helper.APTCodeModelHelper;
 import com.googlecode.androidannotations.helper.TextWatcherHelper;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpression;
@@ -85,9 +86,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		}
 
-		AfterTextChange annotation = element.getAnnotation(AfterTextChange.class);
-
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "AfterTextChanged", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		for (JFieldRef idRef : idsRefs) {
 			TextWatcherHolder textWatcherHolder = helper.getOrCreateListener(codeModel, holder, idRef, viewParameterType);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeanProcessor.java
Patch:
@@ -52,7 +52,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
 		
 		
-		DeclaredType targetAnnotationClassValue = annotationHelper.extractAnnotationClassValue(element);
+		DeclaredType targetAnnotationClassValue = annotationHelper.extractAnnotationClassParameter(element);
 		
 		TypeMirror elementType;
 		if (targetAnnotationClassValue != null) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeforeTextChangeProcessor.java
Patch:
@@ -29,6 +29,7 @@
 import com.googlecode.androidannotations.helper.APTCodeModelHelper;
 import com.googlecode.androidannotations.helper.TextWatcherHelper;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpression;
@@ -97,8 +98,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		}
 
-		BeforeTextChange annotation = element.getAnnotation(BeforeTextChange.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "BeforeTextChanged", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		for (JFieldRef idRef : idsRefs) {
 			TextWatcherHolder textWatcherHolder = helper.getOrCreateListener(codeModel, holder, idRef, viewParameterType);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/HttpsClientProcessor.java
Patch:
@@ -30,7 +30,7 @@
 import javax.lang.model.element.Element;
 
 import com.googlecode.androidannotations.annotations.HttpsClient;
-import com.googlecode.androidannotations.annotations.Id;
+import com.googlecode.androidannotations.annotations.ResId;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -73,8 +73,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		boolean allowAllHostnames = annotation.allowAllHostnames();
 
-		boolean useCustomTrustStore = Id.DEFAULT_VALUE != trustStoreRawId ? true : false;
-		boolean useCustomKeyStore = Id.DEFAULT_VALUE != keyStoreRawId ? true : false;
+		boolean useCustomTrustStore = ResId.DEFAULT_VALUE != trustStoreRawId ? true : false;
+		boolean useCustomKeyStore = ResId.DEFAULT_VALUE != keyStoreRawId ? true : false;
 
 		String fieldName = element.getSimpleName().toString();
 		JBlock methodBody = holder.init.body();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -29,6 +29,7 @@
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -70,8 +71,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		boolean hasItemParameter = parameters.size() == 1;
 
-		ItemClick annotation = element.getAnnotation(ItemClick.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "ItemClicked", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		JDefinedClass onItemClickListenerAnonymousClass = codeModel.anonymousClass(classes.ON_ITEM_CLICK_LISTENER);
 		JMethod onItemClickMethod = onItemClickListenerAnonymousClass.method(JMod.PUBLIC, codeModel.VOID, "onItemClick");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -34,6 +34,7 @@
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -77,8 +78,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		boolean hasItemParameter = parameters.size() == 1;
 
-		ItemLongClick annotation = element.getAnnotation(ItemLongClick.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "ItemLongClicked", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		JDefinedClass onItemLongClickListenerClass = codeModel.anonymousClass(classes.ON_ITEM_LONG_CLICK_LISTENER);
 		JMethod onItemLongClickMethod = onItemLongClickListenerClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onItemLongClick");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -35,6 +35,7 @@
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -73,8 +74,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		ExecutableElement executableElement = (ExecutableElement) element;
 		List<? extends VariableElement> parameters = executableElement.getParameters();
 
-		ItemSelect annotation = element.getAnnotation(ItemSelect.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "ItemSelected", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		JDefinedClass onItemSelectedListenerClass = codeModel.anonymousClass(classes.ON_ITEM_SELECTED_LISTENER);
 		JMethod onItemSelectedMethod = onItemSelectedListenerClass.method(JMod.PUBLIC, codeModel.VOID, "onItemSelected");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -29,6 +29,7 @@
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
@@ -72,8 +73,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		boolean hasItemParameter = parameters.size() == 1;
 
-		LongClick annotation = element.getAnnotation(LongClick.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "LongClicked", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		JDefinedClass listenerAnonymousClass = codeModel.anonymousClass(classes.ON_LONG_CLICK_LISTENER);
 		JMethod listenerMethod = listenerAnonymousClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onLongClick");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -35,6 +35,7 @@
 import com.googlecode.androidannotations.helper.SherlockHelper;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCase;
 import com.sun.codemodel.JClass;
@@ -85,8 +86,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		boolean hasItemParameter = parameters.size() == 1;
 
-		OptionsItem annotation = element.getAnnotation(OptionsItem.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "Selected", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		if (holder.onOptionsItemSelectedSwitch == null) {
 			JMethod method = holder.eBean.method(JMod.PUBLIC, codeModel.BOOLEAN, "onOptionsItemSelected");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TextChangeProcessor.java
Patch:
@@ -29,6 +29,7 @@
 import com.googlecode.androidannotations.helper.APTCodeModelHelper;
 import com.googlecode.androidannotations.helper.TextWatcherHelper;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JExpression;
@@ -97,9 +98,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 			}
 		}
 
-		TextChange annotation = element.getAnnotation(TextChange.class);
-
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "TextChanged", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		for (JFieldRef idRef : idsRefs) {
 			TextWatcherHolder textWatcherHolder = helper.getOrCreateListener(codeModel, holder, idRef, viewParameterType);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -32,6 +32,7 @@
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.processing.EBeansHolder.Classes;
 import com.googlecode.androidannotations.rclass.IRClass;
+import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
@@ -73,8 +74,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		boolean hasItemParameter = parameters.size() == 2;
 
-		Touch annotation = element.getAnnotation(Touch.class);
-		List<JFieldRef> idsRefs = helper.extractFieldRefsFromAnnotationValues(element, annotation.value(), "Touched", holder);
+		List<JFieldRef> idsRefs = helper.extractAnnotationFieldRefs(holder, element, Res.ID, true);
 
 		JDefinedClass listenerClass = codeModel.anonymousClass(classes.ON_TOUCH_LISTENER);
 		JMethod listenerMethod = listenerClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onTouch");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/RInnerClass.java
Patch:
@@ -108,7 +108,7 @@ public JFieldRef getIdStaticRef(String name, EBeanHolder holder) {
 		return extractIdStaticRef(holder, layoutFieldQualifiedName);
 	}
 
-	private JFieldRef extractIdStaticRef(EBeanHolder holder, String layoutFieldQualifiedName) {
+	public static JFieldRef extractIdStaticRef(EBeanHolder holder, String layoutFieldQualifiedName) {
 		if (layoutFieldQualifiedName != null) {
 			int fieldSuffix = layoutFieldQualifiedName.lastIndexOf('.');
 			String fieldName = layoutFieldQualifiedName.substring(fieldSuffix + 1);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterTextChangeValidator.java
Patch:
@@ -26,6 +26,7 @@
 import com.googlecode.androidannotations.annotations.AfterTextChange;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -53,11 +54,11 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
-		validatorHelper.idsExists(element, Res.ID, valid);
+		validatorHelper.resIdsExist(element, Res.ID, FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.doesntThrowException((ExecutableElement) element, valid);
+		validatorHelper.doesntThrowException(element, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 		validatorHelper.returnTypeIsVoid(executableElement, valid);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ClickValidator.java
Patch:
@@ -24,6 +24,7 @@
 import com.googlecode.androidannotations.annotations.Click;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -49,11 +50,11 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
-		validatorHelper.idsExists(element, Res.ID, valid);
+		validatorHelper.resIdsExist(element, Res.ID, FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.doesntThrowException((ExecutableElement) element, valid);
+		validatorHelper.doesntThrowException(element, valid);
 
 		validatorHelper.uniqueId(element, validatedElements, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EActivityValidator.java
Patch:
@@ -24,6 +24,7 @@
 import com.googlecode.androidannotations.helper.AndroidManifest;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -51,7 +52,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.extendsActivity(element, valid);
 
-		validatorHelper.idExists(element, Res.LAYOUT, false, valid);
+		validatorHelper.resIdsExist(element, Res.LAYOUT, FallbackStrategy.ALLOW_NO_RES_ID, valid);
 
 		validatorHelper.isNotFinal(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EFragmentValidator.java
Patch:
@@ -23,6 +23,7 @@
 import com.googlecode.androidannotations.annotations.EFragment;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -50,7 +51,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotAbstract(element, valid);
 
-		validatorHelper.idExists(element, Res.LAYOUT, false, valid);
+		validatorHelper.resIdsExist(element, Res.LAYOUT, FallbackStrategy.ALLOW_NO_RES_ID, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EViewGroupValidator.java
Patch:
@@ -19,11 +19,11 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
-import javax.lang.model.element.TypeElement;
 
 import com.googlecode.androidannotations.annotations.EViewGroup;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -48,9 +48,9 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.extendsViewGroup((TypeElement) element, valid);
+		validatorHelper.extendsViewGroup(element, valid);
 
-		validatorHelper.idExists(element, Res.LAYOUT, false, valid);
+		validatorHelper.resIdsExist(element, Res.LAYOUT, FallbackStrategy.ALLOW_NO_RES_ID, valid);
 
 		validatorHelper.isNotFinal(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/FragmentByIdValidator.java
Patch:
@@ -23,6 +23,7 @@
 import com.googlecode.androidannotations.annotations.FragmentById;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -51,7 +52,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.extendsFragment(element, valid);
 
-		validatorHelper.idExists(element, Res.ID, valid);
+		validatorHelper.resIdsExist(element, Res.ID, FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/FromHtmlValidator.java
Patch:
@@ -23,6 +23,7 @@
 import com.googlecode.androidannotations.annotations.FromHtml;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -50,7 +51,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.extendsTextView(element, valid);
 
-		validatorHelper.idExists(element, Res.STRING, valid);
+		validatorHelper.resIdsExist(element, Res.STRING, FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/HttpsClientValidator.java
Patch:
@@ -50,8 +50,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
-		validatorHelper.idExists(element, Res.RAW, false, true, valid, "keyStore");
-		validatorHelper.idExists(element, Res.RAW, false, true, valid, "trustStore");
+		validatorHelper.annotationParameterIsOptionalValidResId(element, Res.RAW, "keyStore", valid);
+		validatorHelper.annotationParameterIsOptionalValidResId(element, Res.RAW, "trustStore", valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ItemClickValidator.java
Patch:
@@ -24,6 +24,7 @@
 import com.googlecode.androidannotations.annotations.ItemClick;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -54,11 +55,11 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
-		validatorHelper.idsExists(element, Res.ID, valid);
+		validatorHelper.resIdsExist(element, Res.ID, FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.doesntThrowException((ExecutableElement) element, valid);
+		validatorHelper.doesntThrowException(element, valid);
 
 		validatorHelper.uniqueId(element, validatedElements, valid);
 		ExecutableElement executableElement = (ExecutableElement) element;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OptionsMenuValidator.java
Patch:
@@ -23,6 +23,7 @@
 import com.googlecode.androidannotations.annotations.OptionsMenu;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -48,7 +49,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.hasEActivity(element, validatedElements, valid);
 
-		validatorHelper.idExists(element, Res.MENU, false, false, valid);
+		validatorHelper.resIdsExist(element, Res.MENU, FallbackStrategy.NEED_RES_ID, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ResValidator.java
Patch:
@@ -23,6 +23,7 @@
 
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AndroidRes;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
@@ -54,7 +55,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.allowedType(element, valid, fieldTypeMirror, androidValue.getAllowedTypes());
 
-		validatorHelper.idExists(element, androidValue.getRInnerClass(), valid);
+		validatorHelper.resIdsExist(element, androidValue.getRInnerClass(), FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -24,6 +24,7 @@
 import com.googlecode.androidannotations.annotations.ViewById;
 import com.googlecode.androidannotations.helper.IdAnnotationHelper;
 import com.googlecode.androidannotations.helper.IdValidatorHelper;
+import com.googlecode.androidannotations.helper.IdValidatorHelper.FallbackStrategy;
 import com.googlecode.androidannotations.model.AnnotationElements;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -56,7 +57,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.extendsView(element, valid);
 
-		validatorHelper.idExists(element, Res.ID, valid);
+		validatorHelper.resIdsExist(element, Res.ID, FallbackStrategy.USE_ELEMENT_NAME, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/EventsHandledAbstractActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 public abstract class EventsHandledAbstractActivity extends Activity {
 
-	View viewArgument;
+	protected View viewArgument;
 
 	protected boolean avoidStackOverflowEventHandled;
 	protected boolean conventionButtonEventHandled;
@@ -29,5 +29,6 @@ public abstract class EventsHandledAbstractActivity extends Activity {
 	protected boolean overridenConventionButtonEventHandled;
 	protected boolean unboundButtonEventHandled;
 	protected boolean multipleButtonsEventHandled;
+	protected boolean libResButtonEventHandled;
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -422,7 +422,6 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new TransactionalValidator(processingEnv));
 		modelValidator.register(new ExtraValidator(processingEnv));
 		modelValidator.register(new SystemServiceValidator(processingEnv, androidSystemServices));
-		modelValidator.register(new AfterViewsValidator(processingEnv));
 		modelValidator.register(new SharedPrefValidator(processingEnv));
 		modelValidator.register(new PrefValidator(processingEnv));
 		modelValidator.register(new RestValidator(processingEnv));
@@ -442,6 +441,7 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new RootContextValidator(processingEnv));
 		modelValidator.register(new BeanValidator(processingEnv));
 		modelValidator.register(new AfterInjectValidator(processingEnv));
+		modelValidator.register(new AfterViewsValidator(processingEnv));
 		if (traceActivated()) {
 			modelValidator.register(new TraceValidator(processingEnv));
 		}
@@ -504,7 +504,6 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new TransactionalProcessor());
 		modelProcessor.register(new ExtraProcessor(processingEnv));
 		modelProcessor.register(new SystemServiceProcessor(androidSystemServices));
-		modelProcessor.register(new AfterViewsProcessor());
 		RestImplementationsHolder restImplementationHolder = new RestImplementationsHolder();
 		modelProcessor.register(new RestProcessor(restImplementationHolder));
 		modelProcessor.register(new GetProcessor(processingEnv, restImplementationHolder));
@@ -521,6 +520,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new RestServiceProcessor());
 		modelProcessor.register(new RootContextProcessor());
 		modelProcessor.register(new BeanProcessor(processingEnv));
+		modelProcessor.register(new AfterViewsProcessor());
 		modelProcessor.register(new TraceProcessor());
 		modelProcessor.register(new UiThreadProcessor());
 		modelProcessor.register(new BackgroundProcessor());

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyActivity.java
Patch:
@@ -27,7 +27,6 @@
 import com.googlecode.androidannotations.annotations.Touch;
 import com.googlecode.androidannotations.annotations.Transactional;
 import com.googlecode.androidannotations.annotations.UiThread;
-import com.googlecode.androidannotations.annotations.UiThreadDelayed;
 import com.googlecode.androidannotations.annotations.ViewById;
 import com.googlecode.androidannotations.annotations.res.BooleanRes;
 import com.googlecode.androidannotations.annotations.res.ColorRes;
@@ -102,7 +101,7 @@ void updateUi(String message, int color) {
         textView.setTextColor(color);
     }
 
-    @UiThreadDelayed(2000)
+    @UiThread(delay=2000)
     void showNotificationsDelayed() {
         Notification notification = new Notification(R.drawable.icon, "Hello !", 0);
         PendingIntent contentIntent = PendingIntent.getActivity(this, 0, new Intent(), 0);

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyActivity.java
Patch:
@@ -27,7 +27,6 @@
 import com.googlecode.androidannotations.annotations.Touch;
 import com.googlecode.androidannotations.annotations.Transactional;
 import com.googlecode.androidannotations.annotations.UiThread;
-import com.googlecode.androidannotations.annotations.UiThreadDelayed;
 import com.googlecode.androidannotations.annotations.ViewById;
 import com.googlecode.androidannotations.annotations.res.BooleanRes;
 import com.googlecode.androidannotations.annotations.res.ColorRes;
@@ -102,7 +101,7 @@ void updateUi(String message, int color) {
         textView.setTextColor(color);
     }
 
-    @UiThreadDelayed(2000)
+    @UiThread(delay=2000)
     void showNotificationsDelayed() {
         Notification notification = new Notification(R.drawable.icon, "Hello !", 0);
         PendingIntent contentIntent = PendingIntent.getActivity(this, 0, new Intent(), 0);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/TargetAnnotationHelper.java
Patch:
@@ -35,8 +35,9 @@ public TargetAnnotationHelper(ProcessingEnvironment processingEnv, Class<? exten
 		this.target = target;
 	}
 
+	@SuppressWarnings("unchecked")
 	public <T> T extractAnnotationValue(Element element) {
-		return extractAnnotationValue(element, "value");
+		return (T) extractAnnotationValue(element, "value");
 	}
 
 	@SuppressWarnings("unchecked")

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -538,7 +538,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new TextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new BeforeTextChangeProcessor(processingEnv, rClass));
 		modelProcessor.register(new AfterTextChangeProcessor(processingEnv, rClass));
-		modelProcessor.register(new HttpsClientProcessor());
+		modelProcessor.register(new HttpsClientProcessor(rClass));
 		return modelProcessor;
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -34,7 +34,6 @@
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
-import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JExpression;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -33,6 +33,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
 import com.sun.codemodel.JExpr;
+import com.sun.codemodel.JExpression;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;
 import com.sun.codemodel.JMethod;
@@ -81,7 +82,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JBlock listenerMethodBody = listenerMethod.body();
 
-		JInvocation call = JExpr.invoke(methodName);
+		JExpression activityRef = holder.eBean.staticRef("this");
+		JInvocation call = JExpr.invoke(activityRef, methodName);
 
 		if (returnMethodResult) {
 			listenerMethodBody._return(call);

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/EventsHandledAbstractActivity.java
Patch:
@@ -22,6 +22,7 @@ public abstract class EventsHandledAbstractActivity extends Activity {
 
 	View viewArgument;
 
+	protected boolean avoidStackOverflowEventHandled;
 	protected boolean conventionButtonEventHandled;
 	protected boolean snakeCaseButtonEventHandled;
 	protected boolean extendedConventionButtonEventHandled;

File: AndroidAnnotations/androidannotations/src/main/eclipse/com/googlecode/androidannotations/Activator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -61,4 +61,4 @@ public void stop(BundleContext context) throws Exception {
         public static Activator getDefault() {
                 return plugin;
         }
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -567,4 +567,4 @@ private String stackTraceToString(Throwable e) {
 		e.printStackTrace(pw);
 		return writer.toString();
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotationprocessor/AnnotatedAbstractProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotationprocessor/SupportedAnnotationClasses.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterInject.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -36,4 +36,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface AfterInject {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterTextChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -80,4 +80,4 @@
 
 	int[] value() default Id.DEFAULT_VALUE;
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterViews.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -38,4 +38,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface AfterViews {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/App.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface App {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Background.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -28,4 +28,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface Background {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Bean.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -28,4 +28,4 @@
 @Target(ElementType.FIELD)
 public @interface Bean {
 	Class<?> value() default Void.class;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/BeforeTextChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -87,4 +87,4 @@
 
 	int[] value() default Id.DEFAULT_VALUE;
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Click.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -36,4 +36,4 @@
 
 	int[] value() default Id.DEFAULT_VALUE;
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -45,4 +45,4 @@
 @Target(ElementType.TYPE)
 public @interface EActivity {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EApplication.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface EApplication {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EBean.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -38,4 +38,4 @@
 	
 	Scope scope() default Scope.Default;
 	
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EFragment.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,4 +31,4 @@
 @Target(ElementType.TYPE)
 public @interface EFragment {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EProvider.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -26,4 +26,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EProvider {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EReceiver.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -26,4 +26,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EReceiver {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EService.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -26,4 +26,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EService {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EView.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -49,4 +49,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface EView {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EViewGroup.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -50,4 +50,4 @@
 @Target(ElementType.TYPE)
 public @interface EViewGroup {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Extra.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -35,4 +35,4 @@
 public @interface Extra {
 
 	String value() default "";
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentById.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,4 +31,4 @@
 @Target(ElementType.FIELD)
 public @interface FragmentById {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FragmentByTag.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,4 +31,4 @@
 @Target(ElementType.FIELD)
 public @interface FragmentByTag {
 	String value() default "";
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/FromHtml.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Fullscreen.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -29,4 +29,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface Fullscreen {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Id.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/InstanceState.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -41,4 +41,4 @@
 @Target(ElementType.METHOD)
 public @interface ItemClick {
 	int[] value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -45,4 +45,4 @@
 @Target(ElementType.METHOD)
 public @interface ItemLongClick {
 	int[] value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -42,4 +42,4 @@
 @Target(ElementType.METHOD)
 public @interface ItemSelect {
 	int[] value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/LongClick.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -42,4 +42,4 @@
 @Target(ElementType.METHOD)
 public @interface LongClick {
 	int[] value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/NoTitle.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -29,4 +29,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface NoTitle {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/NonConfigurationInstance.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsItem.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -36,4 +36,4 @@
 
 	int[] value() default Id.DEFAULT_VALUE;
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/OptionsMenu.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -32,4 +32,4 @@
 @Target(ElementType.TYPE)
 public @interface OptionsMenu {
 	int value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RoboGuice.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,4 +31,4 @@
 	 * injected listener field to the subclass.
 	 */
 	Class<?>[] value() default {};
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RootContext.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -34,4 +34,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface RootContext {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/SystemService.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface SystemService {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/TextChange.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -83,4 +83,4 @@
 
 	int[] value() default Id.DEFAULT_VALUE;
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Touch.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -39,4 +39,4 @@
 @Target(ElementType.METHOD)
 public @interface Touch {
 	int[] value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Trace.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Transactional.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -29,4 +29,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface Transactional {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/UiThread.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,4 +31,4 @@
 @Target(ElementType.METHOD)
 public @interface UiThread {
 	long delay() default 0;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ViewById.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -33,4 +33,4 @@
 @Target(ElementType.FIELD)
 public @interface ViewById {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/AnimationRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface AnimationRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/BooleanRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface BooleanRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -36,4 +36,4 @@
 @Target(ElementType.FIELD)
 public @interface ColorRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorStateListRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface ColorStateListRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelOffsetRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface DimensionPixelOffsetRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelSizeRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface DimensionPixelSizeRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface DimensionRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/DrawableRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface DrawableRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/HtmlRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -26,4 +26,4 @@
 @Target(ElementType.FIELD)
 public @interface HtmlRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface IntArrayRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntegerRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface IntegerRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface LayoutRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/MovieRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface MovieRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -37,4 +37,4 @@
 public @interface StringArrayRes {
 
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -41,4 +41,4 @@
 public @interface StringRes {
 
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface TextArrayRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -30,4 +30,4 @@
 @Target(ElementType.FIELD)
 public @interface TextRes {
 	int value() default Id.DEFAULT_VALUE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Accept.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -26,4 +26,4 @@
 @Target({ ElementType.METHOD, ElementType.TYPE })
 public @interface Accept {
 	MediaType value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Delete.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.METHOD)
 public @interface Delete {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Get.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.METHOD)
 public @interface Get {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Head.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.METHOD)
 public @interface Head {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Options.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.METHOD)
 public @interface Options {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Post.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.METHOD)
 public @interface Post {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Put.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.METHOD)
 public @interface Put {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/Rest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -24,4 +24,4 @@
 @Target(ElementType.TYPE)
 public @interface Rest {
 	String value() default "";
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/rest/RestService.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -31,4 +31,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface RestService {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultBoolean.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Target(ElementType.METHOD)
 public @interface DefaultBoolean {
 	boolean value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultFloat.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Target(ElementType.METHOD)
 public @interface DefaultFloat {
 	float value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultInt.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Target(ElementType.METHOD)
 public @interface DefaultInt {
 	int value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultLong.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Target(ElementType.METHOD)
 public @interface DefaultLong {
 	long value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/DefaultString.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -27,4 +27,4 @@
 @Target(ElementType.METHOD)
 public @interface DefaultString {
 	String value();
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/Pref.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -32,4 +32,4 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface Pref {
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/sharedpreferences/SharedPref.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -37,4 +37,4 @@ public enum Scope {
 	Scope value() default Scope.ACTIVITY;
 
 	int mode() default Context.MODE_PRIVATE;
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/BackgroundExecutor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/Scope.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/SdkVersionHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/rest/MediaType.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -20,4 +20,4 @@ public enum MediaType {
 	APPLICATION_JSON, APPLICATION_OCTET_STREAM, APPLICATION_XHTML_XML, IMAGE_GIF, //
 	IMAGE_JPEG, IMAGE_PNG, APPLICATION_XML, APPLICATION_WILDCARD_XML, MULTIPART_FORM_DATA, //
 	TEXT_HTML, TEXT_PLAIN, TEXT_XML
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/AbstractPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/AbstractPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/BooleanPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/BooleanPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/EditorHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -64,4 +64,4 @@ private T cast() {
 		return (T) this;
 	}
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/FloatPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/FloatPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/IntPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/IntPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/LongPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/LongPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/SharedPreferencesCompat.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/SharedPreferencesHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -52,4 +52,4 @@ protected FloatPrefField floatField(String key, float defaultValue) {
 	protected LongPrefField longField(String key, long defaultValue) {
 		return new LongPrefField(sharedPreferences, key, defaultValue);
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/StringPrefEditorField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/StringPrefField.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/generation/CodeModelGenerator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/generation/ResourceCodeWriter.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -42,4 +42,4 @@ public OutputStream openBinary(JPackage pkg, String fileName) throws IOException
 	@Override
 	public void close() throws IOException {
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/generation/SourceCodewriter.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -79,4 +79,4 @@ private String toQualifiedClassName(JPackage pkg, String fileName) {
 	@Override
 	public void close() throws IOException {
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/APTCodeModelHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/AndroidManifest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/AndroidManifestFinder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/AnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -199,4 +199,4 @@ public Types getTypeUtils() {
 		return processingEnv.getTypeUtils();
 	}
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/CanonicalNameConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/CaseHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/GreenDroidConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/HasTarget.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdAnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ModelConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/RestAnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/RoboGuiceConstants.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/SherlockHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/TargetAnnotationHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/TimeStats.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidRes.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AnnotationElements.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -29,4 +29,4 @@ public interface AnnotationElements {
 
 	TypeElement annotationElementfromAnnotationClass(Class<? extends Annotation> annotationClass);
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AnnotationElementsHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/EmptyAnnotationElements.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/ModelExtractor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AfterInjectProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AfterTextChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AfterViewsProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AppProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeanProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeforeTextChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EApplicationProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeansHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EFragmentProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EProviderProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EReceiverProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EServiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ElementProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByIdProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FragmentByTagProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -71,4 +71,4 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 				_then() //
 				.invoke(ref(fieldName), "setText").arg(classes.HTML.staticInvoke("fromHtml").arg(holder.contextRef.invoke("getString").arg(idRef)));
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FullscreenProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/InstanceStateProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -240,4 +240,4 @@ private boolean isTypeParcelable(TypeElement elementType) {
 		return elementType != null && annotationHelper.isSubtype(elementType, parcelableType);
 	}
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ModelProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NoTitleProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -127,4 +127,4 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 	}
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/PrefProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RoboGuiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SharedPrefProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TextChangeProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TraceProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/UiThreadProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ViewByIdProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/DeleteProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/GetProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/HeadProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/MethodProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/MethodProcessorHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/OptionsProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PostProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -115,4 +115,4 @@ protected JVar addHttpHeadersVar(JBlock body, ExecutableElement executableElemen
 		return generateHttpHeadersVar(body, executableElement);
 	}
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PutProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/RestImplementationHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/RestImplementationsHolder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/RestProcessor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/AndroidRClassFinder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/CoumpoundInnerClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -73,4 +73,4 @@ public JFieldRef getIdStaticRef(String name, EBeanHolder holder) {
 		}
 		return idStaticRef;
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/CoumpoundRClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/IRClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -33,4 +33,4 @@ public IRInnerClass get(Res res) {
 		}
 	};
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/IRInnerClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -34,4 +34,4 @@ public interface IRInnerClass {
 
 	final IRInnerClass EMPTY_R_INNER_CLASS = new RInnerClass(null);
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/ManifestPackageExtractor.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/ProjectRClassFinder.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/RClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/RInnerClass.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterInjectValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterTextChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterViewsValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AppValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/BeanValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/BeforeTextChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ClickValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EActivityValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EApplicationValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EBeanValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EFragmentValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EProviderValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EReceiverValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EServiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EViewGroupValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EViewValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ElementValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/FragmentByIdValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/FragmentByTagValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/FromHtmlValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/FullscreenValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/InstanceStateValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/IsValid.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ItemClickValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ItemLongClickValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ItemSelectedValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/LongClickValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ModelValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/NoTitleValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/NonConfigurationInstanceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OptionsItemValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OptionsMenuValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/PrefValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ResValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RestServiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RoboGuiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RootContextValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/SharedPrefValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/SystemServiceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TextChangeValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TouchValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TraceValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/AcceptValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/DeleteValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/GetValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/HeadValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/OptionsValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/PostValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/PutValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/androidannotations/src/test/java/com/googlecode/androidannotations/rclass/ManifestPackageExtractorTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/AbstractActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/AndroidAnnotationsTestRunner.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -25,4 +25,4 @@ public class AndroidAnnotationsTestRunner extends RobolectricTestRunner {
     public AndroidAnnotationsTestRunner(Class<?> testClass) throws InitializationError {
         super(testClass, new File("../functional-test-1-5"));
     }
-}
\ No newline at end of file
+}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ApplicationInjectedActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/BackpressedActivityTestSkipped.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ClicksHandledActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/EmptyActivityWithLayoutTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/EmptyActivityWithoutLayoutTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/FromHtmlActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/InjectExtraTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ItemClicksHandledActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/LongClicksHandledActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/MyAssertions.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/RobolectricParameterized.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ServiceInjectionTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ThreadActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/TouchesHandledActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/TracedActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/TransactionalActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ViewAssert.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ViewsInjectedActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/afterinject/AfterInjectActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/afterinject/AfterInjectBeanTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/application/GeneratedApplicationTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ebean/BeanInjectedActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/eview/CustomButtonTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/eviewgroup/CustomFrameLayoutTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/greendroid/MyGreenDroidActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/instancestate/SaveInstanceStateActivityParameterizedTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/instancestate/SaveInstanceStateActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/menu/OptionsMenuActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/prefs/PrefsActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/res/ResActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/roboguice/FakeDateProvider.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -39,4 +39,4 @@ public void setDate(String dateString) {
 			throw new RuntimeException("bad date!!");
 		}
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/roboguice/InjectedActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -72,4 +72,4 @@ public void shouldBeAbleToInjectAContext() throws Exception {
 		assertNotNull(context);
 	}
 
-}
\ No newline at end of file
+}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/roboguice/InjectedTestRunner.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -49,4 +49,4 @@ public void prepareTest(Object test) {
 
 		injector.injectMembers(test);
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/roboguice/RobolectricSampleTestModule.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -39,4 +39,4 @@ public RobolectricLoggerConfig() {
 			scope = "ROBO";
 		}
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/sherlock/MySherlockActivityTest.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/xtremelabs/robolectric/shadows/CustomShadowBundle.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -625,4 +625,4 @@ public boolean equals(Object obj) {
 
 	
 	
-}
\ No newline at end of file
+}

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/xtremelabs/robolectric/shadows/ShadowButton.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/xtremelabs/robolectric/shadows/ShadowHtml.java
Patch:
@@ -1,5 +1,5 @@
 /**
- * Copyright (C) 2010-2011 eBusiness Information, Excilys Group
+ * Copyright (C) 2010-2012 eBusiness Information, Excilys Group
  *
  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
  * use this file except in compliance with the License. You may obtain a copy of
@@ -94,4 +94,4 @@ public int hashCode() {
 			return source != null ? source.hashCode() : 0;
 		}
 	}
-}
\ No newline at end of file
+}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EFragmentProcessor.java
Patch:
@@ -121,6 +121,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		{
 			// onCreateView()
 			JMethod onCreateView = holder.eBean.method(PUBLIC, classes.VIEW, "onCreateView");
+			onCreateView.annotate(Override.class);
 			JVar inflater = onCreateView.param(classes.LAYOUT_INFLATER, "inflater");
 			JVar container = onCreateView.param(classes.VIEW_GROUP, "container");
 			JVar savedInstanceState = onCreateView.param(classes.BUNDLE, "savedInstanceState");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -75,6 +75,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JDefinedClass onItemClickListenerAnonymousClass = codeModel.anonymousClass(classes.ON_ITEM_CLICK_LISTENER);
 		JMethod onItemClickMethod = onItemClickListenerAnonymousClass.method(JMod.PUBLIC, codeModel.VOID, "onItemClick");
+		onItemClickMethod.annotate(Override.class);
 
 		JClass narrowAdapterViewClass = classes.ADAPTER_VIEW.narrow(codeModel.wildcard());
 		JVar onItemClickParentParam = onItemClickMethod.param(narrowAdapterViewClass, "parent");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -82,6 +82,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JDefinedClass onItemLongClickListenerClass = codeModel.anonymousClass(classes.ON_ITEM_LONG_CLICK_LISTENER);
 		JMethod onItemLongClickMethod = onItemLongClickListenerClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onItemLongClick");
+		onItemLongClickMethod.annotate(Override.class);
 
 		JClass narrowAdapterViewClass = classes.ADAPTER_VIEW.narrow(codeModel.wildcard());
 		JVar onItemClickParentParam = onItemLongClickMethod.param(narrowAdapterViewClass, "parent");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -78,6 +78,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JDefinedClass onItemSelectedListenerClass = codeModel.anonymousClass(classes.ON_ITEM_SELECTED_LISTENER);
 		JMethod onItemSelectedMethod = onItemSelectedListenerClass.method(JMod.PUBLIC, codeModel.VOID, "onItemSelected");
+		onItemSelectedMethod.annotate(Override.class);
 
 		JClass narrowAdapterViewClass = classes.ADAPTER_VIEW.narrow(codeModel.wildcard());
 		JVar onItemClickParentParam = onItemSelectedMethod.param(narrowAdapterViewClass, "parent");
@@ -109,6 +110,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		}
 
 		JMethod onNothingSelectedMethod = onItemSelectedListenerClass.method(JMod.PUBLIC, codeModel.VOID, "onNothingSelected");
+		onNothingSelectedMethod.annotate(Override.class);
 
 		onNothingSelectedMethod.param(narrowAdapterViewClass, "parent");
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -76,7 +76,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JDefinedClass listenerAnonymousClass = codeModel.anonymousClass(classes.ON_LONG_CLICK_LISTENER);
 		JMethod listenerMethod = listenerAnonymousClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onLongClick");
-
+		listenerMethod.annotate(Override.class);
 		JVar viewParam = listenerMethod.param(classes.VIEW, "view");
 
 		JBlock listenerMethodBody = listenerMethod.body();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -78,6 +78,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JDefinedClass listenerClass = codeModel.anonymousClass(classes.ON_TOUCH_LISTENER);
 		JMethod listenerMethod = listenerClass.method(JMod.PUBLIC, codeModel.BOOLEAN, "onTouch");
+		listenerMethod.annotate(Override.class);
 
 		JVar viewParam = listenerMethod.param(classes.VIEW, "view");
 		JVar eventParam = listenerMethod.param(classes.MOTION_EVENT, "event");

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/EventsHandledAbstractActivity.java
Patch:
@@ -22,6 +22,7 @@ public abstract class EventsHandledAbstractActivity extends Activity {
 
 	View viewArgument;
 
+	protected boolean avoidStackOverflowEventHandled;
 	protected boolean conventionButtonEventHandled;
 	protected boolean snakeCaseButtonEventHandled;
 	protected boolean extendedConventionButtonEventHandled;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -33,6 +33,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
 import com.sun.codemodel.JExpr;
+import com.sun.codemodel.JExpression;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;
 import com.sun.codemodel.JMethod;
@@ -81,7 +82,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JBlock listenerMethodBody = listenerMethod.body();
 
-		JInvocation call = JExpr.invoke(methodName);
+		JExpression activityRef = holder.eBean.staticRef("this");
+		JInvocation call = JExpr.invoke(activityRef, methodName);
 
 		if (returnMethodResult) {
 			listenerMethodBody._return(call);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -31,6 +31,7 @@
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JDefinedClass;
 import com.sun.codemodel.JExpr;
+import com.sun.codemodel.JExpression;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;
 import com.sun.codemodel.JMethod;
@@ -74,7 +75,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		JMethod onClickMethod = onClickListenerClass.method(JMod.PUBLIC, codeModel.VOID, "onClick");
 		JVar onClickViewParam = onClickMethod.param(classes.VIEW, "view");
 
-		JInvocation clickCall = onClickMethod.body().invoke(methodName);
+		JExpression activityRef = holder.eBean.staticRef("this");
+		JInvocation clickCall = onClickMethod.body().invoke(activityRef, methodName);
 
 		if (hasViewParameter) {
 			clickCall.arg(onClickViewParam);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NonConfigurationInstanceProcessor.java
Patch:
@@ -42,12 +42,9 @@
 
 public class NonConfigurationInstanceProcessor implements ElementProcessor {
 
-	private static final double VALUE = 1.0 / 0.0;
-
 	private APTCodeModelHelper aptCodeModelHelper;
 
 	public NonConfigurationInstanceProcessor() {
-		double a = VALUE;
 		aptCodeModelHelper = new APTCodeModelHelper();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Extra.java
Patch:
@@ -33,5 +33,6 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface Extra {
-	String value();
+
+	String value() default "";
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BackgroundProcessor.java
Patch:
@@ -46,10 +46,10 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		EBeanHolder holder = eBeansHolder.getEnclosingEBeanHolder(element);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
-		
+
 		JMethod delegatingMethod = helper.overrideAnnotatedMethod(executableElement, holder);
 
-		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(codeModel, holder, delegatingMethod);
+		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(holder, delegatingMethod);
 
 		{
 			// Execute Runnable

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ModelProcessor.java
Patch:
@@ -37,7 +37,7 @@ public JCodeModel process(AnnotationElements validatedModel) throws Exception {
 
 		JCodeModel codeModel = new JCodeModel();
 
-		EBeansHolder eBeansHolder = new EBeansHolder();
+		EBeansHolder eBeansHolder = new EBeansHolder(codeModel);
 		for (ElementProcessor processor : processors) {
 			Class<? extends Annotation> target = processor.getTarget();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NoTitleProcessor.java
Patch:
@@ -35,7 +35,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		EBeanHolder holder = activitiesHolder.getRelativeEBeanHolder(element);
 
-		JFieldRef noTitle = holder.refClass("android.view.Window").staticRef("FEATURE_NO_TITLE");
+		JFieldRef noTitle = holder.classes().WINDOW.staticRef("FEATURE_NO_TITLE");
 
 		holder.init.body().invoke("requestWindowFeature").arg(noTitle);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RootContextProcessor.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.googlecode.androidannotations.processing;
 
-import static com.googlecode.androidannotations.helper.ValidatorHelper.ANDROID_CONTEXT_QUALIFIED_NAME;
+import static com.googlecode.androidannotations.helper.CanonicalNameConstants.CONTEXT;
 import static com.sun.codemodel.JExpr.cast;
 import static com.sun.codemodel.JExpr.ref;
 
@@ -47,7 +47,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		String typeQualifiedName = elementType.toString();
 
 		JBlock body = holder.init.body();
-		if (ANDROID_CONTEXT_QUALIFIED_NAME.equals(typeQualifiedName)) {
+		if (CONTEXT.equals(typeQualifiedName)) {
 			body.assign(ref(fieldName), holder.contextRef);
 		} else {
 			JClass extendingContextClass = holder.refClass(typeQualifiedName);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -85,8 +85,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JBlock catchBody = catchBlock.body();
 
-		JClass logClass = holder.refClass("android.util.Log");
-		JInvocation errorInvoke = catchBody.staticInvoke(logClass, "e");
+		JInvocation errorInvoke = catchBody.staticInvoke(holder.classes().LOG, "e");
 
 		errorInvoke.arg(holder.eBean.name());
 		errorInvoke.arg("Error in transaction");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/UiThreadDelayedProcessor.java
Patch:
@@ -48,7 +48,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		JMethod delegatingMethod = helper.overrideAnnotatedMethod(executableElement, holder);
 
-		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(codeModel, holder, delegatingMethod);
+		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(holder, delegatingMethod);
 
 		{
 			// Execute Runnable
@@ -57,7 +57,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 			long delay = annotation.value();
 
 			if (holder.handler == null) {
-				JClass handlerClass = holder.refClass("android.os.Handler");
+				JClass handlerClass = holder.classes().HANDLER;
 				holder.handler = holder.eBean.field(JMod.PRIVATE, handlerClass, "handler_", JExpr._new(handlerClass));
 			}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/UiThreadProcessor.java
Patch:
@@ -51,7 +51,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 		JMethod delegatingMethod = helper.overrideAnnotatedMethod(executableElement, holder);
 
-		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(codeModel, holder, delegatingMethod);
+		JDefinedClass anonymousRunnableClass = helper.createDelegatingAnonymousRunnableClass(holder, delegatingMethod);
 
 		{
 			// Execute Runnable
@@ -60,7 +60,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 			long delay = annotation.delay();
 
 			if (holder.handler == null) {
-				JClass handlerClass = holder.refClass("android.os.Handler");
+				JClass handlerClass = holder.classes().HANDLER;
 				holder.handler = holder.eBean.field(JMod.PRIVATE, handlerClass, "handler_", JExpr._new(handlerClass));
 			}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/GetProcessor.java
Patch:
@@ -25,7 +25,7 @@
 import javax.lang.model.type.TypeMirror;
 
 import com.googlecode.androidannotations.annotations.rest.Get;
-import com.googlecode.androidannotations.helper.ProcessorConstants;
+import com.googlecode.androidannotations.helper.CanonicalNameConstants;
 import com.googlecode.androidannotations.processing.EBeansHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
@@ -58,11 +58,11 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		JClass expectedClass = null;
 
 		if (returnType.getKind() != TypeKind.VOID) {
-			if (returnTypeString.startsWith(ProcessorConstants.RESPONSE_ENTITY)) {
+			if (returnTypeString.startsWith(CanonicalNameConstants.RESPONSE_ENTITY)) {
 				DeclaredType declaredReturnedType = (DeclaredType) returnType;
 				TypeMirror typeParameter = declaredReturnedType.getTypeArguments().get(0);
 				expectedClass = holder.refClass(typeParameter.toString());
-				generatedReturnType = holder.refClass(ProcessorConstants.RESPONSE_ENTITY).narrow(expectedClass);
+				generatedReturnType = holder.refClass(CanonicalNameConstants.RESPONSE_ENTITY).narrow(expectedClass);
 			} else {
 				generatedReturnType = holder.refClass(returnTypeString);
 				expectedClass = generatedReturnType;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/OptionsProcessor.java
Patch:
@@ -24,7 +24,7 @@
 import javax.lang.model.type.TypeMirror;
 
 import com.googlecode.androidannotations.annotations.rest.Options;
-import com.googlecode.androidannotations.helper.ProcessorConstants;
+import com.googlecode.androidannotations.helper.CanonicalNameConstants;
 import com.googlecode.androidannotations.processing.EBeansHolder;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
@@ -58,7 +58,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JClass expectedClass = holder.refClass(typeParameter.toString());
 
-		JClass generatedReturnType = holder.refClass(ProcessorConstants.SET).narrow(expectedClass);
+		JClass generatedReturnType = holder.refClass(CanonicalNameConstants.SET).narrow(expectedClass);
 
 		Options optionsAnnotation = element.getAnnotation(Options.class);
 		String urlSuffix = optionsAnnotation.value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -52,8 +52,6 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.hasExtraValue(element, valid);
-
 		return valid.isValid();
 	}
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ExtraInjectedActivity.java
Patch:
@@ -40,6 +40,9 @@ public class ExtraInjectedActivity extends Activity {
 
 	@Extra("byteArrayExtra")
 	byte[] byteArrayExtra;
+	
+	@Extra
+	String extraWithoutValue;
 
 	@Override
 	protected void onNewIntent(Intent intent) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -408,7 +408,7 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new EServiceValidator(processingEnv, androidManifest));
 		modelValidator.register(new EReceiverValidator(processingEnv, androidManifest));
 		modelValidator.register(new EProviderValidator(processingEnv, androidManifest));
-		modelValidator.register(new EFragmentValidator(processingEnv));
+		modelValidator.register(new EFragmentValidator(processingEnv, rClass));
 		modelValidator.register(new EViewGroupValidator(processingEnv, rClass));
 		modelValidator.register(new EViewValidator(processingEnv));
 		modelValidator.register(new EBeanValidator(processingEnv));
@@ -488,7 +488,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new EServiceProcessor());
 		modelProcessor.register(new EReceiverProcessor());
 		modelProcessor.register(new EProviderProcessor());
-		modelProcessor.register(new EFragmentProcessor());
+		modelProcessor.register(new EFragmentProcessor(rClass));
 		modelProcessor.register(new EViewGroupProcessor(rClass));
 		modelProcessor.register(new EViewProcessor());
 		modelProcessor.register(new EBeanProcessor());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.googlecode.androidannotations.processing;
 
+import static com.sun.codemodel.JExpr.invoke;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
 
@@ -131,7 +132,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		if (layoutIdValue != Id.DEFAULT_VALUE) {
 			IRInnerClass rInnerClass = rClass.get(Res.LAYOUT);
 			contentViewId = rInnerClass.getIdStaticRef(layoutIdValue, holder);
-			ifNotInflated.invoke("inflate").arg(JExpr.invoke("getContext")).arg(contentViewId).arg(JExpr._this());
+			ifNotInflated.invoke("inflate").arg(invoke("getContext")).arg(contentViewId).arg(JExpr._this());
 		}
 		ifNotInflated.invoke(holder.afterSetContentView);
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/efragment/MyFragment.java
Patch:
@@ -16,10 +16,11 @@
 import com.googlecode.androidannotations.annotations.Transactional;
 import com.googlecode.androidannotations.annotations.UiThread;
 import com.googlecode.androidannotations.annotations.ViewById;
+import com.googlecode.androidannotations.test15.R;
 import com.googlecode.androidannotations.test15.ebean.SomeBean;
 import com.googlecode.androidannotations.test15.roboguice.SampleRoboApplication;
 
-@EFragment
+@EFragment(R.layout.injected)
 public class MyFragment extends Fragment {
 	
 	@Bean

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Extra.java
Patch:
@@ -24,7 +24,7 @@
  * Use on Extra fields in activity and service classes. This String value field
  * corresponds to the Android extra name.
  * 
- * If {@link Extra} is used on fields in an Activity, the intent builder will
+ * When {@link Extra} is used on fields in an Activity, the intent builder will
  * hold dedicated methods for these extras. Calling
  * Activity#setIntent(android.content.Intent) will automatically update the
  * annotated extras.

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ViewById.java
Patch:
@@ -25,8 +25,8 @@
  * 
  * The field MUST be of a type that extends android.view.View.
  * 
- * The annotation value should be one of R.string.* fields. If not set, the
- * field name will be used as the R.id.* field name.
+ * The annotation value should be one of R.id.* fields. If not set, the field
+ * name will be used as the R.id.* field name.
  * 
  */
 @Retention(RetentionPolicy.SOURCE)

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -17,6 +17,7 @@
 
 import static com.googlecode.androidannotations.helper.GreenDroidConstants.GREENDROID_ACTIVITIES_LIST_CLASS;
 import static com.sun.codemodel.JExpr._new;
+import static com.sun.codemodel.JExpr._super;
 import static com.sun.codemodel.JExpr._this;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
@@ -146,7 +147,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		onCreateBody.invoke(holder.init).arg(onCreateSavedInstanceState);
 
-		onCreateBody.invoke(JExpr._super(), onCreate).arg(onCreateSavedInstanceState);
+		onCreateBody.invoke(_super(), onCreate).arg(onCreateSavedInstanceState);
 
 		EActivity layoutAnnotation = element.getAnnotation(EActivity.class);
 		int layoutIdValue = layoutAnnotation.value();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanProcessor.java
Patch:
@@ -96,7 +96,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 
 			JBlock findViewByIdBody = findViewById.body();
 
-			JVar activityVar = findViewByIdBody.decl(activityClass, "activity", cast(activityClass, holder.contextRef));
+			JVar activityVar = findViewByIdBody.decl(activityClass, "activity_", cast(activityClass, holder.contextRef));
 
 			findViewByIdBody._return(activityVar.invoke(findViewById).arg(idParam));
 		}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -20,7 +20,6 @@
 
 import java.lang.annotation.Annotation;
 
-import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.element.Modifier;
 import javax.lang.model.element.TypeElement;
@@ -63,7 +62,7 @@ public class EViewGroupProcessor implements ElementProcessor {
 
 	private final APTCodeModelHelper codeModelHelper;
 
-	public EViewGroupProcessor(ProcessingEnvironment processingEnv, IRClass rClass) {
+	public EViewGroupProcessor(IRClass rClass) {
 		this.rClass = rClass;
 		codeModelHelper = new APTCodeModelHelper();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewProcessor.java
Patch:
@@ -20,7 +20,6 @@
 
 import java.lang.annotation.Annotation;
 
-import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
 import javax.lang.model.element.Modifier;
 import javax.lang.model.element.TypeElement;
@@ -56,7 +55,7 @@ public class EViewProcessor implements ElementProcessor {
 
 	private final APTCodeModelHelper codeModelHelper;
 
-	public EViewProcessor(ProcessingEnvironment processingEnv) {
+	public EViewProcessor() {
 		codeModelHelper = new APTCodeModelHelper();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/DeleteProcessor.java
Patch:
@@ -43,7 +43,6 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		RestImplementationHolder holder = restImplementationsHolder.getEnclosingHolder(element);
 		ExecutableElement executableElement = (ExecutableElement) element;
 
 		Delete deleteAnnotation = element.getAnnotation(Delete.class);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PutProcessor.java
Patch:
@@ -43,7 +43,6 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
 
-		RestImplementationHolder holder = restImplementationsHolder.getEnclosingHolder(element);
 		ExecutableElement executableElement = (ExecutableElement) element;
 
 		Put putAnnotation = element.getAnnotation(Put.class);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/EActivityValidator.java
Patch:
@@ -19,7 +19,6 @@
 
 import javax.annotation.processing.ProcessingEnvironment;
 import javax.lang.model.element.Element;
-import javax.lang.model.element.TypeElement;
 
 import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.helper.AndroidManifest;
@@ -50,7 +49,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.extendsActivity((TypeElement) element, valid);
+		validatorHelper.extendsActivity(element, valid);
 
 		validatorHelper.idExists(element, Res.LAYOUT, false, valid);
 

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ebean/BeanInjectedActivityTest.java
Patch:
@@ -32,7 +32,6 @@ public class BeanInjectedActivityTest {
 	public void setup() {
 		activity = new BeanInjectedActivity_();
 		activity.onCreate(null);
-		
 	}
 
 	@Test

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/DeleteProcessor.java
Patch:
@@ -48,9 +48,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		Delete deleteAnnotation = element.getAnnotation(Delete.class);
 		String urlSuffix = deleteAnnotation.value();
-		String url = holder.urlPrefix + urlSuffix;
 
-		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, null, null, codeModel));
+		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, urlSuffix, null, null, codeModel));
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/GetProcessor.java
Patch:
@@ -71,9 +71,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		Get getAnnotation = element.getAnnotation(Get.class);
 		String urlSuffix = getAnnotation.value();
-		String url = holder.urlPrefix + urlSuffix;
 
-		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, expectedClass, generatedReturnType, codeModel));
+		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, urlSuffix, expectedClass, generatedReturnType, codeModel));
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/HeadProcessor.java
Patch:
@@ -54,9 +54,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		Head headAnnotation = element.getAnnotation(Head.class);
 		String urlSuffix = headAnnotation.value();
-		String url = holder.urlPrefix + urlSuffix;
 
-		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, expectedClass, expectedClass, codeModel));
+		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, urlSuffix, expectedClass, expectedClass, codeModel));
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/OptionsProcessor.java
Patch:
@@ -62,9 +62,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		Options optionsAnnotation = element.getAnnotation(Options.class);
 		String urlSuffix = optionsAnnotation.value();
-		String url = holder.urlPrefix + urlSuffix;
 
-		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, expectedClass, generatedReturnType, codeModel));
+		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, urlSuffix, expectedClass, generatedReturnType, codeModel));
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PostProcessor.java
Patch:
@@ -76,9 +76,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		Post postAnnotation = element.getAnnotation(Post.class);
 		String urlSuffix = postAnnotation.value();
-		String url = holder.urlPrefix + urlSuffix;
 
-		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, expectedClass, generatedReturnType, codeModel));
+		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, urlSuffix, expectedClass, generatedReturnType, codeModel));
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PutProcessor.java
Patch:
@@ -48,9 +48,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		Put putAnnotation = element.getAnnotation(Put.class);
 		String urlSuffix = putAnnotation.value();
-		String url = holder.urlPrefix + urlSuffix;
 
-		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, null, null, codeModel));
+		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, urlSuffix, null, null, codeModel));
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/RestImplementationHolder.java
Patch:
@@ -30,7 +30,7 @@ public class RestImplementationHolder {
 
 	public JFieldVar restTemplateField;
 
-	public String urlPrefix;
+	public JFieldVar rootUrlField;
 
 	public JClass refClass(String fullyQualifiedClassName) {
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/MyService.java
Patch:
@@ -98,4 +98,6 @@ public interface MyService {
 	RestTemplate getRestTemplate();
 	
 	void setRestTemplate(RestTemplate restTemplate);
+	
+	void setRootUrl(String test);
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -191,5 +191,4 @@ private void overrideSetIntent(EBeanHolder holder, JCodeModel codeModel, JClass
 	private void injectExtrasOnInit(EBeanHolder holder, JClass intentClass, JMethod injectExtrasMethod) {
 		holder.init.body().invoke(injectExtrasMethod);
 	}
-
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/roboguice/ActivityWithRoboGuice.java
Patch:
@@ -36,7 +36,7 @@
 @RoboGuice
 @EActivity(R.layout.injected)
 public class ActivityWithRoboGuice extends Activity {
-	
+
 	@InjectResource(R.string.injected_activity_caption)
 	String caption;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/TargetAnnotationHelper.java
Patch:
@@ -77,6 +77,9 @@ public Class<? extends Annotation> getTarget() {
 	}
 
 	public String actionName() {
+		if (target.getSimpleName().endsWith("e")) {
+			return target.getSimpleName() + "d";
+		}
 		return target.getSimpleName() + "ed";
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/SherlockHelper.java
Patch:
@@ -42,8 +42,9 @@ public SherlockHelper(ProcessingEnvironment processingEnv) {
 
 	public boolean usesSherlock(EBeanHolder holder) {
 		// Check whether the Activity extends one of the ActionBarSherlock Activity types
-		TypeElement annotatedType = annotationHelper.typeElementFromQualifiedName(holder.eBean
-				.fullName());
+		String generatedClass = holder.eBean.fullName();
+		TypeElement annotatedType = annotationHelper.typeElementFromQualifiedName(generatedClass
+				.substring(0, generatedClass.length() - 1));
 		for (String sherlockClass : SHERLOCK_ACTIVITIES_LIST_CLASS) {
 			if (annotationHelper.isSubtype(annotatedType,
 					annotationHelper.typeElementFromQualifiedName(sherlockClass))) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/AnnotationHelper.java
Patch:
@@ -37,7 +37,7 @@
 
 public class AnnotationHelper {
 
-	protected final ProcessingEnvironment processingEnv;
+	private final ProcessingEnvironment processingEnv;
 
 	public AnnotationHelper(ProcessingEnvironment processingEnv) {
 		this.processingEnv = processingEnv;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -28,7 +28,6 @@
 import com.googlecode.androidannotations.annotations.EViewGroup;
 import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.helper.APTCodeModelHelper;
-import com.googlecode.androidannotations.helper.AnnotationHelper;
 import com.googlecode.androidannotations.helper.ModelConstants;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
@@ -44,7 +43,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 
-public class EViewGroupProcessor extends AnnotationHelper implements ElementProcessor {
+public class EViewGroupProcessor implements ElementProcessor {
 
 	private static final String ALREADY_INFLATED_COMMENT = "" // +
 			+ "The mAlreadyInflated_ hack is needed because of an Android bug\n" // +
@@ -65,7 +64,6 @@ public class EViewGroupProcessor extends AnnotationHelper implements ElementProc
 	private final APTCodeModelHelper codeModelHelper;
 
 	public EViewGroupProcessor(ProcessingEnvironment processingEnv, IRClass rClass) {
-		super(processingEnv);
 		this.rClass = rClass;
 		codeModelHelper = new APTCodeModelHelper();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewProcessor.java
Patch:
@@ -27,7 +27,6 @@
 
 import com.googlecode.androidannotations.annotations.EView;
 import com.googlecode.androidannotations.helper.APTCodeModelHelper;
-import com.googlecode.androidannotations.helper.AnnotationHelper;
 import com.googlecode.androidannotations.helper.ModelConstants;
 import com.sun.codemodel.ClassType;
 import com.sun.codemodel.JBlock;
@@ -39,7 +38,7 @@
 import com.sun.codemodel.JMod;
 import com.sun.codemodel.JType;
 
-public class EViewProcessor extends AnnotationHelper implements ElementProcessor {
+public class EViewProcessor implements ElementProcessor {
 
 	private static final String ALREADY_INFLATED_COMMENT = "" // +
 			+ "The mAlreadyInflated_ hack is needed because of an Android bug\n" // +
@@ -58,7 +57,6 @@ public class EViewProcessor extends AnnotationHelper implements ElementProcessor
 	private final APTCodeModelHelper codeModelHelper;
 
 	public EViewProcessor(ProcessingEnvironment processingEnv) {
-		super(processingEnv);
 		codeModelHelper = new APTCodeModelHelper();
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsMenuProcessor.java
Patch:
@@ -68,7 +68,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JBlock body = method.body();
 
-		JVar menuInflater = body.decl(holder.refClass(usesSherlock? "com.actionbarsherlock.view.MenuInflator": "android.view.MenuInflater"), "menuInflater", invoke(usesSherlock? "getSupportMenuInflater": "getMenuInflater"));
+		JVar menuInflater = body.decl(holder.refClass(usesSherlock? "com.actionbarsherlock.view.MenuInflater": "android.view.MenuInflater"), "menuInflater", invoke(usesSherlock? "getSupportMenuInflater": "getMenuInflater"));
 
 		body.invoke(menuInflater, "inflate").arg(optionsMenuId).arg(menuParam);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -89,7 +89,7 @@ public JClass refClass(String fullyQualifiedClassName) {
 			JCodeModel codeModel = eBean.owner();
 			try {
 				refClass = codeModel.ref(fullyQualifiedClassName);
-			} catch (Exception e) {
+			} catch (NoClassDefFoundError ignored) {
 				refClass = codeModel.directClass(fullyQualifiedClassName);
 			}
 			loadedClasses.put(fullyQualifiedClassName, refClass);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -84,7 +84,7 @@ public JClass refClass(String fullyQualifiedClassName) {
 			JCodeModel codeModel = eBean.owner();
 			try {
 				refClass = codeModel.ref(fullyQualifiedClassName);
-			} catch (Throwable t) {
+			} catch (NoClassDefFoundError ignored) {
 				refClass = codeModel.directClass(fullyQualifiedClassName);
 			}
 			loadedClasses.put(fullyQualifiedClassName, refClass);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/InstanceStateProcessor.java
Patch:
@@ -32,8 +32,6 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
-import android.os.Bundle;
-
 import com.googlecode.androidannotations.annotations.InstanceState;
 import com.googlecode.androidannotations.helper.APTCodeModelHelper;
 import com.googlecode.androidannotations.helper.AnnotationHelper;
@@ -221,7 +219,8 @@ private JBlock getSaveStateMethodBody(JCodeModel codeModel, EBeanHolder holder)
 		if (holder.saveInstanceStateBlock == null) {
 			JMethod method = holder.eBean.method(PUBLIC, codeModel.VOID, "onSaveInstanceState");
 			method.annotate(Override.class);
-			method.param(Bundle.class, BUNDLE_PARAM_NAME);
+			JClass bundleClass = holder.refClass("android.os.Bundle");
+			method.param(bundleClass, BUNDLE_PARAM_NAME);
 
 			holder.saveInstanceStateBlock = method.body();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Bean.java
Patch:
@@ -24,7 +24,7 @@
  * Injects an instance of a class annotated with {@link EBean}. You can specify
  * the type to inject using the value attribute, otherwise 
  */
-@Retention(RetentionPolicy.SOURCE)
+@Retention(RetentionPolicy.CLASS)
 @Target(ElementType.FIELD)
 public @interface Bean {
 	Class<?> value() default Void.class;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/InstanceState.java
Patch:
@@ -21,7 +21,7 @@
 import java.lang.annotation.Target;
 
 /**
- * Use it on fields in activities to save and restore their values when the
+ * Use on activity fields to save and restore their values when the
  * system calls onSaveInstanceState(Bundle) and onCreate(Bundle).
  */
 @Retention(RetentionPolicy.SOURCE)

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/ebean/BeanInjectedActivityTest.java
Patch:
@@ -52,7 +52,7 @@ public void dependency_with_annotation_value_is_of_annotation_value_type() {
 	
 	@Test
 	public void singleton_dependency_is_same_reference() {
-		SingletonDependency initialDependency = activity.singletonDependency;
+		SomeSingleton initialDependency = activity.singletonDependency;
 		
 		BeanInjectedActivity_ newActivity = new BeanInjectedActivity_();
 		newActivity.onCreate(null);

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ebean/BeanInjectedActivity.java
Patch:
@@ -30,6 +30,6 @@ public class BeanInjectedActivity extends Activity {
 	public SomeInterface interfaceDependency;
 	
 	@Bean
-	public SingletonDependency singletonDependency;
-
+	public SomeSingleton singletonDependency;
+	
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/DeleteValidator.java
Patch:
@@ -60,7 +60,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.returnTypeIsVoid(executableElement, valid);
 
-		restAnnotationHelper.urlVariableNamesExistInParameters(executableElement, valid);
+		restAnnotationHelper.urlVariableNamesExistInParametersAndHasNoOneMoreParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/GetValidator.java
Patch:
@@ -64,7 +64,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		validatorHelper.doesNotReturnArray(executableElement, valid);
 
-		restAnnotationHelper.urlVariableNamesExistInParameters(executableElement, valid);
+		restAnnotationHelper.urlVariableNamesExistInParametersAndHasNoOneMoreParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/HeadValidator.java
Patch:
@@ -60,7 +60,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.hasHttpHeadersReturnType(executableElement, valid);
 
-		restAnnotationHelper.urlVariableNamesExistInParameters(executableElement, valid);
+		restAnnotationHelper.urlVariableNamesExistInParametersAndHasNoOneMoreParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/OptionsValidator.java
Patch:
@@ -60,7 +60,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.hasSetOfHttpMethodReturnType(executableElement, valid);
 
-		restAnnotationHelper.urlVariableNamesExistInParameters(executableElement, valid);
+		restAnnotationHelper.urlVariableNamesExistInParametersAndHasNoOneMoreParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -55,6 +55,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isInterface(typeElement, valid);
 
+		validatorHelper.isTopLevel(typeElement, valid);
+
 		validatorHelper.doesNotExtendOtherInterfaces(typeElement, valid);
 
 		validatorHelper.unannotatedMethodReturnsRestTemplate(typeElement, valid);

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/MyServiceActivity.java
Patch:
@@ -15,15 +15,15 @@
  */
 package com.googlecode.androidannotations.test15.rest;
 
+import android.app.Activity;
+
 import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.rest.RestService;
 
-import android.app.Activity;
-
 @EActivity
 public class MyServiceActivity extends Activity {
 
 	@RestService
 	MyService myService;
-
+	
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/rest/RestValidator.java
Patch:
@@ -55,6 +55,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isInterface(typeElement, valid);
 
+		validatorHelper.isTopLevel(typeElement, valid);
+
 		validatorHelper.doesNotExtendOtherInterfaces(typeElement, valid);
 
 		validatorHelper.unannotatedMethodReturnsRestTemplate(typeElement, valid);

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/MyServiceActivity.java
Patch:
@@ -15,15 +15,15 @@
  */
 package com.googlecode.androidannotations.test15.rest;
 
+import android.app.Activity;
+
 import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.rest.RestService;
 
-import android.app.Activity;
-
 @EActivity
 public class MyServiceActivity extends Activity {
 
 	@RestService
 	MyService myService;
-
+	
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -55,7 +55,7 @@ public class EBeanHolder {
 	public JSwitch onOptionsItemSelectedSwitch;
 	public JVar onOptionsItemSelectedItem;
 
-	public JBlock restoreInstanceStateBlock;
+	public JMethod restoreSavedInstanceStateMethod;
 	public JBlock saveInstanceStateBlock;
 
 	public JExpression contextRef;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -55,7 +55,7 @@ public class EBeanHolder {
 	public JSwitch onOptionsItemSelectedSwitch;
 	public JVar onOptionsItemSelectedItem;
 
-	public JBlock restoreInstanceStateBlock;
+	public JMethod restoreSavedInstanceStateMethod;
 	public JBlock saveInstanceStateBlock;
 
 	public JExpression contextRef;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/AbstractPrefEditorField.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.googlecode.androidannotations.api.sharedpreferences;
 
+
 public abstract class AbstractPrefEditorField<T extends EditorHelper<T>> {
 
 	protected final T editorHelper;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ebean/BeanInjectedActivity.java
Patch:
@@ -28,5 +28,8 @@ public class BeanInjectedActivity extends Activity {
 	
 	@Bean(SomeImplementation.class)
 	public SomeInterface interfaceDependency;
+	
+	@Bean
+	public SingletonDependency singletonDependency;
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/AbstractPrefEditorField.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.googlecode.androidannotations.api.sharedpreferences;
 
+
 public abstract class AbstractPrefEditorField<T extends EditorHelper<T>> {
 
 	protected final T editorHelper;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ebean/BeanInjectedActivity.java
Patch:
@@ -28,5 +28,8 @@ public class BeanInjectedActivity extends Activity {
 	
 	@Bean(SomeImplementation.class)
 	public SomeInterface interfaceDependency;
+	
+	@Bean
+	public SingletonDependency singletonDependency;
 
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/TransactionalActivity.java
Patch:
@@ -21,7 +21,6 @@
 import android.database.sqlite.SQLiteDatabase;
 
 import com.googlecode.androidannotations.annotations.EActivity;
-import com.googlecode.androidannotations.annotations.Trace;
 import com.googlecode.androidannotations.annotations.Transactional;
 import com.googlecode.androidannotations.test15.instancestate.MySerializableBean;
 

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/eviewgroup/CustomFrameLayoutTest.java
Patch:
@@ -30,8 +30,7 @@ public class CustomFrameLayoutTest {
 	@Test
 	public void shouldHaveLayoutAfterCreate() {
 		EmptyActivityWithoutLayout activity = new EmptyActivityWithoutLayout_();
-		CustomFrameLayout component = new CustomFrameLayout_(activity, 0);
-		component.onFinishInflate();
+		CustomFrameLayout component = CustomFrameLayout_.build(activity, 0);
 		assertThat(component.subtitle).isNotNull();
 		assertThat(component.tv).isNotNull();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -45,4 +45,5 @@
 @Target(ElementType.TYPE)
 public @interface EActivity {
 	int value() default Id.DEFAULT_VALUE;
+	boolean greendroid() default false;
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -55,6 +55,9 @@ public class EBeanHolder {
 	public JSwitch onOptionsItemSelectedSwitch;
 	public JVar onOptionsItemSelectedItem;
 
+	public JBlock restoreInstanceStateBlock;
+	public JBlock saveInstanceStateBlock;
+
 	public JExpression contextRef;
 	/**
 	 * Should not be used by inner annotations that target services, broadcast

File: AndroidAnnotations/functional-test-1-5-tests/src/test/java/com/googlecode/androidannotations/test15/SaveInstanceStateActivityTest.java
Patch:
@@ -32,15 +32,14 @@ public void setup() throws Exception {
 		Robolectric.bindShadowClass(CustomShadowBundle.class);
 	}
 
-
-	 @Test
+	@Test
 	public void can_create_with_empty_bundle() {
 		SaveInstanceStateActivity_ activity = new SaveInstanceStateActivity_();
 		Bundle emptyBundle = new Bundle();
 		activity.onCreate(emptyBundle);
 	}
 
-	 @Test
+	@Test
 	public void can_create_without_saved_state() {
 		SaveInstanceStateActivity_ activity = new SaveInstanceStateActivity_();
 		activity.onCreate(null);

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/MyParcelableBean.java
Patch:
@@ -5,7 +5,7 @@
 
 public class MyParcelableBean implements Parcelable {
 
-	private final int	x;
+	private final int x;
 
 	public MyParcelableBean(int x) {
 		this.x = x;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/MySerializableBean.java
Patch:
@@ -4,9 +4,9 @@
 
 public class MySerializableBean implements Serializable {
 
-	private static final long serialVersionUID = 398309810982L;
+	private static final long serialVersionUID = 1L;
 
-	private final int	x;
+	private final int x;
 
 	public MySerializableBean(int x) {
 		this.x = x;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ebean/EnhancedClass.java
Patch:
@@ -34,7 +34,6 @@
 import com.googlecode.androidannotations.annotations.Trace;
 import com.googlecode.androidannotations.annotations.Transactional;
 import com.googlecode.androidannotations.annotations.UiThread;
-import com.googlecode.androidannotations.annotations.UiThreadDelayed;
 import com.googlecode.androidannotations.annotations.ViewById;
 import com.googlecode.androidannotations.annotations.res.StringRes;
 import com.googlecode.androidannotations.test15.ThreadActivity;
@@ -84,7 +83,7 @@ void uiThread() {
 
 	}
 
-	@UiThreadDelayed(2000)
+	@UiThread(delay = 2000)
 	@Trace
 	void uiThreadDelayed() {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -888,15 +888,15 @@ public void hasEmptyConstructor(Element element, IsValid valid) {
 
 			if (!annotationHelper.isPrivate(constructor)) {
 				if (constructor.getParameters().size() != 0) {
-					annotationHelper.printError(element, "%s annotated element should have an empty constructor");
+					annotationHelper.printAnnotationError(element, "%s annotated element should have an empty constructor");
 					valid.invalidate();
 				}
 			} else {
-				annotationHelper.printError(element, "%s annotated element should not have a private constructor");
+				annotationHelper.printAnnotationError(element, "%s annotated element should not have a private constructor");
 				valid.invalidate();
 			}
 		} else {
-			annotationHelper.printError(element, "%s annotated element should have only one constructor");
+			annotationHelper.printAnnotationError(element, "%s annotated element should have only one constructor");
 			valid.invalidate();
 		}
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -888,15 +888,15 @@ public void hasEmptyConstructor(Element element, IsValid valid) {
 
 			if (!annotationHelper.isPrivate(constructor)) {
 				if (constructor.getParameters().size() != 0) {
-					annotationHelper.printError(element, "%s annotated element should have an empty constructor");
+					annotationHelper.printAnnotationError(element, "%s annotated element should have an empty constructor");
 					valid.invalidate();
 				}
 			} else {
-				annotationHelper.printError(element, "%s annotated element should not have a private constructor");
+				annotationHelper.printAnnotationError(element, "%s annotated element should not have a private constructor");
 				valid.invalidate();
 			}
 		} else {
-			annotationHelper.printError(element, "%s annotated element should have only one constructor");
+			annotationHelper.printAnnotationError(element, "%s annotated element should have only one constructor");
 			valid.invalidate();
 		}
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -266,8 +266,8 @@
 		EReceiver.class, //
 		EProvider.class, //
 		Trace.class, //
-		SaveOnActivityDestroy.class //
-		EApplication.class, //
+		SaveOnActivityDestroy.class, //
+		EApplication.class //
 })
 @SupportedSourceVersion(SourceVersion.RELEASE_6)
 public class AndroidAnnotationProcessor extends AnnotatedAbstractProcessor {

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/SaveInstanceStateActivity.java
Patch:
@@ -1,6 +1,6 @@
 package com.googlecode.androidannotations.test15;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import android.app.Activity;
 
@@ -113,7 +113,7 @@ public class SaveInstanceStateActivity extends Activity {
     String [] myStringArray;
 
     @SaveOnActivityDestroy
-    List<String> myStringList;
+    ArrayList<String> myStringList;
 
     @SaveOnActivityDestroy
     MySerializableBean mySerializableBean;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Bean.java
Patch:
@@ -21,9 +21,9 @@
 import java.lang.annotation.Target;
 
 /**
- * Injects an instance of a class annotated with {@link Enhanced}
+ * Injects an instance of a class annotated with {@link EBean}
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
-public @interface Inject {
+public @interface Bean {
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EBean.java
Patch:
@@ -27,10 +27,10 @@
  * method.<br>
  * <br>
  * 
- * Most annotations are supported in {@link Enhanced} classes
+ * Most annotations are supported in {@link EBean} classes
  * 
  */
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
-public @interface Enhanced {
+public @interface EBean {
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/RootContext.java
Patch:
@@ -21,7 +21,7 @@
 import java.lang.annotation.Target;
 
 /**
- * Use it on Context fields in {@link Enhanced} classes
+ * Use it on Context fields in {@link EBean} classes
  * 
  * The field MUST be of a type that extends android.content.Context.
  * 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeanHolder.java
Patch:
@@ -18,6 +18,8 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import com.googlecode.androidannotations.annotations.EBean;
+import com.googlecode.androidannotations.annotations.EViewGroup;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -38,7 +40,7 @@ public class EBeanHolder {
 	public JMethod init;
 	/**
 	 * Only defined on activities and components potentially depending on
-	 * activity (@EViewGroup, @Enhanced)
+	 * activity ( {@link EViewGroup}, {@link EBean}
 	 */
 	public JMethod afterSetContentView;
 	public JBlock extrasNotNullBlock;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RootContextValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhancedAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.extendsContext(element, valid);
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/afterinject/AfterInjectBean.java
Patch:
@@ -18,10 +18,10 @@
 import android.app.NotificationManager;
 
 import com.googlecode.androidannotations.annotations.AfterInject;
-import com.googlecode.androidannotations.annotations.Enhanced;
+import com.googlecode.androidannotations.annotations.EBean;
 import com.googlecode.androidannotations.annotations.SystemService;
 
-@Enhanced
+@EBean
 public class AfterInjectBean {
 	
 	public boolean afterInjectCalled = false;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ebean/EmptyDependency.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.test15.enhanced;
+package com.googlecode.androidannotations.test15.ebean;
 
-import com.googlecode.androidannotations.annotations.Enhanced;
+import com.googlecode.androidannotations.annotations.EBean;
 
-@Enhanced
+@EBean
 public class EmptyDependency {
 
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ebean/SecondDependency.java
Patch:
@@ -13,11 +13,11 @@
  * License for the specific language governing permissions and limitations under
  * the License.
  */
-package com.googlecode.androidannotations.test15.enhanced;
+package com.googlecode.androidannotations.test15.ebean;
 
-import com.googlecode.androidannotations.annotations.Enhanced;
+import com.googlecode.androidannotations.annotations.EBean;
 
-@Enhanced
+@EBean
 public class SecondDependency {
 
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/eprovider/MyProvider.java
Patch:
@@ -24,13 +24,13 @@
 import android.widget.Toast;
 
 import com.googlecode.androidannotations.annotations.Background;
+import com.googlecode.androidannotations.annotations.Bean;
 import com.googlecode.androidannotations.annotations.EProvider;
-import com.googlecode.androidannotations.annotations.Inject;
 import com.googlecode.androidannotations.annotations.SystemService;
 import com.googlecode.androidannotations.annotations.Trace;
 import com.googlecode.androidannotations.annotations.UiThread;
 import com.googlecode.androidannotations.annotations.sharedpreferences.Pref;
-import com.googlecode.androidannotations.test15.enhanced.EnhancedClass;
+import com.googlecode.androidannotations.test15.ebean.EnhancedClass;
 import com.googlecode.androidannotations.test15.eservice.MyService;
 import com.googlecode.androidannotations.test15.prefs.SomePrefs_;
 
@@ -40,7 +40,7 @@ public class MyProvider extends ContentProvider {
 	@SystemService
 	NotificationManager notificationManager;
 
-	@Inject
+	@Bean
 	EnhancedClass dependency;
 	
 	@Pref

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ereceiver/MyReceiver.java
Patch:
@@ -23,12 +23,12 @@
 import android.widget.Toast;
 
 import com.googlecode.androidannotations.annotations.Background;
+import com.googlecode.androidannotations.annotations.Bean;
 import com.googlecode.androidannotations.annotations.EReceiver;
-import com.googlecode.androidannotations.annotations.Inject;
 import com.googlecode.androidannotations.annotations.SystemService;
 import com.googlecode.androidannotations.annotations.Trace;
 import com.googlecode.androidannotations.annotations.UiThread;
-import com.googlecode.androidannotations.test15.enhanced.EnhancedClass;
+import com.googlecode.androidannotations.test15.ebean.EnhancedClass;
 import com.googlecode.androidannotations.test15.eservice.MyService;
 
 @EReceiver
@@ -37,7 +37,7 @@ public class MyReceiver extends BroadcastReceiver {
 	@SystemService
 	NotificationManager notificationManager;
 	
-	@Inject
+	@Bean
 	EnhancedClass dependency;
 
 	@Override

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/eservice/MyService.java
Patch:
@@ -22,20 +22,20 @@
 import android.widget.Toast;
 
 import com.googlecode.androidannotations.annotations.Background;
+import com.googlecode.androidannotations.annotations.Bean;
 import com.googlecode.androidannotations.annotations.EService;
-import com.googlecode.androidannotations.annotations.Inject;
 import com.googlecode.androidannotations.annotations.SystemService;
 import com.googlecode.androidannotations.annotations.Trace;
 import com.googlecode.androidannotations.annotations.UiThread;
-import com.googlecode.androidannotations.test15.enhanced.EnhancedClass;
+import com.googlecode.androidannotations.test15.ebean.EnhancedClass;
 
 @EService
 public class MyService extends IntentService {
 
 	@SystemService
 	NotificationManager notificationManager;
 
-	@Inject
+	@Bean
 	EnhancedClass dependency;
 
 	public MyService() {

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/eview/CustomButton.java
Patch:
@@ -22,7 +22,6 @@
 
 import com.googlecode.androidannotations.annotations.AfterViews;
 import com.googlecode.androidannotations.annotations.Background;
-import com.googlecode.androidannotations.annotations.Click;
 import com.googlecode.androidannotations.annotations.EView;
 import com.googlecode.androidannotations.annotations.Trace;
 import com.googlecode.androidannotations.annotations.UiThread;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/EBeanUsingService.java
Patch:
@@ -16,11 +16,11 @@
 package com.googlecode.androidannotations.test15.rest;
 
 import com.googlecode.androidannotations.annotations.Background;
-import com.googlecode.androidannotations.annotations.Enhanced;
+import com.googlecode.androidannotations.annotations.EBean;
 import com.googlecode.androidannotations.annotations.rest.RestService;
 
-@Enhanced
-public class EnhancedClassUsingService {
+@EBean
+public class EBeanUsingService {
 	
 	@RestService
 	MyService myService;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/roboguice/SampleRoboApplication.java
Patch:
@@ -20,14 +20,14 @@
 import roboguice.application.RoboApplication;
 
 import com.google.inject.Module;
+import com.googlecode.androidannotations.annotations.Bean;
 import com.googlecode.androidannotations.annotations.EApplication;
-import com.googlecode.androidannotations.annotations.Inject;
-import com.googlecode.androidannotations.test15.enhanced.EmptyDependency;
+import com.googlecode.androidannotations.test15.ebean.EmptyDependency;
 
 @EApplication
 public class SampleRoboApplication extends RoboApplication {
 	
-	@Inject
+	@Bean
 	public EmptyDependency someDependency;
 
 	private Module module = new RobolectricSampleModule();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -46,6 +46,7 @@
 import com.googlecode.androidannotations.annotations.EProvider;
 import com.googlecode.androidannotations.annotations.EReceiver;
 import com.googlecode.androidannotations.annotations.EService;
+import com.googlecode.androidannotations.annotations.EView;
 import com.googlecode.androidannotations.annotations.EViewGroup;
 import com.googlecode.androidannotations.annotations.Enhanced;
 import com.googlecode.androidannotations.annotations.Extra;
@@ -95,10 +96,10 @@ public class ValidatorHelper {
 	private static final Collection<Integer> VALID_LOG_LEVELS = Arrays.asList(Log.VERBOSE, Log.DEBUG, Log.INFO, Log.WARN, Log.ERROR);
 
 	@SuppressWarnings("unchecked")
-	private static final List<Class<? extends Annotation>> VALID_ENHANCED_VIEW_SUPPORT_ANNOTATIONS = Arrays.asList(EActivity.class, EViewGroup.class, Enhanced.class);
+	private static final List<Class<? extends Annotation>> VALID_ENHANCED_VIEW_SUPPORT_ANNOTATIONS = Arrays.asList(EActivity.class, EViewGroup.class, EView.class, Enhanced.class);
 
 	@SuppressWarnings("unchecked")
-	private static final List<Class<? extends Annotation>> VALID_ENHANCED_COMPONENT_ANNOTATIONS = Arrays.asList(EApplication.class, EActivity.class, EViewGroup.class, Enhanced.class, EService.class, EReceiver.class, EProvider.class);
+	private static final List<Class<? extends Annotation>> VALID_ENHANCED_COMPONENT_ANNOTATIONS = Arrays.asList(EApplication.class, EActivity.class, EViewGroup.class, EView.class, Enhanced.class, EService.class, EReceiver.class, EProvider.class);
 
 	protected final TargetAnnotationHelper annotationHelper;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterInjectValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhancedAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Enhanced.java
Patch:
@@ -33,5 +33,4 @@
 @Retention(RetentionPolicy.CLASS)
 @Target(ElementType.TYPE)
 public @interface Enhanced {
-	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AppValidator.java
Patch:
@@ -51,7 +51,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.extendsApplication(element, valid);
 
-		validatorHelper.registeredInManifest(element, manifest, valid);
+		validatorHelper.upperclassOfRegisteredApplication(element, manifest, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AppValidator.java
Patch:
@@ -51,7 +51,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.extendsApplication(element, valid);
 
-		validatorHelper.registeredInManifest(element, manifest, valid);
+		validatorHelper.upperclassOfRegisteredApplication(element, manifest, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/OptionsItemValidator.java
Patch:
@@ -54,7 +54,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.idsExists(element, Res.ID, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -73,7 +73,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		// Special case for loading animations
 		if ("android.view.animation.Animation".equals(fieldType)) {
 			JClass animationUtils = holder.refClass("android.view.animation.AnimationUtils");
-			methodBody.assign(JExpr.ref(fieldName), animationUtils.staticInvoke("loadAnimation").arg(JExpr._this()).arg(idRef));
+			methodBody.assign(JExpr.ref(fieldName), animationUtils.staticInvoke("loadAnimation").arg(holder.contextRef).arg(idRef));
 		} else {
 			if (holder.resources == null)
 				holder.resources = methodBody.decl(holder.refClass("android.content.res.Resources"), "resources_", holder.contextRef.invoke("getResources"));

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/CustomFrameLayoutTest.java
Patch:
@@ -23,12 +23,12 @@
 import com.xtremelabs.robolectric.RobolectricTestRunner;
 
 @RunWith(RobolectricTestRunner.class)
-public class BasicComponentTest {
+public class CustomFrameLayoutTest {
 
 	@Test
 	public void shouldHaveLayoutAfterCreate() {
 		EmptyActivityWithoutLayout activity = new EmptyActivityWithoutLayout_();
-		BasicComponent component = new BasicComponent_(activity, 0);
+		CustomFrameLayout component = new CustomFrameLayout_(activity, 0);
 		component.onFinishInflate();
 		assertThat(component.subtitle).isNotNull();
 		assertThat(component.tv).isNotNull();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -146,8 +146,8 @@ public void isNotPrivate(Element element, IsValid valid) {
 			annotationHelper.printAnnotationError(element, "%s cannot be used on a private element");
 		}
 	}
-
-	public void enclosingElementHasEnhanced(Element element, AnnotationElements validatedElements, IsValid valid) {
+	
+	public void enclosingElementHasEnhancedAnnotation(Element element, AnnotationElements validatedElements, IsValid valid) {
 		Element enclosingElement = element.getEnclosingElement();
 		hasClassAnnotation(element, enclosingElement, validatedElements, Enhanced.class, valid);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RootContextValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhanced(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedAnnotation(element, validatedElements, valid);
 
 		validatorHelper.extendsContext(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -73,7 +73,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		// Special case for loading animations
 		if ("android.view.animation.Animation".equals(fieldType)) {
 			JClass animationUtils = holder.refClass("android.view.animation.AnimationUtils");
-			methodBody.assign(JExpr.ref(fieldName), animationUtils.staticInvoke("loadAnimation").arg(JExpr._this()).arg(idRef));
+			methodBody.assign(JExpr.ref(fieldName), animationUtils.staticInvoke("loadAnimation").arg(holder.contextRef).arg(idRef));
 		} else {
 			if (holder.resources == null)
 				holder.resources = methodBody.decl(holder.refClass("android.content.res.Resources"), "resources_", holder.contextRef.invoke("getResources"));

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EViewGroupProcessor.java
Patch:
@@ -86,6 +86,8 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder eBeansHo
 		JClass eBeanClass = codeModel.directClass(eBeanQualifiedName);
 
 		holder.eBean._extends(eBeanClass);
+		
+		holder.eBean.annotate(SuppressWarnings.class).param("value", "unused");
 
 		{
 			// init

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/PrefValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivityOrEAppWidgetProvider(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -123,7 +123,7 @@ public void uniqueId(Element element, AnnotationElements validatedElements, IsVa
 
 	public void idListenerMethod(Element element, AnnotationElements validatedElements, IsValid valid) {
 
-		enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		idsExists(element, Res.ID, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterViewsValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AppValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		validatorHelper.extendsApplication(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -43,7 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	public boolean validate(Element element, AnnotationElements validatedElements) {
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/InjectValidator.java
Patch:
@@ -46,7 +46,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ResValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		TypeMirror fieldTypeMirror = element.asType();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RestServiceValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -46,7 +46,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/SystemServiceValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.androidService(androidSystemServices, element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TraceValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		TypeMirror uiFieldTypeMirror = element.asType();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java
Patch:
@@ -27,6 +27,8 @@
  * adapter, at the selected position. It may be of any type, so be careful about
  * potential ClassCastException.
  * 
+ * If the parameter is an int, it will be the position instead of the object from the adapter.
+ * 
  * The annotation value should be one of R.id.* fields. If not set, the method
  * name will be used as the R.id.* field name.
  * 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -27,6 +27,8 @@
  * adapter, at the selected position. It may be of any type, so be careful about
  * potential ClassCastException.
  * 
+ * If the parameter is an int, it will be the position instead of the object from the adapter.
+ * 
  * The annotation value should be one of R.id.* fields. If not set, the method
  * name will be used as the R.id.* field name..
  * 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java
Patch:
@@ -23,10 +23,12 @@
 /**
  * Should be used on item selected listener methods for AdapterView classes
  * 
- * The method may have 1 or 2 parameter. The first parameter must be a boolean,
+ * The method may have 1 or 2 parameters. The first parameter must be a boolean,
  * and the second is the object from the adapter, at the selected position. It
  * may be of any type, so be careful about potential ClassCastException.
  * 
+ * If the second parameter is an int, it will be the position instead of the object from the adapter.
+ * 
  * The first boolean parameter indicates if something has been selected or not.
  * If nothing was selected, the second parameter will be null.
  * 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -136,7 +136,7 @@ public void isNotPrivate(Element element, IsValid valid) {
 		}
 	}
 	
-	public void enclosingElementHasEnhanced(Element element, AnnotationElements validatedElements, IsValid valid) {
+	public void enclosingElementHasEnhancedAnnotation(Element element, AnnotationElements validatedElements, IsValid valid) {
 		Element enclosingElement = element.getEnclosingElement();
 		hasEnhanced(element, enclosingElement, validatedElements, valid);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RootContextValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhanced(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedAnnotation(element, validatedElements, valid);
 
 		validatorHelper.extendsContext(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -17,7 +17,6 @@
 
 import static com.sun.codemodel.JExpr._new;
 import static com.sun.codemodel.JExpr._this;
-import static com.sun.codemodel.JExpr.invoke;
 import static com.sun.codemodel.JMod.FINAL;
 import static com.sun.codemodel.JMod.PRIVATE;
 import static com.sun.codemodel.JMod.PUBLIC;
@@ -50,7 +49,6 @@
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
-import com.sun.codemodel.JDefinedClass;
 import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JFieldVar;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -123,7 +123,7 @@ public void uniqueId(Element element, AnnotationElements validatedElements, IsVa
 
 	public void idListenerMethod(Element element, AnnotationElements validatedElements, IsValid valid) {
 
-		enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		idsExists(element, Res.ID, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterViewsValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AppValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		validatorHelper.extendsApplication(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -43,7 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	public boolean validate(Element element, AnnotationElements validatedElements) {
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/InjectValidator.java
Patch:
@@ -46,7 +46,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ResValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		TypeMirror fieldTypeMirror = element.asType();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RestServiceValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -46,7 +46,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/SystemServiceValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.androidService(androidSystemServices, element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TraceValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedComponentAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEnhancedViewSupportAnnotation(element, validatedElements, valid);
 
 		TypeMirror uiFieldTypeMirror = element.asType();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -436,7 +436,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 			modelProcessor.register(new ResProcessor(androidRes, rClass));
 		}
 		modelProcessor.register(new TransactionalProcessor());
-		modelProcessor.register(new ExtraProcessor());
+		modelProcessor.register(new ExtraProcessor(processingEnv));
 		modelProcessor.register(new SystemServiceProcessor(androidSystemServices));
 		modelProcessor.register(new BeforeCreateProcessor());
 		modelProcessor.register(new AfterViewsProcessor());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Extra.java
Patch:
@@ -24,6 +24,8 @@
  * Use on Extra fields in activity classes. This String value field correspond
  * to the Android extra name.
  * 
+ * If {@link Extra} is used on fields in an Activity, the intent builder will hold dedicated methods for these extras.
+ * 
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ExtraInjectedActivity.java
Patch:
@@ -27,7 +27,7 @@ public class ExtraInjectedActivity extends Activity {
 
 	@Extra("stringExtra")
 	String stringExtra;
-
+	
 	@Extra("arrayExtra")
 	CustomData[] arrayExtra;
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ViewsInjectedActivity.java
Patch:
@@ -43,6 +43,7 @@ public class ViewsInjectedActivity extends Activity {
 	@AfterViews
 	void incrementCounter() {
 		counter++;
+		startActivityForResult(ActivityWithServices_.intent(this).flags(0).get(), 0);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EViewGroup.java
Patch:
@@ -21,11 +21,9 @@
 import java.lang.annotation.Target;
 
 /**
- * Should be used on custom component classes to enable usage of
+ * Should be used on custom classes that extend ViewGroup to enable usage of
  * AndroidAnnotations
  * 
- * A custom component should extends ViewGroup.
- * 
  * Any view related code should happen in an {@link AfterViews} annotated
  * method.<br>
  * <br>

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AfterViewsProcessor.java
Patch:
@@ -31,7 +31,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/BeforeCreateProcessor.java
Patch:
@@ -36,15 +36,15 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
 
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 		List<? extends VariableElement> parameters = executableElement.getParameters();
 		boolean hasBundleParameter = parameters.size() == 1;
 
-		JInvocation methodCall = holder.beforeCreate.body().invoke(methodName);
+		JInvocation methodCall = holder.init.body().invoke(methodName);
 
 		if (hasBundleParameter) {
 			methodCall.arg(holder.beforeCreateSavedInstanceStateParam);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -53,7 +53,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
 
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EBeansHolder.java
Patch:
@@ -30,7 +30,7 @@ public EBeanHolder create(Element activityElement) {
 		return activityHolder;
 	}
 
-	public EBeanHolder getEnclosingActivityHolder(Element enclosedElement) {
+	public EBeanHolder getEnclosingEBeanHolder(Element enclosedElement) {
 		Element activityElement = enclosedElement.getEnclosingElement();
 		return EBeanHolders.get(activityElement);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -44,7 +44,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) throws Exception {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String fieldName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FullscreenProcessor.java
Patch:
@@ -40,7 +40,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		JFieldRef fullScreen = holder.refClass("android.view.WindowManager.LayoutParams").staticRef("FLAG_FULLSCREEN");
 
 		JInvocation arg = JExpr.invoke(JExpr.invoke("getWindow"), "setFlags").arg(fullScreen).arg(fullScreen);
-		holder.beforeCreate.body().add(arg);
+		holder.init.body().add(arg);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -53,7 +53,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -55,7 +55,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -52,7 +52,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -55,7 +55,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/NoTitleProcessor.java
Patch:
@@ -37,7 +37,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JFieldRef noTitle = holder.refClass("android.view.Window").staticRef("FEATURE_NO_TITLE");
 
-		holder.beforeCreate.body().invoke("requestWindowFeature").arg(noTitle);
+		holder.init.body().invoke("requestWindowFeature").arg(noTitle);
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -56,7 +56,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/PrefProcessor.java
Patch:
@@ -35,18 +35,18 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String fieldName = element.getSimpleName().toString();
 
 		TypeMirror fieldTypeMirror = element.asType();
 		String fieldType = fieldTypeMirror.toString();
 
-		JBlock methodBody = holder.beforeCreate.body();
+		JBlock methodBody = holder.init.body();
 
 		JFieldRef field = JExpr.ref(fieldName);
 
-		methodBody.assign(field, JExpr._new(holder.refClass(fieldType)).arg(JExpr._this()));
+		methodBody.assign(field, JExpr._new(holder.refClass(fieldType)).arg(holder.contextRef));
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RestServiceProcessor.java
Patch:
@@ -36,7 +36,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String fieldName = element.getSimpleName().toString();
 
@@ -45,7 +45,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		String generatedClassName = interfaceName + ModelConstants.GENERATION_SUFFIX;
 
-		JBlock methodBody = holder.beforeCreate.body();
+		JBlock methodBody = holder.init.body();
 
 		JFieldRef field = JExpr.ref(fieldName);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/RoboGuiceProcessor.java
Patch:
@@ -285,7 +285,7 @@ private void beforeCreateMethod(EBeanHolder holder, JFieldVar scope, JFieldVar e
 		JClass injectorClass = holder.refClass("com.google.inject.Injector");
 		JClass eventManagerClass = holder.refClass("roboguice.event.EventManager");
 
-		JBlock body = holder.beforeCreate.body();
+		JBlock body = holder.init.body();
 		JVar injector = body.decl(injectorClass, "injector_", invoke(getInjector));
 		body.assign(scope, invoke(injector, "getInstance").arg(contextScopeClass.dotclass()));
 		body.invoke(scope, "enter").arg(_this());

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -43,7 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
 
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String fieldName = element.getSimpleName().toString();
 
@@ -52,9 +52,9 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 
 		JFieldRef serviceRef = androidSystemServices.getServiceConstant(serviceType, holder);
 
-		JBlock methodBody = holder.beforeCreate.body();
+		JBlock methodBody = holder.init.body();
 
-		methodBody.assign(JExpr.ref(fieldName), JExpr.cast(holder.refClass(fieldTypeQualifiedName), JExpr.invoke("getSystemService").arg(serviceRef)));
+		methodBody.assign(JExpr.ref(fieldName), JExpr.cast(holder.refClass(fieldTypeQualifiedName), holder.contextRef.invoke("getSystemService").arg(serviceRef)));
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -54,7 +54,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TraceProcessor.java
Patch:
@@ -47,7 +47,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 		ExecutableElement executableElement = (ExecutableElement) element;
 
 		String tag = extractTag(executableElement);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TransactionalProcessor.java
Patch:
@@ -44,7 +44,7 @@ public Class<? extends Annotation> getTarget() {
 
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String methodName = element.getSimpleName().toString();
 		ExecutableElement executableElement = (ExecutableElement) element;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ViewByIdProcessor.java
Patch:
@@ -46,7 +46,7 @@ public Class<? extends Annotation> getTarget() {
 	@Override
 	public void process(Element element, JCodeModel codeModel, EBeansHolder activitiesHolder) {
 
-		EBeanHolder holder = activitiesHolder.getEnclosingActivityHolder(element);
+		EBeanHolder holder = activitiesHolder.getEnclosingEBeanHolder(element);
 
 		String fieldName = element.getSimpleName().toString();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AppValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.extendsApplication(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -43,7 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	public boolean validate(Element element, AnnotationElements validatedElements) {
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ResValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		TypeMirror fieldTypeMirror = element.asType();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RestServiceValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -46,7 +46,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/SystemServiceValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.androidService(androidSystemServices, element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TraceValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEBeanAnnotation(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/prefs/ActivityPrefs.java
Patch:
@@ -19,5 +19,5 @@
 
 @SharedPref
 public interface ActivityPrefs {
-
+	
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/prefs/PrefsActivity.java
Patch:
@@ -26,7 +26,7 @@ public class PrefsActivity extends Activity {
 
 	@Pref
 	SomePrefs_ somePrefs;
-
+	
 	@Pref
 	ActivityDefaultPrefs_ activityDefaultPrefs;
 

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/LongClicksHandledActivityTest.java
Patch:
@@ -5,7 +5,7 @@
  * use this file except in compliance with the License. You may obtain a copy of
  * the License at
  *
- * http:www.apache.org/licenses/LICENSE-2.0
+ * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed To in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/AbstractActivity.java
Patch:
@@ -7,9 +7,9 @@
 import com.googlecode.androidannotations.annotations.ViewById;
 
 @EActivity(R.layout.views_injected)
-public abstract class AbstractActivity extends Activity{
+public abstract class AbstractActivity extends Activity {
 
 	@ViewById
 	Button myButton;
-	
+
 }

File: AndroidAnnotations/rest-api-test-1-5/src/main/java/com/googlecode/androidannotations/test15/rest/MyService.java
Patch:
@@ -82,4 +82,5 @@ public interface MyService {
 	// if you need to add some configuration to the Spring RestTemplate.
 	RestTemplate getRestTemplate();
 	
+	void setRestTemplate(RestTemplate restTemplate);
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/EventsHandledAbstractActivity.java
Patch:
@@ -18,9 +18,6 @@
 import android.app.Activity;
 import android.view.View;
 
-import com.googlecode.androidannotations.annotations.EActivity;
-
-@EActivity
 public abstract class EventsHandledAbstractActivity extends Activity {
 
 	View viewArgument;

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/EventsHandledAbstractActivity.java
Patch:
@@ -18,9 +18,6 @@
 import android.app.Activity;
 import android.view.View;
 
-import com.googlecode.androidannotations.annotations.EActivity;
-
-@EActivity
 public abstract class EventsHandledAbstractActivity extends Activity {
 
 	View viewArgument;

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/AbstractActivityTest.java
Patch:
@@ -29,7 +29,7 @@ public class AbstractActivityTest {
 
 	@Test
 	public void abstractActivityMustGenerateAbstractActivity() {
-		int modifiers = AbstractActivity_.class.getModifiers();
+		int modifiers = EventsHandledAbstractActivity.class.getModifiers();
 
 		assertThat(Modifier.isAbstract(modifiers)).isTrue();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/OptionsProcessor.java
Patch:
@@ -71,7 +71,6 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 	protected JInvocation addResultCallMethod(JInvocation restCall, MethodProcessorHolder methodHolder) {
 		restCall = JExpr.invoke(restCall, "getHeaders");
 		restCall = JExpr.invoke(restCall, "getAllow");
-
 		return restCall;
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/PutProcessor.java
Patch:
@@ -50,9 +50,7 @@ public void process(Element element, JCodeModel codeModel, EBeansHolder activiti
 		String urlSuffix = putAnnotation.value();
 		String url = holder.urlPrefix + urlSuffix;
 
-		// TODO A tester impérativement !!
 		generateRestTemplateCallBlock(new MethodProcessorHolder(executableElement, url, null, null, codeModel));
-
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -301,7 +301,7 @@ public void typeHasAnnotation(Class<? extends Annotation> annotation, Element el
 	private boolean elementHasAnnotationSafe(Class<? extends Annotation> annotation, Element element) {
 		List<? extends AnnotationMirror> annotationMirrors = element.getAnnotationMirrors();
 		for (AnnotationMirror annotationMirror : annotationMirrors) {
-			if (annotationMirror.toString().equals("@" + annotation.getName())) {
+			if (annotationMirror.getAnnotationType().toString().equals(annotation.getName())) {
 				return true;
 			}
 		}

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/TracedActivity.java
Patch:
@@ -77,12 +77,12 @@ void voidTracedMethodInfo() {
 	}
 
 	@Trace
-	void overLoaddedMethod(int x) {
+	void overloadedMethod(int x) {
 		overLoaddedMethodInt = true;
 	}
 
 	@Trace
-	void overLoaddedMethod(int x, float f) {
+	void overloadedMethod(int x, float f) {
 		overLoaddedMethodIntFLoat = true;
 	}
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/HeadProcessor.java
Patch:
@@ -51,12 +51,12 @@ protected JInvocation addResultCallMethod(JInvocation restCall, MethodProcessorH
 
 	@Override
 	protected JInvocation addHttpEntityVar(JInvocation restCall, MethodProcessorHolder methodHolder) {
-		return restCall;
+		return restCall.arg(JExpr._null());
 	}
 
 	@Override
 	protected JInvocation addResponseEntityArg(JInvocation restCall, MethodProcessorHolder methodHolder) {
-		return restCall;
+		return restCall.arg(JExpr._null());
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/rest/OptionsProcessor.java
Patch:
@@ -62,12 +62,12 @@ protected JInvocation addResultCallMethod(JInvocation restCall, MethodProcessorH
 
 	@Override
 	protected JInvocation addHttpEntityVar(JInvocation restCall, MethodProcessorHolder methodHolder) {
-		return restCall;
+		return restCall.arg(JExpr._null());
 	}
 
 	@Override
 	protected JInvocation addResponseEntityArg(JInvocation restCall, MethodProcessorHolder methodHolder) {
-		return restCall;
+		return restCall.arg(JExpr._null());
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -34,7 +34,6 @@
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCase;
 import com.sun.codemodel.JCodeModel;
-import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;
 import com.sun.codemodel.JMethod;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/OptionsItemProcessor.java
Patch:
@@ -34,7 +34,6 @@
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JCase;
 import com.sun.codemodel.JCodeModel;
-import com.sun.codemodel.JExpr;
 import com.sun.codemodel.JFieldRef;
 import com.sun.codemodel.JInvocation;
 import com.sun.codemodel.JMethod;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -37,6 +37,7 @@
 
 /** 
  * @author Mathieu Boniface
+ * @author Pierre-Yves
  */
 public class ClickProcessor extends MultipleResIdsBasedProcessor implements ElementProcessor {
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/rclass/IRClass.java
Patch:
@@ -19,7 +19,7 @@
 public interface IRClass {
 
 	public enum Res {
-    	LAYOUT, ID, STRING, ARRAY, COLOR, ANIM, BOOL, DIMEN, DRAWABLE, INTEGER, MOVIE;
+    	LAYOUT, ID, STRING, ARRAY, COLOR, ANIM, BOOL, DIMEN, DRAWABLE, INTEGER, MOVIE, MENU;
     	public String rName() {
     		return toString().toLowerCase();
     	}

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ClicksHandledActivity.java
Patch:
@@ -42,7 +42,7 @@ public void conventionButton() {
 	public void snakeCaseButton() {
 		snakeCaseButtonClicked = true;
 	}	
-
+	
 	@Click
 	public void extendedConventionButtonClicked() {
 		extendedConventionButtonClicked = true;

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/ServiceInjectionTest.java
Patch:
@@ -45,6 +45,7 @@ public void servicesAreInjected() {
     	assertThat(activity.inputMethodManager).isNotNull();
     	assertThat(activity.sensorManager).isNotNull();
     	assertThat(activity.telephonyManager).isNotNull();
+    	assertThat(activity.audioManager).isNotNull();
     }
     
     

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/ServiceInjectionTest.java
Patch:
@@ -44,6 +44,7 @@ public void servicesAreInjected() {
     	assertThat(activity.wifiManager).isNotNull();
     	assertThat(activity.inputMethodManager).isNotNull();
     	assertThat(activity.sensorManager).isNotNull();
+    	assertThat(activity.telephonyManager).isNotNull();
     }
     
     

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -44,7 +44,8 @@ public AndroidSystemServices() {
         registeredServices.put("android.app.UiModeManager", "android.content.Context.UI_MODE_SERVICE");
         registeredServices.put("android.app.DownloadManager", "android.content.Context.DOWNLOAD_SERVICE");
         registeredServices.put("android.hardware.SensorManager", "android.content.Context.SENSOR_SERVICE");
-        registeredServices.put("android.text.ClipboardManager", "android.content.Context.CLIPBOARD_SERVICE");        
+        registeredServices.put("android.text.ClipboardManager", "android.content.Context.CLIPBOARD_SERVICE"); 
+        registeredServices.put("android.telephony.TelephonyManager", "android.content.Context.TELEPHONY_SERVICE");        
     }
 
     public boolean contains(TypeMirror serviceType) {

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/SharedPrefValidator.java
Patch:
@@ -61,6 +61,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
                 boolean isPrefMethod = validatorHelper.isPrefMethod(memberElement);
                 if (isPrefMethod) {
                     validatorHelper.hasCorrectDefaultAnnotation((ExecutableElement) memberElement);
+                } else {
+                	valid.invalidate();
                 }
             }
         }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/prefs/SomePrefs.java
Patch:
@@ -28,4 +28,7 @@ public interface SomePrefs {
 	
 	@DefaultInt(42)
 	int age();
+	
+	long lastUpdated();
+	
 }

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ClicksHandledActivity.java
Patch:
@@ -63,7 +63,7 @@ public void buttonWithViewArgument(View viewArgument) {
 	}
 
 	@Click({R.id.button1, R.id.button2})
-	public void multpleButtonWithViewArgument(View viewArgument) {
+	public void multipleButtonWithViewArgument(View viewArgument) {
 		this.viewArgument = viewArgument;
 		multipleButtonsClicked = true;
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/PrefValidator.java
Patch:
@@ -21,7 +21,6 @@
 import javax.lang.model.element.Element;
 
 import com.googlecode.androidannotations.annotations.sharedpreferences.Pref;
-import com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper;
 import com.googlecode.androidannotations.helper.TargetAnnotationHelper;
 import com.googlecode.androidannotations.helper.ValidatorHelper;
 import com.googlecode.androidannotations.model.AnnotationElements;
@@ -49,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 	    validatorHelper.isNotPrivate(element, valid);
 	    
-	    validatorHelper.extendsType(element, SharedPreferencesHelper.class.getName(), valid);
+	    validatorHelper.isSharedPreference(element, validatedElements, valid);
 	    
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/PrefValidator.java
Patch:
@@ -21,7 +21,6 @@
 import javax.lang.model.element.Element;
 
 import com.googlecode.androidannotations.annotations.sharedpreferences.Pref;
-import com.googlecode.androidannotations.api.sharedpreferences.SharedPreferencesHelper;
 import com.googlecode.androidannotations.helper.TargetAnnotationHelper;
 import com.googlecode.androidannotations.helper.ValidatorHelper;
 import com.googlecode.androidannotations.model.AnnotationElements;
@@ -49,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 	    validatorHelper.isNotPrivate(element, valid);
 	    
-	    validatorHelper.extendsType(element, SharedPreferencesHelper.class.getName(), valid);
+	    validatorHelper.isSharedPreference(element, validatedElements, valid);
 	    
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/Click.java
Patch:
@@ -34,4 +34,5 @@
 @Target(ElementType.METHOD)
 public @interface Click {
 	int value() default Id.DEFAULT_VALUE;
+	int [] ids() default {};
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/FromHtmlProcessor.java
Patch:
@@ -39,8 +39,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
 		IRInnerClass rInnerClass = rClass.get(Res.STRING);
 		JFieldRef idRef;
 		if (idValue == Id.DEFAULT_VALUE) {
-			// TODO: Implement a default value behavior
-			throw new UnsupportedOperationException("The default value support for FromHtml is not supported yet");
+			idRef = rInnerClass.getIdStaticRef(fieldName, holder);
 		} else {
 			idRef = rInnerClass.getIdStaticRef(idValue, holder);
 		}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/BooleanPrefField.java
Patch:
@@ -27,10 +27,10 @@ public final class BooleanPrefField extends AbstractPrefField {
 	}
 
 	public boolean get() {
-		return get(defaultValue);
+		return getOr(defaultValue);
 	}
 
-	public boolean get(boolean defaultValue) {
+	public boolean getOr(boolean defaultValue) {
 		return sharedPreferences.getBoolean(key, defaultValue);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/FloatPrefField.java
Patch:
@@ -27,10 +27,10 @@ public final class FloatPrefField extends AbstractPrefField {
 	}
 
 	public float get() {
-		return get(defaultValue);
+		return getOr(defaultValue);
 	}
 
-	public float get(float defaultValue) {
+	public float getOr(float defaultValue) {
 		return sharedPreferences.getFloat(key, defaultValue);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/IntPrefField.java
Patch:
@@ -27,10 +27,10 @@ public final class IntPrefField extends AbstractPrefField {
 	}
 
 	public int get() {
-		return get(defaultValue);
+		return getOr(defaultValue);
 	}
 
-	public int get(int defaultValue) {
+	public int getOr(int defaultValue) {
 		return sharedPreferences.getInt(key, defaultValue);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/LongPrefField.java
Patch:
@@ -27,10 +27,10 @@ public final class LongPrefField extends AbstractPrefField {
 	}
 
 	public long get() {
-		return get(defaultValue);
+		return getOr(defaultValue);
 	}
 
-	public long get(long defaultValue) {
+	public long getOr(long defaultValue) {
 		return sharedPreferences.getLong(key, defaultValue);
 	}
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/api/sharedpreferences/StringPrefField.java
Patch:
@@ -27,10 +27,10 @@ public final class StringPrefField extends AbstractPrefField {
 	}
 
 	public String get() {
-		return get(defaultValue);
+		return getOr(defaultValue);
 	}
 
-	public String get(String defaultValue) {
+	public String getOr(String defaultValue) {
 		return sharedPreferences.getString(key, defaultValue);
 	}
 

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/prefs/PrefsActivityTest.java
Patch:
@@ -130,7 +130,7 @@ public void defaultValue() {
 
     @Test
     public void overridenDefaultValue() {
-        assertThat(somePrefs.name().get("Smith")).isEqualTo("Smith");
+        assertThat(somePrefs.name().getOr("Smith")).isEqualTo("Smith");
     }
 
     @Test

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/FromHtmlActivity.java
Patch:
@@ -10,7 +10,7 @@
 @EActivity(R.layout.views_injected)
 public class FromHtmlActivity extends Activity {
 	
-	@ViewById(R.id.injected_text_view)
-	@FromHtml(R.string.hello)
+	@ViewById(R.id.my_text_view)
+	@FromHtml(R.string.hello_html)
 	TextView textView;
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -44,6 +44,7 @@ public AndroidSystemServices() {
         registeredServices.put("android.app.UiModeManager", "android.content.Context.UI_MODE_SERVICE");
         registeredServices.put("android.app.DownloadManager", "android.content.Context.DOWNLOAD_SERVICE");
         registeredServices.put("android.hardware.SensorManager", "android.content.Context.SENSOR_SERVICE");
+        registeredServices.put("android.text.ClipboardManager", "android.content.Context.CLIPBOARD_SERVICE");        
     }
 
     public boolean contains(TypeMirror serviceType) {

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/ViewsInjectedActivity.java
Patch:
@@ -34,12 +34,12 @@ public class ViewsInjectedActivity extends Activity {
 	@ViewById
 	Button myButton;
 
-	@ViewById(R.id.myTextView)
+	@ViewById(R.id.my_text_view)
 	TextView someView;
 
 	@ViewById
 	TextView myTextView;
-
+	
 	@AfterViews
 	void incrementCounter() {
 		counter++;

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/ViewsInjectedActivityTest.java
Patch:
@@ -43,7 +43,7 @@ public void injectionWithConventionIsDone() {
 	
 	@Test
 	public void injectionWithConfigurationOverridesConvention() {
-		assertThat(activity.someView).hasId(R.id.myTextView);
+		assertThat(activity.someView).hasId(R.id.my_text_view);
 	}
 	
 	@Test

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/AfterViews.java
Patch:
@@ -21,7 +21,6 @@
 import java.lang.annotation.Target;
 
 import android.app.Activity;
-import android.os.Bundle;
 
 /**
  * Methods annotated with @{@link AfterViews} will be called after
@@ -30,7 +29,7 @@
  * This occurs after <b>super.onCreate() is called</b>. Any view depending code
  * should be done in an {@link AfterViews} annotated method.
  * 
- * The method may have zero or one parameter, that must be a {@link Bundle}.
+ * The method must have zero parameters.
  * 
  * There may be several methods annotated with @{@link AfterViews} in the same
  * activity.

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ActivityHolder.java
Patch:
@@ -30,7 +30,6 @@ public class ActivityHolder {
     public JDefinedClass activity;
     public JMethod beforeCreate;
     public JVar beforeCreateSavedInstanceStateParam;
-    public JVar afterSetContentViewSavedInstanceStateParam;
     public JMethod afterSetContentView;
     public JBlock extrasNotNullBlock;
     public JVar extras;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/AfterViewsValidator.java
Patch:
@@ -56,6 +56,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		validatorHelper.isNotPrivate(element, valid);
 
 		validatorHelper.doesntThrowException(executableElement, valid);
+		
+		validatorHelper.zeroParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/BeforeCreateValidator.java
Patch:
@@ -56,6 +56,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		validatorHelper.isNotPrivate(element, valid);
 
 		validatorHelper.doesntThrowException(executableElement, valid);
+		
+		validatorHelper.zeroOrOneBundleParameter(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/AbstractActivity.java
Patch:
@@ -19,5 +19,5 @@
 
 import com.googlecode.androidannotations.annotations.EActivity;
 
-@EActivity(isFinal = false)
-public class NotFinalActivity extends Activity {}
+@EActivity
+public abstract class AbstractActivity extends Activity {}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -35,4 +35,5 @@
 @Target(ElementType.TYPE)
 public @interface EActivity {
     int value() default Id.DEFAULT_VALUE;
+    boolean isFinal() default true;
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -208,13 +208,13 @@ public synchronized void init(ProcessingEnvironment processingEnv) {
     @Override
     public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {
     	timeStats.clear();
-    	timeStats.start("whole");
+    	timeStats.start("Whole Processing");
         try {
             processThrowing(annotations, roundEnv);
         } catch (Exception e) {
             handleException(annotations, roundEnv, e);
         }
-        timeStats.stop("whole");
+        timeStats.stop("Whole Processing");
         timeStats.logStats();
         return true;
     }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -87,7 +87,7 @@ public void uniqueId(Element element, AnnotationElements validatedElements, IsVa
 
 	public void idListenerMethod(Element element, AnnotationElements validatedElements, IsValid valid) {
 		
-		viewMayExist(element, validatedElements, valid);
+	    enclosingElementHasEActivity(element, validatedElements, valid);
 
 		idExists(element, Res.ID, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/AppProcessor.java
Patch:
@@ -46,7 +46,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
         TypeMirror elementType = element.asType();
         
         
-        JBlock methodBody = holder.beforeSetContentView.body();
+        JBlock methodBody = holder.beforeCreate.body();
         
         JInvocation getApplication = invoke("getApplication");
         

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -61,7 +61,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
 		}
 		
 
-		JBlock methodBody = holder.beforeSetContentView.body();
+		JBlock methodBody = holder.beforeCreate.body();
 
 		if (holder.extras == null) {
 			holder.extras = methodBody.decl(holder.bundleClass, "extras_");

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/PrefProcessor.java
Patch:
@@ -43,7 +43,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
         TypeMirror fieldTypeMirror = element.asType();
         String fieldType = fieldTypeMirror.toString();
 		
-		JBlock methodBody = holder.beforeSetContentView.body();
+		JBlock methodBody = holder.beforeCreate.body();
 		
 		JFieldRef field = JExpr.ref(fieldName);
 		

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -64,7 +64,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
             idRef = rInnerClass.getIdStaticRef(idValue, holder);
         }
 
-        JBlock methodBody = holder.beforeSetContentView.body();
+        JBlock methodBody = holder.beforeCreate.body();
 
         TypeMirror fieldTypeMirror = element.asType();
         String fieldType = fieldTypeMirror.toString();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -52,7 +52,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
 
         JFieldRef serviceRef = androidSystemServices.getServiceConstant(serviceType, holder);
 
-        JBlock methodBody = holder.beforeSetContentView.body();
+        JBlock methodBody = holder.beforeCreate.body();
 
         methodBody.assign(JExpr.ref(fieldName), JExpr.cast(holder.refClass(fieldTypeQualifiedName), JExpr.invoke("getSystemService").arg(serviceRef)));
     }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/BeforeCreateValidator.java
Patch:
@@ -21,7 +21,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.BeforeViews;
+import com.googlecode.androidannotations.annotations.BeforeCreate;
 import com.googlecode.androidannotations.helper.TargetAnnotationHelper;
 import com.googlecode.androidannotations.helper.ValidatorHelper;
 import com.googlecode.androidannotations.model.AnnotationElements;
@@ -37,7 +37,7 @@ public BeforeCreateValidator(ProcessingEnvironment processingEnv) {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
-		return BeforeViews.class;
+		return BeforeCreate.class;
 	}
 
 	@Override

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.viewMayExist(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		TypeMirror uiFieldTypeMirror = element.asType();
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidRes.java
Patch:
@@ -44,7 +44,7 @@ public enum AndroidRes {
 
 	STRING(Res.STRING, StringRes.class, "getString", "java.lang.String"), //
 	STRING_ARRAY(Res.ARRAY, StringArrayRes.class, "getStringArray", "java.lang.String[]"), //
-	ANIMATION(Res.ANIM, AnimationRes.class, "getAnimation", "android.content.res.XmlResourceParser"), //
+	ANIMATION(Res.ANIM, AnimationRes.class, "getAnimation", "android.content.res.XmlResourceParser", "android.view.animation.Animation"), //
 	BOOLEAN(Res.BOOL, BooleanRes.class, "getBoolean", "java.lang.Boolean", "boolean"), //
 	COLOR_STATE_LIST(Res.COLOR, ColorStateListRes.class, "getColorStateList", "android.content.res.ColorStateList"), //
 	DIMENSION(Res.DIMEN, DimensionRes.class, "getDimension", "java.lang.Float", "float"), //
@@ -95,7 +95,6 @@ public int idFromElement(Element element) {
 		} catch (Exception e) {
 			throw new RuntimeException(e);
 		}
-
 	}
 
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/SharedPrefProcessor.java
Patch:
@@ -26,7 +26,6 @@
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.TypeElement;
 import javax.lang.model.util.ElementFilter;
-import javax.lang.model.util.Elements;
 
 import com.googlecode.androidannotations.annotations.sharedpreferences.DefaultBoolean;
 import com.googlecode.androidannotations.annotations.sharedpreferences.DefaultFloat;

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ActivityHolder.java
Patch:
@@ -20,6 +20,8 @@ public class ActivityHolder {
     public JVar extras;
     public JClass bundleClass;
     public JVar resources;
+    
+    public JMethod cast;
 
     private Map<String, JClass> loadedClasses = new HashMap<String, JClass>();
     public JFieldVar handler;
@@ -35,7 +37,7 @@ public JClass refClass(String fullyQualifiedClassName) {
 
         return refClass;
     }
-
+    
     public JClass refClass(Class<?> clazz) {
         return activity.owner().ref(clazz);
     }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -51,5 +51,5 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		return valid.isValid();
 	}
-
+	
 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -46,6 +46,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
+		
+		validatorHelper.hasExtraValue(element, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -43,6 +43,7 @@ public AndroidSystemServices() {
         registeredServices.put("android.view.inputmethod.InputMethodManager", "android.content.Context.INPUT_METHOD_SERVICE");
         registeredServices.put("android.app.UiModeManager", "android.content.Context.UI_MODE_SERVICE");
         registeredServices.put("android.app.DownloadManager", "android.content.Context.DOWNLOAD_SERVICE");
+        registeredServices.put("android.hardware.SensorManager", "android.content.Context.SENSOR_SERVICE");
     }
 
     public boolean contains(TypeMirror serviceType) {

File: AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/ServiceInjectionTest.java
Patch:
@@ -28,6 +28,7 @@ public void servicesAreInjected() {
     	assertThat(activity.connectivityManager).isNotNull();
     	assertThat(activity.wifiManager).isNotNull();
     	assertThat(activity.inputMethodManager).isNotNull();
+    	assertThat(activity.sensorManager).isNotNull();
     }
     
     

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AndroidSystemServices.java
Patch:
@@ -40,7 +40,7 @@ public AndroidSystemServices() {
         registeredServices.put("android.os.Vibrator", "android.content.Context.VIBRATOR_SERVICE");
         registeredServices.put("android.net.ConnectivityManager", "android.content.Context.CONNECTIVITY_SERVICE");
         registeredServices.put("android.net.wifi.WifiManager", "android.content.Context.WIFI_SERVICE");
-        registeredServices.put("android.view.inputMethod.InputMethodManager", "android.content.Context.INPUT_METHOD_SERVICE");
+        registeredServices.put("android.view.inputmethod.InputMethodManager", "android.content.Context.INPUT_METHOD_SERVICE");
         registeredServices.put("android.app.UiModeManager", "android.content.Context.UI_MODE_SERVICE");
         registeredServices.put("android.app.DownloadManager", "android.content.Context.DOWNLOAD_SERVICE");
     }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/ValidatorHelper.java
Patch:
@@ -768,7 +768,7 @@ public boolean isPrefMethod(Element element) {
             } else {
                 String returnType = executableElement.getReturnType().toString();
                 if (!validPrefReturnTypes.contains(returnType)) {
-                    annotationHelper.printError(element, "Methods should only return preference simple types in an " + annotationHelper.annotationName() + " annotated interface");
+                    annotationHelper.printError(element, "Method " + executableElement.getSimpleName().toString() + " should only return preference simple types in an " + annotationHelper.annotationName() + " annotated interface");
                 } else {
                     return true;
                 }

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -9,7 +9,6 @@
 
 import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.model.AnnotationElements;
-import com.googlecode.androidannotations.processing.EActivityProcessor;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.googlecode.androidannotations.validation.IsValid;
 
@@ -88,12 +87,12 @@ public void activityRegistered(Element element, AndroidManifest androidManifest,
 		TypeElement typeElement = (TypeElement) element;
 
 		String activityQualifiedName = typeElement.getQualifiedName().toString();
-		String generatedActivityQualifiedName = activityQualifiedName + EActivityProcessor.NEW_CLASS_SUFFIX;
+		String generatedActivityQualifiedName = activityQualifiedName + ModelConstants.GENERATION_SUFFIX;
 
 		List<String> activityQualifiedNames = androidManifest.getActivityQualifiedNames();
 		if (!activityQualifiedNames.contains(generatedActivityQualifiedName)) {
 			String simpleName = typeElement.getSimpleName().toString();
-			String generatedSimpleName = simpleName + EActivityProcessor.NEW_CLASS_SUFFIX;
+			String generatedSimpleName = simpleName + ModelConstants.GENERATION_SUFFIX;
 			if (activityQualifiedNames.contains(activityQualifiedName)) {
 				valid.invalidate();
 				annotationHelper.printAnnotationError(element, "The AndroidManifest.xml file contains the original activity, and not the AndroidAnnotations generated activity. Please register " + generatedSimpleName + " instead of " + simpleName);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -30,6 +30,7 @@
 import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.api.SdkVersionHelper;
 import com.googlecode.androidannotations.helper.AnnotationHelper;
+import com.googlecode.androidannotations.helper.ModelConstants;
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.googlecode.androidannotations.rclass.IRInnerClass;
@@ -58,8 +59,6 @@ public Class<? extends Annotation> getTarget() {
         return EActivity.class;
     }
 
-    public static final String NEW_CLASS_SUFFIX = "_";
-
     @Override
     public void process(Element element, JCodeModel codeModel, ActivitiesHolder activitiesHolder) throws Exception {
 
@@ -70,7 +69,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
         // Activity
         String annotatedActivityQualifiedName = typeElement.getQualifiedName().toString();
 
-        String subActivityQualifiedName = annotatedActivityQualifiedName + NEW_CLASS_SUFFIX;
+        String subActivityQualifiedName = annotatedActivityQualifiedName + ModelConstants.GENERATION_SUFFIX;
         holder.activity = codeModel._class(JMod.PUBLIC | JMod.FINAL, subActivityQualifiedName, ClassType.CLASS);
 
         JClass annotatedActivity = codeModel.directClass(annotatedActivityQualifiedName);

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -4,6 +4,7 @@
 import java.util.Set;
 
 import javax.lang.model.element.Element;
+import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.TypeElement;
 
 import com.googlecode.androidannotations.annotations.Id;
@@ -78,7 +79,7 @@ public void idListenerMethod(Element element, AnnotationElements validatedElemen
 
 		isNotPrivate(element, valid);
 
-		doesntThrowException(element, valid);
+		doesntThrowException((ExecutableElement) element, valid);
 
 		uniqueId(element, validatedElements, valid);
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/model/AnnotationElements.java
Patch:
@@ -22,9 +22,12 @@
 import javax.lang.model.element.TypeElement;
 
 public interface AnnotationElements {
+	
+	Set<? extends Element> getAllElements();
 
 	Set<? extends Element> getAnnotatedElements(Class<? extends Annotation> annotationClass);
 
 	TypeElement annotationElementfromAnnotationClass(Class<? extends Annotation> annotationClass);
+	
 
 }
\ No newline at end of file

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/BeforeCreateValidator.java
Patch:
@@ -55,7 +55,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		
 		validatorHelper.isNotPrivate(element, valid);
 
-		validatorHelper.doesntThrowException(element, valid);
+		validatorHelper.doesntThrowException(executableElement, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -54,7 +54,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		validatorHelper.isNotPrivate(element, valid);
 		
-		validatorHelper.doesntThrowException(element, valid);
+		validatorHelper.doesntThrowException(executableElement, valid);
 
 		validatorHelper.isNotFinal(element, valid);
 		

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -48,13 +48,13 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
+		
+		ExecutableElement executableElement = (ExecutableElement) element;
 
-		validatorHelper.doesntThrowException(element, valid);
+		validatorHelper.doesntThrowException(executableElement, valid);
 
 		validatorHelper.isNotFinal(element, valid);
 
-		ExecutableElement executableElement = (ExecutableElement) element;
-
 		validatorHelper.hasOneOrTwoParametersAndFirstIsDb(executableElement, valid);
 		
 		return valid.isValid();

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/EActivityProcessor.java
Patch:
@@ -33,6 +33,7 @@
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
 import com.googlecode.androidannotations.rclass.IRInnerClass;
+import com.sun.codemodel.ClassType;
 import com.sun.codemodel.JBlock;
 import com.sun.codemodel.JClass;
 import com.sun.codemodel.JCodeModel;
@@ -70,7 +71,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
         String annotatedActivityQualifiedName = typeElement.getQualifiedName().toString();
 
         String subActivityQualifiedName = annotatedActivityQualifiedName + NEW_CLASS_SUFFIX;
-        holder.activity = codeModel._class(subActivityQualifiedName);
+        holder.activity = codeModel._class(JMod.PUBLIC | JMod.FINAL, subActivityQualifiedName, ClassType.CLASS);
 
         JClass annotatedActivity = codeModel.directClass(annotatedActivityQualifiedName);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -71,7 +71,8 @@ public void uniqueId(Element element, AnnotationElements validatedElements, IsVa
 	}
 
 	public void idListenerMethod(Element element, AnnotationElements validatedElements, IsValid valid) {
-		enclosingElementHasEActivity(element, validatedElements, valid);
+		
+		viewMayExist(element, validatedElements, valid);
 
 		idExists(element, Res.ID, valid);
 

File: AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
+		validatorHelper.viewMayExist(element, validatedElements, valid);
 
 		TypeMirror uiFieldTypeMirror = element.asType();
 

File: AndroidAnnotations/android-functional-test-1-5/src/main/java/com/googlecode/androidannotations/test15/EmptyActivityWithLayout.java
Patch:
@@ -5,6 +5,6 @@
 import com.googlecode.androidannotations.annotations.EActivity;
 
 @EActivity(R.layout.main)
-public class HelloAndroidActivity extends Activity {
+public class EmptyActivityWithLayout extends Activity {
 }
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/helper/AndroidManifestFinder.java
Patch:
@@ -128,6 +128,7 @@ private AndroidManifest parseThrowing(File androidManifestFile) throws Exception
                         activityQualifiedName = applicationPackage + activityName;
                     } else {
                         activityQualifiedName = applicationPackage + "." + activityName;
+                        activityQualifiedNames.add(activityName);
                     }
                 }
                 activityQualifiedNames.add(activityQualifiedName);

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/ActivityWithExtra.java
Patch:
@@ -4,7 +4,6 @@
 
 import android.app.Activity;
 import android.os.Bundle;
-import android.view.KeyEvent;
 import android.widget.TextView;
 
 import com.googlecode.androidannotations.annotations.EActivity;

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/ActivityWithExtra.java
Patch:
@@ -4,6 +4,7 @@
 
 import android.app.Activity;
 import android.os.Bundle;
+import android.view.KeyEvent;
 import android.widget.TextView;
 
 import com.googlecode.androidannotations.annotations.EActivity;

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -30,7 +30,7 @@
 import javax.tools.Diagnostic;
 
 import com.googlecode.androidannotations.annotations.Background;
-import com.googlecode.androidannotations.annotations.BeforeCreate;
+import com.googlecode.androidannotations.annotations.BeforeViews;
 import com.googlecode.androidannotations.annotations.Click;
 import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.Extra;
@@ -113,7 +113,7 @@
 import com.sun.codemodel.JCodeModel;
 
 @SupportedAnnotationClasses({ EActivity.class, //
-		BeforeCreate.class, //
+		BeforeViews.class, //
 		RoboGuice.class, //
 		ViewById.class, //
 		Click.class, //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/BeforeCreateProcessor.java
Patch:
@@ -22,15 +22,15 @@
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.VariableElement;
 
-import com.googlecode.androidannotations.annotations.BeforeCreate;
+import com.googlecode.androidannotations.annotations.BeforeViews;
 import com.sun.codemodel.JCodeModel;
 import com.sun.codemodel.JInvocation;
 
 public class BeforeCreateProcessor implements ElementProcessor {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
-		return BeforeCreate.class;
+		return BeforeViews.class;
 	}
 
 	@Override

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/BeforeCreateValidator.java
Patch:
@@ -21,7 +21,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.element.ExecutableElement;
 
-import com.googlecode.androidannotations.annotations.BeforeCreate;
+import com.googlecode.androidannotations.annotations.BeforeViews;
 import com.googlecode.androidannotations.helper.TargetAnnotationHelper;
 import com.googlecode.androidannotations.helper.ValidatorHelper;
 import com.googlecode.androidannotations.model.AnnotationElements;
@@ -37,7 +37,7 @@ public BeforeCreateValidator(ProcessingEnvironment processingEnv) {
 
 	@Override
 	public Class<? extends Annotation> getTarget() {
-		return BeforeCreate.class;
+		return BeforeViews.class;
 	}
 
 	@Override

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyActivity.java
Patch:
@@ -18,7 +18,7 @@
 import android.widget.TextView;
 
 import com.googlecode.androidannotations.annotations.Background;
-import com.googlecode.androidannotations.annotations.BeforeCreate;
+import com.googlecode.androidannotations.annotations.BeforeViews;
 import com.googlecode.androidannotations.annotations.Click;
 import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.LongClick;
@@ -56,13 +56,13 @@ public class MyActivity extends Activity {
 	@SystemService
 	WindowManager windowManager;
 	
-	@BeforeCreate
+	@BeforeViews
 	void doStuffWithDisplay() {
 		// windowManager should not be null
 		windowManager.getDefaultDisplay();
 	}
 	
-	@BeforeCreate
+	@BeforeViews
 	void requestIndeterminateProgress() {
 		requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
 	}

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyListActivity.java
Patch:
@@ -6,7 +6,7 @@
 import android.widget.ListAdapter;
 import android.widget.Toast;
 
-import com.googlecode.androidannotations.annotations.BeforeCreate;
+import com.googlecode.androidannotations.annotations.BeforeViews;
 import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.ItemClick;
 import com.googlecode.androidannotations.annotations.ItemLongClick;
@@ -22,7 +22,7 @@ public class MyListActivity extends ListActivity {
 
 	private ListAdapter adapter;
 
-	@BeforeCreate
+	@BeforeViews
 	void initListActivity(Bundle savedInstanceState) {
 		// Ensure that ListActivity sets its content view before AndroidAnnotation injection
 		getListView();

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/EActivity.java
Patch:
@@ -30,6 +30,6 @@
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
-public @interface Enhance {
+public @interface EActivity {
 	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/BeforeCreateValidator.java
Patch:
@@ -45,13 +45,13 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 
 		validatorHelper.voidReturnType(executableElement, valid);
 		
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 		
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/ExtraValidator.java
Patch:
@@ -43,7 +43,7 @@ public Class<? extends Annotation> getTarget() {
 	public boolean validate(Element element, AnnotationElements validatedElements) {
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/ResValidator.java
Patch:
@@ -48,7 +48,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
         IsValid valid = new IsValid();
 
-        validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+        validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
         TypeMirror fieldTypeMirror = element.asType();
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/RoboGuiceValidator.java
Patch:
@@ -44,7 +44,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.hasEnhance(element, validatedElements, valid);
+		validatorHelper.hasEActivity(element, validatedElements, valid);
 
 		validatorHelper.hasRoboGuiceJars(element, valid);
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -46,7 +46,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		ExecutableElement executableElement = (ExecutableElement) element;
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/SystemServiceValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.androidService(androidSystemServices, element, valid);
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/TransactionalValidator.java
Patch:
@@ -45,7 +45,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		validatorHelper.isNotPrivate(element, valid);
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/ViewByIdValidator.java
Patch:
@@ -47,7 +47,7 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 
 		IsValid valid = new IsValid();
 
-		validatorHelper.enclosingElementHasEnhance(element, validatedElements, valid);
+		validatorHelper.enclosingElementHasEActivity(element, validatedElements, valid);
 
 		TypeMirror uiFieldTypeMirror = element.asType();
 

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/ActivityWithExtra.java
Patch:
@@ -6,11 +6,11 @@
 import android.os.Bundle;
 import android.widget.TextView;
 
-import com.googlecode.androidannotations.annotations.Enhance;
+import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.Extra;
 import com.googlecode.androidannotations.annotations.ViewById;
 
-@Enhance(R.layout.activity_with_extra)
+@EActivity(R.layout.activity_with_extra)
 public class ActivityWithExtra extends Activity {
 
 	public static final String MY_STRING_EXTRA = "myStringExtra";

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyListActivity.java
Patch:
@@ -7,14 +7,14 @@
 import android.widget.Toast;
 
 import com.googlecode.androidannotations.annotations.BeforeCreate;
-import com.googlecode.androidannotations.annotations.Enhance;
+import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.ItemClick;
 import com.googlecode.androidannotations.annotations.ItemLongClick;
 import com.googlecode.androidannotations.annotations.ItemSelect;
 import com.googlecode.androidannotations.annotations.res.StringArrayRes;
 
 // The layout is not set : we use the default layout set in ListActivity
-@Enhance
+@EActivity
 public class MyListActivity extends ListActivity {
 
 	@StringArrayRes

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/SimpleActivity.java
Patch:
@@ -2,9 +2,9 @@
 
 import android.app.Activity;
 
-import com.googlecode.androidannotations.annotations.Enhance;
+import com.googlecode.androidannotations.annotations.EActivity;
 
-@Enhance(R.layout.my_activity)
+@EActivity(R.layout.my_activity)
 public class SimpleActivity extends Activity{
 
 }

File: RoboGuiceExample/src/com/googlecode/androidannotations/roboguiceexample/AstroGirl.java
Patch:
@@ -5,11 +5,11 @@
 
 import com.google.inject.Inject;
 import com.googlecode.androidannotations.annotations.Click;
-import com.googlecode.androidannotations.annotations.Enhance;
+import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.RoboGuice;
 import com.googlecode.androidannotations.annotations.ViewById;
 
-@Enhance(R.layout.main)
+@EActivity(R.layout.main)
 @RoboGuice(MyListener.class)
 public class AstroGirl extends Activity {
 	

File: RoboGuiceExample/src/com/googlecode/androidannotations/roboguiceexample/SimpleActivity.java
Patch:
@@ -2,10 +2,10 @@
 
 import android.app.Activity;
 
-import com.googlecode.androidannotations.annotations.Enhance;
+import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.RoboGuice;
 
-@Enhance
+@EActivity
 @RoboGuice
 public class SimpleActivity extends Activity{
 }

File: maveneclipse/src/main/java/com/googlecode/androidannotations/maveneclipse/HelloAndroidActivity.java
Patch:
@@ -6,11 +6,11 @@
 import android.os.Bundle;
 import android.widget.TextView;
 
-import com.googlecode.androidannotations.annotations.Enhance;
+import com.googlecode.androidannotations.annotations.EActivity;
 import com.googlecode.androidannotations.annotations.ViewById;
 import com.googlecode.androidannotations.annotations.res.StringRes;
 
-@Enhance(R.layout.main)
+@EActivity(R.layout.main)
 public class HelloAndroidActivity extends Activity {
 	
 	@StringRes

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ElementProcessor.java
Patch:
@@ -19,13 +19,10 @@
 import javax.lang.model.element.Element;
 
 import com.googlecode.androidannotations.helper.HasTarget;
-import com.googlecode.androidannotations.model.MetaModel;
 import com.sun.codemodel.JCodeModel;
 
 public interface ElementProcessor extends HasTarget {
 
 	void process(Element element, JCodeModel codeModel, ActivitiesHolder activitiesHolder) throws Exception;
 	
-	void process(Element element, MetaModel metaModel);
-
 }

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/TransactionalInstruction.java
Patch:
@@ -25,7 +25,7 @@ public class TransactionalInstruction extends AbstractInstruction {
 			"    public %s %s(%s) {\n" + //
 			"        %s.beginTransaction();\n" + //
 			"        try {\n" + //
-			"            %s%s(%s);\n" + //
+			"            %ssuper.%s(%s);\n" + //
 			"            %s.setTransactionSuccessful();\n" + //
 			"            return%s;\n" + //
 			"        } catch (RuntimeException e) {\n" + //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/experimental/FileSystemRClass.java
Patch:
@@ -27,6 +27,7 @@
 import com.googlecode.androidannotations.rclass.RInnerClass;
 import com.googlecode.androidannotations.rclass.IRClass.Res;
 
+@SuppressWarnings("all")
 public class FileSystemRClass implements IRClass {
 	
 	private final Map<String, RInnerClass> rClass = new HashMap<String, RInnerClass>();

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/experimental/FileSystemRClassFinder.java
Patch:
@@ -30,6 +30,7 @@
 import com.googlecode.androidannotations.rclass.IRClass;
 import com.googlecode.androidannotations.rclass.RClassFinder;
 
+@SuppressWarnings("all")
 public class FileSystemRClassFinder extends AnnotationHelper implements RClassFinder {
 
     public FileSystemRClassFinder(ProcessingEnvironment processingEnv) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/EnhanceProcessor.java
Patch:
@@ -100,7 +100,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
 
 		holder.activity._extends(annotatedActivity);
 
-		holder.bundleClass = codeModel.ref("android.os.Bundle");
+		holder.bundleClass = holder.refClass("android.os.Bundle");
 
 		// beforeSetContentView
 		holder.beforeSetContentView = holder.activity.method(JMod.PRIVATE, codeModel.VOID, "beforeSetContentView_");
@@ -125,7 +125,7 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
 		JFieldRef contentViewId;
 		if (layoutIdValue != Id.DEFAULT_VALUE) {
 			IRInnerClass rInnerClass = rClass.get(Res.LAYOUT);
-			contentViewId = rInnerClass.getIdStaticRef(layoutIdValue, codeModel);
+			contentViewId = rInnerClass.getIdStaticRef(layoutIdValue, holder);
 		} else {
 			contentViewId = null;
 		}

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -73,11 +73,11 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
         TypeMirror serviceType = element.asType();
         String fieldTypeQualifiedName = serviceType.toString();
 
-        JFieldRef serviceRef = androidSystemServices.getServiceConstant(serviceType, codeModel);
+        JFieldRef serviceRef = androidSystemServices.getServiceConstant(serviceType, holder);
 
         JBlock methodBody = holder.beforeSetContentView.body();
 
-        methodBody.assign(JExpr.ref(fieldName), JExpr.cast(codeModel.ref(fieldTypeQualifiedName), JExpr.invoke("getSystemService").arg(serviceRef)));
+        methodBody.assign(JExpr.ref(fieldName), JExpr.cast(holder.refClass(fieldTypeQualifiedName), JExpr.invoke("getSystemService").arg(serviceRef)));
     }
 
 }

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/rclass/IRInnerClass.java
Patch:
@@ -1,6 +1,6 @@
 package com.googlecode.androidannotations.rclass;
 
-import com.sun.codemodel.JCodeModel;
+import com.googlecode.androidannotations.processing.ActivityHolder;
 import com.sun.codemodel.JFieldRef;
 
 public interface IRInnerClass {
@@ -12,9 +12,9 @@ public interface IRInnerClass {
 	
 	String getIdQualifiedName(String name);
 	
-	JFieldRef getIdStaticRef(Integer idValue, JCodeModel codeModel);
+	JFieldRef getIdStaticRef(Integer idValue, ActivityHolder holder);
 
-	JFieldRef getIdStaticRef(String name, JCodeModel codeModel);
+	JFieldRef getIdStaticRef(String name, ActivityHolder holder);
 	
 	final IRInnerClass EMPTY_R_INNER_CLASS = new RInnerClass(null);
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java
Patch:
@@ -121,10 +121,8 @@ public void process(Element element, JCodeModel codeModel, ActivitiesHolder acti
 
 		JBlock body = holder.afterSetContentView.body();
 
-		JVar view = body.decl(viewClass, methodName + "View_");
-		body.assign(view, body.invoke("findViewById").arg(idRef));
+		body.add(JExpr.invoke(JExpr.invoke("findViewById").arg(idRef),"setOnClickListener").arg(JExpr._new(onClickListenerClass)));
 
-		body.invoke(view, "setOnClickListener").arg(JExpr._new(onClickListenerClass));
 
 	}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/rclass/RClass.java
Patch:
@@ -24,7 +24,7 @@
 import javax.lang.model.util.ElementFilter;
 
 public class RClass implements IRClass {
-
+	
 	public enum Res {
 		LAYOUT, ID, STRING, ARRAY, COLOR, ANIM, BOOL, DIMEN, DRAWABLE, INTEGER, MOVIE;
 		public String rName() {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/RoboActivityBodyInstruction.java
Patch:
@@ -155,7 +155,8 @@ public RoboActivityBodyInstruction(List<String> listenerClasses) {
 				"roboguice.activity.event.OnActivityResultEvent", //
 				"roboguice.activity.event.OnContentViewAvailableEvent", //
 				"android.view.ViewGroup.LayoutParams", //
-				"com.google.inject.Inject" //
+				"com.google.inject.Inject", //
+				"android.view.View" //
 				);
 	}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/RunnableValidator.java
Patch:
@@ -31,9 +31,9 @@ public class RunnableValidator implements ElementValidator {
 	private ValidatorHelper validatorHelper;
 
 	public RunnableValidator(Class<? extends Annotation> target, ProcessingEnvironment processingEnv) {
+		this.target = target;
 		TargetAnnotationHelper annotationHelper = new TargetAnnotationHelper(processingEnv, getTarget());
 		validatorHelper = new ValidatorHelper(annotationHelper);
-		this.target = target;
 	}
 
 	@Override
@@ -57,6 +57,8 @@ public boolean validate(Element element, AnnotationElements validatedElements) {
 		validatorHelper.doesntThrowException(element, valid);
 
 		validatorHelper.isNotFinal(element, valid);
+		
+		validatorHelper.isNotSynchronized(element, valid);
 
 		return valid.isValid();
 	}

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -249,7 +249,7 @@ private MetaModel processAnnotations(AnnotationElements validatedModel, IRClass
 	private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices androidSystemServices) {
 		ModelProcessor modelProcessor = new ModelProcessor();
 		modelProcessor.register(new EnhanceProcessor(processingEnv, rClass));
-		modelProcessor.register(new RoboGuiceProcessor(processingEnv.getElementUtils()));
+		modelProcessor.register(new RoboGuiceProcessor());
 		modelProcessor.register(new ViewByIdProcessor(rClass));
 		modelProcessor.register(new ClickProcessor(rClass));
 		modelProcessor.register(new LongClickProcessor(rClass));

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/RoboActivityBeforeCreateInstruction.java
Patch:
@@ -16,7 +16,7 @@
 package com.googlecode.androidannotations.generation;
 
 
-public class Robo11ActivityBeforeCreateInstruction extends AbstractInstruction {
+public class RoboActivityBeforeCreateInstruction extends AbstractInstruction {
 
 	private static final String CODE = "" + //
 			"        Injector injector_ = getInjector();\n" + //
@@ -27,7 +27,7 @@ public class Robo11ActivityBeforeCreateInstruction extends AbstractInstruction {
 			"        eventManager_.fire(new OnCreateEvent(savedInstanceState));\n" + //
 			"\n";
 	
-	public Robo11ActivityBeforeCreateInstruction() {
+	public RoboActivityBeforeCreateInstruction() {
 		addImports("com.google.inject.Injector", //
 				"roboguice.inject.ContextScope", //
 				"roboguice.event.EventManager", //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/helper/RoboGuiceConstants.java
Patch:
@@ -2,8 +2,7 @@
 
 public abstract class RoboGuiceConstants {
 	
-	public static final String ROBOGUICE_1_0_APPLICATION_CLASS = "roboguice.application.GuiceApplication";
-	public static final String ROBOGUICE_1_1_APPLICATION_CLASS = "roboguice.application.RoboApplication";
+	public static final String ROBOGUICE_APPLICATION_CLASS = "roboguice.application.RoboApplication";
 	
 	private RoboGuiceConstants() {}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/helper/IdValidatorHelper.java
Patch:
@@ -24,9 +24,9 @@ public void idExists(Element element, Res res, IsValid valid) {
 
 	public void idExists(Element element, Res res, boolean defaultUseName, IsValid valid) {
 
-		int idValue = annotationHelper.extractAnnotationValue(element);
+		Integer idValue = annotationHelper.extractAnnotationValue(element);
 
-		if (idValue == Id.DEFAULT_VALUE) {
+		if (idValue.equals(Id.DEFAULT_VALUE)) {
 			if (defaultUseName) {
 				String methodName = element.getSimpleName().toString();
 				int lastIndex = methodName.lastIndexOf(annotationHelper.actionName());

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/helper/IdAnnotationHelper.java
Patch:
@@ -20,7 +20,7 @@ public IdAnnotationHelper(ProcessingEnvironment processingEnv, Class<? extends A
 	}
 	
 	public String extractAnnotationQualifiedId(Element element) {
-		int idValue = extractAnnotationValue(element);
+		int idValue = this.<Integer>extractAnnotationValue(element);
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String clickQualifiedId;
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/Click.java
Patch:
@@ -33,7 +33,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface Click {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/Enhance.java
Patch:
@@ -31,6 +31,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.TYPE)
 public @interface Enhance {
-	public static final int DEFAULT_VALUE = -1;
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/ItemClick.java
Patch:
@@ -37,7 +37,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface ItemClick {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/ItemLongClick.java
Patch:
@@ -40,7 +40,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface ItemLongClick {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/ItemSelect.java
Patch:
@@ -39,7 +39,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface ItemSelect {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/LongClick.java
Patch:
@@ -39,7 +39,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface LongClick {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/Touch.java
Patch:
@@ -37,7 +37,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.METHOD)
 public @interface Touch {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/ViewById.java
Patch:
@@ -32,7 +32,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface ViewById {
-	public static final int DEFAULT_VALUE = -1;
-
-	int value() default DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/AnimationRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface AnimationRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/BooleanRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface BooleanRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorRes.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with values from R.color.*
@@ -34,5 +34,5 @@
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface ColorRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/ColorStateListRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface ColorStateListRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelOffsetRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface DimensionPixelOffsetRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionPixelSizeRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface DimensionPixelSizeRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/DimensionRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface DimensionRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/DrawableRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface DrawableRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntArrayRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface IntArrayRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/IntegerRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface IntegerRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/LayoutRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface LayoutRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/MovieRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface MovieRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringArrayRes.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with values from R.array.*
@@ -35,5 +35,5 @@
 @Target(ElementType.FIELD)
 public @interface StringArrayRes {
 
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/StringRes.java
Patch:
@@ -20,7 +20,7 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with values from
@@ -40,5 +40,5 @@
 @Target(ElementType.FIELD)
 public @interface StringRes {
 
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextArrayRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface TextArrayRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/res/TextRes.java
Patch:
@@ -20,13 +20,13 @@
 import java.lang.annotation.RetentionPolicy;
 import java.lang.annotation.Target;
 
-import com.googlecode.androidannotations.model.AndroidRes;
+import com.googlecode.androidannotations.annotations.Id;
 
 /**
  * Use on fields in activity classes that should be injected with this specific resource
  */
 @Retention(RetentionPolicy.SOURCE)
 @Target(ElementType.FIELD)
 public @interface TextRes {
-	int value() default AndroidRes.DEFAULT_VALUE;
+	int value() default Id.DEFAULT_VALUE;
 }
\ No newline at end of file

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/model/AndroidRes.java
Patch:
@@ -44,8 +44,6 @@ public enum AndroidRes {
 	TEXT_ARRAY(Res.ARRAY, TextArrayRes.class, "getTextArray", "java.lang.CharSequence"), //
 	COLOR(Res.COLOR, ColorRes.class, "getColor", "int", "java.lang.Integer");
 
-	public static final int DEFAULT_VALUE = -1;
-
 	private final Class<? extends Annotation> target;
 	private final String resourceMethodName;
 	private final List<String> allowedTypes;

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ItemClickProcessor.java
Patch:
@@ -22,6 +22,7 @@
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.VariableElement;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.annotations.ItemClick;
 import com.googlecode.androidannotations.generation.ItemClickInstruction;
 import com.googlecode.androidannotations.model.Instruction;
@@ -59,7 +60,7 @@ public void process(Element element, MetaModel metaModel) {
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String itemClickQualifiedId;
 
-		if (idValue == ItemClick.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 			int lastIndex = fieldName.lastIndexOf("ItemClicked");
 			if (lastIndex != -1) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ItemLongClickProcessor.java
Patch:
@@ -24,6 +24,7 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.annotations.ItemLongClick;
 import com.googlecode.androidannotations.generation.ItemLongClickInstruction;
 import com.googlecode.androidannotations.model.Instruction;
@@ -61,7 +62,7 @@ public void process(Element element, MetaModel metaModel) {
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String itemClickQualifiedId;
 
-		if (idValue == ItemLongClick.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 			int lastIndex = fieldName.lastIndexOf("ItemLongClicked");
 			if (lastIndex != -1) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java
Patch:
@@ -22,6 +22,7 @@
 import javax.lang.model.element.ExecutableElement;
 import javax.lang.model.element.VariableElement;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.annotations.ItemSelect;
 import com.googlecode.androidannotations.generation.ItemSelectedInstruction;
 import com.googlecode.androidannotations.model.Instruction;
@@ -53,12 +54,13 @@ public void process(Element element, MetaModel metaModel) {
 		String methodName = element.getSimpleName().toString();
 
 		ItemSelect annotation = element.getAnnotation(ItemSelect.class);
+		
 		int idValue = annotation.value();
 
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String itemClickQualifiedId;
 
-		if (idValue == ItemSelect.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 			int lastIndex = fieldName.lastIndexOf("ItemSelected");
 			if (lastIndex != -1) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/LongClickProcessor.java
Patch:
@@ -24,6 +24,7 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.annotations.LongClick;
 import com.googlecode.androidannotations.generation.LongClickInstruction;
 import com.googlecode.androidannotations.model.Instruction;
@@ -61,7 +62,7 @@ public void process(Element element, MetaModel metaModel) {
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String longClickQualifiedId;
 
-		if (idValue == LongClick.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 			int lastIndex = fieldName.lastIndexOf("LongClicked");
 			if (lastIndex != -1) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -20,6 +20,7 @@
 
 import javax.lang.model.element.Element;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.generation.ValueInstruction;
 import com.googlecode.androidannotations.model.AndroidRes;
 import com.googlecode.androidannotations.model.Instruction;
@@ -55,7 +56,7 @@ public void process(Element element, MetaModel metaModel) {
 
 		IRInnerClass rInnerClass = rClass.get(resInnerClass);
 		String qualifiedId;
-		if (idValue == AndroidRes.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 			qualifiedId = rInnerClass.getIdQualifiedName(fieldName);
 		} else {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/TouchProcessor.java
Patch:
@@ -24,6 +24,7 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.annotations.Touch;
 import com.googlecode.androidannotations.generation.TouchInstruction;
 import com.googlecode.androidannotations.model.Instruction;
@@ -60,7 +61,7 @@ public void process(Element element, MetaModel metaModel) {
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String longClickQualifiedId;
 
-		if (idValue == Touch.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 			int lastIndex = fieldName.lastIndexOf("Touched");
 			if (lastIndex != -1) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ViewByIdProcessor.java
Patch:
@@ -21,6 +21,7 @@
 import javax.lang.model.element.Element;
 import javax.lang.model.type.TypeMirror;
 
+import com.googlecode.androidannotations.annotations.Id;
 import com.googlecode.androidannotations.annotations.ViewById;
 import com.googlecode.androidannotations.generation.ViewByIdInstruction;
 import com.googlecode.androidannotations.model.Instruction;
@@ -56,7 +57,7 @@ public void process(Element element, MetaModel metaModel) {
 
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
 		String viewQualifiedId;
-		if (idValue == ViewById.DEFAULT_VALUE) {
+		if (idValue == Id.DEFAULT_VALUE) {
 			String fieldName = element.getSimpleName().toString();
 
 			viewQualifiedId = rInnerClass.getIdQualifiedName(fieldName);

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyActivity.java
Patch:
@@ -10,7 +10,6 @@
 import android.content.Intent;
 import android.database.sqlite.SQLiteDatabase;
 import android.util.Log;
-import android.view.Display;
 import android.view.MotionEvent;
 import android.view.Window;
 import android.view.WindowManager;
@@ -59,7 +58,7 @@ public class MyActivity extends Activity {
 	@BeforeCreate
 	void doStuffWithDisplay() {
 		// windowManager should not be null
-		Display display = windowManager.getDefaultDisplay();
+		windowManager.getDefaultDisplay();
 		
 	}
 	

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -221,7 +221,6 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new RoboGuiceValidator(processingEnv));
 		modelValidator.register(new ViewValidator(processingEnv, rClass));
 		modelValidator.register(new ClickValidator(processingEnv, rClass));
-		modelValidator.register(new BeforeCreateValidator(processingEnv));
 		modelValidator.register(new LongClickValidator(processingEnv, rClass));
 		modelValidator.register(new TouchValidator(processingEnv, rClass));
 		modelValidator.register(new ItemClickValidator(processingEnv, rClass));
@@ -236,6 +235,7 @@ private ModelValidator buildModelValidator(IRClass rClass, AndroidSystemServices
 		modelValidator.register(new TransactionalValidator(processingEnv));
 		modelValidator.register(new ExtraValidator(processingEnv));
 		modelValidator.register(new SystemServiceValidator(processingEnv, androidSystemServices));
+		modelValidator.register(new BeforeCreateValidator(processingEnv));
 
 		return modelValidator;
 	}
@@ -252,7 +252,6 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new RoboGuiceProcessor(processingEnv.getElementUtils()));
 		modelProcessor.register(new ViewProcessor(rClass));
 		modelProcessor.register(new ClickProcessor(rClass));
-		modelProcessor.register(new BeforeCreateProcessor());
 		modelProcessor.register(new LongClickProcessor(rClass));
 		modelProcessor.register(new TouchProcessor(rClass));
 		modelProcessor.register(new ItemClickProcessor(rClass));
@@ -267,6 +266,7 @@ private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices
 		modelProcessor.register(new TransactionalProcessor());
 		modelProcessor.register(new ExtraProcessor());
 		modelProcessor.register(new SystemServiceProcessor(androidSystemServices));
+		modelProcessor.register(new BeforeCreateProcessor());
 		return modelProcessor;
 	}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/ActivityGenerator.java
Patch:
@@ -34,7 +34,7 @@ public class ActivityGenerator {
 			"    public void onCreate(android.os.Bundle savedInstanceState) {\n" + //
 			"\n" + //
 			"%s" + //
-			"       %s\n" + //
+			"        %s\n" + //
 			"\n" + //
 			"%s" + //
 			"        super.onCreate(savedInstanceState);\n" + //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ExtraProcessor.java
Patch:
@@ -52,10 +52,10 @@ public void process(Element element, MetaModel metaModel) {
 		Extra annotation = element.getAnnotation(Extra.class);
 		String key = annotation.value();
 
-		List<Instruction> onCreateInstructions = metaActivity.getOnCreateInstructions();
+		List<Instruction> beforeCreateInstructions = metaActivity.getBeforeCreateInstructions();
 
 		Instruction instruction = new ExtraInstruction(className, fieldName, key);
-		onCreateInstructions.add(instruction);
+		beforeCreateInstructions.add(instruction);
 
 	}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/ResProcessor.java
Patch:
@@ -64,11 +64,11 @@ public void process(Element element, MetaModel metaModel) {
 
 		Element enclosingElement = element.getEnclosingElement();
 		MetaActivity metaActivity = metaModel.getMetaActivities().get(enclosingElement);
-		List<Instruction> onCreateInstructions = metaActivity.getOnCreateInstructions();
+		List<Instruction> beforeCreateInstructions = metaActivity.getBeforeCreateInstructions();
 
 		Instruction instruction = new ValueInstruction(name, androidValue.getResourceMethodName(), qualifiedId);
 
-		onCreateInstructions.add(instruction);
+		beforeCreateInstructions.add(instruction);
 
 	}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/processing/SystemServiceProcessor.java
Patch:
@@ -52,10 +52,10 @@ public void process(Element element, MetaModel metaModel) {
 
 		Element enclosingElement = element.getEnclosingElement();
 		MetaActivity metaActivity = metaModel.getMetaActivities().get(enclosingElement);
-		List<Instruction> onCreateInstructions = metaActivity.getOnCreateInstructions();
+		List<Instruction> beforeCreateInstructions = metaActivity.getBeforeCreateInstructions();
 
 		Instruction instruction = new SystemServiceInstruction(fieldName, fieldTypeQualifiedName, serviceConstant);
-		onCreateInstructions.add(instruction);
+		beforeCreateInstructions.add(instruction);
 
 	}
 

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/AndroidAnnotationProcessor.java
Patch:
@@ -249,7 +249,7 @@ private MetaModel processAnnotations(AnnotationElements validatedModel, IRClass
 	private ModelProcessor buildModelProcessor(IRClass rClass, AndroidSystemServices androidSystemServices) {
 		ModelProcessor modelProcessor = new ModelProcessor();
 		modelProcessor.register(new EnhanceProcessor(processingEnv, rClass));
-		modelProcessor.register(new RoboGuiceProcessor());
+		modelProcessor.register(new RoboGuiceProcessor(processingEnv.getElementUtils()));
 		modelProcessor.register(new ViewProcessor(rClass));
 		modelProcessor.register(new ClickProcessor(rClass));
 		modelProcessor.register(new BeforeCreateProcessor());

File: RoboGuiceExample/src/com/googlecode/androidannotations/roboguiceexample/AstroApplication.java
Patch:
@@ -2,12 +2,12 @@
 
 import java.util.List;
 
-import roboguice.application.GuiceApplication;
+import roboguice.application.RoboApplication;
 import roboguice.config.AbstractAndroidModule;
 
 import com.google.inject.Module;
 
-public class AstroApplication extends GuiceApplication {
+public class AstroApplication extends RoboApplication {
 
 	@Override
 	protected void addApplicationModules(List<Module> modules) {

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/ClickValidator.java
Patch:
@@ -114,7 +114,7 @@ private void warnNotVoidReturnType(Element element, ExecutableElement executable
 		TypeMirror returnType = executableElement.getReturnType();
 
 		if (returnType.getKind() != TypeKind.VOID) {
-			printAnnotationWarning(element, annotationName() + " should only be used on a method with a void return type ");
+			printAnnotationWarning(element, annotationName() + " should only be used on a method with a void return type");
 		}
 	}
 }

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/ExtraInstruction.java
Patch:
@@ -21,7 +21,7 @@ public class ExtraInstruction implements Instruction {
 
 	private static final String FORMAT = //
 	"" + //
-			"        if (getIntent().getExtras().containsKey(\"%s\")) {\n" + //
+			"        if (getIntent().getExtras() != null && getIntent().getExtras().containsKey(\"%s\")) {\n" + //
 			"        	try {\n" + //
 			"        		%s = extractAndCastExtra_(\"%s\");\n" + //
 			"        	} catch (ClassCastException e) {\n" + //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/validation/LongClickValidator.java
Patch:
@@ -25,7 +25,6 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 
-import com.googlecode.androidannotations.annotations.Click;
 import com.googlecode.androidannotations.annotations.LongClick;
 import com.googlecode.androidannotations.helper.ValidatorHelper;
 import com.googlecode.androidannotations.model.AnnotationElements;
@@ -96,7 +95,7 @@ private void validateRFieldName(Element element, IsValid valid) {
 		int idValue = annotation.value();
 
 		IRInnerClass rInnerClass = rClass.get(Res.ID);
-		if (idValue == Click.DEFAULT_VALUE) {
+		if (idValue == LongClick.DEFAULT_VALUE) {
 			String methodName = element.getSimpleName().toString();
 			if (!rInnerClass.containsField(methodName)) {
 				valid.invalidate();

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyListActivity.java
Patch:
@@ -43,11 +43,10 @@ void itemSelected(AdapterView<?> av, View v, int i, long l) {
 	}
 	
 	@ItemLongClick(android.R.id.list)
-	boolean itemLongSelected(AdapterView<?> av, View v, int i, long l) {
+	void itemLongSelected(AdapterView<?> av, View v, int i, long l) {
 		//It would be nice if food was given as a parameter
 		String food = (String) av.getAdapter().getItem(i);
 		Toast.makeText(this, "long: "+food, Toast.LENGTH_SHORT).show();
-		return true;
 	}
 	
 

File: HelloWorldEclipse/src/com/googlecode/androidannotations/helloworldeclipse/MyActivity.java
Patch:
@@ -80,15 +80,14 @@ void showNotificationsDelayed() {
 	}
 
 	@LongClick
-	boolean startExtraActivity() {
+	void startExtraActivity() {
 		Intent intent = new Intent(this, ActivityWithExtra.class);
 
 		intent.putExtra(ActivityWithExtra.MY_DATE_EXTRA, new Date());
 		intent.putExtra(ActivityWithExtra.MY_STRING_EXTRA, "hello !");
 		intent.putExtra(ActivityWithExtra.MY_INT_EXTRA, 42);
 
 		startActivity(intent);
-		return true;
 	}
 
 	@Click

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/BackgroundInstruction.java
Patch:
@@ -24,13 +24,13 @@ public class BackgroundInstruction implements Instruction {
 	private static final String FORMAT = //
 	"" + //
 			"    @Override\n" + //
-			"    protected void %s(%s) {\n" + //
+			"    public void %s(%s) {\n" + //
 			"        new Thread() {\n" + //
 			"            public void run() {\n" + //
 			"                try {\n" + //
 			"                    %s.super.%s(%s);\n" + //
 			"                } catch (RuntimeException e) {\n" + //
-			"                    android.util.Log.e(\"%s\", \"\", e);\n" + //
+			"                    android.util.Log.e(\"%s\", \"A runtime exception was thrown while executing code in a background thread\", e);\n" + //
 			"                }\n" + //
 			"            }\n" + //
 			"        }.start();\n" + //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/generation/UiThreadInstruction.java
Patch:
@@ -24,13 +24,13 @@ public class UiThreadInstruction implements Instruction {
 	private static final String FORMAT = //
 	"" + //
 			"    @Override\n" + //
-			"    protected void %s(%s) {\n" + //
+			"    public void %s(%s) {\n" + //
 			"        runOnUiThread(new Runnable() {\n" + //
 			"            public void run() {\n" + //
 			"                try {\n" + //
 			"                    %s.super.%s(%s);\n" + //
 			"                } catch (RuntimeException e) {\n" + //
-			"                    android.util.Log.e(\"%s\", \"\", e);\n" + //
+			"                    android.util.Log.e(\"%s\", \"A runtime exception was thrown while executing code in the ui thread\", e);\n" + //
 			"                }\n" + //
 			"            }\n" + //
 			"        });\n" + //

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/rclass/RClass.java
Patch:
@@ -26,7 +26,7 @@
 public class RClass {
 
 	public enum Res {
-		LAYOUT, ID, STRING, ARRAY, COLOR;
+		LAYOUT, ID, STRING, ARRAY, COLOR, ANIM, BOOL, DIMEN, DRAWABLE, INTEGER, MOVIE;
 		public String rName() {
 			return toString().toLowerCase();
 		}

File: AndroidAnnotations/src/main/java/com/googlecode/androidannotations/annotations/UiView.java
Patch:
@@ -26,7 +26,7 @@
  */
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.FIELD)
-public @interface View {
+public @interface UiView {
 	public static final int DEFAULT_VALUE = -1;
 
 	int value() default DEFAULT_VALUE;

