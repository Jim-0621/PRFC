File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/PtrDemoHomeFragment.java
Patch:
@@ -240,7 +240,7 @@ public void run() {
 
     @Override
     protected int getLayoutId() {
-        return R.layout.fragmengt_ptr_home;
+        return R.layout.fragment_ptr_home;
     }
 
     @Override

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/PtrDemoHomeFragment.java
Patch:
@@ -240,7 +240,7 @@ public void run() {
 
     @Override
     protected int getLayoutId() {
-        return R.layout.fragmengt_ptr_home;
+        return R.layout.fragment_ptr_home;
     }
 
     @Override

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/viewpager/ViewPagerFragment.java
Patch:
@@ -51,7 +51,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 if (position >= 0) {
-                    final String url = mAdapter.getItem(position).optString("pic");
+					JsonData js = mAdapter.getItem(position);
+                    final String url = js!=null?js.optString("pic"):null;
                     if (!TextUtils.isEmpty(url)) {
                         getContext().pushFragmentToBackStack(MaterialStyleFragment.class, url);
                     }

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -882,7 +882,7 @@ public void setHeaderView(View header) {
 
     @Override
     protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {
-        return p instanceof LayoutParams;
+        return p != null && p instanceof LayoutParams;
     }
 
     @Override

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/viewpager/ViewPagerFragment.java
Patch:
@@ -51,7 +51,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             @Override
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 if (position >= 0) {
-                    final String url = mAdapter.getItem(position).optString("pic");
+					JsonData js = mAdapter.getItem(position);
+                    final String url = js!=null?js.optString("pic"):null;
                     if (!TextUtils.isEmpty(url)) {
                         getContext().pushFragmentToBackStack(MaterialStyleFragment.class, url);
                     }

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -882,7 +882,7 @@ public void setHeaderView(View header) {
 
     @Override
     protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {
-        return p instanceof LayoutParams;
+        return p != null && p instanceof LayoutParams;
     }
 
     @Override

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -286,7 +286,8 @@ public boolean dispatchTouchEvent(MotionEvent e) {
                 // The cancel event will be sent once the position is moved.
                 // So let the event pass to children.
                 // fix #93, #102
-                return dispatchTouchEventSupper(e);
+                dispatchTouchEventSupper(e);
+                return true;
 
             case MotionEvent.ACTION_MOVE:
                 mLastMoveEvent = e;

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/WithLongPressFragment.java
Patch:
@@ -39,7 +39,7 @@ protected View createView(LayoutInflater inflater, ViewGroup container, Bundle s
         listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
             @Override
             public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
-                Toast.makeText(getContext(), "Long Pressed", Toast.LENGTH_SHORT).show();
+                Toast.makeText(getContext(), "Long Pressed: " + id, Toast.LENGTH_SHORT).show();
                 return true;
             }
         });

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/WithLongPressFragment.java
Patch:
@@ -58,7 +58,7 @@ public void run() {
                         listViewDataAdapter.notifyDataSetChanged();
                         ptrFrameLayout.refreshComplete();
                     }
-                }, 500);
+                }, 2000);
             }
         });
         ptrFrameLayout.postDelayed(new Runnable() {

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/viewpager/ViewPagerActivity.java
Patch:
@@ -104,12 +104,12 @@ public FragmentViewPagerAdapter(FragmentManager fm, ArrayList<ViewPagerFragment>
         }
 
         @Override
-        public void destroyItem(ViewGroup container, int position, Object object) {
+        public Fragment getItem(int position) {
+            return mViewPagerFragments.get(position);
         }
 
         @Override
-        public Fragment getItem(int position) {
-            return mViewPagerFragments.get(position);
+        public void destroyItem(ViewGroup container, int position, Object object) {
         }
 
         protected void updateData() {

File: ptr-lib/src/in/srain/cube/views/ptr/indicator/PtrIndicator.java
Patch:
@@ -63,7 +63,7 @@ public int getOffsetToRefresh() {
     }
 
     public void setOffsetToRefresh(int offset) {
-        mRatioOfHeaderHeightToRefresh = mHeaderHeight / offset;
+        mRatioOfHeaderHeightToRefresh = mHeaderHeight * 1f / offset;
         mOffsetToRefresh = offset;
     }
 

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -300,7 +300,7 @@ public boolean dispatchTouchEvent(MotionEvent e) {
                 float offsetX = mPtrIndicator.getOffsetX();
                 float offsetY = mPtrIndicator.getOffsetY();
 
-                if (mDisableWhenHorizontalMove && !mPreventForHorizontal && (Math.abs(offsetX) > mPagingTouchSlop || Math.abs(offsetX) > 3 * Math.abs(offsetY))) {
+                if (mDisableWhenHorizontalMove && !mPreventForHorizontal && (Math.abs(offsetX) > mPagingTouchSlop && Math.abs(offsetX) > Math.abs(offsetY))) {
                     if (mPtrIndicator.isInStartPosition()) {
                         mPreventForHorizontal = true;
                     }

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/WithLongPressFragment.java
Patch:
@@ -39,7 +39,7 @@ protected View createView(LayoutInflater inflater, ViewGroup container, Bundle s
         listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
             @Override
             public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
-                Toast.makeText(getContext(), "Long Pressed", Toast.LENGTH_SHORT).show();
+                Toast.makeText(getContext(), "Long Pressed: " + id, Toast.LENGTH_SHORT).show();
                 return true;
             }
         });

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/WithLongPressFragment.java
Patch:
@@ -58,7 +58,7 @@ public void run() {
                         listViewDataAdapter.notifyDataSetChanged();
                         ptrFrameLayout.refreshComplete();
                     }
-                }, 500);
+                }, 2000);
             }
         });
         ptrFrameLayout.postDelayed(new Runnable() {

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/viewpager/ViewPagerActivity.java
Patch:
@@ -104,12 +104,12 @@ public FragmentViewPagerAdapter(FragmentManager fm, ArrayList<ViewPagerFragment>
         }
 
         @Override
-        public void destroyItem(ViewGroup container, int position, Object object) {
+        public Fragment getItem(int position) {
+            return mViewPagerFragments.get(position);
         }
 
         @Override
-        public Fragment getItem(int position) {
-            return mViewPagerFragments.get(position);
+        public void destroyItem(ViewGroup container, int position, Object object) {
         }
 
         protected void updateData() {

File: ptr-lib/src/in/srain/cube/views/ptr/indicator/PtrIndicator.java
Patch:
@@ -63,7 +63,7 @@ public int getOffsetToRefresh() {
     }
 
     public void setOffsetToRefresh(int offset) {
-        mRatioOfHeaderHeightToRefresh = mHeaderHeight / offset;
+        mRatioOfHeaderHeightToRefresh = mHeaderHeight * 1f / offset;
         mOffsetToRefresh = offset;
     }
 

File: ptr-lib/src/in/srain/cube/views/ptr/indicator/PtrIndicator.java
Patch:
@@ -63,7 +63,7 @@ public int getOffsetToRefresh() {
     }
 
     public void setOffsetToRefresh(int offset) {
-        mRatioOfHeaderHeightToRefresh = mHeaderHeight / offset;
+        mRatioOfHeaderHeightToRefresh = mHeaderHeight * 1f / offset;
         mOffsetToRefresh = offset;
     }
 

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -300,7 +300,7 @@ public boolean dispatchTouchEvent(MotionEvent e) {
                 float offsetX = mPtrIndicator.getOffsetX();
                 float offsetY = mPtrIndicator.getOffsetY();
 
-                if (mDisableWhenHorizontalMove && !mPreventForHorizontal && (Math.abs(offsetX) > mPagingTouchSlop || Math.abs(offsetX) > 3 * Math.abs(offsetY))) {
+                if (mDisableWhenHorizontalMove && !mPreventForHorizontal && (Math.abs(offsetX) > mPagingTouchSlop && Math.abs(offsetX) > Math.abs(offsetY))) {
                     if (mPtrIndicator.isInStartPosition()) {
                         mPreventForHorizontal = true;
                     }

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -300,7 +300,7 @@ public boolean dispatchTouchEvent(MotionEvent e) {
                 float offsetX = mPtrIndicator.getOffsetX();
                 float offsetY = mPtrIndicator.getOffsetY();
 
-                if (mDisableWhenHorizontalMove && !mPreventForHorizontal && (Math.abs(offsetX) > mPagingTouchSlop || Math.abs(offsetX) > 3 * Math.abs(offsetY))) {
+                if (mDisableWhenHorizontalMove && !mPreventForHorizontal && (Math.abs(offsetX) > mPagingTouchSlop && Math.abs(offsetX) > Math.abs(offsetY))) {
                     if (mPtrIndicator.isInStartPosition()) {
                         mPreventForHorizontal = true;
                     }

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/RentalsStyleFragment.java
Patch:
@@ -19,7 +19,7 @@
 import in.srain.cube.views.ptr.PtrFrameLayout;
 import in.srain.cube.views.ptr.PtrHandler;
 import in.srain.cube.views.ptr.demo.R;
-import in.srain.cube.views.ptr.header.RentalsSunHeaderView;
+import in.srain.cube.views.ptr.demo.ui.header.RentalsSunHeaderView;
 
 public class RentalsStyleFragment extends TitleBaseFragment {
 

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/header/RentalsSunDrawable.java
Patch:
@@ -1,4 +1,4 @@
-package in.srain.cube.views.ptr.header;
+package in.srain.cube.views.ptr.demo.ui.header;
 
 import android.content.Context;
 import android.graphics.*;
@@ -9,7 +9,7 @@
 import android.view.animation.Interpolator;
 import android.view.animation.LinearInterpolator;
 import android.view.animation.Transformation;
-import in.srain.cube.views.ptr.R;
+import in.srain.cube.views.ptr.demo.R;
 import in.srain.cube.views.ptr.util.PtrLocalDisplay;
 
 public class RentalsSunDrawable extends Drawable implements Animatable {

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/header/RentalsSunHeaderView.java
Patch:
@@ -1,4 +1,4 @@
-package in.srain.cube.views.ptr.header;
+package in.srain.cube.views.ptr.demo.ui.header;
 
 import android.content.Context;
 import android.graphics.Canvas;

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/MaterialStylePinContentFragment.java
Patch:
@@ -11,7 +11,7 @@ public class MaterialStylePinContentFragment extends MaterialStyleFragment {
     protected View createView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         View view = super.createView(inflater, container, savedInstanceState);
         // close at once
-        mPtrFrameLayout.setDurationToCloseHeader(1);
+        mPtrFrameLayout.setDurationToClose(100);
         mPtrFrameLayout.setPinContent(true);
         return view;
     }

File: ptr-lib/src/in/srain/cube/views/ptr/PtrUIHandlerHolder.java
Patch:
@@ -112,6 +112,9 @@ public void onUIReset(PtrFrameLayout frame) {
 
     @Override
     public void onUIRefreshPrepare(PtrFrameLayout frame) {
+        if (!hasHandler()) {
+            return;
+        }
         PtrUIHandlerHolder current = this;
         do {
             final PtrUIHandler handler = current.getHandler();

File: ptr-lib/src/in/srain/cube/views/ptr/indicator/PtrTensionIndicator.java
Patch:
@@ -48,7 +48,6 @@ protected void processOnMove(float currentX, float currentY, float offsetX, floa
             return;
         }
 
-
         // distance from top
         final float scrollTop = (currentY - mDownY) * DRAG_RATE + mDownPos;
         final float currentDragPercent = scrollTop / mOneHeight;

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -435,9 +435,9 @@ private void onRelease(boolean stayForLoading) {
         if (mStatus == PTR_STATUS_LOADING) {
             // keep header for fresh
             if (mKeepHeaderWhenRefresh) {
+                int scrollHeight = mHeaderRetainHeightOnRefresh >= 0 ? mHeaderRetainHeightOnRefresh : mHeaderHeight;
                 // scroll header back
-                if (mCurrentPos > mHeaderHeight && !stayForLoading) {
-                	int scrollHeight = mHeaderRetainHeightOnRefresh >= 0 ? mHeaderRetainHeightOnRefresh : mHeaderHeight;
+                if (mCurrentPos > scrollHeight && !stayForLoading) {
                     mScrollChecker.tryToScrollTo(scrollHeight, mDurationToClose);
                 } else {
                     // do nothing

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -266,6 +266,7 @@ public boolean dispatchTouchEvent(MotionEvent e) {
                     }
                     onRelease(false);
                     if (mCurrentPos != mPressedPos) {
+                        sendCancelEvent();
                         return true;
                     }
                     return dispatchTouchEventSupper(e);

File: ptr-demo/src/in/srain/cube/views/ptr/demo/app/CubeDemoApplication.java
Patch:
@@ -33,7 +33,7 @@ public void onCreate() {
 
         ImageLoaderFactory.setDefaultImageResizer(DemoDuiTangImageResizer.getInstance());
         String dir = "request-cache";
-        ImageLoaderFactory.init(this);
+        // ImageLoaderFactory.init(this);
         RequestCacheManager.init(this, dir, 1024 * 10, 1024 * 10);
         Cube.onCreate(this);
     }

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/HomeFragment.java
Patch:
@@ -22,7 +22,7 @@
 public class HomeFragment extends BlockMenuFragment {
 
     @Override
-    protected void addItemInfo(ArrayList<BlockMenuFragment.ItemInfo> itemInfos) {
+    protected void addItemInfo(ArrayList<BlockMenuFragment.MenuItemInfo> itemInfos) {
 
         // GridView
         itemInfos.add(newItemInfo(R.string.ptr_demo_block_grid_view, R.color.cube_mints_4d90fe, new OnClickListener() {
@@ -188,7 +188,8 @@ protected int getLayoutId() {
     }
 
     @Override
-    protected void setupViews() {
+    protected void setupViews(View view) {
+        super.setupViews(view);
         setHeaderTitle(R.string.ptr_demo_block_for_home);
     }
 }

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/activity/HomeActivity.java
Patch:
@@ -1,11 +1,11 @@
 package in.srain.cube.views.ptr.demo.ui.activity;
 
 import android.os.Bundle;
-import in.srain.cube.mints.base.DemoBaseActivity;
+import in.srain.cube.mints.base.MintsBaseActivity;
 import in.srain.cube.views.ptr.demo.R;
 import in.srain.cube.views.ptr.demo.ui.HomeFragment;
 
-public class HomeActivity extends DemoBaseActivity {
+public class HomeActivity extends MintsBaseActivity {
 
     @Override
     protected void onCreate(Bundle bundle) {

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/classic/AutoRefresh.java
Patch:
@@ -7,6 +7,7 @@ public class AutoRefresh extends WithGridView {
 
     @Override
     protected void setupViews(final PtrClassicFrameLayout ptrFrame) {
+        ptrFrame.setLoadingMinTime(10000);
         setHeaderTitle(R.string.ptr_demo_block_auto_fresh);
         ptrFrame.postDelayed(new Runnable() {
             @Override

File: ptr-demo/src/in/srain/cube/views/ptr/demo/app/CubeDemoApplication.java
Patch:
@@ -33,7 +33,7 @@ public void onCreate() {
 
         ImageLoaderFactory.setDefaultImageResizer(DemoDuiTangImageResizer.getInstance());
         String dir = "request-cache";
-        ImageLoaderFactory.init(this);
+        // ImageLoaderFactory.init(this);
         RequestCacheManager.init(this, dir, 1024 * 10, 1024 * 10);
         Cube.onCreate(this);
     }

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/classic/AutoRefresh.java
Patch:
@@ -7,6 +7,7 @@ public class AutoRefresh extends WithGridView {
 
     @Override
     protected void setupViews(final PtrClassicFrameLayout ptrFrame) {
+        ptrFrame.setLoadingMinTime(10000);
         setHeaderTitle(R.string.ptr_demo_block_auto_fresh);
         ptrFrame.postDelayed(new Runnable() {
             @Override

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/MaterialStyleFragment.java
Patch:
@@ -62,7 +62,7 @@ protected View createView(LayoutInflater inflater, ViewGroup container, Bundle s
         frame.postDelayed(new Runnable() {
             @Override
             public void run() {
-                frame.autoRefresh();
+                frame.autoRefresh(false);
             }
         }, 100);
 
@@ -77,6 +77,7 @@ public void onRefreshBegin(final PtrFrameLayout frame) {
                 if (mImageHasLoaded) {
                     long delay = (long) (1000 + Math.random() * 2000);
                     delay = Math.max(0, delay);
+                    delay = 0;
                     frame.postDelayed(new Runnable() {
                         @Override
                         public void run() {

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/classic/AutoRefresh.java
Patch:
@@ -11,7 +11,7 @@ protected void setupViews(final PtrClassicFrameLayout ptrFrame) {
         ptrFrame.postDelayed(new Runnable() {
             @Override
             public void run() {
-                ptrFrame.autoRefresh(false);
+                ptrFrame.autoRefresh(true);
             }
         }, 150);
     }

File: ptr-lib/src/in/srain/cube/views/ptr/PtrFrameLayout.java
Patch:
@@ -666,7 +666,7 @@ public void disableWhenHorizontalMove(boolean disable) {
      * @param time
      */
     public void setLoadingMinTime(int time) {
-        mLoadingStartTime = time;
+        mLoadingMinTime = time;
     }
 
     public void setInterceptEventWhileWorking(boolean yes) {

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/classic/AutoRefresh.java
Patch:
@@ -11,7 +11,7 @@ protected void setupViews(final PtrClassicFrameLayout ptrFrame) {
         ptrFrame.postDelayed(new Runnable() {
             @Override
             public void run() {
-                ptrFrame.autoRefresh(true);
+                ptrFrame.autoRefresh(false);
             }
         }, 150);
     }

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/classic/WithGridView.java
Patch:
@@ -113,7 +113,7 @@ public void run() {
                         mPtrFrame.refreshComplete();
                         mAdapter.notifyDataSetChanged();
                     }
-                }, 1000);
+                }, 00);
             }
         });
     }

File: ptr-lib/src/in/srain/cube/views/ptr/header/MaterialHeader.java
Patch:
@@ -145,6 +145,7 @@ public void onUIRefreshPrepare(PtrFrameLayout frame) {
      */
     @Override
     public void onUIRefreshBegin(PtrFrameLayout frame) {
+        mDrawable.setAlpha(255);
         mDrawable.start();
     }
 

File: ptr-demo/src/in/srain/cube/views/ptr/demo/app/CubeDemoApplication.java
Patch:
@@ -29,7 +29,7 @@ public void onCreate() {
             CLog.setLogLevel(CLog.LEVEL_VERBOSE);
         }
 
-        Debug.DEBUG_IMAGE = true;
+        // Debug.DEBUG_IMAGE = true;
         PtrFrameLayout.DEBUG = true;
 
         ImageLoaderFactory.setDefaultImageResizer(DemoDuiTangImageResizer.getInstance());

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/classic/AutoRefresh.java
Patch:
@@ -16,4 +16,4 @@ public void run() {
             }
         }, 150);
     }
-}
+}
\ No newline at end of file

File: ptr-demo/src/in/srain/cube/views/ptr/demo/ui/storehouse/ETaoFragment.java
Patch:
@@ -36,7 +36,7 @@ protected View createView(LayoutInflater inflater, ViewGroup container, Bundle s
         Debug.DEBUG_PTR_FRAME = true;
 
         final PtrStoreHouseHeaderFrameLayout frame = (PtrStoreHouseHeaderFrameLayout) view.findViewById(R.id.store_house_ptr_frame);
-        frame.getHeader().initWithStringArray(R.array.storehouse);
+        // frame.getHeader().initWithStringArray(R.array.storehouse);
         frame.setPtrHandler(new PtrHandler() {
             @Override
             public boolean checkCanDoRefresh(PtrFrameLayout frame, View content, View header) {

