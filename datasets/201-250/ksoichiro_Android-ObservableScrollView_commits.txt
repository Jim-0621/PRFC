File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/CacheFragmentStatePagerAdapter.java
Patch:
@@ -43,7 +43,7 @@ public abstract class CacheFragmentStatePagerAdapter extends FragmentStatePagerA
 
     public CacheFragmentStatePagerAdapter(FragmentManager fm) {
         super(fm);
-        mPages = new SparseArray<Fragment>();
+        mPages = new SparseArray<>();
         mFm = fm;
     }
 

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableGridView.java
Patch:
@@ -614,8 +614,7 @@ public static class FixedViewInfo {
     public static class HeaderViewGridAdapter implements WrapperListAdapter, Filterable {
         private final DataSetObservable mDataSetObservable = new DataSetObservable();
         private final ListAdapter mAdapter;
-        static final ArrayList<FixedViewInfo> EMPTY_INFO_LIST =
-            new ArrayList<FixedViewInfo>();
+        static final ArrayList<FixedViewInfo> EMPTY_INFO_LIST = new ArrayList<>();
 
         // This ArrayList is assumed to NOT be null.
         ArrayList<FixedViewInfo> mHeaderViewInfos;

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ScrollUtils.java
Patch:
@@ -67,6 +67,7 @@ public static int getColorWithAlpha(float alpha, int baseColor) {
     public static void addOnGlobalLayoutListener(final View view, final Runnable runnable) {
         ViewTreeObserver vto = view.getViewTreeObserver();
         vto.addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
+            @SuppressWarnings("deprecation")
             @Override
             public void onGlobalLayout() {
                 if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableGridView.java
Patch:
@@ -308,7 +308,7 @@ public void scrollVerticallyTo(int y) {
 
     @Override
     public int getCurrentScrollY() {
-        return mScrollY + getPaddingTop();
+        return mScrollY;
     }
 
     @Override
@@ -448,7 +448,7 @@ private void onScrollChanged() {
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;
                     }
-                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop();
+                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop() + getPaddingTop();
                     mPrevFirstVisiblePosition = firstVisiblePosition;
 
                     dispatchOnScrollChanged(mScrollY, mFirstScroll, mDragging);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -261,7 +261,7 @@ public void scrollVerticallyTo(int y) {
 
     @Override
     public int getCurrentScrollY() {
-        return mScrollY + getPaddingTop();
+        return mScrollY;
     }
 
     private void init() {
@@ -322,8 +322,8 @@ private void onScrollChanged() {
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;
                     }
-                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop() + 
-                                firstVisiblePosition * getDividerHeight();
+                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop() +
+                                firstVisiblePosition * getDividerHeight() + getPaddingTop();
                     mPrevFirstVisiblePosition = firstVisiblePosition;
 
                     dispatchOnScrollChanged(mScrollY, mFirstScroll, mDragging);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableRecyclerView.java
Patch:
@@ -158,7 +158,7 @@ protected void onScrollChanged(int l, int t, int oldl, int oldt) {
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;
                     }
-                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop();
+                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop() + getPaddingTop();
                     mPrevFirstVisiblePosition = firstVisiblePosition;
 
                     dispatchOnScrollChanged(mScrollY, mFirstScroll, mDragging);
@@ -339,7 +339,7 @@ public void scrollVerticallyToPosition(int position) {
 
     @Override
     public int getCurrentScrollY() {
-        return mScrollY + getPaddingTop();
+        return mScrollY;
     }
 
     @SuppressWarnings("deprecation")

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -322,7 +322,8 @@ private void onScrollChanged() {
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;
                     }
-                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop();
+                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop() + 
+                                firstVisiblePosition * getDividerHeight();
                     mPrevFirstVisiblePosition = firstVisiblePosition;
 
                     dispatchOnScrollChanged(mScrollY, mFirstScroll, mDragging);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -322,7 +322,8 @@ private void onScrollChanged() {
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;
                     }
-                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop();
+                    mScrollY = mPrevScrolledChildrenHeight - firstVisibleChild.getTop() + 
+                                firstVisiblePosition * getDividerHeight();
                     mPrevFirstVisiblePosition = firstVisiblePosition;
 
                     dispatchOnScrollChanged(mScrollY, mFirstScroll, mDragging);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableGridView.java
Patch:
@@ -308,7 +308,7 @@ public void scrollVerticallyTo(int y) {
 
     @Override
     public int getCurrentScrollY() {
-        return mScrollY;
+        return mScrollY + getPaddingTop();
     }
 
     @Override

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -261,7 +261,7 @@ public void scrollVerticallyTo(int y) {
 
     @Override
     public int getCurrentScrollY() {
-        return mScrollY;
+        return mScrollY + getPaddingTop();
     }
 
     private void init() {

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableRecyclerView.java
Patch:
@@ -339,7 +339,7 @@ public void scrollVerticallyToPosition(int position) {
 
     @Override
     public int getCurrentScrollY() {
-        return mScrollY;
+        return mScrollY + getPaddingTop();
     }
 
     @SuppressWarnings("deprecation")

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableGridView.java
Patch:
@@ -443,6 +443,7 @@ private void onScrollChanged() {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
                     } else if (firstVisiblePosition == 0) {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
+                        mPrevScrolledChildrenHeight = 0;
                     }
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -317,6 +317,7 @@ private void onScrollChanged() {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
                     } else if (firstVisiblePosition == 0) {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
+                        mPrevScrolledChildrenHeight = 0;
                     }
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableGridView.java
Patch:
@@ -443,6 +443,7 @@ private void onScrollChanged() {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
                     } else if (firstVisiblePosition == 0) {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
+                        mPrevScrolledChildrenHeight = 0;
                     }
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -317,6 +317,7 @@ private void onScrollChanged() {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
                     } else if (firstVisiblePosition == 0) {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
+                        mPrevScrolledChildrenHeight = 0;
                     }
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -433,7 +433,7 @@ public void writeToParcel(Parcel out, int flags) {
         }
 
         public static final Parcelable.Creator<SavedState> CREATOR
-                = new Parcelable.Creator<SavedState>() {
+            = new Parcelable.Creator<SavedState>() {
             @Override
             public SavedState createFromParcel(Parcel in) {
                 return new SavedState(in);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableRecyclerView.java
Patch:
@@ -325,7 +325,7 @@ public void scrollVerticallyTo(int y) {
      * and handles which method should be called for scrolling.</p>
      * <p>Other know classes (StaggeredGridLayoutManager and GridLayoutManager) are not tested.</p>
      *
-     * @param position position to scroll
+     * @param position Position to scroll.
      */
     public void scrollVerticallyToPosition(int position) {
         LayoutManager lm = getLayoutManager();
@@ -494,7 +494,7 @@ public Parcelable getSuperState() {
         }
 
         public static final Parcelable.Creator<SavedState> CREATOR
-                = new Parcelable.Creator<SavedState>() {
+            = new Parcelable.Creator<SavedState>() {
             @Override
             public SavedState createFromParcel(Parcel in) {
                 return new SavedState(in);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableScrollView.java
Patch:
@@ -299,7 +299,7 @@ public void writeToParcel(Parcel out, int flags) {
         }
 
         public static final Parcelable.Creator<SavedState> CREATOR
-                = new Parcelable.Creator<SavedState>() {
+            = new Parcelable.Creator<SavedState>() {
             @Override
             public SavedState createFromParcel(Parcel in) {
                 return new SavedState(in);

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableWebView.java
Patch:
@@ -261,7 +261,7 @@ public void writeToParcel(Parcel out, int flags) {
         }
 
         public static final Parcelable.Creator<SavedState> CREATOR
-                = new Parcelable.Creator<SavedState>() {
+            = new Parcelable.Creator<SavedState>() {
             @Override
             public SavedState createFromParcel(Parcel in) {
                 return new SavedState(in);

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FillGap3BaseActivity.java
Patch:
@@ -17,6 +17,7 @@
 package com.github.ksoichiro.android.observablescrollview.samples;
 
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v7.widget.Toolbar;
 import android.view.MotionEvent;
 import android.view.View;
@@ -114,7 +115,7 @@ public void run() {
     }
 
     @Override
-    protected void onRestoreInstanceState(Bundle savedInstanceState) {
+    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {
         super.onRestoreInstanceState(savedInstanceState);
         mInitialTranslationY = savedInstanceState.getFloat(STATE_TRANSLATION_Y);
     }

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/BaseActivity.java
Patch:
@@ -51,7 +51,7 @@ public static ArrayList<String> getDummyData() {
     }
 
     public static ArrayList<String> getDummyData(int num) {
-        ArrayList<String> items = new ArrayList<String>();
+        ArrayList<String> items = new ArrayList<>();
         for (int i = 1; i <= num; i++) {
             items.add("Item " + i);
         }
@@ -67,7 +67,7 @@ protected void setDummyDataFew(ListView listView) {
     }
 
     protected void setDummyData(ListView listView, int num) {
-        listView.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, getDummyData(num)));
+        listView.setAdapter(new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, getDummyData(num)));
     }
 
     protected void setDummyDataWithHeader(ListView listView, int headerHeight) {
@@ -89,7 +89,7 @@ protected void setDummyDataWithHeader(ListView listView, View headerView, int nu
     }
 
     protected void setDummyData(GridView gridView) {
-        gridView.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, getDummyData()));
+        gridView.setAdapter(new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, getDummyData()));
     }
 
     protected void setDummyData(RecyclerView recyclerView) {

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/BaseFragment.java
Patch:
@@ -56,7 +56,7 @@ protected int getScreenHeight() {
     }
 
     protected void setDummyData(ListView listView) {
-        listView.setAdapter(new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, getDummyData()));
+        listView.setAdapter(new ArrayAdapter<>(getActivity(), android.R.layout.simple_list_item_1, getDummyData()));
     }
 
     protected void setDummyDataWithHeader(ListView listView, View headerView) {
@@ -65,7 +65,7 @@ protected void setDummyDataWithHeader(ListView listView, View headerView) {
     }
 
     protected void setDummyData(GridView gridView) {
-        gridView.setAdapter(new ArrayAdapter<String>(getActivity(), android.R.layout.simple_list_item_1, getDummyData()));
+        gridView.setAdapter(new ArrayAdapter<>(getActivity(), android.R.layout.simple_list_item_1, getDummyData()));
     }
 
     protected void setDummyData(RecyclerView recyclerView) {

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceWithImageListViewActivity.java
Patch:
@@ -20,7 +20,6 @@
 import android.content.res.Configuration;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.v7.widget.Toolbar;
 import android.view.View;
 import android.widget.AbsListView;
 import android.widget.FrameLayout;

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceWithImageRecyclerViewActivity.java
Patch:
@@ -5,7 +5,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.Toolbar;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.TextView;

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/MainActivity.java
Patch:
@@ -58,7 +58,7 @@ public int compare(Map<String, Object> lhs, Map<String, Object> rhs) {
     private ListView listView;
 
     // Quickly navigate through the examples.
-    static enum Filter {
+    enum Filter {
         All,
         GridView,
         RecyclerView,
@@ -124,7 +124,7 @@ public boolean onOptionsItemSelected(final MenuItem menu) {
     }
 
     private List<Map<String, Object>> getData() {
-        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>();
+        List<Map<String, Object>> data = new ArrayList<>();
 
         Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
         mainIntent.setPackage(getApplicationContext().getPackageName());
@@ -179,7 +179,7 @@ protected Intent activityIntent(String pkg, String componentName) {
 
     protected void addItem(List<Map<String, Object>> data, String className, String description,
                            Intent intent) {
-        Map<String, Object> temp = new HashMap<String, Object>();
+        Map<String, Object> temp = new HashMap<>();
         temp.put(TAG_CLASS_NAME, className);
         temp.put(TAG_DESCRIPTION, description);
         temp.put(TAG_INTENT, intent);

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ActionBarControlGridViewActivity.java
Patch:
@@ -46,6 +46,9 @@ public void onDownMotionEvent() {
     @Override
     public void onUpOrCancelMotionEvent(ScrollState scrollState) {
         ActionBar ab = getSupportActionBar();
+        if (ab == null) {
+            return;
+        }
         if (scrollState == ScrollState.UP) {
             if (ab.isShowing()) {
                 ab.hide();

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ActionBarControlListViewActivity.java
Patch:
@@ -63,6 +63,9 @@ public void onDownMotionEvent() {
     @Override
     public void onUpOrCancelMotionEvent(ScrollState scrollState) {
         ActionBar ab = getSupportActionBar();
+        if (ab == null) {
+            return;
+        }
         if (scrollState == ScrollState.UP) {
             if (ab.isShowing()) {
                 ab.hide();

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ActionBarControlRecyclerViewActivity.java
Patch:
@@ -49,6 +49,9 @@ public void onDownMotionEvent() {
     @Override
     public void onUpOrCancelMotionEvent(ScrollState scrollState) {
         ActionBar ab = getSupportActionBar();
+        if (ab == null) {
+            return;
+        }
         if (scrollState == ScrollState.UP) {
             if (ab.isShowing()) {
                 ab.hide();

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ActionBarControlScrollViewActivity.java
Patch:
@@ -45,6 +45,9 @@ public void onDownMotionEvent() {
     @Override
     public void onUpOrCancelMotionEvent(ScrollState scrollState) {
         ActionBar ab = getSupportActionBar();
+        if (ab == null) {
+            return;
+        }
         if (scrollState == ScrollState.UP) {
             if (ab.isShowing()) {
                 ab.hide();

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ActionBarControlWebViewActivity.java
Patch:
@@ -46,6 +46,9 @@ public void onDownMotionEvent() {
     @Override
     public void onUpOrCancelMotionEvent(ScrollState scrollState) {
         ActionBar ab = getSupportActionBar();
+        if (ab == null) {
+            return;
+        }
         if (scrollState == ScrollState.UP) {
             if (ab.isShowing()) {
                 ab.hide();

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FragmentActionBarControlListViewFragment.java
Patch:
@@ -60,6 +60,9 @@ public void onUpOrCancelMotionEvent(ScrollState scrollState) {
             return;
         }
         ActionBar ab = activity.getSupportActionBar();
+        if (ab == null) {
+            return;
+        }
         if (scrollState == ScrollState.UP) {
             if (ab.isShowing()) {
                 ab.hide();

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ViewPagerTabListViewFragment.java
Patch:
@@ -36,7 +36,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         Activity parentActivity = getActivity();
         final ObservableListView listView = (ObservableListView) view.findViewById(R.id.scroll);
-        setDummyDataWithHeader(listView, inflater.inflate(R.layout.padding, null));
+        setDummyDataWithHeader(listView, inflater.inflate(R.layout.padding, listView, false));
 
         if (parentActivity instanceof ObservableScrollViewCallbacks) {
             // Scroll to the specified position after layout

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceWithImageBaseFragment.java
Patch:
@@ -25,10 +25,10 @@
 public abstract class FlexibleSpaceWithImageBaseFragment<S extends Scrollable> extends BaseFragment
         implements ObservableScrollViewCallbacks {
 
-    protected static final float MAX_TEXT_SCALE_DELTA = 0.3f;
+    public static final String ARG_SCROLL_Y = "ARG_SCROLL_Y";
 
-    protected void updateFlexibleSpace() {
-        updateFlexibleSpace(getScrollable().getCurrentScrollY(), getView());
+    protected void updateFlexibleSpace(int scrollY) {
+        updateFlexibleSpace(scrollY, getView());
     }
 
     protected abstract void updateFlexibleSpace(int scrollY, View view);

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceWithImageWithViewPagerTab2Activity.java
Patch:
@@ -232,7 +232,7 @@ private void updateLayout() {
             translationY = mScroller.getCurrY();
             Log.e("DEBUG", "updateLayout: currY: " + mScroller.getCurrY() + " velocity: " + mScroller.getCurrVelocity());
             int flexibleSpace = mFlexibleSpaceHeight - mTabHeight;
-            if (-flexibleSpace < translationY && translationY < 0) {
+            if (-flexibleSpace <= translationY && translationY <= 0) {
                 needsUpdate = true;
             } else if (translationY < -flexibleSpace) {
                 translationY = -flexibleSpace;

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceWithImageBaseFragment.java
Patch:
@@ -27,7 +27,7 @@ public abstract class FlexibleSpaceWithImageBaseFragment<S extends Scrollable> e
 
     protected static final float MAX_TEXT_SCALE_DELTA = 0.3f;
 
-    public final void updateFlexibleSpace() {
+    protected void updateFlexibleSpace() {
         updateFlexibleSpace(getScrollable().getCurrentScrollY(), getView());
     }
 

File: samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceWithImageListViewFragment.java
Patch:
@@ -68,7 +68,6 @@ protected void updateFlexibleSpace(int scrollY, View view) {
         View imageView = view.findViewById(R.id.image);
         View overlayView = view.findViewById(R.id.overlay);
         ObservableListView scrollView = (ObservableListView) view.findViewById(R.id.scroll);
-        scrollView.setScrollViewCallbacks(this);
         TextView titleView = (TextView) view.findViewById(R.id.title);
         View listBackgroundView = view.findViewById(R.id.list_background);
 

File: library/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableRecyclerView.java
Patch:
@@ -142,6 +142,7 @@ protected void onScrollChanged(int l, int t, int oldl, int oldt) {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
                     } else if (firstVisiblePosition == 0) {
                         mPrevFirstVisibleChildHeight = firstVisibleChild.getHeight();
+                        mPrevScrolledChildrenHeight = 0;
                     }
                     if (mPrevFirstVisibleChildHeight < 0) {
                         mPrevFirstVisibleChildHeight = 0;

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ToolbarControlBaseActivity.java
Patch:
@@ -99,7 +99,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 ViewHelper.setTranslationY(mToolbar, translationY);
                 ViewHelper.setTranslationY((View) mScrollable, translationY);
                 FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) ((View) mScrollable).getLayoutParams();
-                lp.height = (int) -translationY + getScreenHeight();
+                lp.height = (int) -translationY + getScreenHeight() - lp.topMargin;
                 ((View) mScrollable).requestLayout();
             }
         });

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ScrollFromBottomListViewActivity.java
Patch:
@@ -77,8 +77,8 @@ public void run() {
 
     @Override
     public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-        if (dragging) {
-            int toolbarHeight = mToolbarView.getHeight();
+        int toolbarHeight = mToolbarView.getHeight();
+        if (dragging || scrollY < toolbarHeight) {
             if (firstScroll) {
                 float currentHeaderTranslationY = ViewHelper.getTranslationY(mHeaderView);
                 if (-toolbarHeight < currentHeaderTranslationY && toolbarHeight < scrollY) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ScrollFromBottomRecyclerViewActivity.java
Patch:
@@ -75,8 +75,8 @@ public void run() {
 
     @Override
     public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-        if (dragging) {
-            int toolbarHeight = mToolbarView.getHeight();
+        int toolbarHeight = mToolbarView.getHeight();
+        if (dragging || scrollY < toolbarHeight) {
             if (firstScroll) {
                 float currentHeaderTranslationY = ViewHelper.getTranslationY(mHeaderView);
                 if (-toolbarHeight < currentHeaderTranslationY && toolbarHeight < scrollY) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ToolbarControlListViewActivity.java
Patch:
@@ -74,8 +74,8 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
 
     @Override
     public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-        if (dragging) {
-            int toolbarHeight = mToolbarView.getHeight();
+        int toolbarHeight = mToolbarView.getHeight();
+        if (dragging || scrollY < toolbarHeight) {
             if (firstScroll) {
                 float currentHeaderTranslationY = ViewHelper.getTranslationY(mHeaderView);
                 if (-toolbarHeight < currentHeaderTranslationY && toolbarHeight < scrollY) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ToolbarControlRecyclerViewActivity.java
Patch:
@@ -58,8 +58,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-        if (dragging) {
-            int toolbarHeight = mToolbarView.getHeight();
+        int toolbarHeight = mToolbarView.getHeight();
+        if (dragging || scrollY < toolbarHeight) {
             if (firstScroll) {
                 float currentHeaderTranslationY = ViewHelper.getTranslationY(mHeaderView);
                 if (-toolbarHeight < currentHeaderTranslationY && toolbarHeight < scrollY) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ToolbarControlScrollViewActivity.java
Patch:
@@ -52,8 +52,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-        if (dragging) {
-            int toolbarHeight = mToolbarView.getHeight();
+        int toolbarHeight = mToolbarView.getHeight();
+        if (dragging || scrollY < toolbarHeight) {
             if (firstScroll) {
                 float currentHeaderTranslationY = ViewHelper.getTranslationY(mHeaderView);
                 if (-toolbarHeight < currentHeaderTranslationY && toolbarHeight < scrollY) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ToolbarControlWebViewActivity.java
Patch:
@@ -60,8 +60,8 @@ protected void onCreate(Bundle savedInstanceState) {
     private ObservableScrollViewCallbacks mScrollViewScrollCallbacks = new ObservableScrollViewCallbacks() {
         @Override
         public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-            if (mDragging) {
-                int toolbarHeight = mToolbarView.getHeight();
+            int toolbarHeight = mToolbarView.getHeight();
+            if (mDragging || scrollY < toolbarHeight) {
                 if (mFirstScroll) {
                     mFirstScroll = false;
                     float currentHeaderTranslationY = ViewHelper.getTranslationY(mHeaderView);

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/BaseActivity.java
Patch:
@@ -65,8 +65,8 @@ protected void setDummyDataWithHeader(ListView listView, int headerHeight) {
     }
 
     protected void setDummyDataWithHeader(ListView listView, View headerView) {
-        setDummyData(listView);
         listView.addHeaderView(headerView);
+        setDummyData(listView);
     }
 
     protected void setDummyData(GridView gridView) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/BaseFragment.java
Patch:
@@ -35,8 +35,8 @@ protected void setDummyData(ListView listView) {
     }
 
     protected void setDummyDataWithHeader(ListView listView, View headerView) {
-        setDummyData(listView);
         listView.addHeaderView(headerView);
+        setDummyData(listView);
     }
 
     protected void setDummyData(GridView gridView) {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/SlidingUpBaseActivity.java
Patch:
@@ -295,11 +295,11 @@ public void onAnimationUpdate(ValueAnimator animation) {
 
     private void changeToolbarTitleVisibility() {
         if (ViewHelper.getTranslationY(mInterceptionLayout) <= mIntersectionHeight) {
-            if (ViewHelper.getAlpha(mToolbarTitle) == 0) {
+            if (ViewHelper.getAlpha(mToolbarTitle) != 1) {
                 ViewPropertyAnimator.animate(mToolbarTitle).cancel();
                 ViewPropertyAnimator.animate(mToolbarTitle).alpha(1).setDuration(200).start();
             }
-        } else if (ViewHelper.getAlpha(mToolbarTitle) == 1) {
+        } else if (ViewHelper.getAlpha(mToolbarTitle) != 0) {
             ViewPropertyAnimator.animate(mToolbarTitle).cancel();
             ViewPropertyAnimator.animate(mToolbarTitle).alpha(0).setDuration(200).start();
         } else {

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ScrollFromBottomListViewActivity.java
Patch:
@@ -66,8 +66,8 @@ protected void onCreate(Bundle savedInstanceState) {
         mListView.setScrollViewCallbacks(this);
 
         LayoutInflater inflater = LayoutInflater.from(this);
-        mListView.addHeaderView(inflater.inflate(R.layout.padding, null)); // toolbar
-        mListView.addHeaderView(inflater.inflate(R.layout.padding, null)); // sticky view
+        mListView.addHeaderView(inflater.inflate(R.layout.padding, mListView, false)); // toolbar
+        mListView.addHeaderView(inflater.inflate(R.layout.padding, mListView, false)); // sticky view
         List<String> items = new ArrayList<String>();
         for (int i = 1; i <= 100; i++) {
             items.add("Item " + i);

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/ToolbarControlListViewActivity.java
Patch:
@@ -58,8 +58,8 @@ protected void onCreate(Bundle savedInstanceState) {
         mListView.setScrollViewCallbacks(this);
 
         LayoutInflater inflater = LayoutInflater.from(this);
-        mListView.addHeaderView(inflater.inflate(R.layout.padding, null)); // toolbar
-        mListView.addHeaderView(inflater.inflate(R.layout.padding, null)); // sticky view
+        mListView.addHeaderView(inflater.inflate(R.layout.padding, mListView, false)); // toolbar
+        mListView.addHeaderView(inflater.inflate(R.layout.padding, mListView, false)); // sticky view
         List<String> items = new ArrayList<String>();
         for (int i = 1; i <= 100; i++) {
             items.add("Item " + i);

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceToolbarScrollViewActivity.java
Patch:
@@ -52,7 +52,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setTitle(null);
         mToolbarView = findViewById(R.id.toolbar);
 
-        ObservableScrollView scrollView = (ObservableScrollView) findViewById(R.id.scroll);
+        final ObservableScrollView scrollView = (ObservableScrollView) findViewById(R.id.scroll);
         scrollView.setScrollViewCallbacks(this);
 
         mFlexibleSpaceHeight = getResources().getDimensionPixelSize(R.dimen.flexible_space_height);
@@ -70,14 +70,13 @@ public void onGlobalLayout() {
                 } else {
                     mTitleView.getViewTreeObserver().removeOnGlobalLayoutListener(this);
                 }
-                updateFlexibleSpaceText(0);
+                updateFlexibleSpaceText(scrollView.getCurrentScrollY());
             }
         });
     }
 
     @Override
     public void onScrollChanged(int scrollY, boolean firstScroll, boolean dragging) {
-        ViewHelper.setTranslationY(mFlexibleSpaceView, -scrollY);
         updateFlexibleSpaceText(scrollY);
     }
 
@@ -90,6 +89,7 @@ public void onUpOrCancelMotionEvent(ScrollState scrollState) {
     }
 
     private void updateFlexibleSpaceText(final int scrollY) {
+        ViewHelper.setTranslationY(mFlexibleSpaceView, -scrollY);
         int adjustedScrollY = scrollY;
         if (scrollY < 0) {
             adjustedScrollY = 0;

File: observablescrollview-samples/src/main/java/com/github/ksoichiro/android/observablescrollview/samples/FlexibleSpaceToolbarScrollViewActivity.java
Patch:
@@ -24,7 +24,6 @@
 import android.util.TypedValue;
 import android.view.View;
 import android.view.ViewTreeObserver;
-import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import com.github.ksoichiro.android.observablescrollview.ObservableScrollView;
@@ -59,7 +58,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mFlexibleSpaceHeight = getResources().getDimensionPixelSize(R.dimen.flexible_space_height);
         int flexibleSpaceAndToolbarHeight = mFlexibleSpaceHeight + getActionBarSize();
 
-        ((FrameLayout.LayoutParams) findViewById(R.id.body).getLayoutParams()).topMargin = flexibleSpaceAndToolbarHeight;
+        findViewById(R.id.body).setPadding(0, flexibleSpaceAndToolbarHeight, 0, 0);
         mFlexibleSpaceView.getLayoutParams().height = flexibleSpaceAndToolbarHeight;
 
         ViewTreeObserver vto = mTitleView.getViewTreeObserver();

File: observablescrollview/src/main/java/com/github/ksoichiro/android/observablescrollview/ObservableListView.java
Patch:
@@ -54,6 +54,9 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
             if (mOriginalScrollListener != null) {
                 mOriginalScrollListener.onScroll(view, firstVisibleItem, visibleItemCount, totalItemCount);
             }
+            // AbsListView#invokeOnItemScrollListener calls onScrollChanged(0, 0, 0, 0)
+            // on Android 4.0+, but Android 2.3 is not. (Android 3.0 is unknown)
+            // So call it with onScrollListener.
             onScrollChanged();
         }
     };

