File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -928,6 +928,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
         _menu = menu;
         getMenuInflater().inflate(R.menu.menu_main, menu);
 
+        updateLockIcon();
+        updateSortCategoryMenu();
+
         MenuItem searchViewMenuItem = menu.findItem(R.id.mi_search);
         _searchView = (SearchView) searchViewMenuItem.getActionView();
         _searchView.setMaxWidth(Integer.MAX_VALUE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -920,6 +920,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
         _menu = menu;
         getMenuInflater().inflate(R.menu.menu_main, menu);
 
+        updateLockIcon();
+        updateSortCategoryMenu();
+
         MenuItem searchViewMenuItem = menu.findItem(R.id.mi_search);
         _searchView = (SearchView) searchViewMenuItem.getActionView();
         _searchView.setMaxWidth(Integer.MAX_VALUE);

File: app/src/main/java/com/beemdevelopment/aegis/crypto/otp/YAOTP.java
Patch:
@@ -25,10 +25,10 @@ private YAOTP(long code, int digits) {
     public static YAOTP generateOTP(byte[] secret, String pin, int digits, String otpAlgo, long period)
             throws NoSuchAlgorithmException, InvalidKeyException, IOException {
         long seconds = System.currentTimeMillis() / 1000;
-        return generateOTP(secret, pin, digits, otpAlgo, seconds, period);
+        return generateOTP(secret, pin, digits, otpAlgo, period, seconds);
     }
 
-    public static YAOTP generateOTP(byte[] secret, String pin, int digits, String otpAlgo, long seconds, long period)
+    public static YAOTP generateOTP(byte[] secret, String pin, int digits, String otpAlgo, long period, long seconds)
             throws NoSuchAlgorithmException, InvalidKeyException, IOException {
         byte[] pinWithHash;
         byte[] pinBytes = pin.getBytes(StandardCharsets.UTF_8);

File: app/src/main/java/com/beemdevelopment/aegis/otp/SteamInfo.java
Patch:
@@ -20,11 +20,11 @@ public SteamInfo(byte[] secret, String algorithm, int digits, int period) throws
     }
 
     @Override
-    public String getOtp() throws OtpInfoException {
+    public String getOtp(long time) throws OtpInfoException {
         checkSecret();
 
         try {
-            OTP otp = TOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getPeriod());
+            OTP otp = TOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getPeriod(), time);
             return otp.toSteamString();
         } catch (InvalidKeyException | NoSuchAlgorithmException e) {
             throw new RuntimeException(e);

File: app/src/main/java/com/beemdevelopment/aegis/otp/YandexInfo.java
Patch:
@@ -38,13 +38,13 @@ public YandexInfo(@NonNull byte[] secret, @Nullable String pin) throws OtpInfoEx
     }
 
     @Override
-    public String getOtp() {
+    public String getOtp(long time) {
         if (_pin == null) {
             throw new IllegalStateException("PIN must be set before generating an OTP");
         }
 
         try {
-            YAOTP otp = YAOTP.generateOTP(getSecret(), getPin(), getDigits(), getAlgorithm(true), getPeriod());
+            YAOTP otp = YAOTP.generateOTP(getSecret(), getPin(), getDigits(), getAlgorithm(true), getPeriod(), time);
             return otp.toString();
         } catch (InvalidKeyException | NoSuchAlgorithmException | IOException e) {
             throw new RuntimeException(e);

File: app/src/test/java/com/beemdevelopment/aegis/crypto/otp/YAOTPTest.java
Patch:
@@ -32,8 +32,8 @@ public void validateYaOtp()
                     testCase.pin,
                     8,
                     "HmacSHA256",
-                    testCase.timestamp,
-                    30
+                    30,
+                    testCase.timestamp
             );
             assertEquals(testCase.expected, otp.toString());
         }

File: app/src/main/java/com/beemdevelopment/aegis/crypto/otp/YAOTP.java
Patch:
@@ -25,10 +25,10 @@ private YAOTP(long code, int digits) {
     public static YAOTP generateOTP(byte[] secret, String pin, int digits, String otpAlgo, long period)
             throws NoSuchAlgorithmException, InvalidKeyException, IOException {
         long seconds = System.currentTimeMillis() / 1000;
-        return generateOTP(secret, pin, digits, otpAlgo, seconds, period);
+        return generateOTP(secret, pin, digits, otpAlgo, period, seconds);
     }
 
-    public static YAOTP generateOTP(byte[] secret, String pin, int digits, String otpAlgo, long seconds, long period)
+    public static YAOTP generateOTP(byte[] secret, String pin, int digits, String otpAlgo, long period, long seconds)
             throws NoSuchAlgorithmException, InvalidKeyException, IOException {
         byte[] pinWithHash;
         byte[] pinBytes = pin.getBytes(StandardCharsets.UTF_8);

File: app/src/main/java/com/beemdevelopment/aegis/otp/SteamInfo.java
Patch:
@@ -20,11 +20,11 @@ public SteamInfo(byte[] secret, String algorithm, int digits, int period) throws
     }
 
     @Override
-    public String getOtp() throws OtpInfoException {
+    public String getOtp(long time) throws OtpInfoException {
         checkSecret();
 
         try {
-            OTP otp = TOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getPeriod());
+            OTP otp = TOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getPeriod(), time);
             return otp.toSteamString();
         } catch (InvalidKeyException | NoSuchAlgorithmException e) {
             throw new RuntimeException(e);

File: app/src/main/java/com/beemdevelopment/aegis/otp/YandexInfo.java
Patch:
@@ -38,13 +38,13 @@ public YandexInfo(@NonNull byte[] secret, @Nullable String pin) throws OtpInfoEx
     }
 
     @Override
-    public String getOtp() {
+    public String getOtp(long time) {
         if (_pin == null) {
             throw new IllegalStateException("PIN must be set before generating an OTP");
         }
 
         try {
-            YAOTP otp = YAOTP.generateOTP(getSecret(), getPin(), getDigits(), getAlgorithm(true), getPeriod());
+            YAOTP otp = YAOTP.generateOTP(getSecret(), getPin(), getDigits(), getAlgorithm(true), getPeriod(), time);
             return otp.toString();
         } catch (InvalidKeyException | NoSuchAlgorithmException | IOException e) {
             throw new RuntimeException(e);

File: app/src/test/java/com/beemdevelopment/aegis/crypto/otp/YAOTPTest.java
Patch:
@@ -32,8 +32,8 @@ public void validateYaOtp()
                     testCase.pin,
                     8,
                     "HmacSHA256",
-                    testCase.timestamp,
-                    30
+                    30,
+                    testCase.timestamp
             );
             assertEquals(testCase.expected, otp.toString());
         }

File: app/src/main/java/com/beemdevelopment/aegis/helpers/ThemeHelper.java
Patch:
@@ -33,7 +33,10 @@ public void setTheme(Map<Theme, Integer> themeMap) {
             DynamicColorsOptions.Builder optsBuilder = new DynamicColorsOptions.Builder();
             if (getConfiguredTheme().equals(Theme.AMOLED)) {
                 optsBuilder.setThemeOverlay(R.style.ThemeOverlay_Aegis_Dynamic_Amoled);
+            } else if (getConfiguredTheme().equals(Theme.DARK)) {
+                optsBuilder.setThemeOverlay(R.style.ThemeOverlay_Aegis_Dynamic_Dark);
             }
+
             DynamicColors.applyToActivityIfAvailable(_activity, optsBuilder.build());
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/helpers/ThemeHelper.java
Patch:
@@ -33,7 +33,10 @@ public void setTheme(Map<Theme, Integer> themeMap) {
             DynamicColorsOptions.Builder optsBuilder = new DynamicColorsOptions.Builder();
             if (getConfiguredTheme().equals(Theme.AMOLED)) {
                 optsBuilder.setThemeOverlay(R.style.ThemeOverlay_Aegis_Dynamic_Amoled);
+            } else if (getConfiguredTheme().equals(Theme.DARK)) {
+                optsBuilder.setThemeOverlay(R.style.ThemeOverlay_Aegis_Dynamic_Dark);
             }
+
             DynamicColors.applyToActivityIfAvailable(_activity, optsBuilder.build());
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -40,7 +40,7 @@ public abstract class DatabaseImporter {
         _importers.add(new Definition("Bitwarden", BitwardenImporter.class, R.string.importer_help_bitwarden, false));
         _importers.add(new Definition("Duo", DuoImporter.class, R.string.importer_help_duo, true));
         _importers.add(new Definition("Ente Auth", EnteAuthImporter.class, R.string.importer_help_ente_auth, false));
-        _importers.add(new Definition("FreeOTP (1.x)", FreeOtpImporter.class, R.string.importer_help_freeotp, true));
+        _importers.add(new Definition("FreeOTP", FreeOtpImporter.class, R.string.importer_help_freeotp, true));
         _importers.add(new Definition("FreeOTP+ (JSON)", FreeOtpPlusImporter.class, R.string.importer_help_freeotp_plus, true));
         _importers.add(new Definition("Google Authenticator", GoogleAuthImporter.class, R.string.importer_help_google_authenticator, true));
         _importers.add(new Definition("Microsoft Authenticator", MicrosoftAuthImporter.class, R.string.importer_help_microsoft_authenticator, true));

File: app/src/main/java/com/beemdevelopment/aegis/importers/FreeOtpPlusImporter.java
Patch:
@@ -46,7 +46,7 @@ public State read(InputStream stream, boolean isInternal) throws DatabaseImporte
                     entries.add(array.getJSONObject(i));
                 }
 
-                state = new FreeOtpImporter.State(entries);
+                state = new FreeOtpImporter.DecryptedStateV1(entries);
             } catch (IOException | JSONException e) {
                 throw new DatabaseImporterException(e);
             }

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/AppearancePreferencesFragment.java
Patch:
@@ -77,7 +77,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         });
 
         Preference langPreference = requirePreference("pref_lang");
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.M) {
             String[] langs = getResources().getStringArray(R.array.pref_lang_values);
             String[] langNames = getResources().getStringArray(R.array.pref_lang_entries);
             List<String> langList = Arrays.asList(langs);

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/AppearancePreferencesFragment.java
Patch:
@@ -77,7 +77,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         });
 
         Preference langPreference = requirePreference("pref_lang");
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.M) {
             String[] langs = getResources().getStringArray(R.array.pref_lang_values);
             String[] langNames = getResources().getStringArray(R.array.pref_lang_entries);
             List<String> langList = Arrays.asList(langs);

File: app/src/main/java/com/beemdevelopment/aegis/GroupPlaceholderType.java
Patch:
@@ -2,12 +2,15 @@
 
 public enum GroupPlaceholderType {
     ALL,
+    NEW_GROUP,
     NO_GROUP;
 
     public int getStringRes() {
         switch (this) {
             case ALL:
                 return R.string.all;
+            case NEW_GROUP:
+                return R.string.new_group;
             case NO_GROUP:
                 return R.string.no_group;
             default:

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -493,7 +493,7 @@ private void startAssignGroupsDialog() {
 
         Collection<VaultGroup> groups = _vaultManager.getVault().getUsedGroups();
         List<VaultGroupModel> groupModels = new ArrayList<>();
-        groupModels.add(new VaultGroupModel(getString(R.string.new_group)));
+        groupModels.add(new VaultGroupModel(this, GroupPlaceholderType.NEW_GROUP));
         groupModels.addAll(groups.stream().map(VaultGroupModel::new).collect(Collectors.toList()));
         DropdownHelper.fillDropdown(this, groupsSelection, groupModels);
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -556,11 +556,11 @@ public void onClick(View v) {
                         if (_highlightEntry || _tempHighlightEntry || _tapToReveal) {
                             if (_focusedEntry == entry) {
                                 resetFocus();
-
-                                // Prevent copying when singletap is set and focus is reset
-                                handled = _copyBehavior == CopyBehavior.SINGLETAP;
                             } else {
                                 focusEntry(entry, _tapToRevealTime);
+
+                                // Prevent copying when singletap is set and the entry is being revealed
+                                handled = _copyBehavior == CopyBehavior.SINGLETAP && _tapToReveal;
                             }
                         }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -241,7 +241,7 @@ private void showPasswordReminder() {
         popup.setFocusable(false);
         popup.setOutsideTouchable(true);
         _textPassword.post(() -> {
-            if (isFinishing()) {
+            if (isFinishing() || !_textPassword.isAttachedToWindow()) {
                 return;
             }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/BackupsPreferencesFragment.java
Patch:
@@ -52,7 +52,6 @@ public void onResume() {
 
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        super.onCreatePreferences(savedInstanceState, rootKey);
         addPreferencesFromResource(R.xml.preferences_backups);
 
         _backupsPasswordWarningPreference = requirePreference("pref_backups_warning_password");

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/MainPreferencesFragment.java
Patch:
@@ -7,7 +7,6 @@
 public class MainPreferencesFragment extends PreferencesFragment {
     @Override
     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
-        super.onCreatePreferences(savedInstanceState, rootKey);
         addPreferencesFromResource(R.xml.preferences);
     }
 }

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -520,7 +520,6 @@ private void updateSortCategoryMenu() {
 
     private void onIntroResult() {
         loadEntries();
-        checkTimeSyncSetting();
     }
 
     private void checkTimeSyncSetting() {
@@ -537,7 +536,6 @@ private void onDecryptResult() {
         _auditLogRepository.addVaultUnlockedEvent();
 
         loadEntries();
-        checkTimeSyncSetting();
     }
 
     private void startScanActivity() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -520,7 +520,6 @@ private void updateSortCategoryMenu() {
 
     private void onIntroResult() {
         loadEntries();
-        checkTimeSyncSetting();
     }
 
     private void checkTimeSyncSetting() {
@@ -537,7 +536,6 @@ private void onDecryptResult() {
         _auditLogRepository.addVaultUnlockedEvent();
 
         loadEntries();
-        checkTimeSyncSetting();
     }
 
     private void startScanActivity() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/AuditLogHolder.java
Patch:
@@ -20,6 +20,7 @@
 import java.time.LocalDateTime;
 import java.time.ZoneId;
 import java.time.format.DateTimeFormatter;
+import java.time.format.FormatStyle;
 import java.time.temporal.ChronoUnit;
 
 public class AuditLogHolder extends RecyclerView.ViewHolder {
@@ -133,7 +134,7 @@ private static String formatTimestamp(Context context, long epochMilli) {
             String formattedTime = timestamp.format(timeFormatter);
             return context.getString(R.string.day_of_week_at_time, dayOfWeek, formattedTime);
         } else {
-            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(context.getString(R.string.date_format));
+            DateTimeFormatter dateFormatter = DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM);
             return timestamp.format(dateFormatter);
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/AuditLogHolder.java
Patch:
@@ -20,6 +20,7 @@
 import java.time.LocalDateTime;
 import java.time.ZoneId;
 import java.time.format.DateTimeFormatter;
+import java.time.format.FormatStyle;
 import java.time.temporal.ChronoUnit;
 
 public class AuditLogHolder extends RecyclerView.ViewHolder {
@@ -133,7 +134,7 @@ private static String formatTimestamp(Context context, long epochMilli) {
             String formattedTime = timestamp.format(timeFormatter);
             return context.getString(R.string.day_of_week_at_time, dayOfWeek, formattedTime);
         } else {
-            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(context.getString(R.string.date_format));
+            DateTimeFormatter dateFormatter = DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM);
             return timestamp.format(dateFormatter);
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -857,6 +857,7 @@ private void collapseSearchView() {
 
     private void loadEntries() {
         if (!_loaded) {
+            _entryListView.setGroups(_vaultManager.getVault().getUsedGroups());
             _entryListView.setUsageCounts(_prefs.getUsageCounts());
             _entryListView.setLastUsedTimestamps(_prefs.getLastUsedTimestamps());
             _entryListView.addEntries(_vaultManager.getVault().getEntries());

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -857,6 +857,7 @@ private void collapseSearchView() {
 
     private void loadEntries() {
         if (!_loaded) {
+            _entryListView.setGroups(_vaultManager.getVault().getUsedGroups());
             _entryListView.setUsageCounts(_prefs.getUsageCounts());
             _entryListView.setLastUsedTimestamps(_prefs.getLastUsedTimestamps());
             _entryListView.addEntries(_vaultManager.getVault().getEntries());

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -657,8 +657,8 @@ private void handleIncomingIntent() {
     }
 
     @Override
-    protected void onResume() {
-        super.onResume();
+    protected void onStart() {
+        super.onStart();
 
         if (_vaultManager.isVaultInitNeeded()) {
             if (_prefs.isIntroDone()) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -657,8 +657,8 @@ private void handleIncomingIntent() {
     }
 
     @Override
-    protected void onResume() {
-        super.onResume();
+    protected void onStart() {
+        super.onStart();
 
         if (_vaultManager.isVaultInitNeeded()) {
             if (_prefs.isIntroDone()) {

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -39,7 +39,7 @@ public abstract class DatabaseImporter {
         _importers.add(new Definition("Battle.net Authenticator", BattleNetImporter.class, R.string.importer_help_battle_net_authenticator, true));
         _importers.add(new Definition("Bitwarden", BitwardenImporter.class, R.string.importer_help_bitwarden, false));
         _importers.add(new Definition("Duo", DuoImporter.class, R.string.importer_help_duo, true));
-        _importers.add(new Definition("FreeOTP", FreeOtpImporter.class, R.string.importer_help_freeotp, true));
+        _importers.add(new Definition("FreeOTP (1.x)", FreeOtpImporter.class, R.string.importer_help_freeotp, true));
         _importers.add(new Definition("FreeOTP+", FreeOtpPlusImporter.class, R.string.importer_help_freeotp_plus, true));
         _importers.add(new Definition("Google Authenticator", GoogleAuthImporter.class, R.string.importer_help_google_authenticator, true));
         _importers.add(new Definition("Microsoft Authenticator", MicrosoftAuthImporter.class, R.string.importer_help_microsoft_authenticator, true));

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -1047,6 +1047,9 @@ public void onScroll(int dx, int dy) {
 
     @Override
     public void onSaveGroupFilter(Set<UUID> groupFilter) {
+        if (_vaultManager.getVault().isGroupsMigrationFresh()) {
+            saveAndBackupVault();
+        }
         _prefs.setGroupFilter(groupFilter);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AboutActivity.java
Patch:
@@ -16,11 +16,11 @@
 
 import com.beemdevelopment.aegis.BuildConfig;
 import com.beemdevelopment.aegis.R;
-import com.beemdevelopment.aegis.helpers.ThemeHelper;
 import com.beemdevelopment.aegis.licenses.GlideLicense;
 import com.beemdevelopment.aegis.licenses.ProtobufLicense;
 import com.beemdevelopment.aegis.ui.dialogs.ChangelogDialog;
 import com.beemdevelopment.aegis.ui.dialogs.LicenseDialog;
+import com.google.android.material.color.MaterialColors;
 
 import de.psdev.licensesdialog.LicenseResolver;
 import de.psdev.licensesdialog.LicensesDialog;
@@ -148,7 +148,8 @@ private void showThirdPartyLicenseDialog() {
     }
 
     private String getThemeColorAsHex(@AttrRes int attributeId) {
-        return String.format("%06X", (0xFFFFFF & ThemeHelper.getThemeColor(attributeId, getTheme())));
+        int color = MaterialColors.getColor(this, attributeId, getClass().getCanonicalName());
+        return String.format("%06X", 0xFFFFFF & color);
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -22,11 +22,11 @@
 import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.Theme;
 import com.beemdevelopment.aegis.ThemeMap;
-import com.beemdevelopment.aegis.helpers.ThemeHelper;
 import com.beemdevelopment.aegis.icons.IconPackManager;
 import com.beemdevelopment.aegis.vault.VaultManager;
 import com.beemdevelopment.aegis.vault.VaultRepositoryException;
 import com.google.android.material.color.DynamicColors;
+import com.google.android.material.color.MaterialColors;
 
 import java.lang.reflect.Field;
 import java.lang.reflect.InvocationTargetException;
@@ -251,7 +251,7 @@ private void apply(int visibility) {
 
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                 int statusBarColor = visibility == View.VISIBLE
-                        ? ThemeHelper.getThemeColor(com.google.android.material.R.attr.colorSurfaceContainer, getTheme())
+                        ? MaterialColors.getColor(actionModeView, com.google.android.material.R.attr.colorSurfaceContainer)
                         : _statusBarColor;
                 getWindow().setStatusBarColor(statusBarColor);
             }

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/BackupsPreferencesFragment.java
Patch:
@@ -19,9 +19,9 @@
 
 import com.beemdevelopment.aegis.Preferences;
 import com.beemdevelopment.aegis.R;
-import com.beemdevelopment.aegis.helpers.ThemeHelper;
 import com.beemdevelopment.aegis.ui.dialogs.Dialogs;
 import com.beemdevelopment.aegis.vault.VaultRepositoryException;
+import com.google.android.material.color.MaterialColors;
 
 public class BackupsPreferencesFragment extends PreferencesFragment {
     private SwitchPreferenceCompat _androidBackupsPreference;
@@ -216,7 +216,7 @@ private CharSequence getBackupStatusMessage(@Nullable Preferences.BackupResult r
             message = getString(R.string.backup_status_failed, res.getElapsedSince(requireContext()));
         }
 
-        int color = ThemeHelper.getThemeColor(colorAttr, requireContext().getTheme());
+        int color = MaterialColors.getColor(requireContext(), colorAttr, getClass().getCanonicalName());
         Spannable spannable = new SpannableString(message);
         spannable.setSpan(new ForegroundColorSpan(color), 0, message.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
         spannable.setSpan(new StyleSpan(Typeface.BOLD), 0, message.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -32,7 +32,6 @@
 import com.beemdevelopment.aegis.helpers.AnimationsHelper;
 import com.beemdevelopment.aegis.helpers.MetricsHelper;
 import com.beemdevelopment.aegis.helpers.SimpleItemTouchHelperCallback;
-import com.beemdevelopment.aegis.helpers.ThemeHelper;
 import com.beemdevelopment.aegis.helpers.UiRefresher;
 import com.beemdevelopment.aegis.otp.TotpInfo;
 import com.beemdevelopment.aegis.ui.dialogs.Dialogs;
@@ -635,7 +634,7 @@ public interface Listener {
     private class CompactDividerDecoration extends MaterialDividerItemDecoration {
         public CompactDividerDecoration() {
             super(requireContext(), DividerItemDecoration.VERTICAL);
-            setDividerColor(ThemeHelper.getThemeColor(androidx.appcompat.R.attr.divider, requireContext().getTheme()));
+            setDividerColorResource(requireContext(), android.R.color.transparent);
             setLastItemDecorated(false);
             setDividerThickness(MetricsHelper.convertDpToPixels(requireContext(), 0.5f));
         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/IconHolder.java
Patch:
@@ -8,11 +8,11 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.beemdevelopment.aegis.R;
-import com.beemdevelopment.aegis.helpers.ThemeHelper;
 import com.beemdevelopment.aegis.icons.IconPack;
 import com.beemdevelopment.aegis.icons.IconType;
 import com.beemdevelopment.aegis.ui.glide.GlideHelper;
 import com.bumptech.glide.Glide;
+import com.google.android.material.color.MaterialColors;
 
 import java.io.File;
 
@@ -39,7 +39,7 @@ public void setData(IconPack.Icon icon) {
 
     public void loadIcon(Context context) {
         if (_isCustom) {
-            int tint = ThemeHelper.getThemeColor(com.google.android.material.R.attr.colorOnSurfaceVariant, context.getTheme());
+            int tint = MaterialColors.getColor(itemView, com.google.android.material.R.attr.colorOnSurfaceVariant);
             GlideHelper.loadResource(Glide.with(context), R.drawable.ic_outline_add_24, tint, _imageView);
         } else {
             GlideHelper.loadIconFile(Glide.with(context), _iconFile, _iconType, _imageView);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -103,7 +103,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         // set up the recycler view
         _recyclerView = view.findViewById(R.id.rvKeyProfiles);
-        _recyclerView.setItemAnimator(null);
         _recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
             @Override
             public void onScrolled(RecyclerView recyclerView, int dx, int dy) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/glide/AegisGlideModule.java
Patch:
@@ -6,6 +6,7 @@
 import androidx.annotation.NonNull;
 
 import com.beemdevelopment.aegis.vault.VaultEntry;
+import com.beemdevelopment.aegis.vault.VaultEntryIcon;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.Registry;
 import com.bumptech.glide.annotation.GlideModule;
@@ -19,7 +20,7 @@
 public class AegisGlideModule extends AppGlideModule {
     @Override
     public void registerComponents(@NonNull Context context, @NonNull Glide glide, @NonNull Registry registry) {
-        registry.prepend(VaultEntry.class, ByteBuffer.class, new IconLoader.Factory());
+        registry.prepend(VaultEntryIcon.class, ByteBuffer.class, new VaultEntryIconLoader.Factory());
         registry.register(SVG.class, PictureDrawable.class, new SvgDrawableTranscoder())
                 .append(InputStream.class, SVG.class, new SvgDecoder())
                 .append(ByteBuffer.class, SVG.class, new SvgBytesDecoder());

File: app/src/main/java/com/beemdevelopment/aegis/ui/glide/SvgDecoder.java
Patch:
@@ -22,7 +22,7 @@ public class SvgDecoder implements ResourceDecoder<InputStream, SVG> {
 
     @Override
     public boolean handles(@NonNull InputStream source, @NonNull Options options) {
-        return options.get(IconLoader.ICON_TYPE) == IconType.SVG;
+        return options.get(VaultEntryIconLoader.ICON_TYPE) == IconType.SVG;
     }
 
     public Resource<SVG> decode(

File: app/src/main/java/com/beemdevelopment/aegis/ui/dialogs/Dialogs.java
Patch:
@@ -407,7 +407,8 @@ public static void showErrorDialog(Context context, String message, CharSequence
 
     public static void showBackupErrorDialog(Context context, Preferences.BackupResult backupRes, DialogInterface.OnClickListener listener) {
         String system = context.getString(backupRes.isBuiltIn() ? R.string.backup_system_builtin : R.string.backup_system_android);
-        String message = context.getString(R.string.backup_error_dialog_details, system, backupRes.getElapsedSince(context));
+        @StringRes int details = backupRes.isPermissionError() ? R.string.backup_permission_error_dialog_details : R.string.backup_error_dialog_details;
+        String message = context.getString(details, system, backupRes.getElapsedSince(context));
         Dialogs.showErrorDialog(context, message, backupRes.getError(), listener);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/dialogs/Dialogs.java
Patch:
@@ -407,7 +407,8 @@ public static void showErrorDialog(Context context, String message, CharSequence
 
     public static void showBackupErrorDialog(Context context, Preferences.BackupResult backupRes, DialogInterface.OnClickListener listener) {
         String system = context.getString(backupRes.isBuiltIn() ? R.string.backup_system_builtin : R.string.backup_system_android);
-        String message = context.getString(R.string.backup_error_dialog_details, system, backupRes.getElapsedSince(context));
+        @StringRes int details = backupRes.isPermissionError() ? R.string.backup_permission_error_dialog_details : R.string.backup_error_dialog_details;
+        String message = context.getString(details, system, backupRes.getElapsedSince(context));
         Dialogs.showErrorDialog(context, message, backupRes.getError(), listener);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/dialogs/ChangelogDialog.java
Patch:
@@ -5,7 +5,7 @@
 import com.beemdevelopment.aegis.R;
 
 public class ChangelogDialog extends SimpleWebViewDialog {
-    private ChangelogDialog() {
+    public ChangelogDialog() {
         super(R.string.changelog);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/dialogs/LicenseDialog.java
Patch:
@@ -5,7 +5,7 @@
 import com.beemdevelopment.aegis.R;
 
 public class LicenseDialog extends SimpleWebViewDialog {
-    private LicenseDialog() {
+    public LicenseDialog() {
         super(R.string.license);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/ImportEntriesActivity.java
Patch:
@@ -15,14 +15,12 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
-import com.beemdevelopment.aegis.AssignIconsActivity;
 import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.helpers.FabScrollHelper;
 import com.beemdevelopment.aegis.importers.DatabaseImporter;
 import com.beemdevelopment.aegis.importers.DatabaseImporterEntryException;
 import com.beemdevelopment.aegis.importers.DatabaseImporterException;
 import com.beemdevelopment.aegis.ui.dialogs.Dialogs;
-import com.beemdevelopment.aegis.ui.models.AssignIconEntry;
 import com.beemdevelopment.aegis.ui.models.ImportEntry;
 import com.beemdevelopment.aegis.ui.tasks.RootShellTask;
 import com.beemdevelopment.aegis.ui.views.ImportEntriesAdapter;

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -35,7 +35,6 @@
 import androidx.appcompat.view.ActionMode;
 import androidx.appcompat.widget.SearchView;
 
-import com.beemdevelopment.aegis.AssignIconsActivity;
 import com.beemdevelopment.aegis.CopyBehavior;
 import com.beemdevelopment.aegis.AccountNamePosition;
 import com.beemdevelopment.aegis.Preferences;

File: app/src/main/java/com/beemdevelopment/aegis/ui/ImportEntriesActivity.java
Patch:
@@ -15,14 +15,12 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
-import com.beemdevelopment.aegis.AssignIconsActivity;
 import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.helpers.FabScrollHelper;
 import com.beemdevelopment.aegis.importers.DatabaseImporter;
 import com.beemdevelopment.aegis.importers.DatabaseImporterEntryException;
 import com.beemdevelopment.aegis.importers.DatabaseImporterException;
 import com.beemdevelopment.aegis.ui.dialogs.Dialogs;
-import com.beemdevelopment.aegis.ui.models.AssignIconEntry;
 import com.beemdevelopment.aegis.ui.models.ImportEntry;
 import com.beemdevelopment.aegis.ui.tasks.RootShellTask;
 import com.beemdevelopment.aegis.ui.views.ImportEntriesAdapter;

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -35,7 +35,6 @@
 import androidx.appcompat.view.ActionMode;
 import androidx.appcompat.widget.SearchView;
 
-import com.beemdevelopment.aegis.AssignIconsActivity;
 import com.beemdevelopment.aegis.CopyBehavior;
 import com.beemdevelopment.aegis.AccountNamePosition;
 import com.beemdevelopment.aegis.Preferences;

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -377,12 +377,12 @@ private void setGroup(String groupName) {
     private void openAdvancedSettings() {
         Animation fadeOut = new AlphaAnimation(1, 0);
         fadeOut.setInterpolator(new AccelerateInterpolator());
-        fadeOut.setDuration(220 * (long) AnimationsHelper.Scale.ANIMATOR.getValue(this));
+        fadeOut.setDuration((long) (220 * AnimationsHelper.Scale.ANIMATOR.getValue(this)));
         _advancedSettingsHeader.startAnimation(fadeOut);
 
         Animation fadeIn = new AlphaAnimation(0, 1);
         fadeIn.setInterpolator(new AccelerateInterpolator());
-        fadeIn.setDuration(250 * (long) AnimationsHelper.Scale.ANIMATOR.getValue(this));
+        fadeIn.setDuration((long) (250 * AnimationsHelper.Scale.ANIMATOR.getValue(this)));
 
         fadeOut.setAnimationListener(new SimpleAnimationEndListener((a) -> {
             _advancedSettingsHeader.setVisibility(View.GONE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -377,12 +377,12 @@ private void setGroup(String groupName) {
     private void openAdvancedSettings() {
         Animation fadeOut = new AlphaAnimation(1, 0);
         fadeOut.setInterpolator(new AccelerateInterpolator());
-        fadeOut.setDuration(220 * (long) AnimationsHelper.Scale.ANIMATOR.getValue(this));
+        fadeOut.setDuration((long) (220 * AnimationsHelper.Scale.ANIMATOR.getValue(this)));
         _advancedSettingsHeader.startAnimation(fadeOut);
 
         Animation fadeIn = new AlphaAnimation(0, 1);
         fadeIn.setInterpolator(new AccelerateInterpolator());
-        fadeIn.setDuration(250 * (long) AnimationsHelper.Scale.ANIMATOR.getValue(this));
+        fadeIn.setDuration((long) (250 * AnimationsHelper.Scale.ANIMATOR.getValue(this)));
 
         fadeOut.setAnimationListener(new SimpleAnimationEndListener((a) -> {
             _advancedSettingsHeader.setVisibility(View.GONE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -216,7 +216,7 @@ protected void onCreate(Bundle savedInstanceState) {
             IconViewHelper.setLayerType(_iconView, _origEntry.getIconType());
             Glide.with(this)
                 .asDrawable()
-                .load(_origEntry)
+                .load(_origEntry.getIcon())
                 .set(IconLoader.ICON_TYPE, _origEntry.getIconType())
                 .diskCacheStrategy(DiskCacheStrategy.NONE)
                 .skipMemoryCache(false)
@@ -500,7 +500,7 @@ private void startIconSelection() {
             return;
         }
 
-        BottomSheetDialog dialog = IconPickerDialog.create(this, iconPacks, _textIssuer.getText().toString(), new IconAdapter.Listener() {
+        BottomSheetDialog dialog = IconPickerDialog.create(this, iconPacks, _textIssuer.getText().toString(), true, new IconAdapter.Listener() {
             @Override
             public void onIconSelected(IconPack.Icon icon) {
                 selectIcon(icon);

File: app/src/main/java/com/beemdevelopment/aegis/ui/dialogs/IconPickerDialog.java
Patch:
@@ -40,7 +40,7 @@ private IconPickerDialog() {
 
     }
 
-    public static BottomSheetDialog create(Activity activity, List<IconPack> iconPacks, String issuer, IconAdapter.Listener listener) {
+    public static BottomSheetDialog create(Activity activity, List<IconPack> iconPacks, String issuer, boolean showAddCustom, IconAdapter.Listener listener) {
         View view = LayoutInflater.from(activity).inflate(R.layout.dialog_icon_picker, null);
         TextView textIconPack = view.findViewById(R.id.text_icon_pack);
 
@@ -128,7 +128,7 @@ public int getSpanSize(int position) {
         recyclerView.setLayoutManager(layoutManager);
         recyclerView.setAdapter(adapter);
         recyclerView.addOnScrollListener(preloader);
-        adapter.loadIcons(iconPacks.get(0));
+        adapter.loadIcons(iconPacks.get(0), showAddCustom);
         textIconPack.setText(iconPacks.get(0).getName());
 
         view.findViewById(R.id.btn_icon_pack).setOnClickListener(v -> {
@@ -139,7 +139,7 @@ public int getSpanSize(int position) {
             PopupMenu popupMenu = new PopupMenu(activity, v);
             popupMenu.setOnMenuItemClickListener(item -> {
                 IconPack pack = iconPacks.get(iconPackNames.indexOf(item.getTitle().toString()));
-                adapter.loadIcons(pack);
+                adapter.loadIcons(pack, showAddCustom);
 
                 String query = iconSearch.getText().toString();
                 if (!query.isEmpty()) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryHolder.java
Patch:
@@ -200,7 +200,7 @@ public void loadIcon(Fragment fragment) {
             IconViewHelper.setLayerType(_profileDrawable, _entry.getIconType());
             Glide.with(fragment)
                 .asDrawable()
-                .load(_entry)
+                .load(_entry.getIcon())
                 .set(IconLoader.ICON_TYPE, _entry.getIconType())
                 .diskCacheStrategy(DiskCacheStrategy.NONE)
                 .skipMemoryCache(false)

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -171,6 +171,8 @@ protected void onCreate(Bundle savedInstanceState) {
                             showBiometricPrompt();
                         })
                         .create());
+            } else {
+                showBiometricPrompt();
             }
         });
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -171,6 +171,8 @@ protected void onCreate(Bundle savedInstanceState) {
                             showBiometricPrompt();
                         })
                         .create());
+            } else {
+                showBiometricPrompt();
             }
         });
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryHolder.java
Patch:
@@ -166,6 +166,7 @@ private void setAccountNameLayout(AccountNamePosition accountNamePosition) {
                 profileNameLayoutParams = (RelativeLayout.LayoutParams) _profileName.getLayoutParams();
                 profileNameLayoutParams.removeRule(RelativeLayout.END_OF);
                 profileNameLayoutParams.addRule(RelativeLayout.BELOW, R.id.profile_issuer);
+                profileNameLayoutParams.setMarginStart(0);
                 _profileName.setLayoutParams(profileNameLayoutParams);
                 _profileName.setVisibility(View.VISIBLE);
 
@@ -178,6 +179,7 @@ private void setAccountNameLayout(AccountNamePosition accountNamePosition) {
             default:
                 profileNameLayoutParams = (RelativeLayout.LayoutParams) _profileName.getLayoutParams();
                 profileNameLayoutParams.addRule(RelativeLayout.END_OF, R.id.profile_issuer);
+                profileNameLayoutParams.setMarginStart(24);
                 profileNameLayoutParams.removeRule(RelativeLayout.BELOW);
                 _profileName.setLayoutParams(profileNameLayoutParams);
                 _profileName.setVisibility(View.VISIBLE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -952,7 +952,7 @@ private void startActionMode() {
 
     @Override
     public void onEntryMove(VaultEntry entry1, VaultEntry entry2) {
-        _vaultManager.getVault().swapEntries(entry1, entry2);
+        _vaultManager.getVault().moveEntry(entry1, entry2);
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -33,6 +33,7 @@ public abstract class DatabaseImporter {
         _importers.add(new Definition("Aegis", AegisImporter.class, R.string.importer_help_aegis, false));
         _importers.add(new Definition("andOTP", AndOtpImporter.class, R.string.importer_help_andotp, false));
         _importers.add(new Definition("Authenticator Plus", AuthenticatorPlusImporter.class, R.string.importer_help_authenticator_plus, false));
+        _importers.add(new Definition("Authenticator Pro", AuthenticatorProImporter.class, R.string.importer_help_authenticator_pro, true));
         _importers.add(new Definition("Authy", AuthyImporter.class, R.string.importer_help_authy, true));
         _importers.add(new Definition("Battle.net Authenticator", BattleNetImporter.class, R.string.importer_help_battle_net_authenticator, true));
         _importers.add(new Definition("Bitwarden", BitwardenImporter.class, R.string.importer_help_bitwarden, false));

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -1,5 +1,7 @@
 package com.beemdevelopment.aegis.ui.views;
 
+import static androidx.recyclerview.widget.RecyclerView.NO_POSITION;
+
 import android.graphics.Typeface;
 import android.os.Handler;
 import android.text.SpannableString;
@@ -211,7 +213,7 @@ public void replaceEntry(UUID uuid, VaultEntry newEntry) {
 
             sortShownEntries();
             int newPosition = _shownEntries.indexOf(newEntry);
-            if (position != newPosition) {
+            if (newPosition != NO_POSITION && position != newPosition) {
                 notifyItemMoved(position, newPosition);
             }
         } else if (!isEntryFiltered(newEntry)) {

File: app/src/test/java/com/beemdevelopment/aegis/vectors/VaultEntries.java
Patch:
@@ -25,7 +25,8 @@ public static List<VaultEntry> get() {
                     new VaultEntry(new HotpInfo(Base32.decode("YOOMIXWS5GN6RTBPUFFWKTW5M4"), "SHA1", 6, 1), "James", "Issuu"),
                     new VaultEntry(new HotpInfo(Base32.decode("KUVJJOM753IHTNDSZVCNKL7GII"), "SHA256", 7, 50), "Benjamin", "Air Canada"),
                     new VaultEntry(new HotpInfo(Base32.decode("5VAML3X35THCEBVRLV24CGBKOY"), "SHA512", 8, 10300), "Mason", "WWE"),
-                    new VaultEntry(new SteamInfo(Base32.decode("JRZCL47CMXVOQMNPZR2F7J4RGI"), "SHA1", 5, 30), "Sophia", "Boeing")
+                    new VaultEntry(new SteamInfo(Base32.decode("JRZCL47CMXVOQMNPZR2F7J4RGI"), "SHA1", 5, 30), "Sophia", "Boeing"),
+                    new VaultEntry(new TotpInfo(Base32.decode("BMGRXPGFARQQF4GMT25JATL2VYLAHDBI"), "SHA1", 8, 30), "US-2211-2050-3346", "Battle.net")
             );
         } catch (OtpInfoException | EncodingException e) {
             throw new RuntimeException(e);

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -291,11 +291,13 @@ protected void onCreate(Bundle savedInstanceState) {
                     _textDigits.setText(String.valueOf(SteamInfo.DIGITS));
                     break;
                 case TotpInfo.ID:
+                    _dropdownAlgo.setText(OtpInfo.DEFAULT_ALGORITHM, false);
                     _textPeriodCounterLayout.setHint(R.string.period_hint);
                     _textPeriodCounter.setText(String.valueOf(TotpInfo.DEFAULT_PERIOD));
                     _textDigits.setText(String.valueOf(OtpInfo.DEFAULT_DIGITS));
                     break;
                 case HotpInfo.ID:
+                    _dropdownAlgo.setText(OtpInfo.DEFAULT_ALGORITHM, false);
                     _textPeriodCounterLayout.setHint(R.string.counter);
                     _textPeriodCounter.setText(String.valueOf(HotpInfo.DEFAULT_COUNTER));
                     _textDigits.setText(String.valueOf(OtpInfo.DEFAULT_DIGITS));

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -616,11 +616,11 @@ protected void onActivityResult(int requestCode, final int resultCode, Intent da
             if (fileType != null && fileType.equals(IconType.SVG.toMimeType())) {
                 ImportFileTask.Params params = new ImportFileTask.Params(data.getData(), "icon", null);
                 ImportFileTask task = new ImportFileTask(this, result -> {
-                    if (result.getException() == null) {
+                    if (result.getError() == null) {
                         CustomSvgIcon icon = new CustomSvgIcon(result.getFile());
                         selectIcon(icon);
                     } else {
-                        Dialogs.showErrorDialog(this, R.string.reading_file_error, result.getException());
+                        Dialogs.showErrorDialog(this, R.string.reading_file_error, result.getError());
                     }
                 });
                 task.execute(getLifecycle(), params);

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/ImportExportPreferencesFragment.java
Patch:
@@ -137,10 +137,10 @@ private void onImportSelectResult(int resultCode, Intent data) {
 
         ImportFileTask.Params params = new ImportFileTask.Params(uri, "import", null);
         ImportFileTask task = new ImportFileTask(requireContext(), result -> {
-            if (result.getException() == null) {
+            if (result.getError() == null) {
                 startImportEntriesActivity(_importerDef, result.getFile());
             } else {
-                Dialogs.showErrorDialog(requireContext(), R.string.reading_file_error, result.getException());
+                Dialogs.showErrorDialog(requireContext(), R.string.reading_file_error, result.getError());
             }
         });
         task.execute(getLifecycle(), params);

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/WelcomeSlide.java
Patch:
@@ -56,8 +56,8 @@ public void onSaveIntroState(@NonNull Bundle introState) {
     private void startImportVault(Uri uri) {
         ImportFileTask.Params params = new ImportFileTask.Params(uri, "intro-import", null);
         ImportFileTask task = new ImportFileTask(requireContext(), result -> {
-            if (result.getException() != null) {
-                Dialogs.showErrorDialog(requireContext(), R.string.reading_file_error, result.getException());
+            if (result.getError() != null) {
+                Dialogs.showErrorDialog(requireContext(), R.string.reading_file_error, result.getError());
                 return;
             }
 

File: app/src/main/java/com/beemdevelopment/aegis/services/NotificationService.java
Patch:
@@ -47,8 +47,7 @@ public void serviceMethod() {
                 .setOngoing(true)
                 .setContentIntent(pendingIntent);
 
-        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);
-        notificationManager.notify(NOTIFICATION_VAULT_UNLOCKED, builder.build());
+        startForeground(NOTIFICATION_VAULT_UNLOCKED, builder.build());
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -310,6 +310,7 @@ public BackPressHandler() {
         public void handleOnBackPressed() {
             // This breaks predictive back gestures, but it doesn't make sense
             // to go back to MainActivity when cancelling auth
+            setResult(RESULT_CANCELED);
             finishAffinity();
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -714,7 +714,7 @@ public void refresh() {
             int entriesShown = getEntriesCount();
             SpannableString entriesShownSpannable = new SpannableString(_footerView.getResources().getQuantityString(R.plurals.entries_shown, entriesShown, entriesShown));
 
-            String entriesShownString = String.valueOf(entriesShown);
+            String entriesShownString = String.format("%d", entriesShown);
             int spanStart = entriesShownSpannable.toString().indexOf(entriesShownString);
             int spanEnd = spanStart + entriesShownString.length();
             entriesShownSpannable.setSpan(new StyleSpan(Typeface.BOLD), spanStart, spanEnd, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);

File: app/src/main/java/com/beemdevelopment/aegis/helpers/comparators/FavoriteComparator.java
Patch:
@@ -7,6 +7,6 @@
 public class FavoriteComparator implements Comparator<VaultEntry> {
     @Override
     public int compare(VaultEntry a, VaultEntry b) {
-        return -1 * Boolean.compare(a.getIsFavorited(), b.getIsFavorited());
+        return -1 * Boolean.compare(a.isFavorite(), b.isFavorite());
     }
 }
\ No newline at end of file

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryHolder.java
Patch:
@@ -116,7 +116,7 @@ public void setData(VaultEntry entry, Preferences.CodeGrouping groupSize, boolea
         _selectedHandler.removeCallbacksAndMessages(null);
         _animationHandler.removeCallbacksAndMessages(null);
 
-        _favoriteIndicator.setVisibility(_entry.getIsFavorited() ? View.VISIBLE : View.INVISIBLE);
+        _favoriteIndicator.setVisibility(_entry.isFavorite() ? View.VISIBLE : View.INVISIBLE);
 
         // only show the progress bar if there is no uniform period and the entry type is TotpInfo
         setShowProgress(showProgress);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -223,7 +223,7 @@ public void replaceEntry(UUID uuid, VaultEntry newEntry) {
                     Comparator<VaultEntry> comparator = _sortCategory.getComparator();
                     if (comparator != null) {
                         Collections.sort(_shownEntries, comparator);
-                        int newPosition = Collections.binarySearch(_shownEntries, newEntry, comparator);
+                        int newPosition = _shownEntries.indexOf(newEntry);
                         if (position != newPosition) {
                             notifyItemMoved(position, newPosition);
                         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesActivity.java
Patch:
@@ -75,7 +75,7 @@ protected void onSaveInstanceState(@NonNull final Bundle outState) {
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         if (item.getItemId() == android.R.id.home) {
-            finish();
+            getOnBackPressedDispatcher().onBackPressed();
         } else {
             return super.onOptionsItemSelected(item);
         }

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultBackupManager.java
Patch:
@@ -52,10 +52,10 @@ public void scheduleBackup(File tempFile, Uri dirUri, int versionsToKeep) {
         _executor.execute(() -> {
             try {
                 createBackup(tempFile, dirUri, versionsToKeep);
-                _prefs.setBackupsError(null);
+                _prefs.setBuiltInBackupResult(new Preferences.BackupResult(null));
             } catch (VaultRepositoryException e) {
                 e.printStackTrace();
-                _prefs.setBackupsError(e);
+                _prefs.setBuiltInBackupResult(new Preferences.BackupResult(e));
             }
         });
     }

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultFile.java
Patch:
@@ -126,7 +126,7 @@ public VaultFile exportable() {
             return this;
         }
 
-        return new VaultFile(getContent(), new VaultFile.Header(
+        return new VaultFile(_content, new VaultFile.Header(
                 getHeader().getSlots().exportable(),
                 getHeader().getParams()
         ));

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultManager.java
Patch:
@@ -196,9 +196,8 @@ public void saveAndBackup() throws VaultRepositoryException {
                 backedUp = true;
                 try {
                     scheduleBackup();
-                    _prefs.setBackupsError(null);
                 } catch (VaultRepositoryException e) {
-                    _prefs.setBackupsError(e);
+                    _prefs.setBuiltInBackupResult(new Preferences.BackupResult(e));
                 }
             }
 

File: app/src/main/java/com/beemdevelopment/aegis/otp/GoogleAuthInfoException.java
Patch:
@@ -30,7 +30,9 @@ public boolean isPhoneFactor() {
     @Override
     public String getMessage() {
         Throwable cause = getCause();
-        if (cause == null) {
+        if (cause == null
+                || this == cause
+                || (super.getMessage() != null && super.getMessage().equals(cause.getMessage()))) {
             return super.getMessage();
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/otp/HotpInfo.java
Patch:
@@ -30,7 +30,9 @@ public HotpInfo(byte[] secret, String algorithm, int digits, long counter) throw
     }
 
     @Override
-    public String getOtp() {
+    public String getOtp() throws OtpInfoException {
+        checkSecret();
+
         try {
             OTP otp = HOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getCounter());
             return otp.toString();

File: app/src/main/java/com/beemdevelopment/aegis/otp/SteamInfo.java
Patch:
@@ -20,7 +20,9 @@ public SteamInfo(byte[] secret, String algorithm, int digits, int period) throws
     }
 
     @Override
-    public String getOtp() {
+    public String getOtp() throws OtpInfoException {
+        checkSecret();
+
         try {
             OTP otp = TOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getPeriod());
             return otp.toSteamString();

File: app/src/main/java/com/beemdevelopment/aegis/otp/TotpInfo.java
Patch:
@@ -26,7 +26,9 @@ public TotpInfo(byte[] secret, String algorithm, int digits, int period) throws
     }
 
     @Override
-    public String getOtp() {
+    public String getOtp() throws OtpInfoException {
+        checkSecret();
+
         try {
             OTP otp = TOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getPeriod());
             return otp.toString();

File: app/src/main/java/com/beemdevelopment/aegis/icons/IconPack.java
Patch:
@@ -148,7 +148,6 @@ public IconType getIconType() {
             return IconType.fromFilename(_relFilename);
         }
 
-        @SuppressWarnings("UnstableApiUsage")
         public String getName() {
             return Files.getNameWithoutExtension(new File(_relFilename).getName());
         }

File: app/src/main/java/com/beemdevelopment/aegis/icons/IconType.java
Patch:
@@ -23,7 +23,6 @@ public static IconType fromMimeType(String mimeType) {
         }
     }
 
-    @SuppressWarnings("UnstableApiUsage")
     public static IconType fromFilename(String filename) {
         switch (Files.getFileExtension(filename).toLowerCase(Locale.ROOT)) {
             case "svg":

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -298,7 +298,7 @@ public void onTaskFinished(PasswordSlotDecryptTask.Result result) {
                     _slots.replace(result.getSlot());
                 }
 
-                if (result.getSlot().getType() == Slot.TYPE_DERIVED) {
+                if (result.getSlot().getType() == Slot.TYPE_PASSWORD) {
                     _prefs.resetPasswordReminderTimestamp();
                 }
 

File: app/src/main/java/com/beemdevelopment/aegis/vault/slots/PasswordSlot.java
Patch:
@@ -87,6 +87,6 @@ public void setIsBackup(boolean isBackup) {
 
     @Override
     public byte getType() {
-        return TYPE_DERIVED;
+        return TYPE_PASSWORD;
     }
 }

File: app/src/main/java/com/beemdevelopment/aegis/vault/slots/Slot.java
Patch:
@@ -27,7 +27,7 @@
 
 public abstract class Slot extends UUIDMap.Value {
     public final static byte TYPE_RAW = 0x00;
-    public final static byte TYPE_DERIVED = 0x01;
+    public final static byte TYPE_PASSWORD = 0x01;
     public final static byte TYPE_BIOMETRIC = 0x02;
 
     private byte[] _encryptedMasterKey;
@@ -132,7 +132,7 @@ public static Slot fromJson(JSONObject obj) throws SlotException {
                 case Slot.TYPE_RAW:
                     slot = new RawSlot(uuid, key, keyParams);
                     break;
-                case Slot.TYPE_DERIVED:
+                case Slot.TYPE_PASSWORD:
                     SCryptParameters scryptParams = new SCryptParameters(
                             obj.getInt("n"),
                             obj.getInt("r"),

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultManager.java
Patch:
@@ -189,7 +189,7 @@ public void scheduleBackup() throws VaultRepositoryException {
             }
 
             File tempFile = File.createTempFile(VaultBackupManager.FILENAME_PREFIX, ".json", dir);
-            getVault().backupTo(tempFile);
+            VaultRepository.copyFileTo(_context, tempFile);
             _backups.scheduleBackup(tempFile, _prefs.getBackupsLocation(), _prefs.getBackupsVersionCount());
         } catch (IOException e) {
             throw new VaultRepositoryException(e);

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/preferences/IconPacksManagerFragment.java
Patch:
@@ -150,7 +150,7 @@ private boolean removeIconPack(IconPack pack) {
 
     private void startImportIconPack() {
         Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
-        intent.setType("application/zip");
+        intent.setType("*/*");
         _vaultManager.startActivityForResult(this, intent, CODE_IMPORT);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -1,5 +1,6 @@
 package com.beemdevelopment.aegis.ui;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
 import android.content.Intent;
@@ -71,6 +72,7 @@ protected void onResume() {
         _app.setBlockAutoLock(false);
     }
 
+    @SuppressLint("SoonBlockedPrivateApi")
     @Override
     public void onLocked(boolean userInitiated) {
         setResult(RESULT_CANCELED, null);

File: app/src/main/java/com/beemdevelopment/aegis/crypto/otp/OTP.java
Patch:
@@ -5,8 +5,8 @@
 public class OTP {
     private static final String STEAM_ALPHABET = "23456789BCDFGHJKMNPQRTVWXY";
 
-    private int _code;
-    private int _digits;
+    private final int _code;
+    private final int _digits;
 
     public OTP(int code, int digits) {
         _code = code;

File: app/src/main/java/com/beemdevelopment/aegis/otp/OtpInfo.java
Patch:
@@ -40,7 +40,7 @@ public JSONObject toJson() {
         JSONObject obj = new JSONObject();
 
         try {
-            obj.put("secret", new String(Base32.encode(getSecret())));
+            obj.put("secret", Base32.encode(getSecret()));
             obj.put("algo", getAlgorithm(false));
             obj.put("digits", getDigits());
         } catch (JSONException e) {
@@ -116,8 +116,7 @@ public static OtpInfo fromJson(String type, JSONObject obj) throws OtpInfoExcept
                     info = new HotpInfo(secret, algo, digits, obj.getLong("counter"));
                     break;
                 case YandexInfo.ID:
-                    byte[] pin = Base32.decode(obj.getString("pin"));
-                    info = new YandexInfo(secret, pin);
+                    info = new YandexInfo(secret, obj.getString("pin"));
                     break;
                 default:
                     throw new OtpInfoException("unsupported otp type: " + type);

File: app/src/main/java/com/beemdevelopment/aegis/importers/AegisImporter.java
Patch:
@@ -5,6 +5,7 @@
 
 import androidx.lifecycle.Lifecycle;
 
+import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.helpers.ContextHelper;
 import com.beemdevelopment.aegis.ui.dialogs.Dialogs;
 import com.beemdevelopment.aegis.ui.tasks.PasswordSlotDecryptTask;
@@ -83,7 +84,7 @@ public State decrypt(char[] password) throws DatabaseImporterException {
 
         @Override
         public void decrypt(Context context, DecryptListener listener) {
-            Dialogs.showPasswordInputDialog(context, (Dialogs.TextInputListener) password -> {
+            Dialogs.showPasswordInputDialog(context, R.string.enter_password_aegis_title, 0, (Dialogs.TextInputListener) password -> {
                 List<PasswordSlot> slots = getSlots().findAll(PasswordSlot.class);
                 PasswordSlotDecryptTask.Params params = new PasswordSlotDecryptTask.Params(slots, password);
                 PasswordSlotDecryptTask task = new PasswordSlotDecryptTask(context, result -> {

File: app/src/main/java/com/beemdevelopment/aegis/importers/AegisImporter.java
Patch:
@@ -5,6 +5,7 @@
 
 import androidx.lifecycle.Lifecycle;
 
+import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.helpers.ContextHelper;
 import com.beemdevelopment.aegis.ui.dialogs.Dialogs;
 import com.beemdevelopment.aegis.ui.tasks.PasswordSlotDecryptTask;
@@ -83,7 +84,7 @@ public State decrypt(char[] password) throws DatabaseImporterException {
 
         @Override
         public void decrypt(Context context, DecryptListener listener) {
-            Dialogs.showPasswordInputDialog(context, (Dialogs.TextInputListener) password -> {
+            Dialogs.showPasswordInputDialog(context, R.string.enter_password_aegis_title, 0, (Dialogs.TextInputListener) password -> {
                 List<PasswordSlot> slots = getSlots().findAll(PasswordSlot.class);
                 PasswordSlotDecryptTask.Params params = new PasswordSlotDecryptTask.Params(slots, password);
                 PasswordSlotDecryptTask task = new PasswordSlotDecryptTask(context, result -> {

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/SecurityPreferencesFragment.java
Patch:
@@ -121,6 +121,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
                         .setNegativeButton(android.R.string.no, null)
                         .create());
             }
+
             return false;
         });
 
@@ -383,6 +384,7 @@ public void onSlotResult(Slot slot, Cipher cipher) {
             }
 
             getActivity().startService(new Intent(getActivity(), NotificationService.class));
+            _pinKeyboardPreference.setChecked(false);
             updateEncryptionPreferences();
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/BackupsPreferencesFragment.java
Patch:
@@ -103,7 +103,7 @@ private void onSelectBackupsLocationResult(int resultCode, Intent data) {
             return;
         }
 
-        int flags = data.getFlags() & (Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
+        int flags = Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION;
         getContext().getContentResolver().takePersistableUriPermission(data.getData(), flags);
 
         Preferences prefs = getPreferences();

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -226,6 +226,8 @@ public void onRequestPermissionsResult(int requestCode, String[] permissions, in
                 startScanImageActivity();
                 break;
         }
+
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
     }
 
     private void onPreferencesResult(Intent data) {

File: app/src/main/java/com/beemdevelopment/aegis/importers/MicrosoftAuthImporter.java
Patch:
@@ -4,9 +4,9 @@
 import android.content.pm.PackageManager;
 import android.database.Cursor;
 
-import com.beemdevelopment.aegis.encoding.Base32;
 import com.beemdevelopment.aegis.encoding.Base64;
 import com.beemdevelopment.aegis.encoding.EncodingException;
+import com.beemdevelopment.aegis.otp.GoogleAuthInfo;
 import com.beemdevelopment.aegis.otp.OtpInfo;
 import com.beemdevelopment.aegis.otp.OtpInfoException;
 import com.beemdevelopment.aegis.otp.TotpInfo;
@@ -81,7 +81,7 @@ private static VaultEntry convertEntry(Entry entry) throws DatabaseImporterEntry
 
                 switch (entry.getType()) {
                     case TYPE_TOTP:
-                        secret = Base32.decode(entry.getSecret());
+                        secret = GoogleAuthInfo.parseSecret(entry.getSecret());
                         break;
                     case TYPE_MICROSOFT:
                         digits = 8;

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -59,7 +59,6 @@
 import java.util.List;
 import java.util.Map;
 import java.util.UUID;
-import java.util.stream.Collectors;
 
 public class MainActivity extends AegisActivity implements EntryListView.Listener {
     // activity request codes
@@ -753,7 +752,7 @@ public void onLocked(boolean userInitiated) {
         if (_actionMode != null) {
             _actionMode.finish();
         }
-        if (!_searchView.isIconified()) {
+        if (_searchView != null && !_searchView.isIconified()) {
             collapseSearchView();
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/encoding/Base32.java
Patch:
@@ -2,14 +2,16 @@
 
 import com.google.common.io.BaseEncoding;
 
+import java.util.Locale;
+
 public class Base32 {
     private Base32() {
 
     }
 
     public static byte[] decode(String s) throws EncodingException {
         try {
-            return BaseEncoding.base32().decode(s.toUpperCase());
+            return BaseEncoding.base32().decode(s.toUpperCase(Locale.ROOT));
         } catch (IllegalArgumentException e) {
             throw new EncodingException(e);
         }

File: app/src/main/java/com/beemdevelopment/aegis/encoding/Hex.java
Patch:
@@ -2,14 +2,16 @@
 
 import com.google.common.io.BaseEncoding;
 
+import java.util.Locale;
+
 public class Hex {
     private Hex() {
 
     }
 
     public static byte[] decode(String s) throws EncodingException {
         try {
-            return BaseEncoding.base16().decode(s.toUpperCase());
+            return BaseEncoding.base16().decode(s.toUpperCase(Locale.ROOT));
         } catch (IllegalArgumentException e) {
             throw new EncodingException(e);
         }

File: app/src/main/java/com/beemdevelopment/aegis/icons/IconType.java
Patch:
@@ -2,6 +2,8 @@
 
 import com.google.common.io.Files;
 
+import java.util.Locale;
+
 public enum IconType {
     INVALID,
     SVG,
@@ -23,7 +25,7 @@ public static IconType fromMimeType(String mimeType) {
 
     @SuppressWarnings("UnstableApiUsage")
     public static IconType fromFilename(String filename) {
-        switch (Files.getFileExtension(filename).toLowerCase()) {
+        switch (Files.getFileExtension(filename).toLowerCase(Locale.ROOT)) {
             case "svg":
                 return SVG;
             case "png":

File: app/src/main/java/com/beemdevelopment/aegis/importers/AndOtpImporter.java
Patch:
@@ -38,6 +38,7 @@
 import java.security.spec.InvalidKeySpecException;
 import java.security.spec.KeySpec;
 import java.util.Arrays;
+import java.util.Locale;
 
 import javax.crypto.BadPaddingException;
 import javax.crypto.Cipher;
@@ -225,7 +226,7 @@ public Result convert() throws DatabaseImporterException {
 
         private static VaultEntry convertEntry(JSONObject obj) throws DatabaseImporterEntryException {
             try {
-                String type = obj.getString("type").toLowerCase();
+                String type = obj.getString("type").toLowerCase(Locale.ROOT);
                 String algo = obj.getString("algorithm");
                 int digits = obj.getInt("digits");
                 byte[] secret = Base32.decode(obj.getString("secret"));

File: app/src/main/java/com/beemdevelopment/aegis/importers/FreeOtpImporter.java
Patch:
@@ -23,6 +23,7 @@
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.List;
+import java.util.Locale;
 
 public class FreeOtpImporter extends DatabaseImporter {
     private static final String _subPath = "shared_prefs/tokens.xml";
@@ -83,7 +84,7 @@ public Result convert() {
 
         private static VaultEntry convertEntry(JSONObject obj) throws DatabaseImporterEntryException {
             try {
-                String type = obj.getString("type").toLowerCase();
+                String type = obj.getString("type").toLowerCase(Locale.ROOT);
                 String algo = obj.getString("algo");
                 int digits = obj.getInt("digits");
                 byte[] secret = toBytes(obj.getJSONArray("secret"));

File: app/src/main/java/com/beemdevelopment/aegis/otp/OtpInfo.java
Patch:
@@ -8,6 +8,7 @@
 
 import java.io.Serializable;
 import java.util.Arrays;
+import java.util.Locale;
 
 public abstract class OtpInfo implements Serializable {
     public static final int DEFAULT_DIGITS = 6;
@@ -32,7 +33,7 @@ public OtpInfo(byte[] secret, String algorithm, int digits) throws OtpInfoExcept
     public abstract String getTypeId();
 
     public String getType() {
-        return getTypeId().toUpperCase();
+        return getTypeId().toUpperCase(Locale.ROOT);
     }
 
     public JSONObject toJson() {
@@ -76,7 +77,7 @@ public void setAlgorithm(String algorithm) throws OtpInfoException {
         if (algorithm.startsWith("Hmac")) {
             algorithm = algorithm.substring(4);
         }
-        algorithm = algorithm.toUpperCase();
+        algorithm = algorithm.toUpperCase(Locale.ROOT);
 
         if (!isAlgorithmValid(algorithm)) {
             throw new OtpInfoException(String.format("unsupported algorithm: %s", algorithm));

File: app/src/main/java/com/beemdevelopment/aegis/otp/SteamInfo.java
Patch:
@@ -5,6 +5,7 @@
 
 import java.security.InvalidKeyException;
 import java.security.NoSuchAlgorithmException;
+import java.util.Locale;
 
 public class SteamInfo extends TotpInfo {
     public static final String ID = "steam";
@@ -36,6 +37,6 @@ public String getTypeId() {
     @Override
     public String getType() {
         String id = getTypeId();
-        return id.substring(0, 1).toUpperCase() + id.substring(1);
+        return id.substring(0, 1).toUpperCase(Locale.ROOT) + id.substring(1);
     }
 }

File: app/src/main/java/com/beemdevelopment/aegis/icons/IconPack.java
Patch:
@@ -162,8 +162,10 @@ public List<String> getIssuers() {
         }
 
         public boolean isSuggestedFor(String issuer) {
+            String lowerIssuer = issuer.toLowerCase();
             return getIssuers().stream()
-                    .anyMatch(is -> is.toLowerCase().contains(issuer.toLowerCase()));
+                    .map(String::toLowerCase)
+                    .anyMatch(is -> is.contains(lowerIssuer) || lowerIssuer.contains(is));
         }
 
         public static Icon fromJson(JSONObject obj) throws JSONException {

File: app/src/main/java/com/beemdevelopment/aegis/util/UUIDMap.java
Patch:
@@ -141,6 +141,7 @@ protected Value() {
             this(UUID.randomUUID());
         }
 
+        @NonNull
         public final UUID getUUID() {
             return _uuid;
         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -398,7 +398,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 onSave();
                 break;
             case R.id.action_delete:
-                Dialogs.showDeleteEntriesDialog(this, Collections.singletonList(_origEntry.getIssuer()), (dialog, which) -> {
+                Dialogs.showDeleteEntriesDialog(this, Collections.singletonList(_origEntry), (dialog, which) -> {
                     deleteAndFinish(_origEntry);
                 });
                 break;

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -795,7 +795,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         return true;
 
                     case R.id.action_delete:
-                        Dialogs.showDeleteEntriesDialog(MainActivity.this, _selectedEntries.stream().map(VaultEntry::getIssuer).collect(Collectors.toList()), (d, which) -> {
+                        Dialogs.showDeleteEntriesDialog(MainActivity.this, _selectedEntries, (d, which) -> {
                             deleteEntries(_selectedEntries);
 
                             for (VaultEntry entry : _selectedEntries) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -398,7 +398,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 onSave();
                 break;
             case R.id.action_delete:
-                Dialogs.showDeleteEntriesDialog(this, Collections.singletonList(_origEntry.getIssuer()), (dialog, which) -> {
+                Dialogs.showDeleteEntriesDialog(this, Collections.singletonList(_origEntry), (dialog, which) -> {
                     deleteAndFinish(_origEntry);
                 });
                 break;

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -795,7 +795,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         return true;
 
                     case R.id.action_delete:
-                        Dialogs.showDeleteEntriesDialog(MainActivity.this, _selectedEntries.stream().map(VaultEntry::getIssuer).collect(Collectors.toList()), (d, which) -> {
+                        Dialogs.showDeleteEntriesDialog(MainActivity.this, _selectedEntries, (d, which) -> {
                             deleteEntries(_selectedEntries);
 
                             for (VaultEntry entry : _selectedEntries) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -25,7 +25,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.TreeSet;
 import java.util.UUID;
 
 public class EntryAdapter extends RecyclerView.Adapter<EntryHolder> implements ItemTouchHelperAdapter {
@@ -254,7 +253,7 @@ public void setSortCategory(SortCategory category, boolean apply) {
     }
 
     public void setSearchFilter(String search) {
-        _searchFilter = search != null ? search.toLowerCase() : null;
+        _searchFilter = (search != null && !search.isEmpty()) ? search.toLowerCase() : null;
         updateShownEntries();
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -793,6 +793,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                                 if (entry.getGroup() != null) {
                                     if (!_vault.getGroups().contains(entry.getGroup())) {
                                         _entryListView.setGroups(_vault.getGroups());
+                                        break;
                                     }
                                 }
                             }

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -77,7 +77,6 @@ public class MainActivity extends AegisActivity implements EntryListView.Listene
     private AegisApplication _app;
     private VaultManager _vault;
     private boolean _loaded;
-    private List<String> _selectedGroups;
     private boolean _searchSubmitted;
 
     private boolean _isAuthenticating;

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/ImportExportPreferencesFragment.java
Patch:
@@ -112,14 +112,15 @@ private void onImportSelectResult(int resultCode, Intent data) {
             return;
         }
 
+        ImportFileTask.Params params = new ImportFileTask.Params(uri, "import", null);
         ImportFileTask task = new ImportFileTask(getContext(), result -> {
             if (result.getException() == null) {
                 startImportEntriesActivity(_importerType, result.getFile());
             } else {
                 Dialogs.showErrorDialog(getContext(), R.string.reading_file_error, result.getException());
             }
         });
-        task.execute(getLifecycle(), uri);
+        task.execute(getLifecycle(), params);
     }
 
     private void startImportEntriesActivity(Class<? extends DatabaseImporter> importerType, File file) {

File: app/src/main/java/com/beemdevelopment/aegis/helpers/IconViewHelper.java
Patch:
@@ -18,6 +18,7 @@ private IconViewHelper() {
     public static void setLayerType(ImageView view, IconType iconType) {
         if (iconType == IconType.SVG && Build.VERSION.SDK_INT <= Build.VERSION_CODES.O_MR1) {
             view.setLayerType(ImageView.LAYER_TYPE_SOFTWARE, null);
+            return;
         }
 
         view.setLayerType(ImageView.LAYER_TYPE_HARDWARE, null);

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesActivity.java
Patch:
@@ -41,7 +41,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 showFragment(_fragment);
             }
         } else {
-            _fragment = (PreferencesFragment) getSupportFragmentManager().findFragmentById(R.id.content);
+            _fragment = getSupportFragmentManager().findFragmentById(R.id.content);
         }
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -89,7 +89,7 @@ public void startActivityForResult(Intent intent, int requestCode, Bundle bundle
     @Override
     public void onLocked(boolean userInitiated) {
         setResult(RESULT_CANCELED, null);
-        finishAndRemoveTask();
+        finish();
     }
 
     protected AegisApplication getApp() {

File: app/src/main/java/com/beemdevelopment/aegis/importers/AndOtpImporter.java
Patch:
@@ -239,7 +239,7 @@ private static VaultEntry convertEntry(JSONObject obj) throws DatabaseImporterEn
                         info = new TotpInfo(secret, algo, digits, obj.getInt("period"));
                         break;
                     case "steam":
-                        info = new SteamInfo(secret, algo, digits, obj.optInt("period", 30));
+                        info = new SteamInfo(secret, algo, digits, obj.optInt("period", TotpInfo.DEFAULT_PERIOD));
                         break;
                     default:
                         throw new DatabaseImporterException("unsupported otp type: " + type);

File: app/src/main/java/com/beemdevelopment/aegis/importers/AuthyImporter.java
Patch:
@@ -256,7 +256,7 @@ private static VaultEntry convertEntry(JSONObject entry) throws DatabaseImporter
                 }
 
                 int digits = entry.getInt("digits");
-                OtpInfo info = new TotpInfo(secret, "SHA1", digits, isAuthy ? 10 : 30);
+                OtpInfo info = new TotpInfo(secret, OtpInfo.DEFAULT_ALGORITHM, digits, isAuthy ? 10 : TotpInfo.DEFAULT_PERIOD);
                 return new VaultEntry(info, authyEntryInfo.Name, authyEntryInfo.Issuer);
             } catch (OtpInfoException | JSONException | EncodingException e) {
                 throw new DatabaseImporterEntryException(e, entry.toString());

File: app/src/main/java/com/beemdevelopment/aegis/importers/MicrosoftAuthImporter.java
Patch:
@@ -91,7 +91,7 @@ private static VaultEntry convertEntry(Entry entry) throws DatabaseImporterEntry
                         throw new DatabaseImporterEntryException(String.format("Unsupported OTP type: %d", entry.getType()), entry.toString());
                 }
 
-                OtpInfo info = new TotpInfo(secret, "SHA1", digits, 30);
+                OtpInfo info = new TotpInfo(secret, OtpInfo.DEFAULT_ALGORITHM, digits, TotpInfo.DEFAULT_PERIOD);
                 return new VaultEntry(info, entry.getUserName(), entry.getIssuer());
             } catch (EncodingException | OtpInfoException e) {
                 throw new DatabaseImporterEntryException(e, entry.toString());

File: app/src/main/java/com/beemdevelopment/aegis/importers/TotpAuthenticatorImporter.java
Patch:
@@ -221,7 +221,7 @@ private static VaultEntry convertEntry(JSONObject obj) throws DatabaseImporterEn
                         throw new DatabaseImporterEntryException(String.format("Unsupported secret encoding: base %d", base), obj.toString());
                 }
 
-                TotpInfo info = new TotpInfo(secret, "SHA1", 6, 30);
+                TotpInfo info = new TotpInfo(secret);
                 String name = obj.optString("name");
                 String issuer = obj.optString("issuer");
 

File: app/src/main/java/com/beemdevelopment/aegis/otp/GoogleAuthInfo.java
Patch:
@@ -221,7 +221,7 @@ public static Export parseExportUri(Uri uri) throws GoogleAuthInfoException {
                     case DIGIT_COUNT_UNSPECIFIED:
                         // intentional fallthrough
                     case DIGIT_COUNT_SIX:
-                        digits = 6;
+                        digits = TotpInfo.DEFAULT_DIGITS;
                         break;
                     case DIGIT_COUNT_EIGHT:
                         digits = 8;
@@ -252,7 +252,7 @@ public static Export parseExportUri(Uri uri) throws GoogleAuthInfoException {
                     case OTP_TYPE_UNSPECIFIED:
                         // intentional fallthrough
                     case OTP_TYPE_TOTP:
-                        otp = new TotpInfo(secret, algo, digits, 30);
+                        otp = new TotpInfo(secret, algo, digits, TotpInfo.DEFAULT_PERIOD);
                         break;
                     case OTP_TYPE_HOTP:
                         otp = new HotpInfo(secret, algo, digits, params.getCounter());

File: app/src/main/java/com/beemdevelopment/aegis/otp/HotpInfo.java
Patch:
@@ -11,6 +11,7 @@
 
 public class HotpInfo extends OtpInfo {
     public static final String ID = "hotp";
+    public static final int DEFAULT_COUNTER = 0;
 
     private long _counter;
 
@@ -20,7 +21,7 @@ public HotpInfo(byte[] secret, long counter) throws OtpInfoException {
     }
 
     public HotpInfo(byte[] secret) throws OtpInfoException {
-        this(secret, 0);
+        this(secret, DEFAULT_COUNTER);
     }
 
     public HotpInfo(byte[] secret, String algorithm, int digits, long counter) throws OtpInfoException {

File: app/src/main/java/com/beemdevelopment/aegis/otp/SteamInfo.java
Patch:
@@ -8,9 +8,10 @@
 
 public class SteamInfo extends TotpInfo {
     public static final String ID = "steam";
+    public static final int DIGITS = 5;
 
     public SteamInfo(byte[] secret) throws OtpInfoException {
-        super(secret, "SHA1", 5, 30);
+        super(secret, OtpInfo.DEFAULT_ALGORITHM, DIGITS, TotpInfo.DEFAULT_PERIOD);
     }
 
     public SteamInfo(byte[] secret, String algorithm, int digits, int period) throws OtpInfoException {

File: app/src/main/java/com/beemdevelopment/aegis/otp/TotpInfo.java
Patch:
@@ -11,12 +11,13 @@
 
 public class TotpInfo extends OtpInfo {
     public static final String ID = "totp";
+    public static final int DEFAULT_PERIOD = 30;
 
     private int _period;
 
     public TotpInfo(byte[] secret) throws OtpInfoException {
         super(secret);
-        setPeriod(30);
+        setPeriod(DEFAULT_PERIOD);
     }
 
     public TotpInfo(byte[] secret, String algorithm, int digits, int period) throws OtpInfoException {

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/TotpProgressBar.java
Patch:
@@ -14,7 +14,7 @@
 import com.beemdevelopment.aegis.otp.TotpInfo;
 
 public class TotpProgressBar extends ProgressBar {
-    private int _period = 30;
+    private int _period = TotpInfo.DEFAULT_PERIOD;
     private Handler _handler;
     private float _animDurationScale;
 

File: app/src/test/java/com/beemdevelopment/aegis/otp/OtpTest.java
Patch:
@@ -11,7 +11,7 @@ public class OtpTest {
     @Test
     public void testHotpInfoOtp() throws OtpInfoException {
         for (int i = 0; i < HOTPTest.VECTORS.length; i++) {
-            HotpInfo info = new HotpInfo(HOTPTest.SECRET, "SHA1", 6, i);
+            HotpInfo info = new HotpInfo(HOTPTest.SECRET, OtpInfo.DEFAULT_ALGORITHM, OtpInfo.DEFAULT_DIGITS, i);
             assertEquals(HOTPTest.VECTORS[i], info.getOtp());
         }
     }
@@ -20,7 +20,7 @@ public void testHotpInfoOtp() throws OtpInfoException {
     public void testTotpInfoOtp() throws OtpInfoException {
         for (TOTPTest.Vector vector : TOTPTest.VECTORS) {
             byte[] seed = TOTPTest.getSeed(vector.Algo);
-            TotpInfo info = new TotpInfo(seed, vector.Algo, 8, 30);
+            TotpInfo info = new TotpInfo(seed, vector.Algo, 8, TotpInfo.DEFAULT_PERIOD);
             assertEquals(vector.OTP, info.getOtp(vector.Time));
         }
     }

File: app/src/androidTest/java/com/beemdevelopment/aegis/OverallTest.java
Patch:
@@ -1,7 +1,6 @@
 package com.beemdevelopment.aegis;
 
 import androidx.annotation.IdRes;
-import androidx.test.core.app.ApplicationProvider;
 import androidx.test.espresso.ViewInteraction;
 import androidx.test.espresso.contrib.RecyclerViewActions;
 import androidx.test.espresso.matcher.RootMatchers;
@@ -147,20 +146,21 @@ private void changeSort(@IdRes int resId) {
         onView(withText(resId)).perform(click());
     }
 
-    private void changeFilter(String text) {
+    /*private void changeFilter(String text) {
         openContextualActionModeOverflowMenu();
         onView(withText(R.string.filter)).perform(click());
         onView(withText(text)).perform(click());
     }
 
     private void changeFilter(@IdRes int resId) {
         changeFilter(ApplicationProvider.getApplicationContext().getString(resId));
-    }
+    }*/
 
     private void addEntry(VaultEntry entry) {
         onView(withId(R.id.fab)).perform(click());
         onView(withId(R.id.fab_enter)).perform(click());
 
+        onView(withId(R.id.accordian_header)).perform(click());
         onView(withId(R.id.text_name)).perform(typeText(entry.getName()), closeSoftKeyboard());
         onView(withId(R.id.text_issuer)).perform(typeText(entry.getIssuer()), closeSoftKeyboard());
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -237,7 +237,7 @@ public void refresh(boolean hard) {
     }
 
     public void setGroupFilter(List<String> groups, boolean apply) {
-        if(groups == null) {
+        if (groups == null) {
             groups = new ArrayList<>();
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -8,6 +8,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.Toolbar;
 import androidx.camera.core.CameraInfoUnavailableException;
 import androidx.camera.core.CameraSelector;
 import androidx.camera.core.ImageAnalysis;
@@ -51,6 +52,7 @@ public class ScannerActivity extends AegisActivity implements QrCodeAnalyzer.Lis
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_scanner);
+        setSupportActionBar(findViewById(R.id.toolbar));
 
         _entries = new ArrayList<>();
         _lenses = new ArrayList<>();

File: app/src/main/java/com/beemdevelopment/aegis/importers/AndOtpImporter.java
Patch:
@@ -190,7 +190,7 @@ public void decrypt(Context context, DecryptListener listener) {
                             } catch (DatabaseImporterException e) {
                                 listener.onError(e);
                             }
-                        });
+                        }, dialog1 -> listener.onCanceled());
                     })
                     .create());
         }

File: app/src/main/java/com/beemdevelopment/aegis/importers/AuthenticatorPlusImporter.java
Patch:
@@ -71,7 +71,7 @@ public void decrypt(Context context, DecryptListener listener) {
                 } catch (DatabaseImporterException e) {
                     listener.onError(e);
                 }
-            });
+            }, dialog1 -> listener.onCanceled());
         }
     }
 }

File: app/src/main/java/com/beemdevelopment/aegis/importers/AuthyImporter.java
Patch:
@@ -204,7 +204,7 @@ public void decrypt(Context context, DecryptListener listener) {
                 } catch (DatabaseImporterException e) {
                     listener.onError(e);
                 }
-            });
+            }, dialog1 -> listener.onCanceled());
         }
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/importers/TotpAuthenticatorImporter.java
Patch:
@@ -159,7 +159,7 @@ public void decrypt(Context context, DecryptListener listener) {
                     .setPositiveButton(R.string.yes, (dialog, which) -> {
                         Dialogs.showPasswordInputDialog(context, password -> {
                             decrypt(password, listener);
-                        });
+                        }, dialog1 -> listener.onCanceled());
                     })
                     .setNegativeButton(R.string.no, (dialog, which) -> {
                         decrypt(PASSWORD, listener);

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/PreferencesFragment.java
Patch:
@@ -16,11 +16,10 @@
 
 public abstract class PreferencesFragment extends PreferenceFragmentCompat {
     // activity request codes
-    public static final int CODE_IMPORT = 0;
-    public static final int CODE_IMPORT_DECRYPT = 1;
+    public static final int CODE_IMPORT_SELECT = 0;
     public static final int CODE_SLOTS = 2;
     public static final int CODE_GROUPS = 3;
-    public static final int CODE_SELECT_ENTRIES = 4;
+    public static final int CODE_IMPORT = 4;
     public static final int CODE_EXPORT = 5;
     public static final int CODE_EXPORT_PLAIN = 6;
     public static final int CODE_EXPORT_GOOGLE_URI = 7;

File: app/src/main/java/com/beemdevelopment/aegis/otp/HotpInfo.java
Patch:
@@ -39,7 +39,7 @@ public String getOtp() {
     }
 
     @Override
-    public String getType() {
+    public String getTypeId() {
         return ID;
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/otp/TotpInfo.java
Patch:
@@ -44,7 +44,7 @@ public String getOtp(long time) {
     }
 
     @Override
-    public String getType() {
+    public String getTypeId() {
         return ID;
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -172,7 +172,7 @@ protected void onCreate(Bundle savedInstanceState) {
             _textSecret.setText(secretString);
         }
 
-        _dropdownType.setText(_origEntry.getInfo().getType().toUpperCase(), false);
+        _dropdownType.setText(_origEntry.getInfo().getTypeId().toUpperCase(), false);
         _dropdownAlgo.setText(_origEntry.getInfo().getAlgorithm(false), false);
 
         String group = _origEntry.getGroup();

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultEntry.java
Patch:
@@ -53,7 +53,7 @@ public JSONObject toJson() {
         JSONObject obj = new JSONObject();
 
         try {
-            obj.put("type", _info.getType());
+            obj.put("type", _info.getTypeId());
             obj.put("uuid", getUUID().toString());
             obj.put("name", _name);
             obj.put("issuer", _issuer);

File: app/src/androidTest/java/com/beemdevelopment/aegis/OverallTest.java
Patch:
@@ -159,7 +159,7 @@ private void changeFilter(@IdRes int resId) {
     }
 
     private void addEntry(VaultEntry entry) {
-        onView(withId(R.id.fab_expand_menu_button)).perform(click());
+        onView(withId(R.id.fab)).perform(click());
         onView(withId(R.id.fab_enter)).perform(click());
 
         onView(withId(R.id.text_name)).perform(typeText(entry.getName()), closeSoftKeyboard());

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -96,7 +96,7 @@ public VaultFile loadVaultFile() throws VaultManagerException {
         }
 
         if (_vaultFile == null) {
-            _vaultFile = VaultManager.readFile(this);
+            _vaultFile = VaultManager.readVaultFile(this);
         }
 
         return _vaultFile;

File: app/src/main/java/com/beemdevelopment/aegis/ui/fragments/SecurityPreferencesFragment.java
Patch:
@@ -95,7 +95,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             } else {
                 Dialogs.showSecureDialog(new AlertDialog.Builder(getActivity())
                         .setTitle(R.string.disable_encryption)
-                        .setMessage(getString(R.string.disable_encryption_description))
+                        .setMessage(getText(R.string.disable_encryption_description))
                         .setPositiveButton(android.R.string.yes, (dialog, which) -> {
                             try {
                                 getVault().disableEncryption();

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -113,7 +113,6 @@ protected void onCreate(Bundle savedInstanceState) {
         _entryListView.setListener(this);
         _entryListView.setCodeGroupSize(getPreferences().getCodeGroupSize());
         _entryListView.setShowAccountName(getPreferences().isAccountNameVisible());
-        _entryListView.setSearchAccountName(getPreferences().isSearchAccountNameEnabled());
         _entryListView.setHighlightEntry(getPreferences().isEntryHighlightEnabled());
         _entryListView.setTapToReveal(getPreferences().isTapToRevealEnabled());
         _entryListView.setTapToRevealTime(getPreferences().getTapToRevealTime());
@@ -235,15 +234,13 @@ private void onPreferencesResult(Intent data) {
             } else if (data.getBooleanExtra("needsRefresh", false)) {
                 boolean showAccountName = getPreferences().isAccountNameVisible();
                 int codeGroupSize = getPreferences().getCodeGroupSize();
-                boolean searchAccountName = getPreferences().isSearchAccountNameEnabled();
                 boolean highlightEntry = getPreferences().isEntryHighlightEnabled();
                 boolean tapToReveal = getPreferences().isTapToRevealEnabled();
                 int tapToRevealTime = getPreferences().getTapToRevealTime();
                 ViewMode viewMode = getPreferences().getCurrentViewMode();
                 boolean copyOnTap = getPreferences().isCopyOnTapEnabled();
                 _entryListView.setShowAccountName(showAccountName);
                 _entryListView.setCodeGroupSize(codeGroupSize);
-                _entryListView.setSearchAccountName(searchAccountName);
                 _entryListView.setHighlightEntry(highlightEntry);
                 _entryListView.setTapToReveal(tapToReveal);
                 _entryListView.setTapToRevealTime(tapToRevealTime);

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultManager.java
Patch:
@@ -173,7 +173,7 @@ public void export(OutputStream stream, VaultFileCredentials creds) throws Vault
      * Google Authenticator URI's and writing it to the given OutputStream.
      */
     public void exportGoogleUris(OutputStream outStream) throws VaultManagerException {
-        try (PrintStream stream = new PrintStream(outStream, false, StandardCharsets.UTF_8.toString())) {
+        try (PrintStream stream = new PrintStream(outStream, false, StandardCharsets.UTF_8.name())) {
             for (VaultEntry entry : getEntries()) {
                 GoogleAuthInfo info = new GoogleAuthInfo(entry.getInfo(), entry.getName(), entry.getIssuer());
                 stream.println(info.getUri().toString());

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -157,7 +157,9 @@ public void onQrCodeDetected(Result result) {
             }
         } catch (GoogleAuthInfoException e) {
             e.printStackTrace();
-            Dialogs.showErrorDialog(this, R.string.read_qr_error, e, ((dialog, which) -> bindPreview(_cameraProvider)));
+            Dialogs.showErrorDialog(this,
+                    e.isPhoneFactor() ? R.string.read_qr_error_phonefactor : R.string.read_qr_error,
+                    e, ((dialog, which) -> bindPreview(_cameraProvider)));
             _cameraProvider.unbindAll();
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -407,8 +407,6 @@ private void startScanActivity() {
     }
 
     private void startScanImageActivity() {
-        _app.setBlockAutoLock(true);
-
         Intent galleryIntent = new Intent(Intent.ACTION_PICK);
         galleryIntent.setDataAndType(android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI, "image/*");
 

File: app/src/main/java/com/beemdevelopment/aegis/importers/AuthyImporter.java
Patch:
@@ -235,7 +235,7 @@ private static VaultEntry convertEntry(JSONObject entry) throws DatabaseImporter
                 authyEntryInfo.AccountType = JsonUtils.optString(entry, "accountType");
                 authyEntryInfo.Name = entry.optString("name");
 
-                boolean isAuthy = !entry.optString("accountType", "authy").equals("authenticator");
+                boolean isAuthy = entry.has("secretSeed");
                 sanitizeEntryInfo(authyEntryInfo, isAuthy);
 
                 byte[] secret;
@@ -246,7 +246,7 @@ private static VaultEntry convertEntry(JSONObject entry) throws DatabaseImporter
                 }
 
                 int digits = entry.getInt("digits");
-                OtpInfo info = new TotpInfo(secret, "SHA1", digits, digits == 7 ? 10 : 30);
+                OtpInfo info = new TotpInfo(secret, "SHA1", digits, isAuthy ? 10 : 30);
                 return new VaultEntry(info, authyEntryInfo.Name, authyEntryInfo.Issuer);
             } catch (OtpInfoException | JSONException | EncodingException e) {
                 throw new DatabaseImporterEntryException(e, entry.toString());

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -17,6 +17,7 @@
 import androidx.core.content.ContextCompat;
 
 import com.beemdevelopment.aegis.R;
+import com.beemdevelopment.aegis.ThemeMap;
 import com.beemdevelopment.aegis.helpers.QrCodeAnalyzer;
 import com.beemdevelopment.aegis.otp.GoogleAuthInfo;
 import com.beemdevelopment.aegis.otp.GoogleAuthInfoException;
@@ -77,7 +78,7 @@ public void onCreate(Bundle savedInstanceState) {
 
     @Override
     protected void onSetTheme() {
-        setTheme(R.style.AppTheme_Fullscreen);
+        setTheme(ThemeMap.FULLSCREEN);
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -156,7 +156,9 @@ public void onQrCodeDetected(Result result) {
             }
         } catch (GoogleAuthInfoException e) {
             e.printStackTrace();
-            Dialogs.showErrorDialog(this, R.string.read_qr_error, e, ((dialog, which) -> bindPreview(_cameraProvider)));
+            Dialogs.showErrorDialog(this,
+                    e.isPhoneFactor() ? R.string.read_qr_error_phonefactor : R.string.read_qr_error,
+                    e, ((dialog, which) -> bindPreview(_cameraProvider)));
             _cameraProvider.unbindAll();
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/importers/AuthyImporter.java
Patch:
@@ -235,7 +235,7 @@ private static VaultEntry convertEntry(JSONObject entry) throws DatabaseImporter
                 authyEntryInfo.AccountType = JsonUtils.optString(entry, "accountType");
                 authyEntryInfo.Name = entry.optString("name");
 
-                boolean isAuthy = !entry.optString("accountType", "authy").equals("authenticator");
+                boolean isAuthy = entry.has("secretSeed");
                 sanitizeEntryInfo(authyEntryInfo, isAuthy);
 
                 byte[] secret;
@@ -246,7 +246,7 @@ private static VaultEntry convertEntry(JSONObject entry) throws DatabaseImporter
                 }
 
                 int digits = entry.getInt("digits");
-                OtpInfo info = new TotpInfo(secret, "SHA1", digits, digits == 7 ? 10 : 30);
+                OtpInfo info = new TotpInfo(secret, "SHA1", digits, isAuthy ? 10 : 30);
                 return new VaultEntry(info, authyEntryInfo.Name, authyEntryInfo.Issuer);
             } catch (OtpInfoException | JSONException | EncodingException e) {
                 throw new DatabaseImporterEntryException(e, entry.toString());

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -113,7 +113,6 @@ protected void onCreate(Bundle savedInstanceState) {
         _entryListView.setListener(this);
         _entryListView.setCodeGroupSize(getPreferences().getCodeGroupSize());
         _entryListView.setShowAccountName(getPreferences().isAccountNameVisible());
-        _entryListView.setSearchAccountName(getPreferences().isSearchAccountNameEnabled());
         _entryListView.setHighlightEntry(getPreferences().isEntryHighlightEnabled());
         _entryListView.setTapToReveal(getPreferences().isTapToRevealEnabled());
         _entryListView.setTapToRevealTime(getPreferences().getTapToRevealTime());
@@ -235,15 +234,13 @@ private void onPreferencesResult(Intent data) {
             } else if (data.getBooleanExtra("needsRefresh", false)) {
                 boolean showAccountName = getPreferences().isAccountNameVisible();
                 int codeGroupSize = getPreferences().getCodeGroupSize();
-                boolean searchAccountName = getPreferences().isSearchAccountNameEnabled();
                 boolean highlightEntry = getPreferences().isEntryHighlightEnabled();
                 boolean tapToReveal = getPreferences().isTapToRevealEnabled();
                 int tapToRevealTime = getPreferences().getTapToRevealTime();
                 ViewMode viewMode = getPreferences().getCurrentViewMode();
                 boolean copyOnTap = getPreferences().isCopyOnTapEnabled();
                 _entryListView.setShowAccountName(showAccountName);
                 _entryListView.setCodeGroupSize(codeGroupSize);
-                _entryListView.setSearchAccountName(searchAccountName);
                 _entryListView.setHighlightEntry(highlightEntry);
                 _entryListView.setTapToReveal(tapToReveal);
                 _entryListView.setTapToRevealTime(tapToRevealTime);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -407,8 +407,6 @@ private void startScanActivity() {
     }
 
     private void startScanImageActivity() {
-        _app.setBlockAutoLock(true);
-
         Intent galleryIntent = new Intent(Intent.ACTION_PICK);
         galleryIntent.setDataAndType(android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI, "image/*");
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -407,6 +407,8 @@ private void startScanActivity() {
     }
 
     private void startScanImageActivity() {
+        _app.setBlockAutoLock(true);
+
         Intent galleryIntent = new Intent(Intent.ACTION_PICK);
         galleryIntent.setDataAndType(android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI, "image/*");
 

File: app/src/main/java/com/beemdevelopment/aegis/importers/GoogleAuthImporter.java
Patch:
@@ -4,8 +4,8 @@
 import android.content.pm.PackageManager;
 import android.database.Cursor;
 
-import com.beemdevelopment.aegis.encoding.Base32;
 import com.beemdevelopment.aegis.encoding.EncodingException;
+import com.beemdevelopment.aegis.otp.GoogleAuthInfo;
 import com.beemdevelopment.aegis.otp.HotpInfo;
 import com.beemdevelopment.aegis.otp.OtpInfo;
 import com.beemdevelopment.aegis.otp.OtpInfoException;
@@ -73,7 +73,7 @@ public Result convert() {
 
         private static VaultEntry convertEntry(Entry entry) throws DatabaseImporterEntryException {
             try {
-                byte[] secret = Base32.decode(entry.getSecret());
+                byte[] secret = GoogleAuthInfo.parseSecret(entry.getSecret());
 
                 OtpInfo info;
                 switch (entry.getType()) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -407,6 +407,8 @@ private void startScanActivity() {
     }
 
     private void startScanImageActivity() {
+        _app.setBlockAutoLock(true);
+
         Intent galleryIntent = new Intent(Intent.ACTION_PICK);
         galleryIntent.setDataAndType(android.provider.MediaStore.Images.Media.INTERNAL_CONTENT_URI, "image/*");
 

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -140,7 +140,9 @@ public void unregisterLockListener(LockListener listener) {
      * @param userInitiated whether or not the user initiated the lock in MainActivity.
      */
     public void lock(boolean userInitiated) {
+        _manager.destroy();
         _manager = null;
+
         for (LockListener listener : _lockListeners) {
             listener.onLocked(userInitiated);
         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -37,6 +37,7 @@
 import com.beemdevelopment.aegis.helpers.EditTextHelper;
 import com.beemdevelopment.aegis.helpers.SpinnerHelper;
 import com.beemdevelopment.aegis.helpers.TextDrawableHelper;
+import com.beemdevelopment.aegis.otp.GoogleAuthInfo;
 import com.beemdevelopment.aegis.otp.HotpInfo;
 import com.beemdevelopment.aegis.otp.OtpInfo;
 import com.beemdevelopment.aegis.otp.OtpInfoException;
@@ -515,7 +516,8 @@ private VaultEntry parseEntry() throws ParseException {
 
         byte[] secret;
         try {
-            secret = Base32.decode(new String(EditTextHelper.getEditTextChars(_textSecret, true)));
+            String secretString = new String(EditTextHelper.getEditTextChars(_textSecret));
+            secret = GoogleAuthInfo.parseSecret(secretString);
             if (secret.length == 0) {
                 throw new ParseException("Secret cannot be empty");
             }

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -154,7 +154,8 @@ protected void onCreate(Bundle savedInstanceState) {
             char[] password = EditTextHelper.getEditTextChars(_textPassword);
             List<PasswordSlot> slots = _slots.findAll(PasswordSlot.class);
             PasswordSlotDecryptTask.Params params = new PasswordSlotDecryptTask.Params(slots, password);
-            new PasswordSlotDecryptTask(AuthActivity.this, new PasswordDerivationListener()).execute(params);
+            PasswordSlotDecryptTask task = new PasswordSlotDecryptTask(AuthActivity.this, new PasswordDerivationListener());
+            task.execute(getLifecycle(), params);
         });
 
         biometricsButton.setOnClickListener(v -> {

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -37,6 +37,7 @@
 import com.beemdevelopment.aegis.ui.models.ImportEntry;
 import com.beemdevelopment.aegis.ui.preferences.SwitchPreference;
 import com.beemdevelopment.aegis.ui.tasks.PasswordSlotDecryptTask;
+import com.beemdevelopment.aegis.ui.tasks.ProgressDialogTask;
 import com.beemdevelopment.aegis.util.UUIDMap;
 import com.beemdevelopment.aegis.vault.VaultBackupManager;
 import com.beemdevelopment.aegis.vault.VaultEntry;
@@ -384,7 +385,8 @@ public boolean onPreferenceClick(Preference preference) {
                 if (isDigitsOnly(new String(password))) {
                     List<PasswordSlot> slots = _vault.getCredentials().getSlots().findAll(PasswordSlot.class);
                     PasswordSlotDecryptTask.Params params = new PasswordSlotDecryptTask.Params(slots, password);
-                    new PasswordSlotDecryptTask(getActivity(), new PasswordConfirmationListener()).execute(params);
+                    PasswordSlotDecryptTask task = new PasswordSlotDecryptTask(getActivity(), new PasswordConfirmationListener());
+                    task.execute(getLifecycle(), params);
                 } else {
                     setPinKeyboardPreference(false);
                     Dialogs.showSecureDialog(new AlertDialog.Builder(getActivity())

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/SecuritySetupSlide.java
Patch:
@@ -125,7 +125,8 @@ private void showBiometricPrompt() {
     private void deriveKey() {
         PasswordSlot slot = new PasswordSlot();
         KeyDerivationTask.Params params = new KeyDerivationTask.Params(slot, EditTextHelper.getEditTextChars(_textPassword));
-        new KeyDerivationTask(getContext(), new PasswordDerivationListener()).execute(params);
+        KeyDerivationTask task = new KeyDerivationTask(getContext(), new PasswordDerivationListener());
+        task.execute(getLifecycle(), params);
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -743,6 +743,9 @@ public void onScroll(int dx, int dy) {
         _fabScrollHelper.onScroll(dx, dy);
     }
 
+    @Override
+    public void onListChange() { _fabScrollHelper.setVisible(true); }
+
     @Override
     public void onLocked() {
         if (_actionMode != null) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -743,6 +743,9 @@ public void onScroll(int dx, int dy) {
         _fabScrollHelper.onScroll(dx, dy);
     }
 
+    @Override
+    public void onListChange() { _fabScrollHelper.setVisible(true); }
+
     @Override
     public void onLocked() {
         if (_actionMode != null) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -150,7 +150,7 @@ protected boolean isOpen() {
      * Reports whether this Activity instance has become an orphan. This can happen if
      * the vault was locked by an external trigger while the Activity was still open.
      */
-    private boolean isOrphan() {
+    protected boolean isOrphan() {
         return !(this instanceof MainActivity) && !(this instanceof AuthActivity) && _app.isVaultLocked();
     }
 }

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -491,7 +491,7 @@ protected void onResume() {
         }
 
         if (_app.isVaultLocked()) {
-            startAuthActivity(true);
+            startAuthActivity(false);
         } else if (_loaded) {
             // update the list of groups in the filter menu
             if (_menu != null) {
@@ -753,7 +753,7 @@ public void onLocked() {
         _loaded = false;
 
         if (isOpen()) {
-            startAuthActivity(false);
+            startAuthActivity(true);
         }
 
         super.onLocked();

File: app/src/main/java/com/beemdevelopment/aegis/ui/Dialogs.java
Patch:
@@ -6,10 +6,8 @@
 import android.content.ClipboardManager;
 import android.content.Context;
 import android.content.DialogInterface;
-import android.content.Intent;
 import android.content.res.ColorStateList;
 import android.graphics.Color;
-import android.provider.Settings;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextWatcher;
@@ -124,6 +122,7 @@ public static void showSetPasswordDialog(Activity activity, Dialogs.SlotListener
                 .setPositiveButton(android.R.string.ok, null)
                 .setNegativeButton(android.R.string.cancel, null)
                 .create();
+        dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
 
         final AtomicReference<Button> buttonOK = new AtomicReference<>();
         dialog.setOnShowListener(d -> {
@@ -208,6 +207,7 @@ private static void showTextInputDialog(Context context, @StringRes int titleId,
         }
 
         AlertDialog dialog = builder.create();
+        dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
         showSecureDialog(dialog);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.core.content.ContextCompat;
 
 import com.beemdevelopment.aegis.R;
-import com.beemdevelopment.aegis.Theme;
 import com.beemdevelopment.aegis.helpers.QrCodeAnalyzer;
 import com.beemdevelopment.aegis.otp.GoogleAuthInfo;
 import com.beemdevelopment.aegis.otp.GoogleAuthInfoException;
@@ -77,7 +76,7 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    protected void setPreferredTheme(Theme theme) {
+    protected void onSetTheme() {
         setTheme(R.style.AppTheme_Fullscreen);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -143,7 +143,7 @@ protected boolean isOpen() {
      * Reports whether this Activity instance has become an orphan. This can happen if
      * the vault was locked by an external trigger while the Activity was still open.
      */
-    private boolean isOrphan() {
+    protected boolean isOrphan() {
         return !(this instanceof MainActivity) && !(this instanceof AuthActivity) && _app.isVaultLocked();
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -491,7 +491,7 @@ protected void onResume() {
         }
 
         if (_app.isVaultLocked()) {
-            startAuthActivity(true);
+            startAuthActivity(false);
         } else if (_loaded) {
             // update the list of groups in the filter menu
             if (_menu != null) {
@@ -753,7 +753,7 @@ public void onLocked() {
         _loaded = false;
 
         if (isOpen()) {
-            startAuthActivity(false);
+            startAuthActivity(true);
         }
 
         super.onLocked();

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -17,7 +17,6 @@
 import androidx.core.content.ContextCompat;
 
 import com.beemdevelopment.aegis.R;
-import com.beemdevelopment.aegis.Theme;
 import com.beemdevelopment.aegis.helpers.QrCodeAnalyzer;
 import com.beemdevelopment.aegis.otp.GoogleAuthInfo;
 import com.beemdevelopment.aegis.otp.GoogleAuthInfoException;
@@ -77,7 +76,7 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     @Override
-    protected void setPreferredTheme(Theme theme) {
+    protected void onSetTheme() {
         setTheme(R.style.AppTheme_Fullscreen);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/TotpProgressBar.java
Patch:
@@ -65,8 +65,8 @@ private void refresh() {
         int currentProgress = (int) (maxProgress * ((float) millisTillRotation / (_period * 1000)));
 
         // start progress animation, compensating for any changes to the animator duration scale settings
-        int animPart = maxProgress / _period;
-        int animEnd = (currentProgress / animPart) * animPart;
+        float animPart = (float) maxProgress / _period;
+        int animEnd = (int) ((currentProgress / animPart) * animPart);
         int animPartDuration = (int) (1000 / _animDurationScale);
         float animDurationFraction = (float) (currentProgress - animEnd) / animPart;
         int realAnimDuration =  (int) (1000 * animDurationFraction);

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -636,7 +636,7 @@ private void startExport() {
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
                 .setTitle(R.string.pref_export_summary)
                 .setPositiveButton(android.R.string.ok, (dialog, which) -> {
-                    String filename = checked.get() ? VaultManager.FILENAME_EXPORT : VaultManager.FILENAME_EXPORT_PLAIN;
+                    String filename = checked.get() ? VaultManager.FILENAME_PREFIX_EXPORT : VaultManager.FILENAME_PREFIX_EXPORT_PLAIN;
                     filename = new VaultBackupManager.FileInfo(filename).toString();
 
                     Intent intent = new Intent(Intent.ACTION_CREATE_DOCUMENT)

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultManager.java
Patch:
@@ -19,8 +19,8 @@
 
 public class VaultManager {
     public static final String FILENAME = "aegis.json";
-    public static final String FILENAME_EXPORT = "aegis-export.json";
-    public static final String FILENAME_EXPORT_PLAIN = "aegis-export-plain.json";
+    public static final String FILENAME_PREFIX_EXPORT = "aegis-export";
+    public static final String FILENAME_PREFIX_EXPORT_PLAIN = "aegis-export-plain";
 
     private Vault _vault;
     private VaultFileCredentials _creds;

File: app/src/main/java/com/beemdevelopment/aegis/crypto/KeyStoreHandle.java
Patch:
@@ -63,9 +63,9 @@ public SecretKey generateKey(String id) throws KeyStoreHandleException {
             return generator.generateKey();
         } catch (ProviderException e) {
             // a ProviderException can occur at runtime with buggy Keymaster HAL implementations
-            // so if this was caused by a KeyStoreException, throw a KeyStoreHandleException instead
+            // so if this was caused by an android.security.KeyStoreException, throw a KeyStoreHandleException instead
             Throwable cause = e.getCause();
-            if (cause instanceof KeyStoreException) {
+            if (cause != null && cause.getClass().getName().equals("android.security.KeyStoreException")) {
                 throw new KeyStoreHandleException(cause);
             }
             throw e;

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/TotpProgressBar.java
Patch:
@@ -65,8 +65,8 @@ private void refresh() {
         int currentProgress = (int) (maxProgress * ((float) millisTillRotation / (_period * 1000)));
 
         // start progress animation, compensating for any changes to the animator duration scale settings
-        int animPart = maxProgress / _period;
-        int animEnd = (currentProgress / animPart) * animPart;
+        float animPart = (float) maxProgress / _period;
+        int animEnd = (int) ((currentProgress / animPart) * animPart);
         int animPartDuration = (int) (1000 / _animDurationScale);
         float animDurationFraction = (float) (currentProgress - animEnd) / animPart;
         int realAnimDuration =  (int) (1000 * animDurationFraction);

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -642,7 +642,7 @@ private void startExport() {
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity())
                 .setTitle(R.string.pref_export_summary)
                 .setPositiveButton(android.R.string.ok, (dialog, which) -> {
-                    String filename = checked.get() ? VaultManager.FILENAME_EXPORT : VaultManager.FILENAME_EXPORT_PLAIN;
+                    String filename = checked.get() ? VaultManager.FILENAME_PREFIX_EXPORT : VaultManager.FILENAME_PREFIX_EXPORT_PLAIN;
                     filename = new VaultBackupManager.FileInfo(filename).toString();
 
                     Intent intent = new Intent(Intent.ACTION_CREATE_DOCUMENT)

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultManager.java
Patch:
@@ -19,8 +19,8 @@
 
 public class VaultManager {
     public static final String FILENAME = "aegis.json";
-    public static final String FILENAME_EXPORT = "aegis-export.json";
-    public static final String FILENAME_EXPORT_PLAIN = "aegis-export-plain.json";
+    public static final String FILENAME_PREFIX_EXPORT = "aegis-export";
+    public static final String FILENAME_PREFIX_EXPORT_PLAIN = "aegis-export-plain";
 
     private Vault _vault;
     private VaultFileCredentials _creds;

File: app/src/main/java/com/beemdevelopment/aegis/crypto/KeyStoreHandle.java
Patch:
@@ -63,9 +63,9 @@ public SecretKey generateKey(String id) throws KeyStoreHandleException {
             return generator.generateKey();
         } catch (ProviderException e) {
             // a ProviderException can occur at runtime with buggy Keymaster HAL implementations
-            // so if this was caused by a KeyStoreException, throw a KeyStoreHandleException instead
+            // so if this was caused by an android.security.KeyStoreException, throw a KeyStoreHandleException instead
             Throwable cause = e.getCause();
-            if (cause instanceof KeyStoreException) {
+            if (cause != null && cause.getClass().getName().equals("android.security.KeyStoreException")) {
                 throw new KeyStoreHandleException(cause);
             }
             throw e;

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -141,6 +141,7 @@ private void initAppShortcuts() {
 
         Intent intent = new Intent(this, MainActivity.class);
         intent.putExtra("action", "scan");
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
         intent.setAction(Intent.ACTION_MAIN);
 
         ShortcutInfo shortcut = new ShortcutInfo.Builder(this, "shortcut_new")

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -35,7 +35,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // if the app was killed, relaunch MainActivity and close everything else
         if (savedInstanceState != null && isOrphan()) {
             Intent intent = new Intent(this, MainActivity.class);
-            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
             startActivity(intent);
             return;
         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -144,7 +144,7 @@ protected boolean isOpen() {
      * the vault was locked by an external trigger while the Activity was still open.
      */
     private boolean isOrphan() {
-        return !(this instanceof MainActivity) && _app.isVaultLocked();
+        return !(this instanceof MainActivity) && !(this instanceof AuthActivity) && _app.isVaultLocked();
     }
 
     protected Theme getCurrentTheme() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -144,7 +144,7 @@ protected boolean isOpen() {
      * the vault was locked by an external trigger while the Activity was still open.
      */
     private boolean isOrphan() {
-        return !(this instanceof MainActivity) && _app.isVaultLocked();
+        return !(this instanceof MainActivity) && !(this instanceof AuthActivity) && _app.isVaultLocked();
     }
 
     protected Theme getCurrentTheme() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -122,9 +122,9 @@ protected void setLocale(Locale locale) {
         this.getResources().updateConfiguration(config, this.getResources().getDisplayMetrics());
     }
 
-    protected boolean saveVault() {
+    protected boolean saveVault(boolean backup) {
         try {
-            getApp().getVaultManager().save();
+            getApp().getVaultManager().save(backup);
             return true;
         } catch (VaultManagerException e) {
             Toast.makeText(this, getString(R.string.saving_error), Toast.LENGTH_LONG).show();

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -467,7 +467,7 @@ private void saveAndFinish(VaultEntry entry, boolean delete) {
         intent.putExtra("entryUUID", entry.getUUID());
         intent.putExtra("delete", delete);
 
-        if (saveVault()) {
+        if (saveVault(true)) {
             setResult(RESULT_OK, intent);
             finish();
         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -122,9 +122,9 @@ protected void setLocale(Locale locale) {
         this.getResources().updateConfiguration(config, this.getResources().getDisplayMetrics());
     }
 
-    protected boolean saveVault() {
+    protected boolean saveVault(boolean backup) {
         try {
-            getApp().getVaultManager().save();
+            getApp().getVaultManager().save(backup);
             return true;
         } catch (VaultManagerException e) {
             Toast.makeText(this, getString(R.string.saving_error), Toast.LENGTH_LONG).show();

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -467,7 +467,7 @@ private void saveAndFinish(VaultEntry entry, boolean delete) {
         intent.putExtra("entryUUID", entry.getUUID());
         intent.putExtra("delete", delete);
 
-        if (saveVault()) {
+        if (saveVault(true)) {
             setResult(RESULT_OK, intent);
             finish();
         }

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -178,7 +178,7 @@ public void onResume() {
 
     @Override
     public void onAttachedToWindow() {
-        if (_bioPrompt != null && _prefs.isPasswordReminderNeeded()) {
+        if (_bioKey != null && _prefs.isPasswordReminderNeeded()) {
             showPasswordReminder();
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -18,6 +18,7 @@
 import com.beemdevelopment.aegis.vault.VaultEntry;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
@@ -127,7 +128,7 @@ public void addEntry(VaultEntry entry) {
         checkPeriodUniformity();
     }
 
-    public void addEntries(List<VaultEntry> entries) {
+    public void addEntries(Collection<VaultEntry> entries) {
         _entries.addAll(entries);
         updateShownEntries();
         checkPeriodUniformity(true);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -33,6 +33,7 @@
 import com.bumptech.glide.load.engine.DiskCacheStrategy;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 
+import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 import java.util.UUID;
@@ -253,7 +254,7 @@ public void addEntry(VaultEntry entry) {
         updateEmptyState();
     }
 
-    public void addEntries(List<VaultEntry> entries) {
+    public void addEntries(Collection<VaultEntry> entries) {
         _adapter.addEntries(entries);
         updateEmptyState();
     }

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -112,7 +112,7 @@ public Preferences getPreferences() {
     }
 
     public boolean isAutoLockEnabled() {
-        return _prefs.isAutoLockEnabled() && _manager.isEncryptionEnabled() && !isVaultLocked();
+        return _prefs.isAutoLockEnabled() && !isVaultLocked() && _manager.isEncryptionEnabled() ;
     }
 
     public void registerLockListener(LockListener listener) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -178,7 +178,7 @@ public void onResume() {
 
     @Override
     public void onAttachedToWindow() {
-        if (_bioPrompt != null && _prefs.isPasswordReminderNeeded()) {
+        if (_bioKey != null && _prefs.isPasswordReminderNeeded()) {
             showPasswordReminder();
         }
     }

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -460,6 +460,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 // intentional fallthrough
             case CODE_EXPORT_ENCRYPT:
                 onExportResult(resultCode, data, requestCode == CODE_EXPORT_ENCRYPT);
+                break;
             case CODE_BACKUPS:
                 onSelectBackupsLocationResult(resultCode, data);
                 break;

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -460,6 +460,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 // intentional fallthrough
             case CODE_EXPORT_ENCRYPT:
                 onExportResult(resultCode, data, requestCode == CODE_EXPORT_ENCRYPT);
+                break;
             case CODE_BACKUPS:
                 onSelectBackupsLocationResult(resultCode, data);
                 break;

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -112,7 +112,7 @@ public Preferences getPreferences() {
     }
 
     public boolean isAutoLockEnabled() {
-        return _prefs.isAutoLockEnabled() && _manager.isEncryptionEnabled() && !isVaultLocked();
+        return _prefs.isAutoLockEnabled() && !isVaultLocked() && _manager.isEncryptionEnabled() ;
     }
 
     public void registerLockListener(LockListener listener) {

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/CustomAuthenticatedSlide.java
Patch:
@@ -60,7 +60,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             }
         });
 
-        _creds = new VaultFileCredentials();
         view.findViewById(R.id.main).setBackgroundColor(_bgColor);
         return view;
     }
@@ -96,6 +95,9 @@ private void deriveKey() {
     public void onSlideSelected() {
         Intent intent = getActivity().getIntent();
         _cryptType = intent.getIntExtra("cryptType", CustomAuthenticationSlide.CRYPT_TYPE_INVALID);
+        if (_cryptType != CustomAuthenticationSlide.CRYPT_TYPE_NONE) {
+            _creds = new VaultFileCredentials();
+        }
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/CustomAuthenticatedSlide.java
Patch:
@@ -60,7 +60,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             }
         });
 
-        _creds = new VaultFileCredentials();
         view.findViewById(R.id.main).setBackgroundColor(_bgColor);
         return view;
     }
@@ -96,6 +95,9 @@ private void deriveKey() {
     public void onSlideSelected() {
         Intent intent = getActivity().getIntent();
         _cryptType = intent.getIntExtra("cryptType", CustomAuthenticationSlide.CRYPT_TYPE_INVALID);
+        if (_cryptType != CustomAuthenticationSlide.CRYPT_TYPE_NONE) {
+            _creds = new VaultFileCredentials();
+        }
     }
 
     @Override

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -18,6 +18,7 @@
 import com.beemdevelopment.aegis.vault.VaultEntry;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
@@ -127,7 +128,7 @@ public void addEntry(VaultEntry entry) {
         checkPeriodUniformity();
     }
 
-    public void addEntries(List<VaultEntry> entries) {
+    public void addEntries(Collection<VaultEntry> entries) {
         _entries.addAll(entries);
         updateShownEntries();
         checkPeriodUniformity(true);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -33,6 +33,7 @@
 import com.bumptech.glide.load.engine.DiskCacheStrategy;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 
+import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 import java.util.UUID;
@@ -253,7 +254,7 @@ public void addEntry(VaultEntry entry) {
         updateEmptyState();
     }
 
-    public void addEntries(List<VaultEntry> entries) {
+    public void addEntries(Collection<VaultEntry> entries) {
         _adapter.addEntries(entries);
         updateEmptyState();
     }

File: app/src/main/java/com/beemdevelopment/aegis/crypto/MasterKey.java
Patch:
@@ -17,7 +17,7 @@ public class MasterKey implements Serializable {
 
     public MasterKey(SecretKey key)  {
         if (key == null) {
-            throw new NullPointerException();
+            throw new IllegalArgumentException("Key cannot be null");
         }
         _key = key;
     }

File: app/src/main/java/com/beemdevelopment/aegis/otp/HotpInfo.java
Patch:
@@ -34,7 +34,7 @@ public String getOtp() {
             OTP otp = HOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getCounter());
             return otp.toString();
         } catch (NoSuchAlgorithmException | InvalidKeyException e) {
-            throw new RuntimeException();
+            throw new RuntimeException(e);
         }
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -149,7 +149,7 @@ protected boolean isOpen() {
      * the vault was locked by an external trigger while the Activity was still open.
      */
     private boolean isOrphan() {
-        return !(this instanceof MainActivity) && _app.getVaultManager().isLocked();
+        return !(this instanceof MainActivity) && _app.isVaultLocked();
     }
 
     private void setGlobalAnimationDurationScale() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -165,7 +165,7 @@ protected void onCreate(Bundle savedInstanceState) {
             _textCounter.setText(Long.toString(((HotpInfo) info).getCounter()));
             _rowCounter.setVisibility(View.VISIBLE);
         } else {
-            throw new RuntimeException();
+            throw new RuntimeException(String.format("Unsupported OtpInfo type: %s", info.getClass()));
         }
         _textDigits.setText(Integer.toString(info.getDigits()));
 
@@ -204,7 +204,7 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
                         _rowCounter.setVisibility(View.VISIBLE);
                         break;
                     default:
-                        throw new RuntimeException();
+                        throw new RuntimeException(String.format("Unsupported OTP type: %s", type));
                 }
             }
 
@@ -510,7 +510,7 @@ private VaultEntry parseEntry() throws ParseException {
                     info = new HotpInfo(secret, algo, digits, counter);
                     break;
                 default:
-                    throw new RuntimeException();
+                    throw new RuntimeException(String.format("Unsupported OTP type: %s", type));
             }
 
             info.setDigits(digits);

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/CustomAuthenticationSlide.java
Patch:
@@ -78,7 +78,7 @@ public void onCheckedChanged(RadioGroup radioGroup, int i) {
                 id = CRYPT_TYPE_BIOMETRIC;
                 break;
             default:
-                throw new RuntimeException();
+                throw new RuntimeException(String.format("Unsupported security setting: %d", i));
         }
 
         Intent intent = getActivity().getIntent();

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/SlotHolder.java
Patch:
@@ -51,7 +51,7 @@ public void setData(Slot slot) {
             _slotName.setText(R.string.authentication_method_raw);
             _slotImg.setImageResource(R.drawable.ic_vpn_key_black_24dp);
         } else {
-            throw new RuntimeException();
+            throw new RuntimeException(String.format("Unsupported Slot type: %s", slot.getClass()));
         }
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/crypto/MasterKey.java
Patch:
@@ -17,7 +17,7 @@ public class MasterKey implements Serializable {
 
     public MasterKey(SecretKey key)  {
         if (key == null) {
-            throw new NullPointerException();
+            throw new IllegalArgumentException("Key cannot be null");
         }
         _key = key;
     }

File: app/src/main/java/com/beemdevelopment/aegis/otp/HotpInfo.java
Patch:
@@ -34,7 +34,7 @@ public String getOtp() {
             OTP otp = HOTP.generateOTP(getSecret(), getAlgorithm(true), getDigits(), getCounter());
             return otp.toString();
         } catch (NoSuchAlgorithmException | InvalidKeyException e) {
-            throw new RuntimeException();
+            throw new RuntimeException(e);
         }
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -149,7 +149,7 @@ protected boolean isOpen() {
      * the vault was locked by an external trigger while the Activity was still open.
      */
     private boolean isOrphan() {
-        return !(this instanceof MainActivity) && _app.getVaultManager().isLocked();
+        return !(this instanceof MainActivity) && _app.isVaultLocked();
     }
 
     private void setGlobalAnimationDurationScale() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -165,7 +165,7 @@ protected void onCreate(Bundle savedInstanceState) {
             _textCounter.setText(Long.toString(((HotpInfo) info).getCounter()));
             _rowCounter.setVisibility(View.VISIBLE);
         } else {
-            throw new RuntimeException();
+            throw new RuntimeException(String.format("Unsupported OtpInfo type: %s", info.getClass()));
         }
         _textDigits.setText(Integer.toString(info.getDigits()));
 
@@ -204,7 +204,7 @@ public void onItemSelected(AdapterView<?> parent, View view, int position, long
                         _rowCounter.setVisibility(View.VISIBLE);
                         break;
                     default:
-                        throw new RuntimeException();
+                        throw new RuntimeException(String.format("Unsupported OTP type: %s", type));
                 }
             }
 
@@ -510,7 +510,7 @@ private VaultEntry parseEntry() throws ParseException {
                     info = new HotpInfo(secret, algo, digits, counter);
                     break;
                 default:
-                    throw new RuntimeException();
+                    throw new RuntimeException(String.format("Unsupported OTP type: %s", type));
             }
 
             info.setDigits(digits);

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/CustomAuthenticationSlide.java
Patch:
@@ -78,7 +78,7 @@ public void onCheckedChanged(RadioGroup radioGroup, int i) {
                 id = CRYPT_TYPE_BIOMETRIC;
                 break;
             default:
-                throw new RuntimeException();
+                throw new RuntimeException(String.format("Unsupported security setting: %d", i));
         }
 
         Intent intent = getActivity().getIntent();

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/SlotHolder.java
Patch:
@@ -51,7 +51,7 @@ public void setData(Slot slot) {
             _slotName.setText(R.string.authentication_method_raw);
             _slotImg.setImageResource(R.drawable.ic_vpn_key_black_24dp);
         } else {
-            throw new RuntimeException();
+            throw new RuntimeException(String.format("Unsupported Slot type: %s", slot.getClass()));
         }
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -99,6 +99,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // set up the entry view
         _entryListView = (EntryListView) getSupportFragmentManager().findFragmentById(R.id.key_profiles);
         _entryListView.setListener(this);
+        _entryListView.setCodeGroupSize(getPreferences().getCodeGroupSize());
         _entryListView.setShowAccountName(getPreferences().isAccountNameVisible());
         _entryListView.setSearchAccountName(getPreferences().isSearchAccountNameEnabled());
         _entryListView.setHighlightEntry(getPreferences().isEntryHighlightEnabled());
@@ -220,12 +221,14 @@ private void onPreferencesResult(int resultCode, Intent data) {
             recreate();
         } else if (data.getBooleanExtra("needsRefresh", false)) {
             boolean showAccountName = getPreferences().isAccountNameVisible();
+            int codeGroupSize = getPreferences().getCodeGroupSize();
             boolean searchAccountName = getPreferences().isSearchAccountNameEnabled();
             boolean highlightEntry = getPreferences().isEntryHighlightEnabled();
             boolean tapToReveal = getPreferences().isTapToRevealEnabled();
             int tapToRevealTime = getPreferences().getTapToRevealTime();
             ViewMode viewMode = getPreferences().getCurrentViewMode();
             _entryListView.setShowAccountName(showAccountName);
+            _entryListView.setCodeGroupSize(codeGroupSize);
             _entryListView.setSearchAccountName(searchAccountName);
             _entryListView.setHighlightEntry(highlightEntry);
             _entryListView.setTapToReveal(tapToReveal);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -320,6 +320,8 @@ public void onClick(View v) {
                 boolean handled = false;
 
                 if (_selectedEntries.isEmpty()) {
+                    holder.animateCopyText();
+
                     if (_highlightEntry || _tapToReveal) {
                         if (_focusedEntry == entry) {
                             resetFocus();
@@ -342,7 +344,6 @@ public void onClick(View v) {
 
                 if (!handled) {
                     _view.onEntryClick(entry);
-                    holder.animateCopyText();
                 }
             }
         });

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryAdapter.java
Patch:
@@ -320,6 +320,8 @@ public void onClick(View v) {
                 boolean handled = false;
 
                 if (_selectedEntries.isEmpty()) {
+                    holder.animateCopyText();
+
                     if (_highlightEntry || _tapToReveal) {
                         if (_focusedEntry == entry) {
                             resetFocus();
@@ -342,7 +344,6 @@ public void onClick(View v) {
 
                 if (!handled) {
                     _view.onEntryClick(entry);
-                    holder.animateCopyText();
                 }
             }
         });

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -99,8 +99,8 @@ private void initAppShortcuts() {
         intent.setAction(Intent.ACTION_MAIN);
 
         ShortcutInfo shortcut = new ShortcutInfo.Builder(this, "shortcut_new")
-                .setShortLabel(getString(R.string.new_profile))
-                .setLongLabel(getString(R.string.add_new_profile))
+                .setShortLabel(getString(R.string.new_entry))
+                .setLongLabel(getString(R.string.add_new_entry))
                 .setIcon(Icon.createWithResource(this, R.drawable.ic_qr_code))
                 .setIntent(intent)
                 .build();

File: app/src/main/java/com/beemdevelopment/aegis/ui/EditEntryActivity.java
Patch:
@@ -105,7 +105,7 @@ protected void onCreate(Bundle savedInstanceState) {
         _groups = new TreeSet<>(Collator.getInstance());
         _groups.addAll(intent.getStringArrayListExtra("groups"));
         if (_isNew) {
-            setTitle(R.string.add_new_profile);
+            setTitle(R.string.add_new_entry);
         }
 
         String selectedGroup = intent.getStringExtra("selectedGroup");

File: app/src/main/java/com/beemdevelopment/aegis/ui/AuthActivity.java
Patch:
@@ -191,6 +191,7 @@ public void showBiometricPrompt() {
         BiometricPrompt.PromptInfo info = new BiometricPrompt.PromptInfo.Builder()
                 .setTitle(getString(R.string.authentication))
                 .setNegativeButtonText(getString(android.R.string.cancel))
+                .setConfirmationRequired(false)
                 .build();
         _bioPrompt.authenticate(info, _bioCryptoObj);
     }

File: app/src/main/java/com/beemdevelopment/aegis/otp/GoogleAuthInfo.java
Patch:
@@ -101,7 +101,7 @@ public static GoogleAuthInfo parseUri(Uri uri) throws GoogleAuthInfoException {
                 default:
                     throw new GoogleAuthInfoException(String.format("unsupported otp type: %s", type));
             }
-        } catch (OtpInfoException e) {
+        } catch (OtpInfoException | NumberFormatException e) {
             throw new GoogleAuthInfoException(e);
         }
 
@@ -141,7 +141,7 @@ public static GoogleAuthInfo parseUri(Uri uri) throws GoogleAuthInfoException {
             if (digits != null) {
                 info.setDigits(Integer.parseInt(digits));
             }
-        } catch (OtpInfoException e) {
+        } catch (OtpInfoException | NumberFormatException e) {
             throw new GoogleAuthInfoException(e);
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/ScannerActivity.java
Patch:
@@ -108,7 +108,7 @@ public void onPause() {
     public void handleResult(Result rawResult) {
         try {
             // parse google auth uri
-            GoogleAuthInfo info = GoogleAuthInfo.parseUri(rawResult.getText());
+            GoogleAuthInfo info = GoogleAuthInfo.parseUri(rawResult.getText().trim());
             VaultEntry entry = new VaultEntry(info);
 
             Intent intent = new Intent();

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -32,6 +32,7 @@ public abstract class DatabaseImporter {
         _importers.put("FreeOTP", FreeOtpImporter.class);
         _importers.put("FreeOTP+", FreeOtpPlusImporter.class);
         _importers.put("Google Authenticator", GoogleAuthImporter.class);
+        _importers.put("Microsoft Authenticator", MicrosoftAuthImporter.class);
         _importers.put("Steam", SteamImporter.class);
         _importers.put("WinAuth", WinAuthImporter.class);
 
@@ -40,6 +41,7 @@ public abstract class DatabaseImporter {
         _appImporters.put("FreeOTP", FreeOtpImporter.class);
         _appImporters.put("FreeOTP+", FreeOtpPlusImporter.class);
         _appImporters.put("Google Authenticator", GoogleAuthImporter.class);
+        _appImporters.put("Microsoft Authenticator", MicrosoftAuthImporter.class);
         _appImporters.put("Steam", SteamImporter.class);
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/vault/VaultManager.java
Patch:
@@ -19,8 +19,8 @@
 
 public class VaultManager {
     private static final String FILENAME = "aegis.json";
-    public static final String FILENAME_EXPORT = "aegis_export";
-    public static final String FILENAME_EXPORT_PLAIN = "aegis_export_plain";
+    public static final String FILENAME_EXPORT = "aegis_export.json";
+    public static final String FILENAME_EXPORT_PLAIN = "aegis_export_plain.json";
 
     private Vault _vault;
     private VaultFile _file;

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -110,7 +110,7 @@ protected void setLocale(Locale locale) {
         Configuration config = new Configuration();
         config.locale = locale;
 
-        getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());
+        this.getResources().updateConfiguration(config, this.getResources().getDisplayMetrics());
     }
 
     /**

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -110,7 +110,7 @@ protected void setLocale(Locale locale) {
         Configuration config = new Configuration();
         config.locale = locale;
 
-        getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());
+        this.getResources().updateConfiguration(config, this.getResources().getDisplayMetrics());
     }
 
     /**

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryHolder.java
Patch:
@@ -58,7 +58,7 @@ public EntryHolder(final View view) {
         _refresher = new UiRefresher(new UiRefresher.Listener() {
             @Override
             public void onRefresh() {
-                if (_hidden) {
+                if (!_hidden) {
                     refreshCode();
                 }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -205,11 +205,12 @@ public void onEntryChange(VaultEntry entry) {
     public void onDeselect(VaultEntry entry) { _listener.onDeselect(entry); }
 
     @Override
-    public void onPeriodUniformityChanged(boolean isUniform) {
+    public void onPeriodUniformityChanged(boolean isUniform, int period) {
         setShowProgress(isUniform);
         if (_showProgress) {
+            _refresher.stop();
             _progressBar.setVisibility(View.VISIBLE);
-            _progressBar.setPeriod(_adapter.getUniformPeriod());
+            _progressBar.setPeriod(period);
             _refresher.start();
         } else {
             _progressBar.setVisibility(View.GONE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryHolder.java
Patch:
@@ -58,7 +58,7 @@ public EntryHolder(final View view) {
         _refresher = new UiRefresher(new UiRefresher.Listener() {
             @Override
             public void onRefresh() {
-                if (_hidden) {
+                if (!_hidden) {
                     refreshCode();
                 }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -205,11 +205,12 @@ public void onEntryChange(VaultEntry entry) {
     public void onDeselect(VaultEntry entry) { _listener.onDeselect(entry); }
 
     @Override
-    public void onPeriodUniformityChanged(boolean isUniform) {
+    public void onPeriodUniformityChanged(boolean isUniform, int period) {
         setShowProgress(isUniform);
         if (_showProgress) {
+            _refresher.stop();
             _progressBar.setVisibility(View.VISIBLE);
-            _progressBar.setPeriod(_adapter.getUniformPeriod());
+            _progressBar.setPeriod(period);
             _refresher.start();
         } else {
             _progressBar.setVisibility(View.GONE);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -729,7 +729,7 @@ public void onLocked() {
         super.onLocked();
     }
 
-    private void copyEntryCode(DatabaseEntry entry) {
+    private void copyEntryCode(VaultEntry entry) {
         ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
         ClipData clip = ClipData.newPlainText("text/plain", entry.getInfo().getOtp());
         clipboard.setPrimaryClip(clip);

File: app/src/main/java/com/beemdevelopment/aegis/ui/tasks/SlotListTask.java
Patch:
@@ -1,6 +1,5 @@
 package com.beemdevelopment.aegis.ui.tasks;
 
-import android.app.ProgressDialog;
 import android.content.Context;
 
 import com.beemdevelopment.aegis.R;
@@ -72,8 +71,7 @@ private Result decryptPasswordSlot(PasswordSlot slot, char[] password)
                 throw e;
             }
 
-            ProgressDialog dialog = getDialog();
-            dialog.setMessage(dialog.getContext().getString(R.string.unlocking_vault_repair));
+            publishProgress(getDialog().getContext().getString(R.string.unlocking_vault_repair));
 
             // try to decrypt the password slot with the old key
             SecretKey oldKey = slot.deriveKey(oldPasswordBytes);

File: app/src/main/java/com/beemdevelopment/aegis/ui/tasks/SlotListTask.java
Patch:
@@ -1,6 +1,5 @@
 package com.beemdevelopment.aegis.ui.tasks;
 
-import android.app.ProgressDialog;
 import android.content.Context;
 
 import com.beemdevelopment.aegis.R;
@@ -72,8 +71,7 @@ private Result decryptPasswordSlot(PasswordSlot slot, char[] password)
                 throw e;
             }
 
-            ProgressDialog dialog = getDialog();
-            dialog.setMessage(dialog.getContext().getString(R.string.unlocking_vault_repair));
+            publishProgress(getDialog().getContext().getString(R.string.unlocking_vault_repair));
 
             // try to decrypt the password slot with the old key
             SecretKey oldKey = slot.deriveKey(oldPasswordBytes);

File: app/src/main/java/com/beemdevelopment/aegis/db/slots/Slot.java
Patch:
@@ -28,7 +28,7 @@
 public abstract class Slot extends UUIDMap.Value {
     public final static byte TYPE_RAW = 0x00;
     public final static byte TYPE_DERIVED = 0x01;
-    public final static byte TYPE_FINGERPRINT = 0x02;
+    public final static byte TYPE_BIOMETRIC = 0x02;
 
     private byte[] _encryptedMasterKey;
     private CryptParameters _encryptedMasterKeyParams;
@@ -138,8 +138,8 @@ public static Slot fromJson(JSONObject obj) throws SlotException {
                     boolean repaired = obj.optBoolean("repaired", false);
                     slot = new PasswordSlot(uuid, key, keyParams, scryptParams, repaired);
                     break;
-                case Slot.TYPE_FINGERPRINT:
-                    slot = new FingerprintSlot(uuid, key, keyParams);
+                case Slot.TYPE_BIOMETRIC:
+                    slot = new BiometricSlot(uuid, key, keyParams);
                     break;
                 default:
                     throw new SlotException("unrecognized slot type");

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -38,6 +38,7 @@ public abstract class DatabaseImporter {
         _importers.put("FreeOTP+", FreeOtpPlusImporter.class);
         _importers.put("Google Authenticator", GoogleAuthImporter.class);
         _importers.put("Steam", SteamImporter.class);
+        _importers.put("WinAuth", WinAuthImporter.class);
 
         _appImporters = new LinkedHashMap<>();
         _appImporters.put("Authy", AuthyImporter.class);

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -40,7 +40,6 @@
 import com.beemdevelopment.aegis.ui.models.ImportEntry;
 import com.beemdevelopment.aegis.ui.preferences.SwitchPreference;
 import com.beemdevelopment.aegis.util.UUIDMap;
-import com.takisoft.preferencex.PreferenceFragmentCompat;
 import com.topjohnwu.superuser.Shell;
 import com.topjohnwu.superuser.io.SuFile;
 import com.topjohnwu.superuser.io.SuFileInputStream;
@@ -59,6 +58,7 @@
 
 import androidx.appcompat.app.AlertDialog;
 import androidx.preference.Preference;
+import androidx.preference.PreferenceFragmentCompat;
 
 public class PreferencesFragment extends PreferenceFragmentCompat {
     // activity request codes
@@ -88,7 +88,7 @@ public class PreferencesFragment extends PreferenceFragmentCompat {
     private Preference _groupsPreference;
 
     @Override
-    public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
+    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         addPreferencesFromResource(R.xml.preferences);
 
         AegisApplication app = (AegisApplication) getActivity().getApplication();

File: app/src/main/java/com/beemdevelopment/aegis/Preferences.java
Patch:
@@ -27,7 +27,7 @@ public boolean isSecureScreenEnabled() {
     }
 
     public boolean isAccountNameVisible() {
-        return _prefs.getBoolean("pref_account_name", false);
+        return _prefs.getBoolean("pref_account_name", true);
     }
 
     public boolean isIntroDone() {

File: app/src/main/java/com/beemdevelopment/aegis/Preferences.java
Patch:
@@ -27,7 +27,7 @@ public boolean isSecureScreenEnabled() {
     }
 
     public boolean isAccountNameVisible() {
-        return _prefs.getBoolean("pref_account_name", false);
+        return _prefs.getBoolean("pref_account_name", true);
     }
 
     public boolean isIntroDone() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/IntroActivity.java
Patch:
@@ -65,7 +65,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         SliderPage homeSliderPage = new SliderPage();
         homeSliderPage.setTitle(getString(R.string.welcome));
-        homeSliderPage.setImageDrawable(R.drawable.icon_foreground_white);
+        homeSliderPage.setImageDrawable(R.drawable.app_icon);
         homeSliderPage.setTitleColor(getResources().getColor(R.color.primary_text_dark));
         homeSliderPage.setDescription(getString(R.string.app_description));
         homeSliderPage.setDescColor(getResources().getColor(R.color.primary_text_dark));
@@ -83,7 +83,7 @@ protected void onCreate(Bundle savedInstanceState) {
         SliderPage endSliderPage = new SliderPage();
         endSliderPage.setTitle(getString(R.string.setup_completed));
         endSliderPage.setDescription(getString(R.string.setup_completed_description));
-        endSliderPage.setImageDrawable(R.drawable.icon_foreground_white);
+        endSliderPage.setImageDrawable(R.drawable.app_icon);
         endSliderPage.setBgColor(getResources().getColor(R.color.colorSecondary));
         _endSlide = AppIntroFragment.newInstance(endSliderPage);
         addSlide(_endSlide);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -227,9 +227,7 @@ private void onPreferencesResult(int resultCode, Intent data) {
 
     private void startEditProfileActivity(int requestCode, DatabaseEntry entry, boolean isNew) {
         Intent intent = new Intent(this, EditEntryActivity.class);
-        if (entry != null) {
-            intent.putExtra("entry", entry);
-        }
+        intent.putExtra("entry", entry != null ? entry : DatabaseEntry.getDefault());
         intent.putExtra("isNew", isNew);
         intent.putExtra("selectedGroup", _selectedGroup);
         intent.putExtra("groups", new ArrayList<>(_db.getGroups()));

File: app/src/main/java/com/beemdevelopment/aegis/ui/IntroActivity.java
Patch:
@@ -65,7 +65,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         SliderPage homeSliderPage = new SliderPage();
         homeSliderPage.setTitle(getString(R.string.welcome));
-        homeSliderPage.setImageDrawable(R.drawable.icon_foreground_white);
+        homeSliderPage.setImageDrawable(R.drawable.app_icon);
         homeSliderPage.setTitleColor(getResources().getColor(R.color.primary_text_dark));
         homeSliderPage.setDescription(getString(R.string.app_description));
         homeSliderPage.setDescColor(getResources().getColor(R.color.primary_text_dark));
@@ -83,7 +83,7 @@ protected void onCreate(Bundle savedInstanceState) {
         SliderPage endSliderPage = new SliderPage();
         endSliderPage.setTitle(getString(R.string.setup_completed));
         endSliderPage.setDescription(getString(R.string.setup_completed_description));
-        endSliderPage.setImageDrawable(R.drawable.icon_foreground_white);
+        endSliderPage.setImageDrawable(R.drawable.app_icon);
         endSliderPage.setBgColor(getResources().getColor(R.color.colorSecondary));
         _endSlide = AppIntroFragment.newInstance(endSliderPage);
         addSlide(_endSlide);

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -14,6 +14,7 @@
 
 import com.beemdevelopment.aegis.AegisApplication;
 import com.beemdevelopment.aegis.BuildConfig;
+import com.beemdevelopment.aegis.CancelAction;
 import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.Theme;
 import com.beemdevelopment.aegis.ViewMode;
@@ -470,6 +471,7 @@ private void importDatabase(DatabaseImporter importer, DatabaseImporter.FileRead
 
                     Intent intent = new Intent(getActivity(), AuthActivity.class);
                     intent.putExtra("slots", ((AegisImporter.EncryptedState) state).getSlots());
+                    intent.putExtra("cancelAction", CancelAction.CLOSE);
                     startActivityForResult(intent, CODE_IMPORT_DECRYPT);
                 } else {
                     state.decrypt(getActivity(), new DatabaseImporter.DecryptListener() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -14,6 +14,7 @@
 
 import com.beemdevelopment.aegis.AegisApplication;
 import com.beemdevelopment.aegis.BuildConfig;
+import com.beemdevelopment.aegis.CancelAction;
 import com.beemdevelopment.aegis.R;
 import com.beemdevelopment.aegis.Theme;
 import com.beemdevelopment.aegis.ViewMode;
@@ -468,6 +469,7 @@ private void importDatabase(DatabaseImporter importer, DatabaseImporter.FileRead
 
                     Intent intent = new Intent(getActivity(), AuthActivity.class);
                     intent.putExtra("slots", ((AegisImporter.EncryptedState) state).getSlots());
+                    intent.putExtra("cancelAction", CancelAction.CLOSE);
                     startActivityForResult(intent, CODE_IMPORT_DECRYPT);
                 } else {
                     state.decrypt(getActivity(), new DatabaseImporter.DecryptListener() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/Dialogs.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.hardware.fingerprint.FingerprintManager;
+import android.os.Build;
 import android.text.Editable;
 import android.text.InputType;
 import android.text.TextWatcher;
@@ -35,6 +36,7 @@
 import javax.crypto.Cipher;
 import javax.crypto.SecretKey;
 
+import androidx.annotation.RequiresApi;
 import androidx.annotation.StringRes;
 import androidx.appcompat.app.AlertDialog;
 
@@ -178,6 +180,7 @@ public static void showNumberPickerDialog(Activity activity, NumberInputListener
         showSecureDialog(dialog);
     }
 
+    @RequiresApi(api = Build.VERSION_CODES.M)
     public static void showFingerprintDialog(Activity activity, Dialogs.SlotListener listener) {
         View view = activity.getLayoutInflater().inflate(R.layout.dialog_fingerprint, null);
         TextView textFingerprint = view.findViewById(R.id.text_fingerprint);

File: app/src/main/java/com/beemdevelopment/aegis/ui/slides/CustomAuthenticationSlide.java
Patch:
@@ -1,5 +1,6 @@
 package com.beemdevelopment.aegis.ui.slides;
 
+import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.hardware.fingerprint.FingerprintManager;
 import android.os.Bundle;
@@ -34,8 +35,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         onCheckedChanged(_buttonGroup, _buttonGroup.getCheckedRadioButtonId());
 
         // only enable the fingerprint option if the api version is new enough, permission is granted and a scanner is found
-        FingerprintManager manager = FingerprintHelper.getManager(getContext());
-        if (manager != null) {
+        if (FingerprintHelper.isSupported() && FingerprintHelper.isAvailable(getContext())) {
             RadioButton button = view.findViewById(R.id.rb_fingerprint);
             TextView text = view.findViewById(R.id.text_rb_fingerprint);
             button.setEnabled(true);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -231,9 +231,7 @@ private void onPreferencesResult(int resultCode, Intent data) {
 
     private void startEditProfileActivity(int requestCode, DatabaseEntry entry, boolean isNew) {
         Intent intent = new Intent(this, EditEntryActivity.class);
-        if (entry != null) {
-            intent.putExtra("entry", entry);
-        }
+        intent.putExtra("entry", entry != null ? entry : DatabaseEntry.getDefault());
         intent.putExtra("isNew", isNew);
         intent.putExtra("selectedGroup", _selectedGroup);
         intent.putExtra("groups", new ArrayList<>(_db.getGroups()));

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.beemdevelopment.aegis.db.DatabaseEntry;
 import com.beemdevelopment.aegis.util.ByteInputStream;
+import com.beemdevelopment.aegis.util.UUIDMap;
 import com.topjohnwu.superuser.io.SuFile;
 import com.topjohnwu.superuser.io.SuFileInputStream;
 
@@ -115,7 +116,7 @@ public Result convert() throws DatabaseImporterException {
     }
 
     public static class Result {
-        private List<DatabaseEntry> _entries = new ArrayList<>();
+        private UUIDMap<DatabaseEntry> _entries = new UUIDMap<>();
         private List<DatabaseImporterEntryException> _errors = new ArrayList<>();
 
         public void addEntry(DatabaseEntry entry) {
@@ -126,7 +127,7 @@ public void addError(DatabaseImporterEntryException error) {
             _errors.add(error);
         }
 
-        public List<DatabaseEntry> getEntries() {
+        public UUIDMap<DatabaseEntry> getEntries() {
             return _entries;
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryListView.java
Patch:
@@ -225,8 +225,8 @@ public void clearEntries() {
         _adapter.clearEntries();
     }
 
-    public void replaceEntry(DatabaseEntry entry) {
-        _adapter.replaceEntry(entry);
+    public void replaceEntry(DatabaseEntry oldEntry, DatabaseEntry newEntry) {
+        _adapter.replaceEntry(oldEntry, newEntry);
     }
 
     public void runEntriesAnimation() {

File: app/src/test/java/com/beemdevelopment/aegis/HOTPTest.java
Patch:
@@ -3,12 +3,12 @@
 import com.beemdevelopment.aegis.crypto.otp.HOTP;
 import com.beemdevelopment.aegis.crypto.otp.OTP;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.security.InvalidKeyException;
 import java.security.NoSuchAlgorithmException;
 
-import static org.junit.Assert.*;
+import static org.junit.jupiter.api.Assertions.*;
 
 public class HOTPTest {
     // https://tools.ietf.org/html/rfc4226#page-32

File: app/src/test/java/com/beemdevelopment/aegis/SCryptTest.java
Patch:
@@ -5,13 +5,13 @@
 import com.beemdevelopment.aegis.encoding.Hex;
 import com.beemdevelopment.aegis.encoding.HexException;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.util.Arrays;
 
 import javax.crypto.SecretKey;
 
-import static org.junit.Assert.*;
+import static org.junit.jupiter.api.Assertions.*;
 
 public class SCryptTest {
     @Test

File: app/src/test/java/com/beemdevelopment/aegis/TOTPTest.java
Patch:
@@ -4,12 +4,12 @@
 import com.beemdevelopment.aegis.crypto.otp.TOTP;
 import com.beemdevelopment.aegis.encoding.HexException;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import java.security.InvalidKeyException;
 import java.security.NoSuchAlgorithmException;
 
-import static org.junit.Assert.*;
+import static org.junit.jupiter.api.Assertions.*;
 
 public class TOTPTest {
     private static class Vector {

File: app/src/main/java/com/beemdevelopment/aegis/Preferences.java
Patch:
@@ -16,7 +16,8 @@ public boolean isTapToRevealEnabled() {
     }
 
     public boolean isSecureScreenEnabled() {
-        return _prefs.getBoolean("pref_secure_screen", true);
+        // screen security should be enabled by default, but not for debug builds
+        return _prefs.getBoolean("pref_secure_screen", !BuildConfig.DEBUG);
     }
 
     public boolean isAccountNameVisible() {

File: app/src/main/java/com/beemdevelopment/aegis/Preferences.java
Patch:
@@ -16,7 +16,8 @@ public boolean isTapToRevealEnabled() {
     }
 
     public boolean isSecureScreenEnabled() {
-        return _prefs.getBoolean("pref_secure_screen", true);
+        // screen security should be enabled by default, but not for debug builds
+        return _prefs.getBoolean("pref_secure_screen", !BuildConfig.DEBUG);
     }
 
     public boolean isAccountNameVisible() {

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/ImportEntryHolder.java
Patch:
@@ -31,9 +31,8 @@ public void setData(ImportEntry entry) {
         _entry = entry;
 
         Context context = itemView.getContext();
-        DatabaseEntry dbEntry = entry.getDatabaseEntry();
-        _issuer.setText(!dbEntry.getIssuer().isEmpty() ? dbEntry.getIssuer() : context.getString(R.string.unknown_issuer));
-        _accountName.setText(!dbEntry.getName().isEmpty() ? dbEntry.getName() : context.getString(R.string.unknown_account_name));
+        _issuer.setText(!entry.getIssuer().isEmpty() ? entry.getIssuer() : context.getString(R.string.unknown_issuer));
+        _accountName.setText(!entry.getName().isEmpty() ? entry.getName() : context.getString(R.string.unknown_account_name));
         _checkbox.setChecked(entry.isChecked());
     }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -148,7 +148,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         }
 
         // don't process any activity results if the vault is locked
-        if (requestCode != CODE_DECRYPT && _db.isLocked()) {
+        if (requestCode != CODE_DECRYPT && requestCode != CODE_DO_INTRO && _db.isLocked()) {
             return;
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/importers/DatabaseImporter.java
Patch:
@@ -31,12 +31,14 @@ public abstract class DatabaseImporter {
         // note: keep these lists sorted alphabetically
         _importers = new LinkedHashMap<>();
         _importers.put("Aegis", AegisImporter.class);
+        _importers.put("Authy", AuthyImporter.class);
         _importers.put("andOTP", AndOtpImporter.class);
         _importers.put("FreeOTP", FreeOtpImporter.class);
         _importers.put("Google Authenticator", GoogleAuthImporter.class);
         _importers.put("Steam", SteamImporter.class);
 
         _appImporters = new LinkedHashMap<>();
+        _appImporters.put("Authy", AuthyImporter.class);
         _appImporters.put("FreeOTP", FreeOtpImporter.class);
         _appImporters.put("Google Authenticator", GoogleAuthImporter.class);
         _appImporters.put("Steam", SteamImporter.class);

File: app/src/main/java/com/beemdevelopment/aegis/ui/MainActivity.java
Patch:
@@ -148,7 +148,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         }
 
         // don't process any activity results if the vault is locked
-        if (requestCode != CODE_DECRYPT && _db.isLocked()) {
+        if (requestCode != CODE_DECRYPT && requestCode != CODE_DO_INTRO && _db.isLocked()) {
             return;
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/db/slots/Slot.java
Patch:
@@ -129,7 +129,8 @@ public static Slot fromJson(JSONObject obj) throws SlotException {
                         obj.getInt("p"),
                         Hex.decode(obj.getString("salt"))
                     );
-                    slot = new PasswordSlot(uuid, key, keyParams, scryptParams);
+                    boolean repaired = obj.optBoolean("repaired", false);
+                    slot = new PasswordSlot(uuid, key, keyParams, scryptParams, repaired);
                     break;
                 case Slot.TYPE_FINGERPRINT:
                     slot = new FingerprintSlot(uuid, key, keyParams);

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -23,7 +23,7 @@ protected void onCreate(Bundle savedInstanceState) {
         _app = (AegisApplication) getApplication();
 
         // set the theme and create the activity
-        setPreferredTheme(Theme.fromInteger(getPreferences().getCurrentTheme()));
+        setPreferredTheme(getPreferences().getCurrentTheme());
         super.onCreate(savedInstanceState);
 
         // if the app was killed, relaunch MainActivity and close everything else

File: app/src/main/java/com/beemdevelopment/aegis/ui/AegisActivity.java
Patch:
@@ -38,7 +38,7 @@ protected void onCreate(Bundle savedInstanceState) {
         }
 
         // set the theme
-        setPreferredTheme(Theme.fromInteger(getPreferences().getCurrentTheme()));
+        setPreferredTheme(getPreferences().getCurrentTheme());
 
         // apply a dirty hack to make progress bars work even if animations are disabled
         setGlobalAnimationDurationScale();

File: app/src/main/java/com/beemdevelopment/aegis/ui/SelectEntriesActivity.java
Patch:
@@ -97,7 +97,7 @@ private void showDetailedErrorDialog(List<DatabaseImporterEntryException> errors
                     ClipboardManager clipboard = (ClipboardManager) this.getSystemService(Context.CLIPBOARD_SERVICE);
                     ClipData clip = ClipData.newPlainText("text/plain", message);
                     clipboard.setPrimaryClip(clip);
-                    Toast.makeText(this, getString(R.string.errors_copied), Toast.LENGTH_SHORT).show();
+                    Toast.makeText(this, R.string.errors_copied, Toast.LENGTH_SHORT).show();
                 })
                 .create());
     }

File: app/src/main/java/com/beemdevelopment/aegis/otp/GoogleAuthInfo.java
Patch:
@@ -58,7 +58,7 @@ public static GoogleAuthInfo parseUri(String s) throws GoogleAuthInfoException {
 
     public static GoogleAuthInfo parseUri(Uri uri) throws GoogleAuthInfoException {
         String scheme = uri.getScheme();
-        if (scheme == null || scheme.equals("otpauth")) {
+        if (scheme == null || !scheme.equals("otpauth")) {
             throw new GoogleAuthInfoException("unsupported protocol");
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/AegisApplication.java
Patch:
@@ -66,7 +66,7 @@ private void initAppShortcuts() {
     }
 
     public boolean isAutoLockEnabled() {
-        return _prefs.isAutoLockEnabled() && _manager.isEncryptionEnabled() && !_manager.isLocked();
+        return _prefs.isAutoLockEnabled() && _manager.isLoaded() && _manager.isEncryptionEnabled() && !_manager.isLocked();
     }
 
     private class ScreenOffReceiver extends BroadcastReceiver {

File: app/src/main/java/com/beemdevelopment/aegis/otp/GoogleAuthInfo.java
Patch:
@@ -57,7 +57,8 @@ public static GoogleAuthInfo parseUri(String s) throws GoogleAuthInfoException {
     }
 
     public static GoogleAuthInfo parseUri(Uri uri) throws GoogleAuthInfoException {
-        if (!uri.getScheme().equals("otpauth")) {
+        String scheme = uri.getScheme();
+        if (scheme == null || scheme.equals("otpauth")) {
             throw new GoogleAuthInfoException("unsupported protocol");
         }
 

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -148,8 +148,8 @@ public boolean onPreferenceClick(Preference preference) {
 
                             dialog.dismiss();
 
+                            viewModePreference.setSummary("Selected: " + ViewMode.getViewModeName(i));
                             _result.putExtra("needsRecreate", true);
-                            getActivity().recreate();
                         })
                         .setPositiveButton(android.R.string.ok, null)
                         .create());

File: app/src/main/java/com/beemdevelopment/aegis/ui/PreferencesFragment.java
Patch:
@@ -106,6 +106,8 @@ public boolean onPreferenceClick(Preference preference) {
                             int i = ((AlertDialog) dialog).getListView().getCheckedItemPosition();
                             app.getPreferences().setCurrentTheme(Theme.fromInteger(i));
 
+                            dialog.dismiss();
+
                             _result.putExtra("needsRecreate", true);
                             getActivity().recreate();
                         })

File: app/src/main/java/com/beemdevelopment/aegis/ui/views/EntryHolder.java
Patch:
@@ -119,7 +119,6 @@ public void stopRefreshLoop() {
 
     public void refreshCode() {
         updateCode();
-        _codeIsRevealed = true;
     }
 
     public void revealCode() {

File: app/src/main/java/me/impy/aegis/ui/views/EntryListView.java
Patch:
@@ -59,7 +59,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         int resId = R.anim.layout_animation_fall_down;
         LayoutAnimationController animation = AnimationUtils.loadLayoutAnimation(getContext(), resId);
         _rvKeyProfiles.setLayoutAnimation(animation);
-        
+
         _refresher = new UiRefresher(new UiRefresher.Listener() {
             @Override
             public void onRefresh() {

File: app/src/main/java/me/impy/aegis/ui/Dialogs.java
Patch:
@@ -142,7 +142,7 @@ public static void showCreateNewGroupDialog(Activity activity, TextInputListener
         EditText groupName = view.findViewById(R.id.text_groupname);
 
         AlertDialog dialog = new AlertDialog.Builder(activity)
-                .setTitle(R.string.set_password)
+                .setTitle(R.string.set_group)
                 .setView(view)
                 .setPositiveButton(android.R.string.ok, (dialog1, which) ->
                         listener.onTextInputResult(groupName.getText().toString()))

File: app/src/main/java/me/impy/aegis/ui/MainActivity.java
Patch:
@@ -379,7 +379,9 @@ public boolean onCreateOptionsMenu(Menu menu) {
         _menu = menu;
         getMenuInflater().inflate(R.menu.menu_main, menu);
         updateLockIcon();
-        updateGroupFilterMenu();
+        if (_loaded) {
+            updateGroupFilterMenu();
+        }
         return true;
     }
 

File: app/src/main/java/me/impy/aegis/ui/IntroActivity.java
Patch:
@@ -83,6 +83,7 @@ protected void onCreate(Bundle savedInstanceState) {
         SliderPage endSliderPage = new SliderPage();
         endSliderPage.setTitle(getString(R.string.setup_completed));
         endSliderPage.setDescription(getString(R.string.setup_completed_description));
+        endSliderPage.setImageDrawable(R.drawable.icon_foreground_white);
         endSliderPage.setBgColor(getResources().getColor(R.color.colorSecondary));
         _endSlide = AppIntroFragment.newInstance(endSliderPage);
         addSlide(_endSlide);

File: app/src/main/java/me/impy/aegis/ui/EditEntryActivity.java
Patch:
@@ -52,7 +52,6 @@
 import me.impy.aegis.otp.OtpInfo;
 import me.impy.aegis.otp.OtpInfoException;
 import me.impy.aegis.otp.TotpInfo;
-import me.impy.aegis.ui.dialogs.Dialogs;
 
 public class EditEntryActivity extends AegisActivity {
     private boolean _isNew = false;
@@ -457,11 +456,11 @@ private DatabaseEntry parseEntry() throws ParseException {
     }
 
     private void onSaveError(String msg) {
-        new AlertDialog.Builder(this)
+        Dialogs.showSecureDialog(new AlertDialog.Builder(this)
                 .setTitle(getString(R.string.saving_profile_error))
                 .setMessage(msg)
                 .setPositiveButton(android.R.string.ok, null)
-                .show();
+                .create());
     }
 
     private boolean onSave() {

File: app/src/main/java/me/impy/aegis/ui/MainActivity.java
Patch:
@@ -25,7 +25,6 @@
 import me.impy.aegis.db.DatabaseEntry;
 import me.impy.aegis.db.DatabaseManager;
 import me.impy.aegis.helpers.PermissionHelper;
-import me.impy.aegis.ui.dialogs.Dialogs;
 import me.impy.aegis.ui.views.EntryListView;
 
 public class MainActivity extends AegisActivity implements EntryListView.Listener {

File: app/src/main/java/me/impy/aegis/ui/SlotManagerActivity.java
Patch:
@@ -23,7 +23,6 @@
 import me.impy.aegis.db.slots.SlotList;
 import me.impy.aegis.db.slots.SlotException;
 import me.impy.aegis.helpers.FingerprintHelper;
-import me.impy.aegis.ui.dialogs.Dialogs;
 import me.impy.aegis.ui.views.SlotAdapter;
 
 public class SlotManagerActivity extends AegisActivity implements SlotAdapter.Listener, Dialogs.SlotListener {
@@ -155,7 +154,7 @@ public void onRemoveSlot(Slot slot) {
             return;
         }
 
-        new AlertDialog.Builder(this)
+        Dialogs.showSecureDialog(new AlertDialog.Builder(this)
                 .setTitle(R.string.remove_slot)
                 .setMessage(R.string.remove_slot_description)
                 .setPositiveButton(android.R.string.yes, (dialog, whichButton) -> {
@@ -165,7 +164,7 @@ public void onRemoveSlot(Slot slot) {
                     updateFingerprintButton();
                 })
                 .setNegativeButton(android.R.string.no, null)
-                .show();
+                .create());
     }
 
     @Override

File: app/src/main/java/me/impy/aegis/ui/tasks/ProgressDialogTask.java
Patch:
@@ -5,6 +5,7 @@
 import android.os.AsyncTask;
 import android.os.Process;
 import androidx.annotation.CallSuper;
+import me.impy.aegis.ui.Dialogs;
 
 public abstract class ProgressDialogTask<Params, Result> extends AsyncTask<Params, Void, Result> {
     private ProgressDialog _dialog;
@@ -13,6 +14,7 @@ public ProgressDialogTask(Context context, String message) {
         _dialog = new ProgressDialog(context);
         _dialog.setCancelable(false);
         _dialog.setMessage(message);
+        Dialogs.secureDialog(_dialog);
     }
 
     @CallSuper

File: app/src/main/java/me/impy/aegis/ui/ScannerActivity.java
Patch:
@@ -108,8 +108,7 @@ public void onPause() {
     public void handleResult(Result rawResult) {
         try {
             // parse google auth uri
-            Uri uri = Uri.parse(rawResult.getText());
-            GoogleAuthInfo info = GoogleAuthInfo.parseUri(uri);
+            GoogleAuthInfo info = GoogleAuthInfo.parseUri(rawResult.getText());
             DatabaseEntry entry = new DatabaseEntry(info);
 
             Intent intent = new Intent();

File: app/src/main/java/me/impy/aegis/ui/IntroActivity.java
Patch:
@@ -65,6 +65,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         SliderPage homeSliderPage = new SliderPage();
         homeSliderPage.setTitle(getString(R.string.welcome));
+        homeSliderPage.setImageDrawable(R.drawable.icon_foreground_white);
         homeSliderPage.setTitleColor(getResources().getColor(R.color.primary_text_dark));
         homeSliderPage.setDescription(getString(R.string.app_description));
         homeSliderPage.setDescColor(getResources().getColor(R.color.primary_text_dark));

File: app/src/main/java/me/impy/aegis/ui/PreferencesFragment.java
Patch:
@@ -13,6 +13,8 @@
 import android.view.WindowManager;
 import android.widget.Toast;
 
+import com.takisoft.preferencex.PreferenceFragmentCompat;
+
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
@@ -22,7 +24,6 @@
 
 import javax.crypto.Cipher;
 
-import androidx.preference.PreferenceFragmentCompat;
 import me.impy.aegis.AegisApplication;
 import me.impy.aegis.R;
 import me.impy.aegis.crypto.MasterKey;
@@ -62,7 +63,7 @@ public class PreferencesFragment extends PreferenceFragmentCompat implements Pas
     private Preference _slotsPreference;
 
     @Override
-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
+    public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
         addPreferencesFromResource(R.xml.preferences);
 
         AegisApplication app = (AegisApplication) getActivity().getApplication();

File: app/src/main/java/me/impy/aegis/ui/PreferencesFragment.java
Patch:
@@ -9,7 +9,6 @@
 import android.os.Bundle;
 import androidx.appcompat.app.AlertDialog;
 import androidx.preference.Preference;
-import com.takisoft.fix.support.v7.preference.PreferenceFragmentCompat;
 import android.view.Window;
 import android.view.WindowManager;
 import android.widget.Toast;
@@ -23,6 +22,7 @@
 
 import javax.crypto.Cipher;
 
+import androidx.preference.PreferenceFragmentCompat;
 import me.impy.aegis.AegisApplication;
 import me.impy.aegis.R;
 import me.impy.aegis.crypto.MasterKey;
@@ -62,7 +62,7 @@ public class PreferencesFragment extends PreferenceFragmentCompat implements Pas
     private Preference _slotsPreference;
 
     @Override
-    public void onCreatePreferencesFix(Bundle savedInstanceState, String rootKey) {
+    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
         addPreferencesFromResource(R.xml.preferences);
 
         AegisApplication app = (AegisApplication) getActivity().getApplication();

File: app/src/main/java/me/impy/aegis/ui/SlotManagerActivity.java
Patch:
@@ -72,11 +72,11 @@ private void updateFingerprintButton() {
         // only show the fingerprint option if we can get an instance of the fingerprint manager
         // and if none of the slots in the collection has a matching alias in the keystore
         int visibility = View.VISIBLE;
-        if (FingerprintHelper.isSupported()) {
+        if (FingerprintHelper.getManager(this) != null) {
             try {
                 KeyStoreHandle keyStore = new KeyStoreHandle();
                 for (FingerprintSlot slot : _slots.findAll(FingerprintSlot.class)) {
-                    if (keyStore.containsKey(slot.getUUID().toString()) && FingerprintHelper.getManager(this) != null) {
+                    if (keyStore.containsKey(slot.getUUID().toString())) {
                         visibility = View.GONE;
                         break;
                     }

File: app/src/main/java/me/impy/aegis/Preferences.java
Patch:
@@ -19,8 +19,8 @@ public boolean isSecureScreenEnabled() {
         return _prefs.getBoolean("pref_secure_screen", true);
     }
 
-    public boolean isIssuerVisible() {
-        return _prefs.getBoolean("pref_issuer", false);
+    public boolean isAccountNameVisible() {
+        return _prefs.getBoolean("pref_account_name", false);
     }
 
     public boolean isIntroDone() {

File: app/src/main/java/me/impy/aegis/ui/MainActivity.java
Patch:
@@ -62,7 +62,7 @@ protected void onCreate(Bundle savedInstanceState) {
         // set up the entry view
         _entryListView = (EntryListView) getSupportFragmentManager().findFragmentById(R.id.key_profiles);
         _entryListView.setListener(this);
-        _entryListView.setShowIssuer(getPreferences().isIssuerVisible());
+        _entryListView.setShowAccountName(getPreferences().isAccountNameVisible());
 
         // set up the floating action button
         _fabMenu = findViewById(R.id.fab);
@@ -153,8 +153,8 @@ private void onPreferencesResult(int resultCode, Intent data) {
         if (data.getBooleanExtra("needsRecreate", false)) {
             recreate();
         } else if (data.getBooleanExtra("needsRefresh", false)) {
-            boolean showIssuer = getPreferences().isIssuerVisible();
-            _entryListView.setShowIssuer(showIssuer);
+            boolean showAccountName = getPreferences().isAccountNameVisible();
+            _entryListView.setShowAccountName(showAccountName);
             _entryListView.refresh(true);
         }
     }

File: app/src/main/java/me/impy/aegis/ui/PreferencesFragment.java
Patch:
@@ -111,7 +111,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
         });
         timeoutPreference.getOnPreferenceChangeListener().onPreferenceChange(timeoutPreference, timeoutPreference.getText());*/
 
-        Preference issuerPreference = findPreference("pref_issuer");
+        Preference issuerPreference = findPreference("pref_account_name");
         issuerPreference.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
             @Override
             public boolean onPreferenceChange(Preference preference, Object newValue) {

File: app/src/main/java/me/impy/aegis/ui/views/EntryListView.java
Patch:
@@ -129,8 +129,8 @@ public void onEntryChange(DatabaseEntry entry) {
         _listener.onEntryChange(entry);
     }
 
-    public void setShowIssuer(boolean showIssuer) {
-        _adapter.setShowIssuer(showIssuer);
+    public void setShowAccountName(boolean showAccountName) {
+        _adapter.setShowAccountName(showAccountName);
     }
 
     public void addEntry(DatabaseEntry entry) {

File: app/src/main/java/me/impy/aegis/ui/EditEntryActivity.java
Patch:
@@ -310,7 +310,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     finish(true);
                 });
                 break;
-            case R.id.action_default_image:
+            case R.id.action_default_icon:
                 TextDrawable drawable = TextDrawableHelper.generate(_entry.getIssuer(), _entry.getName(), _iconView);
                 _iconView.setImageDrawable(drawable);
                 _hasCustomImage = false;
@@ -328,7 +328,7 @@ public boolean onCreateOptionsMenu(Menu menu) {
             menu.findItem(R.id.action_delete).setVisible(false);
         }
         if (!_hasCustomImage) {
-            menu.findItem(R.id.action_default_image).setVisible(false);
+            menu.findItem(R.id.action_default_icon).setVisible(false);
         }
 
         return true;

File: app/src/main/java/me/impy/aegis/ui/PreferencesFragment.java
Patch:
@@ -142,7 +142,7 @@ public boolean onPreferenceChange(Preference preference, Object newValue) {
                 if (!_db.getFile().isEncrypted()) {
                     PasswordDialogFragment dialog = new PasswordDialogFragment();
                     // TODO: find a less ugly way to obtain the fragment manager
-                    dialog.show(((AppCompatActivity)getActivity()).getSupportFragmentManager(), null);
+                    dialog.show(getActivity().getSupportFragmentManager(), null);
                 } else {
                     new AlertDialog.Builder(getActivity())
                             .setTitle("Disable encryption")

File: app/src/main/java/me/impy/aegis/ui/views/EntryListView.java
Patch:
@@ -131,7 +131,6 @@ public void onEntryChange(DatabaseEntry entry) {
 
     public void setShowIssuer(boolean showIssuer) {
         _adapter.setShowIssuer(showIssuer);
-        _adapter.refresh(true);
     }
 
     public void addEntry(DatabaseEntry entry) {

File: app/src/main/java/me/impy/aegis/importers/AndOtpImporter.java
Patch:
@@ -43,7 +43,7 @@ public List<DatabaseEntry> convert() throws DatabaseImporterException {
             for (int i = 0; i < _obj.length(); i++) {
                 JSONObject obj = _obj.getJSONObject(i);
 
-                String type = obj.getString("type");
+                String type = obj.getString("type").toLowerCase();
                 String algo = obj.getString("algorithm");
                 int digits = obj.getInt("digits");
                 byte[] secret = Base32.decode(obj.getString("secret").toCharArray());

File: app/src/main/java/me/impy/aegis/importers/FreeOtpImporter.java
Patch:
@@ -56,7 +56,7 @@ public List<DatabaseEntry> convert() throws DatabaseImporterException {
                 } else {
                     JSONObject obj = new JSONObject(xmlEntry.Value);
 
-                    String type = obj.getString("type");
+                    String type = obj.getString("type").toLowerCase();
                     String algo = obj.getString("algo");
                     int digits = obj.getInt("digits");
                     byte[] secret = toBytes(obj.getJSONArray("secret"));

File: app/src/main/java/me/impy/aegis/ui/MainActivity.java
Patch:
@@ -327,7 +327,7 @@ protected void onResume() {
         updateLockIcon();
 
         // refresh all codes to prevent showing old ones
-        _entryListView.refresh();
+        _entryListView.refresh(true);
     }
 
     private BottomSheetDialog createBottomSheet(final DatabaseEntry entry) {

File: app/src/main/java/me/impy/aegis/helpers/TextDrawableHelper.java
Patch:
@@ -20,8 +20,8 @@ public static TextDrawable generate(String text, String fallback, View view) {
 
         int color = ColorGenerator.MATERIAL.getColor(text);
         return TextDrawable.builder().beginConfig()
-                .width(view.getWidth())
-                .height(view.getHeight())
+                .width(view.getLayoutParams().width)
+                .height(view.getLayoutParams().height)
                 .endConfig()
                 .buildRect(text.substring(0, 1).toUpperCase(), color);
     }

File: app/src/main/java/me/impy/aegis/ui/EditEntryActivity.java
Patch:
@@ -115,10 +115,10 @@ protected void onCreate(Bundle savedInstanceState) {
 
         // fill the fields with values if possible
         if (_entry != null) {
-            if (_entry.getIcon() != null) {
+            if (_entry.hasIcon()) {
                 byte[] imageBytes = _entry.getIcon();
-                Bitmap image = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);
-                _iconView.setImageBitmap(image);
+                Bitmap bitmap = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);
+                _iconView.setImageBitmap(bitmap);
                 _hasCustomImage = true;
             } else {
                 TextDrawable drawable = TextDrawableHelper.generate(_entry.getIssuer(), _entry.getName(), _iconView);

File: app/src/main/java/me/impy/aegis/ui/MainActivity.java
Patch:
@@ -411,9 +411,7 @@ private void saveDatabase() {
     private void loadEntries() {
         updateLockIcon();
 
-        for (DatabaseEntry entry : _db.getEntries()) {
-            _entryListView.addEntry(entry);
-        }
+        _entryListView.addEntries(_db.getEntries());
     }
 
     private void updateLockIcon() {

File: app/src/main/java/me/impy/aegis/ui/views/EntryHolder.java
Patch:
@@ -76,7 +76,7 @@ public void setData(DatabaseEntry entry, boolean showIssuer, boolean showProgres
             _profileIssuer.setText(" - " + entry.getIssuer());
         }
 
-        if (entry.getIcon() != null) {
+        if (_entry.hasIcon()) {
             byte[] imageBytes = entry.getIcon();
             Bitmap image = BitmapFactory.decodeByteArray(imageBytes, 0, imageBytes.length);
             _profileDrawable.setImageBitmap(image);

File: app/src/main/java/me/impy/aegis/ui/EditProfileActivity.java
Patch:
@@ -181,7 +181,8 @@ private void updateFields() {
         }
         else
         {
-            _iconView.setImageDrawable(_profile.getDrawable(_iconView));
+            TextDrawable drawable = TextDrawableHelper.generate(entry.getInfo().getIssuer(), _iconView);
+            _iconView.setImageDrawable(drawable);
         }
 
         _textName.setText(entry.getName());

File: app/src/main/java/me/impy/aegis/db/slots/Slot.java
Patch:
@@ -44,9 +44,9 @@ public MasterKey getKey(Cipher cipher) throws SlotException, SlotIntegrityExcept
             CryptResult res = CryptoUtils.decrypt(_encryptedMasterKey, cipher, _encryptedMasterKeyParams);
             SecretKey key = new SecretKeySpec(res.getData(), CryptoUtils.CRYPTO_AEAD);
             return new MasterKey(key);
-        } catch (AEADBadTagException e) {
+        } catch (BadPaddingException e) {
             throw new SlotIntegrityException(e);
-        } catch (IOException | BadPaddingException | IllegalBlockSizeException e) {
+        } catch (IOException | IllegalBlockSizeException e) {
             throw new SlotException(e);
         }
     }

File: app/src/main/java/me/impy/aegis/ui/views/EntryHolder.java
Patch:
@@ -64,7 +64,7 @@ public void setData(DatabaseEntry entry, boolean showIssuer, boolean showProgres
             _profileIssuer.setText(" - " + entry.getIssuer());
         }
 
-        TextDrawable drawable = TextDrawableHelper.generate(entry.getName());
+        TextDrawable drawable = TextDrawableHelper.generate(entry.getIssuer(), entry.getName());
         _profileDrawable.setImageDrawable(drawable);
 
         refreshCode();

File: app/src/main/java/me/impy/aegis/ui/IntroActivity.java
Patch:
@@ -146,16 +146,18 @@ public void onDonePressed(Fragment currentFragment) {
             masterKey = MasterKey.generate();
         }
 
-        SlotCollection slots = _databaseFile.getSlots();
+        SlotCollection slots = null;
         if (cryptType != CustomAuthenticationSlide.CRYPT_TYPE_NONE) {
             // encrypt the master key with a key derived from the user's password
             // and add it to the list of slots
             if (_passwordSlot == null || _passwordCipher == null) {
                 throw new RuntimeException();
             }
             try {
+                slots = new SlotCollection();
                 slots.encrypt(_passwordSlot, masterKey, _passwordCipher);
                 slots.add(_passwordSlot);
+                _databaseFile.setSlots(slots);
             } catch (SlotException e) {
                 setException(e);
             }

File: app/src/main/java/me/impy/aegis/ui/AuthActivity.java
Patch:
@@ -107,7 +107,7 @@ protected void setPreferredTheme(boolean darkMode) {
         if (darkMode) {
             setTheme(R.style.AppTheme_Dark);
         } else {
-            setTheme(R.style.AppTheme_Default);
+            setTheme(R.style.AppTheme);
         }
     }
 

File: app/src/main/java/me/impy/aegis/ui/PreferencesActivity.java
Patch:
@@ -21,7 +21,7 @@ protected void setPreferredTheme(boolean darkMode) {
         if (darkMode) {
             setTheme(R.style.AppTheme_Dark);
         } else {
-            setTheme(R.style.AppTheme_Default);
+            setTheme(R.style.AppTheme);
         }
     }
 

File: app/src/main/java/me/impy/aegis/ui/dialogs/Dialogs.java
Patch:
@@ -1,6 +1,6 @@
 package me.impy.aegis.ui.dialogs;
 
-import android.content.Context;
+import android.app.Activity;
 import android.content.DialogInterface;
 import android.support.v7.app.AlertDialog;
 
@@ -9,8 +9,8 @@ private Dialogs() {
 
     }
 
-    public static AlertDialog showDeleteEntryDialog(Context context, DialogInterface.OnClickListener onDelete) {
-        return new AlertDialog.Builder(context)
+    public static AlertDialog showDeleteEntryDialog(Activity activity, DialogInterface.OnClickListener onDelete) {
+        return new AlertDialog.Builder(activity)
                 .setTitle("Delete entry")
                 .setMessage("Are you sure you want to delete this entry?")
                 .setPositiveButton(android.R.string.yes, onDelete)

File: app/src/main/java/me/impy/aegis/ui/EditProfileActivity.java
Patch:
@@ -288,6 +288,7 @@ private boolean onSave() {
             info.setDigits(digits);
             info.setAlgorithm(algo);
             info.setType(type);
+            info.setAccountName(_textName.getText().toString());
         } catch (KeyInfoException e) {
             onError("The entered info is incorrect: " + e.getMessage());
             return false;

File: app/src/main/java/me/impy/aegis/ui/slides/CustomAuthenticationSlide.java
Patch:
@@ -81,6 +81,7 @@ public void onCheckedChanged(RadioGroup radioGroup, int i) {
             default:
                 throw new RuntimeException();
         }
+
         Intent intent = getActivity().getIntent();
         intent.putExtra("cryptType", id);
     }

File: app/src/main/java/me/impy/aegis/importers/AegisImporter.java
Patch:
@@ -19,7 +19,7 @@ public List<DatabaseEntry> convert() throws Exception {
         DatabaseFile file = new DatabaseFile();
         file.deserialize(bytes);
         Database db = new Database();
-        db.deserialize(file.getContent(), false);
+        db.deserialize(file.getContent());
         return db.getKeys();
     }
 

File: app/src/main/java/me/impy/aegis/importers/FreeOTPImporter.java
Patch:
@@ -79,8 +79,7 @@ private static List<DatabaseEntry> parse(XmlPullParser parser)
                 byte[] secret = toBytes(obj.getJSONArray("secret"));
                 key.setSecret(secret);
 
-                DatabaseEntry profile = new DatabaseEntry(null);
-                profile.setInfo(key);
+                DatabaseEntry profile = new DatabaseEntry(key);
                 profiles.add(profile);
             }
         }

File: app/src/main/java/me/impy/aegis/ui/AuthActivity.java
Patch:
@@ -64,7 +64,7 @@ protected void onCreate(Bundle savedInstanceState) {
             try {
                 // find a fingerprint slot with an id that matches an alias in the keystore
                 for (FingerprintSlot slot : _slots.findAll(FingerprintSlot.class)) {
-                    String id = slot.getID();
+                    String id = slot.getUUID().toString();
                     KeyStoreHandle handle = new KeyStoreHandle();
                     if (handle.containsKey(id)) {
                         SecretKey key = handle.getKey(id);

File: app/src/main/java/me/impy/aegis/ui/SlotManagerActivity.java
Patch:
@@ -79,7 +79,7 @@ private void updateFingerprintButton() {
             try {
                 KeyStoreHandle keyStore = new KeyStoreHandle();
                 for (FingerprintSlot slot : _slots.findAll(FingerprintSlot.class)) {
-                    if (keyStore.containsKey(slot.getID()) && FingerprintHelper.getManager(this) != null) {
+                    if (keyStore.containsKey(slot.getUUID().toString()) && FingerprintHelper.getManager(this) != null) {
                         visibility = View.GONE;
                         break;
                     }

File: app/src/main/java/me/impy/aegis/ui/dialogs/FingerprintDialogFragment.java
Patch:
@@ -35,7 +35,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         FingerprintManager manager = FingerprintHelper.getManager(getContext());
         try {
             _slot = new FingerprintSlot();
-            SecretKey key = new KeyStoreHandle().generateKey(_slot.getID());
+            SecretKey key = new KeyStoreHandle().generateKey(_slot.getUUID().toString());
             _cipher = Slot.createCipher(key, Cipher.ENCRYPT_MODE);
             _helper = new FingerprintUiHelper(manager, imgFingerprint, textFingerprint, this);
         } catch (Exception e) {

File: app/src/main/java/me/impy/aegis/ui/slides/CustomAuthenticatedSlide.java
Patch:
@@ -101,7 +101,7 @@ public void onSlideSelected() {
                         _storeHandle = new KeyStoreHandle();
                         _fingerSlot = new FingerprintSlot();
                     }
-                    key = _storeHandle.generateKey(_fingerSlot.getID());
+                    key = _storeHandle.generateKey(_fingerSlot.getUUID().toString());
                 } catch (Exception e) {
                     throw new UndeclaredThrowableException(e);
                 }

File: app/src/main/java/me/impy/aegis/ui/views/SlotHolder.java
Patch:
@@ -41,7 +41,7 @@ public void setData(Slot slot) {
             if (FingerprintHelper.isSupported()) {
                 try {
                     KeyStoreHandle keyStore = new KeyStoreHandle();
-                    if (keyStore.containsKey(slot.getID())) {
+                    if (keyStore.containsKey(slot.getUUID().toString())) {
                         _slotUsed.setVisibility(View.VISIBLE);
                     }
                 } catch (KeyStoreHandleException e) { }

File: app/src/main/java/me/impy/aegis/importers/AegisImporter.java
Patch:
@@ -19,7 +19,7 @@ public List<DatabaseEntry> convert() throws Exception {
         DatabaseFile file = new DatabaseFile();
         file.deserialize(bytes);
         Database db = new Database();
-        db.deserialize(file.getContent());
+        db.deserialize(file.getContent(), false);
         return db.getKeys();
     }
 

File: app/src/main/java/me/impy/aegis/KeyProfileAdapter.java
Patch:
@@ -58,6 +58,7 @@ public void refresh() {
         for (KeyProfile profile : _keyProfiles) {
             profile.refreshCode();
         }
+        notifyDataSetChanged();
     }
 
     private KeyProfile getKeyByID(long id) {

File: app/src/main/java/me/impy/aegis/AddProfileActivity.java
Patch:
@@ -67,7 +67,7 @@ protected void setPreferredTheme(boolean nightMode) {
     private void initializeForm() {
         KeyInfo info = _keyProfile.getEntry().getInfo();
         _profileName.setText(info.getAccountName());
-        _textAlgorithm.setText(info.getAlgorithm());
+        _textAlgorithm.setText(info.getAlgorithm(false));
         _textIssuer.setText(info.getIssuer());
         _textPeriod.setText(info.getPeriod() + " seconds");
 

File: app/src/main/java/me/impy/aegis/crypto/otp/OTP.java
Patch:
@@ -15,7 +15,7 @@ public static String generateOTP(KeyInfo info) throws InvalidKeyException, NoSuc
         switch (info.getType()) {
             case "totp":
                 String time = Long.toHexString(System.currentTimeMillis() / 1000 / info.getPeriod());
-                otp = TOTP.generateTOTP(info.getSecret(), time, info.getDigits(), info.getAlgorithm());
+                otp = TOTP.generateTOTP(info.getSecret(), time, info.getDigits(), info.getAlgorithm(true));
                 break;
             case "hotp":
                 otp = HOTP.generateOTP(info.getSecret(), info.getCounter(), info.getDigits(), false, -1);

File: app/src/main/java/me/impy/aegis/importers/AegisImporter.java
Patch:
@@ -16,7 +16,7 @@ public AegisImporter(ByteInputStream stream) {
     public List<DatabaseEntry> convert() throws Exception {
         byte[] bytes = _stream.getBytes();
         Database db = new Database();
-        db.deserialize(bytes);
+        db.deserialize(bytes, false);
         return db.getKeys();
     }
 

File: app/src/main/java/me/impy/aegis/MainActivity.java
Patch:
@@ -110,7 +110,7 @@ protected void onNewIntent(Intent intent) {
         super.onNewIntent(intent);
         setIntent(intent);
 
-        if (!doShortcutActions()) {
+        if (!doShortcutActions() || _db.isLocked()) {
             startAuthActivity();
         }
     }

File: app/src/main/java/me/impy/aegis/crypto/CryptoUtils.java
Patch:
@@ -20,7 +20,7 @@
 import javax.crypto.KeyGenerator;
 import javax.crypto.NoSuchPaddingException;
 import javax.crypto.SecretKey;
-import javax.crypto.spec.GCMParameterSpec;
+import javax.crypto.spec.IvParameterSpec;
 import javax.crypto.spec.SecretKeySpec;
 
 import org.spongycastle.crypto.generators.SCrypt;
@@ -56,7 +56,7 @@ public static Cipher createCipher(SecretKey key, int opmode) throws NoSuchPaddin
     }
 
     public static Cipher createCipher(SecretKey key, int opmode, byte[] nonce) throws NoSuchPaddingException, NoSuchAlgorithmException, InvalidAlgorithmParameterException, InvalidKeyException {
-        GCMParameterSpec spec = new GCMParameterSpec(CRYPTO_TAG_SIZE * 8, nonce);
+        IvParameterSpec spec = new IvParameterSpec(nonce);
         Cipher cipher = Cipher.getInstance(CRYPTO_CIPHER_AEAD);
         cipher.init(opmode, key, spec);
         return cipher;

File: app/src/main/java/me/impy/aegis/AuthActivity.java
Patch:
@@ -24,6 +24,7 @@
 import me.impy.aegis.crypto.slots.PasswordSlot;
 import me.impy.aegis.crypto.slots.Slot;
 import me.impy.aegis.crypto.slots.SlotCollection;
+import me.impy.aegis.helpers.FingerprintHelper;
 import me.impy.aegis.helpers.FingerprintUiHelper;
 import me.impy.aegis.helpers.AuthHelper;
 
@@ -50,7 +51,7 @@ protected void onCreate(Bundle savedInstanceState) {
         _slots = (SlotCollection) intent.getSerializableExtra("slots");
 
         // only show the fingerprint controls if the api version is new enough, permission is granted, a scanner is found and a fingerprint slot is found
-        FingerprintManager manager = FingerprintUiHelper.getManager(this);
+        FingerprintManager manager = FingerprintHelper.getManager(this);
         if (manager != null && _slots.has(FingerprintSlot.class)) {
             try {
                 KeyStoreHandle handle = new KeyStoreHandle();

File: app/src/main/java/me/impy/aegis/CustomAuthenticationSlide.java
Patch:
@@ -14,7 +14,7 @@
 
 import com.github.paolorotolo.appintro.ISlidePolicy;
 
-import me.impy.aegis.helpers.FingerprintUiHelper;
+import me.impy.aegis.helpers.FingerprintHelper;
 
 public class CustomAuthenticationSlide extends Fragment implements ISlidePolicy, RadioGroup.OnCheckedChangeListener {
     public static final int CRYPT_TYPE_INVALID = 0;
@@ -28,13 +28,12 @@ public class CustomAuthenticationSlide extends Fragment implements ISlidePolicy,
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.fragment_authentication_slide, container, false);
-
         _buttonGroup = view.findViewById(R.id.rg_authenticationMethod);
         _buttonGroup.setOnCheckedChangeListener(this);
         onCheckedChanged(_buttonGroup, _buttonGroup.getCheckedRadioButtonId());
 
         // only show the fingerprint option if the api version is new enough, permission is granted and a scanner is found
-        FingerprintManager manager = FingerprintUiHelper.getManager(getContext());
+        FingerprintManager manager = FingerprintHelper.getManager(getContext());
         if (manager != null) {
             RadioButton button = view.findViewById(R.id.rb_fingerprint);
             TextView text = view.findViewById(R.id.text_rb_fingerprint);

File: app/src/main/java/me/impy/aegis/AuthActivity.java
Patch:
@@ -1,6 +1,5 @@
 package me.impy.aegis;
 
-import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.hardware.fingerprint.FingerprintManager;

File: app/src/main/java/me/impy/aegis/CustomAuthenticationSlide.java
Patch:
@@ -1,6 +1,5 @@
 package me.impy.aegis;
 
-import android.content.Context;
 import android.content.Intent;
 import android.hardware.fingerprint.FingerprintManager;
 import android.os.Bundle;

File: app/src/main/java/me/impy/aegis/MainActivity.java
Patch:
@@ -390,6 +390,8 @@ private void deleteProfile(KeyProfile profile) {
                     Toast.makeText(this, "An error occurred while trying to delete an entry", Toast.LENGTH_SHORT).show();
                     return;
                 }
+                saveDatabase();
+
                 _keyProfileAdapter.removeKey(profile);
             })
             .setNegativeButton(android.R.string.no, null)

File: app/src/main/java/me/impy/aegis/crypto/KeyInfo.java
Patch:
@@ -28,7 +28,7 @@ public String getURL() {
             builder.appendQueryParameter("counter", Long.toString(_counter));
         }
 
-        if (!_issuer.equals("")) {
+        if (_issuer != null && !_issuer.equals("")) {
             builder.path(String.format("%s:%s", _issuer, _accountName));
             builder.appendQueryParameter("issuer", _issuer);
         } else {

File: app/src/main/java/me/impy/aegis/helpers/ItemTouchHelperAdapter.java
Patch:
@@ -18,7 +18,6 @@ public interface ItemTouchHelperAdapter {
      */
     void onItemMove(int fromPosition, int toPosition);
 
-
     /**
      * Called when an item has been dismissed by a swipe.<br/>
      * <br/>

File: app/src/main/java/me/impy/aegis/db/DatabaseManager.java
Patch:
@@ -10,6 +10,7 @@
 import java.io.IOException;
 import java.util.List;
 
+import me.impy.aegis.BuildConfig;
 import me.impy.aegis.crypto.CryptParameters;
 import me.impy.aegis.crypto.CryptResult;
 import me.impy.aegis.crypto.MasterKey;
@@ -108,7 +109,8 @@ public String export(boolean encrypt) throws Exception {
         File file;
         FileOutputStream stream = null;
         try {
-            File dir = new File(Environment.getExternalStorageDirectory(), "Aegis");
+            String dirName = !BuildConfig.DEBUG ? "Aegis" : "AegisDebug";
+            File dir = new File(Environment.getExternalStorageDirectory(), dirName);
             if (!dir.exists() && !dir.mkdirs()) {
                 throw new IOException("error creating external storage directory");
             }

File: app/src/main/java/me/impy/aegis/IntroActivity.java
Patch:
@@ -112,8 +112,8 @@ public void onDonePressed(Fragment currentFragment) {
 
         int cryptType = _authenticatedSlide.getCryptType();
         // wait for the key derivation background task
-        if (cryptType == CustomAuthenticationSlide.CRYPT_TYPE_NONE ||
-                _passwordSlot == null || _passwordCipher == null) {
+        if (cryptType != CustomAuthenticationSlide.CRYPT_TYPE_NONE &&
+                (_passwordSlot == null || _passwordCipher == null)) {
             return;
         }
 

File: app/src/main/java/me/impy/aegis/MainActivity.java
Patch:
@@ -73,8 +73,6 @@ protected void onCreate(Bundle savedInstanceState) {
                     Intent intent = new Intent(this, AuthActivity.class);
                     intent.putExtra("slots", _db.getFile().getSlots());
                     startActivityForResult(intent, CODE_DECRYPT);
-                } else {
-                    loadKeyProfiles();
                 }
             } catch (FileNotFoundException e) {
                 // start the intro if the db file was not found
@@ -118,6 +116,9 @@ protected void onCreate(Bundle savedInstanceState) {
         _keyProfiles = new ArrayList<>();
         _keyProfileAdapter = new KeyProfileAdapter(_keyProfiles);
         _keyProfileAdapter.setOnItemClickListener((position, v) -> createBottomSheet(position).show());
+        if (_db.isDecrypted()) {
+            loadKeyProfiles();
+        }
 
         ItemTouchHelper.Callback callback = new SimpleItemTouchHelperCallback(_keyProfileAdapter);
         ItemTouchHelper touchHelper = new ItemTouchHelper(callback);

File: app/src/main/java/me/impy/aegis/MainActivity.java
Patch:
@@ -48,7 +48,7 @@ public class MainActivity extends AppCompatActivity {
     private static final int CODE_IMPORT = 4;
 
     private KeyProfileAdapter _keyProfileAdapter;
-    private ArrayList<KeyProfile> _keyProfiles = new ArrayList<>();
+    private ArrayList<KeyProfile> _keyProfiles;
     private DatabaseManager _db;
 
     private boolean _nightMode = false;
@@ -112,6 +112,7 @@ protected void onCreate(Bundle savedInstanceState) {
         LinearLayoutManager mLayoutManager = new LinearLayoutManager(this);
         rvKeyProfiles.setLayoutManager(mLayoutManager);
 
+        _keyProfiles = new ArrayList<>();
         _keyProfileAdapter = new KeyProfileAdapter(_keyProfiles);
         _keyProfileAdapter.setOnItemClickListener((position, v) -> createBottomSheet(position).show());
 

File: app/src/main/java/me/impy/aegis/AuthActivity.java
Patch:
@@ -88,6 +88,7 @@ public void onClick(View v) {
 
     private void showError() {
         AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setTitle("Decryption error");
         builder.setMessage("Master key integrity check failed for every slot. Make sure you didn't mistype your password.");
         builder.setCancelable(false);
         builder.setPositiveButton("OK",
@@ -100,7 +101,7 @@ public void onClick(DialogInterface dialog, int id) {
     }
 
     private <T extends Slot> void trySlots(Class<T> type, Object obj) {
-        new SlotCollectionTask<T>(type, this, this).execute(new SlotCollectionTask.Params(){{
+        new SlotCollectionTask<>(type, this, this).execute(new SlotCollectionTask.Params(){{
             Slots = _slots;
             Obj = obj;
         }});

File: app/src/main/java/me/impy/aegis/IntroActivity.java
Patch:
@@ -109,6 +109,8 @@ public void onDonePressed(Fragment currentFragment) {
         }
 
         SlotCollection slots = databaseFile.getSlots();
+        slots.setMasterHash(masterKey.getHash());
+
         if (cryptType != CustomAuthenticationSlide.CRYPT_TYPE_NONE) {
             try {
                 // encrypt the master key with a key derived from the user's password

File: app/src/main/java/me/impy/aegis/crypto/slots/RawSlot.java
Patch:
@@ -23,7 +23,6 @@ public void deserialize(byte[] data) throws Exception {
         if (buffer.get() != getType()) {
             throw new Exception("slot type mismatch");
         }
-        buffer.get();
         _encryptedMasterKey = new byte[CryptoUtils.CRYPTO_KEY_SIZE];
         buffer.get(_encryptedMasterKey);
     }

File: app/src/main/java/me/impy/aegis/MainActivity.java
Patch:
@@ -172,6 +172,7 @@ else if (requestCode == ADD_KEYINFO) {
     @Override
     protected void onResume() {
         super.onResume();
+        mKeyProfileAdapter.notifyDataSetChanged();
         setPreferredTheme();
     }
 

File: app/src/main/java/me/impy/aegis/KeyProfile.java
Patch:
@@ -9,6 +9,7 @@ public class KeyProfile implements Serializable {
     public String Name;
     public String Icon;
     public String Code;
+    public String Issuer;
     public KeyInfo Info;
     public int Order;
     public int ID;

File: app/src/main/java/me/impy/aegis/KeyProfileAdapter.java
Patch:
@@ -74,6 +74,7 @@ public void setData(KeyProfile profile) {
         }
 
         public void updateCode() {
+            progressBar.setProgress(1000);
             if (this.keyProfile == null) {
                 return;
             }

File: app/src/main/java/me/impy/aegis/KeyProfileAdapter.java
Patch:
@@ -92,7 +92,7 @@ private TextDrawable generateTextDrawable(KeyProfile profile)
             // generate color based on a key (same key returns the same color), useful for list/grid views
             int profileKeyColor = generator.getColor(profile.Name);
 
-            TextDrawable newDrawable = TextDrawable.builder().buildRound(profile.Name.substring(0, 1), profileKeyColor);
+            TextDrawable newDrawable = TextDrawable.builder().buildRound(profile.Name.substring(0, 1).toUpperCase(), profileKeyColor);
             return newDrawable;
         }
     }

File: app/src/main/java/me/impy/aegis/KeyProfile.java
Patch:
@@ -8,5 +8,6 @@ public class KeyProfile implements Serializable {
     public String Name;
     public String Icon;
     public String Code;
-    public KeyInfo KeyInfo;
+    public KeyInfo Info;
+    public int ID;
 }

File: app/src/main/java/me/impy/aegis/KeyProfileAdapter.java
Patch:
@@ -74,7 +74,7 @@ public void updateCode() {
             }
             String otp = "";
             try {
-                otp = OTP.generateOTP(this.keyProfile.KeyInfo);
+                otp = OTP.generateOTP(this.keyProfile.Info);
             } catch (Exception e) {
                 e.printStackTrace();
             }
@@ -136,7 +136,7 @@ public void run() {
                     }
                 });
             }
-        }, holder.keyProfile.KeyInfo.getMillisTillNextRotation(), holder.keyProfile.KeyInfo.getPeriod() * 1000);
+        }, holder.keyProfile.Info.getMillisTillNextRotation(), holder.keyProfile.Info.getPeriod() * 1000);
     }
 
     // Return the size of your dataset (invoked by the layout manager)

File: app/src/main/java/me/impy/aegis/ScannerActivity.java
Patch:
@@ -59,7 +59,7 @@ public void handleDummyResult() {
         try {
             KeyInfo info = KeyInfo.FromURL("otpauth://totp/ACME%20Co:john@example.com?secret=HXDMVJECJJWSRB3HWIZR4IFUGFTMXBOZ");
             KeyProfile keyProfile = new KeyProfile();
-            keyProfile.KeyInfo = info;
+            keyProfile.Info = info;
             keyProfile.Name = String.format("%s/%s", info.getIssuer(), info.getAccountName());
 
             Intent resultIntent = new Intent();
@@ -84,7 +84,7 @@ public void handleResult(Result rawResult) {
             //TODO: Handle non TOTP / HOTP qr codes.
             KeyInfo info = KeyInfo.FromURL(rawResult.getText());
             KeyProfile keyProfile = new KeyProfile();
-            keyProfile.KeyInfo = info;
+            keyProfile.Info = info;
             keyProfile.Name = String.format("%s/%s", info.getIssuer(), info.getAccountName());
 
             Intent resultIntent = new Intent();

File: app/src/main/java/me/impy/aegis/ScannerActivity.java
Patch:
@@ -60,7 +60,7 @@ public void handleDummyResult() {
             KeyInfo info = KeyInfo.FromURL("otpauth://totp/ACME%20Co:john@example.com?secret=HXDMVJECJJWSRB3HWIZR4IFUGFTMXBOZ");
             KeyProfile keyProfile = new KeyProfile();
             keyProfile.KeyInfo = info;
-            keyProfile.Name = info.getLabel();
+            keyProfile.Name = String.format("%s/%s", info.getIssuer(), info.getAccountName());
 
             Intent resultIntent = new Intent();
             resultIntent.putExtra("KeyProfile", keyProfile);
@@ -85,7 +85,7 @@ public void handleResult(Result rawResult) {
             KeyInfo info = KeyInfo.FromURL(rawResult.getText());
             KeyProfile keyProfile = new KeyProfile();
             keyProfile.KeyInfo = info;
-            keyProfile.Name = info.getLabel();
+            keyProfile.Name = String.format("%s/%s", info.getIssuer(), info.getAccountName());
 
             Intent resultIntent = new Intent();
             resultIntent.putExtra("KeyProfile", keyProfile);

