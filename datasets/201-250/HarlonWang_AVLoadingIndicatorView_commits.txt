File: library/src/main/java/com/wang/avi/AVLoadingIndicatorView.java
Patch:
@@ -72,7 +72,7 @@ public AVLoadingIndicatorView(Context context) {
 
     public AVLoadingIndicatorView(Context context, AttributeSet attrs) {
         super(context, attrs);
-        init(context, attrs,0,0);
+        init(context, attrs,0,R.style.AVLoadingIndicatorView);
     }
 
     public AVLoadingIndicatorView(Context context, AttributeSet attrs, int defStyleAttr) {

File: library/src/main/java/com/wang/avi/AVLoadingIndicatorView.java
Patch:
@@ -1,7 +1,6 @@
 package com.wang.avi;
 
 import android.annotation.TargetApi;
-import android.app.ProgressDialog;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
@@ -15,7 +14,6 @@
 import android.util.Log;
 import android.view.View;
 import android.view.animation.AnimationUtils;
-import android.widget.ProgressBar;
 
 import com.wang.avi.indicators.BallPulseIndicator;
 

File: library/src/main/java/com/wang/avi/Indicator.java
Patch:
@@ -10,7 +10,6 @@
 import android.graphics.drawable.Animatable;
 import android.graphics.drawable.Drawable;
 
-
 import java.util.ArrayList;
 import java.util.HashMap;
 

File: library/src/main/java/com/wang/avi/indicators/BallSpinFadeLoaderIndicator.java
Patch:
@@ -67,7 +67,6 @@ public void onAnimationUpdate(ValueAnimator animation) {
                     postInvalidate();
                 }
             });
-            scaleAnim.start();
 
             ValueAnimator alphaAnim=ValueAnimator.ofInt(255, 77, 255);
             alphaAnim.setDuration(1000);
@@ -80,7 +79,6 @@ public void onAnimationUpdate(ValueAnimator animation) {
                     postInvalidate();
                 }
             });
-            alphaAnim.start();
             animators.add(scaleAnim);
             animators.add(alphaAnim);
         }

File: app/src/main/java/com/wang/avi/sample/MyCustomIndicator.java
Patch:
@@ -55,7 +55,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
 
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallBeatIndicator.java
Patch:
@@ -52,7 +52,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(700);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
@@ -64,7 +64,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             alphaAnim.setDuration(700);
             alphaAnim.setRepeatCount(-1);
             alphaAnim.setStartDelay(delays[i]);
-            alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     alphas[index] = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallClipRotateIndicator.java
Patch:
@@ -37,7 +37,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
         ValueAnimator scaleAnim=ValueAnimator.ofFloat(1,0.6f,0.5f,1);
         scaleAnim.setDuration(750);
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scaleFloat = (float) animation.getAnimatedValue();
@@ -47,7 +47,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         ValueAnimator rotateAnim=ValueAnimator.ofFloat(0,180,360);
         rotateAnim.setDuration(750);
         rotateAnim.setRepeatCount(-1);
-        rotateAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(rotateAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degrees = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallClipRotateMultipleIndicator.java
Patch:
@@ -57,7 +57,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
         ValueAnimator scaleAnim=ValueAnimator.ofFloat(1,0.6f,1);
         scaleAnim.setDuration(1000);
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scaleFloat = (float) animation.getAnimatedValue();
@@ -68,7 +68,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         ValueAnimator rotateAnim=ValueAnimator.ofFloat(0, 180,360);
         rotateAnim.setDuration(1000);
         rotateAnim.setRepeatCount(-1);
-        rotateAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(rotateAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degrees = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallClipRotatePulseIndicator.java
Patch:
@@ -52,7 +52,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
         ValueAnimator scaleAnim=ValueAnimator.ofFloat(1,0.3f,1);
         scaleAnim.setDuration(1000);
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scaleFloat1 = (float) animation.getAnimatedValue();
@@ -63,7 +63,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         ValueAnimator scaleAnim2=ValueAnimator.ofFloat(1,0.6f,1);
         scaleAnim2.setDuration(1000);
         scaleAnim2.setRepeatCount(-1);
-        scaleAnim2.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim2,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scaleFloat2 = (float) animation.getAnimatedValue();
@@ -74,7 +74,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         ValueAnimator rotateAnim=ValueAnimator.ofFloat(0, 180,360);
         rotateAnim.setDuration(1000);
         rotateAnim.setRepeatCount(-1);
-        rotateAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(rotateAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degrees = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallGridBeatIndicator.java
Patch:
@@ -58,7 +58,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             alphaAnim.setDuration(durations[i]);
             alphaAnim.setRepeatCount(-1);
             alphaAnim.setStartDelay(delays[i]);
-            alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     alphas[index] = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallGridPulseIndicator.java
Patch:
@@ -72,7 +72,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(durations[i]);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
@@ -84,7 +84,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             alphaAnim.setDuration(durations[i]);
             alphaAnim.setRepeatCount(-1);
             alphaAnim.setStartDelay(delays[i]);
-            alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     alphas[index] = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallPulseIndicator.java
Patch:
@@ -51,12 +51,11 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
 
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
                     postInvalidate();
-
                 }
             });
             animators.add(scaleAnim);

File: library/src/main/java/com/wang/avi/indicators/BallPulseRiseIndicator.java
Patch:
@@ -56,7 +56,7 @@ public void draw(Canvas canvas, Paint paint) {
     public ArrayList<ValueAnimator> onCreateAnimators() {
         ArrayList<ValueAnimator> animators=new ArrayList<>();
         ValueAnimator animator=ValueAnimator.ofFloat(0,360);
-        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(animator,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degress = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallPulseSyncIndicator.java
Patch:
@@ -41,7 +41,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(600);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateYFloats[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallRotateIndicator.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
         ValueAnimator scaleAnim=ValueAnimator.ofFloat(0.5f,1,0.5f);
         scaleAnim.setDuration(1000);
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scaleFloat = (float) animation.getAnimatedValue();
@@ -74,7 +74,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         });
 
         ValueAnimator rotateAnim=ValueAnimator.ofFloat(0,180,360);
-        rotateAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(rotateAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degress = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallScaleIndicator.java
Patch:
@@ -33,7 +33,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
         scaleAnim.setInterpolator(new LinearInterpolator());
         scaleAnim.setDuration(1000);
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scale = (float) animation.getAnimatedValue();
@@ -45,7 +45,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         alphaAnim.setInterpolator(new LinearInterpolator());
         alphaAnim.setDuration(1000);
         alphaAnim.setRepeatCount(-1);
-        alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 alpha = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallScaleMultipleIndicator.java
Patch:
@@ -37,7 +37,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setInterpolator(new LinearInterpolator());
             scaleAnim.setDuration(1000);
             scaleAnim.setRepeatCount(-1);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
@@ -50,7 +50,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             alphaAnim.setInterpolator(new LinearInterpolator());
             alphaAnim.setDuration(1000);
             alphaAnim.setRepeatCount(-1);
-            alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     alphaInts[index] = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallScaleRippleIndicator.java
Patch:
@@ -28,7 +28,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
         scaleAnim.setInterpolator(new LinearInterpolator());
         scaleAnim.setDuration(1000);
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scale = (float) animation.getAnimatedValue();
@@ -40,7 +40,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         alphaAnim.setInterpolator(new LinearInterpolator());
         alphaAnim.setDuration(1000);
         alphaAnim.setRepeatCount(-1);
-        alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 alpha = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallScaleRippleMultipleIndicator.java
Patch:
@@ -31,7 +31,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setInterpolator(new LinearInterpolator());
             scaleAnim.setDuration(1000);
             scaleAnim.setRepeatCount(-1);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
@@ -44,7 +44,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             scaleAnim.setInterpolator(new LinearInterpolator());
             alphaAnim.setDuration(1000);
             alphaAnim.setRepeatCount(-1);
-            alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     alphaInts[index] = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallSpinFadeLoaderIndicator.java
Patch:
@@ -60,7 +60,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(1000);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
@@ -73,7 +73,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             alphaAnim.setDuration(1000);
             alphaAnim.setRepeatCount(-1);
             alphaAnim.setStartDelay(delays[i]);
-            alphaAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(alphaAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     alphas[index] = (int) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallTrianglePathIndicator.java
Patch:
@@ -51,7 +51,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             translateXAnim.setDuration(2000);
             translateXAnim.setInterpolator(new LinearInterpolator());
                 translateXAnim.setRepeatCount(-1);
-            translateXAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translateXAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateX [index]= (float) animation.getAnimatedValue();
@@ -62,7 +62,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             translateYAnim.setDuration(2000);
             translateYAnim.setInterpolator(new LinearInterpolator());
             translateYAnim.setRepeatCount(-1);
-            translateYAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translateYAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateY [index]= (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallZigZagDeflectIndicator.java
Patch:
@@ -34,7 +34,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             translateXAnim.setDuration(2000);
             translateXAnim.setInterpolator(new LinearInterpolator());
             translateXAnim.setRepeatCount(-1);
-            translateXAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translateXAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateX [index]= (float) animation.getAnimatedValue();
@@ -45,7 +45,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             translateYAnim.setDuration(2000);
             translateYAnim.setInterpolator(new LinearInterpolator());
             translateYAnim.setRepeatCount(-1);
-            translateYAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translateYAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateY [index]= (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/BallZigZagIndicator.java
Patch:
@@ -46,7 +46,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             translateXAnim.setDuration(1000);
             translateXAnim.setInterpolator(new LinearInterpolator());
             translateXAnim.setRepeatCount(-1);
-            translateXAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translateXAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateX[index] = (float) animation.getAnimatedValue();
@@ -57,7 +57,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             translateYAnim.setDuration(1000);
             translateYAnim.setInterpolator(new LinearInterpolator());
             translateYAnim.setRepeatCount(-1);
-            translateYAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translateYAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateY[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/CubeTransitionIndicator.java
Patch:
@@ -63,7 +63,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             translationYAnim.setDuration(1600);
             translationYAnim.setInterpolator(new LinearInterpolator());
             translationYAnim.setRepeatCount(-1);
-            translationYAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(translationYAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     translateY[index] = (float) animation.getAnimatedValue();
@@ -79,7 +79,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         scaleAnim.setDuration(1600);
         scaleAnim.setInterpolator(new LinearInterpolator());
         scaleAnim.setRepeatCount(-1);
-        scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 scaleFloat = (float) animation.getAnimatedValue();
@@ -91,7 +91,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         rotateAnim.setDuration(1600);
         rotateAnim.setInterpolator(new LinearInterpolator());
         rotateAnim.setRepeatCount(-1);
-        rotateAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(rotateAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degrees = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/LineScaleIndicator.java
Patch:
@@ -46,7 +46,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(1000);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleYFloats[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/LineScalePartyIndicator.java
Patch:
@@ -48,7 +48,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(durations[i]);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/LineScalePulseOutIndicator.java
Patch:
@@ -20,7 +20,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(900);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleYFloats[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/LineScalePulseOutRapidIndicator.java
Patch:
@@ -20,7 +20,7 @@ public ArrayList<ValueAnimator> onCreateAnimators() {
             scaleAnim.setDuration(1000);
             scaleAnim.setRepeatCount(-1);
             scaleAnim.setStartDelay(delays[i]);
-            scaleAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+            addUpdateListener(scaleAnim,new ValueAnimator.AnimatorUpdateListener() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleYFloats[index] = (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/SemiCircleSpinIndicator.java
Patch:
@@ -30,7 +30,7 @@ public void draw(Canvas canvas, Paint paint) {
     public ArrayList<ValueAnimator> onCreateAnimators() {
         ArrayList<ValueAnimator> animators=new ArrayList<>();
         ValueAnimator rotateAnim=ValueAnimator.ofFloat(0,180,360);
-        rotateAnim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(rotateAnim,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 degress= (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/SquareSpinIndicator.java
Patch:
@@ -53,7 +53,7 @@ public void draw(Canvas canvas, Paint paint) {
     public ArrayList<ValueAnimator> onCreateAnimators() {
         ArrayList<ValueAnimator> animators=new ArrayList<>();
         ValueAnimator animator=ValueAnimator.ofFloat(0,180,180,0,0);
-        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(animator,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 rotateX= (float) animation.getAnimatedValue();
@@ -65,7 +65,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         animator.setDuration(2500);
 
         ValueAnimator animator1=ValueAnimator.ofFloat(0,0,180,180,0);
-        animator1.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(animator1,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 rotateY= (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicators/TriangleSkewSpinIndicator.java
Patch:
@@ -55,7 +55,7 @@ public void draw(Canvas canvas, Paint paint) {
     public ArrayList<ValueAnimator> onCreateAnimators() {
         ArrayList<ValueAnimator> animators=new ArrayList<>();
         ValueAnimator animator=ValueAnimator.ofFloat(0,180,180,0,0);
-        animator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(animator,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 rotateX= (float) animation.getAnimatedValue();
@@ -67,7 +67,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         animator.setDuration(2500);
 
         ValueAnimator animator1=ValueAnimator.ofFloat(0,0,180,180,0);
-        animator1.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+        addUpdateListener(animator1,new ValueAnimator.AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
                 rotateY= (float) animation.getAnimatedValue();

File: library/src/main/java/com/wang/avi/indicator/BaseIndicatorController.java
Patch:
@@ -76,19 +76,16 @@ public void setAnimationStatus(AnimStatus animStatus){
             switch (animStatus){
                 case START:
                     if (!isRunning){
-                        Log.d("AnimStatus","START");
                         animator.start();
                     }
                     break;
                 case END:
                     if (isRunning){
-                        Log.d("AnimStatus","END");
                         animator.end();
                     }
                     break;
                 case CANCEL:
                     if (isRunning){
-                        Log.d("AnimStatus","CANCEL");
                         animator.cancel();
                     }
                     break;

File: app/src/main/java/com/wang/avi/sample/MainActivity.java
Patch:
@@ -11,11 +11,11 @@ public class MainActivity extends AppCompatActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_loading);
+        setContentView(R.layout.test);
     }
 
 
-/*    public void visible(View view) {
+    public void visible(View view) {
         findViewById(R.id.testView).setVisibility(View.VISIBLE);
     }
 
@@ -25,5 +25,5 @@ public void gone(View view) {
 
     public void invisible(View view) {
         findViewById(R.id.testView).setVisibility(View.INVISIBLE);
-    }*/
+    }
 }

File: library/src/main/java/com/wang/avi/AVLoadingIndicatorView.java
Patch:
@@ -339,7 +339,7 @@ void drawIndicator(Canvas canvas){
     }
 
     void applyAnimation(){
-        mIndicatorController.createAnimation();
+        mIndicatorController.initAnimation();
     }
 
     private int dp2px(int dpValue) {

File: library/src/main/java/com/wang/avi/indicator/BallBeatIndicator.java
Patch:
@@ -52,6 +52,7 @@ public void createAnimation() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
+                    System.out.println("scaleFloats="+scaleFloats[index]);
                     postInvalidate();
                 }
             });
@@ -69,6 +70,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             alphaAnim.start();
+            addAnimation(scaleAnim, alphaAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallClipRotateIndicator.java
Patch:
@@ -53,6 +53,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         });
         rotateAnim.start();
+        addAnimation(scaleAnim,rotateAnim);
     }
 
 }

File: library/src/main/java/com/wang/avi/indicator/BallClipRotateMultipleIndicator.java
Patch:
@@ -73,6 +73,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         });
         rotateAnim.start();
+        addAnimation(scaleAnim,rotateAnim);
     }
 
 }

File: library/src/main/java/com/wang/avi/indicator/BallClipRotatePulseIndicator.java
Patch:
@@ -81,6 +81,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         });
         rotateAnim.start();
+        addAnimation(scaleAnim,scaleAnim2,rotateAnim);
     }
 
 }

File: library/src/main/java/com/wang/avi/indicator/BallGridBeatIndicator.java
Patch:
@@ -61,6 +61,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             alphaAnim.start();
+            addAnimation(alphaAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallGridPulseIndicator.java
Patch:
@@ -89,6 +89,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             alphaAnim.start();
+            addAnimation(scaleAnim,alphaAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallPulseIndicator.java
Patch:
@@ -51,11 +51,13 @@ public void createAnimation() {
                 @Override
                 public void onAnimationUpdate(ValueAnimator animation) {
                     scaleFloats[index] = (float) animation.getAnimatedValue();
+                    System.out.println("scaleFloats="+scaleFloats[index]);
                     postInvalidate();
 
                 }
             });
             scaleAnim.start();
+            addAnimation(scaleAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallPulseRiseIndicator.java
Patch:
@@ -31,5 +31,6 @@ public void createAnimation() {
         animator.setRepeatCount(-1);
         animator.setDuration(1500);
         animator.start();
+        addAnimation(animator);
     }
 }

File: library/src/main/java/com/wang/avi/indicator/BallPulseSyncIndicator.java
Patch:
@@ -45,6 +45,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             scaleAnim.start();
+            addAnimation(scaleAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallRotateIndicator.java
Patch:
@@ -57,6 +57,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
         rotateAnim.setRepeatCount(-1);
         rotateAnim.start();
 
+        addAnimation(scaleAnim,rotateAnim);
     }
 
 

File: library/src/main/java/com/wang/avi/indicator/BallScaleIndicator.java
Patch:
@@ -50,6 +50,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         });
         alphaAnim.start();
+        addAnimation(scaleAnim,alphaAnim);
     }
 
 

File: library/src/main/java/com/wang/avi/indicator/BallScaleMultipleIndicator.java
Patch:
@@ -56,6 +56,8 @@ public void onAnimationUpdate(ValueAnimator animation) {
             });
             scaleAnim.setStartDelay(delays[i]);
             alphaAnim.start();
+
+            addAnimation(scaleAnim,alphaAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallScaleRippleIndicator.java
Patch:
@@ -46,6 +46,8 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         });
         alphaAnim.start();
+
+        addAnimation(scaleAnim,alphaAnim);
     }
 
 }

File: library/src/main/java/com/wang/avi/indicator/BallScaleRippleMultipleIndicator.java
Patch:
@@ -51,6 +51,8 @@ public void onAnimationUpdate(ValueAnimator animation) {
             });
             scaleAnim.setStartDelay(delays[i]);
             alphaAnim.start();
+
+            addAnimation(scaleAnim,alphaAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallSpinFadeLoaderIndicator.java
Patch:
@@ -92,6 +92,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             alphaAnim.start();
+            addAnimation(scaleAnim,alphaAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallTrianglePathIndicator.java
Patch:
@@ -67,6 +67,8 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             translateYAnim.start();
+
+            addAnimation(translateXAnim,translateYAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallZigZagDeflectIndicator.java
Patch:
@@ -51,6 +51,8 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             translateYAnim.start();
+
+            addAnimation(translateXAnim,translateYAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/BallZigZagIndicator.java
Patch:
@@ -62,6 +62,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             translateYAnim.start();
+            addAnimation(translateXAnim,translateYAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/LineScaleIndicator.java
Patch:
@@ -50,6 +50,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             scaleAnim.start();
+            addAnimation(scaleAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/LineScalePartyIndicator.java
Patch:
@@ -51,6 +51,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             scaleAnim.start();
+            addAnimation(scaleAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/LineScalePulseOutIndicator.java
Patch:
@@ -26,6 +26,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             scaleAnim.start();
+            addAnimation(scaleAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/LineScalePulseOutRapidIndicator.java
Patch:
@@ -25,6 +25,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
                 }
             });
             scaleAnim.start();
+            addAnimation(scaleAnim);
         }
     }
 

File: library/src/main/java/com/wang/avi/indicator/PacmanIndicator.java
Patch:
@@ -105,5 +105,7 @@ public void onAnimationUpdate(ValueAnimator animation) {
             }
         });
         rotateAnim2.start();
+
+        addAnimation(translationAnim,alphaAnim,rotateAnim1,rotateAnim2);
     }
 }

File: library/src/main/java/com/wang/avi/indicator/SemiCircleSpinIndicator.java
Patch:
@@ -24,6 +24,7 @@ public void createAnimation() {
         rotateAnim.setDuration(600);
         rotateAnim.setRepeatCount(-1);
         rotateAnim.start();
+        addAnimation(rotateAnim);
     }
 
 

File: library/src/main/java/com/wang/avi/indicator/SquareSpinIndicator.java
Patch:
@@ -26,5 +26,6 @@ public void createAnimation() {
         animator.setRepeatCount(-1);
         animator.setDuration(2500);
         animator.start();
+        addAnimation(animator);
     }
 }

File: library/src/main/java/com/wang/avi/indicator/TriangleSkewSpinIndicator.java
Patch:
@@ -33,6 +33,8 @@ public void createAnimation() {
         animator.setRepeatCount(-1);
         animator.setDuration(2500);
         animator.start();
+
+        addAnimation(animator);
     }
 
 }

