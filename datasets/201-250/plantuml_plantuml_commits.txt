File: src/net/sourceforge/plantuml/ebnf/ETileBox.java
Patch:
@@ -259,7 +259,7 @@ private String getDrawValue(String value) {
 			return value;
 
 		final String language = option.getValue("language");
-		return I18n.getLocalizedValue(language, "ebnf." + VALUE_MAP.get(value));
+		return I18n.getLocalizedValue(language, "ebnf." + VALUE_MAP.get(value), value);
 	}
 
 }

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -124,7 +124,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 
 		final Failable<Quark<Entity>> quark = diagram.quarkInContextSafe(false, idShort);
 		if (quark.isFail())
-			return CommandExecutionResult.error(quark.getError());
+			return CommandExecutionResult.error(quark.getError(), quark.getScore());
 
 		Entity entity = quark.get().getData();
 

File: src/net/sourceforge/plantuml/klimt/drawing/svg/SvgGraphics.java
Patch:
@@ -416,8 +416,10 @@ public final void setStrokeColor(String stroke) {
 	}
 
 	// https://forum.plantuml.net/12469/package-background-transparent-package-default-background?show=12479#c12479
+	// https://github.com/plantuml/plantuml-server/issues/348#issuecomment-2581253011
 	private String fixColor(String color) {
-		return color == null || "#00000000".equals(color) ? "transparent" : color;
+		// Since "transparent" isnâ€™t being recognized (even though it should be), we use #FFFFFF00 as an alternative
+		return color == null || "#00000000".equals(color) ? "#FFFFFF00" : color;
 	}
 
 	public final void setStrokeWidth(double strokeWidth, String strokeDasharray) {

File: src/net/sourceforge/plantuml/chronology/ChronologyDiagram.java
Patch:
@@ -256,7 +256,7 @@ public void drawU(UGraphic ug) {
 //	}
 
 	private TimeHeaderParameters thParam() {
-		return new TimeHeaderParameters(null, 1, min, max, getIHtmlColorSet(), locale, null, null, null, this);
+		return new TimeHeaderParameters(null, 1, min, max, getIHtmlColorSet(), locale, null, null, null, this, false);
 	}
 
 //	private Map<Day, HColor> colorDays() {

File: src/net/sourceforge/plantuml/project/GanttDiagramFactory.java
Patch:
@@ -51,6 +51,7 @@
 import net.sourceforge.plantuml.project.command.CommandGanttArrow2;
 import net.sourceforge.plantuml.project.command.CommandGroupEnd;
 import net.sourceforge.plantuml.project.command.CommandGroupStart;
+import net.sourceforge.plantuml.project.command.CommandHideClosed;
 import net.sourceforge.plantuml.project.command.CommandHideResourceFootbox;
 import net.sourceforge.plantuml.project.command.CommandHideResourceName;
 import net.sourceforge.plantuml.project.command.CommandLabelOnColumn;
@@ -117,6 +118,7 @@ protected void initCommandsList(List<Command> cmds) {
 		cmds.add(new CommandLabelOnColumn());
 		cmds.add(new CommandHideResourceName());
 		cmds.add(new CommandHideResourceFootbox());
+		cmds.add(new CommandHideClosed());
 		cmds.add(new CommandTaskCompleteDefault());
 	}
 

File: src/net/sourceforge/plantuml/tikz/TikzGraphics.java
Patch:
@@ -157,6 +157,7 @@ public void createData(OutputStream os) throws IOException {
 		if (withPreamble) {
 			out(os, "\\documentclass[tikz]{standalone}");
 			out(os, "\\usepackage{amsmath}");
+			out(os, "\\usepackage[T1]{fontenc}");
 			if (hasUrl) {
 				out(os, "\\usetikzlibrary{calc}");
 				out(os, "\\usepackage{hyperref}");

File: src/net/sourceforge/plantuml/project/GanttArrow.java
Patch:
@@ -182,7 +182,7 @@ private double getX(TaskAttribute taskAttribute, TaskDraw task, Direction direct
 			return task.getX1(taskAttribute);
 
 		if (direction == Direction.RIGHT)
-			return task.getX2(taskAttribute);
+			return task.getX2(taskAttribute) + 2;
 
 		return (task.getX1(taskAttribute) + (task.getX2(taskAttribute))) / 2;
 	}

File: src/net/sourceforge/plantuml/project/draw/AbstractTaskDraw.java
Patch:
@@ -165,7 +165,7 @@ public final Task getTask() {
 	public final double getY(StringBounder stringBounder, Direction direction) {
 		final Style style = getStyle();
 		final ClockwiseTopRightBottomLeft margin = style.getMargin();
-		final ClockwiseTopRightBottomLeft padding = style.getPadding();
+		// final ClockwiseTopRightBottomLeft padding = style.getPadding();
 
 		final double y1 = margin.getTop() + getY(stringBounder).getCurrentValue();
 		final double y2 = y1 + getShapeHeight(stringBounder);

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.9beta6";
+	private static final String version = "1.2024.9beta7";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/klimt/UGroupType.java
Patch:
@@ -36,5 +36,5 @@
 package net.sourceforge.plantuml.klimt;
 
 public enum UGroupType {
-	ID, CLASS
+	ID, CLASS, TITLE
 }

File: src/net/sourceforge/plantuml/sequencediagram/graphic/DrawableSetInitializer.java
Patch:
@@ -648,10 +648,10 @@ private void prepareParticipant(StringBounder stringBounder, Participant p) {
 		final Component comp = drawableSet.getSkin().createComponent(
 				new Style[] { ComponentType.ALIVE_BOX_CLOSE_CLOSE.getStyleSignature()
 						.getMergedStyle(drawableSet.getSkinParam().getCurrentStyleBuilder()) },
-				ComponentType.ALIVE_BOX_CLOSE_CLOSE, null, drawableSet.getSkinParam(), null);
+				ComponentType.ALIVE_BOX_CLOSE_CLOSE, null, drawableSet.getSkinParam(), participantDisplay);
 
 		final LifeLine lifeLine = new LifeLine(box, comp.getPreferredWidth(stringBounder),
-				drawableSet.getSkinParam().shadowing(p.getStereotype()));
+				drawableSet.getSkinParam().shadowing(p.getStereotype()), participantDisplay);
 		drawableSet.setLivingParticipantBox(p, new LivingParticipantBox(box, lifeLine));
 
 		this.freeX = box.getMaxX(stringBounder);

File: src/net/sourceforge/plantuml/sequencediagram/graphic/Step1Message.java
Patch:
@@ -48,7 +48,6 @@
 import net.sourceforge.plantuml.skin.ArrowBody;
 import net.sourceforge.plantuml.skin.ArrowComponent;
 import net.sourceforge.plantuml.skin.ArrowConfiguration;
-import net.sourceforge.plantuml.skin.ArrowHead;
 import net.sourceforge.plantuml.skin.Component;
 import net.sourceforge.plantuml.skin.ComponentType;
 import net.sourceforge.plantuml.skin.PaddingParam;
@@ -76,7 +75,8 @@ class Step1Message extends Step1Abstract {
 			final Component compAliveBox = drawingSet.getSkin().createComponent(
 					new Style[] { ComponentType.ALIVE_BOX_OPEN_OPEN.getStyleSignature()
 							.getMergedStyle(drawingSet.getSkinParam().getCurrentStyleBuilder()) },
-					ComponentType.ALIVE_BOX_OPEN_OPEN, null, drawingSet.getSkinParam(), null);
+					ComponentType.ALIVE_BOX_OPEN_OPEN, null, drawingSet.getSkinParam(),
+					message.getParticipant1().getDisplay(false));
 
 			this.messageArrow = new MessageArrow(freeY.getFreeY(range), drawingSet.getSkin(), comp,
 					getLivingParticipantBox1(), getLivingParticipantBox2(), message.getUrl(), compAliveBox);

File: src/gen/lib/dotgen/mincross__c.java
Patch:
@@ -209,7 +209,8 @@ public static ST_adjmatrix_t new_matrix(int i, int j) {
     // Arnaud 15/09/2022: the j+1 is needed in some case to avoid ArrayIndexOutOfBoundsException
     // Arnaud 02/03/2023: the j+3 is needed in some case to avoid ArrayIndexOutOfBoundsException
     // Arnaud 15/03/2023: the i+3 is needed in some case to avoid ArrayIndexOutOfBoundsException when LR direction
-    rv.data = new int[i+3][j+3]; // Or maybe new int[j][i] ?
+    // Arnaud 20/12/2024: Even bigger
+    rv.data = new int[Math.max(i, j) + 8][Math.max(i, j) + 8];
     return rv;
 } finally {
 LEAVING("756bre1tpxb1tq68p7xhkrxkc","new_matrix");

File: src/net/sourceforge/plantuml/ErrorUml.java
Patch:
@@ -80,7 +80,7 @@ public String toString() {
 
 	public final String getError() {
 		if (diagramType != null)
-			return error + " (Assumed diagram type: " + diagramType.name().toLowerCase() + ")";
+			return error + " (Assumed diagram type: " + diagramType.humanReadableName() + ")";
 		return error;
 	}
 

File: src/net/sourceforge/plantuml/core/DiagramType.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.utils.StartUtils;
 
+// To be merged with UmlDiagramType
 public enum DiagramType {
 	// ::remove folder when __HAXE__
 	UML, BPM, DITAA, DOT, PROJECT, JCCKIT, SALT, FLOW, CREOLE, MATH, LATEX, DEFINITION, GANTT, CHRONOLOGY, NW, MINDMAP,

File: src/net/sourceforge/plantuml/PSystemBuilder.java
Patch:
@@ -142,7 +142,7 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate
 					assert false;
 					Log.error("Preprocessor Error: " + s.getPreprocessorError());
 					final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, s.getPreprocessorError(), 0,
-							s.getLocation());
+							s.getLocation(), null);
 					return PSystemErrorUtils.buildV2(umlSource, err, Collections.<String>emptyList(), source);
 				}
 			}

File: src/net/sourceforge/plantuml/api/PSystemFactory.java
Patch:
@@ -40,11 +40,14 @@
 import net.sourceforge.plantuml.core.Diagram;
 import net.sourceforge.plantuml.core.DiagramType;
 import net.sourceforge.plantuml.core.UmlSource;
+import net.sourceforge.plantuml.skin.UmlDiagramType;
 
 public interface PSystemFactory {
 
 	Diagram createSystem(UmlSource source, Map<String, String> skinMap);
 
 	DiagramType getDiagramType();
+	
+	UmlDiagramType getUmlDiagramType();
 
 }

File: src/net/sourceforge/plantuml/command/PSystemAbstractFactory.java
Patch:
@@ -58,14 +58,14 @@ protected PSystemAbstractFactory(DiagramType type) {
 
 	final protected PSystemError buildEmptyError(UmlSource source, LineLocation lineLocation,
 			List<StringLocated> trace) {
-		final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, EMPTY_DESCRIPTION, 0, lineLocation);
+		final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, EMPTY_DESCRIPTION, 0, lineLocation, getUmlDiagramType());
 		final PSystemError result = PSystemErrorUtils.buildV2(source, err, null, trace);
 		return result;
 	}
 
 	final protected PSystemError buildExecutionError(UmlSource source, String stringError, LineLocation lineLocation,
 			List<StringLocated> trace) {
-		final ErrorUml err = new ErrorUml(ErrorUmlType.EXECUTION_ERROR, stringError, 0, lineLocation);
+		final ErrorUml err = new ErrorUml(ErrorUmlType.EXECUTION_ERROR, stringError, 0, lineLocation, getUmlDiagramType());
 		final PSystemError result = PSystemErrorUtils.buildV2(source, err, null, trace);
 		return result;
 	}

File: src/net/sourceforge/plantuml/command/PSystemBasicFactory.java
Patch:
@@ -87,7 +87,7 @@ final public Diagram createSystem(UmlSource source, Map<String, String> skinMap)
 			}
 			system = executeLine(source, system, s.getString());
 			if (system == null) {
-				final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, "Syntax Error?", 0, s.getLocation());
+				final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, "Syntax Error?", 0, s.getLocation(), getUmlDiagramType());
 				// return PSystemErrorUtils.buildV1(source, err, null);
 				return PSystemErrorUtils.buildV2(source, err, null, it.getTrace());
 			}

File: src/net/sourceforge/plantuml/command/PSystemCommandFactory.java
Patch:
@@ -130,7 +130,7 @@ private AbstractPSystem executeFewLines(AbstractPSystem sys, UmlSource source, f
 			ParserPass currentPass) {
 		final Step step = getCandidate(it);
 		if (step == null) {
-			final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, "Syntax Error?", 0, it.peek().getLocation());
+			final ErrorUml err = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, "Syntax Error?", 0, it.peek().getLocation(), getUmlDiagramType());
 			it.next();
 			return PSystemErrorUtils.buildV2(source, err, null, it.getTrace());
 		}
@@ -142,7 +142,7 @@ private AbstractPSystem executeFewLines(AbstractPSystem sys, UmlSource source, f
 		if (result.isOk() == false) {
 			final LineLocation location = ((StringLocated) step.blocLines.getFirst()).getLocation();
 			final ErrorUml err = new ErrorUml(ErrorUmlType.EXECUTION_ERROR, result.getError(), result.getScore(),
-					location);
+					location, getUmlDiagramType());
 			sys = PSystemErrorUtils.buildV2(source, err, result.getDebugLines(), it.getTrace());
 		}
 		if (result.getNewDiagram() != null)

File: src/net/sourceforge/plantuml/error/PSystemErrorPreprocessor.java
Patch:
@@ -49,7 +49,7 @@ public PSystemErrorPreprocessor(List<StringLocated> input, List<StringLocated> t
 				DiagramType.getTypeFromArobaseStart(input.get(0).getString()) == DiagramType.UML));
 		this.trace = trace;
 		this.singleError = new ErrorUml(ErrorUmlType.SYNTAX_ERROR, getLastLine().getPreprocessorError(), 0,
-				getLastLine().getLocation());
+				getLastLine().getLocation(), null);
 
 	}
 

File: src/net/sourceforge/plantuml/picoweb/PicoWebServer.java
Patch:
@@ -269,7 +269,7 @@ public void handleRenderRequest(RenderRequest renderRequest, BufferedOutputStrea
 
 		if (ssr.getBlocks().size() == 0) {
 			system = PSystemErrorUtils.buildV2(null,
-					new ErrorUml(SYNTAX_ERROR, "No valid @start/@end found, please check the version", 0, new LineLocationImpl("", null)), null,
+					new ErrorUml(SYNTAX_ERROR, "No valid @start/@end found, please check the version", 0, new LineLocationImpl("", null), null), null,
 					Collections.<StringLocated>emptyList());
 			imageData = ssr.noValidStartFound(os, option.getFileFormatOption());
 		} else {

File: test/test/test/ApiV2CsvTest.java
Patch:
@@ -20,7 +20,7 @@ class ApiV2CsvTest {
 	@CsvSource({
 		// diagSource,                                                             error, diagramType, className,     description, nbImages, totalLineCount, errorLine, nbTitle, title
 		" '@startuml\nERROR\n@enduml',                                             Syntax Error?, UML, PSystemErrorV2,           (Error), 1, 3, 1, 0, ",
-		" '@startuml\nstart\n#zzblue:toto;\n@enduml',                              No such color, UML, PSystemErrorV2,           (Error), 1, 4, 2, 0, ",
+		" '@startuml\nstart\n#zzblue:toto;\n@enduml', No such color (Assumed diagram type: activity), UML, PSystemErrorV2,           (Error), 1, 4, 2, 0, ",
 		" '@startuml\nalice->bob:hello\n@enduml',                                               , UML, SequenceDiagram, (2 participants), 1, 3,  , 0, ",
 		" '@startuml\ntitle: this is the title\nalice->bob:hello\n@enduml',                     , UML, SequenceDiagram, (2 participants), 1, 4,  , 1, this is the title ",
 		" '@startuml\ntitle this is the title\nalice->bob:hello\ntitle another title\n@enduml', , UML, SequenceDiagram, (2 participants), 1, 5,  , 1, another title ",

File: test/test/test/ApiV2Test.java
Patch:
@@ -79,7 +79,7 @@ public void testError() throws IOException {
 	public void testError2() throws IOException {
 		final DiagramReturn result = DiagramUtils.exportDiagram("@startuml", "start", "#zzblue:toto;", "@enduml");
 		final Diagram diagram = result.getDiagram();
-		assertEquals("No such color", result.error());
+		assertEquals("No such color (Assumed diagram type: activity)", result.error());
 		assertNotNull(diagram);
 		assertEquals(DiagramType.UML, diagram.getSource().getDiagramType());
 		assertEquals("PSystemErrorV2", diagram.getClass().getSimpleName());

File: src/net/sourceforge/plantuml/svek/image/EntityImageJson.java
Patch:
@@ -88,7 +88,7 @@ public EntityImageJson(Entity entity, PortionShower portionShower) {
 		super(entity);
 		this.lineConfig = entity;
 		final Stereotype stereotype = entity.getStereotype();
-		this.roundCorner = getSkinParam().getRoundCorner(CornerParam.DEFAULT, null);
+		this.roundCorner = getStyle().value(PName.RoundCorner).asDouble();
 
 		final FontConfiguration fcHeader = getStyleHeader().getFontConfiguration(getSkinParam().getIHtmlColorSet());
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageMap.java
Patch:
@@ -92,7 +92,7 @@ public EntityImageMap(Entity entity, PortionShower portionShower) {
 		super(entity);
 		this.lineConfig = entity;
 		final Stereotype stereotype = entity.getStereotype();
-		this.roundCorner = getSkinParam().getRoundCorner(CornerParam.DEFAULT, null);
+		this.roundCorner = getStyle().value(PName.RoundCorner).asDouble();
 
 		final FontConfiguration fcHeader = getStyleHeader().getFontConfiguration(getSkinParam().getIHtmlColorSet());
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageObject.java
Patch:
@@ -95,7 +95,7 @@ public EntityImageObject(Entity entity, PortionShower portionShower) {
 		super(entity);
 		this.lineConfig = entity;
 		final Stereotype stereotype = entity.getStereotype();
-		this.roundCorner = getSkinParam().getRoundCorner(CornerParam.DEFAULT, null);
+		this.roundCorner = getStyle().value(PName.RoundCorner).asDouble();
 
 		final FontConfiguration fcHeader = getStyleHeader().getFontConfiguration(getSkinParam().getIHtmlColorSet());
 

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorForeach.java
Patch:
@@ -111,7 +111,7 @@ private void executeForeach(TMemory memory, StringLocated s) throws EaterExcepti
 		final EaterForeach condition = new EaterForeach(s);
 		condition.analyze(context, memory);
 		final ExecutionContextForeach foreach = ExecutionContextForeach.fromValue(condition.getVarname(),
-				condition.getJsonArray(), source.getCodePosition());
+				condition.getJsonValue(), source.getCodePosition());
 		if (condition.isSkip())
 			foreach.skipMeNow();
 		else
@@ -122,7 +122,7 @@ private void executeForeach(TMemory memory, StringLocated s) throws EaterExcepti
 
 	private void setLoopVariable(TMemory memory, ExecutionContextForeach foreach, StringLocated position)
 			throws EaterException {
-		final JsonValue first = foreach.getJsonArray().get(foreach.currentIndex());
+		final JsonValue first = foreach.currentValue();
 		memory.putVariable(foreach.getVarname(), TValue.fromJson(first), TVariableScope.GLOBAL, position);
 	}
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageClassHeader.java
Patch:
@@ -114,7 +114,7 @@ public EntityImageClassHeader(Entity entity, PortionShower portionShower) {
 		}
 
 		final TextBlock stereo;
-		List<String> stereotypeLabels = portionShower.getVisibleStereotypeLabels(entity);
+		final List<String> stereotypeLabels = portionShower.getVisibleStereotypeLabels(entity);
 		if (stereotype == null || stereotype.getLabel(Guillemet.DOUBLE_COMPARATOR) == null
 				|| stereotypeLabels.isEmpty())
 			stereo = null;

File: src/net/sourceforge/plantuml/BlockUml.java
Patch:
@@ -53,6 +53,7 @@
 import net.sourceforge.plantuml.code.TranscoderUtil;
 import net.sourceforge.plantuml.core.Diagram;
 import net.sourceforge.plantuml.error.PSystemErrorPreprocessor;
+import net.sourceforge.plantuml.jaws.Jaws;
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.preproc.FileWithSuffix;
@@ -145,7 +146,8 @@ public BlockUml(List<StringLocated> strings, Defines defines, ISkinSimple skinPa
 			final TimLoader timLoader = new TimLoader(mode.getImportedFiles(), defines, charset,
 					(DefinitionsContainer) mode, strings.get(0));
 			this.included.addAll(timLoader.load(strings));
-			this.data = timLoader.getResultList();
+			final Jaws jaws = new Jaws(timLoader.getResultList());
+			this.data = jaws.getResultList();
 			this.debug = timLoader.getDebug();
 			this.preprocessorError = timLoader.isPreprocessorError();
 		}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.9beta1";
+	private static final String version = "1.2024.9beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/classdiagram/command/CommandHideShowSpecificClass.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.atmp.CucaDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.NameAndCodeParser;
 import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -55,7 +56,8 @@ static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandHideShowSpecificClass.class.getName(), RegexLeaf.start(), //
 				new RegexLeaf("COMMAND", "(hide|show)"), //
 				RegexLeaf.spaceOneOrMore(), //
-				new RegexLeaf("CODE", "(" + CommandCreateClass.CODE + ")"), RegexLeaf.end());
+				NameAndCodeParser.codeForClass(), //
+				RegexLeaf.end());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNoteOnEntity.java
Patch:
@@ -221,7 +221,7 @@ public boolean isEligibleFor(ParserPass pass) {
 	private CommandExecutionResult executeInternal(RegexResult line0, AbstractEntityDiagram diagram, Url url,
 			BlocLines strings) throws NoSuchColorException {
 		final String pos = line0.get("POSITION", 0);
-		final String idShort = diagram.cleanId(line0.get("ENTITY", 0));
+		final String idShort = diagram.cleanId(line0.get("CODE", 0));
 		final Entity cl1;
 		if (idShort == null) {
 			cl1 = diagram.getLastEntity();

File: src/net/sourceforge/plantuml/command/note/SingleMultiFactoryCommand.java
Patch:
@@ -38,8 +38,8 @@
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.core.Diagram;
 
-public interface SingleMultiFactoryCommand<D extends Diagram> {
 
+public interface SingleMultiFactoryCommand<D extends Diagram> {
 	public Command<D> createSingleLine();
 
 	public Command<D> createMultiLine(boolean withBracket);

File: src/net/sourceforge/plantuml/descdiagram/DescriptionDiagramFactory.java
Patch:
@@ -96,7 +96,7 @@ protected void initCommandsList(List<Command> cmds) {
 		cmds.add(factoryNoteOnLinkCommand.createMultiLine(false));
 
 		final CommandFactoryNoteOnEntity factoryNoteOnEntityCommand = new CommandFactoryNoteOnEntity("desc",
-				new RegexOr("ENTITY", //
+				new RegexOr("CODE", //
 						new RegexLeaf("[%pLN_.]+"), //
 						new RegexLeaf("\\(\\)[%s]*[%pLN_.]+"), //
 						new RegexLeaf("\\(\\)[%s]*[%g][^%g]+[%g]"), //

File: src/net/sourceforge/plantuml/statediagram/StateDiagramFactory.java
Patch:
@@ -88,7 +88,7 @@ protected void initCommandsList(List<Command> cmds) {
 		cmds.add(new CommandConcurrentState());
 
 		final CommandFactoryNoteOnEntity factoryNoteOnEntityCommand = new CommandFactoryNoteOnEntity("state",
-				new RegexOr("ENTITY", new RegexLeaf("[%pLN_.]+"), //
+				new RegexOr("CODE", new RegexLeaf("[%pLN_.]+"), //
 						new RegexLeaf("[%g][^%g]+[%g]") //
 				), ParserPass.THREE);
 		cmds.add(factoryNoteOnEntityCommand.createMultiLine(true));

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.8beta7";
+	private static final String version = "1.2024.8beta8";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/tim/TContext.java
Patch:
@@ -69,6 +69,7 @@
 import net.sourceforge.plantuml.security.SURL;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
+import net.sourceforge.plantuml.theme.Theme;
 import net.sourceforge.plantuml.theme.ThemeUtils;
 import net.sourceforge.plantuml.tim.expression.Knowledge;
 import net.sourceforge.plantuml.tim.expression.TValue;
@@ -631,7 +632,7 @@ private void executeIncludeDef(TMemory memory, StringLocated s) throws EaterExce
 	private void executeTheme(TMemory memory, StringLocated s) throws EaterException {
 		final EaterTheme eater = new EaterTheme(s.getTrimmed(), importedFiles);
 		eater.analyze(this, memory);
-		final ReadLine reader = eater.getTheme();
+		final Theme reader = eater.getTheme();
 		if (reader == null)
 			throw new EaterException("No such theme " + eater.getName(), s);
 

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreateState.java
Patch:
@@ -137,6 +137,8 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 			ent = diagram.reallyCreateLeaf(quark, Display.getWithNewlines(display), type, null);
 		else
 			diagram.setLastEntity(ent);
+		
+		diagram.ensureParentState(quark);
 
 		if (currentPass == ParserPass.ONE) {
 

File: src/net/sourceforge/plantuml/klimt/geom/MinMax.java
Patch:
@@ -154,11 +154,11 @@ public XDimension2D getDimension() {
 
 	// ::comment when __HAXE__
 	public void drawGray(UGraphic ug) {
-		draw(ug, HColors.GRAY);
+		draw(ug, HColors.GRAY, HColors.GRAY);
 	}
 
-	public void draw(UGraphic ug, HColor color) {
-		ug = ug.apply(color).apply(color.bg());
+	public void draw(UGraphic ug, HColor borderColor, HColor backgroundColor) {
+		ug = ug.apply(borderColor).apply(backgroundColor.bg());
 		ug = ug.apply(new UTranslate(minX, minY));
 		ug.draw(URectangle.build(getWidth(), getHeight()));
 	}

File: src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java
Patch:
@@ -247,6 +247,7 @@ public String toString() {
 		addConvert("lifelineStrategy", PName.LineStyle, SName.lifeLine);
 		addConvert("wrapWidth", PName.MaximumWidth, SName.element);
 		addConvert("HyperlinkUnderline", PName.HyperlinkUnderlineThickness, SName.element);
+		addConvert("StereotypeAlignment", PName.HorizontalAlignment, SName.stereotype);
 
 	}
 

File: src/net/sourceforge/plantuml/svek/Cluster.java
Patch:
@@ -349,10 +349,11 @@ public void drawU(UGraphic ug) {
 					group.getUSymbol(), skinParam.getCurrentStyleBuilder(), skinParam.getIHtmlColorSet(),
 					group.getGroupType());
 
-			final HorizontalAlignment horizontalAlignment = skinParam
-					.getHorizontalAlignment(AlignmentParam.packageTitleAlignment, null, false, null);
 			final ClusterDecoration decoration = new ClusterDecoration(packageStyle, group.getUSymbol(),
 					clusterHeader.getTitle(), clusterHeader.getStereo(), rectangleArea, stroke);
+//			final HorizontalAlignment horizontalAlignment = skinParam
+//			.getHorizontalAlignment(AlignmentParam.packageTitleAlignment, null, false, null);
+			final HorizontalAlignment horizontalAlignment = clusterHeader.getTitleHorizontalAlignment();
 
 			decoration.drawU(ug, backColor, borderColor, shadowing, rounded, horizontalAlignment,
 					skinParam.getStereotypeAlignment(), diagonalCorner);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vertical/FtileDiamondWIP.java
Patch:
@@ -89,7 +89,7 @@ final public Collection<Ftile> getMyChildren() {
 	protected FtileDiamondWIP(TextBlock label, ISkinParam skinParam, HColor backColor, HColor borderColor,
 			Swimlane swimlane, TextBlock north, TextBlock south, TextBlock east, TextBlock west) {
 		super(skinParam);
-		Style style = getStyleSignature().getMergedStyle(skinParam.getCurrentStyleBuilder());
+		final Style style = getStyleSignature().getMergedStyle(skinParam.getCurrentStyleBuilder());
 		this.borderColor = borderColor;
 		this.backColor = backColor;
 		this.shadowing = style.value(PName.Shadowing).asDouble();

File: src/net/sourceforge/plantuml/jsondiagram/TextBlockJson.java
Patch:
@@ -305,11 +305,11 @@ public void drawU(final UGraphic ug) {
 				ugline.draw(ULine.hline(trueWidth));
 
 			final HorizontalAlignment horizontalAlignment = styleNode.getHorizontalAlignment();
-			horizontalAlignment.draw(ugline, line.b1, 0, widthColA);
+			horizontalAlignment.draw(ugline, line.b1, 0, 0, widthColA);
 
 			if (line.b2 != null) {
 				final UGraphic uglineColB = ugline.apply(UTranslate.dx(widthColA));
-				horizontalAlignment.draw(uglineColB, line.b2, 0, widthColB);
+				horizontalAlignment.draw(uglineColB, line.b2, 0, 0, widthColB);
 				uglineColB.draw(ULine.vline(heightOfRow));
 			}
 
@@ -326,7 +326,7 @@ private double getTotalHeight(StringBounder stringBounder) {
 
 		if (height == 0)
 			return MIN_HEIGHT;
-		
+
 		return height;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.8beta6";
+	private static final String version = "1.2024.8beta7";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/abel/Entity.java
Patch:
@@ -606,7 +606,8 @@ public TextBlock getStateHeader(ISkinParam skinParam) {
 			else
 				display = display.addAll(Display.getWithNewlines(s.toString()));
 
-		return display.create(fontConfiguration, HorizontalAlignment.LEFT, skinParam);
+		final HorizontalAlignment horizontalAlignment = style.getHorizontalAlignment();
+		return display.create(fontConfiguration, horizontalAlignment, skinParam);
 
 	}
 

File: src/net/sourceforge/plantuml/svek/GroupMakerState.java
Patch:
@@ -171,8 +171,9 @@ public IEntityImage getImage() {
 
 		final HColor bodyColor = styleBody.value(PName.BackGroundColor).asColor(skinParam.getIHtmlColorSet());
 		final boolean withSymbol = group.getStereotype() != null && group.getStereotype().isWithOOSymbol();
-		return new InnerStateAutonom(image, title, group.getStateHeader(skinParam), borderColor, backColor,
-				group.getUrl99(), withSymbol, stroke, rounded, shadowing, bodyColor);
+		final TextBlock stateHeader = group.getStateHeader(skinParam);
+		return new InnerStateAutonom(image, title, stateHeader, borderColor, backColor, group.getUrl99(), withSymbol,
+				stroke, rounded, shadowing, bodyColor);
 
 	}
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageState.java
Patch:
@@ -79,7 +79,8 @@ public EntityImageState(Entity entity, ISkinParam skinParam) {
 		final FontConfiguration fieldsFontConfiguration = getStyleStateHeader()
 				.getFontConfiguration(getSkinParam().getIHtmlColorSet());
 
-		this.fields = list.create8(fieldsFontConfiguration, HorizontalAlignment.LEFT, skinParam, CreoleMode.FULL,
+		final HorizontalAlignment horizontalAlignment = getStyleStateHeader().getHorizontalAlignment();
+		this.fields = list.create8(fieldsFontConfiguration, horizontalAlignment, skinParam, CreoleMode.FULL,
 				getStyleState().wrapWidth());
 
 	}

File: src/net/sourceforge/plantuml/svek/image/EntityImageStateCommon.java
Patch:
@@ -70,7 +70,8 @@ public EntityImageStateCommon(Entity entity, ISkinParam skinParam) {
 		final FontConfiguration titleFontConfiguration = getStyleStateTitle(entity, skinParam)
 				.getFontConfiguration(getSkinParam().getIHtmlColorSet(), entity.getColors());
 
-		this.title = entity.getDisplay().create8(titleFontConfiguration, HorizontalAlignment.CENTER, skinParam,
+		final HorizontalAlignment horizontalAlignment = getStyleState(entity, skinParam).getHorizontalAlignment();
+		this.title = entity.getDisplay().create8(titleFontConfiguration, horizontalAlignment, skinParam,
 				CreoleMode.FULL, getStyleState().wrapWidth());
 		this.url = entity.getUrl99();
 

File: src/net/sourceforge/plantuml/filesdiagram/FEntry.java
Patch:
@@ -147,7 +147,7 @@ private TextBlock getTextBlock(FontConfiguration fontConfiguration, ISkinParam s
 
 	private Opale createOpale(ISkinParam skinParam) {
 
-		final StyleSignatureBasic signature = StyleSignatureBasic.of(SName.root, SName.element, SName.timingDiagram,
+		final StyleSignatureBasic signature = StyleSignatureBasic.of(SName.root, SName.element, SName.filesDiagram,
 				SName.note);
 		final Style style = signature.getMergedStyle(skinParam.getCurrentStyleBuilder());
 

File: src/net/sourceforge/plantuml/filesdiagram/FilesListing.java
Patch:
@@ -39,20 +39,20 @@
 import net.sourceforge.plantuml.klimt.drawing.UGraphic;
 import net.sourceforge.plantuml.klimt.font.FontConfiguration;
 import net.sourceforge.plantuml.klimt.font.StringBounder;
-import net.sourceforge.plantuml.klimt.font.UFont;
 import net.sourceforge.plantuml.klimt.geom.XDimension2D;
 import net.sourceforge.plantuml.klimt.shape.AbstractTextBlock;
 import net.sourceforge.plantuml.style.ISkinParam;
 
 public class FilesListing extends AbstractTextBlock {
 
 	private final ISkinParam skinParam;
-	private final FontConfiguration fontConfiguration = FontConfiguration.blackBlueTrue(UFont.courier(14));
+	private final FontConfiguration fontConfiguration;
 	private final FEntry root;
 	private FEntry lastCreated;
 
-	public FilesListing(ISkinParam skinParam) {
+	public FilesListing(ISkinParam skinParam, FontConfiguration fontConfiguration) {
 		this.skinParam = skinParam;
+		this.fontConfiguration = fontConfiguration;
 		this.root = FEntry.createRoot();
 	}
 

File: src/net/sourceforge/plantuml/jsondiagram/StyleExtractor.java
Patch:
@@ -39,8 +39,6 @@
 import java.util.Iterator;
 import java.util.List;
 
-import net.sourceforge.plantuml.Scale;
-import net.sourceforge.plantuml.ScaleSimple;
 import net.sourceforge.plantuml.style.ISkinParam;
 import net.sourceforge.plantuml.style.Style;
 import net.sourceforge.plantuml.style.StyleBuilder;

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -87,6 +87,7 @@ public enum SName {
 	start, //
 	stop, //
 	file, //
+	filesDiagram, //
 	folder, //
 	footer, //
 	frame, //

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -53,6 +53,7 @@ public enum SName {
 	business, //
 	caption, //
 	card, //
+	cardinality, //
 	circle, //
 	classDiagram, //
 	class_, //
@@ -97,7 +98,8 @@ public enum SName {
 	hexagon, //
 	highlight, //
 	interface_, //
-	json, jsonDiagram, //
+	json, // 
+	jsonDiagram, //
 	gitDiagram, //
 	label, //
 	leafNode, //

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -90,6 +90,7 @@ public enum SName {
 	footer, //
 	frame, //
 	ganttDiagram, //
+	generic, //
 	group, //
 	groupHeader, //
 	header, //
@@ -119,6 +120,7 @@ public enum SName {
 	person, //
 	port, //
 	process, //
+	qualified, //
 	queue, //
 	rectangle, //
 	reference, //

File: src/net/sourceforge/plantuml/svek/SvekEdge.java
Patch:
@@ -232,11 +232,11 @@ public SvekEdge(Link link, ISkinParam skinParam, StringBounder stringBounder, Fo
 		// ::done
 
 		if (link.getLinkArg().getKal1() != null)
-			this.kal1 = new Kal(this, link.getLinkArg().getKal1(), font, skinParam, (Entity) link.getEntity1(), link,
+			this.kal1 = new Kal(this, link.getLinkArg().getKal1(), skinParam, (Entity) link.getEntity1(), link,
 					stringBounder);
 
 		if (link.getLinkArg().getKal2() != null)
-			this.kal2 = new Kal(this, link.getLinkArg().getKal2(), font, skinParam, (Entity) link.getEntity2(), link,
+			this.kal2 = new Kal(this, link.getLinkArg().getKal2(), skinParam, (Entity) link.getEntity2(), link,
 					stringBounder);
 
 		this.useRankSame = skinParam.useRankSame();

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandNoteLong3.java
Patch:
@@ -75,8 +75,6 @@ public String getPatternEnd() {
 	@Override
 	protected CommandExecutionResult executeNow(final ActivityDiagram3 diagram, BlocLines lines, ParserPass currentPass)
 			throws NoSuchColorException {
-		// final List<? extends CharSequence> in =
-		// StringUtils.removeEmptyColumns2(lines.subList(1, lines.size() - 1));
 		final RegexResult line0 = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());
 		lines = lines.subExtract(1, 1);
 		lines = lines.removeEmptyColumns();

File: src/net/sourceforge/plantuml/chronology/TaskChronology.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.project.lang.CenterBorderColor;
 import net.sourceforge.plantuml.project.time.Day;
 import net.sourceforge.plantuml.project.time.DayOfWeek;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.StyleBuilder;
 import net.sourceforge.plantuml.url.Url;
 
@@ -352,7 +353,7 @@ public void setColors(CenterBorderColor... colors) {
 //	}
 
 	@Override
-	public void setNote(Display note) {
+	public void setNote(Display note, Stereotype stereotype) {
 		this.note = note;
 	}
 

File: src/net/sourceforge/plantuml/project/core/Task.java
Patch:
@@ -76,7 +76,7 @@ public interface Task extends Moment {
 
 	public void addPause(DayOfWeek pause);
 
-	public void setNote(Display note);
+	public void setNote(Display note, Stereotype stereotype);
 
 	public StyleBuilder getStyleBuilder();
 

File: src/net/sourceforge/plantuml/project/core/TaskGroup.java
Patch:
@@ -43,6 +43,7 @@
 import net.sourceforge.plantuml.project.lang.CenterBorderColor;
 import net.sourceforge.plantuml.project.time.Day;
 import net.sourceforge.plantuml.project.time.DayOfWeek;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.StyleBuilder;
 import net.sourceforge.plantuml.url.Url;
 
@@ -143,7 +144,7 @@ public void addPause(DayOfWeek pause) {
 	}
 
 	@Override
-	public void setNote(Display note) {
+	public void setNote(Display note, Stereotype stereotype) {
 	}
 
 	public void addTask(Task child) {

File: src/net/sourceforge/plantuml/project/core/TaskSeparator.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.project.lang.CenterBorderColor;
 import net.sourceforge.plantuml.project.time.Day;
 import net.sourceforge.plantuml.project.time.DayOfWeek;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.StyleBuilder;
 import net.sourceforge.plantuml.url.Url;
 
@@ -126,7 +127,7 @@ public void addPause(DayOfWeek pause) {
 	}
 
 	@Override
-	public void setNote(Display note) {
+	public void setNote(Display note, Stereotype stereotype) {
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/draw/TaskDraw.java
Patch:
@@ -44,14 +44,15 @@
 import net.sourceforge.plantuml.project.core.TaskAttribute;
 import net.sourceforge.plantuml.project.lang.CenterBorderColor;
 import net.sourceforge.plantuml.real.Real;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.url.Url;
 import net.sourceforge.plantuml.utils.Direction;
 
 public interface TaskDraw extends UDrawable {
 
 	public TaskDraw getTrueRow();
 
-	public void setColorsAndCompletion(CenterBorderColor colors, int completion, Url url, Display note);
+	public void setColorsAndCompletion(CenterBorderColor colors, int completion, Url url, Display note, Stereotype noteStereotype);
 
 	public Real getY(StringBounder stringBounder);
 

File: src/net/sourceforge/plantuml/project/draw/TaskDrawRegular.java
Patch:
@@ -199,6 +199,7 @@ public double getHeightMax(StringBounder stringBounder) {
 
 	private Opale getOpaleNote() {
 		final Style style = StyleSignatureBasic.of(SName.root, SName.element, SName.ganttDiagram, SName.note)
+				.withTOBECHANGED(noteStereotype)
 				.getMergedStyle(getStyleBuilder());
 
 		final FontConfiguration fc = style.getFontConfiguration(getColorSet());

File: src/net/sourceforge/plantuml/project/draw/TaskDrawSeparator.java
Patch:
@@ -55,6 +55,7 @@
 import net.sourceforge.plantuml.project.time.Day;
 import net.sourceforge.plantuml.project.timescale.TimeScale;
 import net.sourceforge.plantuml.real.Real;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft;
 import net.sourceforge.plantuml.style.PName;
 import net.sourceforge.plantuml.style.SName;
@@ -203,7 +204,7 @@ public TaskDraw getTrueRow() {
 	}
 
 	@Override
-	public void setColorsAndCompletion(CenterBorderColor colors, int completion, Url url, Display note) {
+	public void setColorsAndCompletion(CenterBorderColor colors, int completion, Url url, Display note, Stereotype noteStereotype) {
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagram.java
Patch:
@@ -300,9 +300,9 @@ public CommandExecutionResult createRobustConcise(String code, String full, Timi
 	}
 
 	public CommandExecutionResult createClock(String code, String full, int period, int pulse, int offset,
-			boolean compact) {
+			boolean compact, Stereotype stereotype) {
 		final PlayerClock player = new PlayerClock(full, getSkinParam(), ruler, period, pulse, offset,
-				compactByDefault);
+				compactByDefault, stereotype);
 		players.put(code, player);
 		clocks.put(code, player);
 		final TimeTick tick = new TimeTick(new BigDecimal(period), TimingFormat.DECIMAL);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandNote3.java
Patch:
@@ -75,7 +75,6 @@ static IRegex getRegexConcat() {
 				RegexLeaf.spaceZeroOrMore(), //
 				new RegexLeaf("TAGS", Stereotag.pattern() + "?"), //
 				StereotypePattern.optional("STEREO"), //
-				ColorParser.exp1(), //
 				new RegexLeaf(":"), //
 				RegexLeaf.spaceZeroOrMore(), //
 				new RegexLeaf("NOTE", "(.*)"), //

File: src/net/sourceforge/plantuml/timingdiagram/Player.java
Patch:
@@ -111,7 +111,7 @@ final protected TextBlock getTitle() {
 		return title.create(getFontConfiguration(), HorizontalAlignment.LEFT, skinParam);
 	}
 
-	public abstract void addNote(TimeTick now, Display note, Position position);
+	public abstract void addNote(TimeTick now, Display note, Position position, Stereotype stereotype);
 
 	public abstract void defineState(String stateCode, String label);
 

File: src/net/sourceforge/plantuml/timingdiagram/PlayerAnalog.java
Patch:
@@ -142,7 +142,7 @@ private double getValueAt(StringBounder stringBounder, TimeTick tick) {
 	}
 
 	@Override
-	public void addNote(TimeTick now, Display note, Position position) {
+	public void addNote(TimeTick now, Display note, Position position, Stereotype stereotype) {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/timingdiagram/PlayerBinary.java
Patch:
@@ -104,10 +104,10 @@ public IntricatedPoint getTimeProjection(StringBounder stringBounder, TimeTick t
 	}
 
 	@Override
-	public void addNote(TimeTick now, Display note, Position position) {
-		final StyleSignatureBasic signature = StyleSignatureBasic.of(SName.root, SName.element, SName.timingDiagram,
+	public void addNote(TimeTick now, Display note, Position position, Stereotype stereotype) {
+		final StyleSignature signature = StyleSignatureBasic.of(SName.root, SName.element, SName.timingDiagram,
 				SName.note);
-		final Style style = signature.getMergedStyle(skinParam.getCurrentStyleBuilder());
+		final Style style = signature.withTOBECHANGED(stereotype).getMergedStyle(skinParam.getCurrentStyleBuilder());
 
 		this.notes.add(new TimingNote(now, this, note, position, skinParam, style));
 	}

File: src/net/sourceforge/plantuml/timingdiagram/PlayerClock.java
Patch:
@@ -48,6 +48,7 @@
 import net.sourceforge.plantuml.klimt.shape.UDrawable;
 import net.sourceforge.plantuml.klimt.shape.ULine;
 import net.sourceforge.plantuml.skin.ArrowConfiguration;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;
 import net.sourceforge.plantuml.style.SName;
 import net.sourceforge.plantuml.style.StyleSignatureBasic;
@@ -99,7 +100,7 @@ public IntricatedPoint getTimeProjection(StringBounder stringBounder, TimeTick t
 	}
 
 	@Override
-	public void addNote(TimeTick now, Display note, Position position) {
+	public void addNote(TimeTick now, Display note, Position position, Stereotype stereotype) {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/timingdiagram/PlayerRobustConcise.java
Patch:
@@ -219,11 +219,11 @@ public final IntricatedPoint getTimeProjection(StringBounder stringBounder, Time
 	}
 
 	@Override
-	public final void addNote(TimeTick now, Display note, Position position) {
+	public final void addNote(TimeTick now, Display note, Position position, Stereotype stereotype) {
 
-		final StyleSignatureBasic signature = StyleSignatureBasic.of(SName.root, SName.element, SName.timingDiagram,
+		final StyleSignature signature = StyleSignatureBasic.of(SName.root, SName.element, SName.timingDiagram,
 				SName.note);
-		final Style style = signature.getMergedStyle(skinParam.getCurrentStyleBuilder());
+		final Style style = signature.withTOBECHANGED(stereotype).getMergedStyle(skinParam.getCurrentStyleBuilder());
 
 		this.notes.add(new TimingNote(now, this, note, position, skinParam, style));
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -486,8 +486,9 @@ public void setColorNextArrow(Rainbow color) {
 		setNextLink(link);
 	}
 
-	public CommandExecutionResult addNote(Display note, NotePosition position, NoteType type, Colors colors) {
-		final boolean ok = current().addNote(note, position, type, colors, swinlanes.getCurrentSwimlane());
+	public CommandExecutionResult addNote(Display note, NotePosition position, NoteType type, Colors colors,
+			Stereotype stereotype) {
+		final boolean ok = current().addNote(note, position, type, colors, swinlanes.getCurrentSwimlane(), stereotype);
 		if (ok == false)
 			return CommandExecutionResult.error("Cannot add note here");
 

File: src/net/sourceforge/plantuml/activitydiagram3/Branch.java
Patch:
@@ -122,8 +122,8 @@ public boolean kill() {
 		return list.kill();
 	}
 
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
-		return list.addNote(note, position, type, colors, swimlaneNote);
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
+		return list.addNote(note, position, type, colors, swimlaneNote, stereotype);
 	}
 
 	public final void setInlinkRendering(LinkRendering inlinkRendering) {

File: src/net/sourceforge/plantuml/activitydiagram3/Instruction.java
Patch:
@@ -46,6 +46,7 @@
 import net.sourceforge.plantuml.klimt.font.StringBounder;
 import net.sourceforge.plantuml.sequencediagram.NotePosition;
 import net.sourceforge.plantuml.sequencediagram.NoteType;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;
 
 public interface Instruction extends Swimable {
@@ -62,7 +63,7 @@ public interface Instruction extends Swimable {
 
 	public LinkRendering getInLinkRendering();
 
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote);
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype);
 
 	public boolean containsBreak();
 

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionIf.java
Patch:
@@ -223,11 +223,11 @@ public LinkRendering getInLinkRendering() {
 	}
 
 	@Override
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
 		if (endifCalled || current.isEmpty())
-			return super.addNote(note, position, type, colors, swimlaneNote);
+			return super.addNote(note, position, type, colors, swimlaneNote, stereotype);
 		else
-			return current.addNote(note, position, type, colors, swimlaneNote);
+			return current.addNote(note, position, type, colors, swimlaneNote, stereotype);
 
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionPartition.java
Patch:
@@ -45,6 +45,7 @@
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.sequencediagram.NotePosition;
 import net.sourceforge.plantuml.sequencediagram.NoteType;
+import net.sourceforge.plantuml.stereo.Stereotype;
 
 public class InstructionPartition extends AbstractInstruction implements Instruction {
 
@@ -87,7 +88,7 @@ public LinkRendering getInLinkRendering() {
 		return list.getInLinkRendering();
 	}
 
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionRepeat.java
Patch:
@@ -214,11 +214,11 @@ public LinkRendering getInLinkRendering() {
 	}
 
 	@Override
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
 		if (Display.isNull(backward))
-			return repeatList.addNote(note, position, type, colors, swimlaneNote);
+			return repeatList.addNote(note, position, type, colors, swimlaneNote, stereotype);
 
-		this.backwardNotes.add(new PositionedNote(note, position, type, swimlaneNote, colors));
+		this.backwardNotes.add(new PositionedNote(note, position, type, swimlaneNote, colors, stereotype));
 		return true;
 
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionSplit.java
Patch:
@@ -53,6 +53,7 @@
 import net.sourceforge.plantuml.klimt.font.StringBounder;
 import net.sourceforge.plantuml.sequencediagram.NotePosition;
 import net.sourceforge.plantuml.sequencediagram.NoteType;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;
 
 public class InstructionSplit extends AbstractInstruction implements Instruction {
@@ -150,8 +151,8 @@ public LinkRendering getInLinkRendering() {
 	}
 
 	@Override
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
-		return getLast().addNote(note, position, type, colors, swimlaneNote);
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
+		return getLast().addNote(note, position, type, colors, swimlaneNote, stereotype);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionWhile.java
Patch:
@@ -160,11 +160,11 @@ public void outColor(Rainbow rainbow) {
 	}
 
 	@Override
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
 		if (repeatList.isEmpty())
-			return super.addNote(note, position, type, colors, swimlaneNote);
+			return super.addNote(note, position, type, colors, swimlaneNote, stereotype);
 		else
-			return repeatList.addNote(note, position, type, colors, swimlaneNote);
+			return repeatList.addNote(note, position, type, colors, swimlaneNote, stereotype);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/activitydiagram3/WithNote.java
Patch:
@@ -47,13 +47,14 @@
 import net.sourceforge.plantuml.klimt.geom.VerticalAlignment;
 import net.sourceforge.plantuml.sequencediagram.NotePosition;
 import net.sourceforge.plantuml.sequencediagram.NoteType;
+import net.sourceforge.plantuml.stereo.Stereotype;
 
 abstract class WithNote extends AbstractInstruction {
 
 	private final Collection<PositionedNote> notes = new ArrayList<>();
 
-	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote) {
-		this.notes.add(new PositionedNote(note, position, type, swimlaneNote, colors));
+	public boolean addNote(Display note, NotePosition position, NoteType type, Colors colors, Swimlane swimlaneNote, Stereotype stereotype) {
+		this.notes.add(new PositionedNote(note, position, type, swimlaneNote, colors, stereotype));
 		return true;
 	}
 

File: src/net/sourceforge/plantuml/klimt/drawing/svg/SvgGraphics.java
Patch:
@@ -1071,8 +1071,9 @@ public void openLink(String url, String title, String target) {
 		if (SecurityUtils.ignoreThisLink(url))
 			return;
 
-//		if (pendingAction.size() > 0)
-//			closeLink();
+		// https://github.com/plantuml/plantuml/issues/1951
+		if (pendingAction.size() > 0)
+			closeLink();
 
 		pendingAction.add(0, (Element) document.createElement("a"));
 		pendingAction.get(0).setAttribute("target", target);

File: src/net/sourceforge/plantuml/command/ProtectedCommand.java
Patch:
@@ -57,7 +57,7 @@ public CommandExecutionResult execute(S system, BlocLines lines, ParserPass curr
 			final CommandExecutionResult result = cmd.execute(system, lines, currentPass);
 			// if (result.isOk()) {
 			// // TRACECOMMAND
-			System.err.println("CMD = " + cmd.getClass() + " " + currentPass);
+			// System.err.println("CMD = " + cmd.getClass() + " " + currentPass);
 			// }
 			return result;
 		} catch (Throwable t) {

File: src/net/sourceforge/plantuml/abel/Entity.java
Patch:
@@ -160,7 +160,7 @@ private Entity(Quark<Entity> quark, CucaDiagram diagram, Bodier bodier, int rawL
 		if (quark.isRoot())
 			this.uid = "clroot";
 		else
-			this.uid = StringUtils.getUid("cl", diagram.getUniqueSequence());
+			this.uid = StringUtils.getUid("cl", diagram.getUniqueSequenceValue());
 		this.bodier = bodier;
 		this.rawLayout = rawLayout;
 		this.quark.setData(this);

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -128,7 +128,7 @@ public Link(CucaDiagram cucaDiagram, StyleBuilder styleBuilder, Entity cl1, Enti
 		this.cl2 = Objects.requireNonNull(cl2);
 
 		this.type = type;
-		this.uid = "LNK" + cucaDiagram.getUniqueSequence();
+		this.uid = "LNK" + cucaDiagram.getUniqueSequence("");
 
 		this.linkArg = linkArg;
 

File: src/net/sourceforge/plantuml/activitydiagram/ActivityDiagram.java
Patch:
@@ -63,7 +63,7 @@ public ActivityDiagram(UmlSource source, Map<String, String> skinParam) {
 	}
 
 	private String getAutoBranch() {
-		return "#" + this.getUniqueSequence();
+		return "#" + this.getUniqueSequence("");
 	}
 
 	public void startIf(String optionalCodeString) {
@@ -139,7 +139,7 @@ public final void setLastEntityConsulted(Entity lastEntityConsulted) {
 
 	public Entity createInnerActivity() {
 
-		final String idShort = "##" + this.getUniqueSequence();
+		final String idShort = "##" + this.getUniqueSequence("");
 
 		final Quark<Entity> quark = quarkInContext(true, idShort);
 		gotoGroup(quark, Display.getWithNewlines(quark.getName()), GroupType.INNER_ACTIVITY);
@@ -155,7 +155,7 @@ public void concurrentActivity(String name) {
 		if (getCurrentGroup().getGroupType() == GroupType.CONCURRENT_ACTIVITY)
 			endGroup();
 
-		final String idShort = "##" + this.getUniqueSequence();
+		final String idShort = "##" + this.getUniqueSequence("");
 
 		if (getCurrentGroup().getGroupType() != GroupType.INNER_ACTIVITY)
 			throw new IllegalStateException("type=" + getCurrentGroup().getGroupType());

File: src/net/sourceforge/plantuml/activitydiagram/ActivityDiagramFactory.java
Patch:
@@ -51,6 +51,7 @@
 import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.CommonCommands;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteActivity;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -77,7 +78,7 @@ protected void initCommandsList(List<Command> cmds) {
 		cmds.add(factoryNoteActivityCommand.createSingleLine());
 		cmds.add(factoryNoteActivityCommand.createMultiLine(false));
 
-		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink();
+		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink(ParserPass.ONE);
 		cmds.add(factoryNoteOnLinkCommand.createSingleLine());
 		cmds.add(factoryNoteOnLinkCommand.createMultiLine(false));
 

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandElse.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (system.getLastEntityConsulted() == null) {
 			return CommandExecutionResult.error("No if for this else");
 		}

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandEndPartition.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean result = diagram.endGroup();
 		if (result == false)
 			return CommandExecutionResult.error("No partition defined");

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandEndif.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (diagram.getLastEntityConsulted() == null) {
 			return CommandExecutionResult.error("No if for this endif");
 		}

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandIf.java
Patch:
@@ -42,6 +42,7 @@
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -93,7 +94,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Entity entity1 = CommandLinkActivity.getEntity(diagram, arg, true);
 		if (entity1 == null)
 			return CommandExecutionResult.error("No if possible at this point");

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandInnerConcurrent.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (diagram.getCurrentGroup().isRoot()) {
 			return CommandExecutionResult.error("No inner activity");
 		}

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandLinkActivity.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -117,7 +118,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final Entity entity1 = getEntity(diagram, arg, true);
 

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandPartition.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.abel.GroupType;
 import net.sourceforge.plantuml.activitydiagram.ActivityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -80,7 +81,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(arg.get("NAME", 0)));
 

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandActivity3.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -117,7 +118,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		final Url url;

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandActivityLegacy1.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.Colors;
 import net.sourceforge.plantuml.klimt.creole.Display;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.addActivity(Display.getWithNewlines(arg.get("LABEL", 0)), BoxStyle.PLAIN, null, Colors.empty(),
 				null);
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandArrow3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.Rainbow;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
@@ -68,7 +69,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		final String colorString = arg.get("COLOR", 0);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandBackward3.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.activitydiagram3.LinkRendering;
 import net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.Rainbow;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
@@ -87,7 +88,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final BoxStyle boxStyle;
 		final String styleString = arg.get("STYLE", 0);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandBreak.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.breakInstruction();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandCase.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		String test = arg.get("TEST", 0);
 		if (test.length() == 0) {
 			test = null;

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandCircleSpot3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandElse3.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.LinkRendering;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -72,7 +73,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		// if (getSystem().getLastEntityConsulted() == null) {
 		// return CommandExecutionResult.error("No if for this endif");

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandElseIf2.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.LinkRendering;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
@@ -96,7 +97,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandElseIf3.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.LinkRendering;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
@@ -101,7 +102,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandElseLegacy1.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.LinkRendering;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -65,7 +66,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// if (getSystem().getLastEntityConsulted() == null) {
 		// return CommandExecutionResult.error("No if for this endif");
 		// }

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandEnd3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.end();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandEndPartition3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// final IEntity currentPackage = diagram.getCurrentGroup();
 		// if (currentPackage == null) {
 		// return CommandExecutionResult.error("No partition defined");

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandEndSwitch.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.endSwitch();
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandEndif3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// if (getSystem().getLastEntityConsulted() == null) {
 		// return CommandExecutionResult.error("No if for this endif");
 		// }

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandFork3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.fork();
 
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandForkAgain3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.forkAgain();
 
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandForkEnd3.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.ForkStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -79,7 +80,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String style = arg.get("STYLE", 0);
 		final ForkStyle forkStyle = style.contains("merge") ? ForkStyle.MERGE : ForkStyle.FORK;
 		final String label = arg.get("LABEL", 0);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandGoto.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String name = arg.get("NAME", 0);
 		return diagram.addGoto(name);
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandGroupEnd3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.endGroup();
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandIf2.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -81,7 +82,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandIf4.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -76,7 +77,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandIfLegacy1.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -69,7 +70,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		diagram.startIf(Display.getWithNewlines(arg.get("TEST", 0)), Display.getWithNewlines(arg.get("WHEN", 0)), null,
 				null, null);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandKill3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.kill();
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandLabel.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final String name = arg.get("NAME", 0);
 		return diagram.addLabel(name);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandLink3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.Rainbow;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandNolink.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// diagram.setColorNextArrow(color);
 		diagram.setLabelNextArrow(Display.getWithNewlines("NOLINK"));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandNote3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -76,7 +77,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final Colors colors = color().getColor(arg, diagram.getSkinParam().getIHtmlColorSet());
 		final Display note = Display.getWithNewlines(arg.get("NOTE", 0));

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandPartition3.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbol;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
@@ -107,7 +108,7 @@ private static ColorParser color(String id) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String partitionTitle = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.get("NAME", 0));
 

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandRepeat3.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -78,7 +79,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandRepeatWhile3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.Rainbow;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
@@ -101,7 +102,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final Display test = Display.getWithNewlines(arg.getLazzy("TEST", 0));
 		final Display yes = Display.getWithNewlines(arg.getLazzy("WHEN", 0));

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandSplit3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.split();
 
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandSplitAgain3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.splitAgain();
 
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandSplitEnd3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -70,7 +71,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.endSplit();
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandStart3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// if (getSystem().getLastEntityConsulted() == null) {
 		// return CommandExecutionResult.error("No if for this endif");
 		// }

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandStop3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.stop();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandSwimlane.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -65,7 +66,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandSwimlane2.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -73,7 +74,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandSwitch.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -67,7 +68,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandWhile3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -73,7 +74,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s = arg.get("COLOR", 0);
 		final HColor color = s == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandWhileEnd3.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -74,7 +75,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.endwhile(Display.getWithNewlines(arg.get("OUT", 0)));
 	}
 

File: src/net/sourceforge/plantuml/board/CommandBoardPlus.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.board;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -57,7 +58,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BoardDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BoardDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String plus = arg.get("PLUS", 0);
 		final String label = arg.get("LABEL", 0);
 		return diagram.addLine(plus, label);

File: src/net/sourceforge/plantuml/bpm/CommandDockedEvent.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final String label = arg.get("LABEL", 0);
 		final BpmElement element = new BpmElement(null, BpmElementType.DOCKED_EVENT, label);

File: src/net/sourceforge/plantuml/bpm/CommandElseBranch.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -56,7 +57,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.elseBranch();
 	}
 

File: src/net/sourceforge/plantuml/bpm/CommandEndBranch.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.endBranch();
 	}
 

File: src/net/sourceforge/plantuml/bpm/CommandGoto.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final BpmEvent event = new BpmEventGoto(arg.get("ID", 0));
 		return diagram.addEvent(event);
 	}

File: src/net/sourceforge/plantuml/bpm/CommandMerge.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final BpmEvent event = new BpmEventAdd(new BpmElement(arg.get("ID", 0), BpmElementType.MERGE, null));
 		return diagram.addEvent(event);
 	}

File: src/net/sourceforge/plantuml/bpm/CommandNewBranch.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.newBranch();
 	}
 

File: src/net/sourceforge/plantuml/bpm/CommandResume.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.bpm;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(BpmDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final BpmEvent event = new BpmEventResume(arg.get("ID", 0));
 		return diagram.addEvent(event);
 	}

File: src/net/sourceforge/plantuml/cheneer/command/CommandAssociate.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -81,7 +82,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String name1 = diagram.cleanId(arg.get("NAME1", 0));
 		final String name2 = diagram.cleanId(arg.get("NAME2", 0));

File: src/net/sourceforge/plantuml/cheneer/command/CommandCreateAttribute.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -88,7 +89,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final Entity owner = diagram.peekOwner();
 		if (owner == null) {

File: src/net/sourceforge/plantuml/cheneer/command/CommandCreateEntity.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -86,7 +87,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		LeafType type;
 		switch (arg.get("TYPE", 0)) {

File: src/net/sourceforge/plantuml/cheneer/command/CommandEndGroup.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -57,7 +58,7 @@ protected static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (!diagram.popOwner()) {
 			return CommandExecutionResult.error("Unbalanced brackets");
 		}

File: src/net/sourceforge/plantuml/cheneer/command/CommandMultiSubclass.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -88,7 +89,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String superclass = diagram.cleanId(arg.get("SUPERCLASS", 0));
 		final String subclasses = arg.get("SUBCLASSES", 0);

File: src/net/sourceforge/plantuml/cheneer/command/CommandSimpleSubclass.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -79,7 +80,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String name1 = diagram.cleanId(arg.get("NAME1", 0));
 		String name2 = diagram.cleanId(arg.get("NAME2", 0));

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagramFactory.java
Patch:
@@ -63,6 +63,7 @@
 import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.CommonCommands;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.note.CommandConstraintOnLinks;
 import net.sourceforge.plantuml.command.note.CommandFactoryNote;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;
@@ -139,15 +140,15 @@ protected void initCommandsList(List<Command> cmds) {
 		cmds.add(factoryTipOnEntityCommand.createMultiLine(false));
 
 		final CommandFactoryNoteOnEntity factoryNoteOnEntityCommand = new CommandFactoryNoteOnEntity("class",
-				new RegexLeaf("ENTITY", "(" + CommandCreateClass.CODE + "|[%g][^%g]+[%g])"));
+				new RegexLeaf("ENTITY", "(" + CommandCreateClass.CODE + "|[%g][^%g]+[%g])"), ParserPass.ONE);
 		cmds.add(factoryNoteOnEntityCommand.createSingleLine());
 		cmds.add(new CommandUrl());
 
 		cmds.add(factoryNoteOnEntityCommand.createMultiLine(true));
 		cmds.add(factoryNoteOnEntityCommand.createMultiLine(false));
 		cmds.add(factoryNoteCommand.createMultiLine(false));
 
-		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink();
+		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink(ParserPass.ONE);
 		cmds.add(factoryNoteOnLinkCommand.createSingleLine());
 		cmds.add(factoryNoteOnLinkCommand.createMultiLine(false));
 		cmds.add(new CommandConstraintOnLinks());

File: src/net/sourceforge/plantuml/classdiagram/command/CommandAddMethod.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.klimt.creole.Display;
@@ -67,7 +68,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
 		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));

File: src/net/sourceforge/plantuml/classdiagram/command/CommandAllowMixing.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -62,7 +63,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.setAllowMixing(true);
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -127,7 +128,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String typeString = StringUtils.goUpperCase(arg.get("TYPE", 0));
 		final LeafType type = LeafType.getLeafType(typeString);

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateElementFull2.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbol;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
@@ -136,7 +137,7 @@ final protected boolean isForbidden(CharSequence line) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		if (mode == Mode.NORMAL_KEYWORD && diagram.isAllowMixing() == false)
 			return CommandExecutionResult.error("Use 'allowmixing' if you want to mix classes and other UML elements.");

File: src/net/sourceforge/plantuml/classdiagram/command/CommandDiamondAssociation.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.plasma.Quark;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String idShort = arg.get("CODE", 0);
 		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 

File: src/net/sourceforge/plantuml/classdiagram/command/CommandHideShow2.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.atmp.CucaDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final char tmp = arg.get("COMMAND", 0).charAt(0);
 		final boolean show = tmp == 's' || tmp == 'S';

File: src/net/sourceforge/plantuml/classdiagram/command/CommandHideShowByGender.java
Patch:
@@ -43,6 +43,7 @@
 import net.sourceforge.plantuml.abel.EntityPortion;
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.DescriptionDiagram;
 import net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;
@@ -93,7 +94,7 @@ private final EntityGender emptyByGender(EntityPortion portion) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (diagram instanceof AbstractClassOrObjectDiagram) {
 			return executeClassDiagram((AbstractClassOrObjectDiagram) diagram, arg);
 		}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandHideShowByVisibility.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.abel.EntityPortion;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -71,7 +72,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram classDiagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram classDiagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (classDiagram instanceof ClassDiagram) {
 			return executeArgClass((ClassDiagram) classDiagram, arg);
 		}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandHideShowSpecificClass.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.atmp.CucaDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		// final String codeString = arg.get("CODE", 0);
 		// if (codeString.equals("class")) {

File: src/net/sourceforge/plantuml/classdiagram/command/CommandLayoutNewLine.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.layoutNewLine();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandLinkClass.java
Patch:
@@ -42,6 +42,7 @@
 import net.sourceforge.plantuml.abel.Link;
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -169,7 +170,7 @@ public static String getSeparator() {
 
 	@Override
 	protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram, LineLocation location,
-			RegexResult arg) throws NoSuchColorException {
+			RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 		String ent1String = diagram.cleanId(arg.get("ENT1", 0));
 		String ent2String = diagram.cleanId(arg.get("ENT2", 0));
 		if (ent1String == null && ent2String == null)

File: src/net/sourceforge/plantuml/classdiagram/command/CommandLinkLollipop.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.abel.Link;
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -113,7 +114,7 @@ private LeafType getType(String desc) {
 
 	@Override
 	protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram, LineLocation location,
-			RegexResult arg) {
+			RegexResult arg, ParserPass currentPass) {
 
 		final String ent1 = arg.get("ENT1", 1);
 		final String ent2 = arg.get("ENT2", 1);
@@ -122,7 +123,7 @@ protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram
 		final Entity cl2;
 		final Entity normalEntity;
 
-		final String suffix = "lol" + diagram.getUniqueSequence();
+		final String suffix = "lol" + diagram.getUniqueSequence("");
 		if (arg.get("LOL_THEN_ENT", 1) == null) {
 
 			final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(ent1));

File: src/net/sourceforge/plantuml/classdiagram/command/CommandNamespaceSeparator.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.AbstractPSystem;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -66,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String s = arg.get("SEPARATOR", 0);
 		if ("none".equalsIgnoreCase(s))
 			diagram.setNamespaceSeparator(null);

File: src/net/sourceforge/plantuml/classdiagram/command/CommandRemoveRestore.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.atmp.CucaDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final boolean show = arg.get("COMMAND", 0).equalsIgnoreCase("restore");
 		final String what = arg.get("WHAT", 0).trim();

File: src/net/sourceforge/plantuml/classdiagram/command/CommandStereotype.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.klimt.font.FontParam;
@@ -66,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String name = arg.get("NAME", 0);
 		final String stereotype = arg.get("STEREO", 0);

File: src/net/sourceforge/plantuml/classdiagram/command/CommandUrl.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.plasma.Quark;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -72,7 +73,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String idShort = arg.get("CODE", 0);
 
 		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));

File: src/net/sourceforge/plantuml/command/Command.java
Patch:
@@ -41,10 +41,12 @@
 
 public interface Command<D extends Diagram> {
 
-	CommandExecutionResult execute(D diagram, BlocLines lines) throws NoSuchColorException;
+	CommandExecutionResult execute(D diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException;
 
 	CommandControl isValid(BlocLines lines);
 
 	String[] getDescription();
+	
+	boolean isEligibleFor(ParserPass pass);	
 
 }

File: src/net/sourceforge/plantuml/command/CommandAssumeTransparent.java
Patch:
@@ -61,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// final String type = arg.get("TYPE", 0).toUpperCase();
 		// system.getSkinParam().assumeTransparent(ThemeStyle.valueOf(type));
 		// This is ignored and will be suppressed in some future

File: src/net/sourceforge/plantuml/command/CommandCaption.java
Patch:
@@ -67,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display s = Display.getWithNewlines(arg.getLazzy("DISPLAY", 0));
 		diagram.setCaption(DisplayPositioned.single(s, HorizontalAlignment.CENTER, VerticalAlignment.BOTTOM));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandEndPackage.java
Patch:
@@ -55,7 +55,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean result = diagram.endGroup();
 		if (result == false) {
 			return CommandExecutionResult.error("No package or namespace defined");

File: src/net/sourceforge/plantuml/command/CommandFactorySprite.java
Patch:
@@ -83,7 +83,7 @@ public Command<WithSprite> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final WithSprite system, LineLocation location,
-					RegexResult arg) {
+					RegexResult arg, ParserPass currentPass) {
 				return executeInternal(system, arg, Arrays.asList((String) arg.get("DATA", 0)));
 			}
 

File: src/net/sourceforge/plantuml/command/CommandFootboxIgnored.java
Patch:
@@ -56,7 +56,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return CommandExecutionResult.ok();
 	}
 }

File: src/net/sourceforge/plantuml/command/CommandFooter.java
Patch:
@@ -71,7 +71,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String align = arg.get("POSITION", 0);
 		HorizontalAlignment ha = HorizontalAlignment.fromString(align, HorizontalAlignment.CENTER);
 		if (align == null)

File: src/net/sourceforge/plantuml/command/CommandHeader.java
Patch:
@@ -73,7 +73,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String align = arg.get("POSITION", 0);
 		HorizontalAlignment ha = HorizontalAlignment.fromString(align, HorizontalAlignment.RIGHT);
 		if (align == null)

File: src/net/sourceforge/plantuml/command/CommandLegend.java
Patch:
@@ -67,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display s = Display.getWithNewlines(arg.getLazzy("LEGEND", 0));
 		diagram.setLegend(DisplayPositioned.single(s, HorizontalAlignment.CENTER, VerticalAlignment.BOTTOM));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandMainframe.java
Patch:
@@ -62,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display label = Display.getWithNewlines(arg.get("LABEL", 0));
 		diagram.setMainFrame(label);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandMinwidth.java
Patch:
@@ -58,7 +58,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final int minwidth = Integer.parseInt(arg.get("VALUE", 0));
 		diagram.setMinwidth(minwidth);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandMultilinesCaption.java
Patch:
@@ -56,7 +56,7 @@ public String getPatternEnd() {
 		return "^end[%s]?caption$";
 	}
 
-	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines) throws NoSuchColorException {
+	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException {
 		lines = lines.subExtract(1, 1);
 		lines = lines.removeEmptyColumns();
 		final Display strings = lines.toDisplay();

File: src/net/sourceforge/plantuml/command/CommandMultilinesComment.java
Patch:
@@ -54,7 +54,7 @@ public String getPatternEnd() {
 		return COMMENT_MULTILINE_END;
 	}
 
-	public CommandExecutionResult execute(final Diagram diagram, BlocLines lines) {
+	public CommandExecutionResult execute(final Diagram diagram, BlocLines lines, ParserPass currentPass) {
 		return CommandExecutionResult.ok();
 	}
 

File: src/net/sourceforge/plantuml/command/CommandMultilinesFooter.java
Patch:
@@ -58,7 +58,7 @@ public String getPatternEnd() {
 		return "^end[%s]?footer$";
 	}
 
-	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines) throws NoSuchColorException {
+	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException {
 		lines = lines.trim();
 		final Matcher2 m = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());
 		if (m.find() == false) {

File: src/net/sourceforge/plantuml/command/CommandMultilinesHeader.java
Patch:
@@ -57,7 +57,7 @@ public String getPatternEnd() {
 		return "^end[%s]?header$";
 	}
 
-	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines) throws NoSuchColorException {
+	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException {
 		lines = lines.trim();
 		final Matcher2 m = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());
 		if (m.find() == false) {

File: src/net/sourceforge/plantuml/command/CommandMultilinesTitle.java
Patch:
@@ -56,7 +56,7 @@ public String getPatternEnd() {
 		return "^end[%s]?title$";
 	}
 
-	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines) throws NoSuchColorException {
+	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException {
 		lines = lines.subExtract(1, 1);
 		lines = lines.removeEmptyColumns();
 		final Display strings = lines.toDisplay();

File: src/net/sourceforge/plantuml/command/CommandNamespace.java
Patch:
@@ -78,7 +78,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
 		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));

File: src/net/sourceforge/plantuml/command/CommandNamespace2.java
Patch:
@@ -82,7 +82,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
 		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));

File: src/net/sourceforge/plantuml/command/CommandNamespaceEmpty.java
Patch:
@@ -77,7 +77,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
 

File: src/net/sourceforge/plantuml/command/CommandNope.java
Patch:
@@ -57,7 +57,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(Diagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(Diagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return CommandExecutionResult.ok();
 	}
 

File: src/net/sourceforge/plantuml/command/CommandPackage.java
Patch:
@@ -100,15 +100,15 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String idShort;
 		String display;
 		final String name = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.get("NAME", 0));
 
 		if (arg.get("AS", 0) == null) {
 			if (name.length() == 0) {
-				idShort = "##" + diagram.getUniqueSequence();
+				idShort = "##" + diagram.getUniqueSequence("");
 				display = null;
 				return CommandExecutionResult.error("Error in name");
 				// throw new IllegalStateException("AS");

File: src/net/sourceforge/plantuml/command/CommandPackageEmpty.java
Patch:
@@ -78,13 +78,13 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String idShort;
 		final String display;
 		if (arg.get("CODE", 0) == null) {
 			if (StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.get("DISPLAY", 0)).length() == 0) {
-				idShort = "##" + diagram.getUniqueSequence();
+				idShort = "##" + diagram.getUniqueSequence("");
 				display = null;
 			} else {
 				idShort = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.get("DISPLAY", 0));

File: src/net/sourceforge/plantuml/command/CommandPage.java
Patch:
@@ -62,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final int horizontal = Integer.parseInt(arg.get("NB1", 0));
 		final int vertical = Integer.parseInt(arg.get("NB2", 0));

File: src/net/sourceforge/plantuml/command/CommandPragma.java
Patch:
@@ -68,7 +68,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String name = StringUtils.goLowerCase(arg.get("NAME", 0));
 		final String value = arg.get("VALUE", 0);
 		if (name.equalsIgnoreCase("svgsize")) {

File: src/net/sourceforge/plantuml/command/CommandRankDir.java
Patch:
@@ -59,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String s = StringUtils.goUpperCase(arg.get("DIRECTION", 0)).replace(' ', '_');
 		((SkinParam) diagram.getSkinParam()).setRankdir(Rankdir.valueOf(s));
 		// diagram.setRankdir(Rankdir.valueOf(s));

File: src/net/sourceforge/plantuml/command/CommandRotate.java
Patch:
@@ -57,7 +57,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.setRotation(true);
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/command/CommandScale.java
Patch:
@@ -67,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		double scale = Double.parseDouble(arg.get("SCALE", 0));
 		if (scale == 0)
 			return CommandExecutionResult.error("Scale cannot be zero");

File: src/net/sourceforge/plantuml/command/CommandScaleMaxHeight.java
Patch:
@@ -63,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final double height = Double.parseDouble(arg.get("HEIGHT", 0));
 		diagram.setScale(new ScaleMaxHeight(height));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandScaleMaxWidth.java
Patch:
@@ -63,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final double width = Double.parseDouble(arg.get("WIDTH", 0));
 		diagram.setScale(new ScaleMaxWidth(width));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandScaleMaxWidthAndHeight.java
Patch:
@@ -65,7 +65,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final double width = Double.parseDouble(arg.get("WIDTH", 0));
 		final double height = Double.parseDouble(arg.get("HEIGHT", 0));
 		diagram.setScale(new ScaleMaxWidthAndHeight(width, height));

File: src/net/sourceforge/plantuml/command/CommandScaleWidthAndHeight.java
Patch:
@@ -63,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final double width = Double.parseDouble(arg.get("WIDTH", 0));
 		final double height = Double.parseDouble(arg.get("HEIGHT", 0));
 		diagram.setScale(new ScaleWidthAndHeight(width, height));

File: src/net/sourceforge/plantuml/command/CommandScaleWidthOrHeight.java
Patch:
@@ -62,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(AbstractPSystem diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final double size = Double.parseDouble(arg.get("VALUE", 0));
 		final boolean width = "width".equalsIgnoreCase(arg.get("WIDTH", 0));
 		if (width) {

File: src/net/sourceforge/plantuml/command/CommandSkinParam.java
Patch:
@@ -61,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		try {
 			diagram.setParam(arg.get("NAME", 0), arg.get("VALUE", 0));
 			return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandSpriteFile.java
Patch:
@@ -75,7 +75,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		// ::comment when __CORE__
 		final String src = arg.get("FILE", 0);
 		final Sprite sprite;

File: src/net/sourceforge/plantuml/command/CommandSpriteSvg.java
Patch:
@@ -62,7 +62,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String svg = arg.get("SVG", 0);
 		final SvgNanoParser nanoParser = new SvgNanoParser(svg, true);
 		system.addSprite(arg.get("NAME", 0), nanoParser);

File: src/net/sourceforge/plantuml/command/CommandTitle.java
Patch:
@@ -67,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display s = Display.getWithNewlines(arg.getLazzy("TITLE", 0));
 		diagram.setTitle(DisplayPositioned.single(s, HorizontalAlignment.CENTER, VerticalAlignment.TOP));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/note/CommandConstraintOnLinks.java
Patch:
@@ -40,6 +40,7 @@
 import net.atmp.CucaDiagram;
 import net.sourceforge.plantuml.abel.Link;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -77,7 +78,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(CucaDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final List<Link> links = diagram.getTwoLastLinks();
 		if (links == null) {

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNote.java
Patch:
@@ -43,6 +43,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines2;
 import net.sourceforge.plantuml.command.MultilinesStrategy;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.command.Trim;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
@@ -102,7 +103,7 @@ public Command<AbstractEntityDiagram> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final AbstractEntityDiagram system, LineLocation location,
-					RegexResult arg) throws NoSuchColorException {
+					RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 				final String display = arg.get("DISPLAY", 0);
 				return executeInternal(system, arg, BlocLines.getWithNewlines(display));
 			}

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNoteActivity.java
Patch:
@@ -45,6 +45,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines2;
 import net.sourceforge.plantuml.command.MultilinesStrategy;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.command.Trim;
 import net.sourceforge.plantuml.decoration.LinkDecor;
@@ -133,7 +134,7 @@ public Command<ActivityDiagram> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final ActivityDiagram diagram, LineLocation location,
-					RegexResult arg) throws NoSuchColorException {
+					RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 				final String tmp = diagram.getUniqueSequence("GN");
 				final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(tmp));
 

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteAcrossCommand.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines2;
 import net.sourceforge.plantuml.command.MultilinesStrategy;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.command.Trim;
 import net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand;
@@ -107,7 +108,7 @@ public Command<SequenceDiagram> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final SequenceDiagram system, LineLocation location,
-					RegexResult arg) throws NoSuchColorException {
+					RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 				final BlocLines strings = BlocLines.getWithNewlines(arg.get("NOTE", 0));
 
 				return executeInternal(system, arg, strings);

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteCommand.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines2;
 import net.sourceforge.plantuml.command.MultilinesStrategy;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.command.Trim;
 import net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand;
@@ -134,7 +135,7 @@ public Command<SequenceDiagram> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final SequenceDiagram diagram, LineLocation location,
-					RegexResult arg) throws NoSuchColorException {
+					RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 				return executeInternal(diagram, arg, BlocLines.getWithNewlines(arg.get("NOTE", 0)));
 			}
 

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteOnArrowCommand.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines2;
 import net.sourceforge.plantuml.command.MultilinesStrategy;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.command.Trim;
 import net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand;
@@ -103,7 +104,7 @@ public Command<SequenceDiagram> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final SequenceDiagram system, LineLocation location,
-					RegexResult arg) throws NoSuchColorException {
+					RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 				return executeInternal(system, arg, BlocLines.getWithNewlines(arg.get("NOTE", 0)));
 			}
 

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteOverSeveralCommand.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines2;
 import net.sourceforge.plantuml.command.MultilinesStrategy;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.command.Trim;
 import net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand;
@@ -122,7 +123,7 @@ public Command<SequenceDiagram> createSingleLine() {
 
 			@Override
 			protected CommandExecutionResult executeArg(final SequenceDiagram system, LineLocation location,
-					RegexResult arg) throws NoSuchColorException {
+					RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 				final BlocLines strings = BlocLines.getWithNewlines(arg.get("NOTE", 0));
 
 				return executeInternal(system, arg, strings);

File: src/net/sourceforge/plantuml/compositediagram/command/CommandCreateBlock.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.compositediagram.CompositeDiagram;
 import net.sourceforge.plantuml.klimt.creole.Display;
@@ -71,7 +72,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		String display = arg.get("DISPLAY", 0);
 		final String idShort = arg.get("CODE", 0);
 		final Quark<Entity> quark = diagram.quarkInContext(true, idShort);

File: src/net/sourceforge/plantuml/compositediagram/command/CommandCreatePackageBlock.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.abel.GroupType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.compositediagram.CompositeDiagram;
 import net.sourceforge.plantuml.klimt.creole.Display;
@@ -71,7 +72,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		String display = arg.get("DISPLAY", 0);
 		final String idShort = arg.get("CODE", 0);

File: src/net/sourceforge/plantuml/compositediagram/command/CommandEndPackageBlock.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.compositediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.compositediagram.CompositeDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -57,7 +58,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean result = diagram.endGroup();
 		if (result == false)
 			return CommandExecutionResult.error("No inner block defined");

File: src/net/sourceforge/plantuml/compositediagram/command/CommandLinkBlock.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Link;
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.compositediagram.CompositeDiagram;
 import net.sourceforge.plantuml.decoration.LinkDecor;
@@ -76,7 +77,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String ent1 = arg.get("ENT1", 0);
 		final String ent2 = arg.get("ENT2", 0);
 		final Quark<Entity> quark1 = diagram.quarkInContext(true, diagram.cleanId(ent1));

File: src/net/sourceforge/plantuml/descdiagram/CommandCreateDomain.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.classdiagram.command.GenericRegexProducer;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbol;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
@@ -83,7 +84,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String typeString = arg.get("TYPE", 0);
 		String displayString = arg.getLazzy("DISPLAY", 0);

File: src/net/sourceforge/plantuml/descdiagram/DescriptionDiagramFactory.java
Patch:
@@ -47,6 +47,7 @@
 import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.CommonCommands;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.note.CommandFactoryNote;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;
@@ -90,7 +91,7 @@ protected void initCommandsList(List<Command> cmds) {
 		final CommandFactoryNote factoryNoteCommand = new CommandFactoryNote();
 		cmds.add(factoryNoteCommand.createMultiLine(false));
 
-		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink();
+		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink(ParserPass.ONE);
 		cmds.add(factoryNoteOnLinkCommand.createSingleLine());
 		cmds.add(factoryNoteOnLinkCommand.createMultiLine(false));
 
@@ -103,7 +104,7 @@ protected void initCommandsList(List<Command> cmds) {
 						new RegexLeaf("\\((?!\\*\\))[^\\)]+\\)"), //
 						new RegexLeaf(":[^:]+:"), //
 						new RegexLeaf("[%g][^%g]+[%g]") //
-				));
+				), ParserPass.ONE);
 		cmds.add(factoryNoteOnEntityCommand.createSingleLine());
 
 		cmds.add(factoryNoteCommand.createSingleLine());

File: src/net/sourceforge/plantuml/descdiagram/command/CommandArchimate.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
 import net.sourceforge.plantuml.descdiagram.DescriptionDiagram;
@@ -101,7 +102,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String codeRaw = arg.getLazzy("CODE", 0);
 

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementFull.java
Patch:
@@ -42,6 +42,7 @@
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.classdiagram.command.CommandCreateClassMultilines;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbol;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
@@ -136,7 +137,7 @@ final protected boolean isForbidden(CharSequence line) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String codeRaw = arg.getLazzy("CODE", 0);
 		String displayRaw = arg.getLazzy("DISPLAY", 0);

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementParenthesis.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.classdiagram.ClassDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbol;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
@@ -138,7 +139,7 @@ final protected boolean isForbidden(CharSequence line) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String codeRaw = arg.getLazzy("CODE", 0);
 		final String displayRaw = arg.getLazzy("DISPLAY", 0);

File: src/net/sourceforge/plantuml/descdiagram/command/CommandLinkElement.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.abel.Link;
 import net.sourceforge.plantuml.abel.LinkArg;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkType;
@@ -249,7 +250,7 @@ private static RegexLeaf getGroup(String name) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String ent1 = arg.get("ENT1", 0);
 		final String ent2 = arg.get("ENT2", 0);

File: src/net/sourceforge/plantuml/descdiagram/command/CommandNewpage.java
Patch:
@@ -39,6 +39,7 @@
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final int dpi = diagram.getSkinParam().getDpi();
 		final UmlDiagram emptyDiagram = (UmlDiagram) factory.createEmptyDiagram(diagram.getSource(),
 				diagram.getSkinParam().values());

File: src/net/sourceforge/plantuml/descdiagram/command/CommandPackageWithUSymbol.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.classdiagram.command.CommandCreateClassMultilines;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.decoration.symbol.USymbol;
 import net.sourceforge.plantuml.decoration.symbol.USymbols;
@@ -132,7 +133,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String codeArg = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.getLazzy("CODE", 0));
 		final Quark<Entity> ident = diagram.quarkInContext(false,

File: src/net/sourceforge/plantuml/descdiagram/command/CommandTogether.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -60,7 +61,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final CommandExecutionResult status = diagram.gotoTogether();
 		return status;

File: src/net/sourceforge/plantuml/ebnf/CommandComment.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.ebnf;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(PSystemEbnf diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(PSystemEbnf diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display note = Display.getWithNewlines(arg.get("COMMENT", 0));
 		return diagram.addNote(note, null);
 	}

File: src/net/sourceforge/plantuml/ebnf/CommandEBnfSingleLine.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.Collections;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -84,7 +85,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(PSystemEbnf diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(PSystemEbnf diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String id = arg.get("ID", 0);
 		final String equals = arg.get("EQUALS", 0);

File: src/net/sourceforge/plantuml/flowdiagram/CommandLineSimple.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.flowdiagram;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.golem.TileGeometry;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -64,7 +65,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(FlowDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(FlowDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String idDest = arg.get("ID_DEST", 0);
 		final String label = arg.get("LABEL", 0);
 		final String orientationString = arg.get("ORIENTATION", 0);

File: src/net/sourceforge/plantuml/flowdiagram/CommandLink.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.flowdiagram;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.golem.TileGeometry;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -62,7 +63,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(FlowDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(FlowDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String idDest = arg.get("ID_DEST", 0);
 		final String orientationString = arg.get("ORIENTATION", 0);
 		TileGeometry orientation = TileGeometry.SOUTH;

File: src/net/sourceforge/plantuml/help/CommandHelpColor.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.help;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.add("<b>Help on colors");
 		diagram.add(" ");
 		diagram.add(" The possible colors are :");

File: src/net/sourceforge/plantuml/help/CommandHelpFont.java
Patch:
@@ -38,6 +38,7 @@
 import java.awt.GraphicsEnvironment;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.add("<b>Help on font");
 		diagram.add(" ");
 		diagram.add(" The possible font on your system are :");

File: src/net/sourceforge/plantuml/help/CommandHelpKeyword.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.help;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.add("<b>Help on keywords");
 		diagram.add(" ");
 		diagram.add(" The possible keywords are :");

File: src/net/sourceforge/plantuml/help/CommandHelpTheme.java
Patch:
@@ -38,6 +38,7 @@
 import java.io.IOException;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.add("<b>Help on themes");
 		diagram.add(" ");
 		diagram.add(" The possible themes are :");

File: src/net/sourceforge/plantuml/help/CommandHelpType.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.help;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(Help diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.add("<b>Help on types");
 		diagram.add(" ");
 		diagram.add(" The possible types are :");

File: src/net/sourceforge/plantuml/jsondiagram/JsonDiagram.java
Patch:
@@ -37,7 +37,6 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
 import net.sourceforge.plantuml.AbstractPSystem;
@@ -50,6 +49,7 @@
 import net.sourceforge.plantuml.command.CommandScaleMaxWidthAndHeight;
 import net.sourceforge.plantuml.command.CommandScaleWidthAndHeight;
 import net.sourceforge.plantuml.command.CommandScaleWidthOrHeight;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
@@ -104,7 +104,7 @@ public JsonDiagram(UmlSource source, UmlDiagramType type, JsonValue json, List<H
 			final BlocLines lines = BlocLines.singleString(scale);
 			for (SingleLineCommand2<AbstractPSystem> cmd : cmds)
 				if (cmd.isValid(lines) == CommandControl.OK)
-					cmd.execute(this, lines);
+					cmd.execute(this, lines, ParserPass.ONE);
 		}
 	}
 

File: src/net/sourceforge/plantuml/klimt/sprite/CommandListSprite.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return CommandExecutionResult.ok();
 	}
 

File: src/net/sourceforge/plantuml/klimt/sprite/CommandStdlib.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.klimt.sprite;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(StdlibDiagram system, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(StdlibDiagram system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String name = arg.get("NAME", 0);
 		system.setStdlibName(name);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/klimt/sprite/StdlibDiagram.java
Patch:
@@ -46,6 +46,7 @@
 import net.sourceforge.plantuml.WithSprite;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.CommandFactorySprite;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -132,7 +133,7 @@ private void drawInternal(UGraphic ug) throws IOException {
 			// System.err.println("s="+s);
 			final BlocLines bloc = BlocLines.fromArray(s.split("\n"));
 			try {
-				cmd.execute(this, bloc);
+				cmd.execute(this, bloc, ParserPass.ONE);
 			} catch (NoSuchColorException e) {
 				Logme.error(e);
 			}

File: src/net/sourceforge/plantuml/mindmap/CommandMindMapDirection.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.mindmap;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -64,7 +65,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String dir = arg.get("DIRECTION", 0);
 		final Direction direction = Direction.lazzyValueOf(dir);
 		diagram.setDefaultDirection(direction);

File: src/net/sourceforge/plantuml/mindmap/CommandMindMapOrgmode.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.mindmap;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String type = arg.get("TYPE", 0);
 		final String label = arg.get("LABEL", 0);

File: src/net/sourceforge/plantuml/mindmap/CommandMindMapPlus.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.mindmap;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String type = arg.get("TYPE", 0);
 		final String label = arg.get("LABEL", 0);

File: src/net/sourceforge/plantuml/mindmap/CommandMindMapRoot.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.mindmap;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(MindMapDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String label = arg.get("LABEL", 0);
 		return diagram.addIdea(null, 0, Display.getWithNewlines(label), IdeaShape.BOX, true);
 	}

File: src/net/sourceforge/plantuml/nwdiag/CommandComment.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return CommandExecutionResult.ok();
 	}
 

File: src/net/sourceforge/plantuml/nwdiag/CommandElement.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.addElement(arg.get("NAME", 0), arg.get("DEFINITION", 1));
 	}
 

File: src/net/sourceforge/plantuml/nwdiag/CommandEndSomething.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -57,7 +58,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.closeSomething();
 	}
 

File: src/net/sourceforge/plantuml/nwdiag/CommandGroup.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.openGroup(arg.get("NAME", 0));
 	}
 

File: src/net/sourceforge/plantuml/nwdiag/CommandLink.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String name1 = arg.get("NAME1", 0);
 		final String name2 = arg.get("NAME2", 0);
 		return diagram.link(name1, name2);

File: src/net/sourceforge/plantuml/nwdiag/CommandNetwork.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.openNetwork(arg.get("NAME", 0));
 	}
 

File: src/net/sourceforge/plantuml/nwdiag/CommandNwDiagInit.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -57,7 +58,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.init();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/nwdiag/CommandProperty.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.nwdiag;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -66,7 +67,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(NwDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.setProperty(arg.get("NAME", 0), arg.get("VALUE", 0));
 	}
 

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandAddData.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;
@@ -66,7 +67,7 @@ static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram, LineLocation location,
-			RegexResult arg) throws NoSuchColorException {
+			RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 		final String name = arg.get("NAME", 0);
 		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(name));
 		final Entity entity = quark.getData();

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateEntityObject.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -77,7 +78,7 @@ private static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram, LineLocation location,
-			RegexResult arg) throws NoSuchColorException {
+			RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 1);
 
 		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateJsonSingleLine.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.abel.LeafType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.cucadiagram.BodierJSon;
 import net.sourceforge.plantuml.json.Json.DefaultHandler;
@@ -82,7 +83,7 @@ private static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram, LineLocation location,
-			RegexResult arg) throws NoSuchColorException {
+			RegexResult arg, ParserPass currentPass) throws NoSuchColorException {
 		final String name = arg.get("NAME", 1);
 		final String data = arg.get("DATA", 0);
 		final Entity entity1 = executeArg0(diagram, arg);

File: src/net/sourceforge/plantuml/project/command/CommandColorTask.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -64,7 +65,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		final String code = arg.get("CODE", 0);

File: src/net/sourceforge/plantuml/project/command/CommandFootbox.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean footbox = arg.get("TYPE", 0).equalsIgnoreCase("show");
 		diagram.setShowFootbox(footbox);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/project/command/CommandGanttArrow.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.project.GanttConstraint;
@@ -68,7 +69,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final String code1 = arg.get("CODE1", 0);
 		final String code2 = arg.get("CODE2", 0);

File: src/net/sourceforge/plantuml/project/command/CommandGanttArrow2.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.project.GanttConstraint;
@@ -73,7 +74,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final String name1 = arg.get("TASK1", 0);
 		final String name2 = arg.get("TASK2", 0);

File: src/net/sourceforge/plantuml/project/command/CommandGroupEnd.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.endGroup();
 	}
 

File: src/net/sourceforge/plantuml/project/command/CommandGroupStart.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.project.core.TaskCode;
@@ -63,7 +64,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String name = arg.get("NAME", 0);
 		return diagram.addGroup(TaskCode.fromId(name));
 	}

File: src/net/sourceforge/plantuml/project/command/CommandHideResourceFootbox.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.hideResourceFootbox();
 	}
 

File: src/net/sourceforge/plantuml/project/command/CommandHideResourceName.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.hideResourceName();
 	}
 

File: src/net/sourceforge/plantuml/project/command/CommandLabelOnColumn.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.geom.HorizontalAlignment;
 import net.sourceforge.plantuml.project.GanttDiagram;
@@ -75,7 +76,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final LabelPosition position = "first".equalsIgnoreCase(arg.get("POSITION", 0)) ? LabelPosition.FIRST_COLUMN
 				: LabelPosition.LAST_COLUMN;
 		final HorizontalAlignment alignment = "right".equalsIgnoreCase(arg.get("ALIGNED", 0))

File: src/net/sourceforge/plantuml/project/command/CommandLanguage.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return diagram.changeLanguage(arg.get("LANG", 0));
 	}
 

File: src/net/sourceforge/plantuml/project/command/CommandNoteBottom.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.project.GanttDiagram;
@@ -53,7 +54,7 @@ public String getPatternEnd() {
 		return "^end[%s]*note$";
 	}
 
-	public CommandExecutionResult execute(GanttDiagram diagram, BlocLines lines) throws NoSuchColorException {
+	public CommandExecutionResult execute(GanttDiagram diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException {
 		lines = lines.subExtract(1, 1);
 		lines = lines.removeEmptyColumns();
 		final Display strings = lines.toDisplay();

File: src/net/sourceforge/plantuml/project/command/CommandPrintBetween.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.project.lang.ComplementDate;
@@ -70,7 +71,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Day start = (Day) pattern.getMe(diagram, arg, "START").get();
 		final Day end = (Day) pattern.getMe(diagram, arg, "END").get();
 		diagram.setPrintInterval(start, end);

File: src/net/sourceforge/plantuml/project/command/CommandPrintScale.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.project.core.PrintScale;
@@ -80,7 +81,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String scaleString = arg.get("SCALE", 0);
 		final PrintScale scale = PrintScale.fromString(scaleString);
 		diagram.setPrintScale(scale);

File: src/net/sourceforge/plantuml/project/command/CommandSeparator.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String comment = arg.get("COMMENT", 1);
 		diagram.addSeparator(comment);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/project/command/CommandTaskCompleteDefault.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.project.GanttDiagram;
@@ -68,7 +69,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		final int value = Integer.parseInt(arg.get("VALUE", 0));

File: src/net/sourceforge/plantuml/project/command/CommandWeekNumberStrategy.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.project.time.DayOfWeek;
@@ -67,7 +68,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 
 		final DayOfWeek weekDay = DayOfWeek.fromString(arg.get("WEEKDAY", 0));
 		final String num = arg.get("NUM", 0);

File: src/net/sourceforge/plantuml/project/command/NaturalCommand.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.project.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.core.Diagram;
 import net.sourceforge.plantuml.project.lang.Sentence;
@@ -52,7 +53,7 @@ public NaturalCommand(Sentence<D> sentence) {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(D system, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(D system, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		return sentence.execute(system, arg);
 	}
 

File: src/net/sourceforge/plantuml/regexdiagram/CommandRegexfSingleLine.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.Collections;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(PSystemRegex diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(PSystemRegex diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String line = arg.get("LINE", 0);
 

File: src/net/sourceforge/plantuml/salt/CommandAnything.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -57,7 +58,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(PSystemSalt diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(PSystemSalt diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String s = arg.get("ALL", 0);
 		if (diagram.isIamSalt() == false) {
 			if (StringUtils.isEmpty(s)) {

File: src/net/sourceforge/plantuml/salt/CommandSalt.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.salt;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(PSystemSalt diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(PSystemSalt diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.setIamSalt(true);
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/salt/PSystemSalt.java
Patch:
@@ -52,6 +52,7 @@
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandFactorySprite;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -182,7 +183,7 @@ private List<String> manageSprite() {
 					bloc = bloc.addString(s);
 				} while (s.equals("}") == false);
 				try {
-					final CommandExecutionResult cmdResult = cmd.execute(this, bloc);
+					final CommandExecutionResult cmdResult = cmd.execute(this, bloc, ParserPass.ONE);
 				} catch (NoSuchColorException e) {
 				}
 			} else {

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandActivate.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -71,7 +72,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final LifeEventType type = LifeEventType.valueOf(StringUtils.goUpperCase(arg.get("TYPE", 0)));
 		final Participant p = diagram

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandActivate2.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -64,7 +65,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final LifeEventType type = arg.get("TYPE", 0).equals("++") ? LifeEventType.ACTIVATE : LifeEventType.DEACTIVATE;
 		final Participant p = diagram.getOrCreateParticipant(arg.get("NAME", 0));

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandArrow.java
Patch:
@@ -43,6 +43,7 @@
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.klimt.color.HColor;
@@ -200,7 +201,7 @@ private int getInclination(String key) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		final String dressing1 = getDressing(arg, "ARROW_DRESSING1");

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandAutoNewpage.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.setAutonewpage(Integer.parseInt(arg.get("VALUE", 0)));
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandAutoactivate.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(SequenceDiagram sequenceDiagram, LineLocation location,
-			RegexResult arg) {
+			RegexResult arg, ParserPass currentPass) {
 		sequenceDiagram.setAutoactivate("on".equalsIgnoreCase(arg.get("ON", 0)));
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandAutonumber.java
Patch:
@@ -38,6 +38,7 @@
 import java.text.DecimalFormat;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.RegexConcat;
 import net.sourceforge.plantuml.regex.RegexLeaf;
@@ -72,7 +73,7 @@ private static RegexConcat getConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		DottedNumber start = DottedNumber.create("1");
 		final String arg0 = arg.get("START", 0);
 		// System.err.println("arg0=" + arg0);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandAutonumberIncrement.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.RegexConcat;
 import net.sourceforge.plantuml.regex.RegexLeaf;
@@ -65,7 +66,7 @@ private static RegexConcat getConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String position = arg.get("POS", 0);
 		if (position == null) {
 			diagram.getAutoNumber().incrementIntermediate();

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandAutonumberResume.java
Patch:
@@ -38,6 +38,7 @@
 import java.text.DecimalFormat;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.RegexConcat;
 import net.sourceforge.plantuml.regex.RegexLeaf;
@@ -71,7 +72,7 @@ private static RegexConcat getConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String df = arg.get("DF", 0);
 
 		DecimalFormat decimalFormat = null;

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandAutonumberStop.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.autonumberStop();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandBoxEnd.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		if (diagram.isBoxPending() == false)
 			return CommandExecutionResult.error("Missing starting box");
 

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandBoxStart.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -80,7 +81,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 //		if (diagram.isBoxPending())
 //			return CommandExecutionResult.error("Box cannot be nested");

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandDeactivateShort.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(SequenceDiagram sequenceDiagram, LineLocation location,
-			RegexResult arg2) {
+			RegexResult arg2, ParserPass currentPass) {
 		final AbstractMessage message = sequenceDiagram.getActivatingMessage();
 		if (message == null)
 			return CommandExecutionResult.error("Nothing to deactivate.");

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandDelay.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display strings = arg.get("LABEL", 0) == null ? Display.empty()
 				: Display.getWithNewlines(arg.get("LABEL", 0));
 		diagram.delay(strings);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandDivider.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -61,7 +62,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Display strings = Display.getWithNewlines(arg.get("LABEL", 0));
 		diagram.divider(strings);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandExoArrowAny.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -68,7 +69,7 @@ public CommandExoArrowAny(IRegex pattern) {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String body = arg.getLazzy("ARROW_BODYA", 0) + arg.getLazzy("ARROW_BODYB", 0);
 		final String dressing = arg.getLazzy("ARROW_DRESSING", 0);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandFootbox.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean footbox = arg.get("TYPE", 0).equalsIgnoreCase("show");
 		diagram.setShowFootbox(footbox);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandFootboxOld.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean footbox = arg.get("TYPE", 0).equalsIgnoreCase("on");
 		diagram.setShowFootbox(footbox);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandGrouping.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
@@ -72,7 +73,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		String type = StringUtils.goLowerCase(arg.get("TYPE", 0));
 		final String s = arg.get("COLORS", 0);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandHSpace.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String size = arg.get("VALUE", 0);
 		if (StringUtils.isNotEmpty(size)) {
 			diagram.hspace(Integer.parseInt(size));

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandHideUnlinked.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.setHideUnlinkedData(arg.get("HIDE", 0).equalsIgnoreCase("hide"));
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandIgnoreNewpage.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.ignoreNewpage();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandLinkAnchor.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String anchor1 = arg.get("ANCHOR1", 0);
 		final String anchor2 = arg.get("ANCHOR2", 0);
 		final String message = arg.get("MESSAGE", 0);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandNewpage.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -65,7 +66,7 @@ static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(SequenceDiagram sequenceDiagram, LineLocation location,
-			RegexResult arg) {
+			RegexResult arg, ParserPass currentPass) {
 		final String label = arg.get("LABEL", 0);
 		final Display strings = label == null ? Display.NULL : Display.getWithNewlines(label);
 		sequenceDiagram.newpage(strings);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandParticipant.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorType;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -83,7 +84,7 @@ static IRegex getRegexType() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String code = arg.get("CODE", 0);
 		if (diagram.participantsContainsKey(code)) {

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandReferenceMultilinesOverSeveral.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.CommandMultilines;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.klimt.creole.Display;
@@ -83,7 +84,7 @@ public String getPatternEnd() {
 		return "^end[%s]?(ref)?$";
 	}
 
-	public CommandExecutionResult execute(final SequenceDiagram diagram, BlocLines lines) throws NoSuchColorException {
+	public CommandExecutionResult execute(final SequenceDiagram diagram, BlocLines lines, ParserPass currentPass) throws NoSuchColorException {
 		final String firstLine = lines.getFirst().getTrimmed().getString();
 		final RegexResult arg = getConcat().matcher(firstLine);
 		if (arg == null)

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandReferenceOverSeveral.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -80,7 +81,7 @@ private static RegexConcat getConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String s1 = arg.get("REF", 0);
 		final HColor backColorElement = s1 == null ? null : diagram.getSkinParam().getIHtmlColorSet().getColor(s1);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandReturn.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -76,7 +77,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		AbstractMessage message1 = diagram.getActivatingMessage();

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandSkin.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.sourceforge.plantuml.TitledDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		try {
 			return diagram.loadSkin(arg.get("SKIN", 0));
 		} catch (IOException e) {

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandUrl.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.sequencediagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -70,7 +71,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String code = arg.get("CODE", 0);
 		final String urlString = arg.get("URL", 0);
 		final Participant p = diagram.getOrCreateParticipant(code);

File: src/net/sourceforge/plantuml/statediagram/StateDiagramFactory.java
Patch:
@@ -47,6 +47,7 @@
 import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.CommonCommands;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.note.CommandFactoryNote;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;
 import net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;
@@ -89,12 +90,12 @@ protected void initCommandsList(List<Command> cmds) {
 		final CommandFactoryNoteOnEntity factoryNoteOnEntityCommand = new CommandFactoryNoteOnEntity("state",
 				new RegexOr("ENTITY", new RegexLeaf("[%pLN_.]+"), //
 						new RegexLeaf("[%g][^%g]+[%g]") //
-				));
+				), ParserPass.THREE);
 		cmds.add(factoryNoteOnEntityCommand.createMultiLine(true));
 		cmds.add(factoryNoteOnEntityCommand.createMultiLine(false));
 
 		cmds.add(factoryNoteOnEntityCommand.createSingleLine());
-		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink();
+		final CommandFactoryNoteOnLink factoryNoteOnLinkCommand = new CommandFactoryNoteOnLink(ParserPass.TWO);
 		cmds.add(factoryNoteOnLinkCommand.createSingleLine());
 		cmds.add(factoryNoteOnLinkCommand.createMultiLine(false));
 		cmds.add(new CommandUrl());

File: src/net/sourceforge/plantuml/statediagram/command/CommandHideEmptyDescription.java
Patch:
@@ -37,6 +37,7 @@
 
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -62,7 +63,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(UmlDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final boolean hide = arg.get("HIDE", 0).equalsIgnoreCase("hide");
 		diagram.setHideEmptyDescription(hide);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/style/CommandStyleImport.java
Patch:
@@ -42,6 +42,7 @@
 import net.sourceforge.plantuml.FileSystem;
 import net.sourceforge.plantuml.TitledDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -79,7 +80,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String path = arg.get("PATH", 0);
 		try {
 			BlocLines lines = null;

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandAnalog.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -82,7 +83,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String compact = arg.get("COMPACT", 0);
 		final String code = arg.get("CODE", 0);
 		final String full = arg.get("FULL", 0);

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandAtPlayer.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -60,7 +61,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String code = arg.get("PLAYER", 0);
 		final Player player = diagram.getPlayer(code);
 		if (player == null) {

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandAtTime.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -67,7 +68,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final TimeTick timeTick = TimeTickBuilder.parseTimeTick("TIME", arg, diagram);
 		if (timeTick == null)
 			return CommandExecutionResult.error("What time?");

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandBinary.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -71,7 +72,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String compact = arg.get("COMPACT", 0);
 		final String code = arg.get("CODE", 0);
 		final String full = arg.get("FULL", 0);

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandChangeStateByPlayerCode.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -75,7 +76,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String code = arg.get("CODE", 0);
 		final Player player = diagram.getPlayer(code);

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandChangeStateByTime.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -75,7 +76,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final Player player = diagram.getLastPlayer();
 		if (player == null)

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandClock.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -87,7 +88,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String compact = arg.get("COMPACT", 0);
 		final String code = arg.get("CODE", 0);
 		final int period = Integer.parseInt(arg.get("PERIOD", 0));

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandConstraint.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -79,7 +80,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String part1 = arg.get("PART1", 0);
 		final Player player1;

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandDefineStateLong.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -65,7 +66,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String playerCode = arg.get("PLAYER", 0);
 		final Player player = diagram.getPlayer(playerCode);
 		if (player == null) {

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandDefineStateShort.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.StringTokenizer;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -65,7 +66,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String playerCode = arg.get("PLAYER", 0);
 		final Player player = diagram.getPlayer(playerCode);
 		if (player == null) {

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandHideTimeAxis.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -62,7 +63,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String cmd = arg.get("COMMAND", 0);
 		if ("MANUAL".equalsIgnoreCase(cmd))
 			return diagram.setTimeAxisStategy(TimeAxisStategy.MANUAL);

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandHighlight.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -84,7 +85,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final TimeTick tickFrom = TimeTickBuilder.parseTimeTick("FROM", arg, diagram);
 		final TimeTick tickTo = TimeTickBuilder.parseTimeTick("TO", arg, diagram);

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandModeCompact.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -59,7 +60,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		diagram.goCompactMode();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandNote.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -72,7 +73,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String code = arg.get("CODE", 0);
 		final Player player = diagram.getPlayer(code);
 		if (player == null) {

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandPixelHeight.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -66,7 +67,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String code = arg.get("PLAYER", 0);
 		final Player player = diagram.getPlayer(code);
 		if (player == null) {

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandRobustConcise.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -85,7 +86,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg)
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String compact = arg.get("COMPACT", 0);
 		final String code = arg.get("CODE", 0);

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandScalePixel.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -65,7 +66,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final long tick = Long.parseLong(arg.get("TICK", 0));
 		final long pixel = Long.parseLong(arg.get("PIXEL", 0));
 		if (tick <= 0 || pixel <= 0)

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandTicks.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -69,7 +70,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String code = arg.get("PLAYER", 0);
 		final Player player = diagram.getPlayer(code);
 		if (player == null) {

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandTimeMessage.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.descdiagram.command.CommandLinkElement;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -79,7 +80,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final Player player1 = diagram.getPlayer(arg.get("PART1", 0));
 		if (player1 == null) {
 			return CommandExecutionResult.error("No such element: " + arg.get("PART1", 0));

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandUseDateFormat.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.timingdiagram.command;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -63,7 +64,7 @@ private static IRegex getRegexConcat() {
 	}
 
 	@Override
-	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg) {
+	final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String format = arg.get("FORMAT", 0);
 		return diagram.useDateFormat(format);
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.8beta5";
+	private static final String version = "1.2024.8beta6";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/wbs/CommandWBSItem.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wbs;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
@@ -81,7 +82,7 @@ static IRegex getRegexConcat(int mode) {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WBSDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(WBSDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String type = arg.get("TYPE", 0);
 		final String label = arg.get("LABEL", 0);

File: src/net/sourceforge/plantuml/wbs/CommandWBSLink.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wbs;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.ColorParser;
 import net.sourceforge.plantuml.klimt.color.ColorType;
@@ -75,7 +76,7 @@ private static ColorParser color() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WBSDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(WBSDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String code1 = arg.get("CODE1", 0);
 		final String code2 = arg.get("CODE2", 0);

File: src/net/sourceforge/plantuml/wire/CommandComponent.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
@@ -75,7 +76,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String indent = arg.get("INDENT", 0);
 		final String name = arg.get("NAME", 0);

File: src/net/sourceforge/plantuml/wire/CommandGoto.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -68,7 +69,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String indent = arg.get("INDENT", 0);
 		final double x = Double.parseDouble(arg.get("X", 0));
 		final double y = Double.parseDouble(arg.get("Y", 0));

File: src/net/sourceforge/plantuml/wire/CommandMove.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -68,7 +69,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String indent = arg.get("INDENT", 0);
 		final double x = Double.parseDouble(arg.get("X", 0));
 		final double y = Double.parseDouble(arg.get("Y", 0));

File: src/net/sourceforge/plantuml/wire/CommandNewColumn.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -58,7 +59,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String indent = arg.get("INDENT", 0);
 		return diagram.newColumn(indent);
 	}

File: src/net/sourceforge/plantuml/wire/CommandPrint.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
@@ -68,7 +69,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg) {
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass) {
 		final String indent = arg.get("INDENT", 0);
 		final String text = arg.get("TEXT", 0);
 		return diagram.print(indent, text);

File: src/net/sourceforge/plantuml/wire/CommandSpot.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
@@ -78,7 +79,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 		final String name = arg.get("NAME", 0);
 

File: src/net/sourceforge/plantuml/wire/CommandWLink.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.wire;
 
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
@@ -82,7 +83,7 @@ static IRegex getRegexConcat() {
 	}
 
 	@Override
-	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg)
+	protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation location, RegexResult arg, ParserPass currentPass)
 			throws NoSuchColorException {
 
 		final String name1 = arg.get("NAME1", 0);

File: src/net/sourceforge/plantuml/xmi/XmiClassDiagramAbstract.java
Patch:
@@ -194,7 +194,7 @@ else if (type == LeafType.INTERFACE)
 			final Member m = (Member) cs;
 
 			final Element attribute = document.createElement("UML:Attribute");
-			attribute.setAttribute("xmi.id", "att" + classDiagram.getUniqueSequence());
+			attribute.setAttribute("xmi.id", "att" + classDiagram.getUniqueSequence(""));
 			attribute.setAttribute("name", m.getDisplay(false));
 			final VisibilityModifier visibility = m.getVisibilityModifier();
 			if (visibility != null)
@@ -208,7 +208,7 @@ else if (type == LeafType.INTERFACE)
 		for (CharSequence cs : entity.getBodier().getMethodsToDisplay()) {
 			final Member m = (Member) cs;
 			final Element operation = document.createElement("UML:Operation");
-			operation.setAttribute("xmi.id", "att" + classDiagram.getUniqueSequence());
+			operation.setAttribute("xmi.id", "att" + classDiagram.getUniqueSequence(""));
 			operation.setAttribute("name", m.getDisplay(false));
 			final VisibilityModifier visibility = m.getVisibilityModifier();
 			if (visibility != null)

File: src/net/sourceforge/plantuml/xmi/XmiClassDiagramScript.java
Patch:
@@ -138,7 +138,7 @@ private void addLink(Link link) {
 			return;
 		}
 
-		final String assId = "ass" + classDiagram.getUniqueSequence();
+		final String assId = "ass" + classDiagram.getUniqueSequence("");
 		if (link.getType().getDecor1() == LinkDecor.EXTENDS || link.getType().getDecor2() == LinkDecor.EXTENDS) {
 			addExtension(link, assId);
 			return;
@@ -182,7 +182,7 @@ private void addLink(Link link) {
 	private Element createAssociationEnd(final String assId, final LinkDecor decor, final String quantifier,
 			Entity entity, UMLAggregationKind aggregation) {
 		final Element end = document.createElement("UML:AssociationEnd");
-		end.setAttribute("xmi.id", "end" + classDiagram.getUniqueSequence());
+		end.setAttribute("xmi.id", "end" + classDiagram.getUniqueSequence(""));
 		end.setAttribute("association", assId);
 
 //		end1.setAttribute("type", link.getEntity1().getUid());

File: src/net/sourceforge/plantuml/xmi/XmiClassDiagramStar.java
Patch:
@@ -68,7 +68,7 @@ private void addLink(Link link) {
 		if (link.isHidden() || link.isInvis())
 			return;
 
-		final String assId = "ass" + classDiagram.getUniqueSequence();
+		final String assId = "ass" + classDiagram.getUniqueSequence("");
 		if (link.getType().getDecor1() == LinkDecor.EXTENDS || link.getType().getDecor2() == LinkDecor.EXTENDS) {
 			addExtension(link, assId);
 			return;
@@ -81,7 +81,7 @@ private void addLink(Link link) {
 
 		final Element connection = document.createElement("UML:Association.connection");
 		final Element end1 = document.createElement("UML:AssociationEnd");
-		end1.setAttribute("xmi.id", "end" + classDiagram.getUniqueSequence());
+		end1.setAttribute("xmi.id", "end" + classDiagram.getUniqueSequence(""));
 		end1.setAttribute("association", assId);
 		end1.setAttribute("type", link.getEntity1().getUid());
 		if (link.getQuantifier1() != null)
@@ -99,7 +99,7 @@ private void addLink(Link link) {
 		connection.appendChild(end1);
 
 		final Element end2 = document.createElement("UML:AssociationEnd");
-		end2.setAttribute("xmi.id", "end" + classDiagram.getUniqueSequence());
+		end2.setAttribute("xmi.id", "end" + classDiagram.getUniqueSequence(""));
 		end2.setAttribute("association", assId);
 		end2.setAttribute("type", link.getEntity2().getUid());
 		if (link.getQuantifier2() != null)

File: src/net/sourceforge/plantuml/xmi/XmiDescriptionDiagramScript.java
Patch:
@@ -62,7 +62,7 @@ protected void addLink(Link link) {
 			return;
 		}
 
-		final String assId = "ass" + diagram.getUniqueSequence();
+		final String assId = "ass" + diagram.getUniqueSequence("");
 
 		UMLAggregationKind aggregation = UMLAggregationKind.None;
 		if (link.getType().getDecor1() == LinkDecor.COMPOSITION) {
@@ -102,7 +102,7 @@ protected void addLink(Link link) {
 	private Element createAssociationEnd(final String assId, final LinkDecor decor, final String quantifier,
 			Entity entity, UMLAggregationKind aggregation) {
 		final Element end = document.createElement("UML:AssociationEnd");
-		end.setAttribute("xmi.id", "end" + diagram.getUniqueSequence());
+		end.setAttribute("xmi.id", "end" + diagram.getUniqueSequence(""));
 		end.setAttribute("association", assId);
 
 //		end1.setAttribute("type", link.getEntity1().getUid());

File: src/net/sourceforge/plantuml/xmi/XmiDescriptionDiagramStandard.java
Patch:
@@ -53,7 +53,7 @@ public XmiDescriptionDiagramStandard(DescriptionDiagram diagram) throws ParserCo
 
 	@Override
 	protected void addLink(Link link) {
-		final String assId = "ass" + diagram.getUniqueSequence();
+		final String assId = "ass" + diagram.getUniqueSequence("");
 
 		final Element association = document.createElement("UML:Association");
 		association.setAttribute("xmi.id", assId);
@@ -63,7 +63,7 @@ protected void addLink(Link link) {
 
 		final Element connection = document.createElement("UML:Association.connection");
 		final Element end1 = document.createElement("UML:AssociationEnd");
-		end1.setAttribute("xmi.id", "end" + diagram.getUniqueSequence());
+		end1.setAttribute("xmi.id", "end" + diagram.getUniqueSequence(""));
 		end1.setAttribute("association", assId);
 		end1.setAttribute("type", link.getEntity1().getUid());
 		if (link.getQuantifier1() != null)
@@ -81,7 +81,7 @@ protected void addLink(Link link) {
 		connection.appendChild(end1);
 
 		final Element end2 = document.createElement("UML:AssociationEnd");
-		end2.setAttribute("xmi.id", "end" + diagram.getUniqueSequence());
+		end2.setAttribute("xmi.id", "end" + diagram.getUniqueSequence(""));
 		end2.setAttribute("association", assId);
 		end2.setAttribute("type", link.getEntity2().getUid());
 		if (link.getQuantifier2() != null)

File: src/net/sourceforge/plantuml/xmi/XmiStateDiagram.java
Patch:
@@ -133,7 +133,7 @@ public static String forXMI(Display s) {
 	}
 
 	private void addLink(Link link) {
-		final String assId = "ass" + diagram.getUniqueSequence();
+		final String assId = "ass" + diagram.getUniqueSequence("");
 
 		final Element association = document.createElement("UML:Association");
 		association.setAttribute("xmi.id", assId);
@@ -143,7 +143,7 @@ private void addLink(Link link) {
 
 		final Element connection = document.createElement("UML:Association.connection");
 		final Element end1 = document.createElement("UML:AssociationEnd");
-		end1.setAttribute("xmi.id", "end" + diagram.getUniqueSequence());
+		end1.setAttribute("xmi.id", "end" + diagram.getUniqueSequence(""));
 		end1.setAttribute("association", assId);
 		end1.setAttribute("type", link.getEntity1().getUid());
 		if (link.getQuantifier1() != null)
@@ -162,7 +162,7 @@ private void addLink(Link link) {
 		connection.appendChild(end1);
 
 		final Element end2 = document.createElement("UML:AssociationEnd");
-		end2.setAttribute("xmi.id", "end" + diagram.getUniqueSequence());
+		end2.setAttribute("xmi.id", "end" + diagram.getUniqueSequence(""));
 		end2.setAttribute("association", assId);
 		end2.setAttribute("type", link.getEntity2().getUid());
 		if (link.getQuantifier2() != null)

File: test/net/sourceforge/plantuml/cheneer/command/CommandEndGroupTest.java
Patch:
@@ -13,6 +13,7 @@
 import net.sourceforge.plantuml.cheneer.ChenEerDiagram;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
+import net.sourceforge.plantuml.command.ParserPass;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.regex.IRegex;
@@ -40,7 +41,7 @@ void test_execute() throws NoSuchColorException {
 		diagram.pushOwner(null);
 
 		BlocLines lines = BlocLines.singleString("}");
-		CommandExecutionResult result = command.execute(diagram, lines);
+		CommandExecutionResult result = command.execute(diagram, lines, ParserPass.ONE);
 
 		assertThat(result).matches(CommandExecutionResult::isOk);
 

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -158,9 +158,10 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 
 		diagram.setLastEntity(entity);
 		if (stereo != null) {
-			entity.setStereotype(Stereotype.build(stereo, diagram.getSkinParam().getCircledCharacterRadius(),
+			final Stereotype stereotype = Stereotype.build(stereo, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
-					diagram.getSkinParam().getIHtmlColorSet()));
+					diagram.getSkinParam().getIHtmlColorSet());
+			entity.setStereotype(stereotype);
 			entity.setStereostyle(stereo);
 		}
 		if (generic != null)

File: src/net/sourceforge/plantuml/svek/image/EntityImageClassHeader.java
Patch:
@@ -165,7 +165,8 @@ private TextBlock getCircledCharacter(Entity entity, ISkinParam skinParam) {
 
 		if (stereotype != null && stereotype.getCharacter() != 0)
 			return new CircledCharacter(stereotype.getCharacter(), getSkinParam().getCircledCharacterRadius(), font,
-					stereotype.getHtmlColor(), spotBorder, fontColor);
+					stereotype.getHtmlColor() == null ? spotBackColor : stereotype.getHtmlColor(), spotBorder,
+					fontColor);
 
 		char circledChar = 0;
 		if (stereotype != null)

File: src/net/atmp/CucaDiagram.java
Patch:
@@ -256,7 +256,7 @@ final public Failable<Quark<Entity>> quarkInContextSafe(boolean reuseExistingChi
 
 		final boolean firstPackageDoesExist = first != null;
 
-		if (firstPackageDoesExist && first.getData().isGroup() == false)
+		if (firstPackageDoesExist && first.getData() != null && first.getData().isGroup() == false)
 			return Failable.error("Not a package: " + full.substring(0, x));
 
 		if (firstPackageDoesExist)

File: src/net/sourceforge/plantuml/project/GanttDiagram.java
Patch:
@@ -312,7 +312,7 @@ else if (printScale == PrintScale.DAILY)
 		else if (printScale == PrintScale.WEEKLY)
 			return new TimeHeaderWeekly(stringBounder, thParam(), weekNumberStrategy, weeklyHeaderStrategy, printStart);
 		else if (printScale == PrintScale.MONTHLY)
-			return new TimeHeaderMonthly(stringBounder, thParam(), printStart);
+			return new TimeHeaderMonthly(stringBounder, thParam(), nameDays, printStart);
 		else if (printScale == PrintScale.QUARTERLY)
 			return new TimeHeaderQuarterly(stringBounder, thParam(), printStart);
 		else if (printScale == PrintScale.YEARLY)

File: src/net/sourceforge/plantuml/svek/image/EntityImageJson.java
Patch:
@@ -103,7 +103,7 @@ public EntityImageJson(Entity entity, ISkinParam skinParam, PortionShower portio
 					FontConfiguration.create(getSkinParam(), FontParam.OBJECT_STEREOTYPE, stereotype),
 					HorizontalAlignment.CENTER, skinParam);
 
-		final FontConfiguration fontConfiguration = getStyleHeader()
+		final FontConfiguration fontConfiguration = getStyle()
 				.getFontConfiguration(getSkinParam().getIHtmlColorSet());
 		this.entries = entity.getBodier().getBody(skinParam, false, false, entity.getStereotype(), getStyle(),
 				fontConfiguration);

File: src/net/sourceforge/plantuml/svek/image/EntityImageMap.java
Patch:
@@ -107,7 +107,7 @@ public EntityImageMap(Entity entity, ISkinParam skinParam, PortionShower portion
 					FontConfiguration.create(getSkinParam(), FontParam.OBJECT_STEREOTYPE, stereotype),
 					HorizontalAlignment.CENTER, skinParam);
 
-		final FontConfiguration fontConfiguration = getStyleHeader()
+		final FontConfiguration fontConfiguration = getStyle()
 				.getFontConfiguration(getSkinParam().getIHtmlColorSet());
 		this.entries = entity.getBodier().getBody(skinParam, false, false, entity.getStereotype(), getStyle(),
 				fontConfiguration);

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -270,7 +270,7 @@ private void drawGroup(UGraphic ug, YMirror ymirror, Entity group, ST_Agraph_s g
 				cluster.setTitlePosition(new XPoint2D(x, Math.min(upperRight.getY(), lowerLeft.getY())));
 			}
 			JUtils.LOG2("cluster=" + cluster);
-			cluster.drawU(ug, diagram.getUmlDiagramType());
+			cluster.drawU(ug);
 			// ug.apply(new UTranslate(llx, lly)).apply(HColors.BLUE).draw(new
 			// URectangle(urx - llx, ury - lly));
 		} catch (Exception e) {

File: src/net/sourceforge/plantuml/svek/SvekResult.java
Patch:
@@ -71,7 +71,7 @@ public void drawU(UGraphic ug) {
 
 		for (Cluster cluster : clusterManager.getBibliotekon().allCluster())
 			if (cluster.getGroup().isPacked() == false)
-				cluster.drawU(ug, dotData.getUmlDiagramType());
+				cluster.drawU(ug);
 
 		final Style style2 = getDefaultStyleDefinition(null)
 				.getMergedStyle(dotData.getSkinParam().getCurrentStyleBuilder());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.8beta3";
+	private static final String version = "1.2024.8beta4";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/ebnf/ShuntingYard.java
Patch:
@@ -62,6 +62,9 @@ public ShuntingYard(Iterator<Token> it) {
 			} else if (token.getSymbol() == Symbol.COMMENT_TOKEN) {
 				operatorStack.addFirst(token);
 
+			} else if (token.getSymbol() == Symbol.NOT) {
+				operatorStack.addFirst(new Token(Symbol.CONCATENATION, null));
+				operatorStack.addFirst(token);
 			} else if (token.getSymbol().isOperator()) {
 				while (thereIsAnOperatorAtTheTopOfTheOperatorStackWithGreaterPrecedence(token)
 						|| thereIsAnCommentOnTopOfTheOperatorStack())

File: src/net/sourceforge/plantuml/ebnf/Symbol.java
Patch:
@@ -61,7 +61,7 @@ public enum Symbol {
 	COMMENT_BELOW, // (* *)
 	COMMENT_ABOVE, // (* *)
 	SPECIAL_SEQUENCE, // ? ?
-	EXCEPTION; // -
+	NOT; // EXCEPTION -
 
 	public int getPriority() {
 		switch (this) {

File: src/net/sourceforge/plantuml/ebnf/CommandEBnfSingleLine.java
Patch:
@@ -66,7 +66,7 @@ static IRegex getRegexConcat() {
 								new RegexLeaf("\\*\\)"), //
 								RegexLeaf.spaceZeroOrMore())), //
 
-				new RegexLeaf("ID", "(\\w[-\\w]*)"), //
+				new RegexLeaf("ID", "([%pLN_][-%pLN_]*)"), //
 
 				new RegexOptional( //
 						new RegexConcat( //

File: src/net/sourceforge/plantuml/ebnf/CommandEbnfMultilines.java
Patch:
@@ -53,7 +53,7 @@ public CommandEbnfMultilines() {
 
 	static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandEbnfMultilines.class.getName(), RegexLeaf.start(), //
-				new RegexLeaf("LINE", "(\\w[-\\w]*[%s]*=.*)"), //
+				new RegexLeaf("LINE", "([%pLN_][-%pLN_]*[%s]*=.*)"), //
 				RegexLeaf.end());
 	}
 

File: src/net/sourceforge/plantuml/ebnf/EbnfEngine.java
Patch:
@@ -122,7 +122,7 @@ public void concatenation() {
 			arg1.push(arg2);
 			stack.addFirst(arg1);
 		} else if (arg2 instanceof ETileConcatenation) {
-			arg2.push(arg1);
+			((ETileConcatenation) arg2).pushLast(arg1);
 			stack.addFirst(arg2);
 		} else {
 			final ETile concat = new ETileConcatenation();

File: src/net/sourceforge/plantuml/ebnf/ETile.java
Patch:
@@ -74,9 +74,9 @@ protected final void drawHline(UGraphic ug, double y, double x1, double x2) {
 		ug.apply(new UTranslate(x1, y)).draw(ULine.hline(x2 - x1));
 	}
 
-	protected final void drawHlineDirected(UGraphic ug, double y, double x1, double x2, double coef) {
+	protected final void drawHlineDirected(UGraphic ug, double y, double x1, double x2, double coef, double minimunSizeForArrow) {
 		ug.apply(new UTranslate(x1, y)).draw(ULine.hline(x2 - x1));
-		if (x2 > x1 + 25)
+		if (x2 > x1 + minimunSizeForArrow)
 			ug.apply(new CopyForegroundColorToBackgroundColor())
 					.apply(new UTranslate(x1 * (1 - coef) + x2 * coef - 2, y)).draw(getArrowToRight());
 

File: src/net/sourceforge/plantuml/ebnf/ETileAlternation.java
Patch:
@@ -109,7 +109,7 @@ public void drawU(UGraphic ug) {
 				tile.drawU(ug.apply(new UTranslate(c, y)));
 
 				CornerCurved.createSW(marginx).drawU(ug.apply(new UTranslate(b, lastLinePos)));
-				drawHlineDirected(ug, lastLinePos, c + dim.getWidth(), p, 0.3);
+				drawHlineDirected(ug, lastLinePos, c + dim.getWidth(), p, 0.3, 25);
 				CornerCurved.createSE(marginx).drawU(ug.apply(new UTranslate(q, lastLinePos)));
 
 				y += dim.getHeight() + 10;
@@ -130,10 +130,10 @@ public void drawU(UGraphic ug) {
 					drawHline(ug, lastLinePos, c + dim.getWidth(), r);
 				} else if (i > 0 && i < tiles.size() - 1) {
 					CornerCurved.createSW(marginx).drawU(ug.apply(new UTranslate(b, lastLinePos)));
-					drawHlineDirected(ug, lastLinePos, c + dim.getWidth(), p, 0.5);
+					drawHlineDirected(ug, lastLinePos, c + dim.getWidth(), p, 0.5, 25);
 					CornerCurved.createSE(marginx).drawU(ug.apply(new UTranslate(q, lastLinePos)));
 				} else if (i == tiles.size() - 1) {
-					drawHlineDirected(ug, lastLinePos, c + dim.getWidth(), p, 0.5);
+					drawHlineDirected(ug, lastLinePos, c + dim.getWidth(), p, 0.5, 25);
 
 				}
 				y += dim.getHeight() + 10;

File: src/net/sourceforge/plantuml/ebnf/ETileBox.java
Patch:
@@ -185,8 +185,8 @@ public void drawU(UGraphic ug) {
 		}
 
 		if (posxBox > 0) {
-			drawHlineDirected(ug, getH1(stringBounder), 0, posxBox, .5);
-			drawHlineDirected(ug, getH1(stringBounder), posxBox + dimBox.getWidth(), dim.getWidth(), .5);
+			drawHlineDirected(ug, getH1(stringBounder), 0, posxBox, .5, 25);
+			drawHlineDirected(ug, getH1(stringBounder), posxBox + dimBox.getWidth(), dim.getWidth(), .5, 25);
 		}
 
 	}

File: src/net/sourceforge/plantuml/ebnf/ETileConcatenation.java
Patch:
@@ -70,7 +70,7 @@ public void drawU(UGraphic ug) {
 			tile.drawU(ug.apply(new UTranslate(x, fullLinePos - linePos)));
 			x += tile.calculateDimension(stringBounder).getWidth();
 			if (i != tiles.size() - 1) {
-				drawHlineDirected(ug, fullLinePos, x, x + marginx, 0.5);
+				drawHlineDirected(ug, fullLinePos, x, x + marginx, 0.5, 25);
 				x += marginx;
 			}
 		}

File: src/net/sourceforge/plantuml/ebnf/ETileOptional.java
Patch:
@@ -107,7 +107,7 @@ public void drawU(UGraphic ug) {
 		drawVline(ug, posA, corner + posYoptionalLine, linePos - corner);
 		CornerCurved.createNW(corner).drawU(ug.apply(new UTranslate(posA, posYoptionalLine)));
 
-		drawHlineDirected(ug, posYoptionalLine, posA + corner, posB - corner, 0.4);
+		drawHlineDirected(ug, posYoptionalLine, posA + corner, posB - corner, 0.4, 0);
 
 		CornerCurved.createSW(corner).drawU(ug.apply(new UTranslate(posB, linePos)));
 		drawVline(ug, posB, corner + posYoptionalLine, linePos - corner);

File: src/net/sourceforge/plantuml/ebnf/ETileWithCircles.java
Patch:
@@ -86,8 +86,8 @@ public void drawU(UGraphic ug) {
 				.apply(new UTranslate(fullDim.getWidth() - SIZE / 2, linePos - SIZE / 2)).draw(circle);
 
 		ug = ug.apply(UStroke.withThickness(1.5));
-		drawHlineDirected(ug, linePos, SIZE, deltax, 0.5);
-		drawHlineDirected(ug, linePos, fullDim.getWidth() - deltax, fullDim.getWidth() - SIZE / 2, 0.5);
+		drawHlineDirected(ug, linePos, SIZE, deltax, 0.5, 25);
+		drawHlineDirected(ug, linePos, fullDim.getWidth() - deltax, fullDim.getWidth() - SIZE / 2, 0.5, 25);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/svek/Cluster.java
Patch:
@@ -697,7 +697,7 @@ public XDimension2D getTitleDimension(StringBounder stringBounder) {
 
 	public MagneticBorder getMagneticBorder() {
 
-		if (group.getUSymbol() == null)
+		if (group.getUSymbol() == null && group.getGroupType() != GroupType.PACKAGE)
 			return new MagneticBorderNone();
 
 		final USymbol uSymbol = group.getUSymbol();

File: src/net/sourceforge/plantuml/cucadiagram/HideOrShow.java
Patch:
@@ -106,10 +106,9 @@ private boolean isApplyableTag(Entity leaf, String pattern) {
 
 	private boolean match(String name, String pattern) {
 
-		final int idx = name.indexOf(Plasma.MAGIC_SEPARATOR);
-		if (idx != -1) {
+		final int idx = name.lastIndexOf(Plasma.MAGIC_SEPARATOR);
+		if (idx != -1)
 			name = name.substring(idx + 1);
-		}
 
 		if (pattern.contains("*")) {
 			// System.err.println("f1=" + pattern);

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.8beta2";
+	private static final String version = "1.2024.8beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/klimt/creole/SheetBlock1.java
Patch:
@@ -139,6 +139,9 @@ private void initMap(StringBounder stringBounder) {
 				sea.add(atom);
 
 			sea.doAlign();
+			if (stringBounder.matchesProperty("TIKZ")) {
+				sea.doAlignTikz();
+			}
 			sea.translateMinYto(y);
 			final double width = sea.getWidth();
 			widths.put(stripe, width);

File: src/net/atmp/ImageBuilder.java
Patch:
@@ -333,9 +333,9 @@ private UGraphic createUGraphic(final XDimension2D dim, double scaleFactor, Prag
 		case VDX:
 			return new UGraphicVdx(backcolor, colorMapper, stringBounder);
 		case LATEX:
-			return new UGraphicTikz(backcolor, colorMapper, stringBounder, scaleFactor, true);
+			return new UGraphicTikz(backcolor, colorMapper, stringBounder, scaleFactor, true, pragma);
 		case LATEX_NO_PREAMBLE:
-			return new UGraphicTikz(backcolor, colorMapper, stringBounder, scaleFactor, false);
+			return new UGraphicTikz(backcolor, colorMapper, stringBounder, scaleFactor, false, pragma);
 		case BRAILLE_PNG:
 			return new UGraphicBraille(backcolor, colorMapper, stringBounder);
 		case UTXT:

File: src/net/sourceforge/plantuml/UmlDiagram.java
Patch:
@@ -128,6 +128,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int index, FileForma
 			throws IOException {
 
 		fileFormatOption = fileFormatOption.withTikzFontDistortion(getSkinParam().getTikzFontDistortion());
+		fileFormatOption.getTikzFontDistortion().updateFromPragma(getPragma());
 
 		// ::comment when __CORE__
 		if (fileFormatOption.getFileFormat() == FileFormat.PDF)

File: src/net/sourceforge/plantuml/klimt/drawing/tikz/UGraphicTikz.java
Patch:
@@ -54,15 +54,16 @@
 import net.sourceforge.plantuml.klimt.shape.UPolygon;
 import net.sourceforge.plantuml.klimt.shape.URectangle;
 import net.sourceforge.plantuml.klimt.shape.UText;
+import net.sourceforge.plantuml.skin.Pragma;
 import net.sourceforge.plantuml.tikz.TikzGraphics;
 import net.sourceforge.plantuml.url.Url;
 
 public class UGraphicTikz extends AbstractUGraphic<TikzGraphics> implements ClipContainer {
 
 	public UGraphicTikz(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder, double scale,
-			boolean withPreamble) {
+			boolean withPreamble, Pragma pragma) {
 		super(stringBounder);
-		copy(defaultBackground, colorMapper, new TikzGraphics(scale, withPreamble, colorMapper));
+		copy(defaultBackground, colorMapper, new TikzGraphics(scale, withPreamble, colorMapper, pragma));
 		register();
 	}
 

File: src/net/sourceforge/plantuml/sudoku/GraphicsSudoku.java
Patch:
@@ -89,7 +89,7 @@ public ImageData writeImageEps(OutputStream os) throws IOException {
 
 	public ImageData writeImageLatex(OutputStream os, FileFormat fileFormat) throws IOException {
 		final UGraphicTikz ug = new UGraphicTikz(HColors.WHITE, ColorMapper.IDENTITY,
-				FileFormat.LATEX.getDefaultStringBounder(), 1, fileFormat == FileFormat.LATEX);
+				FileFormat.LATEX.getDefaultStringBounder(), 1, fileFormat == FileFormat.LATEX, null);
 		drawInternal(ug);
 		ug.writeToStream(os, null, -1); // dpi param is not used
 		return ImageDataSimple.ok();

File: src/net/sourceforge/plantuml/cucadiagram/HideOrShow.java
Patch:
@@ -52,8 +52,8 @@ public String toString() {
 
 	private boolean isApplyable(Entity leaf) {
 		if (leaf.isRoot())
-			return false;
-		
+			throw new IllegalArgumentException();
+
 		if (what.startsWith("$"))
 			return isApplyableTag(leaf, what.substring(1));
 

File: src/net/sourceforge/plantuml/svek/GraphvizImageBuilder.java
Patch:
@@ -350,7 +350,7 @@ private void printEntities(StringBounder stringBounder, Collection<Entity> entit
 
 	private void printEntity(StringBounder stringBounder, Entity ent) {
 		if (ent.isRemoved())
-			throw new IllegalStateException();
+			throw new IllegalStateException(ent.toString());
 
 		final IEntityImage image = printEntityInternal(stringBounder, ent);
 		final SvekNode node = dotStringFactory.getBibliotekon().createNode(ent, image, stringBounder);

File: src/net/sourceforge/plantuml/cucadiagram/HideOrShow.java
Patch:
@@ -51,6 +51,9 @@ public String toString() {
 	}
 
 	private boolean isApplyable(Entity leaf) {
+		if (leaf.isRoot())
+			return false;
+		
 		if (what.startsWith("$"))
 			return isApplyableTag(leaf, what.substring(1));
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/Hexagon.java
Patch:
@@ -86,9 +86,9 @@ public static Stencil asStencil(final TextBlock tb) {
 
 			private final double getDeltaX(double height, double y) {
 				final double p = y / height * 2;
-				if (p <= 1) {
+				if (p <= 1)
 					return hexagonHalfSize * p;
-				}
+
 				return hexagonHalfSize * (2 - p);
 			}
 

File: src/net/sourceforge/plantuml/svek/image/Opale.java
Patch:
@@ -53,8 +53,8 @@ public class Opale extends AbstractTextBlock implements TextBlock {
 	private static final int cornersize = 10;
 	private final HColor noteBackgroundColor;
 	private final HColor borderColor;
-	private final int marginX1 = 6;
-	private final int marginX2 = 15;
+	public static final int marginX1 = 6;
+	public static final int marginX2 = 15;
 	private final int marginY = 5;
 	private final double shadowing2;
 	private Direction strategy;

File: src/net/sourceforge/plantuml/emoji/SvgNanoParser.java
Patch:
@@ -377,7 +377,7 @@ private void drawPath(UGraphicWithScale ugs, String s, HColor colorForMonochrome
 		final int x2 = s.indexOf('"', x1 + 3);
 		final String tmp = s.substring(x1 + 3, x2);
 
-		final SvgPath svgPath = new SvgPath(tmp);
+		final SvgPath svgPath = new SvgPath(tmp, UTranslate.none());
 		svgPath.drawMe(ugs.getUg(), ugs.getAffineTransform());
 
 	}

File: src/net/sourceforge/plantuml/klimt/UPath.java
Patch:
@@ -92,6 +92,8 @@ private void addInternal(USegment segment) {
 	}
 
 	public UPath translate(double dx, double dy) {
+		if (dx == 0 && dy == 0)
+			return this;
 		final UPath result = new UPath(comment, codeLine);
 		for (USegment seg : segments)
 			result.addInternal(seg.translate(dx, dy));

File: src/net/sourceforge/plantuml/openiconic/StringDecipher.java
Patch:
@@ -45,9 +45,9 @@ public static String decipher(String path) {
 		path = path.replaceAll("([a-df-zA-Z])(\\S)", "$1 $2");
 		path = path.replaceAll("(\\S)([a-df-zA-Z])", "$1 $2");
 		path = path.replaceAll("([a-df-zA-Z])(\\S)", "$1 $2");
-		while (path.matches(".*\\.\\d+\\..*")) {
+		while (path.matches(".*\\.\\d+\\..*"))
 			path = path.replaceAll("(\\.\\d+)\\.", "$1 .");
-		}
+
 		return path;
 	}
 

File: src/net/atmp/ImageBuilder.java
Patch:
@@ -359,6 +359,8 @@ private UGraphic createUGraphicSVG(double scaleFactor, XDimension2D dim, Pragma
 		option = option.withColorMapper(fileFormatOption.getColorMapper());
 		option = option.withLinkTarget(getSvgLinkTarget());
 		option = option.withFont(pragma.getValue("svgfont"));
+		if (titledDiagram != null)
+			option = option.withTitle(titledDiagram.getTitleDisplay());
 
 		if ("true".equalsIgnoreCase(pragma.getValue("svginteractive")))
 			option = option.withInteractive();

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -202,7 +202,7 @@ public DiagramDescription getDescription() {
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
 		final StringBounder stringBounder = fileFormatOption.getDefaultStringBounder(getSkinParam());
-		TextBlock result = getTextBlock(stringBounder);
+		final TextBlock result = getTextBlock(stringBounder);
 		return createImageBuilder(fileFormatOption).drawable(result).write(os);
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileFactoryDelegatorRepeat.java
Patch:
@@ -92,7 +92,7 @@ public Ftile repeat(BoxStyle boxStyleIn, Stereotype stereotype, Swimlane swimlan
 		final LinkRendering endRepeatLinkRendering = repeat.getOutLinkRendering();
 		final Rainbow endRepeatLinkColor = endRepeatLinkRendering == null ? null : endRepeatLinkRendering.getRainbow();
 
-		final Ftile entry = getEntry(repeat.getSwimlaneIn(), startLabel, colors, boxStyleIn, stereotype);
+		final Ftile entry = getEntry(swimlane, startLabel, colors, boxStyleIn, stereotype);
 
 		Ftile result = FtileRepeat.create(swimlane, swimlaneOut, entry, repeat, test, yes, out, borderColor,
 				diamondColor, arrowColor, endRepeatLinkColor, conditionStyle, this.skinParam(), fcDiamond, fcArrow,

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.7beta4";
+	private static final String version = "1.2024.7beta5";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/tim/stdlib/IntVal.java
Patch:
@@ -63,9 +63,8 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		final String s = values.get(0).toString();
 		try {
 			return TValue.fromInt(Integer.parseInt(s));
-		} catch (Exception e) {
-			Log.error("Cannot convert " + s);
+		} catch (NumberFormatException e) {
+			throw new EaterException("Cannot convert " + s + " to integer.", location);
 		}
-		return TValue.fromInt(0);
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Modulo.java
Patch:
@@ -30,6 +30,7 @@
  *
  *
  * Original Author:  Arnaud Roques
+ * Contribution:  Aravind Pai
  *
  */
 package net.sourceforge.plantuml.tim.stdlib;

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagramFactory.java
Patch:
@@ -49,7 +49,6 @@
 import net.sourceforge.plantuml.classdiagram.command.CommandLayoutNewLine;
 import net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;
 import net.sourceforge.plantuml.classdiagram.command.CommandLinkLollipop;
-import net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator;
 import net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore;
 import net.sourceforge.plantuml.classdiagram.command.CommandStereotype;
 import net.sourceforge.plantuml.classdiagram.command.CommandUrl;

File: src/net/sourceforge/plantuml/descdiagram/DescriptionDiagramFactory.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Map;
 
 import net.sourceforge.plantuml.classdiagram.command.CommandHideShow2;
-import net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator;
 import net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore;
 import net.sourceforge.plantuml.classdiagram.command.CommandUrl;
 import net.sourceforge.plantuml.command.Command;

File: test/nonreg/simple/TeozTimelineIssues_0007_TestResult.java
Patch:
@@ -220,7 +220,7 @@ public class TeozTimelineIssues_0007_TestResult {
   stroke: 0.0-0.0-1.5
   shadow: 0
   color: ffff0000
-  backcolor: NULL_COLOR
+  backcolor: ff000000
 
 LINE:
   pt1: [ 28.6213 ; 48.0000 ]
@@ -372,7 +372,7 @@ public class TeozTimelineIssues_0007_TestResult {
   stroke: 0.0-0.0-1.5
   shadow: 0
   color: ff181818
-  backcolor: NULL_COLOR
+  backcolor: ff000000
 
 LINE:
   pt1: [ 28.6213 ; 163.0000 ]
@@ -532,7 +532,7 @@ public class TeozTimelineIssues_0007_TestResult {
   stroke: 0.0-0.0-1.5
   shadow: 0
   color: ff181818
-  backcolor: NULL_COLOR
+  backcolor: ff000000
 
 LINE:
   pt1: [ 28.6213 ; 278.0000 ]

File: src/net/sourceforge/plantuml/style/StyleSignatureBasic.java
Patch:
@@ -152,7 +152,6 @@ public String toString() {
 	}
 
 	public boolean matchAll(StyleSignatureBasic other) {
-		System.err.println("names=" + names);
 		final boolean namesContainsStar = names.contains(STAR);
 		if (other.isStarred() && namesContainsStar == false)
 			return false;

File: src/net/sourceforge/plantuml/style/StyleBuilder.java
Patch:
@@ -73,7 +73,7 @@ public final SkinParam getSkinParam() {
 	}
 
 	public Style createStyle(String name) {
-		if (name.contains("*"))
+		if (name.contains(StyleSignatureBasic.STAR))
 			throw new IllegalArgumentException();
 
 		name = name.toLowerCase();

File: src/net/sourceforge/plantuml/style/parser/Context.java
Patch:
@@ -86,7 +86,7 @@ public Collection<StyleSignatureBasic> toSignatures() {
 		boolean star = false;
 		for (Iterator<String> it = data.iterator(); it.hasNext();) {
 			String s = it.next();
-			if (s.endsWith("*")) {
+			if (s.endsWith(StyleSignatureBasic.STAR)) {
 				star = true;
 				s = s.substring(0, s.length() - 1);
 			}

File: src/net/sourceforge/plantuml/style/parser/StyleParser.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.style.PName;
 import net.sourceforge.plantuml.style.Style;
 import net.sourceforge.plantuml.style.StyleScheme;
+import net.sourceforge.plantuml.style.StyleSignatureBasic;
 import net.sourceforge.plantuml.style.Value;
 import net.sourceforge.plantuml.style.ValueImpl;
 import net.sourceforge.plantuml.utils.BlocLines;
@@ -98,7 +99,7 @@ public static Collection<Style> parse(BlocLines lines, AutomaticCounter counter)
 				String full = token.getData();
 				if (ins.peek(0).getType() == StyleTokenType.STAR) {
 					ins.jump();
-					full += "*";
+					full += StyleSignatureBasic.STAR;
 				}
 				skipNewLines(ins);
 				if (ins.peek(0).getType() == StyleTokenType.OPEN_BRACKET) {
@@ -245,7 +246,7 @@ private static List<StyleToken> parse(CharInspector ins) throws StyleParsingExce
 				result.add(new StyleToken(StyleTokenType.NEWLINE, "NEWLINE"));
 				ins.jump();
 			} else if (current == '*') {
-				result.add(new StyleToken(StyleTokenType.STAR, "*"));
+				result.add(new StyleToken(StyleTokenType.STAR, StyleSignatureBasic.STAR));
 				ins.jump();
 			} else if (current == ':') {
 				result.add(new StyleToken(StyleTokenType.COLON, ":"));

File: src/net/sourceforge/plantuml/style/parser/StyleParserLegacy.java
Patch:
@@ -113,7 +113,7 @@ public static Collection<Style> parse(BlocLines lines, AutomaticCounter counter)
 				String names = mKeyNames.group(1);
 				final boolean isRecurse = mKeyNames.group(2) != null;
 				if (isRecurse)
-					names += "*";
+					names += StyleSignatureBasic.STAR;
 
 				context = context.push(names);
 				maps.add(new EnumMap<PName, Value>(PName.class));

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.7beta1";
+	private static final String version = "1.2024.7beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/sequencediagram/graphic/Step1Message.java
Patch:
@@ -271,9 +271,6 @@ private ArrowConfiguration getSelfArrowType(Message m) {
 		if (m.getArrowConfiguration().isHidden())
 			result = result.withBody(ArrowBody.HIDDEN);
 
-		if (m.getArrowConfiguration().isAsync())
-			result = result.withHead(ArrowHead.ASYNC);
-
 		result = result.withHead1(m.getArrowConfiguration().getDressing1().getHead());
 		result = result.withHead2(m.getArrowConfiguration().getDressing2().getHead());
 		result = result.withPart(m.getArrowConfiguration().getPart());

File: src/net/sourceforge/plantuml/klimt/creole/Display.java
Patch:
@@ -352,12 +352,12 @@ public Display removeEndingStereotype() {
 		return this;
 	}
 
-	public final static Pattern2 patternStereotype = MyPattern.cmpile("^(.*?)(?:\\<\\<\\s*(.*)\\s*\\>\\>)\\s*$");
+	public final static Pattern2 patternStereotype = MyPattern.cmpile("^(.*?)(\\<\\<\\s*(.*)\\s*\\>\\>)\\s*$");
 
-	public String getEndingStereotype() {
+	public Stereotype getEndingStereotype() {
 		final Matcher2 m = patternStereotype.matcher(displayData.get(displayData.size() - 1));
 		if (m.matches())
-			return m.group(2);
+			return Stereotype.build(m.group(2));
 
 		return null;
 	}

File: src/net/sourceforge/plantuml/mindmap/Branch.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.klimt.drawing.UGraphic;
 import net.sourceforge.plantuml.klimt.font.StringBounder;
 import net.sourceforge.plantuml.klimt.shape.UDrawable;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;
 import net.sourceforge.plantuml.style.StyleBuilder;
 
@@ -49,7 +50,7 @@ class Branch implements UDrawable {
 	private Idea last;
 	private Finger finger;
 
-	void initRoot(StyleBuilder styleBuilder, HColor backColor, Display label, IdeaShape shape, String stereotype) {
+	void initRoot(StyleBuilder styleBuilder, HColor backColor, Display label, IdeaShape shape, Stereotype stereotype) {
 		root = Idea.createIdeaSimple(styleBuilder, backColor, label, shape, stereotype);
 		last = root;
 	}
@@ -67,7 +68,7 @@ Idea getParentOfLast(int nb) {
 	}
 
 	CommandExecutionResult add(StyleBuilder styleBuilder, HColor backColor, int level, Display label, IdeaShape shape,
-			String stereotype) {
+			Stereotype stereotype) {
 		if (last == null)
 			return CommandExecutionResult.error("Check your indentation ?");
 

File: src/net/sourceforge/plantuml/mindmap/MindMap.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.klimt.geom.Rankdir;
 import net.sourceforge.plantuml.klimt.geom.XDimension2D;
 import net.sourceforge.plantuml.klimt.shape.UDrawable;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;
 import net.sourceforge.plantuml.style.NoStyleAvailableException;
 
@@ -111,7 +112,7 @@ public void drawU(UGraphic ug) {
 
 	private int multiplier = 0;
 
-	CommandExecutionResult addIdeaInternal(String stereotype, HColor backColor, int level, Display label,
+	CommandExecutionResult addIdeaInternal(Stereotype stereotype, HColor backColor, int level, Display label,
 			IdeaShape shape, boolean direction) {
 		try {
 			if (this.reverse.hasRoot() == false && this.regular.hasRoot() == false)

File: src/net/sourceforge/plantuml/mindmap/MindMapDiagram.java
Patch:
@@ -57,6 +57,7 @@
 import net.sourceforge.plantuml.klimt.shape.TextBlock;
 import net.sourceforge.plantuml.skin.SkinParam;
 import net.sourceforge.plantuml.skin.UmlDiagramType;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.utils.Direction;
 
 public class MindMapDiagram extends UmlDiagram {
@@ -122,7 +123,7 @@ private MindMap last() {
 
 	public CommandExecutionResult addIdea(HColor backColor, int level, Display label, IdeaShape shape,
 			boolean direction) {
-		String stereotype = label.getEndingStereotype();
+		final Stereotype stereotype = label.getEndingStereotype();
 		if (stereotype != null)
 			label = label.removeEndingStereotype();
 
@@ -132,7 +133,7 @@ public CommandExecutionResult addIdea(HColor backColor, int level, Display label
 		return last().addIdeaInternal(stereotype, backColor, level, label, shape, direction);
 	}
 
-	public CommandExecutionResult addIdea(String stereotype, HColor backColor, int level, Display label,
+	public CommandExecutionResult addIdea(Stereotype stereotype, HColor backColor, int level, Display label,
 			IdeaShape shape) {
 		if (last().isFull(level))
 			this.mindmaps.add(new MindMap(getSkinParam()));

File: src/net/sourceforge/plantuml/wbs/CommandWBSItemMultiline.java
Patch:
@@ -51,6 +51,7 @@
 import net.sourceforge.plantuml.regex.RegexLeaf;
 import net.sourceforge.plantuml.regex.RegexOptional;
 import net.sourceforge.plantuml.regex.RegexResult;
+import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.utils.BlocLines;
 import net.sourceforge.plantuml.utils.Direction;
 
@@ -72,7 +73,7 @@ static IRegex getRegexConcat() {
 
 	@Override
 	public String getPatternEnd() {
-		return "^(.*);(?:\\s*\\<\\<(.+)\\>\\>)?$";
+		return "^(.*);\\s*(\\<\\<(.+)\\>\\>)?$";
 	}
 
 	static IRegex getRegexConcatOld() {
@@ -105,7 +106,7 @@ protected CommandExecutionResult executeNow(WBSDiagram diagram, BlocLines lines)
 
 		Direction dir = Direction.RIGHT;
 
-		return diagram.addIdea(null, backColor, diagram.getSmartLevel(type), lines.toDisplay(), stereotype, dir,
+		return diagram.addIdea(null, backColor, diagram.getSmartLevel(type), lines.toDisplay(), Stereotype.build(stereotype), dir,
 				IdeaShape.fromDesc(line0.get("SHAPE", 0)));
 
 	}

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommonTile.java
Patch:
@@ -65,7 +65,7 @@ protected final StringBounder getStringBounder() {
 		return stringBounder;
 	}
 
-	final public double getMiddleX() {
+	public double getMiddleX() {
 		final double max = getMaxX().getCurrentValue();
 		final double min = getMinX().getCurrentValue();
 		return (min + max) / 2;

File: src/net/sourceforge/plantuml/skin/rose/ComponentRoseArrow.java
Patch:
@@ -166,18 +166,18 @@ else if (inclination2 != 0)
 		final double textPos;
 		if (messagePosition == HorizontalAlignment.CENTER) {
 			final double textWidth = getTextBlock().calculateDimension(stringBounder).getWidth();
-			textPos = (dimensionToUse.getWidth() - textWidth) / 2;
+			textPos = (dimensionToUse.getWidth() - Math.abs(area.getTextDeltaX()) - textWidth) / 2;
 		} else if (messagePosition == HorizontalAlignment.RIGHT) {
 			final double textWidth = getTextBlock().calculateDimension(stringBounder).getWidth();
-			textPos = dimensionToUse.getWidth() - textWidth - getMarginX2()
+			textPos = dimensionToUse.getWidth() - Math.abs(area.getTextDeltaX()) - textWidth - getMarginX2()
 					- (direction2 == ArrowDirection.LEFT_TO_RIGHT_NORMAL ? getArrowDeltaX() : 0);
 		} else {
 			textPos = getMarginX1()
 					+ (direction2 == ArrowDirection.RIGHT_TO_LEFT_REVERSE || direction2 == ArrowDirection.BOTH_DIRECTION
 							? getArrowDeltaX()
 							: 0);
 		}
-		getTextBlock().drawU(ug.apply(new UTranslate(textPos, yText)));
+		getTextBlock().drawU(ug.apply(new UTranslate(textPos + Math.max(0,area.getTextDeltaX()), yText)));
 	}
 
 	private void drawLine(UGraphic ug, double x1, double y1, double x2, double y2) {

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -780,6 +780,7 @@ private XPoint2D getXY(SvgResult svgResult, int color) {
 
 	}
 
+	@DuplicateCode(reference = "ElkPath")
 	public void drawU(UGraphic ug, Set<String> ids, UStroke suggestedStroke, Rainbow rainbow) {
 		if (opale)
 			return;

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -52,6 +52,7 @@
 import net.sourceforge.plantuml.abel.LinkArrow;
 import net.sourceforge.plantuml.abel.LinkStrategy;
 import net.sourceforge.plantuml.abel.NoteLinkStrategy;
+import net.sourceforge.plantuml.annotation.DuplicateCode;
 import net.sourceforge.plantuml.cucadiagram.EntityPort;
 import net.sourceforge.plantuml.decoration.LinkDecor;
 import net.sourceforge.plantuml.decoration.LinkMiddleDecor;
@@ -110,6 +111,7 @@
 import net.sourceforge.plantuml.utils.Log;
 import net.sourceforge.plantuml.utils.Position;
 
+@DuplicateCode(reference = "SvekLine, CucaDiagramFileMakerElk, CucaDiagramFileMakerSmetana")
 public class SvekLine implements Moveable, Hideable, GuideLine {
 
 	private static final XDimension2D CONSTRAINT_SPOT = new XDimension2D(10, 10);

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.6beta6";
+	private static final String version = "1.2024.6beta8";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/wbs/Fork.java
Patch:
@@ -52,7 +52,7 @@ class Fork extends WBSTextBlock {
 	private final List<ITF> right = new ArrayList<>();
 
 	public Fork(ISkinParam skinParam, WElement idea) {
-		super(idea.withBackColor(skinParam), idea.getStyleBuilder(), idea.getLevel());
+		super(idea.withBackColor(skinParam), idea.getStyleBuilder(), idea.getLevel(), idea.getStereotype());
 		if (idea.getLevel() != 0)
 			throw new IllegalArgumentException();
 

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -360,10 +360,10 @@ public CommandExecutionResult endif() {
 		return CommandExecutionResult.error("Cannot find if");
 	}
 
-	public void startRepeat(HColor color, Display label, BoxStyle boxStyleIn, Colors colors) {
+	public void startRepeat(HColor color, Display label, BoxStyle boxStyleIn, Colors colors, Stereotype stereotype) {
 		manageSwimlaneStrategy();
 		final InstructionRepeat instructionRepeat = new InstructionRepeat(swinlanes, current(), nextLinkRenderer(),
-				color, label, boxStyleIn, colors);
+				color, label, boxStyleIn, colors, stereotype);
 		current().add(instructionRepeat);
 		setCurrent(instructionRepeat);
 		setNextLinkRendererInternal(LinkRendering.none());

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionRepeat.java
Patch:
@@ -95,7 +95,7 @@ public boolean containsBreak() {
 	}
 
 	public InstructionRepeat(Swimlanes swimlanes, Instruction parent, LinkRendering nextLinkRenderer, HColor color,
-			Display startLabel, BoxStyle boxStyleIn, Colors colors) {
+			Display startLabel, BoxStyle boxStyleIn, Colors colors, Stereotype stereotype) {
 		this.currentStyleBuilder = swimlanes.getCurrentStyleBuilder();
 		this.swimlanes = swimlanes;
 		this.swimlane = swimlanes.getCurrentSwimlane();
@@ -105,6 +105,7 @@ public InstructionRepeat(Swimlanes swimlanes, Instruction parent, LinkRendering
 		this.parent = parent;
 		this.nextLinkRenderer = Objects.requireNonNull(nextLinkRenderer);
 		this.colors = colors;
+		this.stereotype = stereotype;
 	}
 
 	private boolean isLastOfTheParent() {
@@ -160,7 +161,7 @@ public Ftile createFtile(FtileFactory factory) {
 		final Ftile decorateOut = factory.decorateOut(repeatList.createFtile(factory), endRepeatLinkRendering);
 		if (this.testCalled == false && incoming1.isNone())
 			incoming1 = swimlanes.nextLinkRenderer();
-		final Ftile result = factory.repeat(boxStyleIn, swimlane, swimlaneOut, startLabel, decorateOut, test, yes, out,
+		final Ftile result = factory.repeat(boxStyleIn, stereotype, swimlane, swimlaneOut, startLabel, decorateOut, test, yes, out,
 				colors, back, isLastOfTheParent(), incoming1, incoming2, currentStyleBuilder);
 		if (killed)
 			return new FtileKilled(result);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/FtileFactory.java
Patch:
@@ -82,7 +82,7 @@ public Ftile addNote(Ftile ftile, Swimlane swimlane, Collection<PositionedNote>
 
 	public Ftile assembly(Ftile tile1, Ftile tile2);
 
-	public Ftile repeat(BoxStyle boxStyleIn, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
+	public Ftile repeat(BoxStyle boxStyleIn, Stereotype stereotype, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
 			Display test, Display yes, Display out, Colors colors, Ftile backward, boolean noOut,
 			LinkRendering incoming1, LinkRendering incoming2, StyleBuilder currentStyleBuilder);
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/FtileFactoryDelegator.java
Patch:
@@ -173,10 +173,10 @@ public Ftile assembly(Ftile tile1, Ftile tile2) {
 	}
 
 	@Override
-	public Ftile repeat(BoxStyle boxStyleIn, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
+	public Ftile repeat(BoxStyle boxStyleIn, Stereotype stereotype, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
 			Display test, Display yes, Display out, Colors colors, Ftile backward, boolean noOut,
 			LinkRendering incoming1, LinkRendering incoming2, StyleBuilder currentStyleBuilder) {
-		return factory.repeat(boxStyleIn, swimlane, swimlaneOut, startLabel, repeat, test, yes, out, colors, backward,
+		return factory.repeat(boxStyleIn, stereotype, swimlane, swimlaneOut, startLabel, repeat, test, yes, out, colors, backward,
 				noOut, incoming1, incoming2, currentStyleBuilder);
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/VCompactFactory.java
Patch:
@@ -154,9 +154,9 @@ public Ftile assembly(Ftile tile1, Ftile tile2) {
 	}
 
 	@Override
-	public Ftile repeat(BoxStyle boxStyleIn, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
-			Display test, Display yes, Display out, Colors colors, Ftile backward, boolean noOut,
-			LinkRendering incoming1, LinkRendering incoming2, StyleBuilder currentStyleBuilder) {
+	public Ftile repeat(BoxStyle boxStyleIn, Stereotype stereotype, Swimlane swimlane, Swimlane swimlaneOut,
+			Display startLabel, Ftile repeat, Display test, Display yes, Display out, Colors colors, Ftile backward,
+			boolean noOut, LinkRendering incoming1, LinkRendering incoming2, StyleBuilder currentStyleBuilder) {
 		return repeat;
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vertical/FtileBox.java
Patch:
@@ -136,6 +136,9 @@ public double getEndingX(StringBounder stringBounder, double y) {
 
 	public static FtileBox create(ISkinParam skinParam, Display label, Swimlane swimlane, BoxStyle boxStyle,
 			Stereotype stereotype) {
+		if (stereotype == null && boxStyle != null)
+			stereotype = boxStyle.getStereotype();
+
 		final Style style = getStyleSignature().withTOBECHANGED(stereotype)
 				.getMergedStyle(skinParam.getCurrentStyleBuilder());
 		final Style styleArrow = getStyleSignatureArrow().getMergedStyle(skinParam.getCurrentStyleBuilder());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.6beta5";
+	private static final String version = "1.2024.6beta6";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.6beta4";
+	private static final String version = "1.2024.6beta5";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/chronology/SubjectTask.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.project.Failable;
 import net.sourceforge.plantuml.project.core.Task;
+import net.sourceforge.plantuml.project.core.TaskCode;
 import net.sourceforge.plantuml.project.lang.SentenceSimple;
 import net.sourceforge.plantuml.project.lang.Subject;
 import net.sourceforge.plantuml.project.lang.Words;
@@ -66,7 +67,8 @@ public Failable<Task> getMe(ChronologyDiagram chronology, RegexResult arg) {
 		final String shortName = arg.get("SHORTNAME", 0);
 		final String stereotype = arg.get("STEREOTYPE", 0);
 
-		result = chronology.getOrCreateTask(subject, shortName, false);
+		final TaskCode code = TaskCode.fromIdAndDisplay(shortName, subject);
+		result = chronology.getOrCreateTask(code, false);
 
 		if (stereotype != null)
 			result.setStereotype(Stereotype.build(arg.get("STEREOTYPE", 0)));

File: src/net/sourceforge/plantuml/project/command/CommandGanttArrow2.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.project.GanttConstraint;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.project.core.Task;
+import net.sourceforge.plantuml.project.core.TaskCode;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
 import net.sourceforge.plantuml.regex.RegexLeaf;
@@ -76,8 +77,8 @@ protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation l
 
 		final String name1 = arg.get("TASK1", 0);
 		final String name2 = arg.get("TASK2", 0);
-		final Task task1 = diagram.getOrCreateTask(name1, null, false);
-		final Task task2 = diagram.getOrCreateTask(name2, null, false);
+		final Task task1 = diagram.getOrCreateTask(TaskCode.fromId(name1), false);
+		final Task task2 = diagram.getOrCreateTask(TaskCode.fromId(name2), false);
 
 		final GanttConstraint link = diagram.forceTaskOrder(task1, task2);
 		link.applyStyle(arg.get("ARROW_STYLE", 0));

File: src/net/sourceforge/plantuml/project/command/CommandGroupStart.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.SingleLineCommand2;
 import net.sourceforge.plantuml.project.GanttDiagram;
+import net.sourceforge.plantuml.project.core.TaskCode;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
 import net.sourceforge.plantuml.regex.RegexLeaf;
@@ -64,7 +65,7 @@ static IRegex getRegexConcat() {
 	@Override
 	protected CommandExecutionResult executeArg(GanttDiagram diagram, LineLocation location, RegexResult arg) {
 		final String name = arg.get("NAME", 0);
-		return diagram.addGroup(name);
+		return diagram.addGroup(TaskCode.fromId(name));
 	}
 
 }

File: src/net/sourceforge/plantuml/project/core/TaskGroup.java
Patch:
@@ -51,8 +51,8 @@ public class TaskGroup extends AbstractTask implements Task {
 	private final TaskGroup parent;
 	private final List<Task> children = new ArrayList<>();
 
-	public TaskGroup(TaskGroup parent, StyleBuilder styleBuilder, String name) {
-		super(styleBuilder, new TaskCode(name));
+	public TaskGroup(TaskGroup parent, StyleBuilder styleBuilder, TaskCode code) {
+		super(styleBuilder, code);
 		this.parent = parent;
 	}
 

File: src/net/sourceforge/plantuml/project/core/TaskImpl.java
Patch:
@@ -185,7 +185,7 @@ public Day getLastDayIfAny() {
 
 	public String getPrettyDisplay() {
 		if (resources.size() > 0) {
-			final StringBuilder result = new StringBuilder(getCode().getSimpleDisplay());
+			final StringBuilder result = new StringBuilder(getCode().getSimpleDisplay2());
 			result.append(" ");
 			for (Iterator<Map.Entry<Resource, Integer>> it = resources.entrySet().iterator(); it.hasNext();) {
 				final Map.Entry<Resource, Integer> ent = it.next();
@@ -202,7 +202,7 @@ public String getPrettyDisplay() {
 			}
 			return result.toString();
 		}
-		return getCode().getSimpleDisplay();
+		return getCode().getSimpleDisplay2();
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/core/TaskSeparator.java
Patch:
@@ -48,7 +48,7 @@ public class TaskSeparator extends AbstractTask implements Task {
 	private final String comment;
 
 	public TaskSeparator(StyleBuilder styleBuilder, String comment, int id) {
-		super(styleBuilder, new TaskCode("##" + id));
+		super(styleBuilder, TaskCode.fromId("##" + id));
 		this.comment = comment;
 	}
 

File: src/net/sourceforge/plantuml/project/lang/SubjectTask.java
Patch:
@@ -42,6 +42,7 @@
 import net.sourceforge.plantuml.project.Failable;
 import net.sourceforge.plantuml.project.GanttDiagram;
 import net.sourceforge.plantuml.project.core.Task;
+import net.sourceforge.plantuml.project.core.TaskCode;
 import net.sourceforge.plantuml.regex.IRegex;
 import net.sourceforge.plantuml.regex.RegexConcat;
 import net.sourceforge.plantuml.regex.RegexLeaf;
@@ -70,7 +71,8 @@ public Failable<Task> getMe(GanttDiagram gantt, RegexResult arg) {
 			final String then = arg.get("THEN", 0);
 			final String stereotype = arg.get("STEREOTYPE", 0);
 			
-			result = gantt.getOrCreateTask(subject, shortName, then != null);
+			final TaskCode code = TaskCode.fromIdAndDisplay(shortName, subject);
+			result = gantt.getOrCreateTask(code, then != null);
 			
 			if (stereotype != null)
 				result.setStereotype(Stereotype.build(arg.get("STEREOTYPE", 0)));

File: src/net/sourceforge/plantuml/tim/FunctionsSet.java
Patch:
@@ -73,8 +73,8 @@ public Map<TFunctionSignature, TFunction> functions() {
 		return Collections.unmodifiableMap(functions);
 	}
 
-	public String getLonguestMatchStartingIn(String s) {
-		return functions3.getLonguestMatchStartingIn(s);
+	public String getLonguestMatchStartingIn(String s, int pos) {
+		return functions3.getLonguestMatchStartingIn(s, pos);
 	}
 
 	public TFunctionImpl pendingFunction() {

File: src/net/sourceforge/plantuml/tim/TContext.java
Patch:
@@ -759,7 +759,7 @@ private String getFunctionNameAt(String s, int pos) {
 				&& VariableManager.justAfterBackslashN(s, pos) == false)
 			return null;
 
-		final String fname = functionsSet.getLonguestMatchStartingIn(s.substring(pos));
+		final String fname = functionsSet.getLonguestMatchStartingIn(s, pos);
 		if (fname.length() == 0)
 			return null;
 

File: src/net/sourceforge/plantuml/tim/Trie.java
Patch:
@@ -38,6 +38,6 @@ public interface Trie {
 
 	public void add(String s);
 
-	public String getLonguestMatchStartingIn(String s);
+	public String getLonguestMatchStartingIn(String s, int pos);
 
 }

File: src/net/sourceforge/plantuml/tim/VariableManager.java
Patch:
@@ -143,7 +143,7 @@ public String getVarnameAt(String s, int pos) {
 				&& justAfterBackslashN(s, pos) == false) {
 			return null;
 		}
-		final String varname = memory.variablesNames3().getLonguestMatchStartingIn(s.substring(pos));
+		final String varname = memory.variablesNames3().getLonguestMatchStartingIn(s, pos);
 		if (varname.length() == 0)
 			return null;
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.6beta3";
+	private static final String version = "1.2024.6beta4";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandArrow.java
Patch:
@@ -229,8 +229,10 @@ else if (xInDressing1 || xInDressing2)
 		final boolean circleAtEnd;
 
 		if (reverseDefine) {
-			p1 = getOrCreateParticipant(diagram, arg, "PART2");
+			// Keep the order
+			// See https://github.com/plantuml/plantuml/issues/1819#issuecomment-2158524871
 			p2 = getOrCreateParticipant(diagram, arg, "PART1");
+			p1 = getOrCreateParticipant(diagram, arg, "PART2");
 			circleAtStart = dressing2.contains("o");
 			circleAtEnd = dressing1.contains("o");
 		} else {

File: src/net/sourceforge/plantuml/sequencediagram/graphic/DrawableSetInitializer.java
Patch:
@@ -150,7 +150,7 @@ public DrawableSet createDrawableSet(StringBounder stringBounder) {
 			final LivingParticipantBox living = drawableSet.getLivingParticipantBox(p);
 			for (int i = 0; i < p.getInitialLife(); i++)
 				living.getLifeLine().addSegmentVariation(LifeSegmentVariation.LARGER,
-						freeY2.getFreeY(getFullParticipantRange()), p.getLiveSpecificBackColors());
+						freeY2.getFreeY(getFullParticipantRange()), p.getLiveSpecificBackColors(i));
 
 		}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelf.java
Patch:
@@ -126,7 +126,7 @@ public void drawU(UGraphic ug) {
 		if (!isReverseDefine()) {
 			x1 += CommunicationTile.LIVE_DELTA_SIZE * levelIgnore;
 			if (levelIgnore < levelConsidere) {
-				x1 += CommunicationTile.LIVE_DELTA_SIZE;
+				x1 += CommunicationTile.LIVE_DELTA_SIZE * (levelConsidere-levelIgnore);
 			}
 		}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/Stairs.java
Patch:
@@ -50,7 +50,7 @@ public void addStep(Step step) {
 		}
 		if (values.size() > 0) {
 			final double lastY = values.get(values.size() - 1).getValue();
-			if (step.getValue() <= lastY) {
+			if (step.getValue() < lastY) {
 				// throw new IllegalArgumentException();
 				return;
 			}

File: src/net/sourceforge/plantuml/sequencediagram/graphic/DrawableSetInitializer.java
Patch:
@@ -150,7 +150,7 @@ public DrawableSet createDrawableSet(StringBounder stringBounder) {
 			final LivingParticipantBox living = drawableSet.getLivingParticipantBox(p);
 			for (int i = 0; i < p.getInitialLife(); i++)
 				living.getLifeLine().addSegmentVariation(LifeSegmentVariation.LARGER,
-						freeY2.getFreeY(getFullParticipantRange()), p.getLiveSpecificBackColors());
+						freeY2.getFreeY(getFullParticipantRange()), p.getLiveSpecificBackColors(i));
 
 		}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelf.java
Patch:
@@ -126,7 +126,7 @@ public void drawU(UGraphic ug) {
 		if (!isReverseDefine()) {
 			x1 += CommunicationTile.LIVE_DELTA_SIZE * levelIgnore;
 			if (levelIgnore < levelConsidere) {
-				x1 += CommunicationTile.LIVE_DELTA_SIZE;
+				x1 += CommunicationTile.LIVE_DELTA_SIZE * (levelConsidere-levelIgnore);
 			}
 		}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/Stairs.java
Patch:
@@ -50,7 +50,7 @@ public void addStep(Step step) {
 		}
 		if (values.size() > 0) {
 			final double lastY = values.get(values.size() - 1).getValue();
-			if (step.getValue() <= lastY) {
+			if (step.getValue() < lastY) {
 				// throw new IllegalArgumentException();
 				return;
 			}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.6beta1";
+	private static final String version = "1.2024.6beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.6beta1";
+	private static final String version = "1.2024.6beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/sequencediagram/GroupingLeaf.java
Patch:
@@ -98,7 +98,8 @@ public boolean hasUrl() {
 
 	@Override
 	public boolean isParallel() {
-		return start.isParallel();
+		// only Par2 Group Leafs should return true.
+		return start.isPar2GroupStart();
 	}
 
 	private double posYendLevel;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LiveBoxes.java
Patch:
@@ -109,6 +109,7 @@ private int getLevelAtInternal(Event event, EventsHistoryMode mode) {
 				if (current instanceof AbstractMessage) {
 					while (it.hasNext()) {
 						final Event next = nextButSkippingNotes(it);
+						if (!(next instanceof LifeEvent || next instanceof AbstractMessage)) break;
 						if (!(next instanceof LifeEvent)) continue;
 
 						final LifeEvent le = (LifeEvent) next;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LiveBoxes.java
Patch:
@@ -109,6 +109,7 @@ private int getLevelAtInternal(Event event, EventsHistoryMode mode) {
 				if (current instanceof AbstractMessage) {
 					while (it.hasNext()) {
 						final Event next = nextButSkippingNotes(it);
+						if (!(next instanceof LifeEvent || next instanceof AbstractMessage)) break;
 						if (!(next instanceof LifeEvent)) continue;
 
 						final LifeEvent le = (LifeEvent) next;

File: src/net/sourceforge/plantuml/sequencediagram/GroupingLeaf.java
Patch:
@@ -98,7 +98,8 @@ public boolean hasUrl() {
 
 	@Override
 	public boolean isParallel() {
-		return start.isParallel();
+		// only Par2 Group Leafs should return true.
+		return start.isPar2GroupStart();
 	}
 
 	private double posYendLevel;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteLeft.java
Patch:
@@ -94,7 +94,7 @@ final protected void callbackY_internal(TimeHook y) {
 	}
 
 	private Component getComponent(StringBounder stringBounder) {
-		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), ComponentType.NOTE,
+		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), NoteTile.getNoteComponentType(noteOnMessage.getNoteStyle()),
 				noteOnMessage.getSkinParamBackcolored(skinParam), noteOnMessage.getDisplay(),
 				noteOnMessage.getColors());
 		return comp;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteRight.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.sequencediagram.AbstractMessage;
 import net.sourceforge.plantuml.sequencediagram.Event;
 import net.sourceforge.plantuml.sequencediagram.Note;
+import net.sourceforge.plantuml.sequencediagram.NoteStyle;
 import net.sourceforge.plantuml.skin.Area;
 import net.sourceforge.plantuml.skin.Component;
 import net.sourceforge.plantuml.skin.ComponentType;
@@ -98,7 +99,7 @@ final protected void callbackY_internal(TimeHook y) {
 	}
 
 	private Component getComponent(StringBounder stringBounder) {
-		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), ComponentType.NOTE,
+		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), NoteTile.getNoteComponentType(noteOnMessage.getNoteStyle()),
 				noteOnMessage.getSkinParamBackcolored(skinParam), noteOnMessage.getDisplay(),
 				noteOnMessage.getColors());
 		return comp;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/NoteTile.java
Patch:
@@ -92,7 +92,7 @@ private Component getComponent(StringBounder stringBounder) {
 		return comp;
 	}
 
-	private ComponentType getNoteComponentType(NoteStyle noteStyle) {
+	protected static ComponentType getNoteComponentType(NoteStyle noteStyle) {
 		if (noteStyle == NoteStyle.HEXAGONAL)
 			return ComponentType.NOTE_HEXAGONAL;
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteLeft.java
Patch:
@@ -94,7 +94,7 @@ final protected void callbackY_internal(TimeHook y) {
 	}
 
 	private Component getComponent(StringBounder stringBounder) {
-		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), ComponentType.NOTE,
+		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), NoteTile.getNoteComponentType(noteOnMessage.getNoteStyle()),
 				noteOnMessage.getSkinParamBackcolored(skinParam), noteOnMessage.getDisplay(),
 				noteOnMessage.getColors());
 		return comp;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteRight.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.sequencediagram.AbstractMessage;
 import net.sourceforge.plantuml.sequencediagram.Event;
 import net.sourceforge.plantuml.sequencediagram.Note;
+import net.sourceforge.plantuml.sequencediagram.NoteStyle;
 import net.sourceforge.plantuml.skin.Area;
 import net.sourceforge.plantuml.skin.Component;
 import net.sourceforge.plantuml.skin.ComponentType;
@@ -98,7 +99,7 @@ final protected void callbackY_internal(TimeHook y) {
 	}
 
 	private Component getComponent(StringBounder stringBounder) {
-		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), ComponentType.NOTE,
+		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), NoteTile.getNoteComponentType(noteOnMessage.getNoteStyle()),
 				noteOnMessage.getSkinParamBackcolored(skinParam), noteOnMessage.getDisplay(),
 				noteOnMessage.getColors());
 		return comp;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/NoteTile.java
Patch:
@@ -92,7 +92,7 @@ private Component getComponent(StringBounder stringBounder) {
 		return comp;
 	}
 
-	private ComponentType getNoteComponentType(NoteStyle noteStyle) {
+	protected static ComponentType getNoteComponentType(NoteStyle noteStyle) {
 		if (noteStyle == NoteStyle.HEXAGONAL)
 			return ComponentType.NOTE_HEXAGONAL;
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LiveBoxes.java
Patch:
@@ -108,14 +108,14 @@ private int getLevelAtInternal(Event event, EventsHistoryMode mode) {
 			if (event == current) {
 				if (current instanceof AbstractMessage) {
 					while (it.hasNext()) {
-						Event next = nextButSkippingNotes(it);
+						final Event next = nextButSkippingNotes(it);
 						if (!(next instanceof LifeEvent)) continue;
 
 						final LifeEvent le = (LifeEvent) next;
 						final AbstractMessage msg = (AbstractMessage) current;
 
-						boolean sameMessage = msg == le.getMessage()
-								|| le.getMessage().isParallelWith(msg);
+						final boolean sameMessage = msg == le.getMessage()
+								|| (le.getMessage() != null && le.getMessage().isParallelWith(msg));
 						if (!sameMessage)
 							continue;
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.5beta5";
+	private static final String version = "1.2024.5beta6";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -805,6 +805,8 @@ public void drawU(UGraphic ug, Set<String> ids, UStroke suggestedStroke, Rainbow
 		x += dx;
 		y += dy;
 
+		// Warning: duplicated from SmetanaPath and SvekLine
+
 		HColor arrowHeadColor = rainbow.getArrowHeadColor();
 		HColor color = rainbow.getColor();
 

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -191,7 +191,7 @@ public CommandExecutionResult addMessage(AbstractMessage m) {
 	}
 
 	private AbstractMessage getLastAbstractMessage() {
-		for (int i = events.size() - 1; i > 0; i--)
+		for (int i = events.size() - 1; i >= 0; i--)
 			if (events.get(i) instanceof AbstractMessage)
 				return (AbstractMessage) events.get(i);
 

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -191,7 +191,7 @@ public CommandExecutionResult addMessage(AbstractMessage m) {
 	}
 
 	private AbstractMessage getLastAbstractMessage() {
-		for (int i = events.size() - 1; i > 0; i--)
+		for (int i = events.size() - 1; i >= 0; i--)
 			if (events.get(i) instanceof AbstractMessage)
 				return (AbstractMessage) events.get(i);
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTile.java
Patch:
@@ -186,8 +186,10 @@ public void drawU(UGraphic ug) {
 		if (isReverse(stringBounder)) {
 			final int level1 = livingSpace1.getLevelAt(this, EventsHistoryMode.IGNORE_FUTURE_DEACTIVATE);
 			final int level2 = livingSpace2.getLevelAt(this, EventsHistoryMode.IGNORE_FUTURE_DEACTIVATE);
-			if (level1 > 0)
+			if (level1 == 1)
 				x1 -= LIVE_DELTA_SIZE;
+			else if (level1 > 2)
+				x1 += LIVE_DELTA_SIZE*(level1-2);
 
 			x2 += LIVE_DELTA_SIZE * level2;
 			area = Area.create(x1 - x2, dim.getHeight());

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTile.java
Patch:
@@ -186,8 +186,10 @@ public void drawU(UGraphic ug) {
 		if (isReverse(stringBounder)) {
 			final int level1 = livingSpace1.getLevelAt(this, EventsHistoryMode.IGNORE_FUTURE_DEACTIVATE);
 			final int level2 = livingSpace2.getLevelAt(this, EventsHistoryMode.IGNORE_FUTURE_DEACTIVATE);
-			if (level1 > 0)
+			if (level1 == 1)
 				x1 -= LIVE_DELTA_SIZE;
+			else if (level1 > 2)
+				x1 += LIVE_DELTA_SIZE*(level1-2);
 
 			x2 += LIVE_DELTA_SIZE * level2;
 			area = Area.create(x1 - x2, dim.getHeight());

File: src/net/sourceforge/plantuml/tim/stdlib/JsonMerge.java
Patch:
@@ -39,8 +39,6 @@
 import java.util.Map;
 import java.util.Set;
 
-import net.sourceforge.plantuml.json.JsonArray;
-import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;

File: src/net/sourceforge/plantuml/tim/stdlib/JsonRemove.java
Patch:
@@ -39,8 +39,6 @@
 import java.util.Map;
 import java.util.Set;
 
-import net.sourceforge.plantuml.json.JsonArray;
-import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;

File: src/net/sourceforge/plantuml/tim/stdlib/JsonSet.java
Patch:
@@ -39,8 +39,6 @@
 import java.util.Map;
 import java.util.Set;
 
-import net.sourceforge.plantuml.json.JsonArray;
-import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.5beta4";
+	private static final String version = "1.2024.5beta5";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/tim/stdlib/JsonMerge.java
Patch:
@@ -70,7 +70,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		if (!data1.isJson())
 			throw new EaterException("Not JSON data", location);
 
-		final JsonValue json0 = data0.toJson();
+		final JsonValue json0 = data0.toJson().cloneMe();
 		final JsonValue json1 = data1.toJson();
 
 		if ((!json0.isArray() && !json0.isObject() && !json1.isArray() && !json1.isObject())

File: src/net/sourceforge/plantuml/tim/stdlib/JsonSet.java
Patch:
@@ -67,7 +67,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		if (!data.isJson())
 			throw new EaterException("Not JSON data", location);
 
-		final JsonValue json = data.toJson();
+		final JsonValue json = data.toJson().cloneMe();
 
 		if (!json.isArray() && !json.isObject())
 			return data;

File: src/net/sourceforge/plantuml/tim/stdlib/JsonMerge.java
Patch:
@@ -70,7 +70,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		if (!data1.isJson())
 			throw new EaterException("Not JSON data", location);
 
-		final JsonValue json0 = data0.toJson();
+		final JsonValue json0 = data0.toJson().cloneMe();
 		final JsonValue json1 = data1.toJson();
 
 		if ((!json0.isArray() && !json0.isObject() && !json1.isArray() && !json1.isObject())

File: src/net/sourceforge/plantuml/tim/stdlib/JsonSet.java
Patch:
@@ -67,7 +67,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		if (!data.isJson())
 			throw new EaterException("Not JSON data", location);
 
-		final JsonValue json = data.toJson();
+		final JsonValue json = data.toJson().cloneMe();
 
 		if (!json.isArray() && !json.isObject())
 			return data;

File: src/net/sourceforge/plantuml/json/JsonString.java
Patch:
@@ -72,5 +72,5 @@ public boolean equals(Object object) {
 		JsonString other = (JsonString) object;
 		return string.equals(other.string);
 	}
-
+	
 }

File: src/net/sourceforge/plantuml/tim/stdlib/JsonAdd.java
Patch:
@@ -67,7 +67,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		if (data.isJson() == false)
 			throw new EaterException("Not JSON data", location);
 
-		final JsonValue json = data.toJson();
+		final JsonValue json = data.toJson().cloneMe();
 
 		if (!json.isArray() && !json.isObject())
 			return data;

File: src/net/sourceforge/plantuml/sequencediagram/graphic/ArrowAndNoteBox.java
Patch:
@@ -105,9 +105,6 @@ public double getPreferredWidth(StringBounder stringBounder) {
 		double result = w;
 		for (NoteBox noteBox : noteBoxes) {
 			result += noteBox.getPreferredWidth(stringBounder);
-			if (noteBox.getNotePosition() == NotePosition.RIGHT) {
-				result += noteBox.getRightShift(arrow.getStartingY());
-			}
 		}
 		return result;
 	}

File: src/net/sourceforge/plantuml/sequencediagram/graphic/Step1Message.java
Patch:
@@ -216,7 +216,7 @@ private MessageSelfArrow createMessageSelfArrow() {
 		final ArrowComponent comp = getDrawingSet().getSkin().createComponentArrow(styles, getConfig(),
 				getDrawingSet().getSkinParam(), getMessage().getLabelNumbered());
 		return new MessageSelfArrow(posY, getDrawingSet().getSkin(), comp, getLivingParticipantBox1(), deltaY,
-				getMessage().getUrl(), deltaX);
+				getMessage().getUrl(), deltaX,getConfig().isReverseDefine());
 	}
 
 	private double getHalfLifeWidth() {

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationExoTile.java
Patch:
@@ -188,6 +188,9 @@ private Real getPoint1(final StringBounder stringBounder) {
 		if (message.getType().isRightBorder())
 			return livingSpace.getPosC(stringBounder);
 
+		if (isShortArrow())
+			return livingSpace.getPosC(stringBounder).addFixed(-getPreferredWidth(stringBounder));
+
 		return tileArguments.getXOrigin();
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelf.java
Patch:
@@ -119,7 +119,7 @@ public void drawU(UGraphic ug) {
 		final StringBounder stringBounder = ug.getStringBounder();
 		final Component comp = getComponent(stringBounder);
 		final XDimension2D dim = comp.getPreferredDimension(stringBounder);
-		double x1 = getPoint1(stringBounder).getCurrentValue();
+		double x1 = getMinX().getCurrentValue();
 		final int levelIgnore = livingSpace1.getLevelAt(this, EventsHistoryMode.IGNORE_FUTURE_ACTIVATE);
 		final int levelConsidere = livingSpace1.getLevelAt(this, EventsHistoryMode.CONSIDERE_FUTURE_DEACTIVATE);
 		Log.info("CommunicationTileSelf::drawU levelIgnore=" + levelIgnore + " levelConsidere=" + levelConsidere);
@@ -194,7 +194,7 @@ private Real getPoint1(final StringBounder stringBounder) {
 
 	public Real getMinX() {
 		if (isReverseDefine()) {
-			return getPoint1(getStringBounder());
+			return livingSpace1.getPosC(getStringBounder()).addFixed(-getCompWidth());
 		}
 		return getPoint1(getStringBounder());
 	}

File: src/net/sourceforge/plantuml/sequencediagram/graphic/ArrowAndNoteBox.java
Patch:
@@ -105,9 +105,6 @@ public double getPreferredWidth(StringBounder stringBounder) {
 		double result = w;
 		for (NoteBox noteBox : noteBoxes) {
 			result += noteBox.getPreferredWidth(stringBounder);
-			if (noteBox.getNotePosition() == NotePosition.RIGHT) {
-				result += noteBox.getRightShift(arrow.getStartingY());
-			}
 		}
 		return result;
 	}

File: src/net/sourceforge/plantuml/sequencediagram/graphic/Step1Message.java
Patch:
@@ -216,7 +216,7 @@ private MessageSelfArrow createMessageSelfArrow() {
 		final ArrowComponent comp = getDrawingSet().getSkin().createComponentArrow(styles, getConfig(),
 				getDrawingSet().getSkinParam(), getMessage().getLabelNumbered());
 		return new MessageSelfArrow(posY, getDrawingSet().getSkin(), comp, getLivingParticipantBox1(), deltaY,
-				getMessage().getUrl(), deltaX);
+				getMessage().getUrl(), deltaX,getConfig().isReverseDefine());
 	}
 
 	private double getHalfLifeWidth() {

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationExoTile.java
Patch:
@@ -188,6 +188,9 @@ private Real getPoint1(final StringBounder stringBounder) {
 		if (message.getType().isRightBorder())
 			return livingSpace.getPosC(stringBounder);
 
+		if (isShortArrow())
+			return livingSpace.getPosC(stringBounder).addFixed(-getPreferredWidth(stringBounder));
+
 		return tileArguments.getXOrigin();
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelf.java
Patch:
@@ -119,7 +119,7 @@ public void drawU(UGraphic ug) {
 		final StringBounder stringBounder = ug.getStringBounder();
 		final Component comp = getComponent(stringBounder);
 		final XDimension2D dim = comp.getPreferredDimension(stringBounder);
-		double x1 = getPoint1(stringBounder).getCurrentValue();
+		double x1 = getMinX().getCurrentValue();
 		final int levelIgnore = livingSpace1.getLevelAt(this, EventsHistoryMode.IGNORE_FUTURE_ACTIVATE);
 		final int levelConsidere = livingSpace1.getLevelAt(this, EventsHistoryMode.CONSIDERE_FUTURE_DEACTIVATE);
 		Log.info("CommunicationTileSelf::drawU levelIgnore=" + levelIgnore + " levelConsidere=" + levelConsidere);
@@ -194,7 +194,7 @@ private Real getPoint1(final StringBounder stringBounder) {
 
 	public Real getMinX() {
 		if (isReverseDefine()) {
-			return getPoint1(getStringBounder());
+			return livingSpace1.getPosC(getStringBounder()).addFixed(-getCompWidth());
 		}
 		return getPoint1(getStringBounder());
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.5beta2";
+	private static final String version = "1.2024.5beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java
Patch:
@@ -297,6 +297,8 @@ else if (value.equalsIgnoreCase("true"))
 		} else if (key.equals("hyperlinkunderline")) {
 			if (value.equalsIgnoreCase("false"))
 				value = "0";
+			if (value.equalsIgnoreCase("true"))
+				value = "1";
 		}
 
 		if (value.equalsIgnoreCase("right:right"))

File: src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java
Patch:
@@ -297,6 +297,8 @@ else if (value.equalsIgnoreCase("true"))
 		} else if (key.equals("hyperlinkunderline")) {
 			if (value.equalsIgnoreCase("false"))
 				value = "0";
+			if (value.equalsIgnoreCase("true"))
+				value = "1";
 		}
 
 		if (value.equalsIgnoreCase("right:right"))

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -148,6 +148,7 @@ public Link getInv() {
 		result.linkConstraint = this.linkConstraint;
 		result.stereotype = stereotype;
 		result.linkArg.setVisibilityModifier(this.linkArg.getVisibilityModifier());
+        result.linkArrow = linkArrow;
 		return result;
 	}
 

File: src/net/sourceforge/plantuml/descdiagram/command/CommandLinkElement.java
Patch:
@@ -278,10 +278,10 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 		Link link = new Link(diagram.getEntityFactory(), diagram.getSkinParam().getCurrentStyleBuilder(), cl1, cl2,
 				linkType, linkArg.withQuantifier(labels.getFirstLabel(), labels.getSecondLabel())
 						.withDistanceAngle(diagram.getLabeldistance(), diagram.getLabelangle()));
-		link.setLinkArrow(labels.getLinkArrow());
 		if (dir == Direction.LEFT || dir == Direction.UP)
 			link = link.getInv();
 
+        link.setLinkArrow(labels.getLinkArrow());
 		link.setColors(color().getColor(arg, diagram.getSkinParam().getIHtmlColorSet()));
 		link.applyStyle(arg.getLazzy("ARROW_STYLE", 0));
 		if (arg.get("STEREOTYPE", 0) != null) {

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -148,6 +148,7 @@ public Link getInv() {
 		result.linkConstraint = this.linkConstraint;
 		result.stereotype = stereotype;
 		result.linkArg.setVisibilityModifier(this.linkArg.getVisibilityModifier());
+        result.linkArrow = linkArrow;
 		return result;
 	}
 

File: src/net/sourceforge/plantuml/descdiagram/command/CommandLinkElement.java
Patch:
@@ -278,10 +278,10 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 		Link link = new Link(diagram.getEntityFactory(), diagram.getSkinParam().getCurrentStyleBuilder(), cl1, cl2,
 				linkType, linkArg.withQuantifier(labels.getFirstLabel(), labels.getSecondLabel())
 						.withDistanceAngle(diagram.getLabeldistance(), diagram.getLabelangle()));
-		link.setLinkArrow(labels.getLinkArrow());
 		if (dir == Direction.LEFT || dir == Direction.UP)
 			link = link.getInv();
 
+        link.setLinkArrow(labels.getLinkArrow());
 		link.setColors(color().getColor(arg, diagram.getSkinParam().getIHtmlColorSet()));
 		link.applyStyle(arg.getLazzy("ARROW_STYLE", 0));
 		if (arg.get("STEREOTYPE", 0) != null) {

File: src/net/sourceforge/plantuml/tim/TContext.java
Patch:
@@ -113,6 +113,7 @@
 import net.sourceforge.plantuml.tim.stdlib.JsonAdd;
 import net.sourceforge.plantuml.tim.stdlib.JsonKeyExists;
 import net.sourceforge.plantuml.tim.stdlib.JsonRemove;
+import net.sourceforge.plantuml.tim.stdlib.JsonSet;
 import net.sourceforge.plantuml.tim.stdlib.Lighten;
 import net.sourceforge.plantuml.tim.stdlib.LoadJson;
 import net.sourceforge.plantuml.tim.stdlib.LogicalAnd;
@@ -222,6 +223,7 @@ private void addStandardFunctions(Defines defines) {
 		functionsSet.addFunction(new Str2Json());
 		functionsSet.addFunction(new JsonAdd());
 		functionsSet.addFunction(new JsonRemove());
+		functionsSet.addFunction(new JsonSet());
 		// %standard_exists_function
 		// %str_replace
 		// !exit

File: src/net/sourceforge/plantuml/cheneer/ChenEerDiagramFactory.java
Patch:
@@ -46,6 +46,7 @@
 import net.sourceforge.plantuml.cheneer.command.CommandMultiSubclass;
 import net.sourceforge.plantuml.cheneer.command.CommandSimpleSubclass;
 import net.sourceforge.plantuml.command.Command;
+import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.CommonCommands;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.core.DiagramType;
@@ -59,8 +60,8 @@ public ChenEerDiagramFactory() {
 
 	@Override
 	protected void initCommandsList(List<Command> cmds) {
-		CommonCommands.addTitleCommands(cmds);
-		CommonCommands.addCommonCommands2(cmds);
+		CommonCommands.addCommonCommands1(cmds);
+		cmds.add(new CommandRankDir());
 
 		cmds.add(new CommandCreateEntity());
 		cmds.add(new CommandCreateAttribute());

File: src/net/sourceforge/plantuml/svek/ClusterHeader.java
Patch:
@@ -160,16 +160,16 @@ private TextBlock getStereoBlockWithoutLegend(Entity g, PortionShower portionSho
 		if (stereos == null)
 			return TextBlockUtils.empty(0, 0);
 
-		final boolean show = portionShower.showPortion(EntityPortion.STEREOTYPE, g);
-		if (show == false)
+		final List<String> visibleStereotypes = portionShower.getVisibleStereotypeLabels(g);
+		if (visibleStereotypes == null || visibleStereotypes.isEmpty())
 			return TextBlockUtils.empty(0, 0);
 
 		final Style style = Cluster
 				.getDefaultStyleDefinition(skinParam.getUmlDiagramType().getStyleName(), g.getUSymbol(), g.getGroupType())
 				.forStereotypeItself(g.getStereotype()).getMergedStyle(skinParam.getCurrentStyleBuilder());
 
 		final FontConfiguration fontConfiguration = style.getFontConfiguration(skinParam.getIHtmlColorSet());
-		return Display.create(stereos).create(fontConfiguration, HorizontalAlignment.CENTER, skinParam);
+		return Display.create(visibleStereotypes).create(fontConfiguration, HorizontalAlignment.CENTER, skinParam);
 
 	}
 

File: src/net/sourceforge/plantuml/svek/ClusterHeader.java
Patch:
@@ -160,16 +160,16 @@ private TextBlock getStereoBlockWithoutLegend(Entity g, PortionShower portionSho
 		if (stereos == null)
 			return TextBlockUtils.empty(0, 0);
 
-		final boolean show = portionShower.showPortion(EntityPortion.STEREOTYPE, g);
-		if (show == false)
+		final List<String> visibleStereotypes = portionShower.getVisibleStereotypeLabels(g);
+		if (visibleStereotypes == null || visibleStereotypes.isEmpty())
 			return TextBlockUtils.empty(0, 0);
 
 		final Style style = Cluster
 				.getDefaultStyleDefinition(skinParam.getUmlDiagramType().getStyleName(), g.getUSymbol(), g.getGroupType())
 				.forStereotypeItself(g.getStereotype()).getMergedStyle(skinParam.getCurrentStyleBuilder());
 
 		final FontConfiguration fontConfiguration = style.getFontConfiguration(skinParam.getIHtmlColorSet());
-		return Display.create(stereos).create(fontConfiguration, HorizontalAlignment.CENTER, skinParam);
+		return Display.create(visibleStereotypes).create(fontConfiguration, HorizontalAlignment.CENTER, skinParam);
 
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/SplitStrRegex.java
Patch:
@@ -49,7 +49,7 @@
 public class SplitStrRegex extends SimpleReturnFunction {
 
 	public TFunctionSignature getSignature() {
-		return new TFunctionSignature("%splitstrregex", 2);
+		return new TFunctionSignature("%splitstr_regex", 2);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/style/CommandStyleImport.java
Patch:
@@ -86,7 +86,9 @@ protected CommandExecutionResult executeArg(TitledDiagram diagram, LineLocation
 			if (path.startsWith("http://") || path.startsWith("https://")) {
 				SURL url = SURL.create(path);
 				try (InputStream remoteInputStream = url.openStream()) {
-					lines = BlocLines.load(remoteInputStream, location);
+					if (remoteInputStream != null) {
+						lines = BlocLines.load(remoteInputStream, location);
+					}
 				}
 			} else {
 				final SFile styleFile = FileSystem.getInstance().getFile(path);

File: test/net/sourceforge/plantuml/cheneer/command/CommandAssociateTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import org.junit.jupiter.api.Test;
 
@@ -20,7 +20,7 @@ public class CommandAssociateTest {
 
 	private final Command<ChenEerDiagram> command = new CommandAssociate();
 
-	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(List.of(), false), null);
+	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(new ArrayList<>(), false), null);
 
 	@Test
 	void test_parse() {

File: test/net/sourceforge/plantuml/cheneer/command/CommandCreateAttributeTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import org.junit.jupiter.api.Test;
 
@@ -21,7 +21,7 @@ public class CommandCreateAttributeTest {
 
 	private final Command<ChenEerDiagram> command = new CommandCreateAttribute();
 
-	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(List.of(), false), null);
+	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(new ArrayList<>(), false), null);
 
 	@Test
 	void test_parse() {

File: test/net/sourceforge/plantuml/cheneer/command/CommandCreateEntityTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import org.junit.jupiter.api.Test;
 
@@ -21,7 +21,7 @@ public class CommandCreateEntityTest {
 
 	private final Command<ChenEerDiagram> command = new CommandCreateEntity();
 
-	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(List.of(), false), null);
+	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(new ArrayList<>(), false), null);
 
 	@Test
 	void test_parseEntity() {

File: test/net/sourceforge/plantuml/cheneer/command/CommandEndGroupTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import org.junit.jupiter.api.Test;
 import org.junit.jupiter.api.extension.ExtendWith;
@@ -25,7 +25,7 @@ public class CommandEndGroupTest {
 	private final Command<ChenEerDiagram> command = new CommandEndGroup();
 
 	@Spy
-	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(List.of(), false), null);
+	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(new ArrayList<>(), false), null);
 
 	@Test
 	void test_parse() {

File: test/net/sourceforge/plantuml/cheneer/command/CommandSimpleSubclassTest.java
Patch:
@@ -2,7 +2,7 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
-import java.util.List;
+import java.util.ArrayList;
 
 import org.junit.jupiter.api.Test;
 
@@ -21,7 +21,7 @@ public class CommandSimpleSubclassTest {
 
 	private final Command<ChenEerDiagram> command = new CommandSimpleSubclass();
 
-	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(List.of(), false), null);
+	private final ChenEerDiagram diagram = new ChenEerDiagram(UmlSource.create(new ArrayList<>(), false), null);
 
 	@Test
 	void test_parseSubset() {

File: src/net/sourceforge/plantuml/cheneer/command/CommandCreateAttribute.java
Patch:
@@ -71,7 +71,7 @@ private static IRegex getRegexConcat() {
 								new RegexLeaf("as"), //
 								RegexLeaf.spaceOneOrMore() //
 						)), //
-				new RegexLeaf("CODE", "([%pLN%s_.:<>]+)"), //
+				new RegexLeaf("CODE", "([%pLN%s_.:]+)"), //
 				RegexLeaf.spaceZeroOrMore(), //
 				new RegexLeaf("STEREO", "(<<.*>>)?"), //
 				RegexLeaf.spaceZeroOrMore(), //
@@ -93,7 +93,7 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation
 		final Quark<Entity> quark = diagram.quarkInContext(true, id);
 		String displayText = arg.get("DISPLAY", 0);
 		if (displayText == null)
-			displayText = quark.getName();
+			displayText = idShort;
 
 		final String stereo = arg.get("STEREO", 0);
 		final boolean composite = arg.get("COMPOSITE", 0) != null;

File: src/net/sourceforge/plantuml/math/ASCIIMathTeXImg.java
Patch:
@@ -905,8 +905,8 @@ private String[] AMTparseExpr(String str, boolean rightbracket) {
 										subarr = new ArrayList<String>(Arrays.asList(
 												newFrag.substring(pos.get(i) + 8, subpos.get(pos.get(i)).get(1))));
 										for (int j = 2; j < subpos.get(pos.get(i)).size(); j++) {
-											subarr.add(newFrag.substring(subpos.get(i).get(j - 1) + 1,
-													subpos.get(i).get(j)));
+											subarr.add(newFrag.substring(subpos.get(pos.get(i)).get(j - 1) + 1,
+													subpos.get(pos.get(i)).get(j)));
 										}
 										subarr.add(newFrag.substring(
 												subpos.get(pos.get(i)).get(subpos.get(pos.get(i)).size() - 1) + 1,

File: test/net/sourceforge/plantuml/math/MathTest.java
Patch:
@@ -17,6 +17,9 @@ class MathTest {
 			" '[[a,b],[c,d]]',              {\\left[\\begin{matrix}{a}&{b}\\\\{c}&{d}\\end{matrix}\\right]} ",
 			" color(red)(x),                {\\textcolor{red}{{x}}} ",
 			" color(red)(t)=color(blue)(x), {\\textcolor{red}{{t}}}={\\textcolor{blue}{{x}}} ",
+			" f,                            {f} ",
+			" f_g,                          {{f}_{{g}}} ",
+			" '[[1,2,3],[4,5,6]]',          {\\left[\\begin{matrix}{1}&{2}&{3}\\\\{4}&{5}&{6}\\end{matrix}\\right]} ",
 	})
 	public void testMath(String input, String expected) {
 		final String res = new ASCIIMathTeXImg().getTeX(input);

File: src/net/sourceforge/plantuml/math/ASCIIMathTeXImg.java
Patch:
@@ -905,8 +905,8 @@ private String[] AMTparseExpr(String str, boolean rightbracket) {
 										subarr = new ArrayList<String>(Arrays.asList(
 												newFrag.substring(pos.get(i) + 8, subpos.get(pos.get(i)).get(1))));
 										for (int j = 2; j < subpos.get(pos.get(i)).size(); j++) {
-											subarr.add(newFrag.substring(subpos.get(i).get(j - 1) + 1,
-													subpos.get(i).get(j)));
+											subarr.add(newFrag.substring(subpos.get(pos.get(i)).get(j - 1) + 1,
+													subpos.get(pos.get(i)).get(j)));
 										}
 										subarr.add(newFrag.substring(
 												subpos.get(pos.get(i)).get(subpos.get(pos.get(i)).size() - 1) + 1,

File: test/net/sourceforge/plantuml/math/MathTest.java
Patch:
@@ -17,6 +17,9 @@ class MathTest {
 			" '[[a,b],[c,d]]',              {\\left[\\begin{matrix}{a}&{b}\\\\{c}&{d}\\end{matrix}\\right]} ",
 			" color(red)(x),                {\\textcolor{red}{{x}}} ",
 			" color(red)(t)=color(blue)(x), {\\textcolor{red}{{t}}}={\\textcolor{blue}{{x}}} ",
+			" f,                            {f} ",
+			" f_g,                          {{f}_{{g}}} ",
+			" '[[1,2,3],[4,5,6]]',          {\\left[\\begin{matrix}{1}&{2}&{3}\\\\{4}&{5}&{6}\\end{matrix}\\right]} ",
 	})
 	public void testMath(String input, String expected) {
 		final String res = new ASCIIMathTeXImg().getTeX(input);

File: src/net/sourceforge/plantuml/math/ASCIIMathTeXImg.java
Patch:
@@ -602,7 +602,7 @@ private String[] AMTparseSexpr(String str) {
 		case CONST:
 			str = AMremoveCharsAndBlanks(str, symbol.input.length());
 			String texsymbol = AMTgetTeXsymbol(symbol);
-			if (texsymbol.charAt(0) == '\\' || symbol.tag.equals("mo"))
+			if (texsymbol.isEmpty() || texsymbol.charAt(0) == '\\' || symbol.tag.equals("mo"))
 				return new String[] { texsymbol, str };
 			else {
 				return new String[] { "{" + texsymbol + "}", str };
@@ -676,7 +676,7 @@ else if (symbol == AMquote)
 			if (result[0] == null)
 				return new String[] { "{" + AMTgetTeXsymbol(symbol) + "}", str };
 			if (symbol.hasFlag("func")) { // functions hack
-				st = "" + str.charAt(0);
+				st = "" + (str.isEmpty() ? "" : str.charAt(0));
 				if (st.equals("^") || st.equals("_") || st.equals("/") || st.equals("|") || st.equals(",")
 						|| (symbol.input.length() == 1 && symbol.input.matches("\\w") && !st.equals("("))) {
 					return new String[] { "{" + AMTgetTeXsymbol(symbol) + "}", str };

File: src/net/sourceforge/plantuml/math/ASCIIMathTeXImg.java
Patch:
@@ -602,7 +602,7 @@ private String[] AMTparseSexpr(String str) {
 		case CONST:
 			str = AMremoveCharsAndBlanks(str, symbol.input.length());
 			String texsymbol = AMTgetTeXsymbol(symbol);
-			if (texsymbol.charAt(0) == '\\' || symbol.tag.equals("mo"))
+			if (texsymbol.isEmpty() || texsymbol.charAt(0) == '\\' || symbol.tag.equals("mo"))
 				return new String[] { texsymbol, str };
 			else {
 				return new String[] { "{" + texsymbol + "}", str };
@@ -676,7 +676,7 @@ else if (symbol == AMquote)
 			if (result[0] == null)
 				return new String[] { "{" + AMTgetTeXsymbol(symbol) + "}", str };
 			if (symbol.hasFlag("func")) { // functions hack
-				st = "" + str.charAt(0);
+				st = "" + (str.isEmpty() ? "" : str.charAt(0));
 				if (st.equals("^") || st.equals("_") || st.equals("/") || st.equals("|") || st.equals(",")
 						|| (symbol.input.length() == 1 && symbol.input.matches("\\w") && !st.equals("("))) {
 					return new String[] { "{" + AMTgetTeXsymbol(symbol) + "}", str };

File: src/net/sourceforge/plantuml/FileFormat.java
Patch:
@@ -73,6 +73,7 @@ public enum FileFormat {
 	XMI_STANDARD("application/vnd.xmi+xml"), //
 	XMI_STAR("application/vnd.xmi+xml"), //
 	XMI_ARGO("application/vnd.xmi+xml"), //
+	XMI_SCRIPT("application/vnd.xmi+xml"), //
 	SCXML("application/scxml+xml"), //
 	GRAPHML("application/graphml+xml"), //
 	PDF("application/pdf"), //

File: src/net/sourceforge/plantuml/Option.java
Patch:
@@ -157,6 +157,9 @@ public Option(String... arg) throws InterruptedException, IOException {
 			} else if (s.equalsIgnoreCase("-txmi:argo") || s.equalsIgnoreCase("-xmi:argo")) {
 				setFileFormatOption(new FileFormatOption(FileFormat.XMI_ARGO));
 
+			} else if (s.equalsIgnoreCase("-txmi:script") || s.equalsIgnoreCase("-xmi:script")) {
+				setFileFormatOption(new FileFormatOption(FileFormat.XMI_SCRIPT));
+
 			} else if (s.equalsIgnoreCase("-txmi:star") || s.equalsIgnoreCase("-xmi:star")) {
 				setFileFormatOption(new FileFormatOption(FileFormat.XMI_STAR));
 

File: src/net/sourceforge/plantuml/ant/PlantUmlTask.java
Patch:
@@ -312,6 +312,9 @@ public void setFormat(String s) {
 		if ("xmi:argo".equalsIgnoreCase(s)) {
 			option.setFileFormatOption(new FileFormatOption(FileFormat.XMI_ARGO));
 		}
+		if ("xmi:script".equalsIgnoreCase(s)) {
+			option.setFileFormatOption(new FileFormatOption(FileFormat.XMI_SCRIPT));
+		}
 		if ("xmi:start".equalsIgnoreCase(s)) {
 			option.setFileFormatOption(new FileFormatOption(FileFormat.XMI_STAR));
 		}

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandDefineStateShort.java
Patch:
@@ -59,8 +59,9 @@ private static IRegex getRegexConcat() {
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexLeaf("has"), //
 				RegexLeaf.spaceOneOrMore(), //
-				new RegexLeaf("STATE", "([%pLN_.@]+)"), //
-				new RegexLeaf("STATES", "((,([%pLN_.@]+))*)"), RegexLeaf.end());
+				new RegexLeaf("STATE", "([-%pLN_.@]+)"), //
+				new RegexLeaf("STATES", "((,([-%pLN_.@]+))*)"), //
+				RegexLeaf.end());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/preproc/Defines.java
Patch:
@@ -56,7 +56,7 @@
 import net.sourceforge.plantuml.security.SecurityProfile;
 import net.sourceforge.plantuml.security.SecurityUtils;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.TVariableScope;
 import net.sourceforge.plantuml.utils.Log;
@@ -82,7 +82,7 @@ public static Defines createEmpty() {
 		return new Defines();
 	}
 
-	public void copyTo(TMemory memory, StringLocated location) throws EaterExceptionLocated {
+	public void copyTo(TMemory memory, StringLocated location) throws EaterException {
 		for (Entry<String, Define> ent : values.entrySet()) {
 			final String name = ent.getKey();
 			final Define def = ent.getValue();

File: src/net/sourceforge/plantuml/preproc/Sub.java
Patch:
@@ -42,7 +42,7 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterStartsub;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -79,7 +79,7 @@ public final List<StringLocated> lines() {
 	}
 
 	public static Sub fromFile(ReadLine reader, String blocname, TContext context, TMemory memory)
-			throws IOException, EaterExceptionLocated {
+			throws IOException, EaterException {
 		Sub result = null;
 		StringLocated s = null;
 		boolean skip = false;

File: src/net/sourceforge/plantuml/tim/EaterAffectation.java
Patch:
@@ -44,7 +44,7 @@ public EaterAffectation(StringLocated sl) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterAffectationDefine.java
Patch:
@@ -44,7 +44,7 @@ public EaterAffectationDefine(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!define");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterAssert.java
Patch:
@@ -44,7 +44,7 @@ public EaterAssert(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!assert");
 		skipSpaces();
@@ -55,9 +55,9 @@ public void analyze(TContext context, TMemory memory) throws EaterExceptionLocat
 			if (ch == ':') {
 				checkAndEatChar(':');
 				final TValue message = eatExpression(context, memory);
-				throw EaterExceptionLocated.located("Assertion error : " + message.toString(), getStringLocated());
+				throw new EaterException("Assertion error : " + message.toString(), getStringLocated());
 			}
-			throw EaterExceptionLocated.located("Assertion error", getStringLocated());
+			throw new EaterException("Assertion error", getStringLocated());
 		}
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterDeclareProcedure.java
Patch:
@@ -48,7 +48,7 @@ public EaterDeclareProcedure(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!");
 		boolean unquoted = false;

File: src/net/sourceforge/plantuml/tim/EaterDeclareReturnFunction.java
Patch:
@@ -48,7 +48,7 @@ public EaterDeclareReturnFunction(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!");
 		boolean unquoted = false;

File: src/net/sourceforge/plantuml/tim/EaterDumpMemory.java
Patch:
@@ -43,7 +43,7 @@ public EaterDumpMemory(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!dump_memory");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterElseIf.java
Patch:
@@ -46,7 +46,7 @@ public EaterElseIf(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!elseif");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterForeach.java
Patch:
@@ -48,7 +48,7 @@ public EaterForeach(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!foreach");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIf.java
Patch:
@@ -46,7 +46,7 @@ public EaterIf(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!if");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIfdef.java
Patch:
@@ -48,7 +48,7 @@ public EaterIfdef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!ifdef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIfndef.java
Patch:
@@ -46,7 +46,7 @@ public EaterIfndef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!ifndef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterImport.java
Patch:
@@ -45,7 +45,7 @@ public EaterImport(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!import");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterInclude.java
Patch:
@@ -47,7 +47,7 @@ public EaterInclude(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!include");
 		final char peekChar = peekChar();

File: src/net/sourceforge/plantuml/tim/EaterIncludeDef.java
Patch:
@@ -45,7 +45,7 @@ public EaterIncludeDef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!includedef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIncludesub.java
Patch:
@@ -45,7 +45,7 @@ public EaterIncludesub(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!includesub");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterLegacyDefine.java
Patch:
@@ -45,7 +45,7 @@ public EaterLegacyDefine(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!define");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterLegacyDefineLong.java
Patch:
@@ -45,7 +45,7 @@ public EaterLegacyDefineLong(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!definelong");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterLog.java
Patch:
@@ -44,7 +44,7 @@ public EaterLog(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!log");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterReturn.java
Patch:
@@ -46,7 +46,7 @@ public EaterReturn(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!return");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterStartsub.java
Patch:
@@ -45,13 +45,13 @@ public EaterStartsub(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!startsub");
 		skipSpaces();
 		this.subname = eatAllToEnd();
 		if (this.subname.matches("\\w+") == false)
-			throw EaterExceptionLocated.located("Bad sub name", getStringLocated());
+			throw new EaterException("Bad sub name", getStringLocated());
 
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterUndef.java
Patch:
@@ -43,7 +43,7 @@ public EaterUndef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!undef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterWhile.java
Patch:
@@ -46,7 +46,7 @@ public EaterWhile(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		skipSpaces();
 		checkAndEatChar("!while");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/ExecutionContextWhile.java
Patch:
@@ -61,7 +61,7 @@ public static ExecutionContextWhile fromValue(TokenStack whileExpression, CodePo
 	}
 
 	public TValue conditionValue(StringLocated location, TContext context, TMemory memory)
-			throws EaterExceptionLocated {
+			throws EaterException {
 		return whileExpression.getResult(location, context, memory);
 	}
 

File: src/net/sourceforge/plantuml/tim/ExecutionContexts.java
Patch:
@@ -79,7 +79,7 @@ public ExecutionContextForeach pollForeach() {
 		return allForeachs.pollLast();
 	}
 
-	public boolean areAllIfOk(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public boolean areAllIfOk(TContext context, TMemory memory) throws EaterException {
 		for (ExecutionContextIf conditionalContext : allIfs) 
 			if (conditionalContext.conditionIsOkHere() == false) 
 				return false;

File: src/net/sourceforge/plantuml/tim/StringEater.java
Patch:
@@ -43,7 +43,7 @@ public StringEater(String s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterException {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/tim/TFunction.java
Patch:
@@ -50,10 +50,10 @@ public interface TFunction {
 	public TFunctionType getFunctionType();
 
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> args,
-			Map<String, TValue> named) throws EaterExceptionLocated;
+			Map<String, TValue> named) throws EaterException;
 
 	public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location, List<TValue> args,
-			Map<String, TValue> named) throws EaterExceptionLocated;
+			Map<String, TValue> named) throws EaterException;
 
 	public boolean isUnquoted();
 

File: src/net/sourceforge/plantuml/tim/TMemory.java
Patch:
@@ -45,7 +45,7 @@ public interface TMemory {
 	public TValue getVariable(String varname);
 
 	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
-			throws EaterExceptionLocated;
+			throws EaterException;
 
 	public void removeVariable(String varname);
 
@@ -59,7 +59,7 @@ public void putVariable(String varname, TValue value, TVariableScope scope, Stri
 
 	public ExecutionContextIf peekIf();
 
-	public boolean areAllIfOk(TContext context, TMemory memory) throws EaterExceptionLocated;
+	public boolean areAllIfOk(TContext context, TMemory memory) throws EaterException;
 
 	public void addIf(ExecutionContextIf context);
 

File: src/net/sourceforge/plantuml/tim/TMemoryGlobal.java
Patch:
@@ -73,10 +73,10 @@ void dumpMemoryInternal() {
 
 	@Override
 	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
-			throws EaterExceptionLocated {
+			throws EaterException {
 		Log.info("[MemGlobal] Setting " + varname);
 		if (scope == TVariableScope.LOCAL)
-			throw EaterExceptionLocated.unlocated("Cannot use local variable here", location);
+			throw new EaterException("Cannot use local variable here", location);
 
 		this.globalVariables.put(varname, value);
 		this.variables.add(varname);

File: src/net/sourceforge/plantuml/tim/TMemoryLocal.java
Patch:
@@ -79,7 +79,7 @@ public void dumpDebug(String message) {
 
 	@Override
 	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
-			throws EaterExceptionLocated {
+			throws EaterException {
 		if (scope == TVariableScope.GLOBAL) {
 			memoryGlobal.putVariable(varname, value, scope, location);
 			return;

File: src/net/sourceforge/plantuml/tim/TimLoader.java
Patch:
@@ -57,7 +57,7 @@ public TimLoader(ImportedFiles importedFiles, Defines defines, Charset charset,
 		this.context = new TContext(importedFiles, defines, charset, definitionsContainer);
 		try {
 			defines.copyTo(global, location);
-		} catch (EaterExceptionLocated e) {
+		} catch (EaterException e) {
 			Logme.error(e);
 		}
 	}
@@ -66,7 +66,7 @@ public Set<FileWithSuffix> load(List<StringLocated> list) {
 //		CodeIteratorImpl.indentNow(list);
 		try {
 			context.executeLines(global, list, null, false);
-		} catch (EaterExceptionLocated e) {
+		} catch (EaterException e) {
 			context.getResultList().add(e.getLocation().withErrorPreprocessor(e.getMessage()));
 			changeLastLine(context.getDebug(), e.getMessage());
 			this.preprocessorError = true;

File: src/net/sourceforge/plantuml/tim/expression/Knowledge.java
Patch:
@@ -34,13 +34,13 @@
  */
 package net.sourceforge.plantuml.tim.expression;
 
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 
 public interface Knowledge {
 
-	public TValue getVariable(String name) throws EaterExceptionLocated;
+	public TValue getVariable(String name) throws EaterException;
 
 	public TFunction getFunction(TFunctionSignature signature);
 

File: src/net/sourceforge/plantuml/tim/expression/ShuntingYard.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Deque;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 // https://en.wikipedia.org/wiki/Shunting-yard_algorithm
 // https://en.cppreference.com/w/c/language/operator_precedence
@@ -58,7 +58,7 @@ private void traceMe() {
 		System.err.println("");
 	}
 
-	public ShuntingYard(TokenIterator it, Knowledge knowledge, StringLocated location) throws EaterExceptionLocated {
+	public ShuntingYard(TokenIterator it, Knowledge knowledge, StringLocated location) throws EaterException {
 
 		while (it.hasMoreTokens()) {
 			final Token token = it.nextToken();
@@ -74,7 +74,7 @@ public ShuntingYard(TokenIterator it, Knowledge knowledge, StringLocated locatio
 				final TValue variable = knowledge.getVariable(name);
 				if (variable == null) {
 					if (isVariableName(name) == false)
-						throw EaterExceptionLocated.unlocated("Parsing syntax error about " + name, location);
+						throw new EaterException("Parsing syntax error about " + name, location);
 
 					ouputQueue.add(new Token(name, TokenType.QUOTED_STRING, null));
 				} else {

File: src/net/sourceforge/plantuml/tim/expression/TokenType.java
Patch:
@@ -36,7 +36,7 @@
 
 import net.sourceforge.plantuml.text.TLineType;
 import net.sourceforge.plantuml.tim.Eater;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 public enum TokenType {
 	// ::remove folder when __HAXE__
@@ -78,7 +78,7 @@ else if (TLineType.isSpaceChar(ch))
 	}
 
 	final static public Token eatOneToken(Token lastToken, Eater eater, boolean manageColon)
-			throws EaterExceptionLocated {
+			throws EaterException {
 		char ch = eater.peekChar();
 		if (ch == 0)
 			return null;
@@ -122,7 +122,7 @@ private static boolean isTheMinusAnOperation(Token lastToken) {
 		return true;
 	}
 
-	static private String eatAndGetTokenPlainText(Eater eater) throws EaterExceptionLocated {
+	static private String eatAndGetTokenPlainText(Eater eater) throws EaterException {
 		final StringBuilder result = new StringBuilder();
 		while (true) {
 			final char ch = eater.peekChar();

File: src/net/sourceforge/plantuml/tim/iterator/AbstractCodeIterator.java
Patch:
@@ -35,7 +35,7 @@
 package net.sourceforge.plantuml.tim.iterator;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 public abstract class AbstractCodeIterator implements CodeIterator {
 
@@ -46,7 +46,7 @@ public AbstractCodeIterator(CodeIterator source) {
 	}
 
 	@Override
-	public void next() throws EaterExceptionLocated {
+	public void next() throws EaterException {
 		source.next();
 	}
 
@@ -57,7 +57,7 @@ final public CodePosition getCodePosition() {
 
 	@Override
 	final public void jumpToCodePosition(CodePosition newPosition, StringLocated location)
-			throws EaterExceptionLocated {
+			throws EaterException {
 		source.jumpToCodePosition(newPosition, location);
 	}
 

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorImpl.java
Patch:
@@ -37,7 +37,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 public class CodeIteratorImpl implements CodeIterator {
 
@@ -89,10 +89,10 @@ public CodePosition getCodePosition() {
 	}
 
 	@Override
-	public void jumpToCodePosition(CodePosition newPosition, StringLocated location) throws EaterExceptionLocated {
+	public void jumpToCodePosition(CodePosition newPosition, StringLocated location) throws EaterException {
 		this.countJump++;
 		if (this.countJump > 999)
-			throw EaterExceptionLocated.unlocated("Infinite loop?", location);
+			throw new EaterException("Infinite loop?", location);
 
 		final Position pos = (Position) newPosition;
 		this.current = pos.pos;

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorInnerComment.java
Patch:
@@ -35,15 +35,15 @@
 package net.sourceforge.plantuml.tim.iterator;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 public class CodeIteratorInnerComment extends AbstractCodeIterator {
 
 	public CodeIteratorInnerComment(CodeIterator source) {
 		super(source);
 	}
 
-	public StringLocated peek() throws EaterExceptionLocated {
+	public StringLocated peek() throws EaterException {
 		final StringLocated result = source.peek();
 		if (result == null) {
 			return null;

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorLegacyDefine.java
Patch:
@@ -38,7 +38,7 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.FunctionsSet;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -60,7 +60,7 @@ public CodeIteratorLegacyDefine(CodeIterator source, TContext context, TMemory m
 		this.memory = memory;
 	}
 
-	public StringLocated peek() throws EaterExceptionLocated {
+	public StringLocated peek() throws EaterException {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorLongComment.java
Patch:
@@ -38,7 +38,7 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 public class CodeIteratorLongComment extends AbstractCodeIterator {
 
@@ -49,7 +49,7 @@ public CodeIteratorLongComment(CodeIterator source, List<StringLocated> logs) {
 		this.logs = logs;
 	}
 
-	public StringLocated peek() throws EaterExceptionLocated {
+	public StringLocated peek() throws EaterException {
 		while (true) {
 			if (source.peek() == null) {
 				return null;

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorProcedure.java
Patch:
@@ -38,7 +38,7 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.FunctionsSet;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionType;
@@ -61,7 +61,7 @@ public CodeIteratorProcedure(CodeIterator source, TContext context, TMemory memo
 		this.memory = memory;
 	}
 
-	public StringLocated peek() throws EaterExceptionLocated {
+	public StringLocated peek() throws EaterException {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorShortComment.java
Patch:
@@ -38,7 +38,7 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 
 public class CodeIteratorShortComment extends AbstractCodeIterator {
 
@@ -49,7 +49,7 @@ public CodeIteratorShortComment(CodeIterator source, List<StringLocated> logs) {
 		this.logs = logs;
 	}
 
-	public StringLocated peek() throws EaterExceptionLocated {
+	public StringLocated peek() throws EaterException {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysFalse.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		return TValue.fromBoolean(false);
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysTrue.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		return TValue.fromBoolean(true);
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/CallUserFunction.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,13 +59,13 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String fname = values.get(0).toString();
 		final List<TValue> args = values.subList(1, values.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, args.size());
 		final TFunction func = context.getFunctionSmart(signature);
 		if (func == null)
-			throw EaterExceptionLocated.unlocated("Cannot find void function " + fname, location);
+			throw new EaterException("Cannot find void function " + fname, location);
 
 		return func.executeReturnFunction(context, memory, location, args, named);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Chr.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		try {
 			final String value = String.valueOf(Character.toChars(values.get(0).toInt()));
 			return TValue.fromString(value);

File: src/net/sourceforge/plantuml/tim/stdlib/Darken.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -62,15 +62,15 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String colorString = values.get(0).toString();
 		final int ratio = values.get(1).toInt();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.darken(ratio);
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterExceptionLocated.located("No such color", location);
+			throw new EaterException("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/DateFunction.java
Patch:
@@ -41,7 +41,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		if (values.size() == 0)
 			return TValue.fromString(new Date().toString());
 
@@ -74,7 +74,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		try {
 			return TValue.fromString(new SimpleDateFormat(format).format(now));
 		} catch (Exception e) {
-			throw EaterExceptionLocated.unlocated("Bad date pattern", location);
+			throw new EaterException("Bad date pattern", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Dec2hex.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		try {
 			return TValue.fromString("" + Integer.toHexString(values.get(0).toInt()));
 		} catch (Throwable t) {

File: src/net/sourceforge/plantuml/tim/stdlib/Dirpath.java
Patch:
@@ -40,7 +40,7 @@
 
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -65,7 +65,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		if (value == null)
 			return TValue.fromString("");
 

File: src/net/sourceforge/plantuml/tim/stdlib/Eval.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.StringEater;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String exp = values.get(0).toString();
 		final StringEater eater = new StringEater(exp);
 		final TValue value = eater.eatExpression(context, memory);

File: src/net/sourceforge/plantuml/tim/stdlib/Feature.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String arg = values.get(0).toString();
 		if ("style".equalsIgnoreCase(arg))
 			return TValue.fromInt(1);

File: src/net/sourceforge/plantuml/tim/stdlib/FileExists.java
Patch:
@@ -40,7 +40,7 @@
 
 import net.sourceforge.plantuml.security.SFile;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		// ::comment when __CORE__
 		final String path = values.get(0).toString();
 		return TValue.fromBoolean(new SFile(path).exists());

File: src/net/sourceforge/plantuml/tim/stdlib/Filename.java
Patch:
@@ -40,7 +40,7 @@
 
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -65,7 +65,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		if (value == null) {
 			return TValue.fromString("");
 		}

File: src/net/sourceforge/plantuml/tim/stdlib/FunctionExists.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String name = values.get(0).toString();
 		return TValue.fromBoolean(context.doesFunctionExist(name));
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllStdlib.java
Patch:
@@ -45,7 +45,7 @@
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.preproc.Stdlib;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -64,7 +64,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 
 		switch (values.size()) {
 		case 0:
@@ -99,7 +99,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 
 		default:
 			assert false; // Should not append because of canCover()
-			throw EaterExceptionLocated.located("Error on get_all_stdlib: Too many arguments", location);
+			throw new EaterException("Error on get_all_stdlib: Too many arguments", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllTheme.java
Patch:
@@ -43,7 +43,7 @@
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.theme.ThemeUtils;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -62,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final JsonArray result = new JsonArray();
 		try {
 			for (String theme : ThemeUtils.getAllThemeNames()) {

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonType.java
Patch:
@@ -40,7 +40,7 @@
 
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final TValue data = values.get(0);
 		if (data.isString())
 			return TValue.fromString("string");

File: src/net/sourceforge/plantuml/tim/stdlib/GetVariableValue.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String name = values.get(0).toString();
 		final TValue variable = memory.getVariable(name);
 		if (variable == null)

File: src/net/sourceforge/plantuml/tim/stdlib/GetVersion.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		return TValue.fromString(Version.versionString());
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Getenv.java
Patch:
@@ -40,7 +40,7 @@
 
 import net.sourceforge.plantuml.security.SecurityUtils;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		// ::comment when __CORE__
 		final String value = getenv(values.get(0).toString());
 		if (value == null)

File: src/net/sourceforge/plantuml/tim/stdlib/Hex2dec.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		try {
 			return TValue.fromInt(Integer.parseInt(values.get(0).toString(), 16));
 		} catch (Throwable t) {

File: src/net/sourceforge/plantuml/tim/stdlib/HslColor.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColors;
 import net.sourceforge.plantuml.klimt.color.HSLColor;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final int h = values.get(0).toInt();
 		final int s = values.get(1).toInt();
 		final int l = values.get(2).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/IntVal.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String s = values.get(0).toString();
 		try {
 			return TValue.fromInt(Integer.parseInt(s));

File: src/net/sourceforge/plantuml/tim/stdlib/InvokeProcedure.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -64,13 +64,13 @@ public TFunctionType getFunctionType() {
 
 	@Override
 	public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location, List<TValue> args,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String fname = args.get(0).toString();
 		final List<TValue> sublist = args.subList(1, args.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, sublist.size());
 		final TFunction func = context.getFunctionSmart(signature);
 		if (func == null)
-			throw EaterExceptionLocated.located("Cannot find void function " + fname, location);
+			throw new EaterException("Cannot find void function " + fname, location);
 
 		func.executeProcedureInternal(context, memory, location, sublist, named);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/IsDark.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -62,13 +62,13 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String colorString = values.get(0).toString();
 		try {
 			final HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			return TValue.fromBoolean(color.isDark());
 		} catch (NoSuchColorException e) {
-			throw EaterExceptionLocated.located("No such color", location);
+			throw new EaterException("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/IsLight.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -62,13 +62,13 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String colorString = values.get(0).toString();
 		try {
 			final HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			return TValue.fromBoolean(!color.isDark());
 		} catch (NoSuchColorException e) {
-			throw EaterExceptionLocated.located("No such color", location);
+			throw new EaterException("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/JsonKeyExists.java
Patch:
@@ -41,7 +41,7 @@
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final TValue arg0 = values.get(0);
 		if (arg0.isJson() == false)
 			return TValue.fromBoolean(false);

File: src/net/sourceforge/plantuml/tim/stdlib/Lighten.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -62,15 +62,15 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String colorString = values.get(0).toString();
 		final int ratio = values.get(1).toInt();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.lighten(ratio);
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterExceptionLocated.located("No such color", location);
+			throw new EaterException("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalAnd.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		for (TValue v : values)
 			if (v.toBoolean() == false)
 				return TValue.fromBoolean(false);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNand.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		for (TValue v : values)
 			if (v.toBoolean() == false)
 				return TValue.fromBoolean(!false);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNor.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		for (TValue v : values)
 			if (v.toBoolean() == true)
 				return TValue.fromBoolean(!true);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNot.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final boolean arg = values.get(0).toBoolean();
 		return TValue.fromBoolean(!arg);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNxor.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		int cpt = 0;
 		for (TValue v : values)
 			if (v.toBoolean() == true)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalOr.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		for (TValue v : values)
 			if (v.toBoolean() == true)
 				return TValue.fromBoolean(true);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalXor.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		int cpt = 0;
 		for (TValue v : values)
 			if (v.toBoolean() == true)

File: src/net/sourceforge/plantuml/tim/stdlib/Now.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final long now = System.currentTimeMillis() / 1000L;
 		return TValue.fromInt((int) now);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		try {
 			final int codePoint = values.get(0).toString().codePointAt(0);
 			return TValue.fromInt(codePoint);

File: src/net/sourceforge/plantuml/tim/stdlib/RandomFunction.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		switch (values.size()) {
 		case 0:
 			return TValue.fromInt(random.nextInt(2));
@@ -77,7 +77,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 
 		default:
 			assert false; // Should not append because of canCover()
-			throw EaterExceptionLocated.located("Error on Random: Too many argument", location);
+			throw new EaterException("Error on Random: Too many argument", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/RetrieveProcedure.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String fname = values.get(0).toString();
 		final List<TValue> args = values.subList(1, values.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, args.size());

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseColor.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -61,14 +61,14 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String colorString = values.get(0).toString();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.reverse();
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterExceptionLocated.located("No such color", location);
+			throw new EaterException("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseHsluvColor.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -61,14 +61,14 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String colorString = values.get(0).toString();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.reverseHsluv();
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterExceptionLocated.located("No such color", location);
+			throw new EaterException("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/SetVariableValue.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		// if (memory instanceof TMemoryLocal) {
 		// memory = ((TMemoryLocal) memory).getGlobalForInternalUseOnly();
 		// }

File: src/net/sourceforge/plantuml/tim/stdlib/SimpleReturnFunction.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Map;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionType;
@@ -53,7 +53,7 @@ final public TFunctionType getFunctionType() {
 
 	@Override
 	final public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location,
-			List<TValue> args, Map<String, TValue> named) throws EaterExceptionLocated {
+			List<TValue> args, Map<String, TValue> named) throws EaterException {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/Size.java
Patch:
@@ -42,7 +42,7 @@
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final TValue value = values.get(0);
 		if (value.isNumber())
 			return TValue.fromInt(0);

File: src/net/sourceforge/plantuml/tim/stdlib/SplitStr.java
Patch:
@@ -41,7 +41,7 @@
 
 import net.sourceforge.plantuml.json.JsonArray;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final JsonArray result = new JsonArray();
 
 		final String str = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Strlen.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		return TValue.fromInt(values.get(0).toString().length());
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Strpos.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String full = values.get(0).toString();
 		final String searched = values.get(1).toString();
 		return TValue.fromInt(full.indexOf(searched));

File: src/net/sourceforge/plantuml/tim/stdlib/Substr.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String full = values.get(0).toString();
 		final int pos = values.get(1).toInt();
 		if (pos >= full.length())

File: src/net/sourceforge/plantuml/tim/stdlib/VariableExists.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterException {
 		final String name = values.get(0).toString();
 		return TValue.fromBoolean(memory.getVariable(name) != null);
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.4beta4";
+	private static final String version = "1.2024.4beta5";
 
 	public static String versionString() {
 		return version;

File: test/net/sourceforge/plantuml/tim/stdlib/ChrTest.java
Patch:
@@ -7,7 +7,7 @@
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.CsvSource;
 
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TFunction;
 
 /**
@@ -22,7 +22,6 @@ class ChrTest {
 	 * Tests chr according to a list of input / expected output 
 	 *
 	 * @throws EaterException should not
-	 * @throws EaterExceptionLocated should not
 	 */
 	@ParameterizedTest(name = "[{index}] " + cutName + "({0}) = ''{1}''")
 	@CsvSource(nullValues = "null", value = {
@@ -37,7 +36,7 @@ class ChrTest {
 			" 128512 , ðŸ˜€ ",
 			" 128512 , \uD83D\uDE00 ",
 	})
-	void Test_with_Integer(Integer input, String expected) throws EaterExceptionLocated {
+	void Test_with_Integer(Integer input, String expected) throws EaterException {
 		assertTimExpectedOutputFromInput(cut, input, expected);
 	}
 }
\ No newline at end of file

File: test/net/sourceforge/plantuml/tim/stdlib/GetAllStdlibTest.java
Patch:
@@ -10,7 +10,7 @@
 import org.junit.jupiter.api.IndicativeSentencesGeneration;
 import org.junit.jupiter.api.Test;
 
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.expression.TValue;
 
@@ -24,14 +24,14 @@ class GetAllStdlibTest {
 	final String cutName = "GetAllStdlib";
 
 	@Test
-	void Test_without_Param() throws EaterExceptionLocated {
+	void Test_without_Param() throws EaterException {
 		final List<TValue> empty = new ArrayList<>();
 		final TValue tValue = cut.executeReturnFunction(null, null, null, empty, null);
 		assertThat(tValue.toString()).contains("archimate", "aws", "tupadr3");
 	}
 
 	@Test
-	void Test_with_one_argument() throws EaterExceptionLocated {
+	void Test_with_one_argument() throws EaterException {
 		final TValue tValue = cut.executeReturnFunction(null, null, null, Arrays.asList(TValue.fromInt(0)), null);
 		assertThat(tValue.toString()).contains("archimate", "https://github.com/plantuml-stdlib/Archimate-PlantUML");
 	}

File: test/net/sourceforge/plantuml/tim/stdlib/GetAllThemeTest.java
Patch:
@@ -9,7 +9,7 @@
 import org.junit.jupiter.api.IndicativeSentencesGeneration;
 import org.junit.jupiter.api.Test;
 
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.expression.TValue;
 
@@ -23,7 +23,7 @@ class GetAllThemeTest {
 	final String cutName = "GetAllTheme";
 
 	@Test
-	void Test_without_Param() throws EaterExceptionLocated {
+	void Test_without_Param() throws EaterException {
 		final List<TValue> empty = new ArrayList<>();
 		final TValue tValue = cut.executeReturnFunction(null, null, null, empty, null);
 		assertThat(tValue.toString()).contains("_none_", "amiga", "vibrant");

File: test/net/sourceforge/plantuml/tim/stdlib/OrdTest.java
Patch:
@@ -7,7 +7,7 @@
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.CsvSource;
 
-import net.sourceforge.plantuml.tim.EaterExceptionLocated;
+import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TFunction;
 
 /**
@@ -22,7 +22,6 @@ class OrdTest {
 	 * Tests ord according to a list of input / expected output 
 	 *
 	 * @throws EaterException should not
-	 * @throws EaterExceptionLocated should not
 	 */
 	@ParameterizedTest(name = "[{index}] " + cutName + "(''{0}'') = {1}")
 	@CsvSource(nullValues = "null", value = {
@@ -40,7 +39,7 @@ class OrdTest {
 			" ðŸ˜€   , 128512 ",
 			" \uD83D\uDE00 , 128512 ",
 	})
-	void Test_with_String(String input, String expected) throws EaterExceptionLocated {
+	void Test_with_String(String input, String expected) throws EaterException {
 		assertTimExpectedOutputFromInput(cut, input, expected);
 	}
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/preproc/Defines.java
Patch:
@@ -56,7 +56,7 @@
 import net.sourceforge.plantuml.security.SecurityProfile;
 import net.sourceforge.plantuml.security.SecurityUtils;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
+import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.TVariableScope;
 import net.sourceforge.plantuml.utils.Log;
@@ -82,7 +82,7 @@ public static Defines createEmpty() {
 		return new Defines();
 	}
 
-	public void copyTo(TMemory memory, StringLocated location) throws EaterException {
+	public void copyTo(TMemory memory, StringLocated location) throws EaterExceptionLocated {
 		for (Entry<String, Define> ent : values.entrySet()) {
 			final String name = ent.getKey();
 			final Define def = ent.getValue();

File: src/net/sourceforge/plantuml/preproc/Sub.java
Patch:
@@ -42,13 +42,13 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterException;
+import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.EaterStartsub;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TMemory;
 
 public class Sub {
-    // ::remove folder when __HAXE__
+	// ::remove folder when __HAXE__
 
 	private final String name;
 	private final List<StringLocated> lines = new ArrayList<>();
@@ -79,7 +79,7 @@ public final List<StringLocated> lines() {
 	}
 
 	public static Sub fromFile(ReadLine reader, String blocname, TContext context, TMemory memory)
-			throws IOException, EaterException {
+			throws IOException, EaterExceptionLocated {
 		Sub result = null;
 		StringLocated s = null;
 		boolean skip = false;

File: src/net/sourceforge/plantuml/tim/EaterAffectation.java
Patch:
@@ -44,7 +44,7 @@ public EaterAffectation(StringLocated sl) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterAffectationDefine.java
Patch:
@@ -44,7 +44,7 @@ public EaterAffectationDefine(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!define");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterAssert.java
Patch:
@@ -44,7 +44,7 @@ public EaterAssert(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!assert");
 		skipSpaces();
@@ -55,9 +55,9 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 			if (ch == ':') {
 				checkAndEatChar(':');
 				final TValue message = eatExpression(context, memory);
-				throw EaterException.located("Assertion error : " + message.toString(), getStringLocated());
+				throw EaterExceptionLocated.located("Assertion error : " + message.toString(), getStringLocated());
 			}
-			throw EaterException.located("Assertion error", getStringLocated());
+			throw EaterExceptionLocated.located("Assertion error", getStringLocated());
 		}
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterDeclareProcedure.java
Patch:
@@ -48,7 +48,7 @@ public EaterDeclareProcedure(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!");
 		boolean unquoted = false;

File: src/net/sourceforge/plantuml/tim/EaterDeclareReturnFunction.java
Patch:
@@ -48,7 +48,7 @@ public EaterDeclareReturnFunction(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!");
 		boolean unquoted = false;

File: src/net/sourceforge/plantuml/tim/EaterDumpMemory.java
Patch:
@@ -43,7 +43,7 @@ public EaterDumpMemory(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!dump_memory");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterElseIf.java
Patch:
@@ -46,7 +46,7 @@ public EaterElseIf(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!elseif");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterForeach.java
Patch:
@@ -48,7 +48,7 @@ public EaterForeach(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!foreach");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIf.java
Patch:
@@ -46,7 +46,7 @@ public EaterIf(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!if");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIfdef.java
Patch:
@@ -48,7 +48,7 @@ public EaterIfdef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!ifdef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIfndef.java
Patch:
@@ -46,7 +46,7 @@ public EaterIfndef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!ifndef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterImport.java
Patch:
@@ -45,7 +45,7 @@ public EaterImport(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!import");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterInclude.java
Patch:
@@ -47,7 +47,7 @@ public EaterInclude(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!include");
 		final char peekChar = peekChar();

File: src/net/sourceforge/plantuml/tim/EaterIncludeDef.java
Patch:
@@ -45,7 +45,7 @@ public EaterIncludeDef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!includedef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterIncludesub.java
Patch:
@@ -45,7 +45,7 @@ public EaterIncludesub(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!includesub");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterLegacyDefine.java
Patch:
@@ -45,7 +45,7 @@ public EaterLegacyDefine(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!define");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterLegacyDefineLong.java
Patch:
@@ -45,7 +45,7 @@ public EaterLegacyDefineLong(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!definelong");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterLog.java
Patch:
@@ -44,7 +44,7 @@ public EaterLog(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!log");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterReturn.java
Patch:
@@ -46,7 +46,7 @@ public EaterReturn(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!return");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterStartsub.java
Patch:
@@ -45,13 +45,13 @@ public EaterStartsub(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!startsub");
 		skipSpaces();
 		this.subname = eatAllToEnd();
 		if (this.subname.matches("\\w+") == false)
-			throw EaterException.located("Bad sub name", getStringLocated());
+			throw EaterExceptionLocated.located("Bad sub name", getStringLocated());
 
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterUndef.java
Patch:
@@ -43,7 +43,7 @@ public EaterUndef(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!undef");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/EaterWhile.java
Patch:
@@ -46,7 +46,7 @@ public EaterWhile(StringLocated s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		skipSpaces();
 		checkAndEatChar("!while");
 		skipSpaces();

File: src/net/sourceforge/plantuml/tim/ExecutionContextWhile.java
Patch:
@@ -61,7 +61,7 @@ public static ExecutionContextWhile fromValue(TokenStack whileExpression, CodePo
 	}
 
 	public TValue conditionValue(StringLocated location, TContext context, TMemory memory)
-			throws EaterException, EaterExceptionLocated {
+			throws EaterExceptionLocated {
 		return whileExpression.getResult(location, context, memory);
 	}
 

File: src/net/sourceforge/plantuml/tim/StringEater.java
Patch:
@@ -43,7 +43,7 @@ public StringEater(String s) {
 	}
 
 	@Override
-	public void analyze(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
+	public void analyze(TContext context, TMemory memory) throws EaterExceptionLocated {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/tim/TFunction.java
Patch:
@@ -50,10 +50,10 @@ public interface TFunction {
 	public TFunctionType getFunctionType();
 
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> args,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated;
+			Map<String, TValue> named) throws EaterExceptionLocated;
 
 	public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location, List<TValue> args,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated;
+			Map<String, TValue> named) throws EaterExceptionLocated;
 
 	public boolean isUnquoted();
 

File: src/net/sourceforge/plantuml/tim/TMemory.java
Patch:
@@ -45,7 +45,7 @@ public interface TMemory {
 	public TValue getVariable(String varname);
 
 	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
-			throws EaterException;
+			throws EaterExceptionLocated;
 
 	public void removeVariable(String varname);
 
@@ -59,7 +59,7 @@ public void putVariable(String varname, TValue value, TVariableScope scope, Stri
 
 	public ExecutionContextIf peekIf();
 
-	public boolean areAllIfOk(TContext context, TMemory memory) throws EaterException;
+	public boolean areAllIfOk(TContext context, TMemory memory) throws EaterExceptionLocated;
 
 	public void addIf(ExecutionContextIf context);
 

File: src/net/sourceforge/plantuml/tim/TMemoryGlobal.java
Patch:
@@ -73,10 +73,10 @@ void dumpMemoryInternal() {
 
 	@Override
 	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
-			throws EaterException {
+			throws EaterExceptionLocated {
 		Log.info("[MemGlobal] Setting " + varname);
 		if (scope == TVariableScope.LOCAL)
-			throw EaterException.unlocated("Cannot use local variable here", location);
+			throw EaterExceptionLocated.unlocated("Cannot use local variable here", location);
 
 		this.globalVariables.put(varname, value);
 		this.variables.add(varname);

File: src/net/sourceforge/plantuml/tim/TMemoryLocal.java
Patch:
@@ -79,7 +79,7 @@ public void dumpDebug(String message) {
 
 	@Override
 	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
-			throws EaterException {
+			throws EaterExceptionLocated {
 		if (scope == TVariableScope.GLOBAL) {
 			memoryGlobal.putVariable(varname, value, scope, location);
 			return;

File: src/net/sourceforge/plantuml/tim/TimLoader.java
Patch:
@@ -57,7 +57,7 @@ public TimLoader(ImportedFiles importedFiles, Defines defines, Charset charset,
 		this.context = new TContext(importedFiles, defines, charset, definitionsContainer);
 		try {
 			defines.copyTo(global, location);
-		} catch (EaterException e) {
+		} catch (EaterExceptionLocated e) {
 			Logme.error(e);
 		}
 	}

File: src/net/sourceforge/plantuml/tim/expression/Knowledge.java
Patch:
@@ -34,14 +34,13 @@
  */
 package net.sourceforge.plantuml.tim.expression;
 
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 
 public interface Knowledge {
 
-	public TValue getVariable(String name) throws EaterException, EaterExceptionLocated;
+	public TValue getVariable(String name) throws EaterExceptionLocated;
 
 	public TFunction getFunction(TFunctionSignature signature);
 

File: src/net/sourceforge/plantuml/tim/iterator/AbstractCodeIterator.java
Patch:
@@ -35,7 +35,6 @@
 package net.sourceforge.plantuml.tim.iterator;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 
 public abstract class AbstractCodeIterator implements CodeIterator {
@@ -47,7 +46,7 @@ public AbstractCodeIterator(CodeIterator source) {
 	}
 
 	@Override
-	public void next() throws EaterException, EaterExceptionLocated {
+	public void next() throws EaterExceptionLocated {
 		source.next();
 	}
 
@@ -57,7 +56,8 @@ final public CodePosition getCodePosition() {
 	}
 
 	@Override
-	final public void jumpToCodePosition(CodePosition newPosition, StringLocated location) throws EaterException {
+	final public void jumpToCodePosition(CodePosition newPosition, StringLocated location)
+			throws EaterExceptionLocated {
 		source.jumpToCodePosition(newPosition, location);
 	}
 

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorImpl.java
Patch:
@@ -37,7 +37,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
+import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 
 public class CodeIteratorImpl implements CodeIterator {
 
@@ -89,10 +89,10 @@ public CodePosition getCodePosition() {
 	}
 
 	@Override
-	public void jumpToCodePosition(CodePosition newPosition, StringLocated location) throws EaterException {
+	public void jumpToCodePosition(CodePosition newPosition, StringLocated location) throws EaterExceptionLocated {
 		this.countJump++;
 		if (this.countJump > 999)
-			throw EaterException.unlocated("Infinite loop?", location);
+			throw EaterExceptionLocated.unlocated("Infinite loop?", location);
 
 		final Position pos = (Position) newPosition;
 		this.current = pos.pos;

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorInnerComment.java
Patch:
@@ -35,7 +35,6 @@
 package net.sourceforge.plantuml.tim.iterator;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 
 public class CodeIteratorInnerComment extends AbstractCodeIterator {
@@ -44,7 +43,7 @@ public CodeIteratorInnerComment(CodeIterator source) {
 		super(source);
 	}
 
-	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+	public StringLocated peek() throws EaterExceptionLocated {
 		final StringLocated result = source.peek();
 		if (result == null) {
 			return null;

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorLegacyDefine.java
Patch:
@@ -38,7 +38,6 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.FunctionsSet;
 import net.sourceforge.plantuml.tim.TContext;
@@ -61,7 +60,7 @@ public CodeIteratorLegacyDefine(CodeIterator source, TContext context, TMemory m
 		this.memory = memory;
 	}
 
-	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+	public StringLocated peek() throws EaterExceptionLocated {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorLongComment.java
Patch:
@@ -38,7 +38,6 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 
 public class CodeIteratorLongComment extends AbstractCodeIterator {
@@ -50,7 +49,7 @@ public CodeIteratorLongComment(CodeIterator source, List<StringLocated> logs) {
 		this.logs = logs;
 	}
 
-	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+	public StringLocated peek() throws EaterExceptionLocated {
 		while (true) {
 			if (source.peek() == null) {
 				return null;

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorProcedure.java
Patch:
@@ -38,7 +38,6 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.FunctionsSet;
 import net.sourceforge.plantuml.tim.TContext;
@@ -62,7 +61,7 @@ public CodeIteratorProcedure(CodeIterator source, TContext context, TMemory memo
 		this.memory = memory;
 	}
 
-	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+	public StringLocated peek() throws EaterExceptionLocated {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorReturnFunction.java
Patch:
@@ -38,7 +38,6 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.FunctionsSet;
 import net.sourceforge.plantuml.tim.TContext;
@@ -62,7 +61,7 @@ public CodeIteratorReturnFunction(CodeIterator source, TContext context, TMemory
 		this.memory = memory;
 	}
 
-	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+	public StringLocated peek() throws EaterExceptionLocated {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorShortComment.java
Patch:
@@ -38,7 +38,6 @@
 
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.text.TLineType;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 
 public class CodeIteratorShortComment extends AbstractCodeIterator {
@@ -50,7 +49,7 @@ public CodeIteratorShortComment(CodeIterator source, List<StringLocated> logs) {
 		this.logs = logs;
 	}
 
-	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+	public StringLocated peek() throws EaterExceptionLocated {
 		while (true) {
 			final StringLocated result = source.peek();
 			if (result == null) {

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysFalse.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		return TValue.fromBoolean(false);
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysTrue.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		return TValue.fromBoolean(true);
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/CallUserFunction.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
@@ -60,13 +59,13 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String fname = values.get(0).toString();
 		final List<TValue> args = values.subList(1, values.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, args.size());
 		final TFunction func = context.getFunctionSmart(signature);
 		if (func == null)
-			throw EaterException.unlocated("Cannot find void function " + fname, location);
+			throw EaterExceptionLocated.unlocated("Cannot find void function " + fname, location);
 
 		return func.executeReturnFunction(context, memory, location, args, named);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Chr.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		try {
 			final String value = String.valueOf(Character.toChars(values.get(0).toInt()));
 			return TValue.fromString(value);

File: src/net/sourceforge/plantuml/tim/stdlib/Darken.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -63,15 +62,15 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		final int ratio = values.get(1).toInt();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.darken(ratio);
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color", location);
+			throw EaterExceptionLocated.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Dec2hex.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		try {
 			return TValue.fromString("" + Integer.toHexString(values.get(0).toInt()));
 		} catch (Throwable t) {

File: src/net/sourceforge/plantuml/tim/stdlib/Dirpath.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -66,7 +65,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		if (value == null)
 			return TValue.fromString("");
 

File: src/net/sourceforge/plantuml/tim/stdlib/Eval.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.StringEater;
 import net.sourceforge.plantuml.tim.TContext;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String exp = values.get(0).toString();
 		final StringEater eater = new StringEater(exp);
 		final TValue value = eater.eatExpression(context, memory);

File: src/net/sourceforge/plantuml/tim/stdlib/Feature.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String arg = values.get(0).toString();
 		if ("style".equalsIgnoreCase(arg))
 			return TValue.fromInt(1);

File: src/net/sourceforge/plantuml/tim/stdlib/FileExists.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.security.SFile;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		// ::comment when __CORE__
 		final String path = values.get(0).toString();
 		return TValue.fromBoolean(new SFile(path).exists());

File: src/net/sourceforge/plantuml/tim/stdlib/Filename.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -66,7 +65,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		if (value == null) {
 			return TValue.fromString("");
 		}

File: src/net/sourceforge/plantuml/tim/stdlib/FunctionExists.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String name = values.get(0).toString();
 		return TValue.fromBoolean(context.doesFunctionExist(name));
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllStdlib.java
Patch:
@@ -45,7 +45,6 @@
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.preproc.Stdlib;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -65,7 +64,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 
 		switch (values.size()) {
 		case 0:
@@ -100,7 +99,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 
 		default:
 			assert false; // Should not append because of canCover()
-			throw EaterException.located("Error on get_all_stdlib: Too many arguments", location);
+			throw EaterExceptionLocated.located("Error on get_all_stdlib: Too many arguments", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllTheme.java
Patch:
@@ -43,7 +43,6 @@
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.theme.ThemeUtils;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -63,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final JsonArray result = new JsonArray();
 		try {
 			for (String theme : ThemeUtils.getAllThemeNames()) {

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonType.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final TValue data = values.get(0);
 		if (data.isString())
 			return TValue.fromString("string");

File: src/net/sourceforge/plantuml/tim/stdlib/GetVariableValue.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String name = values.get(0).toString();
 		final TValue variable = memory.getVariable(name);
 		if (variable == null)

File: src/net/sourceforge/plantuml/tim/stdlib/GetVersion.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		return TValue.fromString(Version.versionString());
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Getenv.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.security.SecurityUtils;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		// ::comment when __CORE__
 		final String value = getenv(values.get(0).toString());
 		if (value == null)

File: src/net/sourceforge/plantuml/tim/stdlib/Hex2dec.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		try {
 			return TValue.fromInt(Integer.parseInt(values.get(0).toString(), 16));
 		} catch (Throwable t) {

File: src/net/sourceforge/plantuml/tim/stdlib/HslColor.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColors;
 import net.sourceforge.plantuml.klimt.color.HSLColor;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -62,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final int h = values.get(0).toInt();
 		final int s = values.get(1).toInt();
 		final int l = values.get(2).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/IntVal.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String s = values.get(0).toString();
 		try {
 			return TValue.fromInt(Integer.parseInt(s));

File: src/net/sourceforge/plantuml/tim/stdlib/InvokeProcedure.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
@@ -65,13 +64,13 @@ public TFunctionType getFunctionType() {
 
 	@Override
 	public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location, List<TValue> args,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String fname = args.get(0).toString();
 		final List<TValue> sublist = args.subList(1, args.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, sublist.size());
 		final TFunction func = context.getFunctionSmart(signature);
 		if (func == null)
-			throw EaterException.located("Cannot find void function " + fname, location);
+			throw EaterExceptionLocated.located("Cannot find void function " + fname, location);
 
 		func.executeProcedureInternal(context, memory, location, sublist, named);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/IsDark.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -63,13 +62,13 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {
 			final HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			return TValue.fromBoolean(color.isDark());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color", location);
+			throw EaterExceptionLocated.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/IsLight.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -63,13 +62,13 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {
 			final HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			return TValue.fromBoolean(!color.isDark());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color", location);
+			throw EaterExceptionLocated.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/JsonKeyExists.java
Patch:
@@ -41,7 +41,6 @@
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -61,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final TValue arg0 = values.get(0);
 		if (arg0.isJson() == false)
 			return TValue.fromBoolean(false);

File: src/net/sourceforge/plantuml/tim/stdlib/Lighten.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -63,15 +62,15 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		final int ratio = values.get(1).toInt();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.lighten(ratio);
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color", location);
+			throw EaterExceptionLocated.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalAnd.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == false)
 				return TValue.fromBoolean(false);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNand.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == false)
 				return TValue.fromBoolean(!false);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNor.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == true)
 				return TValue.fromBoolean(!true);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNot.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final boolean arg = values.get(0).toBoolean();
 		return TValue.fromBoolean(!arg);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNxor.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		int cpt = 0;
 		for (TValue v : values)
 			if (v.toBoolean() == true)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalOr.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == true)
 				return TValue.fromBoolean(true);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalXor.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		int cpt = 0;
 		for (TValue v : values)
 			if (v.toBoolean() == true)

File: src/net/sourceforge/plantuml/tim/stdlib/Now.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final long now = System.currentTimeMillis() / 1000L;
 		return TValue.fromInt((int) now);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		try {
 			final int codePoint = values.get(0).toString().codePointAt(0);
 			return TValue.fromInt(codePoint);

File: src/net/sourceforge/plantuml/tim/stdlib/RandomFunction.java
Patch:
@@ -40,7 +40,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -62,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		switch (values.size()) {
 		case 0:
 			return TValue.fromInt(random.nextInt(2));
@@ -78,7 +77,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 
 		default:
 			assert false; // Should not append because of canCover()
-			throw EaterException.located("Error on Random: Too many argument", location);
+			throw EaterExceptionLocated.located("Error on Random: Too many argument", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/RetrieveProcedure.java
Patch:
@@ -40,7 +40,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
@@ -61,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String fname = values.get(0).toString();
 		final List<TValue> args = values.subList(1, values.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, args.size());

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseColor.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -62,14 +61,14 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.reverse();
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color", location);
+			throw EaterExceptionLocated.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseHsluvColor.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -62,14 +61,14 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {
 			HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			color = color.reverseHsluv();
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color", location);
+			throw EaterExceptionLocated.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/SetVariableValue.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -60,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		// if (memory instanceof TMemoryLocal) {
 		// memory = ((TMemoryLocal) memory).getGlobalForInternalUseOnly();
 		// }

File: src/net/sourceforge/plantuml/tim/stdlib/SimpleReturnFunction.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Map;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
+import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionType;
@@ -53,7 +53,7 @@ final public TFunctionType getFunctionType() {
 
 	@Override
 	final public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location,
-			List<TValue> args, Map<String, TValue> named) throws EaterException {
+			List<TValue> args, Map<String, TValue> named) throws EaterExceptionLocated {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/Size.java
Patch:
@@ -42,7 +42,6 @@
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -62,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final TValue value = values.get(0);
 		if (value.isNumber())
 			return TValue.fromInt(0);

File: src/net/sourceforge/plantuml/tim/stdlib/SplitStr.java
Patch:
@@ -41,7 +41,6 @@
 
 import net.sourceforge.plantuml.json.JsonArray;
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -61,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final JsonArray result = new JsonArray();
 
 		final String str = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Strlen.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		return TValue.fromInt(values.get(0).toString().length());
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Strpos.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String full = values.get(0).toString();
 		final String searched = values.get(1).toString();
 		return TValue.fromInt(full.indexOf(searched));

File: src/net/sourceforge/plantuml/tim/stdlib/Substr.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String full = values.get(0).toString();
 		final int pos = values.get(1).toInt();
 		if (pos >= full.length())

File: src/net/sourceforge/plantuml/tim/stdlib/VariableExists.java
Patch:
@@ -39,7 +39,6 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
@@ -59,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 
 	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
-			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
+			Map<String, TValue> named) throws EaterExceptionLocated {
 		final String name = values.get(0).toString();
 		return TValue.fromBoolean(memory.getVariable(name) != null);
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.4beta3";
+	private static final String version = "1.2024.4beta4";
 
 	public static String versionString() {
 		return version;

File: test/net/sourceforge/plantuml/tim/stdlib/ChrTest.java
Patch:
@@ -7,7 +7,6 @@
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.CsvSource;
 
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TFunction;
 
@@ -38,7 +37,7 @@ class ChrTest {
 			" 128512 , ðŸ˜€ ",
 			" 128512 , \uD83D\uDE00 ",
 	})
-	void Test_with_Integer(Integer input, String expected) throws EaterException, EaterExceptionLocated {
+	void Test_with_Integer(Integer input, String expected) throws EaterExceptionLocated {
 		assertTimExpectedOutputFromInput(cut, input, expected);
 	}
 }
\ No newline at end of file

File: test/net/sourceforge/plantuml/tim/stdlib/GetenvTest.java
Patch:
@@ -8,7 +8,6 @@
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.ValueSource;
 
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.expression.TValue;
 
@@ -29,7 +28,7 @@ class GetenvTest {
 			"plantuml.SECURITY.blabla",
 			"plantuml.security.credentials.path",
 	})
-	void executeReturnFunctionSecurityTest(String name) throws EaterException, EaterExceptionLocated {
+	void executeReturnFunctionSecurityTest(String name) throws EaterExceptionLocated {
 		System.setProperty("plantuml.security.blabla", "example");
 		Getenv cut = new Getenv();
 
@@ -49,7 +48,7 @@ void executeReturnFunctionSecurityTest(String name) throws EaterException, Eater
 			"path.separator",
 			"line.separator",
 	})
-	void executeReturnFunctionTest(String name) throws EaterException, EaterExceptionLocated {
+	void executeReturnFunctionTest(String name) throws EaterExceptionLocated {
 		Getenv cut = new Getenv();
 
 		List<TValue> values = Collections.singletonList(TValue.fromString(name));

File: test/net/sourceforge/plantuml/tim/stdlib/OrdTest.java
Patch:
@@ -7,7 +7,6 @@
 import org.junit.jupiter.params.ParameterizedTest;
 import org.junit.jupiter.params.provider.CsvSource;
 
-import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TFunction;
 
@@ -41,7 +40,7 @@ class OrdTest {
 			" ðŸ˜€   , 128512 ",
 			" \uD83D\uDE00 , 128512 ",
 	})
-	void Test_with_String(String input, String expected) throws EaterException, EaterExceptionLocated {
+	void Test_with_String(String input, String expected) throws EaterExceptionLocated {
 		assertTimExpectedOutputFromInput(cut, input, expected);
 	}
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/BlockUml.java
Patch:
@@ -143,7 +143,7 @@ public BlockUml(List<StringLocated> strings, Defines defines, ISkinSimple skinPa
 			this.data = new ArrayList<>(strings);
 		} else {
 			final TimLoader timLoader = new TimLoader(mode.getImportedFiles(), defines, charset,
-					(DefinitionsContainer) mode);
+					(DefinitionsContainer) mode, strings.get(0));
 			this.included.addAll(timLoader.load(strings));
 			this.data = timLoader.getResultList();
 			this.debug = timLoader.getDebug();

File: src/net/sourceforge/plantuml/preproc/Truth.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.preproc;
 
 public interface Truth {
+	
 	public boolean isTrue(String name);
 
 }

File: src/net/sourceforge/plantuml/tim/EaterAffectation.java
Patch:
@@ -53,7 +53,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		if (scope != null) {
 			skipSpaces();
 			if (peekChar() == '?' || peekChar() == '=') {
-				// The variable itself is "local" or "glocal", which is not a good idea by the
+				// The variable itself is "local" or "global", which is not a good idea by the
 				// way
 				scope = null;
 			} else
@@ -72,7 +72,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 
 		skipSpaces();
 		final TValue value = eatExpression(context, memory);
-		memory.putVariable(varname, value, scope);
+		memory.putVariable(varname, value, scope, getStringLocated());
 	}
 
 }

File: src/net/sourceforge/plantuml/tim/EaterAffectationDefine.java
Patch:
@@ -56,7 +56,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		// if (memory instanceof TMemoryLocal) {
 		// memory = ((TMemoryLocal) memory).getGlobalForInternalUseOnly();
 		// }
-		memory.putVariable(varname, value, TVariableScope.GLOBAL);
+		memory.putVariable(varname, value, TVariableScope.GLOBAL, getStringLocated());
 	}
 
 }

File: src/net/sourceforge/plantuml/tim/EaterAssert.java
Patch:
@@ -55,9 +55,9 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 			if (ch == ':') {
 				checkAndEatChar(':');
 				final TValue message = eatExpression(context, memory);
-				throw EaterException.located("Assertion error : " + message.toString());
+				throw EaterException.located("Assertion error : " + message.toString(), getStringLocated());
 			}
-			throw EaterException.located("Assertion error");
+			throw EaterException.located("Assertion error", getStringLocated());
 		}
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterDeclareProcedure.java
Patch:
@@ -35,17 +35,16 @@
 package net.sourceforge.plantuml.tim;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class EaterDeclareProcedure extends Eater {
 
 	private TFunctionImpl function;
-	private final LineLocation location;
+	private final StringLocated location;
 	private boolean finalFlag;
 
 	public EaterDeclareProcedure(StringLocated s) {
 		super(s.getTrimmed());
-		this.location = s.getLocation();
+		this.location = s;
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/tim/EaterDeclareReturnFunction.java
Patch:
@@ -35,17 +35,16 @@
 package net.sourceforge.plantuml.tim;
 
 import net.sourceforge.plantuml.text.StringLocated;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class EaterDeclareReturnFunction extends Eater {
 
 	private TFunctionImpl function;
-	private final LineLocation location;
+	private final StringLocated location;
 	private boolean finalFlag;
 
 	public EaterDeclareReturnFunction(StringLocated s) {
 		super(s.getTrimmed());
-		this.location = s.getLocation();
+		this.location = s;
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/tim/EaterLegacyDefine.java
Patch:
@@ -49,7 +49,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		skipSpaces();
 		checkAndEatChar("!define");
 		skipSpaces();
-		function = eatDeclareFunction(context, memory, true, getLineLocation(), false, TFunctionType.LEGACY_DEFINE);
+		function = eatDeclareFunction(context, memory, true, getStringLocated(), false, TFunctionType.LEGACY_DEFINE);
 		final String def = this.eatAllToEnd();
 //		function.setFunctionType(TFunctionType.LEGACY_DEFINE);
 		function.setLegacyDefinition(def);

File: src/net/sourceforge/plantuml/tim/EaterLegacyDefineLong.java
Patch:
@@ -49,7 +49,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		skipSpaces();
 		checkAndEatChar("!definelong");
 		skipSpaces();
-		function = eatDeclareFunction(context, memory, true, getLineLocation(), true, TFunctionType.LEGACY_DEFINELONG);
+		function = eatDeclareFunction(context, memory, true, getStringLocated(), true, TFunctionType.LEGACY_DEFINELONG);
 		// function.setFunctionType(TFunctionType.LEGACY_DEFINELONG);
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterStartsub.java
Patch:
@@ -50,9 +50,9 @@ public void analyze(TContext context, TMemory memory) throws EaterException {
 		checkAndEatChar("!startsub");
 		skipSpaces();
 		this.subname = eatAllToEnd();
-		if (this.subname.matches("\\w+") == false) {
-			throw EaterException.located("Bad sub name");
-		}
+		if (this.subname.matches("\\w+") == false)
+			throw EaterException.located("Bad sub name", getStringLocated());
+
 	}
 
 	public final String getSubname() {

File: src/net/sourceforge/plantuml/tim/TFunctionImpl.java
Patch:
@@ -148,12 +148,12 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			return executeReturnLegacyDefine(location.getLocation(), context, memory, args);
 
 		if (functionType != TFunctionType.RETURN_FUNCTION)
-			throw EaterException.unlocated("Illegal call here. Is there a return directive in your function?");
+			throw EaterException.unlocated("Illegal call here. Is there a return directive in your function?", location);
 
 		final TMemory copy = getNewMemory(memory, args, named);
 		final TValue result = context.executeLines(copy, body, TFunctionType.RETURN_FUNCTION, true);
 		if (result == null)
-			throw EaterException.unlocated("No return directive found in your function");
+			throw EaterException.unlocated("No return directive found in your function", location);
 
 		return result;
 	}

File: src/net/sourceforge/plantuml/tim/TMemory.java
Patch:
@@ -37,13 +37,15 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.expression.TValue;
 
 public interface TMemory {
 
 	public TValue getVariable(String varname);
 
-	public void putVariable(String varname, TValue value, TVariableScope scope) throws EaterException;
+	public void putVariable(String varname, TValue value, TVariableScope scope, StringLocated location)
+			throws EaterException;
 
 	public void removeVariable(String varname);
 

File: src/net/sourceforge/plantuml/tim/TimLoader.java
Patch:
@@ -53,10 +53,10 @@ public class TimLoader {
 	private List<StringLocated> resultList;
 
 	public TimLoader(ImportedFiles importedFiles, Defines defines, Charset charset,
-			DefinitionsContainer definitionsContainer) {
+			DefinitionsContainer definitionsContainer, StringLocated location) {
 		this.context = new TContext(importedFiles, defines, charset, definitionsContainer);
 		try {
-			defines.copyTo(global);
+			defines.copyTo(global, location);
 		} catch (EaterException e) {
 			Logme.error(e);
 		}

File: src/net/sourceforge/plantuml/tim/iterator/CodeIterator.java
Patch:
@@ -39,14 +39,14 @@
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 
 public interface CodeIterator {
-    // ::remove folder when __HAXE__
+	// ::remove folder when __HAXE__
 
 	public StringLocated peek() throws EaterException, EaterExceptionLocated;
 
 	public void next() throws EaterException, EaterExceptionLocated;
 
 	public CodePosition getCodePosition();
 
-	public void jumpToCodePosition(CodePosition newPosition) throws EaterException;
+	public void jumpToCodePosition(CodePosition newPosition, StringLocated location) throws EaterException;
 
 }

File: src/net/sourceforge/plantuml/tim/stdlib/CallUserFunction.java
Patch:
@@ -65,9 +65,9 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		final List<TValue> args = values.subList(1, values.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, args.size());
 		final TFunction func = context.getFunctionSmart(signature);
-		if (func == null) {
-			throw EaterException.unlocated("Cannot find void function " + fname);
-		}
+		if (func == null)
+			throw EaterException.unlocated("Cannot find void function " + fname, location);
+
 		return func.executeReturnFunction(context, memory, location, args, named);
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/Darken.java
Patch:
@@ -71,7 +71,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			color = color.darken(ratio);
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color");
+			throw EaterException.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/DateFunction.java
Patch:
@@ -71,10 +71,11 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			now = 1000L * values.get(1).toInt();
 		else
 			now = System.currentTimeMillis();
+		
 		try {
 			return TValue.fromString(new SimpleDateFormat(format).format(now));
 		} catch (Exception e) {
-			throw EaterException.unlocated("Bad date pattern");
+			throw EaterException.unlocated("Bad date pattern", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllStdlib.java
Patch:
@@ -99,7 +99,8 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			}
 
 		default:
-			throw EaterException.located("Error on get_all_stdlib: Too many arguments");
+			assert false; // Should not append because of canCover()
+			throw EaterException.located("Error on get_all_stdlib: Too many arguments", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonKey.java
Patch:
@@ -65,7 +65,8 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue data = values.get(0);
 		if (data.isJson() == false)
-			throw EaterException.unlocated("Not JSON data");
+			throw EaterException.unlocated("Not JSON data", location);
+		
 		final JsonValue json = data.toJson();
 		if (json.isObject()) {
 			final JsonObject object = (JsonObject) json;
@@ -87,7 +88,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			return TValue.fromJson(result);
 		}
 
-		throw EaterException.unlocated("Bad JSON type");
+		throw EaterException.unlocated("Bad JSON type", location);
 
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/InvokeProcedure.java
Patch:
@@ -71,7 +71,7 @@ public void executeProcedureInternal(TContext context, TMemory memory, StringLoc
 		final TFunctionSignature signature = new TFunctionSignature(fname, sublist.size());
 		final TFunction func = context.getFunctionSmart(signature);
 		if (func == null)
-			throw EaterException.located("Cannot find void function " + fname);
+			throw EaterException.located("Cannot find void function " + fname, location);
 
 		func.executeProcedureInternal(context, memory, location, sublist, named);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/IsDark.java
Patch:
@@ -69,7 +69,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			final HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			return TValue.fromBoolean(color.isDark());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color");
+			throw EaterException.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/IsLight.java
Patch:
@@ -69,7 +69,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			final HColor color = HColorSet.instance().getColorLEGACY(colorString);
 			return TValue.fromBoolean(!color.isDark());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color");
+			throw EaterException.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/Lighten.java
Patch:
@@ -71,7 +71,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			color = color.lighten(ratio);
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color");
+			throw EaterException.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/LoadJson.java
Patch:
@@ -120,10 +120,11 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			return TValue.fromJson(jsonValue);
 		} catch (ParseException pe) {
 			Logme.error(pe);
-			throw EaterException.unlocated("JSON parse issue in source " + path + " on location " + pe.getLocation());
+			throw EaterException.unlocated("JSON parse issue in source " + path + " on location " + pe.getLocation(),
+					location);
 		} catch (UnsupportedEncodingException e) {
 			Logme.error(e);
-			throw EaterException.unlocated("JSON encoding issue in source " + path + ": " + e.getMessage());
+			throw EaterException.unlocated("JSON encoding issue in source " + path + ": " + e.getMessage(), location);
 		}
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/RandomFunction.java
Patch:
@@ -77,7 +77,8 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			return TValue.fromInt(random.nextInt(max - min) + min);
 
 		default:
-			throw EaterException.located("Error on Random: Too many argument");
+			assert false; // Should not append because of canCover()
+			throw EaterException.located("Error on Random: Too many argument", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseColor.java
Patch:
@@ -69,7 +69,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			color = color.reverse();
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color");
+			throw EaterException.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseHsluvColor.java
Patch:
@@ -69,7 +69,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 			color = color.reverseHsluv();
 			return TValue.fromString(color.asString());
 		} catch (NoSuchColorException e) {
-			throw EaterException.located("No such color");
+			throw EaterException.located("No such color", location);
 		}
 	}
 }

File: src/net/sourceforge/plantuml/tim/stdlib/SetVariableValue.java
Patch:
@@ -66,7 +66,7 @@ public TValue executeReturnFunction(TContext context, TMemory memory, StringLoca
 		// }
 		final String name = values.get(0).toString();
 		final TValue value = values.get(1);
-		memory.putVariable(name, value, TVariableScope.GLOBAL);
+		memory.putVariable(name, value, TVariableScope.GLOBAL, location);
 		return TValue.fromString("");
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.4beta2";
+	private static final String version = "1.2024.4beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/tim/EaterAffectation.java
Patch:
@@ -53,7 +53,8 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		if (scope != null) {
 			skipSpaces();
 			if (peekChar() == '?' || peekChar() == '=') {
-				// The variable itself is "local" or "glocal", which is not a good idea by the way
+				// The variable itself is "local" or "glocal", which is not a good idea by the
+				// way
 				scope = null;
 			} else
 				varname = eatAndGetVarname();

File: src/net/sourceforge/plantuml/tim/EaterAffectationDefine.java
Patch:
@@ -51,7 +51,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		final String varname = eatAndGetVarname();
 		skipSpaces();
 		final String tmp = eatAllToEnd();
-		final String tmp2 = context.applyFunctionsAndVariables(memory, getLineLocation(), tmp);
+		final String tmp2 = context.applyFunctionsAndVariables(memory, new StringLocated(tmp, getLineLocation()));
 		final TValue value = TValue.fromString(tmp2);
 		// if (memory instanceof TMemoryLocal) {
 		// memory = ((TMemoryLocal) memory).getGlobalForInternalUseOnly();

File: src/net/sourceforge/plantuml/tim/EaterInclude.java
Patch:
@@ -65,7 +65,8 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 			}
 		}
 		skipSpaces();
-		this.location = context.applyFunctionsAndVariables(memory, getLineLocation(), this.eatAllToEnd());
+		this.location = context.applyFunctionsAndVariables(memory,
+				new StringLocated(this.eatAllToEnd(), getLineLocation()));
 //		final TValue value = eatExpression(context, memory);
 //		this.location = value.toString();
 

File: src/net/sourceforge/plantuml/tim/EaterIncludeDef.java
Patch:
@@ -49,7 +49,8 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		skipSpaces();
 		checkAndEatChar("!includedef");
 		skipSpaces();
-		this.location = context.applyFunctionsAndVariables(memory, getLineLocation(), this.eatAllToEnd());
+		this.location = context.applyFunctionsAndVariables(memory,
+				new StringLocated(this.eatAllToEnd(), getLineLocation()));
 
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterIncludesub.java
Patch:
@@ -49,7 +49,8 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		skipSpaces();
 		checkAndEatChar("!includesub");
 		skipSpaces();
-		this.location = context.applyFunctionsAndVariables(memory, getLineLocation(), this.eatAllToEnd());
+		this.location = context.applyFunctionsAndVariables(memory,
+				new StringLocated(this.eatAllToEnd(), getLineLocation()));
 
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterLog.java
Patch:
@@ -48,7 +48,8 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		skipSpaces();
 		checkAndEatChar("!log");
 		skipSpaces();
-		final String logData = context.applyFunctionsAndVariables(memory, getLineLocation(), this.eatAllToEnd());
+		final String logData = context.applyFunctionsAndVariables(memory,
+				new StringLocated(this.eatAllToEnd(), getLineLocation()));
 		Log.error("[Log] " + logData);
 	}
 

File: src/net/sourceforge/plantuml/tim/EaterTheme.java
Patch:
@@ -76,12 +76,12 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 		final int x = this.name.toLowerCase().indexOf(" from ");
 		if (x != -1) {
 			final String fromTmp = this.name.substring(x + " from ".length()).trim();
-			this.from = context.applyFunctionsAndVariables(memory, getLineLocation(), fromTmp);
+			this.from = context.applyFunctionsAndVariables(memory, new StringLocated(fromTmp, getLineLocation()));
 			this.name = this.name.substring(0, x).trim();
 			this.context = context;
 		}
 
-		this.realName = context.applyFunctionsAndVariables(memory, getLineLocation(), this.name);
+		this.realName = context.applyFunctionsAndVariables(memory, new StringLocated(this.name, getLineLocation()));
 
 	}
 

File: src/net/sourceforge/plantuml/tim/ExecutionContextWhile.java
Patch:
@@ -34,6 +34,7 @@
  */
 package net.sourceforge.plantuml.tim;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.expression.TValue;
 import net.sourceforge.plantuml.tim.expression.TokenStack;
 import net.sourceforge.plantuml.tim.iterator.CodePosition;
@@ -59,7 +60,7 @@ public static ExecutionContextWhile fromValue(TokenStack whileExpression, CodePo
 		return new ExecutionContextWhile(whileExpression, codePosition);
 	}
 
-	public TValue conditionValue(LineLocation location, TContext context, TMemory memory)
+	public TValue conditionValue(StringLocated location, TContext context, TMemory memory)
 			throws EaterException, EaterExceptionLocated {
 		return whileExpression.getResult(location, context, memory);
 	}

File: src/net/sourceforge/plantuml/tim/StringEater.java
Patch:
@@ -34,10 +34,12 @@
  */
 package net.sourceforge.plantuml.tim;
 
+import net.sourceforge.plantuml.text.StringLocated;
+
 public class StringEater extends Eater {
 
 	public StringEater(String s) {
-		super(s, null);
+		super(new StringLocated(s, null));
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/tim/expression/ReversePolishInterpretor.java
Patch:
@@ -40,6 +40,7 @@
 import java.util.Deque;
 import java.util.List;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
@@ -58,7 +59,7 @@ public ReversePolishInterpretor(TokenStack queue, Knowledge knowledge, TMemory m
 		this(null, queue, knowledge, memory, context);
 	}
 
-	public ReversePolishInterpretor(LineLocation location, TokenStack queue, Knowledge knowledge, TMemory memory,
+	public ReversePolishInterpretor(StringLocated location, TokenStack queue, Knowledge knowledge, TMemory memory,
 			TContext context) throws EaterException, EaterExceptionLocated {
 
 		final Deque<TValue> stack = new ArrayDeque<>();

File: src/net/sourceforge/plantuml/tim/expression/TokenStack.java
Patch:
@@ -42,6 +42,7 @@
 import java.util.List;
 import java.util.Map;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.Eater;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
@@ -210,9 +211,9 @@ public TokenIterator tokenIterator() {
 		return new InternalIterator();
 	}
 
-	public TValue getResult(LineLocation location, TContext context, TMemory memory)
+	public TValue getResult(StringLocated location, TContext context, TMemory memory)
 			throws EaterException, EaterExceptionLocated {
-		final Knowledge knowledge = context.asKnowledge(memory, location);
+		final Knowledge knowledge = context.asKnowledge(memory, location.getLocation());
 		final TokenStack tmp = withoutSpace();
 		tmp.guessFunctions();
 		final TokenIterator it = tmp.tokenIterator();

File: src/net/sourceforge/plantuml/tim/package-info.java
Patch:
@@ -1,7 +1,7 @@
 /**
- * Provides classes used to manage 
- * <a href="https://plantuml.com/preprocessing" target="_top">
- * Preprocessing</a> of PlantUML input.
+ * Provides classes used to manage
+ * <a href="https://plantuml.com/preprocessing" target="_top"> Preprocessing</a>
+ * of PlantUML input.
  *
  * @see net.sourceforge.plantuml.text.TLineType
  * @see net.sourceforge.plantuml.preproc

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysFalse.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class AlwaysFalse extends SimpleReturnFunction {
 
@@ -56,9 +56,9 @@ public TFunctionSignature getSignature() {
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
-	
+
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromBoolean(false);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysTrue.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class AlwaysTrue extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromBoolean(true);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/CallUserFunction.java
Patch:
@@ -38,14 +38,14 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class CallUserFunction extends SimpleReturnFunction {
 
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String fname = values.get(0).toString();
 		final List<TValue> args = values.subList(1, values.size());

File: src/net/sourceforge/plantuml/tim/stdlib/Chr.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Chr extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
 			final String value = String.valueOf(Character.toChars(values.get(0).toInt()));

File: src/net/sourceforge/plantuml/tim/stdlib/Darken.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Darken extends SimpleReturnFunction {
 
@@ -62,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		final int ratio = values.get(1).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/DateFunction.java
Patch:
@@ -40,13 +40,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class DateFunction extends SimpleReturnFunction {
 
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		if (values.size() == 0)
 			return TValue.fromString(new Date().toString());

File: src/net/sourceforge/plantuml/tim/stdlib/Dec2hex.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Dec2hex extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
 			return TValue.fromString("" + Integer.toHexString(values.get(0).toInt()));

File: src/net/sourceforge/plantuml/tim/stdlib/Eval.java
Patch:
@@ -38,14 +38,14 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.StringEater;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Eval extends SimpleReturnFunction {
 
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String exp = values.get(0).toString();
 		final StringEater eater = new StringEater(exp);

File: src/net/sourceforge/plantuml/tim/stdlib/FileExists.java
Patch:
@@ -39,13 +39,13 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.security.SFile;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class FileExists extends SimpleReturnFunction {
 
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		// ::comment when __CORE__
 		final String path = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Filename.java
Patch:
@@ -39,13 +39,13 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.preproc.Defines;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Filename extends SimpleReturnFunction {
 
@@ -65,7 +65,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		if (value == null) {
 			return TValue.fromString("");

File: src/net/sourceforge/plantuml/tim/stdlib/FunctionExists.java
Patch:
@@ -38,16 +38,16 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class FunctionExists extends SimpleReturnFunction {
-    // ::remove folder when __HAXE__
+	// ::remove folder when __HAXE__
 
 	public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%function_exists", 1);
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String name = values.get(0).toString();
 		return TValue.fromBoolean(context.doesFunctionExist(name));

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllTheme.java
Patch:
@@ -39,16 +39,16 @@
 import java.util.Map;
 import java.util.Set;
 
-import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.json.JsonArray;
+import net.sourceforge.plantuml.log.Logme;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.theme.ThemeUtils;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class GetAllTheme extends SimpleReturnFunction {
 
@@ -62,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final JsonArray result = new JsonArray();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonKey.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.json.JsonArray;
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class GetJsonKey extends SimpleReturnFunction {
 
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue data = values.get(0);
 		if (data.isJson() == false)

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonType.java
Patch:
@@ -39,13 +39,13 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.json.JsonValue;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class GetJsonType extends SimpleReturnFunction {
 
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue data = values.get(0);
 		if (data.isString())

File: src/net/sourceforge/plantuml/tim/stdlib/GetVersion.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 import net.sourceforge.plantuml.version.Version;
 
 public class GetVersion extends SimpleReturnFunction {
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromString(Version.versionString());
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Getenv.java
Patch:
@@ -39,13 +39,13 @@
 import java.util.Set;
 
 import net.sourceforge.plantuml.security.SecurityUtils;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Getenv extends SimpleReturnFunction {
 
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		// ::comment when __CORE__
 		final String value = getenv(values.get(0).toString());
@@ -82,7 +82,7 @@ private String getenv(String name) {
 		// also stop here in other deployments.
 		if (SecurityUtils.getSecurityProfile().canWeReadThisEnvironmentVariable(name) == false)
 			return null;
-		
+
 		final String env = System.getProperty(name);
 		if (env != null)
 			return env;

File: src/net/sourceforge/plantuml/tim/stdlib/Hex2dec.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Hex2dec extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
 			return TValue.fromInt(Integer.parseInt(values.get(0).toString(), 16));

File: src/net/sourceforge/plantuml/tim/stdlib/HslColor.java
Patch:
@@ -41,13 +41,13 @@
 
 import net.sourceforge.plantuml.klimt.color.HColors;
 import net.sourceforge.plantuml.klimt.color.HSLColor;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class HslColor extends SimpleReturnFunction {
 
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final int h = values.get(0).toInt();
 		final int s = values.get(1).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/IntVal.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 import net.sourceforge.plantuml.utils.Log;
 
 public class IntVal extends SimpleReturnFunction {
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String s = values.get(0).toString();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/IsDark.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class IsDark extends SimpleReturnFunction {
 
@@ -62,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/IsLight.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class IsLight extends SimpleReturnFunction {
 
@@ -62,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/JsonKeyExists.java
Patch:
@@ -40,13 +40,13 @@
 
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class JsonKeyExists extends SimpleReturnFunction {
 
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue arg0 = values.get(0);
 		if (arg0.isJson() == false)

File: src/net/sourceforge/plantuml/tim/stdlib/Lighten.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Lighten extends SimpleReturnFunction {
 
@@ -62,7 +62,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		final int ratio = values.get(1).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/LoadJson.java
Patch:
@@ -49,13 +49,13 @@
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.security.SFile;
 import net.sourceforge.plantuml.security.SURL;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 /**
  * Loads JSON data from file or URL source.
@@ -108,7 +108,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String path = values.get(0).toString();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalAnd.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalAnd extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == false)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNand.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalNand extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == false)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNor.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalNor extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == true)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNot.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalNot extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final boolean arg = values.get(0).toBoolean();
 		return TValue.fromBoolean(!arg);

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNxor.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalNxor extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		int cpt = 0;
 		for (TValue v : values)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalOr.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalOr extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)
 			if (v.toBoolean() == true)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalXor.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class LogicalXor extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		int cpt = 0;
 		for (TValue v : values)

File: src/net/sourceforge/plantuml/tim/stdlib/Lower.java
Patch:
@@ -38,11 +38,11 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Lower extends SimpleReturnFunction {
 
@@ -56,7 +56,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString(values.get(0).toString().toLowerCase());
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Newline.java
Patch:
@@ -38,11 +38,11 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Newline extends SimpleReturnFunction {
 
@@ -56,7 +56,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString("\n");
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Now.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Now extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final long now = System.currentTimeMillis() / 1000L;
 		return TValue.fromInt((int) now);

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Ord extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
 			final int codePoint = values.get(0).toString().codePointAt(0);

File: src/net/sourceforge/plantuml/tim/stdlib/RetrieveProcedure.java
Patch:
@@ -39,14 +39,14 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class RetrieveProcedure extends SimpleReturnFunction {
 
@@ -60,14 +60,14 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String fname = values.get(0).toString();
 		final List<TValue> args = values.subList(1, values.size());
 		final TFunctionSignature signature = new TFunctionSignature(fname, args.size());
 		final TFunction func = context.getFunctionSmart(signature);
 		final int n1 = context.getResultList().size();
-		func.executeProcedureInternal(context, memory, args, Collections.<String, TValue>emptyMap());
+		func.executeProcedureInternal(context, memory, location, args, Collections.<String, TValue>emptyMap());
 		final String extracted = context.extractFromResultList(n1);
 		return TValue.fromString(extracted);
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseColor.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class ReverseColor extends SimpleReturnFunction {
 
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseHsluvColor.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.color.NoSuchColorException;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class ReverseHsluvColor extends SimpleReturnFunction {
 
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/SetVariableValue.java
Patch:
@@ -38,14 +38,14 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.TVariableScope;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class SetVariableValue extends SimpleReturnFunction {
 
@@ -59,7 +59,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		// if (memory instanceof TMemoryLocal) {
 		// memory = ((TMemoryLocal) memory).getGlobalForInternalUseOnly();

File: src/net/sourceforge/plantuml/tim/stdlib/SimpleReturnFunction.java
Patch:
@@ -37,13 +37,13 @@
 import java.util.List;
 import java.util.Map;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunction;
 import net.sourceforge.plantuml.tim.TFunctionType;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public abstract class SimpleReturnFunction implements TFunction {
 
@@ -52,8 +52,8 @@ final public TFunctionType getFunctionType() {
 	}
 
 	@Override
-	final public void executeProcedureInternal(TContext context, TMemory memory, List<TValue> args,
-			Map<String, TValue> named) throws EaterException {
+	final public void executeProcedureInternal(TContext context, TMemory memory, StringLocated location,
+			List<TValue> args, Map<String, TValue> named) throws EaterException {
 		throw new UnsupportedOperationException();
 	}
 

File: src/net/sourceforge/plantuml/tim/stdlib/Size.java
Patch:
@@ -41,13 +41,13 @@
 import net.sourceforge.plantuml.json.JsonArray;
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Size extends SimpleReturnFunction {
 
@@ -61,7 +61,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue value = values.get(0);
 		if (value.isNumber())

File: src/net/sourceforge/plantuml/tim/stdlib/SplitStr.java
Patch:
@@ -40,13 +40,13 @@
 import java.util.StringTokenizer;
 
 import net.sourceforge.plantuml.json.JsonArray;
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class SplitStr extends SimpleReturnFunction {
 
@@ -60,7 +60,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final JsonArray result = new JsonArray();
 

File: src/net/sourceforge/plantuml/tim/stdlib/StringFunction.java
Patch:
@@ -38,11 +38,11 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class StringFunction extends SimpleReturnFunction {
 
@@ -56,7 +56,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString(values.get(0).toString());
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Strlen.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Strlen extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromInt(values.get(0).toString().length());
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/Strpos.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Strpos extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String full = values.get(0).toString();
 		final String searched = values.get(1).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Substr.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Substr extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String full = values.get(0).toString();
 		final int pos = values.get(1).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/Upper.java
Patch:
@@ -38,11 +38,11 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Upper extends SimpleReturnFunction {
 
@@ -56,7 +56,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString(values.get(0).toString().toUpperCase());
 	}

File: src/net/sourceforge/plantuml/tim/stdlib/VariableExists.java
Patch:
@@ -38,13 +38,13 @@
 import java.util.Map;
 import java.util.Set;
 
+import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.tim.EaterException;
 import net.sourceforge.plantuml.tim.EaterExceptionLocated;
 import net.sourceforge.plantuml.tim.TContext;
 import net.sourceforge.plantuml.tim.TFunctionSignature;
 import net.sourceforge.plantuml.tim.TMemory;
 import net.sourceforge.plantuml.tim.expression.TValue;
-import net.sourceforge.plantuml.utils.LineLocation;
 
 public class VariableExists extends SimpleReturnFunction {
 
@@ -58,7 +58,7 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	}
 
 	@Override
-	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
+	public TValue executeReturnFunction(TContext context, TMemory memory, StringLocated location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String name = values.get(0).toString();
 		return TValue.fromBoolean(memory.getVariable(name) != null);

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.4beta1";
+	private static final String version = "1.2024.4beta2";
 
 	public static String versionString() {
 		return version;

File: test/net/sourceforge/plantuml/tim/EaterTest.java
Patch:
@@ -32,8 +32,7 @@ class EaterTest {
         "'@startuml\n!$a=[1, 2, 3]\ntitle xx $a[2] yy\na -> a\n'                                         , xx 3 yy",
         "'@startuml\ntitle\n!foreach $i in [1, 2, 3]\nxx $i yy\n!endfor\nendtitle\na -> a\n'             , xx 2 yy",
         "'@startuml\ntitle\n!foreach $i in [\"a\", \"b\", \"c\"]\nxx $i yy\n!endfor\nendtitle\na -> a\n' , xx b yy",
-// TODO: fix code to allow test to access on stdlib, the corresponding (not working) test is here:
-//        "'@startuml\nstdlib\n@enduml', archimate",
+        "'@startuml\nstdlib\n@enduml', archimate",
 	})
 	void Test_EaterTest(String input, String expected) throws Exception {
 		assertRenderExpectedOutput(input, expected);

File: src/net/sourceforge/plantuml/preproc/Stdlib.java
Patch:
@@ -332,6 +332,9 @@ public static void extractStdLib() throws IOException {
 	private static Collection<String> getAll() throws IOException {
 		final Set<String> result = new TreeSet<>();
 		final InputStream home = getInternalInputStream("home", ".repx");
+		if (home == null)
+			throw new IOException("Cannot access to /stdlib/*.repx files");
+
 		final BufferedReader br = new BufferedReader(new InputStreamReader(home));
 		String name;
 		while ((name = br.readLine()) != null)

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysFalse.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%false", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
-
+	
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromBoolean(false);

File: src/net/sourceforge/plantuml/tim/stdlib/AlwaysTrue.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%true", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromBoolean(true);

File: src/net/sourceforge/plantuml/tim/stdlib/CallUserFunction.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%call_user_func", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg > 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String fname = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Chr.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%chr", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/Darken.java
Patch:
@@ -56,10 +56,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%darken", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/DateFunction.java
Patch:
@@ -54,10 +54,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%date", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0 || nbArg == 1 || nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		if (values.size() == 0)

File: src/net/sourceforge/plantuml/tim/stdlib/Dec2hex.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%dec2hex", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/Dirpath.java
Patch:
@@ -59,10 +59,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%dirpath", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		if (value == null) {

File: src/net/sourceforge/plantuml/tim/stdlib/Eval.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%eval", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String exp = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Feature.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%feature", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String arg = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/FileExists.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%file_exists", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		// ::comment when __CORE__

File: src/net/sourceforge/plantuml/tim/stdlib/Filename.java
Patch:
@@ -59,10 +59,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%filename", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		if (value == null) {

File: src/net/sourceforge/plantuml/tim/stdlib/FunctionExists.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%function_exists", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String name = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/GetAllTheme.java
Patch:
@@ -56,10 +56,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%get_all_theme", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final JsonArray result = new JsonArray();

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonKey.java
Patch:
@@ -55,10 +55,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%get_json_keys", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue data = values.get(0);

File: src/net/sourceforge/plantuml/tim/stdlib/GetJsonType.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%get_json_type", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue data = values.get(0);

File: src/net/sourceforge/plantuml/tim/stdlib/GetVariableValue.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%get_variable_value", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String name = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/GetVersion.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%version", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromString(Version.versionString());

File: src/net/sourceforge/plantuml/tim/stdlib/Getenv.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%getenv", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		// ::comment when __CORE__

File: src/net/sourceforge/plantuml/tim/stdlib/Hex2dec.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%hex2dec", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/HslColor.java
Patch:
@@ -55,10 +55,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%hsl_color", 3);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 3 || nbArg == 4;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final int h = values.get(0).toInt();

File: src/net/sourceforge/plantuml/tim/stdlib/IntVal.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%intval", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String s = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/InvokeProcedure.java
Patch:
@@ -54,6 +54,7 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%invoke_procedure", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg > 0;
 	}
@@ -75,6 +76,7 @@ public void executeProcedureInternal(TContext context, TMemory memory, List<TVal
 		func.executeProcedureInternal(context, memory, sublist, named);
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) {
 		throw new UnsupportedOperationException();

File: src/net/sourceforge/plantuml/tim/stdlib/IsDark.java
Patch:
@@ -56,10 +56,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%is_dark", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/IsLight.java
Patch:
@@ -56,10 +56,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%is_light", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/JsonKeyExists.java
Patch:
@@ -54,10 +54,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%json_key_exists", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue arg0 = values.get(0);

File: src/net/sourceforge/plantuml/tim/stdlib/Lighten.java
Patch:
@@ -56,10 +56,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%lighten", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/LoadJson.java
Patch:
@@ -102,10 +102,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%load_json", 3);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1 || nbArg == 2 || nbArg == 3;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String path = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalAnd.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%and", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg >= 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNand.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%nand", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg >= 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNor.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%nor", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg >= 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNot.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%not", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final boolean arg = values.get(0).toBoolean();

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalNxor.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%nxor", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg >= 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		int cpt = 0;

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalOr.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%or", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg >= 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		for (TValue v : values)

File: src/net/sourceforge/plantuml/tim/stdlib/LogicalXor.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%xor", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg >= 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		int cpt = 0;

File: src/net/sourceforge/plantuml/tim/stdlib/Lower.java
Patch:
@@ -50,10 +50,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%lower", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString(values.get(0).toString().toLowerCase());

File: src/net/sourceforge/plantuml/tim/stdlib/Newline.java
Patch:
@@ -50,10 +50,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%newline", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString("\n");

File: src/net/sourceforge/plantuml/tim/stdlib/Now.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%now", 0);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final long now = System.currentTimeMillis() / 1000L;

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%ord", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {

File: src/net/sourceforge/plantuml/tim/stdlib/RandomFunction.java
Patch:
@@ -53,12 +53,14 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%random", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 0 || nbArg == 1 || nbArg == 2;
 	}
 
 	private final Random random = new Random();
 	
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		switch (values.size()) {

File: src/net/sourceforge/plantuml/tim/stdlib/RetrieveProcedure.java
Patch:
@@ -54,10 +54,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%retrieve_procedure", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg > 0;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String fname = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseColor.java
Patch:
@@ -55,10 +55,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%reverse_color", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/ReverseHsluvColor.java
Patch:
@@ -55,10 +55,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%reverse_hsluv_color", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String colorString = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/SetVariableValue.java
Patch:
@@ -53,10 +53,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%set_variable_value", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		// if (memory instanceof TMemoryLocal) {

File: src/net/sourceforge/plantuml/tim/stdlib/Size.java
Patch:
@@ -55,10 +55,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%size", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final TValue value = values.get(0);

File: src/net/sourceforge/plantuml/tim/stdlib/SplitStr.java
Patch:
@@ -54,10 +54,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%splitstr", 3);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final JsonArray result = new JsonArray();

File: src/net/sourceforge/plantuml/tim/stdlib/StringFunction.java
Patch:
@@ -50,10 +50,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%string", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString(values.get(0).toString());

File: src/net/sourceforge/plantuml/tim/stdlib/Strlen.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%strlen", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		return TValue.fromInt(values.get(0).toString().length());

File: src/net/sourceforge/plantuml/tim/stdlib/Strpos.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%strpos", 2);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String full = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Substr.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%substr", 3);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 2 || nbArg == 3;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String full = values.get(0).toString();

File: src/net/sourceforge/plantuml/tim/stdlib/Upper.java
Patch:
@@ -50,10 +50,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%upper", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) {
 		return TValue.fromString(values.get(0).toString().toUpperCase());

File: src/net/sourceforge/plantuml/tim/stdlib/VariableExists.java
Patch:
@@ -52,10 +52,12 @@ public TFunctionSignature getSignature() {
 		return new TFunctionSignature("%variable_exists", 1);
 	}
 
+	@Override
 	public boolean canCover(int nbArg, Set<String> namedArgument) {
 		return nbArg == 1;
 	}
 
+	@Override
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		final String name = values.get(0).toString();

File: test/net/sourceforge/plantuml/help/CommandHelpThemeTest.java
Patch:
@@ -17,7 +17,7 @@ public void command_help_theme() throws Exception {
 		).asString();
 
 		assertThat(output)
-				.startsWith("                                \nHelp on themes")
+				.contains("Help on themes")
 				.contains("bluegray", "hacker");
 	}
 }
\ No newline at end of file

File: test/test/example/TestExample.java
Patch:
@@ -17,7 +17,7 @@ public void test_help_themes() throws Exception {
 		).asString();
 
 		assertThat(output)
-				.startsWith("                                \nHelp on themes")
+				.contains("Help on themes")
 				.contains("bluegray", "hacker");
 	}
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/dot/GraphvizUtils.java
Patch:
@@ -197,7 +197,7 @@ public static int retrieveVersion(String s) {
 		if (s == null)
 			return -1;
 
-		final Pattern p = Pattern.compile("\\s(\\d)\\.(\\d\\d?)\\D");
+		final Pattern p = Pattern.compile("\\s(\\d+)\\.(\\d\\d?)\\D");
 		final Matcher m = p.matcher(s);
 		if (m.find() == false)
 			return -1;

File: src/net/sourceforge/plantuml/dot/GraphvizVersionFinder.java
Patch:
@@ -73,7 +73,7 @@ public GraphvizVersionFinder(File dotExe) {
 
 	public GraphvizVersion getVersion() {
 		final String dotVersion = dotVersion();
-		final Pattern p = Pattern.compile("(\\d)\\.(\\d\\d?)");
+		final Pattern p = Pattern.compile("(\\d+)\\.(\\d\\d?)");
 		final Matcher m = p.matcher(dotVersion);
 		final boolean find = m.find();
 		if (find == false)

File: src/net/sourceforge/plantuml/dot/GraphvizUtils.java
Patch:
@@ -197,7 +197,7 @@ public static int retrieveVersion(String s) {
 		if (s == null)
 			return -1;
 
-		final Pattern p = Pattern.compile("\\s(\\d)\\.(\\d\\d?)\\D");
+		final Pattern p = Pattern.compile("\\s(\\d+)\\.(\\d\\d?)\\D");
 		final Matcher m = p.matcher(s);
 		if (m.find() == false)
 			return -1;

File: src/net/sourceforge/plantuml/dot/GraphvizVersionFinder.java
Patch:
@@ -73,7 +73,7 @@ public GraphvizVersionFinder(File dotExe) {
 
 	public GraphvizVersion getVersion() {
 		final String dotVersion = dotVersion();
-		final Pattern p = Pattern.compile("(\\d)\\.(\\d\\d?)");
+		final Pattern p = Pattern.compile("(\\d+)\\.(\\d\\d?)");
 		final Matcher m = p.matcher(dotVersion);
 		final boolean find = m.find();
 		if (find == false)

File: src/net/sourceforge/plantuml/tim/TContext.java
Patch:
@@ -122,7 +122,7 @@
 import net.sourceforge.plantuml.tim.stdlib.Newline;
 import net.sourceforge.plantuml.tim.stdlib.Now;
 import net.sourceforge.plantuml.tim.stdlib.Ord;
-import net.sourceforge.plantuml.tim.stdlib.Random;
+import net.sourceforge.plantuml.tim.stdlib.RandomFunction;
 import net.sourceforge.plantuml.tim.stdlib.RetrieveProcedure;
 import net.sourceforge.plantuml.tim.stdlib.ReverseColor;
 import net.sourceforge.plantuml.tim.stdlib.ReverseHsluvColor;

File: src/net/sourceforge/plantuml/tim/TContext.java
Patch:
@@ -122,6 +122,7 @@
 import net.sourceforge.plantuml.tim.stdlib.Newline;
 import net.sourceforge.plantuml.tim.stdlib.Now;
 import net.sourceforge.plantuml.tim.stdlib.Ord;
+import net.sourceforge.plantuml.tim.stdlib.Random;
 import net.sourceforge.plantuml.tim.stdlib.RetrieveProcedure;
 import net.sourceforge.plantuml.tim.stdlib.ReverseColor;
 import net.sourceforge.plantuml.tim.stdlib.ReverseHsluvColor;
@@ -208,6 +209,7 @@ private void addStandardFunctions(Defines defines) {
 		functionsSet.addFunction(new LogicalNor());
 		functionsSet.addFunction(new LogicalNxor());
 		functionsSet.addFunction(new Ord());
+		functionsSet.addFunction(new Random());
 		// %standard_exists_function
 		// %str_replace
 		// !exit

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.0";
+	private static final String version = "1.2024.1beta1";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderDaily.java
Patch:
@@ -96,7 +96,7 @@ public double getFullHeaderHeight(StringBounder stringBounder) {
 	private final Map<Day, String> nameDays;
 
 	public TimeHeaderDaily(StringBounder stringBounder, TimeHeaderParameters thParam, Map<Day, String> nameDays,
-			Day printStart, Day printEnd) {
+			Day printStart) {
 		super(thParam, new TimeScaleDaily(thParam.getCellWidth(stringBounder), thParam.getStartingDay(),
 				thParam.getScale(), printStart));
 		this.nameDays = nameDays;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderMonthly.java
Patch:
@@ -67,9 +67,9 @@ public double getFullHeaderHeight(StringBounder stringBounder) {
 		return getTimeHeaderHeight(stringBounder);
 	}
 
-	public TimeHeaderMonthly(StringBounder stringBounder, TimeHeaderParameters thParam) {
+	public TimeHeaderMonthly(StringBounder stringBounder, TimeHeaderParameters thParam, Day printStart) {
 		super(thParam, new TimeScaleCompressed(thParam.getCellWidth(stringBounder), thParam.getStartingDay(),
-				thParam.getScale()));
+				thParam.getScale(), printStart));
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderQuarterly.java
Patch:
@@ -67,9 +67,9 @@ public double getFullHeaderHeight(StringBounder stringBounder) {
 		return getTimeHeaderHeight(stringBounder);
 	}
 
-	public TimeHeaderQuarterly(StringBounder stringBounder, TimeHeaderParameters thParam) {
+	public TimeHeaderQuarterly(StringBounder stringBounder, TimeHeaderParameters thParam, Day printStart) {
 		super(thParam, new TimeScaleCompressed(thParam.getCellWidth(stringBounder), thParam.getStartingDay(),
-				thParam.getScale()));
+				thParam.getScale(), printStart));
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderWeekly.java
Patch:
@@ -76,9 +76,9 @@ private double getH1(StringBounder stringBounder) {
 	}
 
 	public TimeHeaderWeekly(StringBounder stringBounder, TimeHeaderParameters thParam,
-			WeekNumberStrategy weekNumberStrategy, boolean withCalendarDate) {
+			WeekNumberStrategy weekNumberStrategy, boolean withCalendarDate, Day printStart) {
 		super(thParam, new TimeScaleCompressed(thParam.getCellWidth(stringBounder), thParam.getStartingDay(),
-				thParam.getScale()));
+				thParam.getScale(), printStart));
 		this.weekNumberStrategy = weekNumberStrategy;
 		this.withCalendarDate = withCalendarDate;
 	}

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderYearly.java
Patch:
@@ -64,9 +64,9 @@ public double getFullHeaderHeight(StringBounder stringBounder) {
 		return getTimeHeaderHeight(stringBounder);
 	}
 
-	public TimeHeaderYearly(StringBounder stringBounder, TimeHeaderParameters thParam) {
+	public TimeHeaderYearly(StringBounder stringBounder, TimeHeaderParameters thParam, Day printStart) {
 		super(thParam, new TimeScaleCompressed(thParam.getCellWidth(stringBounder), thParam.getStartingDay(),
-				thParam.getScale()));
+				thParam.getScale(), printStart));
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/timescale/TimeScaleCompressed.java
Patch:
@@ -42,8 +42,8 @@ public class TimeScaleCompressed implements TimeScale {
 
 	private final TimeScale daily;
 
-	public TimeScaleCompressed(double size, Day calendar, double scale) {
-		this.daily = new TimeScaleDaily(size, calendar, scale, null);
+	public TimeScaleCompressed(double size, Day calendar, double scale, Day zeroDay) {
+		this.daily = new TimeScaleDaily(size, calendar, scale, zeroDay);
 	}
 
 	public double getStartingPosition(Day instant) {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.0beta2";
+	private static final String version = "1.2024.0beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/klimt/drawing/svg/SvgGraphics.java
Patch:
@@ -1024,7 +1024,7 @@ public static String getMetadataHex(String comment) {
 
 	public void addCommentMetadata(String metadata) {
 		// ::comment when __CORE__
-		final String signature = getMetadataHex(metadata);
+		final String signature = getMetadataHex(metadata).replace("--", "- -");
 		final String comment = "SRC=[" + signature + "]";
 		final Comment commentElement = document.createComment(comment);
 		getG().appendChild(commentElement);

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2024.0beta1";
+	private static final String version = "1.2024.0beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/decoration/symbol/USymbols.java
Patch:
@@ -70,8 +70,8 @@ private static USymbol record(String code, USymbol symbol) {
 	public final static USymbol FOLDER = record("FOLDER", new USymbolFolder(SName.folder, false));
 	public final static USymbol FILE = record("FILE", new USymbolFile());
 	public final static USymbol RECTANGLE = record("RECTANGLE", new USymbolRectangle(SName.rectangle));
-	public final static USymbol ACTION = record("ACTION", new USymbolAction(SName.rectangle));
-	public final static USymbol PROCESS = record("PROCESS", new USymbolProcess(SName.rectangle));
+	public final static USymbol ACTION = record("ACTION", new USymbolAction(SName.action));
+	public final static USymbol PROCESS = record("PROCESS", new USymbolProcess(SName.process));
 	public final static USymbol HEXAGON = record("HEXAGON", new USymbolHexagon());
 	public final static USymbol PERSON = record("PERSON", new USymbolPerson());
 	public final static USymbol LABEL = record("LABEL", new USymbolLabel());

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.style;
 
 public enum SName {
+	action, //
 	activity, //
 	activityBar, //
 	activityDiagram, //
@@ -113,6 +114,7 @@ public enum SName {
 	partition, //
 	person, //
 	port, //
+	process, //
 	queue, //
 	rectangle, //
 	reference, //

File: src/net/sourceforge/plantuml/descdiagram/command/CommandPackageWithUSymbol.java
Patch:
@@ -72,7 +72,7 @@ public CommandPackageWithUSymbol() {
 	private static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandPackageWithUSymbol.class.getName(), RegexLeaf.start(), //
 				new RegexLeaf("SYMBOL",
-						"(package|rectangle|hexagon|node|artifact|folder|file|frame|cloud|database|storage|component|card|queue|stack)"), //
+						"(package|rectangle|hexagon|node|artifact|folder|file|frame|cloud|action|process|database|storage|component|card|queue|stack)"), //
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOr(//
 						new RegexConcat( //

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementFull.java
Patch:
@@ -69,7 +69,7 @@
 
 public class CommandCreateElementFull extends SingleLineCommand2<DescriptionDiagram> {
 
-	public static final String ALL_TYPES = "person|artifact|actor/|actor|folder|card|file|package|rectangle|hexagon|label|node|frame|cloud|database|queue|stack|storage|agent|usecase/|usecase|component|boundary|control|entity|interface|circle|collections|port|portin|portout";
+	public static final String ALL_TYPES = "person|artifact|actor/|actor|folder|card|file|package|rectangle|hexagon|label|node|frame|cloud|action|process|database|queue|stack|storage|agent|usecase/|usecase|component|boundary|control|entity|interface|circle|collections|port|portin|portout";
 
 	public CommandCreateElementFull() {
 		super(getRegexConcat());

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/FtileFactory.java
Patch:
@@ -84,10 +84,11 @@ public Ftile addNote(Ftile ftile, Swimlane swimlane, Collection<PositionedNote>
 
 	public Ftile repeat(BoxStyle boxStyleIn, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
 			Display test, Display yes, Display out, Colors colors, Ftile backward, boolean noOut,
-			LinkRendering incoming1, LinkRendering incoming2);
+			LinkRendering incoming1, LinkRendering incoming2, StyleBuilder currentStyleBuilder);
 
 	public Ftile createWhile(LinkRendering outColor, Swimlane swimlane, Ftile whileBlock, Display test, Display yes,
-			HColor color, Instruction specialOut, Ftile backward, LinkRendering incoming1, LinkRendering incoming2);
+			HColor color, Instruction specialOut, Ftile backward, LinkRendering incoming1, LinkRendering incoming2,
+			StyleBuilder currentStyleBuilder);
 
 	public Ftile createIf(Swimlane swimlane, List<Branch> thens, Branch elseBranch, LinkRendering outColor,
 			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes, Stereotype stereotype,

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/VCompactFactory.java
Patch:
@@ -156,14 +156,14 @@ public Ftile assembly(Ftile tile1, Ftile tile2) {
 	@Override
 	public Ftile repeat(BoxStyle boxStyleIn, Swimlane swimlane, Swimlane swimlaneOut, Display startLabel, Ftile repeat,
 			Display test, Display yes, Display out, Colors colors, Ftile backward, boolean noOut,
-			LinkRendering incoming1, LinkRendering incoming2) {
+			LinkRendering incoming1, LinkRendering incoming2, StyleBuilder currentStyleBuilder) {
 		return repeat;
 	}
 
 	@Override
 	public Ftile createWhile(LinkRendering afterEndwhile, Swimlane swimlane, Ftile whileBlock, Display test,
 			Display yes, HColor color, Instruction specialOut, Ftile back, LinkRendering incoming1,
-			LinkRendering incoming2) {
+			LinkRendering incoming2, StyleBuilder styleBuilder) {
 		return whileBlock;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.14beta1";
+	private static final String version = "1.2023.14beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/FtileFactory.java
Patch:
@@ -52,6 +52,7 @@
 import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;
 import net.sourceforge.plantuml.style.Style;
+import net.sourceforge.plantuml.style.StyleBuilder;
 import net.sourceforge.plantuml.url.Url;
 
 public interface FtileFactory {
@@ -89,7 +90,8 @@ public Ftile createWhile(LinkRendering outColor, Swimlane swimlane, Ftile whileB
 			HColor color, Instruction specialOut, Ftile backward, LinkRendering incoming1, LinkRendering incoming2);
 
 	public Ftile createIf(Swimlane swimlane, List<Branch> thens, Branch elseBranch, LinkRendering outColor,
-			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes, Stereotype stereotype);
+			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes, Stereotype stereotype,
+			StyleBuilder currentStyleBuilder);
 
 	public Ftile createSwitch(Swimlane swimlane, List<Branch> branches, LinkRendering afterEndwhile,
 			LinkRendering topInlinkRendering, Display labelTest);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/VCompactFactory.java
Patch:
@@ -169,7 +169,8 @@ public Ftile createWhile(LinkRendering afterEndwhile, Swimlane swimlane, Ftile w
 
 	@Override
 	public Ftile createIf(Swimlane swimlane, List<Branch> thens, Branch elseBranch, LinkRendering afterEndwhile,
-			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes, Stereotype stereotype) {
+			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes, Stereotype stereotype,
+			StyleBuilder currentStyleBuilder) {
 		final List<Ftile> ftiles = new ArrayList<>();
 		for (Branch branch : thens)
 			ftiles.add(branch.getFtile());

File: src/net/sourceforge/plantuml/regexdiagram/ReTokenType.java
Patch:
@@ -43,12 +43,15 @@ public enum ReTokenType {
 	QUANTIFIER, //
 	ANCHOR, //
 	GROUP, //
+	NAMED_GROUP, //
 	ALTERNATIVE, //
 	PARENTHESIS_OPEN, //
 	PARENTHESIS_CLOSE, //
 	CONCATENATION_IMPLICIT;
 
 	static public boolean needImplicitConcatenation(ReTokenType token1, ReTokenType token2) {
+		if (token1 == NAMED_GROUP)
+			return false;
 		if (token1 == ALTERNATIVE)
 			return false;
 		if (token2 == ALTERNATIVE)

File: src/net/sourceforge/plantuml/tim/stdlib/Chr.java
Patch:
@@ -59,8 +59,8 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
-			final char value = (char) values.get(0).toInt();
-			return TValue.fromString("" + value);
+			final String value = String.valueOf(Character.toChars(values.get(0).toInt()));
+			return TValue.fromString(value);
 		} catch (Throwable t) {
 			return TValue.fromString("\0");
 		}

File: test/net/sourceforge/plantuml/tim/stdlib/GetJsonKeyTest.java
Patch:
@@ -61,11 +61,11 @@ void Test_with_Integer(Integer input, String expected) throws EaterException, Ea
 			" '{\"a\":\"abc\"}' , [\"a\"]",
 			" '[{\"a\":[1, 2]}, {\"b\":[3, 4]}]'  , '[\"a\",\"b\"]'",
 			" '{\"a\":[1, 2], \"b\":\"abc\", \"b\":true}' , '[\"a\",\"b\",\"b\"]'",
-			// TODO: Manage Array with different type inside
+			// DONE: Manage Array with different type inside
 			// Ref.:
 			// - https://datatracker.ietf.org/doc/html/rfc8259#section-5
 			// - https://json-schema.org/understanding-json-schema/reference/array.html
-			//" '[3, \"different\", { \"types\" : \"of values\" }]', [\"types\"]",
+			" '[3, \"different\", { \"types\" : \"of values\" }]', [\"types\"]",
 	})
 	void Test_with_Json(@ConvertWith(StringJsonConverter.class) JsonValue input, String expected) throws EaterException, EaterExceptionLocated {
 		assertTimExpectedOutputFromInput(cut, input, expected);

File: src/net/sourceforge/plantuml/tim/stdlib/Chr.java
Patch:
@@ -59,8 +59,8 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
-			final char value = (char) values.get(0).toInt();
-			return TValue.fromString("" + value);
+			final String value = String.valueOf(Character.toChars(values.get(0).toInt()));
+			return TValue.fromString(value);
 		} catch (Throwable t) {
 			return TValue.fromString("\0");
 		}

File: test/net/sourceforge/plantuml/tim/stdlib/ChrTest.java
Patch:
@@ -32,9 +32,9 @@ class ChrTest {
 			" 34   , '\"' ",
 			" 224  , Ã  ",
 			" 233  , Ã© ",
-// TODO: fix `%chr` to allow Unicode chars, the corresponding tests are here:
-//			" 128512 , ðŸ˜€ ",
-//			" 128512 , \uD83D\uDE00 ",
+// DONE: fix `%chr` to allow Unicode chars, the corresponding tests are here:
+			" 128512 , ðŸ˜€ ",
+			" 128512 , \uD83D\uDE00 ",
 	})
 	void executeReturnFunctionChrTest(Integer input, String expected) throws EaterException, EaterExceptionLocated {
 		Chr cut = new Chr();

File: test/net/sourceforge/plantuml/tim/stdlib/GetJsonKeyTest.java
Patch:
@@ -61,11 +61,11 @@ void Test_with_Integer(Integer input, String expected) throws EaterException, Ea
 			" '{\"a\":\"abc\"}' , [\"a\"]",
 			" '[{\"a\":[1, 2]}, {\"b\":[3, 4]}]'  , '[\"a\",\"b\"]'",
 			" '{\"a\":[1, 2], \"b\":\"abc\", \"b\":true}' , '[\"a\",\"b\",\"b\"]'",
-			// TODO: Manage Array with different type inside
+			// DONE: Manage Array with different type inside
 			// Ref.:
 			// - https://datatracker.ietf.org/doc/html/rfc8259#section-5
 			// - https://json-schema.org/understanding-json-schema/reference/array.html
-			//" '[3, \"different\", { \"types\" : \"of values\" }]', [\"types\"]",
+			" '[3, \"different\", { \"types\" : \"of values\" }]', [\"types\"]",
 	})
 	void Test_with_Json(@ConvertWith(StringJsonConverter.class) JsonValue input, String expected) throws EaterException, EaterExceptionLocated {
 		assertTimExpectedOutputFromInput(cut, input, expected);

File: src/net/sourceforge/plantuml/tim/Eater.java
Patch:
@@ -79,7 +79,7 @@ final protected String eatAllToEnd() throws EaterException {
 	}
 
 	final public TValue eatExpression(TContext context, TMemory memory) throws EaterException, EaterExceptionLocated {
-		char ch = peekChar();
+		final char ch = peekChar();
 		if (ch == '{' || ch == '[') {
 			final String data = eatAllToEnd();
 			// System.err.println("data=" + data);

File: src/net/sourceforge/plantuml/tim/Eater.java
Patch:
@@ -82,9 +82,9 @@ final public TValue eatExpression(TContext context, TMemory memory) throws Eater
 		char ch = peekChar();
 		if (ch == '{' || ch == '[') {
 			final String data = eatAllToEnd();
-			 // System.err.println("data=" + data);
+			// System.err.println("data=" + data);
 			final JsonValue json = Json.parse(data);
-			 // System.err.println("json=" + json);
+			// System.err.println("json=" + json);
 			return TValue.fromJson(json);
 		}
 		final TokenStack tokenStack = eatTokenStack();

File: src/net/sourceforge/plantuml/filesdiagram/FEntry.java
Patch:
@@ -135,7 +135,7 @@ private TextBlock getTextBlock(FontConfiguration fontConfiguration, ISkinParam s
 			return createOpale();
 
 		final Display display = Display.getWithNewlines(getEmoticon() + getName());
-		TextBlock result = display.create(fontConfiguration, HorizontalAlignment.LEFT, skinParam);
+		TextBlock result = display.create7(fontConfiguration, HorizontalAlignment.LEFT, skinParam, CreoleMode.NO_CREOLE);
 		return result;
 	}
 

File: src/net/sourceforge/plantuml/AnnotatedBuilder.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ftile.EntityImageLegend;
 import net.sourceforge.plantuml.cucadiagram.DisplaySection;
 import net.sourceforge.plantuml.klimt.Fashion;
+import net.sourceforge.plantuml.klimt.LineBreakStrategy;
 import net.sourceforge.plantuml.klimt.UTranslate;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.creole.Display;
@@ -167,7 +168,7 @@ public TextBlock getTitle() {
 		final Style style = StyleSignatureBasic.of(SName.root, SName.document, SName.title)
 				.getMergedStyle(skinParam.getCurrentStyleBuilder());
 		final TextBlock block = style.createTextBlockBordered(title.getDisplay(), skinParam.getIHtmlColorSet(),
-				skinParam, Style.ID_TITLE);
+				skinParam, Style.ID_TITLE, LineBreakStrategy.NONE);
 		return block;
 	}
 
@@ -179,7 +180,7 @@ public TextBlock getCaption() {
 		final Style style = StyleSignatureBasic.of(SName.root, SName.document, SName.caption)
 				.getMergedStyle(skinParam.getCurrentStyleBuilder());
 		return style.createTextBlockBordered(caption.getDisplay(), skinParam.getIHtmlColorSet(), skinParam,
-				Style.ID_CAPTION);
+				Style.ID_CAPTION, LineBreakStrategy.NONE);
 
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/EntityImageLegend.java
Patch:
@@ -49,7 +49,9 @@ public static TextBlock create(Display note, ISkinParam skinParam) {
 		final Style style = StyleSignatureBasic
 				.of(SName.root, SName.root, SName.document, skinParam.getUmlDiagramType().getStyleName(), SName.legend)
 				.getMergedStyle(skinParam.getCurrentStyleBuilder());
-		return style.createTextBlockBordered(note, skinParam.getIHtmlColorSet(), skinParam, Style.ID_LEGEND);
+
+		return style.createTextBlockBordered(note, skinParam.getIHtmlColorSet(), skinParam, Style.ID_LEGEND,
+				style.wrapWidth());
 	}
 
 }

File: src/net/sourceforge/plantuml/cucadiagram/DisplaySection.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.EnumMap;
 import java.util.Map;
 
+import net.sourceforge.plantuml.klimt.LineBreakStrategy;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.klimt.font.FontConfiguration;
 import net.sourceforge.plantuml.klimt.geom.HorizontalAlignment;
@@ -96,7 +97,8 @@ public TextBlock createRibbon(FontConfiguration fontConfiguration, ISkinSimple s
 			return null;
 
 		if (style != null)
-			return style.createTextBlockBordered(display, spriteContainer.getIHtmlColorSet(), spriteContainer, null);
+			return style.createTextBlockBordered(display, spriteContainer.getIHtmlColorSet(), spriteContainer, null,
+					LineBreakStrategy.NONE);
 
 		return display.create(fontConfiguration, getHorizontalAlignment(), spriteContainer);
 	}

File: src/net/sourceforge/plantuml/png/PngTitler.java
Patch:
@@ -36,6 +36,7 @@
 package net.sourceforge.plantuml.png;
 
 import net.sourceforge.plantuml.cucadiagram.DisplaySection;
+import net.sourceforge.plantuml.klimt.LineBreakStrategy;
 import net.sourceforge.plantuml.klimt.color.HColorSet;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.klimt.font.StringBounder;
@@ -73,6 +74,6 @@ public TextBlock getRibbonBlock() {
 		if (display == null)
 			return null;
 
-		return style.createTextBlockBordered(display, set, spriteContainer, Style.ID_TITLE);
+		return style.createTextBlockBordered(display, set, spriteContainer, Style.ID_TITLE, LineBreakStrategy.NONE);
 	}
 }

File: src/net/sourceforge/plantuml/sequencediagram/teoz/SequenceDiagramFileMakerTeoz.java
Patch:
@@ -43,6 +43,7 @@
 import net.sourceforge.plantuml.activitydiagram3.ftile.EntityImageLegend;
 import net.sourceforge.plantuml.core.ImageData;
 import net.sourceforge.plantuml.cucadiagram.DisplaySection;
+import net.sourceforge.plantuml.klimt.LineBreakStrategy;
 import net.sourceforge.plantuml.klimt.UTranslate;
 import net.sourceforge.plantuml.klimt.creole.Display;
 import net.sourceforge.plantuml.klimt.drawing.UGraphic;
@@ -213,7 +214,8 @@ private TextBlock getTitle() {
 		final Style style = StyleSignatureBasic.of(SName.root, SName.document, SName.title)
 				.getMergedStyle(diagram.getSkinParam().getCurrentStyleBuilder());
 		final TextBlock compTitle = style.createTextBlockBordered(diagram.getTitle().getDisplay(),
-				diagram.getSkinParam().getIHtmlColorSet(), diagram.getSkinParam(), Style.ID_TITLE);
+				diagram.getSkinParam().getIHtmlColorSet(), diagram.getSkinParam(), Style.ID_TITLE,
+				LineBreakStrategy.NONE);
 		return compTitle;
 
 	}

File: src/net/sourceforge/plantuml/sequencediagram/graphic/Step1MessageExo.java
Patch:
@@ -46,7 +46,6 @@
 import net.sourceforge.plantuml.skin.ArrowComponent;
 import net.sourceforge.plantuml.skin.ArrowConfiguration;
 import net.sourceforge.plantuml.skin.Component;
-import net.sourceforge.plantuml.skin.ComponentType;
 import net.sourceforge.plantuml.style.ISkinParam;
 
 class Step1MessageExo extends Step1Abstract {
@@ -69,7 +68,8 @@ class Step1MessageExo extends Step1Abstract {
 		for (Note noteOnMessage : noteOnMessages) {
 			final ISkinParam skinParam = noteOnMessage.getSkinParamBackcolored(drawingSet.getSkinParam());
 			final Component note = drawingSet.getSkin().createComponentNote(noteOnMessage.getUsedStyles(),
-					ComponentType.NOTE, skinParam, noteOnMessage.getDisplay(), noteOnMessage.getColors());
+					noteOnMessage.getNoteStyle().getNoteComponentType(), skinParam, noteOnMessage.getDisplay(),
+					noteOnMessage.getColors());
 			addNote(note);
 		}
 

File: src/net/sourceforge/plantuml/project/lang/SentenceRequire.java
Patch:
@@ -40,10 +40,10 @@
 import net.sourceforge.plantuml.project.Load;
 import net.sourceforge.plantuml.project.core.Task;
 
-public class SentenceLasts extends SentenceSimple {
+public class SentenceRequire extends SentenceSimple {
 
-	public SentenceLasts() {
-		super(SubjectTask.ME, Verbs.lasts, new ComplementSeveralDays());
+	public SentenceRequire() {
+		super(SubjectTask.ME, Verbs.requires, new ComplementSeveralDays());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/lang/Verbs.java
Patch:
@@ -108,7 +108,7 @@ public class Verbs {
 
 	public static IRegex isOrAreNamed = new RegexLeaf("(is|are)[%s]+named");
 
-	public static IRegex lasts = new RegexLeaf("(lasts|requires)");
+	public static IRegex requires = new RegexLeaf("(lasts|requires?)");
 
 	public static IRegex linksTo = new RegexLeaf("links to");
 

File: src/net/sourceforge/plantuml/project/GanttDiagramFactory.java
Patch:
@@ -59,6 +59,7 @@
 import net.sourceforge.plantuml.project.command.CommandPrintBetween;
 import net.sourceforge.plantuml.project.command.CommandPrintScale;
 import net.sourceforge.plantuml.project.command.CommandSeparator;
+import net.sourceforge.plantuml.project.command.CommandTaskCompleteDefault;
 import net.sourceforge.plantuml.project.command.CommandWeekNumberStrategy;
 import net.sourceforge.plantuml.project.command.NaturalCommand;
 import net.sourceforge.plantuml.project.lang.SentenceAnd;
@@ -115,6 +116,7 @@ protected void initCommandsList(List<Command> cmds) {
 		cmds.add(new CommandLabelOnColumn());
 		cmds.add(new CommandHideResourceName());
 		cmds.add(new CommandHideResourceFootbox());
+		cmds.add(new CommandTaskCompleteDefault());
 	}
 
 	private void addLanguageCommands(List<Command> cmd) {

File: src/net/sourceforge/plantuml/project/LoadPlanable.java
Patch:
@@ -40,4 +40,6 @@
 public interface LoadPlanable {
 
 	public int getLoadAt(Day instant);
+
+	public Day getLastDayIfAny();
 }

File: src/net/sourceforge/plantuml/project/command/CommandPrintBetween.java
Patch:
@@ -48,7 +48,7 @@
 
 public class CommandPrintBetween extends SingleLineCommand2<GanttDiagram> {
 
-	private static final ComplementDate pattern = new ComplementDate();
+	private static final ComplementDate pattern = ComplementDate.any();
 
 	public CommandPrintBetween() {
 		super(getRegexConcat());

File: src/net/sourceforge/plantuml/project/core/Task.java
Patch:
@@ -79,4 +79,6 @@ public interface Task extends Moment {
 
 	public StyleBuilder getStyleBuilder();
 
+	public boolean isAssignedTo(Resource res);
+
 }

File: src/net/sourceforge/plantuml/project/draw/TaskDrawRegular.java
Patch:
@@ -101,7 +101,7 @@ public TaskDrawRegular(TimeScale timeScale, Real y, String prettyDisplay, Day st
 	}
 
 	@Override
-	protected double getShapeHeight(StringBounder stringBounder) {
+	public double getShapeHeight(StringBounder stringBounder) {
 		final Style style = getStyle();
 		final ClockwiseTopRightBottomLeft padding = style.getPadding();
 		return padding.getTop() + getTitle().calculateDimension(stringBounder).getHeight() + padding.getBottom();
@@ -170,7 +170,6 @@ public void drawU(UGraphic ug) {
 		final double startPos = timeScale.getStartingPosition(start);
 		drawNote(ug.apply((new UTranslate(startPos, getYNotePosition(ug.getStringBounder())))));
 
-		ug = applyColors(ug);
 		drawShape(ug);
 	}
 
@@ -256,7 +255,8 @@ public double getX2(TaskAttribute taskAttribute) {
 		return endPos;
 	}
 
-	private void drawShape(UGraphic ug) {
+	public void drawShape(UGraphic ug) {
+		ug = applyColors(ug);
 		final Style style = getStyleSignature().getMergedStyle(getStyleBuilder());
 		final ClockwiseTopRightBottomLeft margin = style.getMargin();
 

File: src/net/sourceforge/plantuml/project/lang/SentenceHappensDate.java
Patch:
@@ -44,7 +44,7 @@
 public class SentenceHappensDate extends SentenceSimple {
 
 	public SentenceHappensDate() {
-		super(SubjectTask.ME, Verbs.happens, new ComplementDate());
+		super(SubjectTask.ME, Verbs.happens, ComplementDate.any());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/lang/SentencePausesDate.java
Patch:
@@ -43,7 +43,7 @@
 public class SentencePausesDate extends SentenceSimple {
 
 	public SentencePausesDate() {
-		super(SubjectTask.ME, Verbs.pauses, new ComplementDate());
+		super(SubjectTask.ME, Verbs.pauses, ComplementDate.any());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/lang/SentenceTaskEndsAbsolute.java
Patch:
@@ -43,7 +43,7 @@
 public class SentenceTaskEndsAbsolute extends SentenceSimple {
 
 	public SentenceTaskEndsAbsolute() {
-		super(SubjectTask.ME, Verbs.ends2, new ComplementDate());
+		super(SubjectTask.ME, Verbs.ends2, ComplementDate.any());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/lang/SentenceTaskStartsAbsolute.java
Patch:
@@ -43,7 +43,7 @@
 public class SentenceTaskStartsAbsolute extends SentenceSimple {
 
 	public SentenceTaskStartsAbsolute() {
-		super(SubjectTask.ME, Verbs.starts3, new ComplementDate());
+		super(SubjectTask.ME, Verbs.starts3, ComplementDate.any());
 	}
 
 	@Override
@@ -52,7 +52,7 @@ public CommandExecutionResult execute(GanttDiagram project, Object subject, Obje
 		final Day start = (Day) complement;
 		final Day startingDate = project.getStartingDate();
 		if (startingDate.getAbsoluteDayNum() == 0)
-			project.setProjectStartingDate(start);
+			return CommandExecutionResult.error("No starting date for the project");
 
 		task.setStart(start);
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/project/lang/SubjectProject.java
Patch:
@@ -68,7 +68,7 @@ public Collection<? extends SentenceSimple> getSentences() {
 	class Starts extends SentenceSimple {
 
 		public Starts() {
-			super(SubjectProject.this, Verbs.starts, new ComplementDate());
+			super(SubjectProject.this, Verbs.starts, ComplementDate.onlyAbsolute());
 		}
 
 		@Override

File: src/net/sourceforge/plantuml/project/lang/SubjectSeparator.java
Patch:
@@ -69,7 +69,7 @@ public Collection<? extends SentenceSimple> getSentences() {
 	class JustBefore extends SentenceSimple {
 
 		public JustBefore() {
-			super(SubjectSeparator.this, Verbs.justBefore, new ComplementDate());
+			super(SubjectSeparator.this, Verbs.justBefore, ComplementDate.any());
 		}
 
 		@Override
@@ -85,7 +85,7 @@ public CommandExecutionResult execute(GanttDiagram project, Object subject, Obje
 	class JustAfter extends SentenceSimple {
 
 		public JustAfter() {
-			super(SubjectSeparator.this, Verbs.justAfter, new ComplementDate());
+			super(SubjectSeparator.this, Verbs.justAfter, ComplementDate.any());
 		}
 
 		@Override

File: src/net/sourceforge/plantuml/project/lang/SubjectToday.java
Patch:
@@ -90,7 +90,7 @@ public CommandExecutionResult execute(GanttDiagram project, Object subject, Obje
 	class IsDate extends SentenceSimple {
 
 		public IsDate() {
-			super(SubjectToday.this, Verbs.is, new ComplementDate());
+			super(SubjectToday.this, Verbs.is, ComplementDate.any());
 		}
 
 		@Override

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -138,7 +138,8 @@ public enum SName {
 	undone, //
 	unstarted, //
 	usecase, //
-
+	verticalSeparator, //
+	
 	visibilityIcon, //
 	private_, //
 	protected_, //

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.13beta2";
+	private static final String version = "1.2023.13beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/acearth/package-info.java
Patch:
@@ -3,6 +3,6 @@
  * <a href="https://plantuml.com/xearth" target="_top">
  * XEarth Image</a>.
  *
- * @see ext.plantuml.com.ctreber.acearth
+ * @see zext.plantuml.com.ctreber.acearth
  */
 package net.sourceforge.plantuml.acearth;

File: src/net/sourceforge/plantuml/flashcode/package-info.java
Patch:
@@ -2,7 +2,7 @@
  * Provides classes used to manage 
  * Flashcode especially QR Code (on PlantUML).
  *
- * @see ext.plantuml.com.google.zxing
+ * @see zext.plantuml.com.google.zxing
  * @see net.sourceforge.plantuml.klimt.creole.atom.AtomImg#createQrcode
  */
 package net.sourceforge.plantuml.flashcode;

File: src/zext/plantuml/com/ctreber/acearth/package-info.java
Patch:
@@ -9,7 +9,7 @@
  * Internal copy of <code>AC.earth</code> - <code>XEarth</code> 
  * for Java <i>(code of Christian Treber)</i>.
  * 
- * @see ext.plantuml.com.ctreber.acearth.ACearth
+ * @see zext.plantuml.com.ctreber.acearth.ACearth
  * @see net.sourceforge.plantuml.acearth
  * 
  */

File: src/zext/plantuml/com/ctreber/acearth/scanbit/ScanBit.java
Patch:
@@ -53,7 +53,7 @@ public int getXTo()
 
   /**
    * <p>See values for
-   * @see ext.plantuml.com.ctreber.acearth.util.Polygon
+   * @see zext.plantuml.com.ctreber.acearth.util.Polygon
    */
   public int getType()
   {

File: src/net/sourceforge/plantuml/svek/GeneralImageBuilder.java
Patch:
@@ -617,7 +617,7 @@ private void printGroup(DotStringFactory dotStringFactory, Entity g) {
 		if (g.getGroupType() == GroupType.CONCURRENT_STATE)
 			return;
 
-		final ClusterHeader clusterHeader = new ClusterHeader((Entity) g, dotData.getSkinParam(), dotData,
+		final ClusterHeader clusterHeader = new ClusterHeader(g, dotData.getSkinParam(), dotData,
 				stringBounder);
 		dotStringFactory.openCluster(g, clusterHeader);
 		this.printEntities(dotStringFactory, g.leafs());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.13beta1";
+	private static final String version = "1.2023.13beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/abel/LeafType.java
Patch:
@@ -62,7 +62,7 @@ public enum LeafType {
 
 	PORTIN, PORTOUT,
 
-	CHEN_ENTITY, CHEN_RELATIONSHIP, CHEN_ATTRIBUTE,
+	CHEN_ENTITY, CHEN_RELATIONSHIP, CHEN_ATTRIBUTE, CHEN_CIRCLE,
 
 	STILL_UNKNOWN;
 

File: src/net/sourceforge/plantuml/cheneer/command/CommandMultiSubclass.java
Patch:
@@ -92,8 +92,7 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation
     final String symbol = arg.get("SYMBOL", 0);
 
     final Quark<Entity> centerQuark = diagram.quarkInContext(false, superclass + "/" + symbol + subclasses + "/center");
-    // TODO: Custom LeafType
-    final Entity centerEntity = diagram.reallyCreateLeaf(centerQuark, Display.create(symbol), LeafType.USECASE, null);
+    final Entity centerEntity = diagram.reallyCreateLeaf(centerQuark, Display.create(symbol), LeafType.CHEN_CIRCLE, null);
 
     final Quark<Entity> superclassQuark = diagram.quarkInContext(true, superclass);
     final Entity superclassEntity = superclassQuark.getData();

File: src/net/sourceforge/plantuml/abel/LeafType.java
Patch:
@@ -62,6 +62,8 @@ public enum LeafType {
 
 	PORTIN, PORTOUT,
 
+	CHEN_ENTITY, CHEN_RELATIONSHIP, CHEN_ATTRIBUTE,
+
 	STILL_UNKNOWN;
 
 	public static LeafType getLeafType(String type) {

File: src/net/sourceforge/plantuml/cheneer/command/CommandCreateAttribute.java
Patch:
@@ -83,7 +83,7 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation
       return CommandExecutionResult.error("Attribute must be inside an entity, relationship or another attribute");
     }
 
-    final LeafType type = LeafType.USECASE;
+    final LeafType type = LeafType.CHEN_ATTRIBUTE;
     final String name = diagram.cleanId(arg.get("NAME", 0).trim());
     final String id = owner.getName() + "/" + name;
     final boolean composite = arg.get("COMPOSITE", 0) != null;

File: src/net/sourceforge/plantuml/cheneer/command/CommandCreateAttribute.java
Patch:
@@ -84,7 +84,7 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation
     }
 
     final LeafType type = LeafType.USECASE;
-    final String name = diagram.cleanId(arg.get("NAME", 0));
+    final String name = diagram.cleanId(arg.get("NAME", 0).trim());
     final String id = owner.getName() + "/" + name;
     final boolean composite = arg.get("COMPOSITE", 0) != null;
 

File: src/com/plantuml/api/cheerpj/package-info.java
Patch:
@@ -4,4 +4,4 @@
  * CheerpJ</a> API.
  * 
  */
-package cheerpj;
+package com.plantuml.api.cheerpj;

File: src/net/sourceforge/plantuml/cheneer/ChenEerDiagramFactory.java
Patch:
@@ -59,8 +59,8 @@ public ChenEerDiagramFactory() {
 	@Override
 	protected void initCommandsList(List<Command> cmds) {
 		cmds.add(new CommandCreateEntity());
-		cmds.add(new CommandCreateAttribute());
 		cmds.add(new CommandCreateRelationship());
+		cmds.add(new CommandCreateAttribute());
 		cmds.add(new CommandAssociateRelationship());
 		cmds.add(new CommandEndGroup());
 

File: src/com/plantuml/api/cheerpj/package-info.java
Patch:
@@ -4,4 +4,4 @@
  * CheerpJ</a> API.
  * 
  */
-package cheerpj;
+package com.plantuml.api.cheerpj;

File: src/smetana/core/package-info.java
Patch:
@@ -9,4 +9,4 @@
  * @see net.sourceforge.plantuml.sdot
  * 
  */
-package core;
+package smetana.core;

File: src/net/sourceforge/plantuml/abel/EntityGender.java
Patch:
@@ -37,4 +37,6 @@
 
 public interface EntityGender {
 	public boolean contains(Entity test);
+
+	public String getGender();
 }

File: src/net/sourceforge/plantuml/abel/EntityGender.java
Patch:
@@ -37,4 +37,6 @@
 
 public interface EntityGender {
 	public boolean contains(Entity test);
+
+	public String getGender();
 }

File: src/net/sourceforge/plantuml/abel/EntityGender.java
Patch:
@@ -37,4 +37,6 @@
 
 public interface EntityGender {
 	public boolean contains(Entity test);
+
+	public String getGender();
 }

File: src/net/sourceforge/plantuml/dot/GraphvizLinux.java
Patch:
@@ -48,10 +48,10 @@ class GraphvizLinux extends AbstractGraphviz {
 
 	@Override
 	protected File specificDotExe() {
-		final File all[] = new File[] { new File("/usr/local/bin/dot"), new File("/usr/bin/dot"),
-				new File("/opt/homebrew/bin/dot") };
+		final File all[] = new File[] { new File("/usr/local/bin/dot"), new File("/opt/homebrew/bin/dot"),
+				new File("/opt/homebrew/opt/graphviz/bin/dot"), new File("/usr/bin/dot") };
 		for (File f : all)
-			if (f.exists())
+			if (f.exists() && f.canRead() && f.canExecute())
 				return f;
 		return new File("/opt/local/bin/dot");
 	}

File: src/net/sourceforge/plantuml/core/UmlSource.java
Patch:
@@ -45,7 +45,6 @@
 import net.sourceforge.plantuml.regex.Matcher2;
 import net.sourceforge.plantuml.regex.MyPattern;
 import net.sourceforge.plantuml.regex.Pattern2;
-import net.sourceforge.plantuml.text.BackSlash;
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.utils.LineLocation;
 import net.sourceforge.plantuml.utils.StartUtils;

File: src/net/sourceforge/plantuml/activitydiagram/package-info.java
Patch:
@@ -1,12 +1,12 @@
 /**
  * Provides classes used to manage 
  * <a href="https://plantuml.com/activity-diagram-legacy" target="_top">
- * Activity Diagram (legacy)</a>
+ * Activity Diagram (legacy)</a>.
  *
  * <p>
  * For new syntax see {@link net/sourceforge/plantuml/activitydiagram3}
  * and 
  * <a href="https://plantuml.com/activity-diagram-beta" target="_top">
- * Activity Diagram (New Syntax)</a>
+ * Activity Diagram (New Syntax)</a>.
  */
 package net.sourceforge.plantuml.activitydiagram;

File: src/net/sourceforge/plantuml/activitydiagram3/package-info.java
Patch:
@@ -1,6 +1,6 @@
 /**
  * Provides classes used to manage 
  * <a href="https://plantuml.com/activity-diagram-beta" target="_top">
- * Activity Diagram (New Syntax)</a>
+ * Activity Diagram (New Syntax)</a>.
  */
 package net.sourceforge.plantuml.activitydiagram3;

File: src/net/sourceforge/plantuml/project/GanttDiagram.java
Patch:
@@ -662,7 +662,7 @@ public HColorSet getIHtmlColorSet() {
 		return colorSet;
 	}
 
-	public void setStartingDate(Day start) {
+	public void setProjectStartingDate(Day start) {
 		openClose.setStartingDay(start);
 		this.min = start;
 	}

File: src/net/sourceforge/plantuml/project/lang/SentenceTaskStarts.java
Patch:
@@ -56,10 +56,10 @@ public CommandExecutionResult execute(GanttDiagram project, Object subject, Obje
 		HColor color = null;
 		when = (TaskInstant) complement;
 		task.setStart(when.getInstantPrecise());
-		if (when.isTask()) {
+		if (when.isTask())
 			project.addContraint(new GanttConstraint(project.getIHtmlColorSet(), project.getCurrentStyleBuilder(), when,
 					new TaskInstant(task, TaskAttribute.START), color));
-		}
+
 		return CommandExecutionResult.ok();
 
 	};

File: src/net/sourceforge/plantuml/project/lang/SubjectProject.java
Patch:
@@ -75,7 +75,7 @@ public Starts() {
 		public CommandExecutionResult execute(GanttDiagram project, Object subject, Object complement) {
 			final Day start = (Day) complement;
 			assert project == subject;
-			project.setStartingDate(start);
+			project.setProjectStartingDate(start);
 			return CommandExecutionResult.ok();
 		}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -388,11 +388,11 @@ public CommandExecutionResult repeatWhile(Display label, Display yes, Display ou
 	}
 
 	public CommandExecutionResult backward(Display label, BoxStyle boxStyle, LinkRendering incoming1,
-			LinkRendering incoming2) {
+			LinkRendering incoming2, Stereotype stereotype) {
 		manageSwimlaneStrategy();
 		if (current() instanceof InstructionRepeat) {
 			final InstructionRepeat instructionRepeat = (InstructionRepeat) current();
-			instructionRepeat.setBackward(label, swinlanes.getCurrentSwimlane(), boxStyle, incoming1, incoming2);
+			instructionRepeat.setBackward(label, swinlanes.getCurrentSwimlane(), boxStyle, incoming1, incoming2, stereotype);
 			return CommandExecutionResult.ok();
 		}
 		if (current() instanceof InstructionWhile) {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.11beta2";
+	private static final String version = "1.2023.11beta3";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/SourceStringReader.java
Patch:
@@ -154,7 +154,7 @@ public String generateImage(OutputStream os, int numImage, FileFormatOption file
 	public DiagramDescription outputImage(OutputStream os, int numImage, FileFormatOption fileFormatOption)
 			throws IOException {
 		if (blocks.size() == 0) {
-			noStartumlFound(os, fileFormatOption);
+			noValidStartFound(os, fileFormatOption);
 			return null;
 		}
 		for (BlockUml b : blocks) {
@@ -230,8 +230,8 @@ public String getCMapData(int numImage, FileFormatOption fileFormatOption) throw
 
 	}
 
-	public ImageData noStartumlFound(OutputStream os, FileFormatOption fileFormatOption) throws IOException {
-		final TextBlock error = GraphicStrings.createForError(Arrays.asList("No @startuml/@enduml found"),
+	public ImageData noValidStartFound(OutputStream os, FileFormatOption fileFormatOption) throws IOException {
+		final TextBlock error = GraphicStrings.createForError(Arrays.asList("No valid @start/@end found, please check the version"),
 				fileFormatOption.isUseRedForError());
 
 		return plainImageBuilder(error, fileFormatOption).write(os);

File: src/net/sourceforge/plantuml/picoweb/PicoWebServer.java
Patch:
@@ -269,9 +269,9 @@ public void handleRenderRequest(RenderRequest renderRequest, BufferedOutputStrea
 
 		if (ssr.getBlocks().size() == 0) {
 			system = PSystemErrorUtils.buildV2(null,
-					new ErrorUml(SYNTAX_ERROR, "No @startuml/@enduml found", 0, new LineLocationImpl("", null)), null,
+					new ErrorUml(SYNTAX_ERROR, "No valid @start/@end found, please check the version", 0, new LineLocationImpl("", null)), null,
 					Collections.<StringLocated>emptyList());
-			imageData = ssr.noStartumlFound(os, option.getFileFormatOption());
+			imageData = ssr.noValidStartFound(os, option.getFileFormatOption());
 		} else {
 			system = ssr.getBlocks().get(0).getDiagram();
 			imageData = system.exportDiagram(os, 0, option.getFileFormatOption());

File: test/net/sourceforge/plantuml/picoweb/PicoWebServerTest.java
Patch:
@@ -197,13 +197,13 @@ assert readStreamAsString(response.getInputStream()).equals("" +
 
 		response = httpPostJson("/render", renderRequestJson("@startuml", "-ttxt"));
 		assert response.getResponseCode() == 200;
-		assert response.getHeaderField("X-PlantUML-Diagram-Error").equals("No @startuml/@enduml found");
+		assert response.getHeaderField("X-PlantUML-Diagram-Error").equals("No valid @start/@end found, please check the version");
 		assert response.getHeaderField("X-PlantUML-Diagram-Error-Line").equals("0");
 		assert response.getContentType().equals("text/plain");
 		assert readStreamAsString(response.getInputStream()).equals("" +
 				"                               \n" +
 				"                               \n" +
-				"     No @startuml/@enduml found\n"
+				"     No valid @start/@end found, please check the version\n"
 		);
 
 		response = httpPostJson("/render", "");

File: src/net/sourceforge/plantuml/SourceStringReader.java
Patch:
@@ -154,7 +154,7 @@ public String generateImage(OutputStream os, int numImage, FileFormatOption file
 	public DiagramDescription outputImage(OutputStream os, int numImage, FileFormatOption fileFormatOption)
 			throws IOException {
 		if (blocks.size() == 0) {
-			noStartumlFound(os, fileFormatOption);
+			noValidStartFound(os, fileFormatOption);
 			return null;
 		}
 		for (BlockUml b : blocks) {
@@ -230,8 +230,8 @@ public String getCMapData(int numImage, FileFormatOption fileFormatOption) throw
 
 	}
 
-	public ImageData noStartumlFound(OutputStream os, FileFormatOption fileFormatOption) throws IOException {
-		final TextBlock error = GraphicStrings.createForError(Arrays.asList("No @startuml/@enduml found"),
+	public ImageData noValidStartFound(OutputStream os, FileFormatOption fileFormatOption) throws IOException {
+		final TextBlock error = GraphicStrings.createForError(Arrays.asList("No valid @start/@end found, please check the version"),
 				fileFormatOption.isUseRedForError());
 
 		return plainImageBuilder(error, fileFormatOption).write(os);

File: src/net/sourceforge/plantuml/picoweb/PicoWebServer.java
Patch:
@@ -269,9 +269,9 @@ public void handleRenderRequest(RenderRequest renderRequest, BufferedOutputStrea
 
 		if (ssr.getBlocks().size() == 0) {
 			system = PSystemErrorUtils.buildV2(null,
-					new ErrorUml(SYNTAX_ERROR, "No @startuml/@enduml found", 0, new LineLocationImpl("", null)), null,
+					new ErrorUml(SYNTAX_ERROR, "No valid @start/@end found, please check the version", 0, new LineLocationImpl("", null)), null,
 					Collections.<StringLocated>emptyList());
-			imageData = ssr.noStartumlFound(os, option.getFileFormatOption());
+			imageData = ssr.noValidStartFound(os, option.getFileFormatOption());
 		} else {
 			system = ssr.getBlocks().get(0).getDiagram();
 			imageData = system.exportDiagram(os, 0, option.getFileFormatOption());

File: test/net/sourceforge/plantuml/picoweb/PicoWebServerTest.java
Patch:
@@ -197,13 +197,13 @@ assert readStreamAsString(response.getInputStream()).equals("" +
 
 		response = httpPostJson("/render", renderRequestJson("@startuml", "-ttxt"));
 		assert response.getResponseCode() == 200;
-		assert response.getHeaderField("X-PlantUML-Diagram-Error").equals("No @startuml/@enduml found");
+		assert response.getHeaderField("X-PlantUML-Diagram-Error").equals("No valid @start/@end found, please check the version");
 		assert response.getHeaderField("X-PlantUML-Diagram-Error-Line").equals("0");
 		assert response.getContentType().equals("text/plain");
 		assert readStreamAsString(response.getInputStream()).equals("" +
 				"                               \n" +
 				"                               \n" +
-				"     No @startuml/@enduml found\n"
+				"     No valid @start/@end found, please check the version\n"
 		);
 
 		response = httpPostJson("/render", "");

File: src/net/sourceforge/plantuml/code/Tokens.java
Patch:
@@ -40,6 +40,9 @@
 import java.util.Set;
 import java.util.TreeSet;
 
+import net.sourceforge.plantuml.annotation.DeadCode;
+
+@DeadCode(comment = "try for text diagram compression")
 public class Tokens {
 	// ::remove file when __CORE__
 

File: src/net/sourceforge/plantuml/syntax/SyntaxChecker.java
Patch:
@@ -43,15 +43,17 @@
 import net.sourceforge.plantuml.OptionFlags;
 import net.sourceforge.plantuml.SourceStringReader;
 import net.sourceforge.plantuml.UmlDiagram;
+import net.sourceforge.plantuml.annotation.DeadCode;
 import net.sourceforge.plantuml.core.Diagram;
 import net.sourceforge.plantuml.error.PSystemError;
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.text.BackSlash;
 import net.sourceforge.plantuml.utils.LineLocation;
 import net.sourceforge.plantuml.utils.LineLocationImpl;
 
+@DeadCode(comment = "used too much CPU")
 public class SyntaxChecker {
-    // ::remove folder when __HAXE__
+	// ::remove folder when __HAXE__
 	// ::remove file when __CORE__
 
 	public static SyntaxResult checkSyntax(List<String> source) {

File: src/net/sourceforge/plantuml/cheneer/command/CommandAssociateRelationship.java
Patch:
@@ -90,7 +90,8 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation
     final Link link = new Link(diagram.getEntityFactory(), diagram.getCurrentStyleBuilder(), relationship, entity,
         linkType,
         // TODO: Cardinality
-        LinkArg.build(Display.NULL, 1));
+        LinkArg.build(Display.NULL, 3));
+    link.setPortMembers(diagram.getPortId(relationship.getName()), diagram.getPortId(entity.getName()));
     diagram.addLink(link);
 
     return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/cheneer/command/CommandCreateAttribute.java
Patch:
@@ -116,7 +116,7 @@ protected CommandExecutionResult executeArg(ChenEerDiagram diagram, LineLocation
 
     final LinkType linkType = new LinkType(LinkDecor.NONE, LinkDecor.NONE);
     final Link link = new Link(diagram.getEntityFactory(), diagram.getCurrentStyleBuilder(), entity, owner, linkType,
-        LinkArg.build(Display.NULL, 1));
+        LinkArg.build(Display.NULL, 2));
     diagram.addLink(link);
 
     if (composite) {

File: src/net/sourceforge/plantuml/PSystemBuilder.java
Patch:
@@ -218,10 +218,12 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate
 		// ::done
 
 		// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__ or __LGPL__
-		factories.add(new PSystemDitaaFactory());
 		factories.add(new PSystemJcckitFactory());
 		factories.add(new PSystemSudokuFactory());
 		// ::done
+		// ::comment when __CORE__ or __MIT__ or __EPL__ or __BSD__ or __ASL__
+		factories.add(new PSystemDitaaFactory());
+		// ::done
 
 		// ::comment when __CORE__
 		factories.add(new PSystemDefinitionFactory());

File: src/net/sourceforge/plantuml/bpm/BpmElement.java
Patch:
@@ -148,7 +148,7 @@ private Style getStyle(ISkinParam skinParam) {
 
 	public TextBlock toTextBlockInternal(ISkinParam skinParam) {
 		if (type == BpmElementType.START) {
-			return new FtileCircleStart(skinParam, HColors.BLACK, null, getStyle(skinParam));
+			return new FtileCircleStart(skinParam, null, getStyle(skinParam));
 		}
 		if (type == BpmElementType.MERGE) {
 			final HColor borderColor = SkinParamUtils.getColor(skinParam, null, ColorParam.activityBorder);

File: src/net/sourceforge/plantuml/SourceFileReader.java
Patch:
@@ -147,7 +147,7 @@ protected SuggestedFile getSuggestedFile(BlockUml blockUml) throws FileNotFoundE
 				suggested = SuggestedFile.fromOutputFile(new File(outputDirectory, newName),
 						getFileFormatOption().getFileFormat(), 0);
 			} else {
-				Log.info("We are going to create cypherfiles in directory " + dir);
+				Log.info("We are going to create files in directory " + dir);
 				suggested = SuggestedFile.fromOutputFile(new File(dir, getFileName()),
 						getFileFormatOption().getFileFormat(), 0);
 			}

File: src/net/sourceforge/plantuml/package-info.java
Patch:
@@ -38,7 +38,7 @@
  * Contains classes for processing PlantUML source files.
  *
  * <p>
- * The following is a typical control flow PlantUML:
+ * The following is a typical control flow for PlantUML:
  *
  * <ul>
  * <li>

File: src/net/sourceforge/plantuml/abel/LinkStrategy.java
Patch:
@@ -45,12 +45,13 @@ public enum LinkStrategy {
 	 * We then retrieve tail/head in generated SVG to compute link decoration angle.
 	 * 
 	 * Drawbacks: sometimes, GraphViz does NOT draw those decorations, which causes issues
+	 * This is to be removed
 	 */
-	LEGACY,
+	LEGACY_toberemoved,
 
 	/*
 	 * In simplier mode, there are no tail/head in GraphViz generated dot.
-	 * The decoration angle is retrieve using Bezier data.
+	 * The decoration angle is retrieved using Bezier data.
 	 * 
 	 */
 	SIMPLIER

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionIf.java
Patch:
@@ -162,6 +162,8 @@ public Instruction getParent() {
 	}
 
 	public boolean swithToElse2(LinkRendering whenElse, LinkRendering nextLinkRenderer) {
+		this.current.setSpecial(nextLinkRenderer);
+
 		if (elseBranch != null)
 			return false;
 
@@ -177,7 +179,6 @@ public boolean elseIf(LinkRendering inlabel, Display test, LinkRendering whenThe
 		if (elseBranch != null)
 			return false;
 
-		// this.current.setInlinkRendering(nextLinkRenderer);
 		this.current.setSpecial(nextLinkRenderer);
 		this.current = new Branch(skinParam.getCurrentStyleBuilder(), swimlane, whenThen, test, color, inlabel);
 		this.thens.add(current);

File: src/net/sourceforge/plantuml/statediagram/command/CommandEndState.java
Patch:
@@ -60,9 +60,9 @@ static IRegex getRegexConcat() {
 	@Override
 	protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation location, RegexResult arg) {
 		final Entity currentPackage = diagram.getCurrentGroup();
-		if (currentPackage == null) {
+		if (currentPackage == null || currentPackage.isRoot())
 			return CommandExecutionResult.error("No inner state defined");
-		}
+
 		diagram.endGroup();
 		return CommandExecutionResult.ok();
 	}

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -683,7 +683,7 @@ public void solveLine(SvgResult fullSvg) {
 		if (link.getEntity2().getLeafType() == LeafType.LOLLIPOP_HALF)
 			svekNode2.addImpact(dotPath.getEndAngle());
 
-		if (getLinkStrategy() == LinkStrategy.LEGACY && extremity1 instanceof Extremity
+		if (getLinkStrategy() == LinkStrategy.LEGACY_toberemoved && extremity1 instanceof Extremity
 				&& extremity2 instanceof Extremity) {
 			final XPoint2D p1 = ((Extremity) extremity1).somePoint();
 			final XPoint2D p2 = ((Extremity) extremity2).somePoint();

File: src/net/sourceforge/plantuml/svek/DotStringFactory.java
Patch:
@@ -214,7 +214,7 @@ else if (s.startsWith("nodesep"))
 				line.appendLine(getGraphvizVersion(), sb, dotMode, dotSplines);
 
 			root.printCluster2(sb, bibliotekon.allLines(), stringBounder, dotMode, getGraphvizVersion(),
-					umlDiagramType, null);
+					umlDiagramType);
 
 			for (SvekLine line : bibliotekon.lines1())
 				line.appendLine(getGraphvizVersion(), sb, dotMode, dotSplines);

File: src/net/sourceforge/plantuml/svek/DotStringFactory.java
Patch:
@@ -214,7 +214,7 @@ else if (s.startsWith("nodesep"))
 				line.appendLine(getGraphvizVersion(), sb, dotMode, dotSplines);
 
 			root.printCluster2(sb, bibliotekon.allLines(), stringBounder, dotMode, getGraphvizVersion(),
-					umlDiagramType);
+					umlDiagramType, null);
 
 			for (SvekLine line : bibliotekon.lines1())
 				line.appendLine(getGraphvizVersion(), sb, dotMode, dotSplines);

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -96,8 +96,8 @@ public final StyleBuilder getStyleBuilder() {
 	private Url url;
 
 	public LinkStrategy getLinkStrategy() {
-		return LinkStrategy.LEGACY;
-		// return LinkStrategy.SIMPLIER;
+		// return LinkStrategy.LEGACY;
+		return LinkStrategy.SIMPLIER;
 	}
 
 	public String idCommentForSvg() {

File: src/net/sourceforge/plantuml/decoration/LinkDecor.java
Patch:
@@ -104,7 +104,7 @@ public boolean isExtendsLike() {
 
 	public ExtremityFactory getExtremityFactoryComplete(HColor backgroundColor) {
 		if (this == EXTENDS)
-			return new ExtremityFactoryTriangle(backgroundColor, 16, 6);
+			return new ExtremityFactoryTriangle(null, 18, 6, 18);
 
 		return getExtremityFactoryLegacy(backgroundColor);
 	}
@@ -120,7 +120,7 @@ public ExtremityFactory getExtremityFactoryLegacy(HColor backgroundColor) {
 		case HALF_ARROW:
 			return new ExtremityFactoryHalfArrow();
 		case ARROW_TRIANGLE:
-			return new ExtremityFactoryTriangle(null, 8, 3);
+			return new ExtremityFactoryTriangle(null, 8, 3, 8);
 		case CROWFOOT:
 			return new ExtremityFactoryCrowfoot();
 		case CIRCLE_CROWFOOT:

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityArrowAndCircle.java
Patch:
@@ -57,7 +57,7 @@ public XPoint2D somePoint() {
 		return contact;
 	}
 
-	public ExtremityArrowAndCircle(XPoint2D p1, double angle, XPoint2D center, HColor backgroundColor) {
+	public ExtremityArrowAndCircle(XPoint2D p1, double angle, HColor backgroundColor) {
 		angle = manageround(angle);
 		polygon.addPoint(0, 0);
 		this.backgroundColor = backgroundColor;

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactory.java
Patch:
@@ -41,7 +41,7 @@
 
 public interface ExtremityFactory {
 
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side);
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side);
 
 	public UDrawable createUDrawable(XPoint2D p0, double angle, Side side);
 

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryArrow.java
Patch:
@@ -48,7 +48,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		final XPoint2D center = new XPoint2D((p0.getX() + p2.getX()) / 2, (p0.getY() + p2.getY()) / 2);
 		return new ExtremityArrow(p1, ortho, center);

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryCircle.java
Patch:
@@ -58,7 +58,7 @@ public UDrawable createUDrawable(XPoint2D center, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return ExtremityCircle.create(p1, fill, ortho, backgroundColor);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryCircleConnect.java
Patch:
@@ -56,7 +56,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityCircleConnect(p1, ortho, backgroundColor);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryCircleCrowfoot.java
Patch:
@@ -49,7 +49,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityCircleCrowfoot(p1, ortho);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryCircleLine.java
Patch:
@@ -49,7 +49,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityCircleLine(p1, ortho);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryCrowfoot.java
Patch:
@@ -43,7 +43,7 @@
 public class ExtremityFactoryCrowfoot extends AbstractExtremityFactory implements ExtremityFactory {
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityCrowfoot(p1, ortho, side);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryDiamond.java
Patch:
@@ -54,7 +54,7 @@ public ExtremityFactoryDiamond(boolean fill) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityDiamond(p1, ortho, fill);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryDoubleLine.java
Patch:
@@ -49,7 +49,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityDoubleLine(p1, ortho);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryExtends.java
Patch:
@@ -55,7 +55,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		throw new UnsupportedOperationException();
 		// final double ortho = atan2(p0, p2);
 		// return new ExtremityExtends(p1, ortho, true);

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryExtendsLike.java
Patch:
@@ -61,7 +61,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2) + (Math.PI / 2.0);
 		if (definedBy) {
 			return new ExtremityExtendsLike.DefinedBy(p1, ortho, backgroundColor);

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryHalfArrow.java
Patch:
@@ -48,7 +48,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		final XPoint2D center = new XPoint2D((p0.getX() + p2.getX()) / 2, (p0.getY() + p2.getY()) / 2);
 		return new ExtremityHalfArrow(p1, ortho, center);

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryLineCrowfoot.java
Patch:
@@ -49,7 +49,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityLineCrowfoot(p1, ortho);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryNotNavigable.java
Patch:
@@ -48,7 +48,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return new ExtremityNotNavigable(p1, ortho);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryParenthesis.java
Patch:
@@ -49,7 +49,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		if (OptionFlags.USE_INTERFACE_EYE2) {
 			final XPoint2D center = new XPoint2D((p0.getX() + p2.getX()) / 2, (p0.getY() + p2.getY()) / 2);

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactoryPlus.java
Patch:
@@ -55,7 +55,7 @@ public UDrawable createUDrawable(XPoint2D center, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		final double ortho = atan2(p0, p2);
 		return ExtremityPlus.create(p1, ortho, backgroundColor);
 	}

File: src/net/sourceforge/plantuml/svek/extremity/ExtremityFactorySquare.java
Patch:
@@ -55,7 +55,7 @@ public UDrawable createUDrawable(XPoint2D p0, double angle, Side side) {
 	}
 
 	@Override
-	public UDrawable createUDrawable(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
+	public UDrawable createTBRDrawableLegacy(XPoint2D p0, XPoint2D p1, XPoint2D p2, Side side) {
 		// final double ortho = atan2(p0, p2);
 		return new ExtremitySquare(p1, backgroundColor);
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.11beta1";
+	private static final String version = "1.2023.11beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -59,9 +59,8 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
-			final char firstChar = values.get(0).toString().charAt(0);
-			final int value = (int) firstChar;
-			return TValue.fromInt(value);
+			final int codePoint = values.get(0).toString().codePointAt(0);
+			return TValue.fromInt(codePoint);
 		} catch (Throwable t) {
 			return TValue.fromInt(0);
 		}

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -59,9 +59,8 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
-			final char firstChar = values.get(0).toString().charAt(0);
-			final int value = (int) firstChar;
-			return TValue.fromInt(value);
+			final int codePoint = values.get(0).toString().codePointAt(0);
+			return TValue.fromInt(codePoint);
 		} catch (Throwable t) {
 			return TValue.fromInt(0);
 		}

File: src/net/sourceforge/plantuml/elk/ElkPath.java
Patch:
@@ -175,7 +175,7 @@ private UDrawable getDecors(LinkDecor decors, double angle, HColor backColor) {
 		if (decors == LinkDecor.EXTENDS)
 			return new ExtremityFactoryExtends(backColor).createUDrawable(new XPoint2D(0, 0), angle, null);
 
-		final ExtremityFactory extremityFactory = decors.getExtremityFactory(backColor);
+		final ExtremityFactory extremityFactory = decors.getExtremityFactoryLegacy(backColor);
 		if (extremityFactory == null)
 			return null;
 

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -59,7 +59,6 @@
 import net.sourceforge.plantuml.style.StyleBuilder;
 import net.sourceforge.plantuml.svek.Bibliotekon;
 import net.sourceforge.plantuml.url.Url;
-import net.sourceforge.plantuml.utils.Direction;
 import net.sourceforge.plantuml.utils.LineLocation;
 
 public class Link extends WithLinkType implements Hideable, Removeable {

File: src/net/sourceforge/plantuml/tim/stdlib/Ord.java
Patch:
@@ -59,7 +59,8 @@ public boolean canCover(int nbArg, Set<String> namedArgument) {
 	public TValue executeReturnFunction(TContext context, TMemory memory, LineLocation location, List<TValue> values,
 			Map<String, TValue> named) throws EaterException, EaterExceptionLocated {
 		try {
-			final int value = (int) values.get(0).toString();
+			final char firstChar = values.get(0).toString().charAt(0);
+			final int value = (int) firstChar;
 			return TValue.fromInt(value);
 		} catch (Throwable t) {
 			return TValue.fromInt(0);

File: src/net/sourceforge/plantuml/svek/Kal.java
Patch:
@@ -83,11 +83,11 @@ public Kal(SvekLine svekLine, String text, FontConfiguration font, ISkinParam sk
 
 		} else if (link.getEntity1() == entity) {
 			this.position = Direction.DOWN;
-			entity.ensureMargins(new Margins(0, 0, dim.getHeight(), 0));
+			entity.ensureMargins(new Margins(0, 0, 0, dim.getHeight()));
 
 		} else if (link.getEntity2() == entity) {
 			this.position = Direction.UP;
-			entity.ensureMargins(new Margins(0, 0, 0, dim.getHeight()));
+			entity.ensureMargins(new Margins(0, 0, dim.getHeight(),0 ));
 
 		} else {
 			throw new IllegalStateException();

File: src/net/sourceforge/plantuml/abel/LinkArg.java
Patch:
@@ -103,8 +103,8 @@ private LinkArg(Display label, int length, String quantifier1, String quantifier
 	}
 
 	public LinkArg getInv() {
-		return new LinkArg(label, length, quantifier2, quantifier1, labeldistance, labelangle, visibilityModifier, kal1,
-				kal2);
+		return new LinkArg(label, length, quantifier2, quantifier1, labeldistance, labelangle, visibilityModifier, kal2,
+				kal1);
 	}
 
 	public final Display getLabel() {

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionGroup.java
Patch:
@@ -102,7 +102,7 @@ public Gtile createGtile(ISkinParam skinParam, StringBounder stringBounder) {
 	public Ftile createFtile(FtileFactory factory) {
 		Ftile tmp = list.createFtile(factory);
 		if (note != null)
-			tmp = new FtileWithNotes(tmp, Collections.singleton(note), factory.skinParam(), VerticalAlignment.CENTER);
+			tmp = new FtileWithNotes(tmp, Collections.singleton(note), VerticalAlignment.CENTER);
 
 		return factory.createGroup(tmp, title, backColor, null, type, style);
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionWhile.java
Patch:
@@ -120,7 +120,7 @@ public Ftile createFtile(FtileFactory factory) {
 		Ftile tmp = repeatList.createFtile(factory);
 		tmp = factory.createWhile(outColor, swimlane, tmp, test, yes, color, specialOut, back, incoming1, incoming2);
 		if (getPositionedNotes().size() > 0)
-			tmp = FtileWithNoteOpale.create(tmp, getPositionedNotes(), skinParam, false, VerticalAlignment.CENTER);
+			tmp = FtileWithNoteOpale.create(tmp, getPositionedNotes(), false, VerticalAlignment.CENTER);
 
 		if (killed || specialOut != null)
 			return new FtileKilled(tmp);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/FtileFactory.java
Patch:
@@ -89,7 +89,7 @@ public Ftile createWhile(LinkRendering outColor, Swimlane swimlane, Ftile whileB
 			HColor color, Instruction specialOut, Ftile backward, LinkRendering incoming1, LinkRendering incoming2);
 
 	public Ftile createIf(Swimlane swimlane, List<Branch> thens, Branch elseBranch, LinkRendering outColor,
-			LinkRendering topInlinkRendering, Url url);
+			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes);
 
 	public Ftile createSwitch(Swimlane swimlane, List<Branch> branches, LinkRendering afterEndwhile,
 			LinkRendering topInlinkRendering, Display labelTest);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileFactoryDelegatorCreateGroup.java
Patch:
@@ -58,7 +58,7 @@ public Ftile createGroup(Ftile list, Display name, HColor backColor, PositionedN
 			Style style) {
 		Ftile result = new FtileGroup(list, name, backColor, skinParam(), type, style);
 		if (note != null)
-			result = new FtileWithNotes(result, Collections.singleton(note), skinParam(), VerticalAlignment.CENTER);
+			result = new FtileWithNotes(result, Collections.singleton(note), VerticalAlignment.CENTER);
 
 		return result;
 	}

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/VCompactFactory.java
Patch:
@@ -177,7 +177,7 @@ public Ftile createWhile(LinkRendering afterEndwhile, Swimlane swimlane, Ftile w
 
 	@Override
 	public Ftile createIf(Swimlane swimlane, List<Branch> thens, Branch elseBranch, LinkRendering afterEndwhile,
-			LinkRendering topInlinkRendering, Url url) {
+			LinkRendering topInlinkRendering, Url url, Collection<PositionedNote> notes) {
 		final List<Ftile> ftiles = new ArrayList<>();
 		for (Branch branch : thens)
 			ftiles.add(branch.getFtile());

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/cond/FtileSwitchNude.java
Patch:
@@ -131,7 +131,7 @@ protected FtileGeometry calculateDimensionInternalSlow(StringBounder stringBound
 
 		result = result.delta(xSeparation * (tiles.size() - 1), 100);
 
-		return new FtileGeometry(result, result.getWidth() / 2, 0);
+		return new FtileGeometry(result.getWidth(), result.getHeight(), result.getWidth() / 2, 0);
 	}
 
 }

File: src/net/sourceforge/plantuml/klimt/shape/TextBlockUtils.java
Patch:
@@ -147,9 +147,9 @@ public static MinMax getMinMax(UDrawable tb, StringBounder stringBounder, boolea
 	}
 
 	public static boolean isEmpty(TextBlock text, StringBounder dummyStringBounder) {
-		if (text == null) {
+		if (text == null || text == EMPTY_TEXT_BLOCK)
 			return true;
-		}
+
 		final XDimension2D dim = text.calculateDimension(dummyStringBounder);
 		return dim.getHeight() == 0 && dim.getWidth() == 0;
 	}

File: src/net/sourceforge/plantuml/syntax/LanguageDescriptor.java
Patch:
@@ -152,6 +152,7 @@ public LanguageDescriptor() {
 		keyword.add("rnote");
 		keyword.add("hnote");
 		keyword.add("legend");
+		keyword.add("endlegend");
 		keyword.add("group");
 		keyword.add("left");
 		keyword.add("right");

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.10";
+	private static final String version = "1.2023.11beta1";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.10beta2";
+	private static final String version = "1.2023.10beta3";
 
 	public static String versionString() {
 		return version;

File: test/net/sourceforge/plantuml/picoweb/PicoWebServerTest.java
Patch:
@@ -10,7 +10,7 @@
 import java.net.HttpURLConnection;
 import java.net.ServerSocket;
 import java.net.Socket;
-import java.net.URL;
+import java.net.URI;
 
 import javax.imageio.ImageIO;
 import javax.imageio.stream.MemoryCacheImageInputStream;
@@ -310,7 +310,7 @@ private static Socket socketConnection() throws IOException {
 	}
 
 	private static HttpURLConnection urlConnection(String path) throws Exception {
-		final HttpURLConnection conn = (HttpURLConnection) new URL("http://localhost:" + port + path).openConnection();
+		final HttpURLConnection conn = (HttpURLConnection) new URI("http://localhost:" + port + path).toURL().openConnection();
 		conn.setInstanceFollowRedirects(false);
 		return conn;
 	}

File: src/net/sourceforge/plantuml/filesdiagram/FilesType.java
Patch:
@@ -35,6 +35,6 @@
 package net.sourceforge.plantuml.filesdiagram;
 
 public enum FilesType {
-	FOLDER, DATA;
+	FOLDER, DATA, NOTE;
 
 }

File: src/net/sourceforge/plantuml/style/Style.java
Patch:
@@ -58,7 +58,7 @@
 import net.sourceforge.plantuml.klimt.shape.TextBlockUtils;
 
 public class Style {
-    // ::remove file when __HAXE__
+	// ::remove file when __HAXE__
 
 	private final Map<PName, Value> map;
 	private final StyleSignatureBasic signature;
@@ -180,8 +180,8 @@ public StyleSignatureBasic getSignature() {
 	}
 
 	public UFont getUFont() {
-		final String family = StringUtils
-				.eventuallyRemoveStartingAndEndingDoubleQuote(value(PName.FontName).asString());
+		final String fontName = value(PName.FontName).asString();
+		final String family = UFont.getExistingFontFamily(fontName);
 		final int fontStyle = value(PName.FontStyle).asFontStyle();
 		int size = value(PName.FontSize).asInt(true);
 		if (size == -1)

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.10beta1";
+	private static final String version = "1.2023.10beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/command/CommandPackage.java
Patch:
@@ -111,7 +111,8 @@ protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineL
 			if (name.length() == 0) {
 				idShort = "##" + diagram.getUniqueSequence();
 				display = null;
-				throw new IllegalStateException("AS");
+				return CommandExecutionResult.error("Error in name");
+				// throw new IllegalStateException("AS");
 			} else {
 				idShort = name;
 				display = idShort;

File: src/net/sourceforge/plantuml/cucadiagram/BodyFactory.java
Patch:
@@ -77,8 +77,8 @@ public static TextBlock create2(HorizontalAlignment align, Display display, ISki
 	}
 
 	public static TextBlock create3(Display rawBody, ISkinSimple skinParam, HorizontalAlignment align,
-			FontConfiguration titleConfig, LineBreakStrategy lineBreakStrategy, Style style) {
-		return new BodyEnhanced2(rawBody, skinParam, align, titleConfig, lineBreakStrategy, style);
+			FontConfiguration fc, LineBreakStrategy lineBreakStrategy, Style style) {
+		return new BodyEnhanced2(rawBody, skinParam, align, fc, lineBreakStrategy, style);
 	}
 
 }

File: src/net/sourceforge/plantuml/svek/ClusterHeader.java
Patch:
@@ -118,6 +118,8 @@ private TextBlock getTitleBlock(Entity g, ISkinParam skinParam) {
 		else if (uSymbol != null)
 			signature = StyleSignatureBasic.of(SName.root, SName.element, sname, uSymbol.getSName(), SName.composite,
 					SName.title);
+		else if (g.getGroupType() == GroupType.PACKAGE)
+			signature = StyleSignatureBasic.of(SName.root, SName.element, sname, SName.package_, SName.title);
 		else
 			signature = StyleSignatureBasic.of(SName.root, SName.element, sname, SName.composite, SName.title);
 
@@ -163,7 +165,7 @@ private TextBlock getStereoBlockWithoutLegend(Entity g, PortionShower portionSho
 			return TextBlockUtils.empty(0, 0);
 
 		final Style style = Cluster
-				.getDefaultStyleDefinition(skinParam.getUmlDiagramType().getStyleName(), g.getUSymbol())
+				.getDefaultStyleDefinition(skinParam.getUmlDiagramType().getStyleName(), g.getUSymbol(), g.getGroupType())
 				.forStereotypeItself(g.getStereotype()).getMergedStyle(skinParam.getCurrentStyleBuilder());
 
 		final FontConfiguration fontConfiguration = style.getFontConfiguration(skinParam.getIHtmlColorSet());

File: src/net/sourceforge/plantuml/svek/PointListIteratorImpl.java
Patch:
@@ -70,7 +70,7 @@ public boolean hasNext() {
 	}
 
 	public List<XPoint2D> next() {
-		if (pos == -1) {
+		if (pos < 0) {
 			pos = -2;
 			return Collections.emptyList();
 		}
@@ -83,7 +83,7 @@ public List<XPoint2D> next() {
 				pos = svg.indexOf(SvgResult.POINTS_EQUALS, pos) + SvgResult.POINTS_EQUALS.length() + 1;
 			return result;
 		} catch (StringIndexOutOfBoundsException e) {
-			Log.error("Error " + e);
+			Log.error("ErrorString " + e);
 			return Collections.emptyList();
 		}
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.9";
+	private static final String version = "1.2023.10beta1";
 
 	public static String versionString() {
 		return version;

File: test/net/sourceforge/plantuml/tim/stdlib/GetenvTest.java
Patch:
@@ -46,7 +46,6 @@ void executeReturnFunctionSecurityTest(String name) throws EaterException, Eater
 	 */
 	@ParameterizedTest
 	@ValueSource(strings = {
-			"java.version",
 			"path.separator",
 			"line.separator",
 	})

File: src/net/sourceforge/plantuml/security/SFile.java
Patch:
@@ -117,9 +117,9 @@ private SFile(File internal) {
 	}
 
 	public static SFile fromFile(File internal) {
-		if (internal == null) {
+		if (internal == null)
 			return null;
-		}
+
 		return new SFile(internal);
 	}
 
@@ -257,7 +257,7 @@ public boolean renameTo(SFile dest) {
 	/**
 	 * Check SecurityProfile to see if this file can be open.
 	 */
-	private boolean isFileOk() {
+	public boolean isFileOk() {
 		// ::comment when __CORE__
 		if (SecurityUtils.getSecurityProfile() == SecurityProfile.SANDBOX)
 			// In SANDBOX, we cannot read any files

File: src/net/sourceforge/plantuml/security/SURL.java
Patch:
@@ -216,7 +216,7 @@ public BufferedImage readRasterImageFromURL() {
 	/**
 	 * Check SecurityProfile to see if this URL can be opened.
 	 */
-	private boolean isUrlOk() {
+	public boolean isUrlOk() {
 		// ::comment when __CORE__
 		if (SecurityUtils.getSecurityProfile() == SecurityProfile.SANDBOX)
 			// In SANDBOX, we cannot read any URL

File: src/net/sourceforge/plantuml/version/LicenseInfo.java
Patch:
@@ -108,8 +108,8 @@ public static boolean retrieveNamedOrDistributorQuickIsValid() {
 
 	public static synchronized LicenseInfo retrieveNamedSlow() {
 		cache = LicenseInfo.NONE;
-		if (OptionFlags.ALLOW_INCLUDE == false)
-			return cache;
+//		if (OptionFlags.ALLOW_INCLUDE == false)
+//			return cache;
 
 		final String key = prefs.get("license", "");
 		if (key.length() > 0) {

File: src/net/sourceforge/plantuml/version/PSystemVersion.java
Patch:
@@ -175,9 +175,8 @@ public static PSystemVersion createShowVersion2(UmlSource source) {
 		// :: done
 		// :: comment when __CORE__
 		GraphvizCrash.checkOldVersionWarning(strings);
-		if (OptionFlags.ALLOW_INCLUDE) {
-			if (SecurityUtils.getSecurityProfile() == SecurityProfile.UNSECURE)
-				strings.add("Loaded from " + Version.getJarPath());
+		if (SecurityUtils.getSecurityProfile() == SecurityProfile.UNSECURE) {
+			strings.add("Loaded from " + Version.getJarPath());
 
 			if (OptionFlags.getInstance().isWord()) {
 				strings.add("Word Mode");

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.9beta4";
+	private static final String version = "1.2023.9beta5";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/nwdiag/core/NServer.java
Patch:
@@ -112,6 +112,8 @@ public void blankSomeAddress() {
 	}
 
 	public void learnThisAddress(String address) {
+		if (address == null)
+			address = "";
 		for (Entry<Network, String> ent : connections.entrySet()) {
 			if (ent.getValue().length() == 0) {
 				connections.put(ent.getKey(), address);

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.9beta3";
+	private static final String version = "1.2023.9beta4";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/PSystemBuilder.java
Patch:
@@ -70,6 +70,7 @@
 import net.sourceforge.plantuml.emoji.PSystemListEmojiFactory;
 import net.sourceforge.plantuml.error.PSystemError;
 import net.sourceforge.plantuml.error.PSystemErrorUtils;
+import net.sourceforge.plantuml.filesdiagram.FilesDiagramFactory;
 import net.sourceforge.plantuml.flowdiagram.FlowDiagramFactory;
 import net.sourceforge.plantuml.font.PSystemListFontsFactory;
 import net.sourceforge.plantuml.gitlog.GitDiagramFactory;
@@ -101,7 +102,6 @@
 import net.sourceforge.plantuml.text.StringLocated;
 import net.sourceforge.plantuml.timingdiagram.TimingDiagramFactory;
 import net.sourceforge.plantuml.utils.Log;
-import net.sourceforge.plantuml.version.License;
 import net.sourceforge.plantuml.version.PSystemLicenseFactory;
 import net.sourceforge.plantuml.version.PSystemVersionFactory;
 import net.sourceforge.plantuml.wbs.WBSDiagramFactory;
@@ -251,6 +251,7 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate
 		factories.add(new JsonDiagramFactory());
 		factories.add(new GitDiagramFactory());
 		// ::comment when __CORE__
+		factories.add(new FilesDiagramFactory());
 		factories.add(new BoardDiagramFactory());
 		// ::done
 		factories.add(new YamlDiagramFactory());

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vertical/FtileBox.java
Patch:
@@ -181,6 +181,8 @@ private FtileBox(ISkinParam skinParam, Display label, Swimlane swimlane, BoxStyl
 
 	@Override
 	public String toString() {
+		if (print == null)
+			return super.toString();
 		return print;
 	}
 

File: src/net/sourceforge/plantuml/klimt/sprite/SpriteColor.java
Patch:
@@ -99,7 +99,7 @@ public int getWidth() {
 	}
 
 	public UImage toUImage(ColorMapper colorMapper, HColor backcolor, HColor forecolor) {
-		final BufferedImage im = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
+		final BufferedImage im = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
 
 		if (backcolor == null) {
 			backcolor = HColors.WHITE;
@@ -113,7 +113,7 @@ public UImage toUImage(ColorMapper colorMapper, HColor backcolor, HColor forecol
 				final int localColor = color[line][col];
 				if (localColor == -1) {
 					final double coef = 1.0 * gray[line][col] / (16 - 1);
-					final Color c = gradient.getColor(colorMapper, coef);
+					final Color c = gradient.getColor(colorMapper, coef, 255);
 					im.setRGB(col, line, c.getRGB());
 				} else {
 					im.setRGB(col, line, localColor);

File: src/net/sourceforge/plantuml/skin/UmlDiagramType.java
Patch:
@@ -39,7 +39,7 @@
 
 public enum UmlDiagramType {
 	SEQUENCE, STATE, CLASS, OBJECT, ACTIVITY, DESCRIPTION, COMPOSITE, FLOW, TIMING, BPM, NWDIAG, MINDMAP, WBS, WIRE,
-	HELP, GANTT, SALT, JSON, GIT, BOARD, YAML, HCL, EBNF, REGEX;
+	HELP, GANTT, SALT, JSON, GIT, BOARD, YAML, HCL, EBNF, REGEX, FILES;
 
 	public SName getStyleName() {
 		if (this == SEQUENCE)

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.9beta2";
+	private static final String version = "1.2023.9beta3";
 
 	public static String versionString() {
 		return version;

File: test/net/sourceforge/plantuml/PipeTest.java
Patch:
@@ -159,8 +159,8 @@ static List<TestCase> managePipeTestCases() {
 		// no links/invalid input => no pipemap to output (no error as of
 		// https://forum.plantuml.net/10049/2019-pipemap-diagrams-containing-links-give-zero-exit-code
 		// )
-		l.add(TestCase.of("-pipemap", "@startuml\na->b\n@enduml", "<map id=\"plantuml_map\" name=\"plantuml_map\">\n</map>\n\n", Verification.EXACT, false, false));
-		l.add(TestCase.of("-pipemap", "@startuml\na\n@enduml", "<map id=\"plantuml_map\" name=\"plantuml_map\">\n</map>\n\n", Verification.EXACT, false, false));
+		l.add(TestCase.of("-pipemap", "@startuml\na->b\n@enduml", "\n", Verification.EXACT, false, false));
+		l.add(TestCase.of("-pipemap", "@startuml\na\n@enduml", "\n", Verification.EXACT, false, false));
 
 		return l;
 	}

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -307,6 +307,7 @@ private void printAllSubgroups(Entity parent) {
 
 			if (diagram.isEmpty(g) && g.getGroupType() == GroupType.PACKAGE) {
 				g.muteToType(LeafType.EMPTY_PACKAGE);
+				printEntity(g);
 			} else {
 				printSingleGroup(g);
 			}

File: src/net/sourceforge/plantuml/style/parser/StyleParser.java
Patch:
@@ -183,6 +183,9 @@ private static String readValue(Inspector<StyleToken> ins) throws StyleParsingEx
 					result.append(' ');
 				result.append(current.getData());
 				ins.jump();
+			} else if (current.getType() == StyleTokenType.COMMA) {
+				result.append(current.getData());
+				ins.jump();
 			} else if (current.getType() == StyleTokenType.COLON) {
 				result.append(current.getData());
 				ins.jump();

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.9beta1";
+	private static final String version = "1.2023.9beta2";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/timingdiagram/command/TimeTickBuilder.java
Patch:
@@ -50,7 +50,7 @@ public class TimeTickBuilder {
 
 	public static IRegex expressionAtWithoutArobase(String name) {
 		return new RegexOr( //
-				new RegexLeaf(name + "CODE", ":([%pLN_.]+)([-+]\\d+)?"), //
+				new RegexLeaf(name + "CODE", ":([%pLN_.]+)([-+][.\\d]+)?"), //
 				new RegexLeaf(name + "DATE", "(\\d+)/(\\d+)/(\\d+)"), //
 				new RegexLeaf(name + "HOUR", "(\\d+):(\\d+):(\\d+)"), //
 				new RegexLeaf(name + "DIGIT", "(\\+?)(-?\\d+\\.?\\d*)"), //

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 
 	// Warning, "version" should be the same in gradle.properties and Version.java
 	// Any idea anyone how to magically synchronize those :-) ?
-	private static final String version = "1.2023.8";
+	private static final String version = "1.2023.9beta1";
 
 	public static String versionString() {
 		return version;

File: src/net/sourceforge/plantuml/tim/EaterTheme.java
Patch:
@@ -75,7 +75,7 @@ public void analyze(TContext context, TMemory memory) throws EaterException, Eat
 
 		final int x = this.name.toLowerCase().indexOf(" from ");
 		if (x != -1) {
-			final String fromTmp = this.name.substring(x + " from ".length());
+			final String fromTmp = this.name.substring(x + " from ".length()).trim();
 			this.from = context.applyFunctionsAndVariables(memory, getLineLocation(), fromTmp);
 			this.name = this.name.substring(0, x).trim();
 			this.context = context;

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -202,8 +202,6 @@ public DiagramDescription getDescription() {
 	@Override
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
-		// BUG42
-		// COMPRESSION
 		final StringBounder stringBounder = fileFormatOption.getDefaultStringBounder(getSkinParam());
 		TextBlock result = getTextBlock(stringBounder);
 		return createImageBuilder(fileFormatOption).drawable(result).write(os);
@@ -220,6 +218,8 @@ private TextBlock getTextBlock(final StringBounder stringBounder) {
 		swinlanes.computeSize(stringBounder);
 		TextBlock result = swinlanes;
 
+		// BUG42
+		// COMMENT TO DISABLE COMPRESS
 		result = CompressionXorYBuilder.build(CompressionMode.ON_X, result, stringBounder);
 		result = CompressionXorYBuilder.build(CompressionMode.ON_Y, result, stringBounder);
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/FtileHeightFixedCentered.java
Patch:
@@ -91,9 +91,9 @@ protected FtileGeometry calculateDimensionFtile(StringBounder stringBounder) {
 
 	private UTranslate getTranslate(StringBounder stringBounder) {
 		final XDimension2D dim = tile.calculateDimension(stringBounder);
-		if (dim.getHeight() > fixedHeight) {
+		if (dim.getHeight() > fixedHeight)
 			throw new IllegalStateException();
-		}
+
 		return UTranslate.dy((fixedHeight - dim.getHeight()) / 2);
 	}
 

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -491,10 +491,10 @@ public void setPortMembers(String port1, String port2) {
 		this.port1 = port1;
 		this.port2 = port2;
 		if (port1 != null)
-			((Entity) cl1).addPortShortName(port1);
+			cl1.addPortShortName(port1);
 
 		if (port2 != null)
-			((Entity) cl2).addPortShortName(port2);
+			cl2.addPortShortName(port2);
 
 	}
 

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNote.java
Patch:
@@ -136,7 +136,7 @@ protected CommandExecutionResult executeNow(final AbstractEntityDiagram system,
 	private CommandExecutionResult executeInternal(AbstractEntityDiagram diagram, RegexResult arg, BlocLines display)
 			throws NoSuchColorException {
 		final String idShort = arg.get("CODE", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));
 
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("Note already created: " + quark.getName());

File: src/net/sourceforge/plantuml/klimt/color/Colors.java
Patch:
@@ -80,9 +80,9 @@ private Colors() {
 	}
 
 	public Colors(String data, HColorSet set, ColorType mainType) throws NoSuchColorException {
-		data = StringUtils.goLowerCase(data);
+		data = StringUtils.goLowerCase(data).replaceAll("#", "");
 
-		for (final StringTokenizer st = new StringTokenizer(data, "#;"); st.hasMoreTokens();) {
+		for (final StringTokenizer st = new StringTokenizer(data, ";"); st.hasMoreTokens();) {
 			final String s = st.nextToken();
 			final int x = s.indexOf(':');
 			if (x == -1) {

File: src/net/sourceforge/plantuml/klimt/color/HColorSet.java
Patch:
@@ -50,6 +50,8 @@
 
 public class HColorSet {
 
+	private static final String COLOR_GRADIENT_SEPARATOR = "[-\\\\|/]";
+
 	private final static HColorSet singleton = new HColorSet();
 
 	private final Map<String, String> htmlNames = new HashMap<String, String>();
@@ -293,7 +295,7 @@ HColorScheme buildInternal() {
 
 	private Gradient gradientFromString(String s) {
 		// ::comment when __HAXE__
-		final Matcher2 m = MyPattern.cmpile("[-\\\\|/]").matcher(s);
+		final Matcher2 m = MyPattern.cmpile(COLOR_GRADIENT_SEPARATOR).matcher(s);
 		if (m.find()) {
 			final char sep = m.group(0).charAt(0);
 			final int idx = s.indexOf(sep);

File: src/net/sourceforge/plantuml/regex/MyPattern.java
Patch:
@@ -88,7 +88,8 @@ public static Pattern2 cmpile(final String p) {
 
 	private static String transform(String p) {
 		// Replace ReadLineReader.java
-		p = p.replace("%pLN", "\\p{L}0-9"); // Unicode Letter, digit
+		// p = p.replace("%pLN", "\\p{L}0-9"); // Unicode Letter, digit
+		p = p.replace("%pLN", "\\p{L}\\p{N}"); // Unicode Letter, digit
 		p = p.replace("%s", "\\s\u00A0"); // space
 		p = p.replace("%q", "'\u2018\u2019"); // quote
 		p = p.replace("%g", "\"\u201c\u201d"); // double quote

File: src/net/sourceforge/plantuml/svek/image/EntityImageObject.java
Patch:
@@ -242,7 +242,7 @@ private XDimension2D getNameAndSteretypeDimension(StringBounder stringBounder) {
 	}
 
 	public ShapeType getShapeType() {
-		if (((Entity) getEntity()).getPortShortNames().size() > 0)
+		if (getEntity().getPortShortNames().size() > 0)
 			return ShapeType.RECTANGLE_HTML_FOR_PORTS;
 
 		return ShapeType.RECTANGLE;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 3;
+		final int beta = 4;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/InstructionSwitch.java
Patch:
@@ -176,8 +176,8 @@ public Instruction getParent() {
 	}
 
 	public void endSwitch(LinkRendering nextLinkRenderer) {
-		// TODO Auto-generated method stub
-
+		if (this.current != null)
+			this.current.setSpecial(nextLinkRenderer);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/dedication/Dedications.java
Patch:
@@ -59,6 +59,9 @@ public class Dedications {
 			all.add(new DedicationSimple(load("dr_chet"), "Thank you, Dr. Chet. I wouldn't be where I am without you"));
 			all.add(new DedicationSimple(load("ben"), "Ben and Jen 2020"));
 			all.add(new DedicationSimple(load("baraye"), "baraye"));
+			all.add(new DedicationSimple(load("nothing"), "Nothing of value is ever easy"));
+			all.add(new DedicationSimple(load("friends"), "Have good friends and be a good friend to other people"));
+			all.add(new DedicationSimple(load("fatherson"), "By the time a man realizes that maybe his father was right, he usually has a son who thinks he is wrong"));
 			all.add(secret(5, "835ff5d643b58cd35a20db6480071d05751aa6a0e01da78662ceafd0161f3f5e", new BigInteger(
 					"1182423723677118831606503500858825217076578422970565964857326298418401529955036896808663335300684244453386039908536275400945824932191521017102701344437753036730900076162922741167523337650578479960119614237031234925702200473053235777")));
 			all.add(secret(3, "514816d583044efbd336882227deb822194ff63e3bdc3cf707a01f17770d5a6a", new BigInteger(

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/ErrorStatus.java
Patch:
@@ -51,7 +51,6 @@ public static ErrorStatus init() {
 
 	// public synchronized void goNoData() {
 	// this.noData = true;
-	//
 	// }
 
 	public synchronized void goWithError() {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 3;
+		final int beta = 4;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/BlockUml.java
Patch:
@@ -217,7 +217,7 @@ public String etag() {
 	// ::done
 
 	public long lastModified() {
-		return (Version.compileTime() / 1000L / 60) * 1000L * 60;
+		return (Version.compileTime() / 1000L / 60) * 1000L * 60 + Version.beta() * 1000L * 3600;
 	}
 
 	public boolean isStartDef(String name) {

File: src/net/sourceforge/plantuml/svek/image/AbstractEntityImageBorder.java
Patch:
@@ -63,8 +63,7 @@ public abstract class AbstractEntityImageBorder extends AbstractEntityImage {
 	protected abstract StyleSignatureBasic getSignature();
 
 	final protected Style getStyle() {
-		final Entity leaf = (Entity) getEntity();
-		final Stereotype stereotype = leaf.getStereotype();
+		final Stereotype stereotype = getEntity().getStereotype();
 		return getSignature().withTOBECHANGED(stereotype).getMergedStyle(getSkinParam().getCurrentStyleBuilder());
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/abel/Link.java
Patch:
@@ -177,10 +177,10 @@ public final void setInvis(boolean invis) {
 	}
 
 	public boolean isBetween(Entity cl1, Entity cl2) {
-		if (cl1.equals(this.cl1) && cl2.equals(this.cl2))
+		if (cl1 == this.cl1 && cl2 == this.cl2)
 			return true;
 
-		if (cl1.equals(this.cl2) && cl2.equals(this.cl1))
+		if (cl1 == this.cl2 && cl2 == this.cl1)
 			return true;
 
 		return false;

File: src/net/sourceforge/plantuml/statediagram/StateDiagram.java
Patch:
@@ -71,7 +71,8 @@ private boolean checkConcurrentStateOkInternal(Quark<Entity> code) {
 				&& getCurrentGroup() != existing.getParentContainer())
 			return false;
 
-		if (existing.getParentContainer().getGroupType() == GroupType.CONCURRENT_STATE
+		if (existing.getParentContainer() != null
+				&& existing.getParentContainer().getGroupType() == GroupType.CONCURRENT_STATE
 				&& getCurrentGroup() != existing.getParentContainer())
 			return false;
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageClass.java
Patch:
@@ -248,15 +248,15 @@ public Ports getPorts(StringBounder stringBounder) {
 	}
 
 	public ShapeType getShapeType() {
-		if (((Entity) getEntity()).getPortShortNames().size() > 0)
+		if (getEntity().getPortShortNames().size() > 0)
 			return ShapeType.RECTANGLE_HTML_FOR_PORTS;
 
 		return ShapeType.RECTANGLE;
 	}
 
 	@Override
 	public Margins getShield(StringBounder stringBounder) {
-		return ((Entity) getEntity()).getMargins();
+		return getEntity().getMargins();
 	}
 
 	public double getStartingX(StringBounder stringBounder, double y) {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -46,7 +46,7 @@ public class Version {
 	private static final int MAJOR_SEPARATOR = 1000000;
 
 	public static int version() {
-		return 1202304;
+		return 1202305;
 	}
 
 	public static int versionPatched() {
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 6;
+		final int beta = 0;
 		return beta;
 	}
 
@@ -95,7 +95,7 @@ public static String turningId() {
 	}
 
 	public static long compileTime() {
-		return 1678388629831L;
+		return 1679680470757L;
 	}
 
 	public static String compileTimeString() {

File: src/net/sourceforge/plantuml/svek/DotStringFactory.java
Patch:
@@ -415,6 +415,9 @@ public void solve(EntityFactory entityFactory, final String svg) throws IOExcept
 		}
 
 		for (Cluster cluster : bibliotekon.allCluster()) {
+			if (cluster.getGroup().isPacked())
+				continue;
+			
 			int idx = getClusterIndex(svg, cluster.getColor());
 			final int starting = idx;
 			final List<XPoint2D> points = svgResult.substring(starting).extractList(SvgResult.POINTS_EQUALS);

File: src/net/sourceforge/plantuml/svek/SvekResult.java
Patch:
@@ -72,7 +72,8 @@ public SvekResult(DotData dotData, DotStringFactory dotStringFactory) {
 	public void drawU(UGraphic ug) {
 
 		for (Cluster cluster : dotStringFactory.getBibliotekon().allCluster())
-			cluster.drawU(ug, dotData.getUmlDiagramType());
+			if (cluster.getGroup().isPacked() == false)
+				cluster.drawU(ug, dotData.getUmlDiagramType());
 
 		final Style style2 = getDefaultStyleDefinition(null)
 				.getMergedStyle(dotData.getSkinParam().getCurrentStyleBuilder());

File: src/net/sourceforge/plantuml/svek/AbstractEntityImage.java
Patch:
@@ -40,8 +40,6 @@
 import net.sourceforge.plantuml.abel.Entity;
 import net.sourceforge.plantuml.klimt.color.HColor;
 import net.sourceforge.plantuml.klimt.font.StringBounder;
-import net.sourceforge.plantuml.klimt.geom.MagneticBorder;
-import net.sourceforge.plantuml.klimt.geom.MagneticBorderNone;
 import net.sourceforge.plantuml.klimt.shape.AbstractTextBlock;
 import net.sourceforge.plantuml.stereo.Stereotype;
 import net.sourceforge.plantuml.style.ISkinParam;

File: src/net/sourceforge/plantuml/svek/DotStringFactory.java
Patch:
@@ -69,7 +69,7 @@
 
 public class DotStringFactory implements Moveable {
 
-	private final Bibliotekon bibliotekon = new Bibliotekon();
+	private final Bibliotekon bibliotekon;
 
 	private final ColorSequence colorSequence;
 	private final Cluster root;
@@ -92,6 +92,7 @@ public DotStringFactory(StringBounder stringBounder, DotData dotData) {
 		this.root = new Cluster(dotData.getEntityFactory().getDiagram(), colorSequence, skinParam,
 				dotData.getRootGroup());
 		this.current = root;
+		this.bibliotekon = new Bibliotekon(dotData.getLinks());
 	}
 
 	public DotStringFactory(StringBounder stringBounder, ICucaDiagram diagram) {
@@ -103,6 +104,7 @@ public DotStringFactory(StringBounder stringBounder, ICucaDiagram diagram) {
 		this.stringBounder = stringBounder;
 		this.root = new Cluster(diagram, colorSequence, skinParam, diagram.getEntityFactory().getRootGroup());
 		this.current = root;
+		this.bibliotekon = new Bibliotekon(diagram.getLinks());
 	}
 
 	public void addNode(SvekNode node) {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 5;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/jsondiagram/SmetanaForJson.java
Patch:
@@ -264,7 +264,7 @@ private ST_Agnode_s createNode(Globals zz, XDimension2D dim, boolean isArray, do
 
 	private String getDotLabelArray(double widthA, double widthB, double[] lineHeights) {
 		final int size = lineHeights.length;
-		final double height = 0;
+
 		final StringBuilder sb = new StringBuilder("");
 
 		for (int i = 0; i < size; i++) {

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -225,7 +225,7 @@ private void drawGroup(UGraphic ug, YMirror ymirror, Entity group, ST_Agraph_s g
 				cluster.setTitlePosition(new XPoint2D(x, Math.min(upperRight.getY(), lowerLeft.getY())));
 			}
 			JUtils.LOG2("cluster=" + cluster);
-			cluster.drawU(ug, diagram.getUmlDiagramType(), diagram.getSkinParam());
+			cluster.drawU(ug, diagram.getUmlDiagramType());
 			// ug.apply(new UTranslate(llx, lly)).apply(HColors.BLUE).draw(new
 			// URectangle(urx - llx, ury - lly));
 		} catch (Exception e) {

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMakerSvek.java
Patch:
@@ -102,10 +102,10 @@ else if (diagram.getUmlDiagramType() == UmlDiagramType.STATE)
 		if (fileFormatOption.isDebugSvek() && os instanceof NamedOutputStream)
 			basefile = ((NamedOutputStream) os).getBasefile();
 
-		TextBlock result = svek2.buildImage(basefile, diagram.getDotStringSkek());
+		TextBlock result = svek2.buildImage(basefile, diagram.getDotStringSkek(), fileFormatOption.isDebugSvek());
 		if (result instanceof GraphvizCrash) {
 			svek2 = createDotDataImageBuilder(DotMode.NO_LEFT_RIGHT_AND_XLABEL, stringBounder);
-			result = svek2.buildImage(basefile, diagram.getDotStringSkek());
+			result = svek2.buildImage(basefile, diagram.getDotStringSkek(), fileFormatOption.isDebugSvek());
 		}
 		// TODO There is something strange with the left margin of mainframe, I think
 		// because AnnotatedWorker is used here

File: src/net/sourceforge/plantuml/svek/GeneralImageBuilder.java
Patch:
@@ -389,7 +389,7 @@ private HColor getBackcolor() {
 		return style.value(PName.BackGroundColor).asColor(dotData.getSkinParam().getIHtmlColorSet());
 	}
 
-	public IEntityImage buildImage(BaseFile basefile, String dotStrings[]) {
+	public IEntityImage buildImage(BaseFile basefile, String dotStrings[], boolean fileFormatOptionIsDebugSvek) {
 		// ::comment when __CORE__
 		if (dotData.isDegeneratedWithFewEntities(0))
 			return new EntityImageSimpleEmpty(dotData.getSkinParam().getBackgroundColor());
@@ -446,7 +446,7 @@ public IEntityImage buildImage(BaseFile basefile, String dotStrings[]) {
 		if (dotStringFactory.illegalDotExe())
 			return error(dotStringFactory.getDotExe());
 
-		if (basefile == null && isSvekTrace()
+		if (basefile == null && (fileFormatOptionIsDebugSvek || isSvekTrace())
 				&& (SecurityUtils.getSecurityProfile() == SecurityProfile.UNSECURE
 						|| SecurityUtils.getSecurityProfile() == SecurityProfile.LEGACY
 						|| SecurityUtils.getSecurityProfile() == SecurityProfile.SANDBOX))

File: src/net/sourceforge/plantuml/svek/GroupMakerActivity.java
Patch:
@@ -131,7 +131,7 @@ public IEntityImage getImage() throws IOException, InterruptedException {
 			final Style style = getDefaultStyleDefinitionGroup().getMergedStyle(skinParam.getCurrentStyleBuilder());
 			final double shadowing = style.value(PName.Shadowing).asDouble();
 
-			return new InnerActivity(svek2.buildImage(null, new String[0]), borderColor, backColor, shadowing);
+			return new InnerActivity(svek2.buildImage(null, new String[0], false), borderColor, backColor, shadowing);
 		}
 
 		throw new UnsupportedOperationException(group.getGroupType().toString());

File: src/net/sourceforge/plantuml/svek/SvekResult.java
Patch:
@@ -72,7 +72,7 @@ public SvekResult(DotData dotData, DotStringFactory dotStringFactory) {
 	public void drawU(UGraphic ug) {
 
 		for (Cluster cluster : dotStringFactory.getBibliotekon().allCluster())
-			cluster.drawU(ug, dotData.getUmlDiagramType(), dotData.getSkinParam());
+			cluster.drawU(ug, dotData.getUmlDiagramType());
 
 		final Style style2 = getDefaultStyleDefinition(null)
 				.getMergedStyle(dotData.getSkinParam().getCurrentStyleBuilder());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 4;
+		final int beta = 5;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/PSystemBuilder.java
Patch:
@@ -74,6 +74,7 @@
 import net.sourceforge.plantuml.font.PSystemListFontsFactory;
 import net.sourceforge.plantuml.gitlog.GitDiagramFactory;
 import net.sourceforge.plantuml.hcl.HclDiagramFactory;
+import net.sourceforge.plantuml.help.HelpFactory;
 import net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;
 import net.sourceforge.plantuml.jsondiagram.JsonDiagramFactory;
 import net.sourceforge.plantuml.klimt.creole.legacy.PSystemCreoleFactory;
@@ -247,6 +248,7 @@ final public Diagram createPSystem(List<StringLocated> source, List<StringLocate
 		factories.add(new TimingDiagramFactory());
 
 		// ::comment when __CORE__
+		factories.add(new HelpFactory());
 		factories.add(new WireDiagramFactory());
 		// ::done
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 3;
+		final int beta = 4;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/EmbeddedDiagram.java
Patch:
@@ -80,8 +80,8 @@ public static String getEmbeddedType(CharSequence cs) {
 		if (s.equals(EMBEDDED_START))
 			return "uml";
 
-		if (s.equals(EMBEDDED_START))
-			return "uml";
+		if (s.equals(EMBEDDED_START + "ditaa"))
+			return "ditaa";
 
 		if (s.equals(EMBEDDED_START + "uml"))
 			return "uml";

File: src/gen/lib/common/shapes__c.java
Patch:
@@ -700,8 +700,8 @@ private static boolean poly_inside_w_(Globals zz, ST_inside_t inside_context, fi
 	} else {
 	    /* get point and node size adjusted for rankdir=LR */
 	    if (GD_flip(agraphof(n))) {
-UNSUPPORTED("dapvd4c0ggliaqcj08jvao221"); // 		ysize = ND_lw(n) + ND_rw(n);
-UNSUPPORTED("8t3g4d9acruono62leh5a8hxh"); // 		xsize = ND_ht(n);
+		zz.ysize = ND_lw(n) + ND_rw(n);
+		zz.xsize = ND_ht(n);
 	    } else {
 		zz.xsize = ND_lw(n) + ND_rw(n);
 		zz.ysize = ND_ht(n);

File: src/gen/lib/dotgen/mincross__c.java
Patch:
@@ -208,7 +208,8 @@ public static ST_adjmatrix_t new_matrix(int i, int j) {
     rv.ncols = j;
     // Arnaud 15/09/2022: the j+1 is needed in some case to avoid ArrayIndexOutOfBoundsException
     // Arnaud 02/03/2023: the j+3 is needed in some case to avoid ArrayIndexOutOfBoundsException
-    rv.data = new int[i][j+3]; // Or maybe new int[j][i] ?
+    // Arnaud 15/03/2023: the i+3 is needed in some case to avoid ArrayIndexOutOfBoundsException when LR direction
+    rv.data = new int[i+3][j+3]; // Or maybe new int[j][i] ?
     return rv;
 } finally {
 LEAVING("756bre1tpxb1tq68p7xhkrxkc","new_matrix");

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/ext/plantuml/com/ctreber/aclib/gui/MOBoolean.java
Patch:
@@ -10,6 +10,7 @@
 public class MOBoolean extends MonitoredObject
 {
   // ::remove folder when __CORE__
+  // ::remove folder when __MIT__
   private boolean fBoolean;
 
   public MOBoolean()

File: src/net/atmp/CucaDiagram.java
Patch:
@@ -189,7 +189,7 @@ final public Entity reallyCreateLeaf(Quark<Entity> ident, Display display, LeafT
 
 	}
 
-	final public Quark<Entity> quarkInContext(String full, boolean specialForCreateClass) {
+	final public Quark<Entity> quarkInContext(boolean reuseExistingChild, String full) {
 		final String sep = getNamespaceSeparator();
 		if (sep == null) {
 			final Quark<Entity> result = entityFactory.firstWithName(full);
@@ -203,7 +203,7 @@ final public Quark<Entity> quarkInContext(String full, boolean specialForCreateC
 			return entityFactory.root().child(full.substring(sep.length()));
 		final int x = full.indexOf(sep);
 		if (x == -1) {
-			if (specialForCreateClass == false && entityFactory.countByName(full) == 1) {
+			if (reuseExistingChild && entityFactory.countByName(full) == 1) {
 				final Quark<Entity> byName = entityFactory.firstWithName(full);
 				assert byName != null;
 				if (byName != currentQuark)

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandLinkLongActivity.java
Patch:
@@ -176,10 +176,10 @@ protected CommandExecutionResult executeNow(final ActivityDiagram diagram, BlocL
 			partition = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(partition);
 		}
 		if (partition != null) {
-			final Quark<Entity> idNewLong = diagram.quarkInContext(diagram.cleanId(partition), false);
+			final Quark<Entity> idNewLong = diagram.quarkInContext(true, diagram.cleanId(partition));
 			diagram.gotoGroup(idNewLong, Display.getWithNewlines(partition), GroupType.PACKAGE);
 		}
-		final Quark<Entity> ident = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> ident = diagram.quarkInContext(true, diagram.cleanId(idShort));
 
 		Entity entity2 = ident.getData();
 		if (entity2 == null)

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandPartition.java
Patch:
@@ -83,7 +83,7 @@ private static ColorParser color() {
 	@Override
 	protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocation location, RegexResult arg)
 			throws NoSuchColorException {
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(arg.get("NAME", 0)), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(arg.get("NAME", 0)));
 
 		diagram.gotoGroup(quark, Display.getWithNewlines(quark.getName()), GroupType.PACKAGE);
 		final Entity p = diagram.getCurrentGroup();

File: src/net/sourceforge/plantuml/classdiagram/command/CommandAddMethod.java
Patch:
@@ -70,7 +70,7 @@ static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 		Entity entity = quark.getData();
 		if (entity == null)
 			entity = diagram.reallyCreateLeaf(quark, Display.getWithNewlines(quark), LeafType.CLASS, null);

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -139,7 +139,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 
 		final String stereo = arg.get("STEREO", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, idShort);
 
 		Entity entity = quark.getData();
 

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClassMultilines.java
Patch:
@@ -167,7 +167,7 @@ protected CommandExecutionResult executeNow(ClassDiagram diagram, BlocLines line
 
 		final String stereotype = line0.get("STEREO", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, idShort);
 
 		Entity entity = quark.getData();
 
@@ -278,7 +278,7 @@ public static void manageExtends(String keyword, ClassDiagram diagram, RegexResu
 			for (String s : codes.split(",")) {
 				final String idShort = StringUtils.trin(s);
 
-				final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), true);
+				final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));
 				Entity cl2 = quark.getData();
 				if (cl2 == null)
 					cl2 = diagram.reallyCreateLeaf(quark, Display.getWithNewlines(quark.getName()), type2, null);
@@ -313,7 +313,7 @@ private Entity executeArg0(ClassDiagram diagram, RegexResult line0) throws NoSuc
 
 		final String stereotype = line0.get("STEREO", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, idShort);
 
 		Display display = Display.getWithNewlines(displayString);
 		if (Display.isNull(display))

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateElementFull2.java
Patch:
@@ -206,7 +206,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 
 		final String idShort = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(codeRaw);
 		final Display display = Display.getWithNewlines(displayRaw == null ? idShort : displayRaw);
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, idShort);
 		Entity entity = quark.getData();
 		if (entity == null)
 			entity = diagram.reallyCreateLeaf(quark, display, type, usymbol);

File: src/net/sourceforge/plantuml/classdiagram/command/CommandDiamondAssociation.java
Patch:
@@ -65,7 +65,7 @@ static IRegex getRegexConcat() {
 	@Override
 	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg) {
 		final String idShort = arg.get("CODE", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("Already existing : " + quark.getName());

File: src/net/sourceforge/plantuml/classdiagram/command/CommandHideShowByGender.java
Patch:
@@ -144,7 +144,7 @@ private CommandExecutionResult executeDescriptionDiagram(DescriptionDiagram diag
 		} else if (arg1.startsWith("<<")) {
 			gender = EntityGenderUtils.byStereotype(arg1);
 		} else {
-			final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(arg1), false);
+			final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(arg1));
 			if (quark.getData() == null)
 				return CommandExecutionResult.error("No such element " + quark.getName());
 			final Entity entity = quark.getData();
@@ -189,7 +189,7 @@ private CommandExecutionResult executeClassDiagram(AbstractClassOrObjectDiagram
 			gender = EntityGenderUtils.byStereotype(arg1);
 		} else {
 			arg1 = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg1);
-			final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(arg1), false);
+			final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(arg1));
 			Entity entity = quark.getData();
 			if (entity == null)
 				return CommandExecutionResult.error("No such element " + quark.getName());

File: src/net/sourceforge/plantuml/classdiagram/command/CommandStereotype.java
Patch:
@@ -69,7 +69,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		final String name = arg.get("NAME", 0);
 		final String stereotype = arg.get("STEREO", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(name), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(name));
 		final Entity entity = quark.getData();
 		if (entity == null)
 			return CommandExecutionResult.error("No such class " + quark.getName());

File: src/net/sourceforge/plantuml/classdiagram/command/CommandUrl.java
Patch:
@@ -75,7 +75,7 @@ static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineLocation location, RegexResult arg) {
 		final String idShort = arg.get("CODE", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 		final Entity entity = quark.getData();
 		if (entity == null)
 			return CommandExecutionResult.error(quark.getName() + " does not exist");

File: src/net/sourceforge/plantuml/command/CommandNamespace.java
Patch:
@@ -82,7 +82,7 @@ private static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));
 		final CommandExecutionResult status = diagram.gotoGroup(quark, Display.getWithNewlines(quark.getName()),
 				GroupType.PACKAGE);
 		if (status.isOk() == false)

File: src/net/sourceforge/plantuml/command/CommandNamespace2.java
Patch:
@@ -86,7 +86,7 @@ private static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation location, RegexResult arg)
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));
 
 		final String disp = arg.getLazzy("DISPLAY", 0);
 		final Display display = Display.getWithNewlines(disp);

File: src/net/sourceforge/plantuml/command/CommandNamespaceEmpty.java
Patch:
@@ -82,7 +82,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 			throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("Already exists " + quark.getName());
 

File: src/net/sourceforge/plantuml/command/CommandPackage.java
Patch:
@@ -123,10 +123,10 @@ protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineL
 
 		final Quark<Entity> quark;
 		if (arg.get("AS", 0) == null) {
-			quark = diagram.quarkInContext(diagram.cleanId(name), true);
+			quark = diagram.quarkInContext(false, diagram.cleanId(name));
 			display = quark.getName();
 		} else {
-			quark = diagram.quarkInContext(diagram.cleanId(arg.get("AS", 0)), true);
+			quark = diagram.quarkInContext(false, diagram.cleanId(arg.get("AS", 0)));
 			display = name;
 		}
 

File: src/net/sourceforge/plantuml/command/CommandPackageEmpty.java
Patch:
@@ -94,7 +94,7 @@ protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineL
 			display = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.get("DISPLAY", 0));
 			idShort = arg.get("CODE", 0);
 		}
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(idShort));
 		final CommandExecutionResult status = diagram.gotoGroup(quark, Display.getWithNewlines(display),
 				GroupType.PACKAGE);
 		if (status.isOk() == false)

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNote.java
Patch:
@@ -136,7 +136,7 @@ protected CommandExecutionResult executeNow(final AbstractEntityDiagram system,
 	private CommandExecutionResult executeInternal(AbstractEntityDiagram diagram, RegexResult arg, BlocLines display)
 			throws NoSuchColorException {
 		final String idShort = arg.get("CODE", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("Note already created: " + quark.getName());

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNoteActivity.java
Patch:
@@ -118,7 +118,7 @@ public final CommandExecutionResult executeNow(final ActivityDiagram diagram, Bl
 					strings = strings.subList(1, strings.size());
 
 				final String codeString = diagram.getUniqueSequence("GMN");
-				final Quark<Entity> quark = diagram.quarkInContext(codeString, false);
+				final Quark<Entity> quark = diagram.quarkInContext(true, codeString);
 				final Entity note = diagram.reallyCreateLeaf(quark, strings, LeafType.NOTE, null);
 				if (url != null)
 					note.addUrl(url);
@@ -135,7 +135,7 @@ public Command<ActivityDiagram> createSingleLine() {
 			protected CommandExecutionResult executeArg(final ActivityDiagram diagram, LineLocation location,
 					RegexResult arg) throws NoSuchColorException {
 				final String tmp = diagram.getUniqueSequence("GN");
-				final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(tmp), false);
+				final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(tmp));
 
 				final Entity note = diagram.createNote(quark, tmp, Display.getWithNewlines(arg.get("NOTE", 0)));
 				return executeInternal(diagram, arg, note);

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNoteOnEntity.java
Patch:
@@ -219,7 +219,7 @@ private CommandExecutionResult executeInternal(RegexResult line0, AbstractEntity
 				return CommandExecutionResult.error("Nothing to note to");
 
 		} else {
-			final Quark<Entity> quark = diagram.quarkInContext(idShort, false);
+			final Quark<Entity> quark = diagram.quarkInContext(true, idShort);
 			cl1 = quark.getData();
 			if (cl1 == null)
 				return CommandExecutionResult.error("Not known: " + idShort);
@@ -243,7 +243,7 @@ private CommandExecutionResult executeInternal(RegexResult line0, AbstractEntity
 		}
 
 		final String tmp = diagram.getUniqueSequence("GMN");
-		final Quark<Entity> quark = diagram.quarkInContext(tmp, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, tmp);
 		final Entity note = diagram.reallyCreateLeaf(quark, strings.toDisplay(), LeafType.NOTE, null);
 
 		if (stereotypeString != null)

File: src/net/sourceforge/plantuml/command/note/CommandFactoryTipOnEntity.java
Patch:
@@ -171,7 +171,7 @@ private CommandExecutionResult executeInternal(RegexResult line0, AbstractEntity
 		final String idShort = line0.get("ENTITY", 0);
 		final String member = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(line0.get("ENTITY", 1));
 
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, idShort);
 		final Entity cl1 = quark.getData();
 		if (cl1 == null)
 			return CommandExecutionResult.error("Nothing to note to");
@@ -180,7 +180,7 @@ private CommandExecutionResult executeInternal(RegexResult line0, AbstractEntity
 				.withRankdir(diagram.getSkinParam().getRankdir());
 
 		final String tmp = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(idShort + "$$$" + position.name());
-		final Quark<Entity> identTip = diagram.quarkInContext(tmp, false);
+		final Quark<Entity> identTip = diagram.quarkInContext(true, tmp);
 		Entity tips = identTip.getData();
 
 		if (tips == null) {

File: src/net/sourceforge/plantuml/compositediagram/command/CommandCreateBlock.java
Patch:
@@ -74,7 +74,7 @@ static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg) {
 		String display = arg.get("DISPLAY", 0);
 		final String idShort = arg.get("CODE", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, idShort);
 		if (display == null)
 			display = quark.getName();
 

File: src/net/sourceforge/plantuml/compositediagram/command/CommandCreatePackageBlock.java
Patch:
@@ -75,7 +75,7 @@ protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocati
 
 		String display = arg.get("DISPLAY", 0);
 		final String idShort = arg.get("CODE", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, idShort);
 		if (display == null)
 			display = quark.getName();
 

File: src/net/sourceforge/plantuml/compositediagram/command/CommandLinkBlock.java
Patch:
@@ -79,8 +79,8 @@ static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(CompositeDiagram diagram, LineLocation location, RegexResult arg) {
 		final String ent1 = arg.get("ENT1", 0);
 		final String ent2 = arg.get("ENT2", 0);
-		final Quark<Entity> quark1 = diagram.quarkInContext(diagram.cleanId(ent1), false);
-		final Quark<Entity> quark2 = diagram.quarkInContext(diagram.cleanId(ent2), false);
+		final Quark<Entity> quark1 = diagram.quarkInContext(true, diagram.cleanId(ent1));
+		final Quark<Entity> quark2 = diagram.quarkInContext(true, diagram.cleanId(ent2));
 		final Entity cl1 = quark1.getData();
 		if (cl1 == null)
 			return CommandExecutionResult.error("No such element " + quark1.getName());

File: src/net/sourceforge/plantuml/descdiagram/CommandCreateDomain.java
Patch:
@@ -94,7 +94,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 		final GroupType type = typeString.equalsIgnoreCase("domain") ? GroupType.DOMAIN : GroupType.REQUIREMENT;
 		final LeafType type2 = typeString.equalsIgnoreCase("domain") ? LeafType.DOMAIN : LeafType.REQUIREMENT;
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(codeString), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(codeString));
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("Object already exists : " + codeString);
 

File: src/net/sourceforge/plantuml/descdiagram/command/CommandArchimate.java
Patch:
@@ -123,7 +123,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 			throws NoSuchColorException {
 		final String codeRaw = arg.getLazzy("CODE", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(codeRaw), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(codeRaw));
 
 		String display = StringUtils.eventuallyRemoveStartingAndEndingDoubleQuote(arg.getLazzy("DISPLAY", 0));
 		if (display == null)

File: src/net/sourceforge/plantuml/descdiagram/command/CommandArchimateMultilines.java
Patch:
@@ -104,7 +104,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL
 		final RegexResult line0 = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());
 		final String codeRaw = line0.getLazzy("CODE", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(codeRaw), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(codeRaw));
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("Already exists " + quark.getName());
 

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementFull.java
Patch:
@@ -225,7 +225,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 
 		}
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(codeRaw), false);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(codeRaw));
 
 		if (diagram.isGroup(quark))
 			return CommandExecutionResult.error("This element (" + quark.getName() + ") is already defined");

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementMultilines.java
Patch:
@@ -162,7 +162,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL
 
 		final String stereotype = line0.get("STEREO", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 		Entity result = quark.getData();
 		if (quark.getData() == null)
 			result = diagram.reallyCreateLeaf(quark, display, type, usymbol);

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementParenthesis.java
Patch:
@@ -149,7 +149,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		type = LeafType.DESCRIPTION;
 		usymbol = USymbols.fromString(symbol, diagram.getSkinParam());
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(codeRaw), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(codeRaw));
 		if (quark.getData() != null)
 			return CommandExecutionResult.error("This element (" + quark.getName() + ") is already defined");
 

File: src/net/sourceforge/plantuml/descdiagram/command/CommandLinkElement.java
Patch:
@@ -302,7 +302,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 	private Entity getDummy(DescriptionDiagram diagram, String ident) {
 		if (ident.startsWith("()")) {
 			ident = diagram.cleanId(ident);
-			final Quark<Entity> quark = diagram.quarkInContext(ident, false);
+			final Quark<Entity> quark = diagram.quarkInContext(true, ident);
 			if (quark.getData() != null)
 				return quark.getData();
 			return diagram.reallyCreateLeaf(quark, Display.getWithNewlines(quark.getName()), LeafType.DESCRIPTION,
@@ -312,7 +312,7 @@ private Entity getDummy(DescriptionDiagram diagram, String ident) {
 		final char codeChar = ident.length() > 2 ? ident.charAt(0) : 0;
 		final boolean endWithSlash = ident.endsWith("/");
 		ident = diagram.cleanId(ident);
-		final Quark<Entity> quark = diagram.quarkInContext(ident, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, ident);
 
 		if (diagram.isGroup(quark))
 			return quark.getData();

File: src/net/sourceforge/plantuml/descdiagram/command/CommandPackageWithUSymbol.java
Patch:
@@ -150,7 +150,7 @@ protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineL
 
 		}
 
-		final Quark<Entity> ident = diagram.quarkInContext(diagram.cleanId(idShort), true);
+		final Quark<Entity> ident = diagram.quarkInContext(false, diagram.cleanId(idShort));
 
 		final CommandExecutionResult status = diagram.gotoGroup(ident, Display.getWithNewlines(display),
 				GroupType.PACKAGE);

File: src/net/sourceforge/plantuml/objectdiagram/AbstractClassOrObjectDiagram.java
Patch:
@@ -225,7 +225,7 @@ public Association(int mode, Entity entity1, Entity entity2, Entity associed) {
 			if (entity1.getQuark().getParent() == entity2.getQuark().getParent())
 				quark = entity1.getQuark().getParent().child(idShort);
 			else
-				quark = quarkInContext(cleanId(idShort), false);
+				quark = quarkInContext(true, cleanId(idShort));
 			point = reallyCreateLeaf(quark, Display.getWithNewlines(""), LeafType.POINT_FOR_ASSOCIATION, null);
 
 		}

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandAddData.java
Patch:
@@ -68,7 +68,7 @@ static IRegex getRegexConcat() {
 	protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram, LineLocation location,
 			RegexResult arg) throws NoSuchColorException {
 		final String name = arg.get("NAME", 0);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(name), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(name));
 		final Entity entity = quark.getData();
 		if (entity == null)
 			return CommandExecutionResult.error("No such entity " + quark.getName());

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateEntityObject.java
Patch:
@@ -81,7 +81,7 @@ protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram
 			RegexResult arg) throws NoSuchColorException {
 		final String idShort = arg.get("NAME", 1);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 		final String displayString = arg.get("NAME", 0);
 		final String stereotype = arg.get("STEREO", 0);
 

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateEntityObjectMultilines.java
Patch:
@@ -108,7 +108,7 @@ protected CommandExecutionResult executeNow(AbstractClassOrObjectDiagram diagram
 
 	private Entity executeArg0(AbstractClassOrObjectDiagram diagram, RegexResult line0) throws NoSuchColorException {
 		final String name = line0.get("NAME", 1);
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(name), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(name));
 
 		final String displayString = line0.get("NAME", 0);
 		final String stereotype = line0.get("STEREO", 0);

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateJson.java
Patch:
@@ -144,7 +144,7 @@ private String getJsonString(BlocLines lines) {
 	private Entity executeArg0(AbstractEntityDiagram diagram, RegexResult line0) throws NoSuchColorException {
 		final String name = line0.get("NAME", 1);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(name), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(name));
 		if (quark.getData() != null)
 			return null;
 		final String displayString = line0.get("NAME", 0);

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateJsonSingleLine.java
Patch:
@@ -113,7 +113,7 @@ private JsonValue getJsonValue(String data) {
 	private Entity executeArg0(AbstractClassOrObjectDiagram diagram, RegexResult line0) throws NoSuchColorException {
 		final String name = line0.get("NAME", 1);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(name), true);
+		final Quark<Entity> quark = diagram.quarkInContext(false, diagram.cleanId(name));
 		if (quark.getData() != null)
 			return null;
 

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateMap.java
Patch:
@@ -122,7 +122,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL
 				final int x = line.indexOf(linkStr);
 				final String key = line.substring(0, x).trim();
 				final String dest = line.substring(x + linkStr.length()).trim();
-				final Quark<Entity> ident2 = diagram.quarkInContext(dest, false);
+				final Quark<Entity> ident2 = diagram.quarkInContext(true, dest);
 				final Entity entity2 = ident2.getData();
 				if (entity2 == null)
 					return CommandExecutionResult.error("No such entity " + ident2.getName());
@@ -141,7 +141,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL
 	private Entity executeArg0(AbstractEntityDiagram diagram, RegexResult line0) throws NoSuchColorException {
 		final String name = line0.get("NAME", 1);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(name), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(name));
 		final String displayString = line0.get("NAME", 0);
 		final String stereotype = line0.get("STEREO", 0);
 

File: src/net/sourceforge/plantuml/statediagram/command/CommandAddField.java
Patch:
@@ -76,7 +76,7 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 		if (diagram.getCurrentGroup().getName().equals(codeString))
 			quark = diagram.getCurrentGroup().getQuark();
 		else
-			quark = diagram.quarkInContext(diagram.cleanId(codeString), false);
+			quark = diagram.quarkInContext(true, diagram.cleanId(codeString));
 
 		Entity entity = quark.getData();
 		if (entity == null)

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreatePackage2.java
Patch:
@@ -110,7 +110,7 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 			throws NoSuchColorException {
 
 		final String idShort = getNotNull(arg, "CODE1", "CODE2");
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 		String display = getNotNull(arg, "DISPLAY1", "DISPLAY2");
 		if (display == null)
 			display = quark.getName();

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreatePackageState.java
Patch:
@@ -115,7 +115,7 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 			throws NoSuchColorException {
 
 		final String idShort = getNotNull(arg, "CODE1", "CODE2");
-		final Quark<Entity> quark = diagram.quarkInContext(idShort, false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, idShort);
 
 		final String display = getNotNull(arg, "DISPLAY1", "DISPLAY2");
 

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreateState.java
Patch:
@@ -113,7 +113,7 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 			throws NoSuchColorException {
 		final String idShort = arg.getLazzy("CODE", 0);
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(idShort), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(idShort));
 
 		String display = arg.getLazzy("DISPLAY", 0);
 		if (display == null)

File: src/net/sourceforge/plantuml/statediagram/command/CommandLinkStateCommon.java
Patch:
@@ -167,7 +167,7 @@ private Entity getEntity(StateDiagram diagram, final String code) {
 
 		if (code.startsWith("=") && code.endsWith("=")) {
 			final String codeString1 = removeEquals(code);
-			final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(codeString1), false);
+			final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(codeString1));
 			if (quark.getData() != null)
 				return quark.getData();
 			return diagram.reallyCreateLeaf(quark, Display.getWithNewlines(quark), LeafType.SYNCHRO_BAR, null);
@@ -176,7 +176,7 @@ private Entity getEntity(StateDiagram diagram, final String code) {
 		if (diagram.getCurrentGroup().getName().equals(code))
 			return diagram.getCurrentGroup();
 
-		final Quark<Entity> quark = diagram.quarkInContext(diagram.cleanId(code), false);
+		final Quark<Entity> quark = diagram.quarkInContext(true, diagram.cleanId(code));
 		if (diagram.checkConcurrentStateOk(quark) == false)
 			return null;
 

File: src/net/sourceforge/plantuml/BlockUml.java
Patch:
@@ -89,7 +89,7 @@ public Set<FileWithSuffix> getIncluded() {
 	// ::comment when __CORE__
 	public String getEncodedUrl() throws IOException {
 		final Transcoder transcoder = TranscoderUtil.getDefaultTranscoder();
-		final String source = getDiagram().getSource().getPlainString();
+		final String source = getDiagram().getSource().getPlainString("\n");
 		final String encoded = transcoder.encode(source);
 		return encoded;
 	}

File: src/net/sourceforge/plantuml/UmlDiagram.java
Patch:
@@ -223,7 +223,7 @@ public String getFlashData() {
 		if (source == null)
 			return "";
 
-		return source.getPlainString();
+		return source.getPlainString("\n");
 	}
 
 	static private List<String> getFailureText1(Throwable exception, String graphvizVersion, String textDiagram) {

File: src/net/sourceforge/plantuml/ditaa/PSystemDitaa.java
Patch:
@@ -109,7 +109,7 @@ public DiagramDescription getDescription() {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat)
 			throws IOException {
 		if (fileFormat.getFileFormat() == FileFormat.ATXT) {
-			os.write(getSource().getPlainString().getBytes());
+			os.write(getSource().getPlainString(BackSlash.lineSeparator()).getBytes());
 			return ImageDataSimple.ok();
 		}
 

File: src/net/sourceforge/plantuml/project/GanttDiagram.java
Patch:
@@ -113,6 +113,7 @@
 import net.sourceforge.plantuml.style.Style;
 import net.sourceforge.plantuml.style.StyleSignatureBasic;
 import net.sourceforge.plantuml.svek.GraphvizCrash;
+import net.sourceforge.plantuml.text.BackSlash;
 
 public class GanttDiagram extends TitledDiagram implements ToTaskDraw, WithSprite {
 
@@ -256,7 +257,8 @@ public void drawU(UGraphic ug) {
 
 				} catch (Throwable t) {
 					Logme.error(t);
-					final UDrawable crash = new GraphvizCrash(getSource().getPlainString(), false, t);
+					final UDrawable crash = new GraphvizCrash(getSource().getPlainString(BackSlash.lineSeparator()),
+							false, t);
 					crash.drawU(ug);
 
 				}

File: test/nonreg/simple/A0000_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0000_TestResult {
 DPI: 96
 dimension: [ 185.5185 ; 113.0000 ]
 scaleFactor: 1.0000
-seed: 5605069588648637213
+seed: 7067927655347766828
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: test/nonreg/simple/A0001_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0001_TestResult {
 DPI: 96
 dimension: [ 296.7331 ; 285.0000 ]
 scaleFactor: 1.0000
-seed: -1212656935193060805
+seed: 1230863714434809965
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: test/nonreg/simple/A0002_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0002_TestResult {
 DPI: 96
 dimension: [ 660.1096 ; 994.5000 ]
 scaleFactor: 1.0000
-seed: -9181376250803721714
+seed: -2543044357581316352
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: test/nonreg/simple/A0003_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0003_TestResult {
 DPI: 96
 dimension: [ 367.7447 ; 76.0000 ]
 scaleFactor: 2.0000
-seed: -6040919743496430850
+seed: 2061842952546013393
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: test/nonreg/simple/A0004_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0004_TestResult {
 DPI: 96
 dimension: [ 550.6156 ; 680.0000 ]
 scaleFactor: 1.0000
-seed: 6985134683589840646
+seed: -1093380870564056548
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: test/nonreg/simple/A0005_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0005_TestResult {
 DPI: 96
 dimension: [ 134.0935 ; 286.0000 ]
 scaleFactor: 1.0000
-seed: 1145907385572836867
+seed: -2035695693520640443
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: test/nonreg/simple/A0006_TestResult.java
Patch:
@@ -7,7 +7,7 @@ public class A0006_TestResult {
 DPI: 96
 dimension: [ 149.3989 ; 231.0000 ]
 scaleFactor: 1.0000
-seed: -2375783792654745998
+seed: -967197275408610478
 svgLinkTarget: _top
 hoverPathColorRGB: null
 preserveAspectRatio: none

File: src/net/sourceforge/plantuml/decoration/symbol/USymbols.java
Patch:
@@ -77,8 +77,7 @@ private static USymbol record(String code, USymbol symbol) {
 	public final static USymbol COLLECTIONS = record("COLLECTIONS", new USymbolCollections());
 	public final static USymbol AGENT = record("AGENT", new USymbolRectangle(SName.agent));
 	public final static USymbol ACTOR_STICKMAN = record("ACTOR_STICKMAN", new USymbolActor(ActorStyle.STICKMAN));
-	public final static USymbol ACTOR_STICKMAN_BUSINESS = record("ACTOR_STICKMAN_BUSINESS",
-			new USymbolActor(ActorStyle.STICKMAN_BUSINESS));
+	public final static USymbol ACTOR_STICKMAN_BUSINESS = record("ACTOR_STICKMAN_BUSINESS", new USymbolActorBusiness());
 	public final static USymbol ACTOR_AWESOME = record("ACTOR_AWESOME", new USymbolActor(ActorStyle.AWESOME));
 	public final static USymbol ACTOR_HOLLOW = record("ACTOR_HOLLOW", new USymbolActor(ActorStyle.HOLLOW));
 	public final static USymbol USECASE = null;

File: src/net/sourceforge/plantuml/klimt/font/FontPosition.java
Patch:
@@ -48,8 +48,6 @@ public int getSpace() {
 		return 0;
 	}
 
-	// ::comment when __HAXE__
-
 	public UFont mute(UFont font) {
 		if (this == NORMAL)
 			return font;
@@ -61,6 +59,7 @@ public UFont mute(UFont font) {
 		return font.withSize((float) size);
 	}
 
+	// ::comment when __HAXE__
 	public String getHtmlTag() {
 		if (this == EXPOSANT)
 			return "sup";

File: src/net/sourceforge/plantuml/skin/ActorStyle.java
Patch:
@@ -51,6 +51,8 @@ else if (this == AWESOME)
 			return USymbols.ACTOR_AWESOME;
 		else if (this == HOLLOW)
 			return USymbols.ACTOR_HOLLOW;
+		else if (this == STICKMAN_BUSINESS)
+			return USymbols.ACTOR_STICKMAN_BUSINESS;
 
 		throw new IllegalStateException();
 	}

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -49,6 +49,7 @@ public enum SName {
 	boundary, //
 	box, //
 	boxless, //
+	business, //
 	caption, //
 	card, //
 	circle, //

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -82,7 +82,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/braille/UGraphicBraille.java
Patch:
@@ -66,11 +66,13 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	public UGraphicBraille(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder) {
-		copy(defaultBackground, colorMapper, stringBounder, new BrailleGrid(QUANTA));
+		super(stringBounder);
+		copy(defaultBackground, colorMapper, new BrailleGrid(QUANTA));
 		register();
 	}
 
 	private UGraphicBraille(UGraphicBraille other) {
+		super(other.getStringBounder());
 		copy(other);
 		register();
 	}

File: src/net/sourceforge/plantuml/klimt/drawing/UGraphicNull.java
Patch:
@@ -53,11 +53,13 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	private UGraphicNull(UGraphicNull other) {
+		super(FileFormat.PNG.getDefaultStringBounder());
 		copy(other);
 	}
 
 	public UGraphicNull() {
-		copy(HColors.BLACK, ColorMapper.IDENTITY, FileFormat.PNG.getDefaultStringBounder(), "foo");
+		super(FileFormat.PNG.getDefaultStringBounder());
+		copy(HColors.BLACK, ColorMapper.IDENTITY, "foo");
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/klimt/drawing/eps/UGraphicEps.java
Patch:
@@ -67,14 +67,16 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	protected UGraphicEps(UGraphicEps other) {
+		super(other.getStringBounder());
 		copy(other);
 		this.strategyTOBEREMOVED = other.strategyTOBEREMOVED;
 		register();
 	}
 
 	public UGraphicEps(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder,
 			EpsStrategy strategy) {
-		copy(defaultBackground, colorMapper, stringBounder, strategy.creatEpsGraphics());
+		super(stringBounder);
+		copy(defaultBackground, colorMapper, strategy.creatEpsGraphics());
 		this.strategyTOBEREMOVED = strategy;
 		register();
 	}

File: src/net/sourceforge/plantuml/klimt/drawing/g2d/UGraphicG2d.java
Patch:
@@ -112,6 +112,7 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	private UGraphicG2d(UGraphicG2d other) {
+		super(other.getStringBounder());
 		copy(other);
 		// ::comment when __CORE__
 		this.hasAffineTransform = other.hasAffineTransform;
@@ -141,7 +142,8 @@ public UGraphicG2d(HColor defaultBackground, ColorMapper colorMapper, StringBoun
 		// StringBounder stringBounder, Graphics2D g2d,
 		// double dpiFactor, double dx, double dy, FileFormat format) {
 		// ::done
-		copy(defaultBackground, colorMapper, stringBounder, g2d);
+		super(stringBounder);
+		copy(defaultBackground, colorMapper, g2d);
 		this.format = format;
 		this.dpiFactor = dpiFactor;
 		if (dpiFactor != 1.0)

File: src/net/sourceforge/plantuml/klimt/drawing/html5/UGraphicHtml5.java
Patch:
@@ -56,7 +56,8 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	public UGraphicHtml5(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder) {
-		copy(defaultBackground, colorMapper, stringBounder, new Html5Drawer());
+		super(stringBounder);
+		copy(defaultBackground, colorMapper, new Html5Drawer());
 		registerDriver(URectangle.class, new DriverRectangleHtml5(this));
 		// registerDriver(UText.class, new DriverTextEps(imDummy, this, strategy));
 		ignoreShape(UText.class);

File: src/net/sourceforge/plantuml/klimt/drawing/svg/DriverTextSvg.java
Patch:
@@ -51,12 +51,14 @@
 import net.sourceforge.plantuml.klimt.shape.UText;
 
 public class DriverTextSvg implements UDriver<UText, SvgGraphics> {
-    // ::remove file when __HAXE__
+	// ::remove file when __HAXE__
 
 	private final StringBounder stringBounder;
 	private final ClipContainer clipContainer;
 
 	public DriverTextSvg(StringBounder stringBounder, ClipContainer clipContainer) {
+		if (stringBounder == null)
+			System.err.println("stringBounder=" + stringBounder);
 		this.stringBounder = stringBounder;
 		this.clipContainer = clipContainer;
 	}

File: src/net/sourceforge/plantuml/klimt/drawing/tikz/UGraphicTikz.java
Patch:
@@ -61,7 +61,8 @@ public class UGraphicTikz extends AbstractUGraphic<TikzGraphics> implements Clip
 
 	public UGraphicTikz(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder, double scale,
 			boolean withPreamble) {
-		copy(defaultBackground, colorMapper, stringBounder, new TikzGraphics(scale, withPreamble, colorMapper));
+		super(stringBounder);
+		copy(defaultBackground, colorMapper, new TikzGraphics(scale, withPreamble, colorMapper));
 		register();
 	}
 
@@ -72,6 +73,7 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	private UGraphicTikz(UGraphicTikz other) {
+		super(other.getStringBounder());
 		copy(other);
 		register();
 	}

File: src/net/sourceforge/plantuml/klimt/drawing/visio/UGraphicVdx.java
Patch:
@@ -62,7 +62,8 @@ public double dpiFactor() {
 	}
 
 	public UGraphicVdx(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder) {
-		copy(defaultBackground, colorMapper, stringBounder, new VisioGraphics());
+		super(stringBounder);
+		copy(defaultBackground, colorMapper, new VisioGraphics());
 		register();
 	}
 
@@ -73,6 +74,7 @@ protected AbstractCommonUGraphic copyUGraphic() {
 	}
 
 	private UGraphicVdx(UGraphicVdx other) {
+		super(other.getStringBounder());
 		copy(other);
 		register();
 	}

File: src/net/sourceforge/plantuml/cucadiagram/BodierMap.java
Patch:
@@ -74,7 +74,7 @@ public void setLeaf(Entity leaf) {
 	}
 
 	public static String getLinkedEntry(String s) {
-		final Pattern p = Pattern.compile("(\\*-+\\>)");
+		final Pattern p = Pattern.compile("(\\*-+_*\\>)");
 		final Matcher m = p.matcher(s);
 		if (m.find()) {
 			return m.group(1);

File: src/gen/lib/cdt/dtextract__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/cdt/dtflatten__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/cdt/dtsize__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/cgraph/imap__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/cgraph/pend__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/common/geom__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/common/htmltable__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/common/memory__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/common/strcasecmp__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/common/textspan__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/dotgen/acyclic__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/dotgen/compound__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/dotgen/conc__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/gvc/gvcontext__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/gvc/gvplugin__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/gvc/gvtextlayout__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/lib/label/node__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/plugin/dot_layout/gvlayout_dot_layout__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/gen/plugin/dot_layout/gvplugin_dot_layout__c.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/SHAPE_INFO.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agattr_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agcbstack_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agclos_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agdatadict_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agdesc_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agdisc_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agdstate_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agedgeinfo_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agedgepair_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agiddisc_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agiodisc_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agmemdisc_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agnode_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agnodeinfo_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agobj_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agraphinfo_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agrec_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Agtag_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_BestPos_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Branch_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_GVCOMMON_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_GVC_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_IMapEntry_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_LeafList_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Node_t___.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Node_t___or_object_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_PartitionVars.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Pedge_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Ppoly_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_RTree.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_Rect_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_STheap_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_SplitQ_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_XLabels_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_adjmatrix_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_arrowdir_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_arrowname_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_arrowtype_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_aspect_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_bezier.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_blk_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_boxf.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_cinfo_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_deque_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_dt_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_dtdata_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_dthold_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_dtmethod_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_elist.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_field_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_fontinfo.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_gvlayout_engine_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_gvlayout_features_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_gvplugin_active_layout_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_gvplugin_available_s.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_gvplugin_installed_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_inside_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_label_params_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_layout_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_nlist_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_nodequeue.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_object_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_pack_info.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_path.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_pathend_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_point.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_pointf.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_pointnlink_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_polygon_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_port.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_rank_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_shape_desc.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_shape_functions.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_splineInfo.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_spline_info_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_splines.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_stk_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_subtree_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_tedge_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_textfont_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_textlabel_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_textspan_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_tna_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_triangle_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/h/ST_xlabel_t.java
Patch:
@@ -2,12 +2,12 @@
  * PlantUML : a free UML diagram generator
  * ========================================================================
  *
- * Project Info:  http://plantuml.com
+ * Project Info:  https://plantuml.com
  * 
  * If you like this project or if you find it useful, you can support us at:
  * 
- * http://plantuml.com/patreon (only 1$ per month!)
- * http://plantuml.com/paypal
+ * https://plantuml.com/patreon (only 1$ per month!)
+ * https://plantuml.com/paypal
  * 
  * This file is part of Smetana.
  * Smetana is a partial translation of Graphviz/Dot sources from C to Java.

File: src/com/plantuml/wasm/RunInit.java
Patch:
@@ -47,6 +47,7 @@ public static void main(String[] argsArray) throws IOException {
 		cheerpjPath = argsArray[0];
 		System.err.println("RunInit: " + Version.versionString());
 		System.err.println("cheerpjPath is " + cheerpjPath);
+		WasmLog.log("Loading completed!");
 	}
 
 }

File: src/net/sourceforge/plantuml/BlockUmlBuilder.java
Patch:
@@ -47,6 +47,8 @@
 import java.util.List;
 import java.util.Set;
 
+import com.plantuml.wasm.WasmLog;
+
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.preproc.FileWithSuffix;
 import net.sourceforge.plantuml.preproc.ImportedFiles;
@@ -136,6 +138,7 @@ private void init(ReadLineNumbered includer) throws IOException {
 				if (paused)
 					current.add(s);
 
+				WasmLog.log("...text loaded...");
 				final BlockUml uml = new BlockUml(current, defines.cloneMe(), null, this, charset);
 				usedFiles.addAll(uml.getIncluded());
 				blocks.add(uml);

File: src/net/sourceforge/plantuml/command/ProtectedCommand.java
Patch:
@@ -37,6 +37,8 @@
 
 import java.util.Objects;
 
+import com.plantuml.wasm.WasmLog;
+
 import net.sourceforge.plantuml.core.Diagram;
 import net.sourceforge.plantuml.log.Logme;
 import net.sourceforge.plantuml.utils.BlocLines;
@@ -53,6 +55,7 @@ public ProtectedCommand(Command<S> cmd) {
 
 	public CommandExecutionResult execute(S system, BlocLines lines) {
 		try {
+			WasmLog.log("...running " + cmd.getClass().getName() + " ...");
 			final CommandExecutionResult result = cmd.execute(system, lines);
 			// if (result.isOk()) {
 			// // TRACECOMMAND

File: src/net/sourceforge/plantuml/core/Diagram.java
Patch:
@@ -41,6 +41,7 @@
 import net.sourceforge.plantuml.FileFormatOption;
 import net.sourceforge.plantuml.api.ApiStable;
 import net.sourceforge.plantuml.cucadiagram.Display;
+import net.sourceforge.plantuml.ugraphic.UGraphic;
 
 /**
  * Represents a single diagram. A Diagram could be a UML (sequence diagram,
@@ -67,6 +68,8 @@ public interface Diagram {
 	 */
 	ImageData exportDiagram(OutputStream os, int num, FileFormatOption fileFormat) throws IOException;
 
+	ImageData exportDiagramGraphic(UGraphic ug);
+
 	/**
 	 * Number of images in this diagram (usually, 1)
 	 * 

File: src/net/sourceforge/plantuml/sequencediagram/graphic/FileMaker.java
Patch:
@@ -39,10 +39,13 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.core.ImageData;
+import net.sourceforge.plantuml.ugraphic.UGraphic;
 
 public interface FileMaker {
 
 	ImageData createOne(OutputStream os, int index, boolean isWithMetadata) throws IOException;
 
+	ImageData createOneGraphic(UGraphic ug);
+
 	public int getNbPages();
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMaker.java
Patch:
@@ -41,9 +41,12 @@
 
 import net.sourceforge.plantuml.FileFormatOption;
 import net.sourceforge.plantuml.core.ImageData;
+import net.sourceforge.plantuml.ugraphic.UGraphic;
 
 public interface CucaDiagramFileMaker {
 
 	public ImageData createFile(OutputStream os, List<String> dotStrings, FileFormatOption fileFormatOption)
 			throws IOException;
+
+	public ImageData createOneGraphic(UGraphic ug);
 }

File: src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java
Patch:
@@ -50,6 +50,8 @@
 
 import javax.swing.ImageIcon;
 
+import com.plantuml.wasm.WasmLog;
+
 import net.sourceforge.plantuml.AnimatedGifEncoder;
 import net.sourceforge.plantuml.AnnotatedBuilder;
 import net.sourceforge.plantuml.AnnotatedWorker;
@@ -291,7 +293,7 @@ private ImageData writeImageInternal(OutputStream os, Animation animationArg) th
 				/ 96.0;
 		if (scaleFactor <= 0)
 			throw new IllegalStateException("Bad scaleFactor");
-
+		WasmLog.log("...image drawing...");
 		// ::comment when WASM
 		UGraphic ug = createUGraphic(dim, animationArg, dx, dy, scaleFactor,
 				titledDiagram == null ? new Pragma() : titledDiagram.getPragma());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/xmlsc/ScxmlStateDiagramStandard.java
Patch:
@@ -55,6 +55,7 @@
 
 import net.sourceforge.plantuml.Guillemet;
 import net.sourceforge.plantuml.baraye.EntityImp;
+import net.sourceforge.plantuml.baraye.Quark;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.cucadiagram.LeafType;
 import net.sourceforge.plantuml.cucadiagram.Link;
@@ -162,9 +163,8 @@ private void addLink(Element state, Link link) {
 	}
 
 	private String getId(EntityImp entity) {
-		String result = entity.getDisplay().get(0).toString();
-		result = result.replaceAll("\\*", "");
-		return result;
+		final Quark quark = entity.getQuark();
+		return quark.getName().replaceAll("\\*", "");
 	}
 
 	public void transformerXml(OutputStream os) throws TransformerException, ParserConfigurationException {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 4;
+		final int beta = 5;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/style/Style.java
Patch:
@@ -42,6 +42,7 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.LineBreakStrategy;
+import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.graphic.FontConfiguration;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
@@ -179,7 +180,8 @@ public StyleSignatureBasic getSignature() {
 	}
 
 	public UFont getUFont() {
-		final String family = value(PName.FontName).asString();
+		final String family = StringUtils
+				.eventuallyRemoveStartingAndEndingDoubleQuote(value(PName.FontName).asString());
 		final int fontStyle = value(PName.FontStyle).asFontStyle();
 		int size = value(PName.FontSize).asInt(true);
 		if (size == -1)

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java
Patch:
@@ -87,6 +87,7 @@ public String toString() {
 
 		addConFont("header", SName.document, SName.header);
 		addConFont("footer", SName.document, SName.footer);
+		addConFont("caption", SName.document, SName.caption);
 
 		addConvert("defaultFontSize", PName.FontSize, SName.element);
 
@@ -119,6 +120,7 @@ public String toString() {
 
 		addConFont("note", SName.note);
 		addConvert("noteBorderThickness", PName.LineThickness, SName.note);
+		addConvert("noteBorderColor", PName.LineColor, SName.note);
 		addConvert("noteBackgroundColor", PName.BackGroundColor, SName.note);
 
 		addConvert("packageBackgroundColor", PName.BackGroundColor, SName.group);
@@ -392,4 +394,4 @@ private static void addConFont(String skinparam, SName... styleNames) {
 		addConvert(skinparam + "FontName", PName.FontName, styleNames);
 	}
 
-}
\ No newline at end of file
+}

File: src/net/sourceforge/plantuml/style/FromSkinparamToStyle.java
Patch:
@@ -87,6 +87,7 @@ public String toString() {
 
 		addConFont("header", SName.document, SName.header);
 		addConFont("footer", SName.document, SName.footer);
+		addConFont("caption", SName.document, SName.caption);
 
 		addConvert("defaultFontSize", PName.FontSize, SName.element);
 
@@ -119,6 +120,7 @@ public String toString() {
 
 		addConFont("note", SName.note);
 		addConvert("noteBorderThickness", PName.LineThickness, SName.note);
+		addConvert("noteBorderColor", PName.LineColor, SName.note);
 		addConvert("noteBackgroundColor", PName.BackGroundColor, SName.note);
 
 		addConvert("packageBackgroundColor", PName.BackGroundColor, SName.group);
@@ -392,4 +394,4 @@ private static void addConFont(String skinparam, SName... styleNames) {
 		addConvert(skinparam + "FontName", PName.FontName, styleNames);
 	}
 
-}
\ No newline at end of file
+}

File: src/net/sourceforge/plantuml/ComponentStyle.java
Patch:
@@ -49,7 +49,7 @@ public USymbol toUSymbol() {
 		case UML2:
 			return USymbols.COMPONENT2;
 		case RECTANGLE:
-			return USymbols.RECTANGLE;
+			return USymbols.COMPONENT_RECTANGLE;
 		}
 		throw new AssertionError();
 	}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandUrl.java
Patch:
@@ -68,7 +68,8 @@ static IRegex getRegexConcat() {
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOptional(new RegexLeaf("is")), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")"), RegexLeaf.end()); //
+				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")"), //
+				RegexLeaf.end()); //
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteCommand.java
Patch:
@@ -82,7 +82,8 @@ private IRegex getRegexConcatMultiLine() {
 				RegexLeaf.spaceZeroOrMore(), //
 				color().getRegex(), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")?"), RegexLeaf.end());
+				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")?"), //
+				RegexLeaf.end());
 	}
 
 	private IRegex getRegexConcatSingleLine() {

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteOnArrowCommand.java
Patch:
@@ -81,7 +81,8 @@ private IRegex getRegexConcatMultiLine() {
 				RegexLeaf.spaceZeroOrMore(), //
 				ColorParser.exp1(), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")?"), RegexLeaf.end());
+				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")?"), //
+				RegexLeaf.end());
 	}
 
 	private IRegex getRegexConcatSingleLine() {

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteOverSeveralCommand.java
Patch:
@@ -87,7 +87,8 @@ private IRegex getRegexConcatMultiLine() {
 				RegexLeaf.spaceZeroOrMore(), //
 				color().getRegex(), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")?"), RegexLeaf.end() //
+				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")?"), //
+				RegexLeaf.end() //
 		);
 	}
 

File: src/net/sourceforge/plantuml/graphic/USymbols.java
Patch:
@@ -83,6 +83,7 @@ private static USymbol record(String code, USymbol symbol) {
 	public final static USymbol USECASE = null;
 	public final static USymbol COMPONENT1 = record("COMPONENT1", new USymbolComponent1());
 	public final static USymbol COMPONENT2 = record("COMPONENT2", new USymbolComponent2());
+	public final static USymbol COMPONENT_RECTANGLE = record("COMPONENT_RECTANGLE", new USymbolRectangle(SName.component));
 	public final static USymbol BOUNDARY = record("BOUNDARY", new USymbolBoundary());
 	public final static USymbol ENTITY_DOMAIN = record("ENTITY_DOMAIN", new USymbolEntityDomain());
 	public final static USymbol CONTROL = record("CONTROL", new USymbolControl());

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandUrl.java
Patch:
@@ -65,7 +65,8 @@ static IRegex getRegexConcat() {
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOptional(new RegexLeaf("is")), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")"), RegexLeaf.end()); //
+				new RegexLeaf("URL", "(" + UrlBuilder.getRegexp() + ")"), //
+				RegexLeaf.end()); //
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 5;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/preproc2/ReadFilterAnd.java
Patch:
@@ -49,9 +49,9 @@ public void add(ReadFilter filter) {
 	}
 
 	public ReadLine applyFilter(ReadLine current) {
-		for (ReadFilter f : all) {
+		for (ReadFilter f : all)
 			current = f.applyFilter(current);
-		}
+
 		return current;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 4;
+		final int beta = 5;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/asciiart/TextSkin.java
Patch:
@@ -135,7 +135,7 @@ public Component createComponent(Style style[], ComponentType type, ArrowConfigu
 		if (type == ComponentType.DIVIDER)
 			return new ComponentTextDivider(type, stringsToDisplay, fileFormat);
 
-		if (type == ComponentType.GROUPING_HEADER)
+		if (type == ComponentType.GROUPING_HEADER_LEGACY || type == ComponentType.GROUPING_HEADER_TEOZ)
 			return new ComponentTextGroupingHeader(type, stringsToDisplay, fileFormat);
 
 		if (type == ComponentType.GROUPING_SPACE)

File: src/net/sourceforge/plantuml/sequencediagram/GroupingLeaf.java
Patch:
@@ -78,9 +78,9 @@ public int getLevel() {
 
 	@Override
 	public final HColor getBackColorGeneral() {
-		if (backColorGeneral == null) {
+		if (backColorGeneral == null)
 			return start.getBackColorGeneral();
-		}
+
 		return backColorGeneral;
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/graphic/DrawableSetInitializer.java
Patch:
@@ -361,7 +361,7 @@ private void prepareGroupingStart(StringBounder stringBounder, GroupingStart sta
 		final Display strings = start.getTitle().equals("group") ? Display.create(start.getComment())
 				: Display.create(start.getTitle(), start.getComment());
 		final Component header = drawableSet.getSkin().createComponent(start.getUsedStyles(),
-				ComponentType.GROUPING_HEADER, null, skinParam, strings);
+				ComponentType.GROUPING_HEADER_LEGACY, null, skinParam, strings);
 		final ParticipantBox veryfirst = drawableSet.getVeryfirst();
 		final InGroupableList inGroupableList = new InGroupableList(veryfirst, start, freeY2.getFreeY(range));
 		inGroupableStack.addList(inGroupableList);

File: src/net/sourceforge/plantuml/skin/ComponentType.java
Patch:
@@ -56,7 +56,7 @@ public enum ComponentType implements Styleable {
 	DELAY_LINE, PARTICIPANT_LINE, CONTINUE_LINE,
 
 	//
-	GROUPING_ELSE_LEGACY, GROUPING_ELSE_TEOZ, GROUPING_HEADER, GROUPING_SPACE,
+	GROUPING_ELSE_LEGACY, GROUPING_ELSE_TEOZ, GROUPING_HEADER_LEGACY, GROUPING_HEADER_TEOZ, GROUPING_SPACE,
 	//
 	NEWPAGE, NOTE, NOTE_HEXAGONAL, NOTE_BOX, DIVIDER, REFERENCE, ENGLOBER,
 

File: src/net/sourceforge/plantuml/skin/rose/ComponentRoseGroupingElse.java
Patch:
@@ -67,7 +67,8 @@ public ComponentRoseGroupingElse(boolean teoz, Style style, CharSequence comment
 		this.teoz = teoz;
 		this.roundCorner = style.value(PName.RoundCorner).asInt();
 		this.groupBorder = style.value(PName.LineColor).asColor(getIHtmlColorSet());
-		this.backgroundColor = style.value(PName.BackGroundColor).asColor(getIHtmlColorSet());
+		this.backgroundColor = teoz ? HColors.transparent()
+				: style.value(PName.BackGroundColor).asColor(getIHtmlColorSet());
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 3;
+		final int beta = 4;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/creole/atom/AbstractAtom.java
Patch:
@@ -38,12 +38,12 @@
 import java.util.Arrays;
 import java.util.List;
 
-import net.sourceforge.plantuml.graphic.StringBounder;
+import net.sourceforge.plantuml.creole.Neutron;
 
 public abstract class AbstractAtom implements Atom {
 
-	public List<Atom> splitInTwo(StringBounder stringBounder, double width) {
-		return Arrays.asList((Atom) this);
+	public List<Neutron> getNeutrons() {
+		return Arrays.asList(Neutron.create(this));
 	}
 
 }

File: src/net/sourceforge/plantuml/creole/atom/Atom.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.awt.geom.XDimension2D;
+import net.sourceforge.plantuml.creole.Neutron;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.UShape;
@@ -50,6 +51,6 @@ public interface Atom extends UShape {
 
 	public void drawU(UGraphic ug);
 
-	public List<Atom> splitInTwo(StringBounder stringBounder, double width);
+	public List<Neutron> getNeutrons();
 
 }

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -81,7 +81,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/svek/GraphvizCrash.java
Patch:
@@ -124,7 +124,7 @@ public static void pleaseGoTo(List<String> strings) {
 	public static void youShouldSendThisDiagram(List<String> strings) {
 		strings.add("You should send this diagram and this image to <b>plantuml@gmail.com</b> or");
 		strings.add("post to <b>https://plantuml.com/qa</b> to solve this issue.");
-		strings.add("You can try to turn arround this issue by simplifing your diagram.");
+		strings.add("You can try to turn around this issue by simplifing your diagram.");
 	}
 
 	public static void thisMayBeCaused(final List<String> strings) {

File: src/net/sourceforge/plantuml/svek/GraphvizCrash.java
Patch:
@@ -124,7 +124,7 @@ public static void pleaseGoTo(List<String> strings) {
 	public static void youShouldSendThisDiagram(List<String> strings) {
 		strings.add("You should send this diagram and this image to <b>plantuml@gmail.com</b> or");
 		strings.add("post to <b>https://plantuml.com/qa</b> to solve this issue.");
-		strings.add("You can try to turn arround this issue by simplifing your diagram.");
+		strings.add("You can try to turn around this issue by simplifing your diagram.");
 	}
 
 	public static void thisMayBeCaused(final List<String> strings) {

File: src/net/sourceforge/plantuml/golem/Position.java
Patch:
@@ -57,7 +57,7 @@ public boolean equals(Object o) {
 
 	@Override
 	public int hashCode() {
-		return xmin + ymin << 8 + xmax << 16 + ymax << 24;
+		return xmin + (ymin << 8) + (xmax << 16) + (ymax << 24);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/golem/Position.java
Patch:
@@ -57,7 +57,7 @@ public boolean equals(Object o) {
 
 	@Override
 	public int hashCode() {
-		return xmin + ymin << 8 + xmax << 16 + ymax << 24;
+		return xmin + (ymin << 8) + (xmax << 16) + (ymax << 24);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/cucadiagram/dot/GraphvizUtils.java
Patch:
@@ -196,7 +196,7 @@ public static int retrieveVersion(String s) {
 		if (s == null)
 			return -1;
 
-		final Pattern p = Pattern.compile("\\s([23456])\\.(\\d\\d?)\\D");
+		final Pattern p = Pattern.compile("\\s(\\d)\\.(\\d\\d?)\\D");
 		final Matcher m = p.matcher(s);
 		if (m.find() == false)
 			return -1;

File: src/net/sourceforge/plantuml/cucadiagram/dot/GraphvizVersionFinder.java
Patch:
@@ -72,7 +72,7 @@ public GraphvizVersionFinder(File dotExe) {
 
 	public GraphvizVersion getVersion() {
 		final String dotVersion = dotVersion();
-		final Pattern p = Pattern.compile("([23456])\\.(\\d\\d?)");
+		final Pattern p = Pattern.compile("(\\d)\\.(\\d\\d?)");
 		final Matcher m = p.matcher(dotVersion);
 		final boolean find = m.find();
 		if (find == false) {

File: src/net/sourceforge/plantuml/cucadiagram/dot/GraphvizUtils.java
Patch:
@@ -196,7 +196,7 @@ public static int retrieveVersion(String s) {
 		if (s == null)
 			return -1;
 
-		final Pattern p = Pattern.compile("\\s([23456])\\.(\\d\\d?)\\D");
+		final Pattern p = Pattern.compile("\\s(\\d)\\.(\\d\\d?)\\D");
 		final Matcher m = p.matcher(s);
 		if (m.find() == false)
 			return -1;

File: src/net/sourceforge/plantuml/cucadiagram/dot/GraphvizVersionFinder.java
Patch:
@@ -72,7 +72,7 @@ public GraphvizVersionFinder(File dotExe) {
 
 	public GraphvizVersion getVersion() {
 		final String dotVersion = dotVersion();
-		final Pattern p = Pattern.compile("([23456])\\.(\\d\\d?)");
+		final Pattern p = Pattern.compile("(\\d)\\.(\\d\\d?)");
 		final Matcher m = p.matcher(dotVersion);
 		final boolean find = m.find();
 		if (find == false) {

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -80,7 +80,7 @@ public CommandCreateClass() {
 	private static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandCreateClass.class.getName(), RegexLeaf.start(), //
 				new RegexLeaf("TYPE", //
-						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|circle|diamond|protocol|struct|exception)"), //
+						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|circle|diamond|protocol|struct|exception|metaclass|stereotype)"), //
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOr(//
 						new RegexConcat(//

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClassMultilines.java
Patch:
@@ -95,7 +95,7 @@ private static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandCreateClassMultilines.class.getName(), RegexLeaf.start(), //
 				new RegexLeaf("VISIBILITY", "(" + VisibilityModifier.regexForVisibilityCharacterInClassName() + ")?"), //
 				new RegexLeaf("TYPE",
-						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|protocol|struct|exception)"), //
+						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|protocol|struct|exception|metaclass|stereotype)"), //
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOr(//
 						new RegexConcat(//

File: src/net/sourceforge/plantuml/classdiagram/command/CommandLinkLollipop.java
Patch:
@@ -97,7 +97,7 @@ static RegexConcat getRegexConcat(UmlDiagramType umlDiagramType) {
 
 	private static String optionalKeywords(UmlDiagramType type) {
 		if (type == UmlDiagramType.CLASS)
-			return "(interface|enum|annotation|abstract[%s]+class|abstract|class|entity|protocol|struct|exception)";
+			return "(interface|enum|annotation|abstract[%s]+class|abstract|class|entity|protocol|struct|exception|metaclass|stereotype)";
 
 		if (type == UmlDiagramType.OBJECT)
 			return "(object)";

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -152,6 +152,8 @@ public enum SName {
 	spotException, //
 	spotClass, //
 	spotAbstractClass, //
+	spotMetaClass, //
+	spotStereotype, //
 
 	wbsDiagram, //
 	yamlDiagram; //

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -80,7 +80,7 @@ public CommandCreateClass() {
 	private static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandCreateClass.class.getName(), RegexLeaf.start(), //
 				new RegexLeaf("TYPE", //
-						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|circle|diamond|protocol|struct|exception)"), //
+						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|circle|diamond|protocol|struct|exception|metaclass|stereotype)"), //
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOr(//
 						new RegexConcat(//

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClassMultilines.java
Patch:
@@ -95,7 +95,7 @@ private static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandCreateClassMultilines.class.getName(), RegexLeaf.start(), //
 				new RegexLeaf("VISIBILITY", "(" + VisibilityModifier.regexForVisibilityCharacterInClassName() + ")?"), //
 				new RegexLeaf("TYPE",
-						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|protocol|struct|exception)"), //
+						"(interface|enum|annotation|abstract[%s]+class|static[%s]+class|abstract|class|entity|protocol|struct|exception|metaclass|stereotype)"), //
 				RegexLeaf.spaceOneOrMore(), //
 				new RegexOr(//
 						new RegexConcat(//

File: src/net/sourceforge/plantuml/classdiagram/command/CommandLinkLollipop.java
Patch:
@@ -97,7 +97,7 @@ static RegexConcat getRegexConcat(UmlDiagramType umlDiagramType) {
 
 	private static String optionalKeywords(UmlDiagramType type) {
 		if (type == UmlDiagramType.CLASS)
-			return "(interface|enum|annotation|abstract[%s]+class|abstract|class|entity|protocol|struct|exception)";
+			return "(interface|enum|annotation|abstract[%s]+class|abstract|class|entity|protocol|struct|exception|metaclass|stereotype)";
 
 		if (type == UmlDiagramType.OBJECT)
 			return "(object)";

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -151,6 +151,8 @@ public enum SName {
 	spotException, //
 	spotClass, //
 	spotAbstractClass, //
+	spotMetaClass, //
+	spotStereotype, //
 
 	wbsDiagram, //
 	yamlDiagram; //

File: src/ext/plantuml/com/google/zxing/ResultPoint.java
Patch:
@@ -63,8 +63,8 @@ public String toString() {
   }
 
   /**
-   * <p>Orders an array of three ResultPoints in an order [A,B,C] such that AB < AC and
-   * BC < AC and the angle between BC and BA is less than 180 degrees.
+   * <p>Orders an array of three ResultPoints in an order [A,B,C] such that AB is less than AC
+   * and BC is less than AC and the angle between BC and BA is less than 180 degrees.
    */
   public static void orderBestPatterns(ResultPoint[] patterns) {
 

File: src/net/sourceforge/plantuml/ebnf/EbnfSingleExpression.java
Patch:
@@ -59,6 +59,7 @@ public class EbnfSingleExpression {
 			} else if (isLetterOrDigit(ch)) {
 				final String litteral = readLitteral(it);
 				tokens.add(new Token(Symbol.LITTERAL, litteral));
+				continue;
 			} else if (ch == ',') {
 				tokens.add(new Token(Symbol.CONCATENATION, null));
 			} else if (ch == '|') {
@@ -125,9 +126,9 @@ else if (element.getSymbol() == Symbol.ALTERNATION)
 				engine.alternation();
 			else if (element.getSymbol() == Symbol.CONCATENATION)
 				engine.concatenation();
-			else if (element.getSymbol() == Symbol.OPTIONAL_CLOSE)
+			else if (element.getSymbol() == Symbol.OPTIONAL)
 				engine.optional();
-			else if (element.getSymbol() == Symbol.REPETITION_CLOSE)
+			else if (element.getSymbol() == Symbol.REPETITION)
 				engine.repetition();
 			else
 				throw new UnsupportedOperationException(element.toString());

File: src/net/sourceforge/plantuml/ebnf/Symbol.java
Patch:
@@ -46,8 +46,10 @@ public enum Symbol {
 	ALTERNATION, // |
 	OPTIONAL_OPEN, // [
 	OPTIONAL_CLOSE, // ]
+	OPTIONAL,
 	REPETITION_OPEN, // {
 	REPETITION_CLOSE, // }
+	REPETITION, // 
 	GROUPING_OPEN, // (
 	GROUPING_CLOSE, // )
 	TERMINAL_STRING1, // " "

File: src/net/sourceforge/plantuml/acearth/PSystemXearthFactory.java
Patch:
@@ -47,6 +47,7 @@
 import net.sourceforge.plantuml.command.regex.MyPattern;
 import net.sourceforge.plantuml.command.regex.Pattern2;
 import net.sourceforge.plantuml.core.UmlSource;
+import net.sourceforge.plantuml.log.Logger;
 
 public class PSystemXearthFactory extends PSystemBasicFactory<PSystemXearth> {
 
@@ -100,7 +101,7 @@ public PSystemXearth executeLine(ThemeStyle style, UmlSource source, PSystemXear
 				return system;
 			}
 		} catch (Exception e) {
-			e.printStackTrace();
+			Logger.error(e);
 			return null;
 		}
 		return null;

File: src/net/sourceforge/plantuml/argon2/blake2/Blake2b.java
Patch:
@@ -26,6 +26,7 @@ To the extent possible under law, the author(s) have dedicated all copyright
 package net.sourceforge.plantuml.argon2.blake2;
 
 
+import net.sourceforge.plantuml.log.Logger;
 import static net.sourceforge.plantuml.argon2.blake2.Blake2b.Engine.Assert.*;
 import static net.sourceforge.plantuml.argon2.blake2.Blake2b.Engine.LittleEndian.*;
 
@@ -896,7 +897,7 @@ public static final class Assert {
 			public final static String exclusiveLowerBound = "'%s' %d is <= %d";
 			public final static String inclusiveLowerBound = "'%s' %d is < %d";
 			static <T extends Number> String assertFail(final String name, final T v, final String err, final T spec) {
-				new Exception().printStackTrace();
+				Logger.error(new Exception());
 				return String.format(err, name, v, spec);
 			}
 		}

File: src/net/sourceforge/plantuml/dedication/PSystemDedication.java
Patch:
@@ -47,6 +47,7 @@
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.graphic.UDrawable;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.security.SImageIO;
 import net.sourceforge.plantuml.ugraphic.AffineTransformType;
 import net.sourceforge.plantuml.ugraphic.PixelImage;
@@ -87,7 +88,7 @@ public static BufferedImage getBufferedImage(InputStream is) {
 			// final VP8Frame frame = vp8Decoder.getFrame();
 			// return frame.getBufferedImage();
 		} catch (Exception e) {
-			e.printStackTrace();
+			Logger.error(e);
 			return null;
 		}
 	}

File: src/net/sourceforge/plantuml/emoji/Emoji.java
Patch:
@@ -12,6 +12,7 @@
 import java.util.TreeMap;
 
 import net.sourceforge.plantuml.emoji.data.Dummy;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 
@@ -29,7 +30,7 @@ public class Emoji {
 				new Emoji(s);
 			}
 		} catch (IOException e) {
-			e.printStackTrace();
+			Logger.error(e);
 		}
 	}
 
@@ -87,7 +88,7 @@ public void drawU(UGraphic ug, double scale, HColor colorForMonochrome) {
 		try {
 			loadIfNeed();
 		} catch (IOException e) {
-			e.printStackTrace();
+			Logger.error(e);
 		}
 		nano.drawU(ug, scale, colorForMonochrome);
 	}

File: src/net/sourceforge/plantuml/help/CommandHelpTheme.java
Patch:
@@ -45,6 +45,7 @@
 import net.sourceforge.plantuml.command.regex.RegexConcat;
 import net.sourceforge.plantuml.command.regex.RegexLeaf;
 import net.sourceforge.plantuml.command.regex.RegexResult;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.theme.ThemeUtils;
 
 public class CommandHelpTheme extends SingleLineCommand2<Help> {
@@ -76,7 +77,7 @@ protected CommandExecutionResult executeArg(Help diagram, LineLocation location,
 		} catch (IOException e) {
 			final String message = "Unexpected error listing themes: " + e.getMessage();
 			Log.error(message);
-			e.printStackTrace();
+			Logger.error(e);
 			return CommandExecutionResult.error(message);
 		}
 

File: src/net/sourceforge/plantuml/picoweb/PicoWebServerTest.java
Patch:
@@ -2,6 +2,7 @@
 
 import net.sourceforge.plantuml.json.Json;
 import net.sourceforge.plantuml.json.JsonObject;
+import net.sourceforge.plantuml.log.Logger;
 
 import javax.imageio.ImageIO;
 import javax.imageio.stream.MemoryCacheImageInputStream;
@@ -294,7 +295,7 @@ public void run() {
 				try {
 					PicoWebServer.serverLoop(serverSocket);
 				} catch (IOException e) {
-					e.printStackTrace();
+					Logger.error(e);
 				}
 			}
 		};

File: src/net/sourceforge/plantuml/preproc/Stdlib.java
Patch:
@@ -24,6 +24,7 @@
 
 import net.sourceforge.plantuml.Log;
 import net.sourceforge.plantuml.brotli.BrotliInputStream;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.security.SFile;
 
 public class Stdlib {
@@ -53,7 +54,7 @@ public static InputStream getResourceAsStream(String fullname) {
 			}
 			return new ByteArrayInputStream(data.getBytes(UTF_8));
 		} catch (IOException e) {
-			e.printStackTrace();
+			Logger.error(e);
 			return null;
 		}
 	}

File: src/net/sourceforge/plantuml/security/SecurityUtils.java
Patch:
@@ -61,6 +61,7 @@
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.json.Json;
 import net.sourceforge.plantuml.json.JsonValue;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.security.authentication.SecurityAccessInterceptor;
 import net.sourceforge.plantuml.security.authentication.SecurityAuthentication;
 import net.sourceforge.plantuml.security.authentication.SecurityAuthorizeManager;
@@ -96,7 +97,7 @@ public class SecurityUtils {
 	 * Whitelist of paths from where scripts can load data.
 	 */
 	public static final String ALLOWLIST_LOCAL_PATHS = "plantuml.allowlist.path";
-	
+
 	/**
 	 * Whitelist of urls
 	 */
@@ -426,7 +427,7 @@ private static JsonValue loadJson(File jsonFile) {
 			try (Reader r = new BufferedReader(new FileReader(jsonFile))) {
 				return Json.parse(r);
 			} catch (IOException e) {
-				e.printStackTrace();
+				Logger.error(e);
 			}
 		}
 		return Json.object();

File: src/net/sourceforge/plantuml/security/authentication/oauth/AbstractOAuth2AccessAuthorizeManager.java
Patch:
@@ -38,6 +38,7 @@
 import net.sourceforge.plantuml.json.Json;
 import net.sourceforge.plantuml.json.JsonObject;
 import net.sourceforge.plantuml.json.JsonValue;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.security.SURL;
 import net.sourceforge.plantuml.security.authentication.SecurityAuthentication;
 import net.sourceforge.plantuml.security.authentication.SecurityAuthorizeManager;
@@ -133,7 +134,7 @@ protected String urlEncode(String data) {
 		try {
 			return URLEncoder.encode(data, "UTF-8");
 		} catch (UnsupportedEncodingException e) {
-			e.printStackTrace();
+			Logger.error(e);
 			return data;
 		}
 	}

File: src/net/sourceforge/plantuml/tim/TimLoader.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.DefinitionsContainer;
 import net.sourceforge.plantuml.StringLocated;
+import net.sourceforge.plantuml.log.Logger;
 import net.sourceforge.plantuml.preproc.Defines;
 import net.sourceforge.plantuml.preproc.FileWithSuffix;
 import net.sourceforge.plantuml.preproc.ImportedFiles;
@@ -57,7 +58,7 @@ public TimLoader(ImportedFiles importedFiles, Defines defines, Charset charset,
 		try {
 			defines.copyTo(global);
 		} catch (EaterException e) {
-			e.printStackTrace();
+			Logger.error(e);
 		}
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 5;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/wbs/WElement.java
Patch:
@@ -54,7 +54,7 @@
 import net.sourceforge.plantuml.style.StyleSignatureBasic;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 
-final class WElement {
+final public class WElement {
 
 	private final HColor backColor;
 	private final Display label;
@@ -95,7 +95,7 @@ public ISkinParam withBackColor(ISkinParam skinParam) {
 		return new SkinParamColors(skinParam, Colors.empty().add(ColorType.BACK, backColor));
 	}
 
-	private static final int STEP_BY_PARENT = 1000_1000;
+	public static final int STEP_BY_PARENT = 1000_1000;
 
 	public Style getStyle() {
 		int deltaPriority = STEP_BY_PARENT * 1000;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageState.java
Patch:
@@ -104,9 +104,9 @@ final public void drawU(UGraphic ug) {
 		final Dimension2D dimTotal = calculateDimension(stringBounder);
 		final Dimension2D dimDesc = desc.calculateDimension(stringBounder);
 
-		final UStroke stroke = getStyleState().getStroke();
+		final UStroke stroke = getStyleState().getStroke(lineConfig.getColors());
 
-		ug = applyColorAndStroke(ug);
+		ug = applyColor(ug);
 		ug = ug.apply(stroke);
 		ug.draw(getShape(dimTotal));
 

File: src/net/sourceforge/plantuml/svek/image/EntityImageStateEmptyDescription.java
Patch:
@@ -70,7 +70,7 @@ final public void drawU(UGraphic ug) {
 
 		final UStroke stroke = getStyleState().getStroke();
 
-		ug = applyColorAndStroke(ug);
+		ug = applyColor(ug);
 		ug = ug.apply(stroke);
 
 		ug.draw(getShape(dimTotal));

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 4;
+		final int beta = 5;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/cucadiagram/Link.java
Patch:
@@ -133,9 +133,9 @@ public Link(IEntity cl1, IEntity cl2, LinkType type, Display label, int length,
 	public Link(IEntity cl1, IEntity cl2, LinkType type, Display label, int length, String qualifier1,
 			String qualifier2, String labeldistance, String labelangle, HColor specificColor,
 			StyleBuilder styleBuilder) {
-		if (length < 1) {
+		if (length < 1) 
 			throw new IllegalArgumentException();
-		}
+		
 		this.styleBuilder = styleBuilder;
 		this.cl1 = Objects.requireNonNull(cl1);
 		this.cl2 = Objects.requireNonNull(cl2);

File: src/net/sourceforge/plantuml/cucadiagram/MethodsOrFieldsArea.java
Patch:
@@ -174,7 +174,7 @@ private int getScore(String shortName, String cs) {
 
 	private TextBlock createTextBlock(CharSequence cs) {
 
-		FontConfiguration config = FontConfiguration.create(skinParam, style);
+		FontConfiguration config = FontConfiguration.create(skinParam, style, leaf.getColors());
 
 		if (cs instanceof Member) {
 			final Member m = (Member) cs;
@@ -195,9 +195,8 @@ private TextBlock createTextBlock(CharSequence cs) {
 			return new TextBlockTracer(m, bloc);
 		}
 
-		if (cs instanceof EmbeddedDiagram) {
+		if (cs instanceof EmbeddedDiagram)
 			return ((EmbeddedDiagram) cs).asDraw(skinParam);
-		}
 
 		return Display.getWithNewlines(cs.toString()).create8(config, align, skinParam, CreoleMode.SIMPLE_LINE,
 				skinParam.wrapWidth());

File: src/net/sourceforge/plantuml/svek/image/EntityImageClass.java
Patch:
@@ -192,7 +192,7 @@ private void drawInternal(UGraphic ug) {
 		ug = ug.apply(classBorder);
 		ug = ug.apply(backcolor.bg());
 
-		final UStroke stroke = getStyle().getStroke();
+		final UStroke stroke = getStyle().getStroke(lineConfig.getColors());
 
 		UGraphic ugHeader = ug;
 		if (roundCorner == 0 && headerBackcolor != null && backcolor.equals(headerBackcolor) == false) {

File: src/net/sourceforge/plantuml/svek/image/EntityImageClassHeader.java
Patch:
@@ -87,7 +87,7 @@ public EntityImageClassHeader(ILeaf entity, ISkinParam skinParam, PortionShower
 				.withTOBECHANGED(stereotype) //
 				.with(entity.getStereostyles()) //
 				.getMergedStyle(skinParam.getCurrentStyleBuilder());
-		FontConfiguration fontConfigurationName = FontConfiguration.create(skinParam, style);
+		FontConfiguration fontConfigurationName = FontConfiguration.create(skinParam, style, entity.getColors());
 
 		if (italic)
 			fontConfigurationName = fontConfigurationName.italic();

File: src/net/sourceforge/plantuml/timingdiagram/Clocks.java
Patch:
@@ -39,7 +39,9 @@ public interface Clocks {
 	public TimeTick getNow();
 
 	public TimeTick getClockValue(String clockName, int nb);
-	
+
 	public TimeTick getCodeValue(String code);
 
+	public TimingFormat getTimingFormatDate();
+
 }

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagramFactory.java
Patch:
@@ -65,6 +65,7 @@
 import net.sourceforge.plantuml.timingdiagram.command.CommandScalePixel;
 import net.sourceforge.plantuml.timingdiagram.command.CommandTicks;
 import net.sourceforge.plantuml.timingdiagram.command.CommandTimeMessage;
+import net.sourceforge.plantuml.timingdiagram.command.CommandUseDateFormat;
 
 public class TimingDiagramFactory extends PSystemCommandFactory {
 
@@ -100,6 +101,7 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandModeCompact());
 		cmds.add(new CommandTicks());
 		cmds.add(new CommandPixelHeight());
+		cmds.add(new CommandUseDateFormat());
 
 		return cmds;
 	}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 4;
 		return beta;
 	}
 

File: test/net/sourceforge/plantuml/security/SURLTest.java
Patch:
@@ -71,10 +71,10 @@ void urlWithoutSecurity(String url) {
 	@ValueSource(strings = {
 			"http://localhost:8080/api",
 			"http://alice@localhost:8080/api",
-			"http://alice:secret@localhost:8080/api",
+			"http://alice_secret@localhost:8080/api",
 			"https://localhost:8080/api",
 			"https://alice@localhost:8080/api",
-			"https://alice:secret@localhost:8080/api"})
+			"https://alice_secret@localhost:8080/api"})
 	void removeUserInfo(String url) throws MalformedURLException {
 		SURL surl = SURL.createWithoutUser(new URL(url));
 

File: src/net/sourceforge/plantuml/asciiart/TextSkin.java
Patch:
@@ -35,7 +35,6 @@
  */
 package net.sourceforge.plantuml.asciiart;
 
-import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.FileFormat;
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.cucadiagram.Display;
@@ -46,7 +45,6 @@
 import net.sourceforge.plantuml.skin.Component;
 import net.sourceforge.plantuml.skin.ComponentType;
 import net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace;
-import net.sourceforge.plantuml.skin.rose.ComponentRoseNewpage;
 import net.sourceforge.plantuml.skin.rose.Rose;
 import net.sourceforge.plantuml.style.Style;
 
@@ -151,6 +149,9 @@ public Component createComponent(Style style[], ComponentType type, ArrowConfigu
 		if (type == ComponentType.DESTROY) {
 			return new ComponentTextDestroy();
 		}
+		if (type == ComponentType.REFERENCE) {
+			return new ComponentTextReference(stringsToDisplay, fileFormat);
+		}
 		throw new UnsupportedOperationException(type.toString());
 	}
 	

File: src/net/sourceforge/plantuml/asciiart/TextSkin.java
Patch:
@@ -35,7 +35,6 @@
  */
 package net.sourceforge.plantuml.asciiart;
 
-import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.FileFormat;
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.cucadiagram.Display;
@@ -46,7 +45,6 @@
 import net.sourceforge.plantuml.skin.Component;
 import net.sourceforge.plantuml.skin.ComponentType;
 import net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace;
-import net.sourceforge.plantuml.skin.rose.ComponentRoseNewpage;
 import net.sourceforge.plantuml.skin.rose.Rose;
 import net.sourceforge.plantuml.style.Style;
 
@@ -151,6 +149,9 @@ public Component createComponent(Style style[], ComponentType type, ArrowConfigu
 		if (type == ComponentType.DESTROY) {
 			return new ComponentTextDestroy();
 		}
+		if (type == ComponentType.REFERENCE) {
+			return new ComponentTextReference(stringsToDisplay, fileFormat);
+		}
 		throw new UnsupportedOperationException(type.toString());
 	}
 	

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/ISkinSimple.java
Patch:
@@ -38,7 +38,6 @@
 import java.util.Map;
 
 import net.sourceforge.plantuml.api.ThemeStyle;
-import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;
 
 public interface ISkinSimple extends SpriteContainer {
@@ -59,8 +58,6 @@ public interface ISkinSimple extends SpriteContainer {
 
 	public LineBreakStrategy wrapWidth();
 
-	public ColorMapper getColorMapper();
-
 	public void copyAllFrom(ISkinSimple other);
 
 	public double minClassWidth();

File: src/net/sourceforge/plantuml/creole/legacy/AtomTextUtils.java
Patch:
@@ -119,7 +119,8 @@ private static Atom createAtomText(final String text, Url url, FontConfiguration
 				final Sprite sprite = skinSimple.getSprite(valSprite);
 				if (sprite != null) {
 					final double scale = Parser.getScale(m.group(4), 1);
-					result.add(new AtomSprite(null, scale, fontConfiguration, sprite, url));
+					result.add(
+							new AtomSprite(null, scale, fontConfiguration, sprite, url, skinSimple.getColorMapper()));
 				}
 			} else if (valImg != null) {
 				final double scale = Parser.getScale(m.group(6), 1);

File: src/net/sourceforge/plantuml/creole/legacy/StripeSimple.java
Patch:
@@ -255,7 +255,7 @@ public void addUrl(Url url) {
 	public void addSprite(String src, double scale, HColor color) {
 		final Sprite sprite = skinParam.getSprite(src);
 		if (sprite != null)
-			atoms.add(new AtomSprite(color, scale, fontConfiguration, sprite, null));
+			atoms.add(new AtomSprite(color, scale, fontConfiguration, sprite, null, skinParam.getColorMapper()));
 	}
 
 	public void addOpenIcon(String src, double scale, HColor color) {

File: src/net/sourceforge/plantuml/graphic/SingleLine.java
Patch:
@@ -74,7 +74,8 @@ public static SingleLine withSomeHtmlTag(String text, FontConfiguration fontConf
 			} else if (cmd instanceof SpriteCommand) {
 				final Sprite sprite = spriteContainer.getSprite(((SpriteCommand) cmd).getSprite());
 				if (sprite != null)
-					result.blocs.add(sprite.asTextBlock(fontConfiguration.getColor(), 1));
+					result.blocs
+							.add(sprite.asTextBlock(fontConfiguration.getColor(), 1, spriteContainer.getColorMapper()));
 
 			} else if (cmd instanceof FontChange) {
 				fontConfiguration = ((FontChange) cmd).apply(fontConfiguration);

File: src/net/sourceforge/plantuml/sprite/ListSpriteDiagram.java
Patch:
@@ -94,7 +94,7 @@ public void drawU(UGraphic ug) {
 					final Sprite sprite = getSkinParam().getSprite(n);
 					TextBlock blockName = Display.create(n).create(FontConfiguration.blackBlueTrue(UFont.sansSerif(14)),
 							HorizontalAlignment.LEFT, getSkinParam());
-					TextBlock tb = sprite.asTextBlock(HColorUtils.BLACK, 1.0);
+					TextBlock tb = sprite.asTextBlock(HColorUtils.BLACK, 1.0, getSkinParam().getColorMapper());
 					tb = TextBlockUtils.mergeTB(tb, blockName, HorizontalAlignment.CENTER);
 					tb.drawU(ug.apply(new UTranslate(x, y)));
 					final Dimension2D dim = tb.calculateDimension(ug.getStringBounder());

File: src/net/sourceforge/plantuml/sprite/Sprite.java
Patch:
@@ -36,10 +36,11 @@
 package net.sourceforge.plantuml.sprite;
 
 import net.sourceforge.plantuml.graphic.TextBlock;
+import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 
 public interface Sprite {
-	
-	public TextBlock asTextBlock(final HColor color, double scale);
+
+	public TextBlock asTextBlock(final HColor color, double scale, ColorMapper colorMapper);
 
 }

File: src/net/sourceforge/plantuml/sprite/SpriteColor.java
Patch:
@@ -124,7 +124,7 @@ public UImage toUImage(ColorMapper colorMapper, HColor backcolor, HColor forecol
 		return new UImage(new PixelImage(im, AffineTransformType.TYPE_BILINEAR));
 	}
 
-	public TextBlock asTextBlock(final HColor color, final double scale) {
+	public TextBlock asTextBlock(final HColor color, final double scale, ColorMapper colorMapper) {
 		return new AbstractTextBlock() {
 
 			public void drawU(UGraphic ug) {

File: src/net/sourceforge/plantuml/sprite/SpriteMonochrome.java
Patch:
@@ -213,7 +213,7 @@ private UImage special(ColorMapper colorMapper, HColorGradient backcolor, HColor
 		return new UImage(new PixelImage(im, AffineTransformType.TYPE_BILINEAR));
 	}
 
-	public TextBlock asTextBlock(final HColor color, final double scale) {
+	public TextBlock asTextBlock(final HColor color, final double scale, ColorMapper colorMapper) {
 		return new AbstractTextBlock() {
 
 			public void drawU(UGraphic ug) {

File: src/net/sourceforge/plantuml/sprite/SpriteSvg.java
Patch:
@@ -43,6 +43,7 @@
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.UImageSvg;
+import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 
 public class SpriteSvg implements Sprite {
@@ -55,7 +56,7 @@ public SpriteSvg(String svg) {
 //		this.img = new UImageSvg(new SvgString(svg, 1));
 	}
 
-	public TextBlock asTextBlock(final HColor color, final double scale) {
+	public TextBlock asTextBlock(final HColor color, final double scale, ColorMapper colorMapper) {
 		final UImageSvg img = new UImageSvg(svg, scale);
 		return new AbstractTextBlock() {
 

File: src/net/sourceforge/plantuml/sprite/StdlibDiagram.java
Patch:
@@ -143,7 +143,7 @@ private void drawInternal(UGraphic ug) throws IOException {
 			final Sprite sprite = getSkinParam().getSprite(n);
 			TextBlock blockName = Display.create(n).create(FontConfiguration.blackBlueTrue(UFont.sansSerif(14)),
 					HorizontalAlignment.LEFT, getSkinParam());
-			TextBlock tb = sprite.asTextBlock(getBlack(), 1.0);
+			TextBlock tb = sprite.asTextBlock(getBlack(), 1.0, getSkinParam().getColorMapper());
 			tb = TextBlockUtils.mergeTB(tb, blockName, HorizontalAlignment.CENTER);
 			tb.drawU(ug.apply(new UTranslate(x, y)));
 			final Dimension2D dim = tb.calculateDimension(ug.getStringBounder());

File: src/net/sourceforge/plantuml/ugraphic/MutableImage.java
Patch:
@@ -48,4 +48,6 @@ public interface MutableImage {
 
 	public MutableImage muteTransparentColor(Color newColor);
 
+	public MutableImage monochrome();
+
 }

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandGrouping.java
Patch:
@@ -93,7 +93,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio
 			if (StringUtils.isEmpty(comment)) {
 				comment = "group";
 			} else {
-				final Pattern p = Pattern.compile("^(.*?)\\[(.*)\\]$");
+				final Pattern p = Pattern.compile("^(.*\\[\\[.*\\]\\].*?|.*?)\\[(.*)\\]$");
 				final Matcher m = p.matcher(comment);
 				if (m.find()) {
 					type = m.group(1);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandGrouping.java
Patch:
@@ -93,7 +93,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio
 			if (StringUtils.isEmpty(comment)) {
 				comment = "group";
 			} else {
-				final Pattern p = Pattern.compile("^(.*(?:\\[\\[.*\\]\\]).*?|.*?)\\[(.*)\\]$");
+				final Pattern p = Pattern.compile("^(.*\\[\\[.*\\]\\].*?|.*?)\\[(.*)\\]$");
 				final Matcher m = p.matcher(comment);
 				if (m.find()) {
 					type = m.group(1);

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandGrouping.java
Patch:
@@ -93,7 +93,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio
 			if (StringUtils.isEmpty(comment)) {
 				comment = "group";
 			} else {
-				final Pattern p = Pattern.compile("^(.*?)\\[(.*)\\]$");
+				final Pattern p = Pattern.compile("^(.*(?:\\[\\[.*\\]\\]).*?|.*?)\\[(.*)\\]$");
 				final Matcher m = p.matcher(comment);
 				if (m.find()) {
 					type = m.group(1);

File: src/net/sourceforge/plantuml/argon2/algorithm/Functions.java
Patch:
@@ -17,7 +17,7 @@ class Functions {
 
 
     /**
-     * H0 = H64(p, Ï„, m, t, v, y, |P|, P, |S|, S, |L|, K, |X|, X)
+     * H0 = H64(p, \u03c4, m, t, v, y, |P|, P, |S|, S, |L|, K, |X|, X)
      * -> 64 byte (ARGON2_PREHASH_DIGEST_LENGTH)
      */
     static byte[] initialHash(byte[] lanes, byte[] outputLength,

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverAtomTextTikz.java
Patch:
@@ -50,7 +50,7 @@ public void draw(AtomText text, double x, double y, ColorMapper mapper, UParam p
 		final FontConfiguration fontConfiguration = text.getFontConfiguration();
 		final UFont font = fontConfiguration.getFont();
 		final HColor col = fontConfiguration.getColor();
-		tikz.setStrokeColor(mapper.toColor(col));
+		tikz.setStrokeColor(col);
 		final boolean underline = fontConfiguration.containsStyle(FontStyle.UNDERLINE);
 		final boolean italic = font.isItalic();
 		final boolean bold = font.isBold();

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverCenteredCharacterTikz.java
Patch:
@@ -57,7 +57,7 @@ public void draw(UCenteredCharacter centeredCharacter, double x, double y, Color
 		final double ypos = y - unusedSpace.getCenterY() - 0.5;
 
 		final TextLayout t = createTextLayout(font, "" + c);
-		tikz.setStrokeColor(mapper.toColor(param.getColor()));
+		tikz.setStrokeColor(param.getColor());
 		tikz.drawPathIterator(xpos, ypos, t.getOutline(null).getPathIterator(null));
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverCenteredCharacterTikz2.java
Patch:
@@ -45,7 +45,7 @@ public class DriverCenteredCharacterTikz2 implements UDriver<UCenteredCharacter,
 	public void draw(UCenteredCharacter centeredCharacter, double x, double y, ColorMapper mapper, UParam param, TikzGraphics tikz) {
 		final char c = centeredCharacter.getChar();
 
-		tikz.setStrokeColor(mapper.toColor(param.getColor()));
+		tikz.setStrokeColor(param.getColor());
 		tikz.drawSingleCharacter(x, y, c);
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverDotPathTikz.java
Patch:
@@ -44,7 +44,7 @@ public class DriverDotPathTikz implements UDriver<DotPath, TikzGraphics> {
 
 	public void draw(DotPath path, double x, double y, ColorMapper mapper, UParam param, TikzGraphics tikz) {
 		tikz.setFillColor(null);
-		tikz.setStrokeColor(mapper.toColor(param.getColor()));
+		tikz.setStrokeColor(param.getColor());
 		tikz.setStrokeWidth(param.getStroke().getThickness(), param.getStroke().getDashTikz());
 		tikz.upath(x, y, path.toUPath());
 	}

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverEllipseTikz.java
Patch:
@@ -50,8 +50,8 @@ public void draw(UEllipse shape, double x, double y, ColorMapper mapper, UParam
 		final double extend = shape.getExtend();
 		final double cx = x + width / 2;
 		final double cy = y + height / 2;
-		tikz.setFillColor(mapper.toColor(param.getBackcolor()));
-		tikz.setStrokeColor(mapper.toColor(param.getColor()));
+		tikz.setFillColor(param.getBackcolor());
+		tikz.setStrokeColor(param.getColor());
 		tikz.setStrokeWidth(param.getStroke().getThickness(), param.getStroke().getDashTikz());
 		if (start == 0 && extend == 0) {
 			tikz.ellipse(cx, cy, width / 2, height / 2);

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverLineTikz.java
Patch:
@@ -45,7 +45,7 @@ public class DriverLineTikz implements UDriver<ULine, TikzGraphics> {
 	public void draw(ULine line, double x, double y, ColorMapper mapper, UParam param, TikzGraphics tikz) {
 		double x2 = x + line.getDX();
 		double y2 = y + line.getDY();
-		tikz.setStrokeColor(mapper.toColor(param.getColor()));
+		tikz.setStrokeColor(param.getColor());
 		tikz.setStrokeWidth(param.getStroke().getThickness(), param.getStroke().getDashTikz());
 		tikz.line(x, y, x2, y2);
 	}

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverTextTikz.java
Patch:
@@ -50,7 +50,7 @@ public void draw(UText shape, double x, double y, ColorMapper mapper, UParam par
 		final FontConfiguration fontConfiguration = shape.getFontConfiguration();
 		final UFont font = fontConfiguration.getFont();
 		final HColor col = fontConfiguration.getColor();
-		tikz.setStrokeColor(mapper.toColor(col));
+		tikz.setStrokeColor(col);
 		final boolean underline = fontConfiguration.containsStyle(FontStyle.UNDERLINE);
 		final boolean italic = font.isItalic();
 		final boolean bold = font.isBold();

File: src/net/sourceforge/plantuml/ugraphic/tikz/UGraphicTikz.java
Patch:
@@ -60,7 +60,7 @@
 public class UGraphicTikz extends AbstractUGraphic<TikzGraphics> implements ClipContainer {
 
 	public UGraphicTikz(HColor defaultBackground, ColorMapper colorMapper, StringBounder stringBounder, double scale, boolean withPreamble) {
-		super(defaultBackground, colorMapper, stringBounder, new TikzGraphics(scale, withPreamble));
+		super(defaultBackground, colorMapper, stringBounder, new TikzGraphics(scale, withPreamble, colorMapper));
 		register();
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 3;
+		final int beta = 4;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/tikz/TikzGraphics.java
Patch:
@@ -209,6 +209,8 @@ private void purgeStyles() {
 	}
 
 	private String definecolor(String name, Color color) {
+		if (color.getAlpha() == 0)
+			color = Color.WHITE;
 		return "\\definecolor{" + name + "}{RGB}{" + color.getRed() + "," + color.getGreen() + "," + color.getBlue()
 				+ "}";
 	}

File: src/net/sourceforge/plantuml/graphic/TextBlockLineBefore.java
Patch:
@@ -100,7 +100,9 @@ public Rectangle2D getInnerPosition(String member, StringBounder stringBounder,
 
 	@Override
 	public Ports getPorts(StringBounder stringBounder) {
-		return ((WithPorts) textBlock).getPorts(stringBounder);
+		if (textBlock instanceof WithPorts)
+			return ((WithPorts) textBlock).getPorts(stringBounder);
+		return new Ports();
 	}
 
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/ugraphic/color/HColorSimple.java
Patch:
@@ -207,8 +207,7 @@ private static float linear(float factor, float x, float y) {
 	}
 
 	public HColor withDark(HColor dark) {
-		return this;
-		// return new HColorSimple(color, monochrome, dark);
+		return new HColorSimple(color, monochrome, dark);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/svg/SvgGraphics.java
Patch:
@@ -141,7 +141,7 @@ final protected void ensureVisible(double x, double y) {
 	}
 
 	public SvgGraphics(String backcolor, boolean svgDimensionStyle, Dimension2D minDim, double scale, String hover,
-			long seed, String preserveAspectRatio, LengthAdjust lengthAdjust) {
+			long seed, String preserveAspectRatio, LengthAdjust lengthAdjust, DarkStrategy darkStrategy) {
 		try {
 			this.lengthAdjust = lengthAdjust;
 			this.svgDimensionStyle = svgDimensionStyle;

File: src/net/sourceforge/plantuml/ugraphic/FontChecker.java
Patch:
@@ -58,6 +58,7 @@
 import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.security.SImageIO;
 import net.sourceforge.plantuml.security.SFile;
+import net.sourceforge.plantuml.svg.DarkStrategy;
 import net.sourceforge.plantuml.svg.LengthAdjust;
 import net.sourceforge.plantuml.svg.SvgGraphics;
 import net.sourceforge.plantuml.ugraphic.color.HColorUtils;
@@ -158,7 +159,7 @@ public void printChar(final PrintWriter pw, char c) throws IOException, Transfor
 
 	private String getSvgImage(char c) throws IOException, TransformerException {
 		final SvgGraphics svg = new SvgGraphics(null, true, new Dimension2DDouble(0, 0), 1.0, null, 42, "none",
-				LengthAdjust.defaultValue());
+				LengthAdjust.defaultValue(), DarkStrategy.IGNORE_DARK_COLOR);
 		svg.setStrokeColor("black");
 		svg.svgImage(getBufferedImage(c), 0, 0);
 		final ByteArrayOutputStream os = new ByteArrayOutputStream();

File: src/net/sourceforge/plantuml/ugraphic/color/HColorSimple.java
Patch:
@@ -207,7 +207,8 @@ private static float linear(float factor, float x, float y) {
 	}
 
 	public HColor withDark(HColor dark) {
-		return new HColorSimple(color, monochrome, dark);
+		return this;
+		// return new HColorSimple(color, monochrome, dark);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/svg/SvgGraphics.java
Patch:
@@ -680,7 +680,7 @@ private void createXmlInternal(OutputStream os) throws TransformerException {
 		root.setAttribute("viewBox", "0 0 " + maxXscaled + " " + maxYscaled);
 		root.setAttribute("zoomAndPan", "magnify");
 		root.setAttribute("preserveAspectRatio", preserveAspectRatio);
-		root.setAttribute("contentScriptType", "application/ecmascript");
+		// root.setAttribute("contentScriptType", "application/ecmascript");
 		root.setAttribute("contentStyleType", "text/css");
 
 		if (pendingBackground != null) {

File: src/jcckit/util/ConfigParameters.java
Patch:
@@ -21,7 +21,7 @@
 import java.awt.Color;
 import java.util.StringTokenizer;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;
 import net.sourceforge.plantuml.ugraphic.color.NoSuchColorException;
@@ -306,7 +306,7 @@ private Color parseColor(String value, String key) {
 private Color decodeInternal(String value) {
 	if (value!=null) {
 		  try {
-			return new ColorMapperIdentity().toColor(colors.getColor(ThemeStyle.LIGHT, value, null));
+			return new ColorMapperIdentity().toColor(colors.getColor(ThemeStyle.LIGHT_REGULAR, value, null));
 		} catch (NoSuchColorException e) {
 			return Color.WHITE;
 		}

File: src/net/sourceforge/plantuml/EmbeddedDiagram.java
Patch:
@@ -200,7 +200,8 @@ public HorizontalAlignment getHorizontalAlignment() {
 		}
 
 		private Diagram getSystem() throws IOException, InterruptedException {
-			final BlockUml blockUml = new BlockUml(system.as2(), Defines.createEmpty(), skinParam, null, null);
+			final BlockUml blockUml = new BlockUml(skinParam.getThemeStyle(), system.as2(), Defines.createEmpty(),
+					skinParam, null, null);
 			return blockUml.getDiagram();
 
 		}

File: src/net/sourceforge/plantuml/ISkinParam.java
Patch:
@@ -194,6 +194,6 @@ public HorizontalAlignment getHorizontalAlignment(AlignmentParam param, ArrowDir
 
 	public LengthAdjust getlengthAdjust();
 
-	public void assumeTransparent(ThemeStyle style);
+	// public void assumeTransparent(ThemeStyle style);
 
 }

File: src/net/sourceforge/plantuml/ISkinSimple.java
Patch:
@@ -37,6 +37,7 @@
 
 import java.util.Map;
 
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;
 
@@ -63,5 +64,7 @@ public interface ISkinSimple extends SpriteContainer {
 	public void copyAllFrom(ISkinSimple other);
 
 	public double minClassWidth();
+	
+	public ThemeStyle getThemeStyle();
 
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/SpriteContainer.java
Patch:
@@ -35,6 +35,7 @@
  */
 package net.sourceforge.plantuml;
 
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.sprite.Sprite;
 
 public interface SpriteContainer extends SvgCharSizeHack {

File: src/net/sourceforge/plantuml/SpriteContainerEmpty.java
Patch:
@@ -37,6 +37,7 @@
 
 import java.util.Map;
 
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.creole.Parser;
 import net.sourceforge.plantuml.sprite.Sprite;
 import net.sourceforge.plantuml.sprite.SpriteImage;
@@ -103,7 +104,7 @@ public String transformStringForSizeHack(String s) {
 	}
 
 	public ThemeStyle getThemeStyle() {
-		return ThemeStyle.LIGHT;
+		return ThemeStyle.LIGHT_REGULAR;
 	}
 
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/activitydiagram/ActivityDiagram.java
Patch:
@@ -42,6 +42,7 @@
 import net.sourceforge.plantuml.Direction;
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.Code;
@@ -62,8 +63,8 @@ public class ActivityDiagram extends CucaDiagram {
 	private IEntity lastEntityBrancheConsulted;
 	private ConditionalContext currentContext;
 
-	public ActivityDiagram(UmlSource source, ISkinSimple skinParam) {
-		super(source, UmlDiagramType.ACTIVITY, skinParam);
+	public ActivityDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		super(style, source, UmlDiagramType.ACTIVITY, skinParam);
 		setNamespaceSeparator(null);
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram/ActivityDiagramFactory.java
Patch:
@@ -46,6 +46,7 @@
 import net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity;
 import net.sourceforge.plantuml.activitydiagram.command.CommandLinkLongActivity;
 import net.sourceforge.plantuml.activitydiagram.command.CommandPartition;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.classdiagram.command.CommandHideShow2;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.CommandFootboxIgnored;
@@ -59,8 +60,8 @@
 public class ActivityDiagramFactory extends PSystemCommandFactory {
 
 	@Override
-	public ActivityDiagram createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new ActivityDiagram(source, skinParam);
+	public ActivityDiagram createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new ActivityDiagram(style, source, skinParam);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/api/PSystemFactory.java
Patch:
@@ -42,7 +42,7 @@
 
 public interface PSystemFactory {
 
-	Diagram createSystem(UmlSource source, ISkinSimple skinParam);
+	Diagram createSystem(ThemeStyle style, UmlSource source, ISkinSimple skinParam);
 
 	DiagramType getDiagramType();
 

File: src/net/sourceforge/plantuml/api/ThemeStyle.java
Patch:
@@ -33,10 +33,10 @@
  *
  *
  */
-package net.sourceforge.plantuml;
+package net.sourceforge.plantuml.api;
 
 public enum ThemeStyle {
 
-	DARK, LIGHT
+	LIGHT_REGULAR, DARK
 
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/bpm/BpmDiagramFactory.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.AbstractPSystem;
 import net.sourceforge.plantuml.ISkinSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.core.DiagramType;
@@ -65,8 +66,8 @@ protected List<Command> createCommands() {
 	}
 
 	@Override
-	public AbstractPSystem createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new BpmDiagram(source);
+	public AbstractPSystem createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new BpmDiagram(style, source);
 	}
 
 }

File: src/net/sourceforge/plantuml/braille/BrailleDrawer.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.braille;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.ugraphic.UEllipse;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
@@ -55,7 +55,7 @@ public BrailleDrawer(BrailleGrid grid) {
 	}
 
 	public void drawU(UGraphic ug) {
-		ug = ug.apply(HColorSet.instance().getColorOrWhite(ThemeStyle.LIGHT, "#F0F0F0"));
+		ug = ug.apply(HColorSet.instance().getColorOrWhite(ThemeStyle.LIGHT_REGULAR, "#F0F0F0"));
 		for (int x = grid.getMinX(); x <= grid.getMaxX(); x++) {
 			ug.apply(UTranslate.dx(x * step + spotSize + 1))
 					.draw(ULine.vline((grid.getMaxY() - grid.getMinY()) * step));

File: src/net/sourceforge/plantuml/classdiagram/AbstractEntityDiagram.java
Patch:
@@ -42,14 +42,15 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.CucaDiagram;
 
 public abstract class AbstractEntityDiagram extends CucaDiagram {
 
-	public AbstractEntityDiagram(UmlSource source, UmlDiagramType type, ISkinSimple orig) {
-		super(source, type, orig);
+	public AbstractEntityDiagram(ThemeStyle style, UmlSource source, UmlDiagramType type, ISkinSimple orig) {
+		super(style, source, type, orig);
 	}
 
 	final protected List<String> getDotStrings() {

File: src/net/sourceforge/plantuml/command/CommandAssumeTransparent.java
Patch:
@@ -36,7 +36,6 @@
 package net.sourceforge.plantuml.command;
 
 import net.sourceforge.plantuml.LineLocation;
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.TitledDiagram;
 import net.sourceforge.plantuml.command.regex.IRegex;
 import net.sourceforge.plantuml.command.regex.RegexConcat;
@@ -61,8 +60,9 @@ static IRegex getRegexConcat() {
 
 	@Override
 	protected CommandExecutionResult executeArg(TitledDiagram system, LineLocation location, RegexResult arg) {
-		final String type = arg.get("TYPE", 0).toUpperCase();
-		system.getSkinParam().assumeTransparent(ThemeStyle.valueOf(type));
+		// final String type = arg.get("TYPE", 0).toUpperCase();
+		// system.getSkinParam().assumeTransparent(ThemeStyle.valueOf(type));
+		// This is ignored and will be suppressed in some future
 		return CommandExecutionResult.ok();
 	}
 

File: src/net/sourceforge/plantuml/compositediagram/CompositeDiagram.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.Code;
@@ -49,8 +50,8 @@
 
 public class CompositeDiagram extends AbstractEntityDiagram {
 
-	public CompositeDiagram(UmlSource source, ISkinSimple skinParam) {
-		super(source, UmlDiagramType.COMPOSITE, skinParam);
+	public CompositeDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		super(style, source, UmlDiagramType.COMPOSITE, skinParam);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/creole/legacy/PSystemCreole.java
Patch:
@@ -77,7 +77,7 @@ protected UDrawable getRootDrawable(FileFormatOption fileFormatOption) {
 		final UFont font = UFont.serif(14);
 		final FontConfiguration fontConfiguration = FontConfiguration.blackBlueTrue(font);
 		final Sheet sheet = Parser.build(fontConfiguration, HorizontalAlignment.LEFT,
-				SkinParam.create(UmlDiagramType.SEQUENCE), CreoleMode.FULL).createSheet(display);
+				SkinParam.create(UmlDiagramType.SEQUENCE, fileFormatOption.getStyle()), CreoleMode.FULL).createSheet(display);
 		return new SheetBlock1(sheet, LineBreakStrategy.NONE, 0);
 
 		// final Dimension2D dim = TextBlockUtils.getDimension(sheetBlock);

File: src/net/sourceforge/plantuml/cucadiagram/CucaDiagram.java
Patch:
@@ -53,6 +53,7 @@
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
 import net.sourceforge.plantuml.api.ImageDataSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.core.ImageData;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -119,8 +120,8 @@ public Ident cleanIdent(Ident ident) {
 		return ident;
 	}
 
-	public CucaDiagram(UmlSource source, UmlDiagramType type, ISkinSimple orig) {
-		super(source, type, orig);
+	public CucaDiagram(ThemeStyle style, UmlSource source, UmlDiagramType type, ISkinSimple orig) {
+		super(style, source, type, orig);
 		this.stacks2.add(Ident.empty());
 	}
 

File: src/net/sourceforge/plantuml/cucadiagram/WithLinkType.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.List;
 import java.util.StringTokenizer;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.color.ColorType;
 import net.sourceforge.plantuml.graphic.color.Colors;
 import net.sourceforge.plantuml.ugraphic.UStroke;

File: src/net/sourceforge/plantuml/descdiagram/DescriptionDiagram.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.StringUtils;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.Code;
@@ -50,8 +51,8 @@
 
 public class DescriptionDiagram extends AbstractEntityDiagram {
 
-	public DescriptionDiagram(UmlSource source, ISkinSimple skinParam) {
-		super(source, UmlDiagramType.DESCRIPTION, skinParam);
+	public DescriptionDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		super(style, source, UmlDiagramType.DESCRIPTION, skinParam);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/flashcode/FlashCodeUtilsZxing.java
Patch:
@@ -43,7 +43,6 @@
 
 import ext.plantuml.com.google.zxing.BarcodeFormat;
 import ext.plantuml.com.google.zxing.EncodeHintType;
-import ext.plantuml.com.google.zxing.WriterException;
 import ext.plantuml.com.google.zxing.client.j2se.MatrixToImageWriter;
 import ext.plantuml.com.google.zxing.common.BitMatrix;
 import ext.plantuml.com.google.zxing.qrcode.QRCodeWriter;
@@ -64,7 +63,7 @@ public BufferedImage exportFlashcode(String s, Color fore, Color back) {
 				final int multiple = 1;
 				final BitMatrix bit = writer.encode(s, BarcodeFormat.QR_CODE, multiple, hints);
 				return MatrixToImageWriter.toBufferedImage(bit, fore.getRGB() | 0xFF000000, back.getRGB() | 0xFF000000);
-			} catch (WriterException e) {
+			} catch (Exception e) {
 				Log.debug("Cannot create qrcode " + e);
 			} finally {
 				lock.unlock();

File: src/net/sourceforge/plantuml/flowdiagram/FlowDiagramFactory.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.ISkinSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.core.DiagramType;
@@ -51,8 +52,8 @@ public FlowDiagramFactory() {
 	}
 
 	@Override
-	public FlowDiagram createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new FlowDiagram(source);
+	public FlowDiagram createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new FlowDiagram(style, source);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/graphic/ColorAndSizeChange.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.graphic;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.regex.Matcher2;
 import net.sourceforge.plantuml.command.regex.MyPattern;
 import net.sourceforge.plantuml.command.regex.Pattern2;

File: src/net/sourceforge/plantuml/graphic/ColorChange.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.graphic;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.regex.Matcher2;
 import net.sourceforge.plantuml.command.regex.MyPattern;
 import net.sourceforge.plantuml.command.regex.Pattern2;

File: src/net/sourceforge/plantuml/graphic/FontConfiguration.java
Patch:
@@ -81,7 +81,7 @@ public FontConfiguration(UFont font, HColor color, HColor hyperlinkColor, boolea
 	}
 
 	public static FontConfiguration blackBlueTrue(UFont font) {
-		return new FontConfiguration(font, HColorUtils.BLACK, HColorUtils.BLUE, true, 8);
+		return new FontConfiguration(font, HColorUtils.BLACK.withDark(HColorUtils.WHITE), HColorUtils.BLUE, true, 8);
 	}
 
 	public FontConfiguration(ISkinParam skinParam, FontParam fontParam, Stereotype stereo) {

File: src/net/sourceforge/plantuml/graphic/HtmlCommandFactory.java
Patch:
@@ -37,10 +37,10 @@
 
 import java.util.EnumSet;
 
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.UrlBuilder;
 import net.sourceforge.plantuml.UrlBuilder.ModeUrl;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.regex.MyPattern;
 import net.sourceforge.plantuml.command.regex.Pattern2;
 

File: src/net/sourceforge/plantuml/graphic/Rainbow.java
Patch:
@@ -42,8 +42,8 @@
 
 import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.ISkinParam;
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.UseStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.skin.rose.Rose;
 import net.sourceforge.plantuml.style.PName;
 import net.sourceforge.plantuml.style.Style;

File: src/net/sourceforge/plantuml/graphic/Splitter.java
Patch:
@@ -42,7 +42,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.StringUtils;
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.regex.Matcher2;
 import net.sourceforge.plantuml.command.regex.MyPattern;
 import net.sourceforge.plantuml.command.regex.Pattern2;

File: src/net/sourceforge/plantuml/graphic/color/ColorParser.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.graphic.color;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.regex.RegexLeaf;
 import net.sourceforge.plantuml.command.regex.RegexResult;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;

File: src/net/sourceforge/plantuml/graphic/color/Colors.java
Patch:
@@ -45,8 +45,8 @@
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.SkinParamColors;
 import net.sourceforge.plantuml.StringUtils;
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.UseStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.cucadiagram.LinkStyle;
 import net.sourceforge.plantuml.cucadiagram.Stereotype;
 import net.sourceforge.plantuml.ugraphic.UGraphic;

File: src/net/sourceforge/plantuml/hcl/HclDiagramFactory.java
Patch:
@@ -41,6 +41,7 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.PSystemAbstractFactory;
 import net.sourceforge.plantuml.core.Diagram;
 import net.sourceforge.plantuml.core.DiagramType;
@@ -56,7 +57,7 @@ public HclDiagramFactory() {
 	}
 
 	@Override
-	public Diagram createSystem(UmlSource source, ISkinSimple skinParam) {
+	public Diagram createSystem(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
 		final List<String> highlighted = new ArrayList<>();
 		JsonValue data = null;
 		StyleExtractor styleExtractor = null;
@@ -77,7 +78,7 @@ public Diagram createSystem(UmlSource source, ISkinSimple skinParam) {
 		} catch (Exception e) {
 			e.printStackTrace();
 		}
-		final JsonDiagram result = new JsonDiagram(source, UmlDiagramType.HCL, data, highlighted);
+		final JsonDiagram result = new JsonDiagram(style, source, UmlDiagramType.HCL, data, highlighted);
 //		if (styleExtractor != null) {
 //			styleExtractor.applyStyles(result.getSkinParam());
 //			final String title = styleExtractor.getTitle();

File: src/net/sourceforge/plantuml/help/HelpFactory.java
Patch:
@@ -39,15 +39,16 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.ISkinSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.core.UmlSource;
 
 public class HelpFactory extends PSystemCommandFactory {
 
 	@Override
-	public Help createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new Help(source);
+	public Help createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new Help(style, source);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/jcckit/PSystemJcckitFactory.java
Patch:
@@ -42,13 +42,13 @@
 import net.sourceforge.plantuml.BackSlash;
 import net.sourceforge.plantuml.Log;
 import net.sourceforge.plantuml.StringUtils;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.PSystemBasicFactory;
 import net.sourceforge.plantuml.command.regex.Matcher2;
 import net.sourceforge.plantuml.command.regex.MyPattern;
 import net.sourceforge.plantuml.command.regex.Pattern2;
 import net.sourceforge.plantuml.core.DiagramType;
 import net.sourceforge.plantuml.core.UmlSource;
-import net.sourceforge.plantuml.ditaa.PSystemDitaa;
 
 public class PSystemJcckitFactory extends PSystemBasicFactory<PSystemJcckit> {
 
@@ -61,7 +61,7 @@ public PSystemJcckitFactory(DiagramType diagramType) {
 	}
 
 	@Override
-	public PSystemJcckit initDiagram(UmlSource source, String startLine) {
+	public PSystemJcckit initDiagram(ThemeStyle style, UmlSource source, String startLine) {
 		this.data = null;
 		this.width = 640;
 		this.height = 400;
@@ -106,7 +106,7 @@ private PSystemJcckit createSystem(UmlSource source) {
 	}
 
 	@Override
-	public PSystemJcckit executeLine(UmlSource source, PSystemJcckit system, String line) {
+	public PSystemJcckit executeLine(ThemeStyle style, UmlSource source, PSystemJcckit system, String line) {
 		if (system == null && line.startsWith("jcckit")) {
 			data = new StringBuilder();
 			extractDimension(line);

File: src/net/sourceforge/plantuml/logo/PSystemLogoFactory.java
Patch:
@@ -35,19 +35,19 @@
  */
 package net.sourceforge.plantuml.logo;
 
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.PSystemBasicFactory;
 import net.sourceforge.plantuml.core.UmlSource;
 
-
 public class PSystemLogoFactory extends PSystemBasicFactory<PSystemLogo> {
 
 	@Override
-	public PSystemLogo initDiagram(UmlSource source, String startLine) {
+	public PSystemLogo initDiagram(ThemeStyle style, UmlSource source, String startLine) {
 		return null;
 	}
 
 	@Override
-	public PSystemLogo executeLine(UmlSource source, PSystemLogo system, String line) {
+	public PSystemLogo executeLine(ThemeStyle style, UmlSource source, PSystemLogo system, String line) {
 		if (system == null && line.equalsIgnoreCase("logo")) {
 			return new PSystemLogo(source);
 		}

File: src/net/sourceforge/plantuml/mindmap/MindMapDiagram.java
Patch:
@@ -47,6 +47,7 @@
 import net.sourceforge.plantuml.FileFormatOption;
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
@@ -74,8 +75,8 @@ public DiagramDescription getDescription() {
 		return new DiagramDescription("MindMap");
 	}
 
-	public MindMapDiagram(UmlSource source) {
-		super(source, UmlDiagramType.MINDMAP);
+	public MindMapDiagram(ThemeStyle style, UmlSource source) {
+		super(style, source, UmlDiagramType.MINDMAP);
 		this.mindmaps.add(new MindMap(getSkinParam()));
 	}
 

File: src/net/sourceforge/plantuml/mindmap/MindMapDiagramFactory.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.ISkinSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.command.CommonCommands;
@@ -67,8 +68,8 @@ protected List<Command> createCommands() {
 	}
 
 	@Override
-	public MindMapDiagram createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new MindMapDiagram(source);
+	public MindMapDiagram createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new MindMapDiagram(style, source);
 	}
 
 }

File: src/net/sourceforge/plantuml/nwdiag/NwDiagram.java
Patch:
@@ -50,6 +50,7 @@
 import net.sourceforge.plantuml.SpriteContainerEmpty;
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
@@ -96,8 +97,8 @@ public DiagramDescription getDescription() {
 		return new DiagramDescription("(Nwdiag)");
 	}
 
-	public NwDiagram(UmlSource source) {
-		super(source, UmlDiagramType.NWDIAG);
+	public NwDiagram(ThemeStyle style, UmlSource source) {
+		super(style, source, UmlDiagramType.NWDIAG);
 	}
 
 	public void init() {

File: src/net/sourceforge/plantuml/objectdiagram/AbstractClassOrObjectDiagram.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -59,8 +60,8 @@
 
 public abstract class AbstractClassOrObjectDiagram extends AbstractEntityDiagram {
 
-	public AbstractClassOrObjectDiagram(UmlSource source, UmlDiagramType type, ISkinSimple orig) {
-		super(source, type, orig);
+	public AbstractClassOrObjectDiagram(ThemeStyle style, UmlSource source, UmlDiagramType type, ISkinSimple orig) {
+		super(style, source, type, orig);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/project/GanttDiagram.java
Patch:
@@ -56,6 +56,7 @@
 import net.sourceforge.plantuml.TitledDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
 import net.sourceforge.plantuml.WithSprite;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
@@ -158,8 +159,8 @@ public void setWeekNumberStrategy(DayOfWeek firstDayOfWeek, int minimalDaysInFir
 		this.weekNumberStrategy = new WeekNumberStrategy(firstDayOfWeek, minimalDaysInFirstWeek);
 	}
 
-	public GanttDiagram(UmlSource source) {
-		super(source, UmlDiagramType.GANTT);
+	public GanttDiagram(ThemeStyle style, UmlSource source) {
+		super(style, source, UmlDiagramType.GANTT);
 	}
 
 	public final int getDpi(FileFormatOption fileFormatOption) {

File: src/net/sourceforge/plantuml/project/draw/TimeHeader.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Objects;
 
 import net.sourceforge.plantuml.SpriteContainerEmpty;
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.graphic.FontConfiguration;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderCalendar.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.project.LoadPlanable;
 import net.sourceforge.plantuml.project.time.Day;
 import net.sourceforge.plantuml.project.time.DayOfWeek;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderDaily.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.project.LoadPlanable;
 import net.sourceforge.plantuml.project.time.Day;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderMonthly.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.project.LoadPlanable;
 import net.sourceforge.plantuml.project.time.Day;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderQuarterly.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.project.LoadPlanable;
 import net.sourceforge.plantuml.project.time.Day;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderSimple.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Map;
 
 import net.sourceforge.plantuml.SpriteContainerEmpty;
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.graphic.TextBlock;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderWeekly.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.project.LoadPlanable;
 import net.sourceforge.plantuml.project.time.Day;

File: src/net/sourceforge/plantuml/project/draw/TimeHeaderYearly.java
Patch:
@@ -38,7 +38,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.project.LoadPlanable;
 import net.sourceforge.plantuml.project.time.Day;

File: src/net/sourceforge/plantuml/salt/Dictionary.java
Patch:
@@ -43,7 +43,7 @@
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.LineBreakStrategy;
 import net.sourceforge.plantuml.SpriteContainer;
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.creole.Parser;
 import net.sourceforge.plantuml.salt.element.Element;
 import net.sourceforge.plantuml.salt.element.WrappedElement;
@@ -129,7 +129,7 @@ public String transformStringForSizeHack(String s) {
 	}
 
 	public ThemeStyle getThemeStyle() {
-		return ThemeStyle.LIGHT;
+		return ThemeStyle.LIGHT_REGULAR;
 	}
 
 }

File: src/net/sourceforge/plantuml/salt/element/AbstractElementText.java
Patch:
@@ -57,7 +57,7 @@ abstract class AbstractElementText extends AbstractElement {
 	private final int charLength;
 
 	public AbstractElementText(String text, UFont font, boolean manageLength, ISkinSimple spriteContainer) {
-		config = FontConfiguration.blackBlueTrue(font);
+		config = blackBlueTrue(font);
 		if (manageLength) {
 			this.charLength = getCharNumber(text);
 			text = StringUtils.trin(text);

File: src/net/sourceforge/plantuml/salt/element/ElementLine.java
Patch:
@@ -43,7 +43,6 @@
 import net.sourceforge.plantuml.ugraphic.ULine;
 import net.sourceforge.plantuml.ugraphic.UStroke;
 import net.sourceforge.plantuml.ugraphic.UTranslate;
-import net.sourceforge.plantuml.ugraphic.color.HColorSet;
 
 public class ElementLine extends AbstractElement {
 
@@ -61,7 +60,7 @@ public void drawU(UGraphic ug, int zIndex, Dimension2D dimToUse) {
 		if (zIndex != 0) {
 			return;
 		}
-		ug = ug.apply(HColorSet.instance().getColorOrWhite(getThemeStyle(), "#AAAAAA"));
+		ug = ug.apply(getColorAA());
 		double y2 = dimToUse.getHeight() / 2;
 		if (separator == '=') {
 			y2 = y2 - 1;

File: src/net/sourceforge/plantuml/salt/element/ElementMenuEntry.java
Patch:
@@ -70,6 +70,7 @@ public Dimension2D getPreferredDimension(StringBounder stringBounder, double x,
 	}
 
 	public void drawU(UGraphic ug, int zIndex, Dimension2D dimToUse) {
+		ug = ug.apply(getBlack());
 		if (background != null) {
 			final Dimension2D dim = getPreferredDimension(ug.getStringBounder(), 0, 0);
 			ug.apply(background.bg()).draw(new URectangle(dim.getWidth(), dim.getHeight()));

File: src/net/sourceforge/plantuml/salt/element/ElementRadioCheckbox.java
Patch:
@@ -79,9 +79,10 @@ public Dimension2D getPreferredDimension(StringBounder stringBounder, double x,
 	}
 
 	public void drawU(UGraphic ug, int zIndex, Dimension2D dimToUse) {
-		if (zIndex != 0) {
+		if (zIndex != 0)
 			return;
-		}
+
+		ug = ug.apply(getBlack());
 		block.drawU(ug.apply(UTranslate.dx(margin)));
 
 		final Dimension2D dim = getPreferredDimension(ug.getStringBounder(), 0, 0);

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -55,6 +55,7 @@
 import net.sourceforge.plantuml.OptionFlags;
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.core.DiagramDescription;
 import net.sourceforge.plantuml.core.ImageData;
@@ -93,8 +94,8 @@ public final void setHideUnlinkedData(boolean hideUnlinkedData) {
 
 	private final Rose skin2 = new Rose();
 
-	public SequenceDiagram(UmlSource source, ISkinSimple skinParam) {
-		super(source, UmlDiagramType.SEQUENCE, skinParam);
+	public SequenceDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		super(style, source, UmlDiagramType.SEQUENCE, skinParam);
 	}
 
 	@Deprecated

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandArrow.java
Patch:
@@ -42,10 +42,10 @@
 
 import net.sourceforge.plantuml.LineLocation;
 import net.sourceforge.plantuml.StringUtils;
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.UrlBuilder;
 import net.sourceforge.plantuml.UrlBuilder.ModeUrl;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.SingleLineCommand2;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelfNoteRight.java
Patch:
@@ -84,8 +84,8 @@ final protected void callbackY_internal(double y) {
 	}
 
 	private Component getComponent(StringBounder stringBounder) {
-		final Component comp = skin.createComponentNote(null, ComponentType.NOTE, noteOnMessage.getSkinParamBackcolored(skinParam),
-				noteOnMessage.getStrings());
+		final Component comp = skin.createComponentNote(noteOnMessage.getUsedStyles(), ComponentType.NOTE,
+				noteOnMessage.getSkinParamBackcolored(skinParam), noteOnMessage.getStrings());
 		return comp;
 	}
 

File: src/net/sourceforge/plantuml/skin/rose/ComponentRoseActiveLine.java
Patch:
@@ -37,8 +37,8 @@
 
 import java.awt.geom.Dimension2D;
 
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.UseStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.graphic.SymbolContext;
 import net.sourceforge.plantuml.skin.AbstractComponent;

File: src/net/sourceforge/plantuml/skin/rose/ComponentRoseLine.java
Patch:
@@ -37,8 +37,8 @@
 
 import java.awt.geom.Dimension2D;
 
-import net.sourceforge.plantuml.ThemeStyle;
 import net.sourceforge.plantuml.UseStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.skin.AbstractComponent;
 import net.sourceforge.plantuml.skin.Area;

File: src/net/sourceforge/plantuml/sprite/StdlibDiagramFactory.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.ISkinSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -54,8 +55,8 @@ protected List<Command> createCommands() {
 	}
 
 	@Override
-	public StdlibDiagram createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new StdlibDiagram(source, skinParam);
+	public StdlibDiagram createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new StdlibDiagram(style, source, skinParam);
 	}
 
 }

File: src/net/sourceforge/plantuml/statediagram/StateDiagram.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.Code;
@@ -59,8 +60,8 @@ public class StateDiagram extends AbstractEntityDiagram {
 
 	private static final String CONCURRENT_PREFIX = "CONC";
 
-	public StateDiagram(UmlSource source, ISkinSimple skinParam) {
-		super(source, UmlDiagramType.STATE, skinParam);
+	public StateDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		super(style, source, UmlDiagramType.STATE, skinParam);
 		// setNamespaceSeparator(null);
 	}
 

File: src/net/sourceforge/plantuml/style/StyleLoader.java
Patch:
@@ -166,7 +166,9 @@ public static Collection<Style> getDeclaredStyles(BlocLines lines, AutomaticCoun
 				final PName key = PName.getFromName(mPropertyAndValue.group(1), scheme);
 				final String value = mPropertyAndValue.group(2);
 				if (key != null && maps.size() > 0)
-					maps.get(maps.size() - 1).put(key, new ValueImpl(value, counter));
+					maps.get(maps.size() - 1).put(key, //
+							scheme == StyleScheme.REGULAR ? //
+									ValueImpl.regular(value, counter) : ValueImpl.dark(value, counter));
 
 				continue;
 			}

File: src/net/sourceforge/plantuml/style/Value.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.style;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;

File: src/net/sourceforge/plantuml/style/ValueAbstract.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.style;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;

File: src/net/sourceforge/plantuml/style/ValueColor.java
Patch:
@@ -35,7 +35,7 @@
  */
 package net.sourceforge.plantuml.style;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;
 

File: src/net/sourceforge/plantuml/style/ValueNull.java
Patch:
@@ -37,7 +37,7 @@
 
 import java.awt.Font;
 
-import net.sourceforge.plantuml.ThemeStyle;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorSet;

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -673,7 +673,7 @@ public void drawU(UGraphic ug, UStroke suggestedStroke, HColor color, Set<String
 			if (endCluster != null) {
 				final double deltaFolderH = endCluster.checkFolderPosition(dotPath.getEndPoint(),
 						ug.getStringBounder());
-				todraw = new DotPath(dotPath);
+				todraw = dotPath.copy();
 				todraw.moveEndPoint(0, deltaFolderH);
 				// moveEndY = deltaFolderH;
 			}
@@ -923,7 +923,7 @@ public void moveSvek(double deltaX, double deltaY) {
 	}
 
 	public final DotPath getDotPath() {
-		final DotPath result = new DotPath(dotPath);
+		final DotPath result = dotPath.copy();
 		result.moveSvek(dx, dy);
 		return result;
 	}

File: src/net/sourceforge/plantuml/svek/image/EntityImageCircleEnd.java
Patch:
@@ -63,7 +63,7 @@ public class EntityImageCircleEnd extends AbstractEntityImage {
 	private final ColorParam param;
 
 	public StyleSignature getDefaultStyleDefinitionCircle() {
-		return StyleSignature.of(SName.root, SName.element, SName.activityDiagram, SName.circle);
+		return StyleSignature.of(SName.root, SName.element, SName.activityDiagram, SName.circle, SName.end);
 	}
 
 	public EntityImageCircleEnd(ILeaf entity, ISkinParam skinParam, ColorParam param) {

File: src/net/sourceforge/plantuml/svek/image/EntityImageCircleStart.java
Patch:
@@ -61,7 +61,7 @@ public class EntityImageCircleStart extends AbstractEntityImage {
 	private final ColorParam colorParam; // = ColorParam.activityStart;
 
 	public StyleSignature getDefaultStyleDefinitionCircle() {
-		return StyleSignature.of(SName.root, SName.element, SName.activityDiagram, SName.circle);
+		return StyleSignature.of(SName.root, SName.element, SName.activityDiagram, SName.circle, SName.start);
 	}
 
 	public EntityImageCircleStart(ILeaf entity, ISkinParam skinParam, ColorParam colorParam) {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/wbs/WBSDiagram.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.FileFormatOption;
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
 import net.sourceforge.plantuml.command.regex.Matcher2;
 import net.sourceforge.plantuml.command.regex.MyPattern;
@@ -68,8 +69,8 @@ public DiagramDescription getDescription() {
 		return new DiagramDescription("Work Breakdown Structure");
 	}
 
-	public WBSDiagram(UmlSource source) {
-		super(source, UmlDiagramType.WBS);
+	public WBSDiagram(ThemeStyle style, UmlSource source) {
+		super(style, source, UmlDiagramType.WBS);
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/wbs/WBSDiagramFactory.java
Patch:
@@ -39,6 +39,7 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.ISkinSimple;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.command.CommonCommands;
@@ -63,8 +64,8 @@ protected List<Command> createCommands() {
 	}
 
 	@Override
-	public WBSDiagram createEmptyDiagram(UmlSource source, ISkinSimple skinParam) {
-		return new WBSDiagram(source);
+	public WBSDiagram createEmptyDiagram(ThemeStyle style, UmlSource source, ISkinSimple skinParam) {
+		return new WBSDiagram(style, source);
 	}
 
 }

File: src/net/sourceforge/plantuml/wire/CommandComponent.java
Patch:
@@ -91,9 +91,8 @@ protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation lo
 
 		final String stringColor = arg.get("COLOR", 0);
 		HColor color = null;
-		if (stringColor != null) {
+		if (stringColor != null)
 			color = HColorSet.instance().getColor(diagram.getSkinParam().getThemeStyle(), stringColor);
-		}
 
 		return diagram.addComponent(indent, name, width, height, color);
 	}

File: src/net/sourceforge/plantuml/wire/CommandSpot.java
Patch:
@@ -84,9 +84,8 @@ protected CommandExecutionResult executeArg(WireDiagram diagram, LineLocation lo
 
 		final String stringColor = arg.get("COLOR", 0);
 		HColor color = null;
-		if (stringColor != null) {
+		if (stringColor != null)
 			color = HColorSet.instance().getColor(diagram.getSkinParam().getThemeStyle(), stringColor);
-		}
 
 		final String x = arg.get("X", 0);
 		final String y = arg.get("Y", 0);

File: src/net/sourceforge/plantuml/wire/WOrientation.java
Patch:
@@ -40,9 +40,9 @@ public enum WOrientation {
 	HORIZONTAL, VERTICAL;
 
 	public static WOrientation from(String style) {
-		if (style.contains("==") || style.contains("--")) {
+		if (style.contains("==") || style.contains("--"))
 			return WOrientation.VERTICAL;
-		}
+
 		return HORIZONTAL;
 	}
 }

File: test/net/sourceforge/plantuml/SkinParamTest.java
Patch:
@@ -9,6 +9,7 @@
 import org.junit.jupiter.params.provider.CsvSource;
 import org.junit.jupiter.params.provider.EnumSource;
 
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.cucadiagram.Rankdir;
 import net.sourceforge.plantuml.cucadiagram.Stereotype;
 import net.sourceforge.plantuml.cucadiagram.dot.DotSplines;
@@ -36,7 +37,7 @@ class SkinParamTest {
 	@EnumSource(UmlDiagramType.class)
 	public void testDefaultValues(UmlDiagramType umlDiagramType) {
 
-		final SkinParam skinParam = SkinParam.create(umlDiagramType);
+		final SkinParam skinParam = SkinParam.create(umlDiagramType, ThemeStyle.LIGHT_REGULAR);
 		final Stereotype fooStereotype = Stereotype.build("<<foo>>");
 
 		assertThat(skinParam.actorStyle()).isEqualTo(ActorStyle.STICKMAN);
@@ -501,7 +502,7 @@ public void test_tabSize() {
 
 	private SkinParam createSkinParam(String... keyValuePairs) {
 		// Using SEQUENCE here is an arbitrary decision that should not affect test outcome
-		final SkinParam skinParam = SkinParam.create(UmlDiagramType.SEQUENCE);
+		final SkinParam skinParam = SkinParam.create(UmlDiagramType.SEQUENCE, ThemeStyle.LIGHT_REGULAR);
 		for (int i = 0; i < keyValuePairs.length; i += 2) {
 			skinParam.setParam(StringUtils.goLowerCase(keyValuePairs[i]), keyValuePairs[i + 1]);
 		}

File: test/net/sourceforge/plantuml/ugraphic/ImageBuilderTest.java
Patch:
@@ -3,6 +3,7 @@
 import net.sourceforge.plantuml.FileFormatOption;
 import net.sourceforge.plantuml.PlainDiagram;
 import net.sourceforge.plantuml.StringLocated;
+import net.sourceforge.plantuml.api.ThemeStyle;
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.creole.legacy.PSystemCreole;
 import net.sourceforge.plantuml.wbs.WBSDiagram;
@@ -48,7 +49,7 @@ public void test_preserveAspectRatio_plainDiagram(String inFileFormatOption, Str
 			nullValues = {"NULL"}
 	)
 	public void test_preserveAspectRatio_styledDiagram(String inSkinParam, String inFileFormatOption, String expected) throws Exception {
-		final WBSDiagram diagram = new WBSDiagram(new UmlSource(new ArrayList<StringLocated>(), false));
+		final WBSDiagram diagram = new WBSDiagram(ThemeStyle.LIGHT_REGULAR, new UmlSource(new ArrayList<StringLocated>(), false));
 		FileFormatOption fileFormatOption = new FileFormatOption(DEBUG);
 
 		if (inSkinParam != null) diagram.setParam("preserveAspectRatio", inSkinParam);

File: src/net/sourceforge/plantuml/tim/TContext.java
Patch:
@@ -117,6 +117,7 @@
 import net.sourceforge.plantuml.tim.stdlib.ReverseHsluvColor;
 import net.sourceforge.plantuml.tim.stdlib.SetVariableValue;
 import net.sourceforge.plantuml.tim.stdlib.Size;
+import net.sourceforge.plantuml.tim.stdlib.SplitStr;
 import net.sourceforge.plantuml.tim.stdlib.StringFunction;
 import net.sourceforge.plantuml.tim.stdlib.Strlen;
 import net.sourceforge.plantuml.tim.stdlib.Strpos;
@@ -185,6 +186,7 @@ private void addStandardFunctions(Defines defines) {
 		functionsSet.addFunction(new Size());
 		functionsSet.addFunction(new GetJsonKey());
 		functionsSet.addFunction(new GetJsonType());
+		functionsSet.addFunction(new SplitStr());
 		// %standard_exists_function
 		// %str_replace
 		// !exit

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreateState.java
Patch:
@@ -171,6 +171,9 @@ private LeafType getTypeFromStereotype(String stereotype) {
 		if ("<<join>>".equalsIgnoreCase(stereotype)) {
 			return LeafType.STATE_FORK_JOIN;
 		}
+		if ("<<start>>".equalsIgnoreCase(stereotype)) {
+			return LeafType.CIRCLE_START;
+		}
 		if ("<<end>>".equalsIgnoreCase(stereotype)) {
 			return LeafType.CIRCLE_END;
 		}

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreateState.java
Patch:
@@ -171,6 +171,9 @@ private LeafType getTypeFromStereotype(String stereotype) {
 		if ("<<join>>".equalsIgnoreCase(stereotype)) {
 			return LeafType.STATE_FORK_JOIN;
 		}
+		if ("<<start>>".equalsIgnoreCase(stereotype)) {
+			return LeafType.CIRCLE_START;
+		}
 		if ("<<end>>".equalsIgnoreCase(stereotype)) {
 			return LeafType.CIRCLE_END;
 		}

File: src/ext/plantuml/com/ctreber/acearth/scanbit/ScanBuf.java
Patch:
@@ -119,7 +119,7 @@ public void addLine(double pXFrom, double pYFrom, double pXTo, double pYTo)
     // Record the x value for every line (y).
     for(int lLineNo = lYFrom; lLineNo <= lYTo; lLineNo++)
     {
-      fScanbuf[lLineNo].add(new Double(lX));
+      fScanbuf[lLineNo].add(Double.valueOf(lX));
       lX += lDx;
     }
     fScanBufsAdded = true;
@@ -152,10 +152,10 @@ public List getScanbits(int pCurveType)
       {
         // Round lLineFrom (but .5 is handled oddly)
         // 1.5001 - 2.5 -> 1.0001 - 2.0 -> 2
-        int lXLo = (int)Math.ceil(lScanLine[n].doubleValue() - 0.5);
+        int lXLo = (int)Math.ceil(lScanLine[n] - 0.5);
         // Round lLineTo, substract 1
         // 1.5 - 2.4999 -> 1.0 - 1.9999 -> 1
-        int lXHi = (int)Math.floor(lScanLine[n + 1].doubleValue() - 0.5);
+        int lXHi = (int)Math.floor(lScanLine[n + 1] - 0.5);
 
         // Limit low and high x to image dimensions
         if(lXLo < 0)

File: src/ext/plantuml/com/google/zxing/common/CharacterSetECI.java
Patch:
@@ -67,13 +67,13 @@ public String getEncodingName() {
 
   private static void addCharacterSet(int value, String encodingName) {
     CharacterSetECI eci = new CharacterSetECI(value, encodingName);
-    VALUE_TO_ECI.put(new Integer(value), eci); // can't use valueOf
+    VALUE_TO_ECI.put(value, eci); // can't use valueOf
     NAME_TO_ECI.put(encodingName, eci);
   }
 
   private static void addCharacterSet(int value, String[] encodingNames) {
     CharacterSetECI eci = new CharacterSetECI(value, encodingNames[0]);
-    VALUE_TO_ECI.put(new Integer(value), eci); // can't use valueOf
+    VALUE_TO_ECI.put(value, eci); // can't use valueOf
     for (int i = 0; i < encodingNames.length; i++) {
       NAME_TO_ECI.put(encodingNames[i], eci);
     }
@@ -92,7 +92,7 @@ public static CharacterSetECI getCharacterSetECIByValue(int value) {
     if (value < 0 || value >= 900) {
       throw new IllegalArgumentException("Bad ECI value: " + value);
     }
-    return (CharacterSetECI) VALUE_TO_ECI.get(new Integer(value));
+    return (CharacterSetECI) VALUE_TO_ECI.get(value);
   }
 
   /**

File: src/net/sourceforge/plantuml/nwdiag/CommandElement.java
Patch:
@@ -52,7 +52,7 @@ public CommandElement() {
 	static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandElement.class.getName(), RegexLeaf.start(), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("NAME", "([%pLN_]+)"), //
+				new RegexLeaf("NAME", "([-.%pLN_]+)"), //
 				RegexLeaf.spaceZeroOrMore(), //
 				new RegexLeaf("DEFINITION", "(\\[(.*)\\])?"), //
 				new RegexLeaf(";?"), RegexLeaf.end());

File: src/net/sourceforge/plantuml/nwdiag/CommandElement.java
Patch:
@@ -52,7 +52,7 @@ public CommandElement() {
 	static IRegex getRegexConcat() {
 		return RegexConcat.build(CommandElement.class.getName(), RegexLeaf.start(), //
 				RegexLeaf.spaceZeroOrMore(), //
-				new RegexLeaf("NAME", "([%pLN_]+)"), //
+				new RegexLeaf("NAME", "([-.%pLN_]+)"), //
 				RegexLeaf.spaceZeroOrMore(), //
 				new RegexLeaf("DEFINITION", "(\\[(.*)\\])?"), //
 				new RegexLeaf(";?"), RegexLeaf.end());

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagramFactory3.java
Patch:
@@ -45,6 +45,7 @@
 import net.sourceforge.plantuml.activitydiagram3.command.CommandArrow3;
 import net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;
 import net.sourceforge.plantuml.activitydiagram3.command.CommandBackward3;
+import net.sourceforge.plantuml.activitydiagram3.command.CommandBackwardLong3;
 import net.sourceforge.plantuml.activitydiagram3.command.CommandBreak;
 import net.sourceforge.plantuml.activitydiagram3.command.CommandCase;
 import net.sourceforge.plantuml.activitydiagram3.command.CommandCircleSpot3;
@@ -125,6 +126,7 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandRepeatWhile3());
 		cmds.add(new CommandRepeatWhile3Multilines());
 		cmds.add(new CommandBackward3());
+		cmds.add(new CommandBackwardLong3());
 		cmds.add(new CommandWhile3());
 		cmds.add(new CommandWhileEnd3());
 		

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandActivityLong3.java
Patch:
@@ -79,9 +79,7 @@ protected CommandExecutionResult executeNow(ActivityDiagram3 diagram, BlocLines
 		final RegexResult line0 = getStartingPattern().matcher(lines.getFirst().getTrimmed().getString());
 		final Colors colors = color().getColor(diagram.getSkinParam().getThemeStyle(), line0,
 				diagram.getSkinParam().getIHtmlColorSet());
-		// final HtmlColor color =
-		// diagram.getSkinParam().getIHtmlColorSet().getColorIfValid(line0.get("COLOR",
-		// 0));
+
 		final BoxStyle style = BoxStyle.fromChar(lines.getLastChar());
 		lines = lines.removeStartingAndEnding(line0.get("DATA", 0), 1);
 		return diagram.addActivity(lines.toDisplay(), style, null, colors, null);

File: src/net/sourceforge/plantuml/security/SFile.java
Patch:
@@ -172,6 +172,9 @@ public void delete() {
 
 	public Collection<SFile> listFiles() {
 		final File[] tmp = internal.listFiles();
+		if (tmp == null)
+			return Collections.emptyList();
+		
 		final List<SFile> result = new ArrayList<>(tmp.length);
 		for (File f : tmp) {
 			result.add(new SFile(f));

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/Splash.java
Patch:
@@ -212,8 +212,8 @@ private void drawProgessBar(Graphics g, int intValue, int totalValue) {
 		final int y = 33;
 		final int barWidth = 170;
 		final int barHeight = (int) (rect.getHeight() + 2);
-		final int grey = 230;
-		g.setColor(new Color(grey, grey, grey));
+		final int gray = 230;
+		g.setColor(new Color(gray, gray, gray));
 		final int value = barWidth * intValue / totalValue;
 		g.fillRect(x, y, value, barHeight);
 		g.setColor(Color.BLACK);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/CollisionDetector.java
Patch:
@@ -91,7 +91,7 @@ static class Context {
 		public void drawDebug(UGraphic ug) {
 			for (MinMax minmax : rectangles) {
 				if (collision(minmax)) {
-					minmax.drawGrey(ug);
+					minmax.drawGray(ug);
 				}
 			}
 			final HColor color = HColorUtils.BLACK;

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/Zad.java
Patch:
@@ -56,7 +56,7 @@ public void drawDebug(UGraphic ug) {
 		ug = ug.apply(HColorUtils.BLUE.bg()).apply(HColorUtils.RED_LIGHT);
 		for (MinMax minMax : rectangles) {
 			System.err.println("minmax=" + minMax);
-			minMax.drawGrey(ug);
+			minMax.drawGray(ug);
 		}
 
 	}

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -256,9 +256,9 @@ private FileMaker getSequenceDiagramPngMaker(int index, FileFormatOption fileFor
 		if (fileFormat == FileFormat.ATXT || fileFormat == FileFormat.UTXT)
 			return new SequenceDiagramTxtMaker(this, fileFormat);
 
-        if (fileFormat.name().startsWith("XMI"))
+		if (fileFormat.name().startsWith("XMI"))
 			return new SequenceDiagramXmiMaker(this, fileFormat);
-        
+
 		if (modeTeoz())
 			return new SequenceDiagramFileMakerTeoz(this, skin2, fileFormatOption, index);
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTile.java
Patch:
@@ -263,7 +263,7 @@ private Real getPoint2(final StringBounder stringBounder) {
 			if (isReverse(stringBounder)) {
 				return livingSpace2.getPosD(stringBounder);
 			}
-			return livingSpace2.getPosB();
+			return livingSpace2.getPosB(stringBounder);
 		}
 		return livingSpace2.getPosC(stringBounder);
 	}

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LifeEventTile.java
Patch:
@@ -114,7 +114,7 @@ public void addConstraints() {
 
 	public Real getMinX() {
 		// return tileArguments.getLivingSpace(lifeEvent.getParticipant()).getPosB();
-		return livingSpace.getPosB();
+		return livingSpace.getPosB(getStringBounder());
 	}
 
 	public Real getMaxX() {

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LivingSpaces.java
Patch:
@@ -62,8 +62,8 @@ public void addConstraints(StringBounder stringBounder) {
 		LivingSpace previous = null;
 		for (LivingSpace current : all.values()) {
 			if (previous != null) {
-				final Real point1 = previous.getPosD(stringBounder);
-				final Real point2 = current.getPosB();
+				final Real point1 = previous.getPosE(stringBounder);
+				final Real point2 = current.getPosA(stringBounder);
 				point2.ensureBiggerThan(point1.addFixed(10));
 			}
 			previous = current;
@@ -108,7 +108,7 @@ public void drawHeads(final UGraphic ug, Context2D context, VerticalAlignment ve
 		final StringBounder stringBounder = ug.getStringBounder();
 		final double headHeight = getHeadHeight(stringBounder);
 		for (LivingSpace livingSpace : values()) {
-			final double x = livingSpace.getPosB().getCurrentValue();
+			final double x = livingSpace.getPosB(stringBounder).getCurrentValue();
 			double y = 0;
 			if (verticalAlignment == VerticalAlignment.BOTTOM) {
 				final Dimension2D dimHead = livingSpace.getHeadPreferredDimension(stringBounder);

File: src/net/sourceforge/plantuml/sequencediagram/teoz/NoteTile.java
Patch:
@@ -112,7 +112,7 @@ private double getUsedWidth(StringBounder stringBounder) {
 		final Dimension2D dim = comp.getPreferredDimension(stringBounder);
 		final double width = dim.getWidth();
 		if (note.getPosition() == NotePosition.OVER_SEVERAL) {
-			final double x1 = livingSpace1.getPosB().getCurrentValue();
+			final double x1 = livingSpace1.getPosB(stringBounder).getCurrentValue();
 			final double x2 = livingSpace2.getPosD(stringBounder).getCurrentValue();
 			final double w = x2 - x1;
 			if (width < w) {
@@ -157,7 +157,7 @@ public void addConstraints() {
 	public Real getMinX() {
 		final Real result = getX(getStringBounder());
 		if (note.getPosition() == NotePosition.OVER_SEVERAL) {
-			final Real x1 = livingSpace1.getPosB();
+			final Real x1 = livingSpace1.getPosB(getStringBounder());
 			return RealUtils.min(result, x1);
 		}
 		return result;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/ReferenceTile.java
Patch:
@@ -75,7 +75,7 @@ private void init(StringBounder stringBounder) {
 			final LivingSpace livingSpace = tileArguments.getLivingSpace(p);
 			final Real pos = livingSpace.getPosC(stringBounder);
 			if (first == null || pos.getCurrentValue() < first.getCurrentValue()) {
-				this.first = livingSpace.getPosB();
+				this.first = livingSpace.getPosB(stringBounder);
 			}
 			if (last == null || pos.getCurrentValue() > last.getCurrentValue()) {
 				this.last = livingSpace.getPosD(stringBounder);

File: src/net/sourceforge/plantuml/sprite/SpriteColorBuilder.java
Patch:
@@ -55,7 +55,7 @@ public static Sprite buildSprite(List<CharSequence> strings) {
 				final char charColor = strings.get(line).charAt(col);
 				final int idx = "0123456789ABCDEF".indexOf(charColor);
 				if (idx != -1) {
-					result.setGrey(col, line, idx);
+					result.setGray(col, line, idx);
 				} else {
 					final Color rgb = COLOR_PALETTE.getColorFor(charColor);
 					result.setColor(col, line, rgb.getRGB() & 0xFFFFFF);

File: src/net/sourceforge/plantuml/ugraphic/MinMax.java
Patch:
@@ -153,7 +153,7 @@ public Dimension2D getDimension() {
 		return new Dimension2DDouble(maxX - minX, maxY - minY);
 	}
 
-	public void drawGrey(UGraphic ug) {
+	public void drawGray(UGraphic ug) {
 		draw(ug, HColorUtils.GRAY);
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/PixelImage.java
Patch:
@@ -129,8 +129,8 @@ private int getDarkerRgb() {
 				// if (isTransparent(color)) {
 				// continue;
 				// }
-				final int grey = ColorUtils.getGrayScale(rgb);
-				if (darkerRgb == -1 || grey < ColorUtils.getGrayScale(darkerRgb)) {
+				final int gray = ColorUtils.getGrayScale(rgb);
+				if (darkerRgb == -1 || gray < ColorUtils.getGrayScale(darkerRgb)) {
 					darkerRgb = rgb;
 				}
 			}

File: src/net/sourceforge/plantuml/ugraphic/color/ColorUtils.java
Patch:
@@ -97,7 +97,7 @@ public static Color reverseHsluv(Color color) {
 		return new Color(red2, green2, blue2);
 	}
 
-	public static Color greyToColor(Color color, int grey) {
+	public static Color grayToColor(double coef, Color color) {
 		final int red = color.getRed();
 		final int green = color.getGreen();
 		final int blue = color.getBlue();
@@ -108,7 +108,7 @@ public static Color greyToColor(Color color, int grey) {
 		final double s = hsluv[1];
 		double l = hsluv[2];
 
-		l = l + (100 - l) * (grey / 255.0);
+		l = l + (100 - l) * coef;
 
 		final double rgb[] = HUSLColorConverter.hsluvToRgb(new double[] { h, s, l });
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 9;
+		final int beta = 10;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/project/GanttDiagramFactory.java
Patch:
@@ -50,6 +50,7 @@
 import net.sourceforge.plantuml.project.command.CommandFootbox;
 import net.sourceforge.plantuml.project.command.CommandGanttArrow;
 import net.sourceforge.plantuml.project.command.CommandGanttArrow2;
+import net.sourceforge.plantuml.project.command.CommandHideRessourceName;
 import net.sourceforge.plantuml.project.command.CommandLabelOnColumn;
 import net.sourceforge.plantuml.project.command.CommandLanguage;
 import net.sourceforge.plantuml.project.command.CommandNoteBottom;
@@ -109,6 +110,7 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandNoteBottom());
 		cmds.add(new CommandFootbox());
 		cmds.add(new CommandLabelOnColumn());
+		cmds.add(new CommandHideRessourceName());
 
 		// cmds.add(new CommandScaleWidthAndHeight());
 		// cmds.add(new CommandScaleWidthOrHeight());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 5;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/gtile/GtileColumns.java
Patch:
@@ -36,11 +36,9 @@
 package net.sourceforge.plantuml.activitydiagram3.gtile;
 
 import java.awt.geom.Dimension2D;
-import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashSet;
 import java.util.List;
-import java.util.ListIterator;
 import java.util.Set;
 
 import net.sourceforge.plantuml.Dimension2DDouble;

File: src/net/sourceforge/plantuml/activitydiagram3/gtile/GtileIfAlone.java
Patch:
@@ -101,7 +101,7 @@ public Collection<GConnection> getInnerConnections() {
 
 		final double xright = calculateDimension(stringBounder).getWidth();
 
-		final GConnection arrow3 = new GConnectionLeftThenVerticalThenRight(getPos1(), tile1.getGPoint(GPoint.EAST_HOOK),
+		final GConnection arrow3 = new GConnectionSideThenVerticalThenSide(getPos1(), tile1.getGPoint(GPoint.EAST_HOOK),
 				getPos3(), tile3.getGPoint(GPoint.EAST_HOOK), xright, TextBlockUtils.EMPTY_TEXT_BLOCK);
 
 		return Arrays.asList(arrow1, arrow2, arrow3);

File: src/net/sourceforge/plantuml/activitydiagram3/gtile/GtileIfHexagon.java
Patch:
@@ -50,7 +50,6 @@
 import net.sourceforge.plantuml.style.StyleSignature;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.UTranslate;
-import net.sourceforge.plantuml.utils.MathUtils;
 
 public class GtileIfHexagon extends GtileColumns {
 

File: src/net/sourceforge/plantuml/activitydiagram3/gtile/GtileWithNotes.java
Patch:
@@ -46,8 +46,6 @@
 import net.sourceforge.plantuml.LineBreakStrategy;
 import net.sourceforge.plantuml.UseStyle;
 import net.sourceforge.plantuml.activitydiagram3.PositionedNote;
-import net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;
-import net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;
 import net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;
 import net.sourceforge.plantuml.creole.CreoleMode;
 import net.sourceforge.plantuml.creole.Parser;

File: src/net/sourceforge/plantuml/svek/SvekNode.java
Patch:
@@ -206,9 +206,8 @@ private void appendLabelHtmlSpecialForLink(StringBuilder sb, StringBounder strin
 		sb.append("<TABLE BGCOLOR=\"" + DotStringFactory.sharp000000(color)
 				+ "\" BORDER=\"0\" CELLBORDER=\"0\" CELLSPACING=\"0\" CELLPADDING=\"0\">");
 		double position = 0;
-		for (Map.Entry<String, PortGeometry> ent : ports.getAllWithEncodedPortId().entrySet()) {
-			final String portId = ent.getKey();
-			final PortGeometry geom = ent.getValue();
+		for (PortGeometry geom : ports.getAllPortGeometry()) {
+			final String portId = geom.getId();
 			final double missing = geom.getPosition() - position;
 			appendTr(sb, null, missing);
 			appendTr(sb, portId, geom.getHeight());

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/cucadiagram/Body3.java
Patch:
@@ -90,6 +90,7 @@ private TextBlock getTextBlock() {
 		return foo;
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		return new Ports();
 	}

File: src/net/sourceforge/plantuml/cucadiagram/BodyEnhanced1.java
Patch:
@@ -122,7 +122,7 @@ private static boolean isTreeOrTable(String s) {
 	}
 
 	@Override
-	protected TextBlock getArea(StringBounder stringBounder) {
+	final protected TextBlock getArea(StringBounder stringBounder) {
 		if (area != null) {
 			return area;
 		}
@@ -226,6 +226,7 @@ private static String purge(String s, String start) {
 		return s;
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		final TextBlock area = getArea(stringBounder);
 		if (area instanceof WithPorts) {

File: src/net/sourceforge/plantuml/cucadiagram/TextBlockMap.java
Patch:
@@ -84,6 +84,7 @@ public TextBlockMap(FontConfiguration fontConfiguration, FontParam fontParam, IS
 		}
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		final Ports ports = new Ports();
 		int i = 0;
@@ -92,7 +93,7 @@ public Ports getPorts(StringBounder stringBounder) {
 			final TextBlock key = ent.getKey();
 			final TextBlock value = ent.getValue();
 			final double height = getHeightOfRow(stringBounder, key, value);
-			ports.add(keys.get(i), y, height);
+			ports.add(keys.get(i), 100, y, height);
 			y += height;
 			i++;
 		}

File: src/net/sourceforge/plantuml/cucadiagram/entity/EntityImpl.java
Patch:
@@ -730,8 +730,7 @@ public void setSpecificColorTOBEREMOVED(ColorType type, HColor color) {
 
 	public Collection<String> getPortShortNames() {
 		checkNotGroup();
-		// return Collections.unmodifiableCollection(portShortNames);
-		return portShortNames;
+		return Collections.unmodifiableCollection(portShortNames);
 	}
 
 	public void addPortShortName(String portShortName) {

File: src/net/sourceforge/plantuml/graphic/TextBlockLineBefore.java
Patch:
@@ -96,6 +96,7 @@ public Rectangle2D getInnerPosition(String member, StringBounder stringBounder,
 		return textBlock.getInnerPosition(member, stringBounder, strategy);
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		return ((WithPorts) textBlock).getPorts(stringBounder);
 	}

File: src/net/sourceforge/plantuml/graphic/TextBlockMarged.java
Patch:
@@ -96,6 +96,7 @@ public Rectangle2D getInnerPosition(String member, StringBounder stringBounder,
 		return translate.apply(parent);
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		return ((WithPorts) textBlock).getPorts(stringBounder).translateY(top);
 	}

File: src/net/sourceforge/plantuml/graphic/TextBlockVertical2.java
Patch:
@@ -122,6 +122,7 @@ public void drawU(UGraphic ug) {
 		}
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		double y = 0;
 		// final Dimension2D dimtotal = calculateDimension(stringBounder);

File: src/net/sourceforge/plantuml/svek/IEntityImage.java
Patch:
@@ -47,7 +47,7 @@ public interface IEntityImage extends Hideable, TextBlockBackcolored {
 	public ShapeType getShapeType();
 
 	public Margins getShield(StringBounder stringBounder);
-	
+
 	public double getOverscanX(StringBounder stringBounder);
 
 }
\ No newline at end of file

File: src/net/sourceforge/plantuml/svek/InnerActivity.java
Patch:
@@ -63,8 +63,7 @@ public InnerActivity(final IEntityImage im, HColor borderColor, HColor backColor
 	public void drawU(UGraphic ug) {
 		final Dimension2D total = calculateDimension(ug.getStringBounder());
 
-		ug = ug.apply(backColor.bg()).apply(borderColor)
-				.apply(new UStroke(THICKNESS_BORDER));
+		ug = ug.apply(backColor.bg()).apply(borderColor).apply(new UStroke(THICKNESS_BORDER));
 		final URectangle rect = new URectangle(total.getWidth(), total.getHeight()).rounded(IEntityImage.CORNER);
 		rect.setDeltaShadow(shadowing);
 		ug.draw(rect);

File: src/net/sourceforge/plantuml/svek/image/EntityImageClass.java
Patch:
@@ -232,6 +232,7 @@ private void drawInternal(UGraphic ug) {
 		}
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		final Dimension2D dimHeader = header.calculateDimension(stringBounder);
 		if (body instanceof WithPorts)

File: src/net/sourceforge/plantuml/svek/image/EntityImageMap.java
Patch:
@@ -129,6 +129,7 @@ public EntityImageMap(ILeaf entity, ISkinParam skinParam, PortionShower portionS
 
 	}
 
+	@Override
 	public Ports getPorts(StringBounder stringBounder) {
 		final Dimension2D dimTitle = getTitleDimension(stringBounder);
 		return ((WithPorts) entries).getPorts(stringBounder).translateY(dimTitle.getHeight());

File: src/net/sourceforge/plantuml/svek/image/EntityImageState.java
Patch:
@@ -49,9 +49,6 @@
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.graphic.TextBlock;
-import net.sourceforge.plantuml.style.SName;
-import net.sourceforge.plantuml.style.Style;
-import net.sourceforge.plantuml.style.StyleSignature;
 import net.sourceforge.plantuml.ugraphic.UEllipse;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.UGroupType;

File: src/net/sourceforge/plantuml/svek/image/EntityImageState2.java
Patch:
@@ -39,7 +39,6 @@
 
 import net.sourceforge.plantuml.FontParam;
 import net.sourceforge.plantuml.ISkinParam;
-import net.sourceforge.plantuml.LineConfigurable;
 import net.sourceforge.plantuml.SkinParamUtils;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.cucadiagram.BodyFactory;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/core/ImageData.java
Patch:
@@ -74,7 +74,7 @@ public interface ImageData {
 	 * &lt;map id="foo_map" name="foo_map"&gt;
 	 * &lt;area shape="rect" id="..." href="..." title="..." alt="" coords="64,68,93,148"/&gt;
 	 * &lt;/map&gt;
-	 * </code>
+	 * </pre>
 	 * 
 	 * @param nameId the id to be used in the cmap data string.
 	 */

File: src/net/sourceforge/plantuml/core/UmlSource.java
Patch:
@@ -204,7 +204,7 @@ public boolean getTotalLineCountLessThan5() {
 	 * Check if a source diagram description is empty. Does not take comment line
 	 * into account.
 	 * 
-	 * @return <code>true<code> if the diagram does not contain information.
+	 * @return <code>true</code> if the diagram does not contain information.
 	 */
 	public boolean isEmpty() {
 		for (StringLocated s : source) {

File: src/net/sourceforge/plantuml/tim/stdlib/LoadJson.java
Patch:
@@ -62,7 +62,7 @@
  * Supports three parameters for datasource, default JSON value and charset. The
  * datasource will be checked against the security rules.
  * <p>
- * Examples:</br>
+ * Examples:<br/>
  * 
  * <pre>
  *     &#64; startuml

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 8;
+		final int beta = 9;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/nwdiag/NwDiagramFactory.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.ISkinSimple;
 import net.sourceforge.plantuml.command.Command;
+import net.sourceforge.plantuml.command.CommandFootboxIgnored;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.core.DiagramType;
 import net.sourceforge.plantuml.core.UmlSource;
@@ -68,6 +69,7 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandLink());
 		cmds.add(new CommandProperty());
 		cmds.add(new CommandEndSomething());
+		cmds.add(new CommandFootboxIgnored());
 		return cmds;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 7;
+		final int beta = 8;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/cucadiagram/DisplayPositioned.java
Patch:
@@ -38,7 +38,7 @@
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.graphic.VerticalAlignment;
 
-public class DisplayPositioned implements DisplayPositionned {
+public class DisplayPositioned extends DisplayPositionned {
 
 	private final Display display;
 	private final HorizontalAlignment horizontalAlignment;

File: src/net/sourceforge/plantuml/AbstractPSystem.java
Patch:
@@ -50,6 +50,7 @@
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.cucadiagram.DisplayPositioned;
+import net.sourceforge.plantuml.cucadiagram.DisplayPositionned;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.graphic.VerticalAlignment;
 import net.sourceforge.plantuml.stats.StatsUtilsIncrement;
@@ -128,7 +129,7 @@ public void setSplitPagesVertical(int splitPagesVertical) {
 		this.splitPagesVertical = splitPagesVertical;
 	}
 
-	public DisplayPositioned getTitle() {
+	public DisplayPositionned getTitle() {
 		if (source == null) {
 			return DisplayPositioned.single(Display.empty(), HorizontalAlignment.CENTER, VerticalAlignment.TOP);
 		}

File: src/net/sourceforge/plantuml/Annotated.java
Patch:
@@ -37,11 +37,12 @@
 
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.cucadiagram.DisplayPositioned;
+import net.sourceforge.plantuml.cucadiagram.DisplayPositionned;
 import net.sourceforge.plantuml.cucadiagram.DisplaySection;
 
 public interface Annotated {
 
-	public DisplayPositioned getTitle();
+	public DisplayPositionned getTitle();
 
 	public DisplayPositioned getCaption();
 

File: src/net/sourceforge/plantuml/AnnotatedWorker.java
Patch:
@@ -179,7 +179,7 @@ public TextBlock getCaption() {
 	}
 
 	private TextBlock addTitle(TextBlock original) {
-		final DisplayPositioned title = annotated.getTitle();
+		final DisplayPositioned title = (DisplayPositioned) annotated.getTitle();
 		if (title.isNull()) {
 			return original;
 		}

File: src/net/sourceforge/plantuml/TitledDiagram.java
Patch:
@@ -44,6 +44,7 @@
 import net.sourceforge.plantuml.core.UmlSource;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.cucadiagram.DisplayPositioned;
+import net.sourceforge.plantuml.cucadiagram.DisplayPositionned;
 import net.sourceforge.plantuml.cucadiagram.DisplaySection;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.graphic.VerticalAlignment;
@@ -172,7 +173,7 @@ final public void setTitle(DisplayPositioned title) {
 	}
 
 	@Override
-	final public DisplayPositioned getTitle() {
+	final public DisplayPositionned getTitle() {
 		return title;
 	}
 

File: src/net/sourceforge/plantuml/project/draw/AbstractTaskDraw.java
Patch:
@@ -101,7 +101,7 @@ public AbstractTaskDraw(TimeScale timeScale, Real y, String prettyDisplay, Day s
 	abstract StyleSignature getStyleSignature();
 
 	private StyleSignature getStyleSignatureUnstarted() {
-		return StyleSignature.of(SName.root, SName.element, SName.ganttDiagram, SName.unstartedTask);
+		return StyleSignature.of(SName.root, SName.element, SName.ganttDiagram, SName.task, SName.unstarted);
 	}
 
 	final protected HColor getLineColor() {

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -118,7 +118,7 @@ public enum SName {
 	timeline, //
 	timingDiagram, //
 	title, //
-	unstartedTask, //
+	unstarted, //
 	usecase, //
 	wbsDiagram, //
 	yamlDiagram; //

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 5;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/style/CommandStyleMultilinesCSS.java
Patch:
@@ -35,6 +35,7 @@
  */
 package net.sourceforge.plantuml.style;
 
+import net.sourceforge.plantuml.SkinParam;
 import net.sourceforge.plantuml.TitledDiagram;
 import net.sourceforge.plantuml.UseStyle;
 import net.sourceforge.plantuml.command.BlocLines;
@@ -73,6 +74,7 @@ protected CommandExecutionResult executeNow(TitledDiagram diagram, BlocLines lin
 			for (Style modifiedStyle : StyleLoader.getDeclaredStyles(lines.subExtract(1, 1), styleBuilder)) {
 				diagram.getSkinParam().muteStyle(modifiedStyle);
 			}
+			((SkinParam) diagram.getSkinParam()).applyPendingStyleMigration();
 			return CommandExecutionResult.ok();
 		} catch (NoStyleAvailableException e) {
 			// e.printStackTrace();

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 4;
+		final int beta = 5;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/jsondiagram/StyleExtractor.java
Patch:
@@ -62,6 +62,8 @@ public StyleExtractor(Iterator<StringLocated> data) {
 						break;
 					line = data.next();
 				}
+			} else if (line.getString().trim().startsWith("!assume ")) {
+				// Ignore
 			} else if (line.getString().trim().startsWith("!pragma ")) {
 				// Ignore
 			} else if (line.getString().trim().startsWith("title ")) {

File: src/net/sourceforge/plantuml/tim/iterator/CodeIteratorSub.java
Patch:
@@ -67,6 +67,9 @@ public Map<String, Sub> getSubs() {
 	}
 
 	public StringLocated peek() throws EaterException, EaterExceptionLocated {
+		if (readingInProgress != null) {
+			return readingInProgress.peek();
+		}
 		StringLocated result = source.peek();
 		if (result == null) {
 			return null;

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 3;
+		final int beta = 4;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/svek/Cluster.java
Patch:
@@ -320,7 +320,7 @@ public void drawU(UGraphic ug, UStroke strokeForState, UmlDiagramType umlDiagram
 		final double rounded;
 		final double shadowing;
 		if (UseStyle.useBetaStyle()) {
-			style = getDefaultStyleDefinition(umlDiagramType.getStyleName())
+			style = getDefaultStyleDefinition(umlDiagramType.getStyleName()).with(group.getStereotype())
 					.getMergedStyle(skinParam.getCurrentStyleBuilder());
 			shadowing = style.value(PName.Shadowing).asDouble();
 			borderColor = style.value(PName.LineColor).asColor(skinParam2.getThemeStyle(),

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 1;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/LineConfigurable.java
Patch:
@@ -41,7 +41,7 @@
 
 public interface LineConfigurable {
 
-	public Colors getColors(ISkinParam skinParam);
+	public Colors getColors();
 	
 	public void setSpecificColorTOBEREMOVED(ColorType type, HColor color);
 

File: src/net/sourceforge/plantuml/SpecificBackcolorable.java
Patch:
@@ -39,7 +39,7 @@
 
 public interface SpecificBackcolorable {
 
-	public Colors getColors(ISkinParam skinParam);
+	public Colors getColors();
 
 	// public void setSpecificColorTOBEREMOVED(ColorType type, HtmlColor color);
 	

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/Swimlane.java
Patch:
@@ -35,7 +35,6 @@
  */
 package net.sourceforge.plantuml.activitydiagram3.ftile;
 
-import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.SpecificBackcolorable;
 import net.sourceforge.plantuml.cucadiagram.Display;
 import net.sourceforge.plantuml.graphic.color.ColorType;
@@ -87,7 +86,7 @@ public final void setWidth(double actualWidth) {
 		this.actualWidth = actualWidth;
 	}
 
-	public Colors getColors(ISkinParam skinParam) {
+	public Colors getColors() {
 		return colors;
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/Swimlanes.java
Patch:
@@ -306,7 +306,7 @@ private void drawWhenSwimlanes(UGraphic ug, TextBlock full) {
 			final LaneDivider divider1 = dividers.get(i);
 
 			final double xpos = swimlane.getTranslate().getDx() + swimlane.getMinMax().getMinX();
-			final HColor back = swimlane.getColors(skinParam).getColor(ColorType.BACK);
+			final HColor back = swimlane.getColors().getColor(ColorType.BACK);
 			if (back != null) {
 				final LaneDivider divider2 = dividers.get(i + 1);
 				final UGraphic background = ug.apply(back.bg()).apply(back)

File: src/net/sourceforge/plantuml/cucadiagram/GroupRoot.java
Patch:
@@ -269,7 +269,7 @@ public Bodier getBodier() {
 	}
 
 	@Override
-	public Colors getColors(ISkinParam skinParam) {
+	public Colors getColors() {
 		return Colors.empty();
 	}
 

File: src/net/sourceforge/plantuml/cucadiagram/entity/EntityFactory.java
Patch:
@@ -124,20 +124,20 @@ public ILeaf createLeafForEmptyGroup(IGroup g, ISkinParam skinParam) {
 		final USymbol symbol = g.getUSymbol();
 		folder.setUSymbol(symbol);
 		folder.setStereotype(g.getStereotype());
-		folder.setColors(g.getColors(skinParam));
+		folder.setColors(g.getColors());
 		if (g.getUrl99() != null) {
 			folder.addUrl(g.getUrl99());
 		}
 		if (UseStyle.useBetaStyle()) {
 			// System.err.println("Backcolor ?");
 		} else {
-			if (g.getColors(skinParam).getColor(ColorType.BACK) == null) {
+			if (g.getColors().getColor(ColorType.BACK) == null) {
 				final ColorParam param = symbol == null ? ColorParam.packageBackground : symbol.getColorParamBack();
 				final HColor c1 = skinParam.getHtmlColor(param, g.getStereotype(), false);
 				folder.setSpecificColorTOBEREMOVED(ColorType.BACK,
 						c1 == null ? skinParam.getBackgroundColor() : c1);
 			} else {
-				folder.setSpecificColorTOBEREMOVED(ColorType.BACK, g.getColors(skinParam).getColor(ColorType.BACK));
+				folder.setSpecificColorTOBEREMOVED(ColorType.BACK, g.getColors().getColor(ColorType.BACK));
 			}
 		}
 		emptyGroupsAsNode.put(g, folder);

File: src/net/sourceforge/plantuml/cucadiagram/entity/EntityImpl.java
Patch:
@@ -714,7 +714,7 @@ public Map<String, Display> getTips() {
 
 	private Colors colors = Colors.empty();
 
-	public Colors getColors(ISkinParam skinParam) {
+	public Colors getColors() {
 		return colors;
 	}
 

File: src/net/sourceforge/plantuml/descdiagram/EntityImageDesignedDomain.java
Patch:
@@ -127,7 +127,7 @@ final public void drawU(UGraphic ug) {
 		URectangle rect2 = new URectangle(4, heightTotal);
 
 		ug = ug.apply(SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.designedBorder));
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.designedBackground);
 		}

File: src/net/sourceforge/plantuml/descdiagram/EntityImageDomain.java
Patch:
@@ -129,7 +129,7 @@ final public void drawU(UGraphic ug) {
 		final URectangle rect = new URectangle(widthTotal, heightTotal);
 
 		ug = ug.apply(SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.domainBorder));
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.domainBackground);
 		}

File: src/net/sourceforge/plantuml/descdiagram/EntityImageMachine.java
Patch:
@@ -126,7 +126,7 @@ final public void drawU(UGraphic ug) {
 		URectangle rect2 = new URectangle(4, heightTotal);
 
 		ug = ug.apply(SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.machineBorder));
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.machineBackground);
 		}

File: src/net/sourceforge/plantuml/descdiagram/EntityImageRequirement.java
Patch:
@@ -117,12 +117,12 @@ final public void drawU(UGraphic ug) {
 		}
 
 		ug = ug.apply(getStroke());
-		HColor linecolor = getEntity().getColors(getSkinParam()).getColor(ColorType.LINE);
+		HColor linecolor = getEntity().getColors().getColor(ColorType.LINE);
 		if (linecolor == null) {
 			linecolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.requirementBorder);
 		}
 		ug = ug.apply(linecolor);
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.requirementBackground);
 		}

File: src/net/sourceforge/plantuml/elk/CucaDiagramFileMakerElk.java
Patch:
@@ -264,15 +264,15 @@ private void drawSingleCluster(UGraphic ug, IGroup group, ElkNode elkNode) {
 				final Style style = Cluster.getDefaultStyleDefinition(umlDiagramType.getStyleName())
 						.getMergedStyle(skinParam.getCurrentStyleBuilder());
 				shadowing = style.value(PName.Shadowing).asDouble();
-				stroke = style.getStroke();
+				stroke = Cluster.getStrokeInternal(group, skinParam, style);
 			} else {
 				if (group.getUSymbol() == null) {
 					shadowing = skinParam.shadowing2(group.getStereotype(), USymbol.PACKAGE.getSkinParameter()) ? 3 : 0;
 				} else {
 					shadowing = skinParam.shadowing2(group.getStereotype(), group.getUSymbol().getSkinParameter()) ? 3
 							: 0;
 				}
-				stroke = Cluster.getStrokeInternal(group, skinParam);
+				stroke = Cluster.getStrokeInternal(group, skinParam, null);
 			}
 			HColor backColor = getBackColor(umlDiagramType);
 			backColor = Cluster.getBackColor(backColor, skinParam, group.getStereotype(),

File: src/net/sourceforge/plantuml/error/PSystemError.java
Patch:
@@ -350,7 +350,7 @@ private TextBlockBackcolored getMessageDedication() {
 		final BufferedImage qrcode = smaller(
 				utils.exportFlashcode("http://plantuml.com/dedication", Color.BLACK, backColor.getColor999()));
 		final Display disp = Display.create("<b>Add your own dedication into PlantUML", " ", "For just $5 per month!",
-				"Details on <i>[[http://plantuml.com/dedication]]");
+				"Details on <i>[[https://plantuml.com/dedication]]");
 
 		final UFont font = UFont.sansSerif(14);
 		final FontConfiguration fc = new FontConfiguration(font, HColorUtils.BLACK, HColorUtils.BLACK, false);

File: src/net/sourceforge/plantuml/sequencediagram/Note.java
Patch:
@@ -142,7 +142,7 @@ public NotePosition getPosition() {
 		return position;
 	}
 
-	final public Colors getColors(ISkinParam skinParam) {
+	final public Colors getColors() {
 		return colors;
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/Participant.java
Patch:
@@ -82,7 +82,7 @@ public Style[] getUsedStyles() {
 		}
 		final StyleSignature signature = getDefaultStyleDefinition().with(stereotype);
 		Style tmp = signature.getMergedStyle(styleBuilder);
-		tmp = tmp.eventuallyOverride(getColors(null));
+		tmp = tmp.eventuallyOverride(getColors());
 		Style stereo = getDefaultStyleDefinition().forStereotypeItself(stereotype).getMergedStyle(styleBuilder);
 		if (tmp != null) {
 			stereo = tmp.mergeWith(stereo);
@@ -163,7 +163,7 @@ public SymbolContext getLiveSpecificBackColors() {
 		return liveBackcolors;
 	}
 
-	public Colors getColors(ISkinParam skinParam) {
+	public Colors getColors() {
 		return colors;
 	}
 
@@ -199,7 +199,7 @@ public ColorParam getBackgroundColorParam() {
 
 	public SkinParamBackcolored getSkinParamBackcolored(ISkinParam skinParam) {
 		final ColorParam param = getColorParam();
-		HColor specificBackColor = getColors(skinParam).getColor(ColorType.BACK);
+		HColor specificBackColor = getColors().getColor(ColorType.BACK);
 		final boolean clickable = getUrl() != null;
 		final HColor stereoBackColor = skinParam.getHtmlColor(getBackgroundColorParam(), getStereotype(), clickable);
 		if (stereoBackColor != null && specificBackColor == null) {

File: src/net/sourceforge/plantuml/svek/GroupPngMakerActivity.java
Patch:
@@ -137,9 +137,9 @@ skinParam, new InnerGroupHierarchy(), diagram.getColorMapper(), diagram.getEntit
 		if (group.getGroupType() == GroupType.INNER_ACTIVITY) {
 			final Stereotype stereo = group.getStereotype();
 			final HColor borderColor = getColor(ColorParam.activityBorder, stereo);
-			final HColor backColor = group.getColors(skinParam).getColor(ColorType.BACK) == null
+			final HColor backColor = group.getColors().getColor(ColorType.BACK) == null
 					? getColor(ColorParam.background, stereo)
-					: group.getColors(skinParam).getColor(ColorType.BACK);
+					: group.getColors().getColor(ColorType.BACK);
 			final double shadowing;
 			if (UseStyle.useBetaStyle()) {
 				final Style style = getDefaultStyleDefinitionGroup().getMergedStyle(skinParam.getCurrentStyleBuilder());

File: src/net/sourceforge/plantuml/svek/GroupPngMakerState.java
Patch:
@@ -177,7 +177,7 @@ skinParam, new InnerGroupHierarchy(), diagram.getColorMapper(), diagram.getEntit
 			throw new UnsupportedOperationException(group.getGroupType().toString());
 		}
 
-		HColor borderColor = group.getColors(skinParam).getColor(ColorType.LINE);
+		HColor borderColor = group.getColors().getColor(ColorType.LINE);
 		if (borderColor == null) {
 			if (UseStyle.useBetaStyle())
 				borderColor = getStyleState().value(PName.LineColor).asColor(skinParam.getThemeStyle(),
@@ -186,7 +186,7 @@ skinParam, new InnerGroupHierarchy(), diagram.getColorMapper(), diagram.getEntit
 				borderColor = getColor(ColorParam.stateBorder, group.getStereotype());
 		}
 		final Stereotype stereo = group.getStereotype();
-		final HColor tmp = group.getColors(skinParam).getColor(ColorType.BACK);
+		final HColor tmp = group.getColors().getColor(ColorType.BACK);
 		final HColor backColor;
 		if (tmp == null)
 			if (UseStyle.useBetaStyle())
@@ -207,7 +207,7 @@ skinParam, new InnerGroupHierarchy(), diagram.getColorMapper(), diagram.getEntit
 		final boolean containsOnlyConcurrentStates = containsOnlyConcurrentStates(dotData);
 		final IEntityImage image = containsOnlyConcurrentStates ? buildImageForConcurrentState(dotData)
 				: svek2.buildImage(null, new String[0]);
-		UStroke stroke = group.getColors(skinParam).getSpecificLineStroke();
+		UStroke stroke = group.getColors().getSpecificLineStroke();
 		if (stroke == null) {
 			stroke = new UStroke(1.5);
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImageActivity.java
Patch:
@@ -160,7 +160,7 @@ public StyleSignature getDefaultStyleDefinition() {
 
 	private UGraphic applyColors(UGraphic ug) {
 		HColor borderColor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.activityBorder);
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.activityBackground);
 		}
@@ -169,7 +169,7 @@ private UGraphic applyColors(UGraphic ug) {
 			final Style style = getDefaultStyleDefinition().getMergedStyle(getSkinParam().getCurrentStyleBuilder());
 			borderColor = style.value(PName.LineColor).asColor(getSkinParam().getThemeStyle(),
 					getSkinParam().getIHtmlColorSet());
-			backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+			backcolor = getEntity().getColors().getColor(ColorType.BACK);
 			if (backcolor == null) {
 				backcolor = style.value(PName.BackGroundColor).asColor(getSkinParam().getThemeStyle(),
 						getSkinParam().getIHtmlColorSet());

File: src/net/sourceforge/plantuml/svek/image/EntityImageDescription.java
Patch:
@@ -107,7 +107,7 @@ public class EntityImageDescription extends AbstractEntityImage {
 
 	public EntityImageDescription(ILeaf entity, ISkinParam skinParam2, PortionShower portionShower,
 			Collection<Link> links, SName styleName, Bibliotekon bibliotekon) {
-		super(entity, entity.getColors(skinParam2).mute(skinParam2));
+		super(entity, entity.getColors().mute(skinParam2));
 		this.useRankSame = getSkinParam().useRankSame();
 		this.bibliotekon = bibliotekon;
 		this.fixCircleLabelOverlapping = getSkinParam().fixCircleLabelOverlapping();
@@ -129,7 +129,7 @@ public EntityImageDescription(ILeaf entity, ISkinParam skinParam2, PortionShower
 
 		this.url = entity.getUrl99();
 
-		final Colors colors = entity.getColors(getSkinParam());
+		final Colors colors = entity.getColors();
 		HColor backcolor = colors.getColor(ColorType.BACK);
 		final HColor forecolor;
 		final double roundCorner;

File: src/net/sourceforge/plantuml/svek/image/EntityImageEmptyPackage.java
Patch:
@@ -101,7 +101,7 @@ public EntityImageEmptyPackage(ILeaf entity, ISkinParam skinParam, PortionShower
 		super(entity, skinParam);
 		this.styleName = styleName;
 
-		final Colors colors = entity.getColors(getSkinParam());
+		final Colors colors = entity.getColors();
 		final HColor specificBackColor = colors.getColor(ColorType.BACK);
 		this.stereotype = entity.getStereotype();
 		final FontConfiguration titleFontConfiguration;

File: src/net/sourceforge/plantuml/svek/image/EntityImageLollipopInterfaceEye2.java
Patch:
@@ -89,7 +89,7 @@ public EntityImageLollipopInterfaceEye2(ILeaf entity, ISkinParam skinParam, Port
 
 		this.url = entity.getUrl99();
 
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), symbol.getColorParamBack());
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImageMap.java
Patch:
@@ -172,7 +172,7 @@ final public void drawU(UGraphic ug) {
 
 		final HColor borderColor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.objectBorder);
 		ug = ug.apply(borderColor);
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			if (UseStyle.useBetaStyle())
 				backcolor = getStyle().value(PName.BackGroundColor).asColor(getSkinParam().getThemeStyle(),
@@ -211,7 +211,7 @@ final public void drawU(UGraphic ug) {
 	}
 
 	private UStroke getStroke() {
-		UStroke stroke = lineConfig.getColors(getSkinParam()).getSpecificLineStroke();
+		UStroke stroke = lineConfig.getColors().getSpecificLineStroke();
 		if (stroke == null) {
 			stroke = getSkinParam().getThickness(LineParam.objectBorder, getStereo());
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImageObject.java
Patch:
@@ -170,7 +170,7 @@ final public void drawU(UGraphic ug) {
 
 		final HColor borderColor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.objectBorder);
 		ug = ug.apply(borderColor);
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			if (UseStyle.useBetaStyle())
 				backcolor = getStyle().value(PName.BackGroundColor).asColor(getSkinParam().getThemeStyle(),
@@ -207,7 +207,7 @@ final public void drawU(UGraphic ug) {
 	}
 
 	private UStroke getStroke() {
-		UStroke stroke = lineConfig.getColors(getSkinParam()).getSpecificLineStroke();
+		UStroke stroke = lineConfig.getColors().getSpecificLineStroke();
 		if (stroke == null) {
 			stroke = getSkinParam().getThickness(LineParam.objectBorder, getStereo());
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImagePort.java
Patch:
@@ -99,7 +99,7 @@ final public void drawU(UGraphic ug) {
 
 		ug = ug.apply(new UStroke(1.5))
 				.apply(SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.stateBorder).bg());
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.stateBackground);
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImageState2.java
Patch:
@@ -74,7 +74,7 @@ public EntityImageState2(ILeaf entity, ISkinParam skinParam) {
 
 		final USymbol symbol = USymbol.FRAME;
 
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), symbol.getColorParamBack());
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImageStateBorder.java
Patch:
@@ -82,7 +82,7 @@ final public void drawU(UGraphic ug) {
 
 		ug = ug.apply(new UStroke(1.5))
 				.apply(SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.stateBorder));
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			backcolor = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.stateBackground);
 		}

File: src/net/sourceforge/plantuml/svek/image/EntityImageStateCommon.java
Patch:
@@ -100,7 +100,7 @@ final protected Style getStyleState() {
 	}
 
 	final protected UStroke getStroke() {
-		UStroke stroke = lineConfig.getColors(getSkinParam()).getSpecificLineStroke();
+		UStroke stroke = lineConfig.getColors().getSpecificLineStroke();
 		if (stroke == null) {
 			stroke = new UStroke(1.5);
 		}
@@ -130,7 +130,7 @@ final protected URectangle getShape(final Dimension2D dimTotal) {
 
 	final protected UGraphic applyColor(UGraphic ug) {
 
-		HColor classBorder = lineConfig.getColors(getSkinParam()).getColor(ColorType.LINE);
+		HColor classBorder = lineConfig.getColors().getColor(ColorType.LINE);
 		if (classBorder == null) {
 			if (UseStyle.useBetaStyle())
 				classBorder = getStyleState().value(PName.LineColor).asColor(getSkinParam().getThemeStyle(),
@@ -139,7 +139,7 @@ final protected UGraphic applyColor(UGraphic ug) {
 				classBorder = SkinParamUtils.getColor(getSkinParam(), getStereo(), ColorParam.stateBorder);
 		}
 		ug = ug.apply(getStroke()).apply(classBorder);
-		HColor backcolor = getEntity().getColors(getSkinParam()).getColor(ColorType.BACK);
+		HColor backcolor = getEntity().getColors().getColor(ColorType.BACK);
 		if (backcolor == null) {
 			if (UseStyle.useBetaStyle())
 				backcolor = getStyleState().value(PName.BackGroundColor).asColor(getSkinParam().getThemeStyle(),

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 1;
 		return beta;
 	}
 

File: src/ext/plantuml/com/ctreber/acearth/ACearth.java
Patch:
@@ -36,8 +36,7 @@
 import ext.plantuml.com.ctreber.aclib.sort.QuickSort;
 
 /**
- * <h1>AC.earth - XEarth for Java
- * <h1>
+ * <h1>AC.earth - XEarth for Java</h1>
  * 
  * <p>
  * The original XEarth was written by Kirk Johnson in July 1993 - thank you for
@@ -370,4 +369,4 @@ public ConfigurationACearth getConf() {
 		return fConf;
 	}
 
-}
\ No newline at end of file
+}

File: src/ext/plantuml/com/ctreber/acearth/MapData.java
Patch:
@@ -4,8 +4,7 @@
 import java.util.List;
 
 /**
- * <h1>AC.earth - XEarth for Java
- * <h1>
+ * <h1>AC.earth - XEarth for Java</h1>
  * 
  * <p>
  * The original XEarth was written by Kirk Johnson in July 1993 - thank you for
@@ -6832,4 +6831,4 @@ public List getLines() {
 	}
 
 
-}
\ No newline at end of file
+}

File: src/ext/plantuml/com/ctreber/acearth/MapDataReader.java
Patch:
@@ -44,8 +44,6 @@ public class MapDataReader {
 	 * <p>
 	 * Read map data.
 	 * 
-	 * @param pFileName
-	 *            Map data file name.
 	 * @return Array of map polygons.
 	 * @throws IOException
 	 */

File: src/jcckit/GraphicsPlotCanvas.java
Patch:
@@ -93,7 +93,7 @@ public class GraphicsPlotCanvas extends PlotCanvas {
 	 * <td>Foreground color of the wrapped AWT component.</td>
 	 * </tr>
 	 * <tr>
-	 * <td><tt>doubleBuffering = true</td>
+	 * <td><tt>doubleBuffering = true</tt></td>
 	 *     <td><tt>boolean</tt></td><td>no</td>
 	 *     <td>If <tt>true</tt> the plot will be painted by using 
 	 *         double-buffering and pre-rendered view of the coordinate system.

File: src/jcckit/graphic/GraphicalComposite.java
Patch:
@@ -66,6 +66,7 @@ public void removeAllElements() {
   /**
    * Replaces the specified element at the specified index of
    * the list of elements.
+   * @param index Index of the element to be replaced.
    * @param element New element. <tt>null</tt> is not allowed.
    * @throws NullPointerException if <tt>element == null</tt>
    */

File: src/jcckit/graphic/Polygon.java
Patch:
@@ -31,6 +31,7 @@ public class Polygon extends BasicGraphicalElement {
 
   /**
    * Creates an instance of the specified graphic attributes.
+   * @param attributes attributes of the instance to be created
    * @param closed <tt>true</tt> if this polygon is closed.
    */
   public Polygon(GraphicAttributes attributes, boolean closed) {

File: src/jcckit/graphic/ShapeAttributes.java
Patch:
@@ -47,7 +47,7 @@ public class ShapeAttributes implements LineAttributes, FillAttributes {
    *     <th>Description</th></tr>
    * <tr><td><tt>fillColor = <i>no filling</i></tt></td><td><tt>Color</tt></td>
    *     <td>no</td><td>The fill color of the shape.</td></tr>
-   * <tr><td><tt>lineColor = <i>no line<i></tt></td><td><tt>Color</tt></td>
+   * <tr><td><tt>lineColor = <i>no line</i></tt></td><td><tt>Color</tt></td>
    *     <td>no</td><td>The color of a line, a polygon, or the border of a shape.</td></tr>
    * <tr><td><tt>lineThickness = 0</tt></td><td><tt>double</tt></td>
    *     <td>no</td>

File: src/jcckit/plot/Hint.java
Patch:
@@ -21,8 +21,8 @@
 
 /**
  * Marker interface of all types of hints. Hints are used to calculate 
- * {@link jcckit.graphic.GraphicalElement} representing a point in a {@link
- * Curve}. For example, in a chart with stacked
+ * {@link jcckit.graphic.GraphicalElement} representing a point in a
+ * {@link Curve}. For example, in a chart with stacked
  * bars the data determines the height of a bar but the foot of
  * a bar is determined by the height of the bar below. Its value will be
  * stored in a {@link PositionHint}.

File: src/jcckit/plot/SimpleCurveFactory.java
Patch:
@@ -42,8 +42,8 @@ public class SimpleCurveFactory implements CurveFactory {
    * <table border=1 cellpadding=5>
    * <tr><th>Key &amp; Default Value</th><th>Type</th><th>Mandatory</th>
    *     <th>Description</th></tr>
-   * <tr><td><tt>definitions = </tt><i>one empty <tt>ConfigParameters<tt> 
-   *         instance</i></td>
+   * <tr><td><tt>definitions = </tt><i>one empty</i> <tt>ConfigParameters</tt> 
+   *         <i>instance</i></td>
    *     <td><tt>String[]</tt></td><td>no</td>
    *     <td>Keys of subtrees defining {@link ConfigParameters}
    *         used by the {@link SimpleCurve#SimpleCurve constructor} of 

File: src/jcckit/plot/TicLabelMap.java
Patch:
@@ -43,7 +43,7 @@
  * <p>
  * The second form maps a particular number onto a label. In order to be
  * equal with the sepcified number the tic value should not deviate more
- * than 1 ppm (part per millions) from <tt><i>&lt;number&gt;</i>.
+ * than 1 ppm (part per millions) from <tt><i>&lt;number&gt;</i></tt>.
  * <p>
  * The third form maps an interval onto a label. The condition reads
  * <p>

File: src/jcckit/util/ConfigData.java
Patch:
@@ -21,7 +21,7 @@
 /**
  *  Interface for hierarchically managed key-value pairs. The key is
  *  always a string which contains any kind of printable character except
- *  '/', '=', ':', and whitespace characters like ' ' and '\t'. 
+ *  '/', '=', ':', and whitespace characters like ' ' and '\\t'. 
  *  The value is either a string or a <tt>ConfigData</tt> object.
  *  <p>
  *  This interface will be used by {@link ConfigParameters} in accordance

File: src/jcckit/util/Format.java
Patch:
@@ -59,7 +59,7 @@ public static Format create(ConfigParameters config, String key) {
    *  Creates an instance for the specified format string.
    *  The format string is an alternation of some static texts and
    *  format elements.
-   *  A format element has to start with '%' and it must end with
+   *  A format element has to start with `%` and it must end with
    *  one of the following format descriptors:
    *  <table border=0 cellpadding=5>
    *    <tr><td><tt>d</tt></td>
@@ -77,7 +77,7 @@ public static Format create(ConfigParameters config, String key) {
    *            format of logarithmic format depending on the size of
    *            the mantissa.</td></tr>
    *  </table>
-   *  The characters between '%' and the decriptor are optional.
+   *  The characters between `%` and the decriptor are optional.
    *  They can be grouped into
    *  <ul><li>modifier<br>
    *          it is
@@ -90,7 +90,7 @@ public static Format create(ConfigParameters config, String key) {
    *          of the result
    *      <li>precision
    *  </ul>
-   *  A plain '%' is coded as '%%'.
+   *  A plain `%` is coded as `%%`.
    *  @param formatString The format string.
    *  @exception IllegalArgumentException if invalid format string.
    */

File: src/net/sourceforge/plantuml/core/ImageData.java
Patch:
@@ -72,13 +72,13 @@ public interface ImageData {
 	 * For example, if you call this method with <code>nameId</code>
 	 * set to "foo_map", you will get something like:
 	 * 
-	 * <code><pre>
+	 * <pre>
 	 * &lt;map id="foo_map" name="foo_map"&gt;
 	 * &lt;area shape="rect" id="..." href="..." title="..." alt="" coords="64,68,93,148"/&gt;
 	 * &lt;/map&gt;
-	 * </pre></code>
+	 * </code>
 	 * 
-	 * @param nameId thie id to be used in the cmap data string.
+	 * @param nameId the id to be used in the cmap data string.
 	 * @return
 	 */
 	public String getCMapData(String nameId);

File: src/net/sourceforge/plantuml/swing/ImageHelper.java
Patch:
@@ -55,7 +55,7 @@ public class ImageHelper {
 	 *            the original image to be scaled
 	 * @param targetDim
 	 *            the desired dimensions of the scaled instance, in pixels
-	 * @param hint
+	 * @param hints
 	 *            RenderingHints used when scaling the image
 	 * @param higherQuality
 	 *            if true, this method will use a multi-step scaling technique that provides higher quality than the

File: src/net/sourceforge/plantuml/zopfli/Cookie.java
Patch:
@@ -166,7 +166,7 @@ static void fillCostMax(long[] array, int length) {
 
   /**
    * Maximum amount of blocks to split into.
-   * <p/>
+   * <p>
    * {@code 0} for unlimited.
    */
   final int blockSplittingMax = 15;

File: src/org/stathissideris/ascii2image/graphics/Diagram.java
Patch:
@@ -103,8 +103,8 @@ public class Diagram {
 	 * <p>Finally, the text processing occurs: [pending]</p>
 	 * 
 	 * @param grid
-	 * @param cellWidth
-	 * @param cellHeight
+	 * @param options
+	 * @param processingOptions
 	 */
 	public Diagram(TextGrid grid, ConversionOptions options, ProcessingOptions processingOptions) {
 		

File: src/org/stathissideris/ascii2image/graphics/DiagramShape.java
Patch:
@@ -532,6 +532,7 @@ public ArrayList getEdges(){
 	 *
 	 * @param pointInCell
 	 * @param otherPoint
+	 * @param diagram
 	 * @return
 	 */
 	public ShapePoint getCellEdgePointBetween(ShapePoint pointInCell, ShapePoint otherPoint, Diagram diagram){

File: src/org/stathissideris/ascii2image/graphics/ShapeEdge.java
Patch:
@@ -106,7 +106,7 @@ public ShapePoint getMiddle(){
 
 	/**
 	 * Returns the type of the edge
-	 * (<code>TYPE_HORIZONTAL, TYPE_VERTICAL, TYPE_SLOPED).
+	 * (<code>TYPE_HORIZONTAL, TYPE_VERTICAL, TYPE_SLOPED</code>).
 	 * 
 	 * @return
 	 */

File: src/org/stathissideris/ascii2image/text/TextGrid.java
Patch:
@@ -1292,7 +1292,7 @@ public void fillCellsWith(Iterable cells, char c){
 		}
 	}
 
-	/**
+	/*
 	 * 
 	 * Fills the continuous area with if c1 characters with c2,
 	 * flooding from cell x, y

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -101,7 +101,6 @@
 import net.sourceforge.plantuml.ugraphic.UTranslate;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorNone;
-import net.sourceforge.plantuml.ugraphic.color.HColorUtils;
 
 public class SvekLine implements Moveable, Hideable, GuideLine {
 
@@ -234,7 +233,7 @@ public SvekLine(Link link, ColorSequence colorSequence, ISkinParam skinParam, St
 		this.defaultThickness = skinParam.getThickness(LineParam.arrow, null);
 		this.arrowLollipopColor = skinParam.getHtmlColor(ColorParam.arrowLollipop, null, false);
 		if (arrowLollipopColor == null) {
-			this.arrowLollipopColor = HColorUtils.WHITE;
+			this.arrowLollipopColor = backgroundColor;
 		}
 		this.pragma = pragma;
 		this.bibliotekon = bibliotekon;
@@ -1042,4 +1041,4 @@ public Stereotype getStereotype() {
 		return link.getStereotype();
 	}
 
-}
\ No newline at end of file
+}

File: src/net/sourceforge/plantuml/tim/expression/ReversePolishInterpretor.java
Patch:
@@ -95,7 +95,7 @@ public ReversePolishInterpretor(LineLocation location, TokenStack queue, Knowled
 				if (trace)
 					System.err.println("function=" + function);
 				if (function == null) {
-					throw EaterException.unlocated("Unknow built-in function " + token2.getSurface());
+					throw EaterException.unlocated("Unknown built-in function " + token2.getSurface());
 				}
 				if (function.canCover(nb, Collections.<String>emptySet()) == false) {
 					throw EaterException

File: src/net/sourceforge/plantuml/tim/expression/ReversePolishInterpretor.java
Patch:
@@ -95,7 +95,7 @@ public ReversePolishInterpretor(LineLocation location, TokenStack queue, Knowled
 				if (trace)
 					System.err.println("function=" + function);
 				if (function == null) {
-					throw EaterException.unlocated("Unknow built-in function " + token2.getSurface());
+					throw EaterException.unlocated("Unknown built-in function " + token2.getSurface());
 				}
 				if (function.canCover(nb, Collections.<String>emptySet()) == false) {
 					throw EaterException

File: src/net/sourceforge/plantuml/svek/SvekLine.java
Patch:
@@ -101,7 +101,6 @@
 import net.sourceforge.plantuml.ugraphic.UTranslate;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorNone;
-import net.sourceforge.plantuml.ugraphic.color.HColorUtils;
 
 public class SvekLine implements Moveable, Hideable, GuideLine {
 
@@ -234,7 +233,7 @@ public SvekLine(Link link, ColorSequence colorSequence, ISkinParam skinParam, St
 		this.defaultThickness = skinParam.getThickness(LineParam.arrow, null);
 		this.arrowLollipopColor = skinParam.getHtmlColor(ColorParam.arrowLollipop, null, false);
 		if (arrowLollipopColor == null) {
-			this.arrowLollipopColor = HColorUtils.WHITE;
+			this.arrowLollipopColor = backgroundColor;
 		}
 		this.pragma = pragma;
 		this.bibliotekon = bibliotekon;
@@ -1042,4 +1041,4 @@ public Stereotype getStereotype() {
 		return link.getStereotype();
 	}
 
-}
\ No newline at end of file
+}

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileIfLongHorizontal.java
Patch:
@@ -156,7 +156,7 @@ static Ftile create(Swimlane swimlane, HColor borderColor, HColor backColor, Rai
 		List<Ftile> diamonds = new ArrayList<>();
 		List<Double> inlabelSizes = new ArrayList<>();
 		for (Branch branch : thens) {
-			final TextBlock tb1 = branch.getLabelPositive().create(fcArrow, HorizontalAlignment.LEFT,
+			final TextBlock tb1 = branch.getDisplayPositive().create(fcArrow, HorizontalAlignment.LEFT,
 					ftileFactory.skinParam());
 			final TextBlock tbTest = branch.getLabelTest().create(fcTest,
 					ftileFactory.skinParam().getDefaultTextAlignment(HorizontalAlignment.LEFT),
@@ -177,7 +177,7 @@ static Ftile create(Swimlane swimlane, HColor borderColor, HColor backColor, Rai
 			diamonds.add(diamond);
 		}
 
-		final TextBlock tb2 = branch2.getLabelPositive().create(fcArrow, HorizontalAlignment.LEFT,
+		final TextBlock tb2 = branch2.getDisplayPositive().create(fcArrow, HorizontalAlignment.LEFT,
 				ftileFactory.skinParam());
 		final int last = diamonds.size() - 1;
 		diamonds.set(last, ((FtileDiamondInside2) diamonds.get(last)).withEast(tb2));

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileIfLongVertical.java
Patch:
@@ -138,7 +138,7 @@ static Ftile create(Swimlane swimlane, HColor borderColor, HColor backColor, Rai
 
 		List<Ftile> diamonds = new ArrayList<>();
 		for (Branch branch : thens) {
-			final TextBlock tb1 = branch.getLabelPositive().create(fc, HorizontalAlignment.LEFT,
+			final TextBlock tb1 = branch.getDisplayPositive().create(fc, HorizontalAlignment.LEFT,
 					ftileFactory.skinParam());
 			final TextBlock tbTest = branch.getLabelTest().create(fc,
 					ftileFactory.skinParam().getDefaultTextAlignment(HorizontalAlignment.LEFT),
@@ -149,7 +149,7 @@ static Ftile create(Swimlane swimlane, HColor borderColor, HColor backColor, Rai
 			diamonds.add(diamond);
 		}
 
-		final TextBlock tb2 = branch2.getLabelPositive().create(fc, HorizontalAlignment.LEFT, ftileFactory.skinParam());
+		final TextBlock tb2 = branch2.getDisplayPositive().create(fc, HorizontalAlignment.LEFT, ftileFactory.skinParam());
 		final int last = diamonds.size() - 1;
 		diamonds.set(last, ((FtileDiamondInside3) diamonds.get(last)).withSouth(tb2));
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileSwitch.java
Patch:
@@ -108,7 +108,7 @@ static Ftile create(Swimlane swimlane, HColor borderColor, HColor backColor, Rai
 
 		List<Double> inlabelSizes = new ArrayList<>();
 		for (Branch branch : thens) {
-			final TextBlock tb1 = branch.getLabelPositive().create(fcArrow, HorizontalAlignment.LEFT,
+			final TextBlock tb1 = branch.getDisplayPositive().create(fcArrow, HorizontalAlignment.LEFT,
 					ftileFactory.skinParam());
 			final TextBlock tbTest = branch.getLabelTest().create(fcTest,
 					ftileFactory.skinParam().getDefaultTextAlignment(HorizontalAlignment.LEFT),

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/cond/ConditionalBuilder.java
Patch:
@@ -283,7 +283,7 @@ private Ftile getDiamond1(boolean eastWest, TextBlock tb1, TextBlock tb2) {
 	}
 
 	private TextBlock getLabelPositive(Branch branch) {
-		return branch.getLabelPositive().create0(fontArrow, HorizontalAlignment.LEFT, ftileFactory.skinParam(),
+		return branch.getDisplayPositive().create0(fontArrow, HorizontalAlignment.LEFT, ftileFactory.skinParam(),
 				labelLineBreak, CreoleMode.SIMPLE_LINE, null, null);
 	}
 

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/cond/FtileSwitchWithManyLinks.java
Patch:
@@ -85,7 +85,7 @@ public void drawU(UGraphic ug) {
 			final double x2 = p2.getX();
 			final double y2 = p2.getY();
 
-			final Snake snake = Snake.create(null, arrowColor, Arrows.asToDown()).withLabel(getLabelPositive(branch),
+			final Snake snake = Snake.create(null, arrowColor, Arrows.asToDown()).withLabel(branch.getTextBlockPositive(),
 					arrowHorizontalAlignment());
 			snake.addPoint(x1, y1);
 			snake.addPoint(x2, y1);
@@ -195,7 +195,7 @@ public void drawU(UGraphic ug) {
 			final double x2 = p2.getX();
 			final double y2 = p2.getY();
 
-			final Snake snake = Snake.create(null, arrowColor, Arrows.asToDown()).withLabel(getLabelPositive(branch),
+			final Snake snake = Snake.create(null, arrowColor, Arrows.asToDown()).withLabel(branch.getTextBlockPositive(),
 					VerticalAlignment.CENTER);
 			if (x2 < p1d.getX() - margin || x2 > p1b.getX() + margin) {
 				snake.addPoint(x2, p1d.getY());
@@ -274,7 +274,7 @@ private Point2D getP1(StringBounder stringBounder) {
 	protected double getYdelta1a(StringBounder stringBounder) {
 		double max = 10;
 		for (Branch branch : branches) {
-			max = Math.max(max, getLabelPositive(branch).calculateDimension(stringBounder).getHeight());
+			max = Math.max(max, branch.getTextBlockPositive().calculateDimension(stringBounder).getHeight());
 		}
 		if (mode == Mode.BIG_DIAMOND) {
 			final double diamondHeight = diamond1.calculateDimension(stringBounder).getHeight();

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/vcompact/cond/FtileSwitchWithOneLink.java
Patch:
@@ -80,7 +80,7 @@ public void drawU(UGraphic ug) {
 			final double x2 = p2.getX();
 			final double y2 = p2.getY();
 
-			final Snake snake = Snake.create(null, arrowColor, Arrows.asToDown()).withLabel(getLabelPositive(branch),
+			final Snake snake = Snake.create(null, arrowColor, Arrows.asToDown()).withLabel(branch.getTextBlockPositive(),
 					arrowHorizontalAlignment());
 			// snake.addPoint(x1, y1);
 			snake.addPoint(x2, y1);

File: src/net/sourceforge/plantuml/cucadiagram/Bodier.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.sourceforge.plantuml.FontParam;
 import net.sourceforge.plantuml.ISkinParam;
+import net.sourceforge.plantuml.graphic.FontConfiguration;
 import net.sourceforge.plantuml.graphic.TextBlock;
 import net.sourceforge.plantuml.style.Style;
 import net.sourceforge.plantuml.ugraphic.color.NoSuchColorException;
@@ -54,7 +55,7 @@ public interface Bodier {
 	public void addFieldOrMethod(String s) throws NoSuchColorException;
 
 	public TextBlock getBody(FontParam fontParam, ISkinParam skinParam, boolean showMethods, boolean showFields,
-			Stereotype stereotype, Style style);
+			Stereotype stereotype, Style style, FontConfiguration fontConfiguration);
 
 	public List<CharSequence> getRawBody();
 

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -302,7 +302,8 @@ public String activate(Participant p, LifeEventType lifeEventType, HColor backco
 		}
 		final boolean ok = lastEventWithDeactivate.addLifeEvent(lifeEvent);
 		if (lastEventWithDeactivate instanceof AbstractMessage) {
-			lifeEvent.setMessage((AbstractMessage) lastEventWithDeactivate);
+			final AbstractMessage lastMessage = (AbstractMessage) lastEventWithDeactivate;
+			lifeEvent.setMessage(lastMessage);
 		}
 		if (ok) {
 			return null;

File: src/net/sourceforge/plantuml/style/SName.java
Patch:
@@ -85,6 +85,7 @@ public enum SName {
 	leafNode, //
 	legend, //
 	lifeLine, //
+	map, //
 	milestone, //
 	mindmapDiagram, //
 	network, //

File: src/net/sourceforge/plantuml/svek/image/EntityImageClass.java
Patch:
@@ -102,7 +102,7 @@ public EntityImageClass(GraphvizVersion version, ILeaf entity, ISkinParam skinPa
 		final boolean showMethods = portionShower.showPortion(EntityPortion.METHOD, entity);
 		final boolean showFields = portionShower.showPortion(EntityPortion.FIELD, entity);
 		this.body = entity.getBodier().getBody(FontParam.CLASS_ATTRIBUTE, getSkinParam(), showMethods, showFields,
-				entity.getStereotype(), getStyle());
+				entity.getStereotype(), getStyle(), null);
 
 		this.header = new EntityImageClassHeader(entity, getSkinParam(), portionShower);
 		this.url = entity.getUrl99();

File: src/net/sourceforge/plantuml/svek/image/EntityImageObject.java
Patch:
@@ -119,7 +119,7 @@ public EntityImageObject(ILeaf entity, ISkinParam skinParam, PortionShower porti
 			this.fields = new TextBlockLineBefore(new TextBlockEmpty(10, 16));
 		} else {
 			this.fields = entity.getBodier().getBody(FontParam.OBJECT_ATTRIBUTE, skinParam, false, showFields,
-					entity.getStereotype(), getStyle());
+					entity.getStereotype(), getStyle(), null);
 		}
 		this.url = entity.getUrl99();
 

File: src/net/sourceforge/plantuml/ugraphic/UDriver.java
Patch:
@@ -37,7 +37,7 @@
 
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 
-public interface UDriver<O> {
-	public void draw(UShape shape, double x, double y, ColorMapper mapper, UParam param, O object);
+public interface UDriver<SHAPE extends UShape, O> {
+	public void draw(SHAPE shape, double x, double y, ColorMapper mapper, UParam param, O object);
 
 }

File: src/net/sourceforge/plantuml/ugraphic/UGraphic.java
Patch:
@@ -49,7 +49,7 @@ public interface UGraphic {
 
 	public UParam getParam();
 
-	public void draw(UShape shape);
+	public <SHAPE extends UShape> void draw(SHAPE shape);
 
 	public UGraphic apply(UChange change);
 

File: src/net/sourceforge/plantuml/ugraphic/g2d/DriverPixelG2d.java
Patch:
@@ -39,12 +39,12 @@
 
 import net.sourceforge.plantuml.ugraphic.UDriver;
 import net.sourceforge.plantuml.ugraphic.UParam;
-import net.sourceforge.plantuml.ugraphic.UShape;
+import net.sourceforge.plantuml.ugraphic.UPixel;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 
-public class DriverPixelG2d implements UDriver<Graphics2D> {
+public class DriverPixelG2d implements UDriver<UPixel, Graphics2D> {
 
-	public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam param, Graphics2D g2d) {
+	public void draw(UPixel pixel, double x, double y, ColorMapper mapper, UParam param, Graphics2D g2d) {
 		g2d.setColor(mapper.toColor(param.getColor()));
 		g2d.fillRect((int) x, (int) y, 1, 1);
 	}

File: src/net/sourceforge/plantuml/ugraphic/g2d/UGraphicG2d.java
Patch:
@@ -148,7 +148,7 @@ private void register(double dpiFactor) {
 		registerDriver(UPixel.class, new DriverPixelG2d());
 		registerDriver(UPolygon.class, new DriverPolygonG2d(dpiFactor, this));
 		registerDriver(UEllipse.class, new DriverEllipseG2d(dpiFactor, this));
-		registerDriver(UImageSvg.class, new DriverImageG2d(dpiFactor, this));
+		ignoreShape(UImageSvg.class);
 		registerDriver(UImage.class, new DriverImageG2d(dpiFactor, this));
 		registerDriver(DotPath.class, new DriverDotPathG2d(this));
 		registerDriver(UPath.class, new DriverPathG2d(dpiFactor));

File: src/net/sourceforge/plantuml/ugraphic/html5/UGraphicHtml5.java
Patch:
@@ -59,10 +59,10 @@ public UGraphicHtml5(HColor defaultBackground, ColorMapper colorMapper) {
 		super(defaultBackground, colorMapper, FileFormat.PNG.getDefaultStringBounder(), new Html5Drawer());
 		registerDriver(URectangle.class, new DriverRectangleHtml5(this));
 		// registerDriver(UText.class, new DriverTextEps(imDummy, this, strategy));
-		registerDriver(UText.class, new DriverNopHtml5());
+		ignoreShape(UText.class);
 		registerDriver(ULine.class, new DriverLineHtml5(this));
 		// registerDriver(UPolygon.class, new DriverPolygonEps(this));
-		registerDriver(UPolygon.class, new DriverNopHtml5());
+		ignoreShape(UPolygon.class);
 		// registerDriver(UEllipse.class, new DriverEllipseEps());
 		// registerDriver(UImage.class, new DriverImageEps());
 		// registerDriver(UPath.class, new DriverPathEps());

File: src/net/sourceforge/plantuml/ugraphic/svg/DriverPixelSvg.java
Patch:
@@ -37,14 +37,14 @@
 import net.sourceforge.plantuml.svg.SvgGraphics;
 import net.sourceforge.plantuml.ugraphic.UDriver;
 import net.sourceforge.plantuml.ugraphic.UParam;
-import net.sourceforge.plantuml.ugraphic.UShape;
+import net.sourceforge.plantuml.ugraphic.UPixel;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorGradient;
 
-public class DriverPixelSvg implements UDriver<SvgGraphics> {
+public class DriverPixelSvg implements UDriver<UPixel, SvgGraphics> {
 
-	public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam param, SvgGraphics svg) {
+	public void draw(UPixel pixel, double x, double y, ColorMapper mapper, UParam param, SvgGraphics svg) {
 		final HColor color = param.getColor();
 		if (color instanceof HColorGradient) {
 			final HColorGradient gr = (HColorGradient) color;

File: src/net/sourceforge/plantuml/ugraphic/tikz/UGraphicTikz.java
Patch:
@@ -76,14 +76,14 @@ private UGraphicTikz(UGraphicTikz other) {
 
 	private void register() {
 		registerDriver(URectangle.class, new DriverRectangleTikz());
-		registerDriver(UText.class, new DriverUTextTikz());
+		registerDriver(UText.class, new DriverTextTikz());
 		registerDriver(AtomText.class, new DriverAtomTextTikz());
 		registerDriver(ULine.class, new DriverLineTikz());
 		registerDriver(UPolygon.class, new DriverPolygonTikz());
 		registerDriver(UEllipse.class, new DriverEllipseTikz());
 		registerDriver(UImage.class, new DriverImageTikz());
-		registerDriver(UImageSvg.class, new DriverNoneTikz());
-		registerDriver(UPath.class, new DriverUPathTikz());
+		ignoreShape(UImageSvg.class);
+		registerDriver(UPath.class, new DriverPathTikz());
 		registerDriver(DotPath.class, new DriverDotPathTikz());
 		// registerDriver(UCenteredCharacter.class, new DriverCenteredCharacterTikz());
 		registerDriver(UCenteredCharacter.class, new DriverCenteredCharacterTikz2());

File: src/net/sourceforge/plantuml/ugraphic/UDriver.java
Patch:
@@ -37,7 +37,7 @@
 
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 
-public interface UDriver<O> {
-	public void draw(UShape shape, double x, double y, ColorMapper mapper, UParam param, O object);
+public interface UDriver<SHAPE extends UShape, O> {
+	public void draw(SHAPE shape, double x, double y, ColorMapper mapper, UParam param, O object);
 
 }

File: src/net/sourceforge/plantuml/ugraphic/UGraphic.java
Patch:
@@ -49,7 +49,7 @@ public interface UGraphic {
 
 	public UParam getParam();
 
-	public void draw(UShape shape);
+	public <SHAPE extends UShape> void draw(SHAPE shape);
 
 	public UGraphic apply(UChange change);
 

File: src/net/sourceforge/plantuml/ugraphic/g2d/DriverPixelG2d.java
Patch:
@@ -39,12 +39,12 @@
 
 import net.sourceforge.plantuml.ugraphic.UDriver;
 import net.sourceforge.plantuml.ugraphic.UParam;
-import net.sourceforge.plantuml.ugraphic.UShape;
+import net.sourceforge.plantuml.ugraphic.UPixel;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 
-public class DriverPixelG2d implements UDriver<Graphics2D> {
+public class DriverPixelG2d implements UDriver<UPixel, Graphics2D> {
 
-	public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam param, Graphics2D g2d) {
+	public void draw(UPixel pixel, double x, double y, ColorMapper mapper, UParam param, Graphics2D g2d) {
 		g2d.setColor(mapper.toColor(param.getColor()));
 		g2d.fillRect((int) x, (int) y, 1, 1);
 	}

File: src/net/sourceforge/plantuml/ugraphic/g2d/UGraphicG2d.java
Patch:
@@ -148,7 +148,7 @@ private void register(double dpiFactor) {
 		registerDriver(UPixel.class, new DriverPixelG2d());
 		registerDriver(UPolygon.class, new DriverPolygonG2d(dpiFactor, this));
 		registerDriver(UEllipse.class, new DriverEllipseG2d(dpiFactor, this));
-		registerDriver(UImageSvg.class, new DriverImageG2d(dpiFactor, this));
+		ignoreShape(UImageSvg.class);
 		registerDriver(UImage.class, new DriverImageG2d(dpiFactor, this));
 		registerDriver(DotPath.class, new DriverDotPathG2d(this));
 		registerDriver(UPath.class, new DriverPathG2d(dpiFactor));

File: src/net/sourceforge/plantuml/ugraphic/html5/UGraphicHtml5.java
Patch:
@@ -59,10 +59,10 @@ public UGraphicHtml5(HColor defaultBackground, ColorMapper colorMapper) {
 		super(defaultBackground, colorMapper, FileFormat.PNG.getDefaultStringBounder(), new Html5Drawer());
 		registerDriver(URectangle.class, new DriverRectangleHtml5(this));
 		// registerDriver(UText.class, new DriverTextEps(imDummy, this, strategy));
-		registerDriver(UText.class, new DriverNopHtml5());
+		ignoreShape(UText.class);
 		registerDriver(ULine.class, new DriverLineHtml5(this));
 		// registerDriver(UPolygon.class, new DriverPolygonEps(this));
-		registerDriver(UPolygon.class, new DriverNopHtml5());
+		ignoreShape(UPolygon.class);
 		// registerDriver(UEllipse.class, new DriverEllipseEps());
 		// registerDriver(UImage.class, new DriverImageEps());
 		// registerDriver(UPath.class, new DriverPathEps());

File: src/net/sourceforge/plantuml/ugraphic/svg/DriverPixelSvg.java
Patch:
@@ -37,14 +37,14 @@
 import net.sourceforge.plantuml.svg.SvgGraphics;
 import net.sourceforge.plantuml.ugraphic.UDriver;
 import net.sourceforge.plantuml.ugraphic.UParam;
-import net.sourceforge.plantuml.ugraphic.UShape;
+import net.sourceforge.plantuml.ugraphic.UPixel;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapper;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.ugraphic.color.HColorGradient;
 
-public class DriverPixelSvg implements UDriver<SvgGraphics> {
+public class DriverPixelSvg implements UDriver<UPixel, SvgGraphics> {
 
-	public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam param, SvgGraphics svg) {
+	public void draw(UPixel pixel, double x, double y, ColorMapper mapper, UParam param, SvgGraphics svg) {
 		final HColor color = param.getColor();
 		if (color instanceof HColorGradient) {
 			final HColorGradient gr = (HColorGradient) color;

File: src/net/sourceforge/plantuml/ugraphic/tikz/UGraphicTikz.java
Patch:
@@ -76,14 +76,14 @@ private UGraphicTikz(UGraphicTikz other) {
 
 	private void register() {
 		registerDriver(URectangle.class, new DriverRectangleTikz());
-		registerDriver(UText.class, new DriverUTextTikz());
+		registerDriver(UText.class, new DriverTextTikz());
 		registerDriver(AtomText.class, new DriverAtomTextTikz());
 		registerDriver(ULine.class, new DriverLineTikz());
 		registerDriver(UPolygon.class, new DriverPolygonTikz());
 		registerDriver(UEllipse.class, new DriverEllipseTikz());
 		registerDriver(UImage.class, new DriverImageTikz());
-		registerDriver(UImageSvg.class, new DriverNoneTikz());
-		registerDriver(UPath.class, new DriverUPathTikz());
+		ignoreShape(UImageSvg.class);
+		registerDriver(UPath.class, new DriverPathTikz());
 		registerDriver(DotPath.class, new DriverDotPathTikz());
 		// registerDriver(UCenteredCharacter.class, new DriverCenteredCharacterTikz());
 		registerDriver(UCenteredCharacter.class, new DriverCenteredCharacterTikz2());

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandLinkActivity.java
Patch:
@@ -129,7 +129,7 @@ protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocatio
 			return CommandExecutionResult.error("No such activity");
 		}
 		if (arg.get("STEREOTYPE", 0) != null) {
-			entity1.setStereotype(new Stereotype(arg.get("STEREOTYPE", 0)));
+			entity1.setStereotype(Stereotype.build(arg.get("STEREOTYPE", 0)));
 		}
 		if (arg.get("BACKCOLOR", 0) != null) {
 			String s = arg.get("BACKCOLOR", 0);
@@ -147,7 +147,7 @@ protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocatio
 					diagram.getSkinParam().getIHtmlColorSet().getColor(diagram.getSkinParam().getThemeStyle(), s));
 		}
 		if (arg.get("STEREOTYPE2", 0) != null) {
-			entity2.setStereotype(new Stereotype(arg.get("STEREOTYPE2", 0)));
+			entity2.setStereotype(Stereotype.build(arg.get("STEREOTYPE2", 0)));
 		}
 
 		final Display linkLabel = Display.getWithNewlines(arg.get("BRACKET", 0));

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandLinkLongActivity.java
Patch:
@@ -126,7 +126,7 @@ protected CommandExecutionResult executeNow(final ActivityDiagram diagram, BlocL
 		}
 
 		if (line0.get("STEREOTYPE", 0) != null) {
-			entity1.setStereotype(new Stereotype(line0.get("STEREOTYPE", 0)));
+			entity1.setStereotype(Stereotype.build(line0.get("STEREOTYPE", 0)));
 		}
 		final String stringColor = line0.get("BACKCOLOR", 0);
 		if (stringColor != null) {
@@ -196,7 +196,7 @@ protected CommandExecutionResult executeNow(final ActivityDiagram diagram, BlocL
 		}
 
 		if (lineLast.get(2) != null) {
-			entity2.setStereotype(new Stereotype(lineLast.get(2)));
+			entity2.setStereotype(Stereotype.build(lineLast.get(2)));
 		}
 		if (lineLast.get(4) != null) {
 			String s = lineLast.get(4);

File: src/net/sourceforge/plantuml/activitydiagram/command/CommandPartition.java
Patch:
@@ -101,7 +101,7 @@ protected CommandExecutionResult executeArg(ActivityDiagram diagram, LineLocatio
 			p.setColors(colors);
 		}
 		if (arg.get("STEREOTYPE", 0) != null) {
-			p.setStereotype(new Stereotype(arg.get("STEREOTYPE", 0)));
+			p.setStereotype(Stereotype.build(arg.get("STEREOTYPE", 0)));
 		}
 
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandActivity3.java
Patch:
@@ -118,7 +118,7 @@ protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocati
 		final String stereo = arg.get("STEREO", 0);
 		Stereotype stereotype = null;
 		if (stereo != null) {
-			stereotype = new Stereotype(stereo);
+			stereotype = Stereotype.build(stereo);
 			colors = colors.applyStereotype(stereotype, diagram.getSkinParam(), ColorParam.activityBackground);
 		}
 		final BoxStyle style = BoxStyle.fromChar(arg.get("STYLE", 0).charAt(0));

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandPartition3.java
Patch:
@@ -129,7 +129,7 @@ protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocati
 
 		final USymbol symbol = getUSymbol(arg.get("TYPE", 0));
 		final String stereo = arg.get("STEREO", 0);
-		final Stereotype stereotype = stereo == null ? null : new Stereotype(stereo);
+		final Stereotype stereotype = stereo == null ? null : Stereotype.build(stereo);
 
 		final HColor backColorInSkinparam = diagram.getSkinParam().getHtmlColor(getColorParamBack(symbol), stereotype,
 				false);

File: src/net/sourceforge/plantuml/activitydiagram3/command/CommandRepeat3.java
Patch:
@@ -94,7 +94,7 @@ protected CommandExecutionResult executeArg(ActivityDiagram3 diagram, LineLocati
 				diagram.getSkinParam().getIHtmlColorSet());
 		final String stereo = arg.get("STEREO", 0);
 		if (stereo != null) {
-			final Stereotype stereotype = new Stereotype(stereo);
+			final Stereotype stereotype = Stereotype.build(stereo);
 			colors = colors.applyStereotype(stereotype, diagram.getSkinParam(), ColorParam.activityBackground);
 		}
 

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClass.java
Patch:
@@ -157,7 +157,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 			}
 		}
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateClassMultilines.java
Patch:
@@ -264,7 +264,7 @@ private IEntity executeArg0(ClassDiagram diagram, RegexResult arg) throws NoSuch
 		}
 		result.setVisibilityModifier(visibilityModifier);
 		if (stereotype != null) {
-			result.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			result.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandCreateElementFull2.java
Patch:
@@ -211,7 +211,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		entity.setDisplay(Display.getWithNewlines(display));
 		entity.setUSymbol(usymbol);
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/classdiagram/command/CommandStereotype.java
Patch:
@@ -71,7 +71,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		final Code code = diagram.V1972() ? ident : diagram.buildCode(name);
 		final String stereotype = arg.get("STEREO", 0);
 		final IEntity entity = diagram.getOrCreateLeaf(ident, code, null, null);
-		entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(), diagram
+		entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(), diagram
 				.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER), diagram.getSkinParam()
 				.getIHtmlColorSet()));
 		return CommandExecutionResult.ok();

File: src/net/sourceforge/plantuml/command/CommandNamespace.java
Patch:
@@ -98,7 +98,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		final IEntity p = diagram.getCurrentGroup();
 		final String stereotype = arg.get("STEREOTYPE", 0);
 		if (stereotype != null) {
-			p.setStereotype(new Stereotype(stereotype));
+			p.setStereotype(Stereotype.build(stereotype));
 		}
 
 		final String urlString = arg.get("URL", 0);

File: src/net/sourceforge/plantuml/command/CommandNamespace2.java
Patch:
@@ -98,7 +98,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		final IEntity p = diagram.getCurrentGroup();
 		final String stereotype = arg.get("STEREOTYPE", 0);
 		if (stereotype != null) {
-			p.setStereotype(new Stereotype(stereotype));
+			p.setStereotype(Stereotype.build(stereotype));
 		}
 
 		final String urlString = arg.get("URL", 0);

File: src/net/sourceforge/plantuml/command/CommandNamespaceEmpty.java
Patch:
@@ -92,7 +92,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		final IEntity p = diagram.getCurrentGroup();
 		final String stereotype = arg.get("STEREOTYPE", 0);
 		if (stereotype != null) {
-			p.setStereotype(new Stereotype(stereotype));
+			p.setStereotype(Stereotype.build(stereotype));
 		}
 
 		final String urlString = arg.get("URL", 0);

File: src/net/sourceforge/plantuml/command/CommandPackage.java
Patch:
@@ -141,7 +141,7 @@ protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineL
 			final USymbol usymbol = USymbol.fromString(stereotype, diagram.getSkinParam().actorStyle(),
 					diagram.getSkinParam().componentStyle(), diagram.getSkinParam().packageStyle());
 			if (usymbol == null) {
-				p.setStereotype(new Stereotype(stereotype));
+				p.setStereotype(Stereotype.build(stereotype));
 			} else {
 				p.setUSymbol(usymbol);
 			}

File: src/net/sourceforge/plantuml/command/note/CommandFactoryNoteOnEntity.java
Patch:
@@ -242,7 +242,7 @@ private CommandExecutionResult executeInternal(RegexResult line0, AbstractEntity
 
 		final String stereotypeString = line0.get("STEREO", 0);
 		if (stereotypeString != null) {
-			final Stereotype stereotype = new Stereotype(stereotypeString);
+			final Stereotype stereotype = Stereotype.build(stereotypeString);
 			colors = colors.applyStereotypeForNote(stereotype, diagram.getSkinParam(), FontParam.NOTE,
 					ColorParam.noteBackground, ColorParam.noteBorder);
 			note.setStereotype(stereotype);

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteAcrossCommand.java
Patch:
@@ -159,7 +159,7 @@ private CommandExecutionResult executeInternal(SequenceDiagram diagram, final Re
 					diagram.getSkinParam().getIHtmlColorSet());
 			final String stereotypeString = line0.get("STEREO", 0);
 			if (stereotypeString != null) {
-				final Stereotype stereotype = new Stereotype(stereotypeString);
+				final Stereotype stereotype = Stereotype.build(stereotypeString);
 				colors = colors.applyStereotypeForNote(stereotype, diagram.getSkinParam(), FontParam.NOTE,
 						ColorParam.noteBackground, ColorParam.noteBorder);
 				note.setStereotype(stereotype);

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteCommand.java
Patch:
@@ -158,7 +158,7 @@ private CommandExecutionResult executeInternal(SequenceDiagram diagram, RegexRes
 					diagram.getSkinParam().getIHtmlColorSet());
 			final String stereotypeString = arg.get("STEREO", 0);
 			if (stereotypeString != null) {
-				final Stereotype stereotype = new Stereotype(stereotypeString);
+				final Stereotype stereotype = Stereotype.build(stereotypeString);
 				colors = colors.applyStereotypeForNote(stereotype, diagram.getSkinParam(), FontParam.NOTE,
 						ColorParam.noteBackground, ColorParam.noteBorder);
 				note.setStereotype(stereotype);

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteOnArrowCommand.java
Patch:
@@ -153,7 +153,7 @@ private CommandExecutionResult executeInternal(SequenceDiagram diagram, final Re
 			final Note note = new Note(display, position, style, diagram.getSkinParam().getCurrentStyleBuilder());
 			final String stereotypeString = line0.get("STEREO", 0);
 			if (stereotypeString != null) {
-				final Stereotype stereotype = new Stereotype(stereotypeString);
+				final Stereotype stereotype = Stereotype.build(stereotypeString);
 				colors = colors.applyStereotypeForNote(stereotype, diagram.getSkinParam(), FontParam.NOTE,
 						ColorParam.noteBackground, ColorParam.noteBorder);
 				note.setStereotype(stereotype);

File: src/net/sourceforge/plantuml/command/note/sequence/FactorySequenceNoteOverSeveralCommand.java
Patch:
@@ -169,7 +169,7 @@ private CommandExecutionResult executeInternal(SequenceDiagram diagram, final Re
 					diagram.getSkinParam().getIHtmlColorSet());
 			final String stereotypeString = line0.get("STEREO", 0);
 			if (stereotypeString != null) {
-				final Stereotype stereotype = new Stereotype(stereotypeString);
+				final Stereotype stereotype = Stereotype.build(stereotypeString);
 				colors = colors.applyStereotypeForNote(stereotype, diagram.getSkinParam(), FontParam.NOTE,
 						ColorParam.noteBackground, ColorParam.noteBorder);
 				note.setStereotype(stereotype);

File: src/net/sourceforge/plantuml/descdiagram/CommandCreateDomain.java
Patch:
@@ -121,7 +121,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 					type.equalsIgnoreCase("domain") ? LeafType.DOMAIN : LeafType.REQUIREMENT, null);
 		}
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandArchimate.java
Patch:
@@ -143,7 +143,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 		entity.setUSymbol(USymbol.ARCHIMATE);
 		if (icon != null) {
 			entity.setStereotype(
-					new Stereotype("<<$archimate/" + icon + ">>", diagram.getSkinParam().getCircledCharacterRadius(),
+					Stereotype.build("<<$archimate/" + icon + ">>", diagram.getSkinParam().getCircledCharacterRadius(),
 							diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 							diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandArchimateMultilines.java
Patch:
@@ -119,7 +119,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL
 		entity.setUSymbol(USymbol.RECTANGLE);
 		if (icon != null) {
 			entity.setStereotype(
-					new Stereotype("<<$archimate/" + icon + ">>", diagram.getSkinParam().getCircledCharacterRadius(),
+					Stereotype.build("<<$archimate/" + icon + ">>", diagram.getSkinParam().getCircledCharacterRadius(),
 							diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 							diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementFull.java
Patch:
@@ -249,7 +249,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 		entity.setDisplay(Display.getWithNewlines(display));
 		entity.setUSymbol(usymbol);
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementMultilines.java
Patch:
@@ -171,7 +171,7 @@ protected CommandExecutionResult executeNow(AbstractEntityDiagram diagram, BlocL
 		}
 		result.setUSymbol(usymbol);
 		if (stereotype != null) {
-			result.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			result.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandCreateElementParenthesis.java
Patch:
@@ -174,7 +174,7 @@ protected CommandExecutionResult executeArg(ClassDiagram diagram, LineLocation l
 		entity.setDisplay(Display.getWithNewlines(display));
 		entity.setUSymbol(usymbol);
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandLinkElement.java
Patch:
@@ -273,7 +273,7 @@ protected CommandExecutionResult executeArg(DescriptionDiagram diagram, LineLoca
 				diagram.getSkinParam().getIHtmlColorSet()));
 		link.applyStyle(diagram.getSkinParam().getThemeStyle(), arg.getLazzy("ARROW_STYLE", 0));
 		if (arg.get("STEREOTYPE", 0) != null) {
-			final Stereotype stereotype = new Stereotype(arg.get("STEREOTYPE", 0));
+			final Stereotype stereotype = Stereotype.build(arg.get("STEREOTYPE", 0));
 			if (UseStyle.useBetaStyle()) {
 				link.setStereotype(stereotype);
 			} else {

File: src/net/sourceforge/plantuml/descdiagram/command/CommandPackageWithUSymbol.java
Patch:
@@ -166,7 +166,7 @@ protected CommandExecutionResult executeArg(AbstractEntityDiagram diagram, LineL
 				diagram.getSkinParam().componentStyle(), diagram.getSkinParam().packageStyle()));
 		final String stereotype = arg.getLazzy("STEREOTYPE", 0);
 		if (stereotype != null) {
-			p.setStereotype(new Stereotype(stereotype, false));
+			p.setStereotype(Stereotype.build(stereotype, false));
 		}
 		final String urlString = arg.get("URL", 0);
 		if (urlString != null) {

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateEntityObject.java
Patch:
@@ -90,7 +90,7 @@ protected CommandExecutionResult executeArg(AbstractClassOrObjectDiagram diagram
 		}
 		final IEntity entity = diagram.createLeaf(ident, code, Display.getWithNewlines(display), LeafType.OBJECT, null);
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateEntityObjectMultilines.java
Patch:
@@ -117,7 +117,7 @@ private IEntity executeArg0(AbstractClassOrObjectDiagram diagram, RegexResult li
 		}
 		final IEntity entity = diagram.createLeaf(ident, code, Display.getWithNewlines(display), LeafType.OBJECT, null);
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/objectdiagram/command/CommandCreateMap.java
Patch:
@@ -136,7 +136,7 @@ private IEntity executeArg0(AbstractClassOrObjectDiagram diagram, RegexResult li
 		}
 		final IEntity entity = diagram.createLeaf(ident, code, Display.getWithNewlines(display), LeafType.MAP, null);
 		if (stereotype != null) {
-			entity.setStereotype(new Stereotype(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
+			entity.setStereotype(Stereotype.build(stereotype, diagram.getSkinParam().getCircledCharacterRadius(),
 					diagram.getSkinParam().getFont(null, false, FontParam.CIRCLED_CHARACTER),
 					diagram.getSkinParam().getIHtmlColorSet()));
 		}

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandBoxStart.java
Patch:
@@ -92,7 +92,7 @@ protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineLocatio
 		Stereotype stereotype = null;
 		if (stereo != null) {
 			final ISkinParam skinParam = diagram.getSkinParam();
-			stereotype = new Stereotype(stereo);
+			stereotype = Stereotype.build(stereo);
 		}
 
 		// final HtmlColor color =

File: src/net/sourceforge/plantuml/sequencediagram/command/CommandParticipant.java
Patch:
@@ -120,7 +120,7 @@ final protected CommandExecutionResult executeArg(SequenceDiagram diagram, LineL
 			final ISkinParam skinParam = diagram.getSkinParam();
 			final boolean stereotypePositionTop = skinParam.stereotypePositionTop();
 			final UFont font = skinParam.getFont(null, false, FontParam.CIRCLED_CHARACTER);
-			participant.setStereotype(new Stereotype(stereotype, skinParam.getCircledCharacterRadius(), font,
+			participant.setStereotype(Stereotype.build(stereotype, skinParam.getCircledCharacterRadius(), font,
 					diagram.getSkinParam().getIHtmlColorSet()), stereotypePositionTop);
 		}
 		final String s = arg.get("COLOR", 0);

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreatePackageState.java
Patch:
@@ -123,7 +123,7 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 		final IEntity p = diagram.getCurrentGroup();
 		final String stereotype = arg.get("STEREOTYPE", 0);
 		if (stereotype != null) {
-			p.setStereotype(new Stereotype(stereotype));
+			p.setStereotype(Stereotype.build(stereotype));
 		}
 		final String urlString = arg.get("URL", 0);
 		if (urlString != null) {

File: src/net/sourceforge/plantuml/statediagram/command/CommandCreateState.java
Patch:
@@ -123,7 +123,7 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 		ent.setDisplay(Display.getWithNewlines(display));
 
 		if (stereotype != null) {
-			ent.setStereotype(new Stereotype(stereotype));
+			ent.setStereotype(Stereotype.build(stereotype));
 		}
 		final String urlString = arg.get("URL", 0);
 		if (urlString != null) {

File: src/net/sourceforge/plantuml/statediagram/command/CommandLinkState.java
Patch:
@@ -114,15 +114,15 @@ protected CommandExecutionResult executeArg(StateDiagram diagram, LineLocation l
 		}
 
 		if (arg.get("ENT1", 1) != null) {
-			cl1.setStereotype(new Stereotype(arg.get("ENT1", 1)));
+			cl1.setStereotype(Stereotype.build(arg.get("ENT1", 1)));
 		}
 		if (arg.get("ENT1", 2) != null) {
 			final String s = arg.get("ENT1", 2);
 			cl1.setSpecificColorTOBEREMOVED(ColorType.BACK,
 					diagram.getSkinParam().getIHtmlColorSet().getColor(diagram.getSkinParam().getThemeStyle(), s));
 		}
 		if (arg.get("ENT2", 1) != null) {
-			cl2.setStereotype(new Stereotype(arg.get("ENT2", 1)));
+			cl2.setStereotype(Stereotype.build(arg.get("ENT2", 1)));
 		}
 		if (arg.get("ENT2", 2) != null) {
 			final String s = arg.get("ENT2", 2);

File: src/net/sourceforge/plantuml/ugraphic/svg/UGraphicSvg.java
Patch:
@@ -42,7 +42,6 @@
 
 import net.sourceforge.plantuml.FileFormat;
 import net.sourceforge.plantuml.SvgCharSizeHack;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.posimo.DotPath;
 import net.sourceforge.plantuml.svg.LengthAdjust;
@@ -116,7 +115,7 @@ protected void afterDraw() {
 
 	private UGraphicSvg(HColor defaultBackground, Dimension2D minDim, ColorMapper colorMapper, SvgGraphics svg,
 			boolean textAsPath, String linkTarget, SvgCharSizeHack charSizeHack) {
-		super(defaultBackground, colorMapper, FileFormat.SVG.getDefaultStringBounder(TikzFontDistortion.getDefault(), charSizeHack), svg);
+		super(defaultBackground, colorMapper, FileFormat.SVG.getDefaultStringBounder(charSizeHack), svg);
 		this.textAsPath2 = textAsPath;
 		this.target = linkTarget;
 		register();

File: src/net/sourceforge/plantuml/nwdiag/core/NwGroup.java
Patch:
@@ -43,7 +43,6 @@
 
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.cucadiagram.Display;
-import net.sourceforge.plantuml.graphic.FontConfiguration;
 import net.sourceforge.plantuml.graphic.HorizontalAlignment;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.graphic.TextBlock;
@@ -54,11 +53,9 @@
 import net.sourceforge.plantuml.style.StyleBuilder;
 import net.sourceforge.plantuml.style.StyleSignature;
 import net.sourceforge.plantuml.ugraphic.MinMax;
-import net.sourceforge.plantuml.ugraphic.UFont;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.UTranslate;
 import net.sourceforge.plantuml.ugraphic.color.HColor;
-import net.sourceforge.plantuml.ugraphic.color.HColorUtils;
 
 public class NwGroup {
 

File: src/net/sourceforge/plantuml/nwdiag/next/GridTextBlockDecorated.java
Patch:
@@ -36,7 +36,6 @@
 
 import java.util.List;
 
-import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.nwdiag.core.Network;

File: src/net/sourceforge/plantuml/nwdiag/next/LinkedElement.java
Patch:
@@ -41,7 +41,6 @@
 import java.util.Map.Entry;
 import java.util.TreeSet;
 
-import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.Dimension2DDouble;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.graphic.TextBlock;
@@ -51,7 +50,6 @@
 import net.sourceforge.plantuml.ugraphic.MinMax;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
 import net.sourceforge.plantuml.ugraphic.UTranslate;
-import net.sourceforge.plantuml.ugraphic.color.HColor;
 import net.sourceforge.plantuml.utils.MathUtils;
 
 public class LinkedElement {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 5;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagramFactory.java
Patch:
@@ -63,7 +63,6 @@
 import net.sourceforge.plantuml.command.CommandNamespaceEmpty;
 import net.sourceforge.plantuml.command.CommandPackage;
 import net.sourceforge.plantuml.command.CommandPackageEmpty;
-import net.sourceforge.plantuml.command.CommandPage;
 import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.command.note.CommandConstraintOnLinks;
@@ -96,7 +95,6 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandRankDir());
 		cmds.add(new CommandNewpage(this));
 
-		cmds.add(new CommandPage());
 		cmds.add(new CommandAddMethod());
 
 		addCommonHides(cmds);

File: src/net/sourceforge/plantuml/command/PSystemCommandFactory.java
Patch:
@@ -231,6 +231,7 @@ final protected void addCommonCommands2(List<Command> cmds) {
 		cmds.add(new CommandSkinParamMultilines());
 		cmds.add(new CommandSkin());
 		cmds.add(new CommandMinwidth());
+		cmds.add(new CommandPage());
 		cmds.add(new CommandRotate());
 		cmds.add(new CommandScale());
 		cmds.add(new CommandScaleWidthAndHeight());

File: src/net/sourceforge/plantuml/descdiagram/DescriptionDiagramFactory.java
Patch:
@@ -80,7 +80,6 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandNewpage(this));
 		addCommonCommands1(cmds);
 
-		cmds.add(new CommandPage());
 		cmds.add(new CommandLinkElement());
 		cmds.add(new CommandHideShow2());
 		cmds.add(new CommandRemoveRestore());

File: src/net/sourceforge/plantuml/png/PngSplitter.java
Patch:
@@ -52,8 +52,8 @@ public class PngSplitter {
 
 	private final List<SFile> files = new ArrayList<>();
 
-	public PngSplitter(SuggestedFile pngFile, int horizontalPages, int verticalPages, String source, int dpi,
-			boolean isWithMetadata, SplitParam splitParam) throws IOException {
+	public PngSplitter(SuggestedFile pngFile, int horizontalPages, int verticalPages, String metadata, int dpi,
+			SplitParam splitParam) throws IOException {
 		if (horizontalPages == 1 && verticalPages == 1) {
 			this.files.add(pngFile.getFile(0));
 			return;
@@ -106,7 +106,7 @@ public PngSplitter(SuggestedFile pngFile, int horizontalPages, int verticalPages
 					g2d.dispose();
 				}
 				// Thread.yield();
-				PngIO.write(piece, f, isWithMetadata ? source : null, dpi);
+				PngIO.write(piece, f, metadata, dpi);
 				// Thread.yield();
 			}
 		}

File: src/net/sourceforge/plantuml/project/GanttDiagramFactory.java
Patch:
@@ -53,7 +53,6 @@
 import net.sourceforge.plantuml.project.command.CommandLabelOnColumn;
 import net.sourceforge.plantuml.project.command.CommandLanguage;
 import net.sourceforge.plantuml.project.command.CommandNoteBottom;
-import net.sourceforge.plantuml.project.command.CommandPage;
 import net.sourceforge.plantuml.project.command.CommandPrintBetween;
 import net.sourceforge.plantuml.project.command.CommandPrintScale;
 import net.sourceforge.plantuml.project.command.CommandSeparator;
@@ -107,7 +106,6 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandLanguage());
 		cmds.add(new CommandPrintScale());
 		cmds.add(new CommandPrintBetween());
-		cmds.add(new CommandPage());
 		cmds.add(new CommandNoteBottom());
 		cmds.add(new CommandFootbox());
 		cmds.add(new CommandLabelOnColumn());

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagramFactory.java
Patch:
@@ -63,7 +63,6 @@
 import net.sourceforge.plantuml.command.CommandNamespaceEmpty;
 import net.sourceforge.plantuml.command.CommandPackage;
 import net.sourceforge.plantuml.command.CommandPackageEmpty;
-import net.sourceforge.plantuml.command.CommandPage;
 import net.sourceforge.plantuml.command.CommandRankDir;
 import net.sourceforge.plantuml.command.PSystemCommandFactory;
 import net.sourceforge.plantuml.command.note.CommandConstraintOnLinks;
@@ -96,7 +95,6 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandRankDir());
 		cmds.add(new CommandNewpage(this));
 
-		cmds.add(new CommandPage());
 		cmds.add(new CommandAddMethod());
 
 		addCommonHides(cmds);

File: src/net/sourceforge/plantuml/command/PSystemCommandFactory.java
Patch:
@@ -231,6 +231,7 @@ final protected void addCommonCommands2(List<Command> cmds) {
 		cmds.add(new CommandSkinParamMultilines());
 		cmds.add(new CommandSkin());
 		cmds.add(new CommandMinwidth());
+		cmds.add(new CommandPage());
 		cmds.add(new CommandRotate());
 		cmds.add(new CommandScale());
 		cmds.add(new CommandScaleWidthAndHeight());

File: src/net/sourceforge/plantuml/descdiagram/DescriptionDiagramFactory.java
Patch:
@@ -80,7 +80,6 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandNewpage(this));
 		addCommonCommands1(cmds);
 
-		cmds.add(new CommandPage());
 		cmds.add(new CommandLinkElement());
 		cmds.add(new CommandHideShow2());
 		cmds.add(new CommandRemoveRestore());

File: src/net/sourceforge/plantuml/png/PngSplitter.java
Patch:
@@ -52,8 +52,8 @@ public class PngSplitter {
 
 	private final List<SFile> files = new ArrayList<>();
 
-	public PngSplitter(SuggestedFile pngFile, int horizontalPages, int verticalPages, String source, int dpi,
-			boolean isWithMetadata, SplitParam splitParam) throws IOException {
+	public PngSplitter(SuggestedFile pngFile, int horizontalPages, int verticalPages, String metadata, int dpi,
+			SplitParam splitParam) throws IOException {
 		if (horizontalPages == 1 && verticalPages == 1) {
 			this.files.add(pngFile.getFile(0));
 			return;
@@ -106,7 +106,7 @@ public PngSplitter(SuggestedFile pngFile, int horizontalPages, int verticalPages
 					g2d.dispose();
 				}
 				// Thread.yield();
-				PngIO.write(piece, f, isWithMetadata ? source : null, dpi);
+				PngIO.write(piece, f, metadata, dpi);
 				// Thread.yield();
 			}
 		}

File: src/net/sourceforge/plantuml/project/GanttDiagramFactory.java
Patch:
@@ -53,7 +53,6 @@
 import net.sourceforge.plantuml.project.command.CommandLabelOnColumn;
 import net.sourceforge.plantuml.project.command.CommandLanguage;
 import net.sourceforge.plantuml.project.command.CommandNoteBottom;
-import net.sourceforge.plantuml.project.command.CommandPage;
 import net.sourceforge.plantuml.project.command.CommandPrintBetween;
 import net.sourceforge.plantuml.project.command.CommandPrintScale;
 import net.sourceforge.plantuml.project.command.CommandSeparator;
@@ -107,7 +106,6 @@ protected List<Command> createCommands() {
 		cmds.add(new CommandLanguage());
 		cmds.add(new CommandPrintScale());
 		cmds.add(new CommandPrintBetween());
-		cmds.add(new CommandPage());
 		cmds.add(new CommandNoteBottom());
 		cmds.add(new CommandFootbox());
 		cmds.add(new CommandLabelOnColumn());

File: src/net/sourceforge/plantuml/AFileZipEntry.java
Patch:
@@ -60,7 +60,8 @@ public String toString() {
 	public InputStream openFile() {
 		final InputStream tmp = zipFile.openFile();
 		if (tmp != null)
-			try (final ZipInputStream zis = new ZipInputStream(tmp)) {
+			try {
+				final ZipInputStream zis = new ZipInputStream(tmp);
 				ZipEntry ze = zis.getNextEntry();
 
 				while (ze != null) {
@@ -72,6 +73,7 @@ public InputStream openFile() {
 					ze = zis.getNextEntry();
 				}
 				zis.closeEntry();
+				zis.close();
 			} catch (IOException e) {
 				e.printStackTrace();
 			}

File: src/net/sourceforge/plantuml/SourceFileReaderAbstract.java
Patch:
@@ -64,8 +64,8 @@ public abstract class SourceFileReaderAbstract implements ISourceFileReader {
 	protected File outputDirectory;
 	protected File outputFile;
 
-	protected BlockUmlBuilder builder;
-	protected FileFormatOption fileFormatOption;
+	protected final BlockUmlBuilder builder;
+	protected /*final*/ FileFormatOption fileFormatOption;
 	private boolean checkMetadata;
 	private boolean noerror;
 

File: src/net/sourceforge/plantuml/syntax/LanguageDescriptor.java
Patch:
@@ -82,7 +82,6 @@ public LanguageDescriptor() {
 		type.add("queue");
 		type.add("archimate");
 		type.add("diamond");
-		type.add("detach");
 		type.add("collections");
 		type.add("hexagon");
 		type.add("label");
@@ -200,6 +199,7 @@ public LanguageDescriptor() {
 		keyword.add("fork");
 		keyword.add("again");
 		keyword.add("kill");
+		keyword.add("detach");
 		keyword.add("order");
 		keyword.add("allow_mixing");
 		keyword.add("allowmixing");

File: src/net/sourceforge/plantuml/utils/Cypher.java
Patch:
@@ -131,7 +131,7 @@ private String buildRandomWord(int len) {
 	public void addException(String word) {
 		word = word.toLowerCase();
 		if (words.contains(word)) {
-			System.err.println("Warning:" + word);
+			System.err.println("CypherWarning:" + word);
 			words.remove(word);
 		}
 		except.add(word);

File: src/net/sourceforge/plantuml/elk/proxy/graph/ElkWithProperty.java
Patch:
@@ -27,13 +27,14 @@ final public boolean equals(Object other) {
 		return this.obj.equals(((ElkWithProperty) other).obj);
 	}
 
+	@SuppressWarnings({ "unchecked", "rawtypes" })
 	final public void setProperty(Object key, Object value) {
 		if (value instanceof EnumSet) {
 			EnumSet result = null;
 			for (Object foo : (Collection) value) {
 				final EnumProxy elk = (EnumProxy) foo;
 				if (result == null) {
-					result = EnumSet.noneOf((Class<Enum>) elk.getClass());
+					result = EnumSet.noneOf((Class) elk.getClass());
 				}
 				result.add(elk);
 			}

File: src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java
Patch:
@@ -313,7 +313,8 @@ private ImageData writeImageInternal(FileFormatOption fileFormatOption, OutputSt
 		if (ug instanceof UGraphicG2d) {
 			final Set<Url> urls = ((UGraphicG2d) ug).getAllUrlsEncountered();
 			if (urls.size() > 0) {
-				final CMapData cmap = CMapData.cmapString(urls, dpi);
+				final double scaleFactor = (scale == null ? 1 : scale.getScale(dim.getWidth(), dim.getHeight())) * dpi / 96.0;
+				final CMapData cmap = CMapData.cmapString(urls, scaleFactor);
 				return new ImageDataComplex(dim, cmap, warningOrError, status);
 			}
 		}

File: src/net/sourceforge/plantuml/braille/UGraphicBraille.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.posimo.DotPath;
 import net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic;
@@ -118,7 +117,7 @@ private void register() {
 	}
 
 	public StringBounder getStringBounder() {
-		return FileFormat.BRAILLE_PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		return FileFormat.BRAILLE_PNG.getDefaultStringBounder();
 	}
 
 	public void writeImageTOBEMOVED(OutputStream os, String metadata, int dpi) throws IOException {

File: src/net/sourceforge/plantuml/ugraphic/UGraphicNull.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.EnsureVisible;
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;
 
@@ -60,7 +59,7 @@ public UGraphicNull() {
 	}
 
 	public StringBounder getStringBounder() {
-		return FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		return FileFormat.PNG.getDefaultStringBounder();
 	}
 
 	public void writeImageTOBEMOVED(OutputStream os, String metadata, int dpi) throws IOException {

File: src/net/sourceforge/plantuml/ugraphic/eps/DriverTextEps.java
Patch:
@@ -43,7 +43,6 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.eps.EpsGraphics;
 import net.sourceforge.plantuml.eps.EpsGraphicsMacroAndText;
 import net.sourceforge.plantuml.eps.EpsStrategy;
@@ -70,7 +69,7 @@ public class DriverTextEps implements UDriver<EpsGraphics> {
 	private final EpsStrategy strategy;
 
 	public DriverTextEps(ClipContainer clipContainer, EpsStrategy strategy) {
-		this.stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		this.stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		this.clipContainer = clipContainer;
 		this.fontRenderContext = TextBlockUtils.getFontRenderContext();
 		this.strategy = strategy;

File: src/net/sourceforge/plantuml/ugraphic/eps/UGraphicEps.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.eps.EpsGraphics;
 import net.sourceforge.plantuml.eps.EpsStrategy;
@@ -84,7 +83,7 @@ public UGraphicEps(ColorMapper colorMapper, EpsStrategy strategy) {
 	private UGraphicEps(ColorMapper colorMapper, EpsStrategy strategy, EpsGraphics eps) {
 		super(colorMapper, eps);
 		this.strategyTOBEREMOVED = strategy;
-		this.stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		this.stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		register(strategy);
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/g2d/UGraphicG2d.java
Patch:
@@ -50,7 +50,6 @@
 
 import net.sourceforge.plantuml.EnsureVisible;
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.anim.AffineTransformation;
 import net.sourceforge.plantuml.graphic.StringBounder;
@@ -161,7 +160,7 @@ public StringBounder getStringBounder() {
 		// if (hasAffineTransform) {
 		// return TextBlockUtils.getDummyStringBounder();
 		// }
-		return FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		return FileFormat.PNG.getDefaultStringBounder();
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/ugraphic/html5/UGraphicHtml5.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic;
 import net.sourceforge.plantuml.ugraphic.AbstractUGraphic;
@@ -61,7 +60,7 @@ protected AbstractCommonUGraphic copyUGraphic() {
 
 	public UGraphicHtml5(ColorMapper colorMapper) {
 		super(colorMapper, new Html5Drawer());
-		stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		registerDriver(URectangle.class, new DriverRectangleHtml5(this));
 		// registerDriver(UText.class, new DriverTextEps(imDummy, this, strategy));
 		registerDriver(UText.class, new DriverNopHtml5());

File: src/net/sourceforge/plantuml/ugraphic/visio/UGraphicVdx.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.creole.legacy.AtomText;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.posimo.DotPath;
@@ -67,7 +66,7 @@ public double dpiFactor() {
 
 	private UGraphicVdx(ColorMapper colorMapper, VisioGraphics visio) {
 		super(colorMapper, visio);
-		this.stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		this.stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		register();
 
 	}

File: src/net/sourceforge/plantuml/wire/WireDiagram.java
Patch:
@@ -44,7 +44,6 @@
 
 import net.sourceforge.plantuml.FileFormat;
 import net.sourceforge.plantuml.FileFormatOption;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
@@ -158,7 +157,7 @@ public CommandExecutionResult wmove(String indent, double x, double y) {
 	public CommandExecutionResult print(String indent, String text) {
 		final int level = computeIndentationLevel(indent);
 
-		final StringBounder stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		final StringBounder stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		return this.root.print(stringBounder, getSkinParam(), level, text);
 	}
 

File: src/net/sourceforge/plantuml/braille/UGraphicBraille.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.posimo.DotPath;
 import net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic;
@@ -118,7 +117,7 @@ private void register() {
 	}
 
 	public StringBounder getStringBounder() {
-		return FileFormat.BRAILLE_PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		return FileFormat.BRAILLE_PNG.getDefaultStringBounder();
 	}
 
 	public void writeImageTOBEMOVED(OutputStream os, String metadata, int dpi) throws IOException {

File: src/net/sourceforge/plantuml/ugraphic/UGraphicNull.java
Patch:
@@ -40,7 +40,6 @@
 
 import net.sourceforge.plantuml.EnsureVisible;
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;
 
@@ -60,7 +59,7 @@ public UGraphicNull() {
 	}
 
 	public StringBounder getStringBounder() {
-		return FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		return FileFormat.PNG.getDefaultStringBounder();
 	}
 
 	public void writeImageTOBEMOVED(OutputStream os, String metadata, int dpi) throws IOException {

File: src/net/sourceforge/plantuml/ugraphic/eps/DriverTextEps.java
Patch:
@@ -43,7 +43,6 @@
 import java.util.List;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.eps.EpsGraphics;
 import net.sourceforge.plantuml.eps.EpsGraphicsMacroAndText;
 import net.sourceforge.plantuml.eps.EpsStrategy;
@@ -70,7 +69,7 @@ public class DriverTextEps implements UDriver<EpsGraphics> {
 	private final EpsStrategy strategy;
 
 	public DriverTextEps(ClipContainer clipContainer, EpsStrategy strategy) {
-		this.stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		this.stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		this.clipContainer = clipContainer;
 		this.fontRenderContext = TextBlockUtils.getFontRenderContext();
 		this.strategy = strategy;

File: src/net/sourceforge/plantuml/ugraphic/eps/UGraphicEps.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.eps.EpsGraphics;
 import net.sourceforge.plantuml.eps.EpsStrategy;
@@ -84,7 +83,7 @@ public UGraphicEps(ColorMapper colorMapper, EpsStrategy strategy) {
 	private UGraphicEps(ColorMapper colorMapper, EpsStrategy strategy, EpsGraphics eps) {
 		super(colorMapper, eps);
 		this.strategyTOBEREMOVED = strategy;
-		this.stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		this.stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		register(strategy);
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/g2d/UGraphicG2d.java
Patch:
@@ -50,7 +50,6 @@
 
 import net.sourceforge.plantuml.EnsureVisible;
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.Url;
 import net.sourceforge.plantuml.anim.AffineTransformation;
 import net.sourceforge.plantuml.graphic.StringBounder;
@@ -161,7 +160,7 @@ public StringBounder getStringBounder() {
 		// if (hasAffineTransform) {
 		// return TextBlockUtils.getDummyStringBounder();
 		// }
-		return FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		return FileFormat.PNG.getDefaultStringBounder();
 	}
 
 	@Override

File: src/net/sourceforge/plantuml/ugraphic/html5/UGraphicHtml5.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic;
 import net.sourceforge.plantuml.ugraphic.AbstractUGraphic;
@@ -61,7 +60,7 @@ protected AbstractCommonUGraphic copyUGraphic() {
 
 	public UGraphicHtml5(ColorMapper colorMapper) {
 		super(colorMapper, new Html5Drawer());
-		stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		registerDriver(URectangle.class, new DriverRectangleHtml5(this));
 		// registerDriver(UText.class, new DriverTextEps(imDummy, this, strategy));
 		registerDriver(UText.class, new DriverNopHtml5());

File: src/net/sourceforge/plantuml/ugraphic/visio/UGraphicVdx.java
Patch:
@@ -38,7 +38,6 @@
 import java.io.OutputStream;
 
 import net.sourceforge.plantuml.FileFormat;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.creole.legacy.AtomText;
 import net.sourceforge.plantuml.graphic.StringBounder;
 import net.sourceforge.plantuml.posimo.DotPath;
@@ -67,7 +66,7 @@ public double dpiFactor() {
 
 	private UGraphicVdx(ColorMapper colorMapper, VisioGraphics visio) {
 		super(colorMapper, visio);
-		this.stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		this.stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		register();
 
 	}

File: src/net/sourceforge/plantuml/wire/WireDiagram.java
Patch:
@@ -44,7 +44,6 @@
 
 import net.sourceforge.plantuml.FileFormat;
 import net.sourceforge.plantuml.FileFormatOption;
-import net.sourceforge.plantuml.TikzFontDistortion;
 import net.sourceforge.plantuml.UmlDiagram;
 import net.sourceforge.plantuml.UmlDiagramType;
 import net.sourceforge.plantuml.command.CommandExecutionResult;
@@ -158,7 +157,7 @@ public CommandExecutionResult wmove(String indent, double x, double y) {
 	public CommandExecutionResult print(String indent, String text) {
 		final int level = computeIndentationLevel(indent);
 
-		final StringBounder stringBounder = FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault());
+		final StringBounder stringBounder = FileFormat.PNG.getDefaultStringBounder();
 		return this.root.print(stringBounder, getSkinParam(), level, text);
 	}
 

File: src/net/sourceforge/plantuml/FontParam.java
Patch:
@@ -187,13 +187,13 @@ public FontConfiguration getFontConfiguration(ISkinParam skinParam) {
 
 	public StyleSignature getStyleDefinition(SName diagramType) {
 		if (this == FOOTER) {
-			return StyleSignature.of(SName.root, SName.footer);
+			return StyleSignature.of(SName.root, SName.document, SName.footer);
 		}
 		if (this == HEADER) {
-			return StyleSignature.of(SName.root, SName.header);
+			return StyleSignature.of(SName.root, SName.document, SName.header);
 		}
 		if (this == TITLE) {
-			return StyleSignature.of(SName.root, SName.title);
+			return StyleSignature.of(SName.root, SName.document, SName.title);
 		}
 		if (this == CLASS_ATTRIBUTE) {
 			return StyleSignature.of(SName.root, SName.element, SName.classDiagram, SName.class_);

File: src/net/sourceforge/plantuml/activitydiagram3/ftile/EntityImageLegend.java
Patch:
@@ -57,8 +57,8 @@ public class EntityImageLegend {
 	public static TextBlock create(Display note, ISkinParam skinParam) {
 
 		if (UseStyle.useBetaStyle()) {
-			final Style style = StyleSignature
-					.of(SName.root, skinParam.getUmlDiagramType().getStyleName(), SName.legend)
+			final Style style = StyleSignature.of(SName.root, SName.root, SName.document,
+					skinParam.getUmlDiagramType().getStyleName(), SName.legend)
 					.getMergedStyle(skinParam.getCurrentStyleBuilder());
 			return style.createTextBlockBordered(note, skinParam.getIHtmlColorSet(), skinParam);
 		}

File: src/net/sourceforge/plantuml/dedication/Dedications.java
Patch:
@@ -52,6 +52,7 @@ public class Dedications {
 		addNormal("ARKBAN", "arkban");
 		addNormal("Boundaries allow discipline to create true strength", "boundaries");
 		addNormal("Thank you, Dr. Chet. I wouldn't be where I am without you", "dr_chet");
+		addNormal("Ben and Jen 2020", "ben");
 		addCrypted("0", "pOhci6rKgPXw32AeYXhOpSY0suoauHq5VUSwFqHLHsLYgSO6WaJ7BW5vtHBAoU6ePbcW7d8Flx99MWjPSKQTDm00");
 		addCrypted("1", "LTxN3hdnhSJ515qcA7IQ841axt4GXfUd3n2wgNirYCdLnyX2360Gv1OEOnJ1-gwFzRW5B3HAqLBkR6Ge0WW_Z000");
 		addCrypted("2", "lZqLduj4j1yRqSfAvkhbqVpqK8diklatiFeenDUXSdna9bKYQTzdS264YfUBScUVDYCp2Vcq04updoN98RwxE000");

File: src/net/sourceforge/plantuml/sequencediagram/graphic/SequenceDiagramFileMakerPuma2.java
Patch:
@@ -154,7 +154,7 @@ public ImageData createOne(OutputStream os, final int index, boolean isWithMetad
 			compTitle = null;
 		} else {
 			if (UseStyle.useBetaStyle()) {
-				final Style style = StyleSignature.of(SName.root, SName.title)
+				final Style style = StyleSignature.of(SName.root, SName.document, SName.title)
 						.getMergedStyle(diagram.getSkinParam().getCurrentStyleBuilder());
 				compTitle = style.createTextBlockBordered(page.getTitle(), diagram.getSkinParam().getIHtmlColorSet(),
 						diagram.getSkinParam());
@@ -175,7 +175,7 @@ public ImageData createOne(OutputStream os, final int index, boolean isWithMetad
 			legendBlock = TextBlockUtils.empty(0, 0);
 		} else {
 			if (UseStyle.useBetaStyle()) {
-				final Style style = StyleSignature.of(SName.root, SName.legend)
+				final Style style = StyleSignature.of(SName.root, SName.document, SName.legend)
 						.getMergedStyle(diagram.getSkinParam().getCurrentStyleBuilder());
 				legendBlock = style.createTextBlockBordered(diagram.getLegend().getDisplay(),
 						diagram.getSkinParam().getIHtmlColorSet(), diagram.getSkinParam());

File: src/net/sourceforge/plantuml/ugraphic/ImageBuilder.java
Patch:
@@ -424,7 +424,7 @@ private UGraphic2 createUGraphic(FileFormatOption option, final Dimension2D dim,
 		case ATXT:
 			return new UGraphicTxt();
 		case DEBUG:
-			return new UGraphicDebug();
+			return new UGraphicDebug(scaleFactor, dim, svgLinkTarget, hoverPathColorRGB, seed, preserveAspectRatio);
 		default:
 			throw new UnsupportedOperationException(option.getFileFormat().toString());
 		}

File: src/net/sourceforge/plantuml/wbs/Fork.java
Patch:
@@ -59,7 +59,7 @@ public Fork(ISkinParam skinParam, WElement idea) {
 		}
 		this.main = buildMain(idea);
 		for (WElement child : idea.getChildren(Direction.RIGHT)) {
-			this.right.add(ITFComposed.build2(child.withBackColor(skinParam), child));
+			this.right.add(ITFComposed.build2(skinParam, child));
 		}
 	}
 

File: test/nonreg/BasicTest.java
Patch:
@@ -36,7 +36,7 @@ public class BasicTest {
 	private static final Charset UTF8 = Charset.forName("UTF-8");
 
 	private static final boolean FORCE_RESULT_GENERATION = false;
-	private static final boolean ENABLE_RESULT_GENERATION_IF_NONE_PRESENT = true;
+	private static final boolean ENABLE_RESULT_GENERATION_IF_NONE_PRESENT = false;
 
 	public BasicTest() {
 		// We want a fully portable way of non regression test, so we force the usage of

File: src/net/sourceforge/plantuml/UrlBuilder.java
Patch:
@@ -137,7 +137,8 @@ private boolean matchesOrFind(Matcher2 m) {
 	}
 
 	private String withTopUrl(String url) {
-		if (url.startsWith("http:") == false && url.startsWith("https:") == false && topurl != null) {
+		if (url.startsWith("http:") == false && url.startsWith("https:") == false && url.startsWith("file:") == false
+				&& topurl != null) {
 			return topurl + url;
 		}
 		return url;

File: src/net/sourceforge/plantuml/dedication/Dedications.java
Patch:
@@ -51,6 +51,7 @@ public class Dedications {
 		addNormal("linux_china", "linux_china");
 		addNormal("ARKBAN", "arkban");
 		addNormal("Boundaries allow discipline to create true strength", "boundaries");
+		addNormal("Thank you, Dr. Chet. I wouldn't be where I am without you", "dr_chet");
 		addCrypted("0", "pOhci6rKgPXw32AeYXhOpSY0suoauHq5VUSwFqHLHsLYgSO6WaJ7BW5vtHBAoU6ePbcW7d8Flx99MWjPSKQTDm00");
 		addCrypted("1", "LTxN3hdnhSJ515qcA7IQ841axt4GXfUd3n2wgNirYCdLnyX2360Gv1OEOnJ1-gwFzRW5B3HAqLBkR6Ge0WW_Z000");
 		addCrypted("2", "lZqLduj4j1yRqSfAvkhbqVpqK8diklatiFeenDUXSdna9bKYQTzdS264YfUBScUVDYCp2Vcq04updoN98RwxE000");

File: src/net/sourceforge/plantuml/graphic/QuoteUtils.java
Patch:
@@ -293,7 +293,9 @@ public class QuoteUtils {
 			"Gebyy gur erfcnja, Wrerzl", "Bhoyvr dhr g'nf nhphar punapr. Fhe ha znyragraqh pn crhg znepure.",
 			"Obl, gur fhcrevagraqrag'f tbaan or cvffrq!", "BX, jub oebhtug gur qbt?", "Rg yn, p'rfg yr qenzr...",
 			"V'z shmml ba gur jubyr tbbq/onq guvat. Jung qb lbh zrna, 'onq'?",
-			"Lbh'er evtug. Ab uhzna orvat jbhyq fgnpx obbxf yvxr guvf.");
+			"Lbh'er evtug. Ab uhzna orvat jbhyq fgnpx obbxf yvxr guvf.",
+			"V nz fb pyrire gung fbzrgvzrf V qba'g haqrefgnaq n fvatyr jbeq bs jung V nz fnlvat.",
+			"Jnxr zr hc orsber lbh tb-tb");
 
 	private QuoteUtils() {
 	}

File: src/net/sourceforge/plantuml/timingdiagram/command/CommandConstraint.java
Patch:
@@ -92,8 +92,10 @@ final protected CommandExecutionResult executeArg(TimingDiagram diagram, LineLoc
 		if (tick1 == null) {
 			return CommandExecutionResult.error("Unknown time label");
 		}
+		final TimeTick restore = diagram.getNow();
 		diagram.updateNow(tick1);
 		final TimeTick tick2 = TimeTickBuilder.parseTimeTick("TIME2", arg, diagram);
+		diagram.updateNow(restore);
 		if (tick2 == null) {
 			return CommandExecutionResult.error("Unknown time label");
 		}

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 3;
 		return beta;
 	}
 

File: test/nonreg/BasicTest.java
Patch:
@@ -23,6 +23,7 @@
 
 /*
  * All non-regression tests must extends BasicTest class.
+ * 
  * The tests must have a single test method that call the 'checkImage()' method.
  * Diagram to be tested must be stored in the test itself, separated by triple-quoted strings
  * The expected result (build using UGraphicDebug) is stored in a class xxxxResult.java, also separated by triple-quoted strings.
@@ -75,7 +76,7 @@ protected String getLocalFolder() {
 	}
 
 	private String getPackageName() {
-		return getClass().getPackageName();
+		return getClass().getPackage().getName();
 	}
 
 	protected Path getResultFile() {

File: test/nonreg/BasicTest.java
Patch:
@@ -23,7 +23,6 @@
 
 /*
  * All non-regression tests must extends BasicTest class.
- * 
  * The tests must have a single test method that call the 'checkImage()' method.
  * Diagram to be tested must be stored in the test itself, separated by triple-quoted strings
  * The expected result (build using UGraphicDebug) is stored in a class xxxxResult.java, also separated by triple-quoted strings.

File: src/net/sourceforge/plantuml/FileFormat.java
Patch:
@@ -177,7 +177,7 @@ protected Dimension2D calculateDimensionInternal(UFont font, String text) {
 	}
 
 	static private Dimension2DDouble getJavaDimension(UFont font, String text) {
-		final Font javaFont = font.getFont();
+		final Font javaFont = font.getUnderlayingFont();
 		final FontMetrics fm = gg.getFontMetrics(javaFont);
 		final Rectangle2D rect = fm.getStringBounds(text, gg);
 		return new Dimension2DDouble(rect.getWidth(), rect.getHeight());

File: src/net/sourceforge/plantuml/creole/legacy/StripeCode.java
Patch:
@@ -103,9 +103,10 @@ public void drawU(UGraphic ug) {
 		double y = 0;
 		for (String s : raw) {
 			final UText shape = new UText(s, fontConfiguration);
-			final Dimension2D dim = ug.getStringBounder().calculateDimension(fontConfiguration.getFont(), s);
+			final StringBounder stringBounder = ug.getStringBounder();
+			final Dimension2D dim = stringBounder.calculateDimension(fontConfiguration.getFont(), s);
 			y += dim.getHeight();
-			ug.apply(UTranslate.dy(y - shape.getDescent())).draw(shape);
+			ug.apply(UTranslate.dy(y - shape.getDescent(stringBounder))).draw(shape);
 		}
 	}
 

File: src/net/sourceforge/plantuml/graphic/StringBounder.java
Patch:
@@ -42,5 +42,7 @@
 public interface StringBounder {
 
 	public Dimension2D calculateDimension(UFont font, String text);
-	
+
+	public double getDescent(UFont font, String text);
+
 }

File: src/net/sourceforge/plantuml/graphic/UnusedSpace.java
Patch:
@@ -85,7 +85,7 @@ public static UnusedSpace getUnusedSpace(UFont font, char c) {
 	private UnusedSpace(UFont font, char c) {
 		final BufferedImage im = new BufferedImage(2 * HALF_SIZE, 2 * HALF_SIZE, BufferedImage.TYPE_INT_RGB);
 		final Graphics2D g2d = im.createGraphics();
-		g2d.setFont(font.getFont());
+		g2d.setFont(font.getUnderlayingFont());
 		g2d.drawString("" + c, HALF_SIZE, HALF_SIZE);
 
 		int minI = Integer.MAX_VALUE;

File: src/net/sourceforge/plantuml/ugraphic/FontChecker.java
Patch:
@@ -105,7 +105,7 @@ static private String getType(int type, double oldX, double oldY, double x, doub
 	}
 
 	public String getCharDesc(char c) {
-		final TextLayout t = new TextLayout("" + c, font.getFont(), TextBlockUtils.getFontRenderContext());
+		final TextLayout t = new TextLayout("" + c, font.getUnderlayingFont(), TextBlockUtils.getFontRenderContext());
 		final Shape sh = t.getOutline(null);
 		final double current[] = new double[6];
 		final PathIterator it = sh.getPathIterator(null);
@@ -123,7 +123,7 @@ public String getCharDesc(char c) {
 	}
 
 	public String getCharDescVerbose(char c) {
-		final TextLayout t = new TextLayout("" + c, font.getFont(), TextBlockUtils.getFontRenderContext());
+		final TextLayout t = new TextLayout("" + c, font.getUnderlayingFont(), TextBlockUtils.getFontRenderContext());
 		final Shape sh = t.getOutline(null);
 		final double current[] = new double[6];
 		final PathIterator it = sh.getPathIterator(null);

File: src/net/sourceforge/plantuml/ugraphic/eps/DriverCenteredCharacterEps.java
Patch:
@@ -57,7 +57,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		final double xpos = x - unusedSpace.getCenterX() - 0.5;
 		final double ypos = y - unusedSpace.getCenterY() - 0.5;
 
-		final TextLayout t = new TextLayout("" + c, font.getFont(), TextBlockUtils.getFontRenderContext());
+		final TextLayout t = new TextLayout("" + c, font.getUnderlayingFont(), TextBlockUtils.getFontRenderContext());
 		eps.setStrokeColor(mapper.toColor(param.getColor()));
 		DriverTextEps.drawPathIterator(eps, xpos, ypos, t.getOutline(null));
 

File: src/net/sourceforge/plantuml/ugraphic/eps/DriverTextEps.java
Patch:
@@ -93,7 +93,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		final FontConfiguration fontConfiguration = shape.getFontConfiguration();
 		final UFont font = fontConfiguration.getFont();
 
-		final TextLayout textLayout = new TextLayout(shape.getText(), font.getFont(), fontRenderContext);
+		final TextLayout textLayout = new TextLayout(shape.getText(), font.getUnderlayingFont(), fontRenderContext);
 		// System.err.println("text=" + shape.getText());
 
 		MinMax dim = null;

File: src/net/sourceforge/plantuml/ugraphic/g2d/DriverCenteredCharacterG2d.java
Patch:
@@ -57,7 +57,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		final double xpos = x - unusedSpace.getCenterX();
 		final double ypos = y - unusedSpace.getCenterY() - 0.5;
 
-		g2d.setFont(font.getFont());
+		g2d.setFont(font.getUnderlayingFont());
 		g2d.drawString("" + c, (float) xpos, (float) ypos);
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/g2d/DriverTextAsPathG2d.java
Patch:
@@ -98,9 +98,9 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		visible.ensureVisible(x, y - dimBack.getHeight() + 1.5);
 		visible.ensureVisible(x + dimBack.getWidth(), y + 1.5);
 
-		g2d.setFont(font.getFont());
+		g2d.setFont(font.getUnderlayingFont());
 		g2d.setColor(mapper.toColor(fontConfiguration.getColor()));
-		final TextLayout t = new TextLayout(shape.getText(), font.getFont(), fontRenderContext);
+		final TextLayout t = new TextLayout(shape.getText(), font.getUnderlayingFont(), fontRenderContext);
 		g2d.translate(x, y);
 		g2d.fill(t.getOutline(null));
 		g2d.translate(-x, -y);
@@ -130,7 +130,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		}
 		if (fontConfiguration.containsStyle(FontStyle.STRIKE)) {
 			final Dimension2D dim = calculateDimension(FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault()), font, shape.getText());
-			final FontMetrics fm = g2d.getFontMetrics(font.getFont());
+			final FontMetrics fm = g2d.getFontMetrics(font.getUnderlayingFont());
 			final int ypos = (int) (y - fm.getDescent() - 0.5);
 			final HColor extended = fontConfiguration.getExtendedColor();
 			if (extended != null) {

File: src/net/sourceforge/plantuml/ugraphic/g2d/DriverTextG2d.java
Patch:
@@ -100,7 +100,7 @@ private void printSingleText(Graphics2D g2d, final FontConfiguration fontConfigu
 
 		if (orientation == 90) {
 			g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
-			g2d.setFont(font.getFont());
+			g2d.setFont(font.getUnderlayingFont());
 			g2d.setColor(mapper.toColor(fontConfiguration.getColor()));
 			final AffineTransform orig = g2d.getTransform();
 			g2d.translate(x, y);
@@ -133,7 +133,7 @@ private void printSingleText(Graphics2D g2d, final FontConfiguration fontConfigu
 			visible.ensureVisible(x + dimBack.getWidth(), y + 1.5);
 
 			g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
-			g2d.setFont(font.getFont());
+			g2d.setFont(font.getUnderlayingFont());
 			g2d.setColor(mapper.toColor(fontConfiguration.getColor()));
 			g2d.drawString(text, (float) x, (float) y);
 
@@ -163,7 +163,7 @@ private void printSingleText(Graphics2D g2d, final FontConfiguration fontConfigu
 			if (fontConfiguration.containsStyle(FontStyle.STRIKE)) {
 				final Dimension2D dim = calculateDimension(
 						FileFormat.PNG.getDefaultStringBounder(TikzFontDistortion.getDefault()), font, text);
-				final FontMetrics fm = g2d.getFontMetrics(font.getFont());
+				final FontMetrics fm = g2d.getFontMetrics(font.getUnderlayingFont());
 				final int ypos = (int) (y - fm.getDescent() - 0.5);
 				if (extended != null) {
 					g2d.setColor(mapper.toColor(extended));

File: src/net/sourceforge/plantuml/ugraphic/svg/DriverCenteredCharacterSvg.java
Patch:
@@ -57,7 +57,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		final double xpos = x - unusedSpace.getCenterX() - 0.5;
 		final double ypos = y - unusedSpace.getCenterY() - 0.5;
 
-		final TextLayout t = new TextLayout("" + c, font.getFont(), TextBlockUtils.getFontRenderContext());
+		final TextLayout t = new TextLayout("" + c, font.getUnderlayingFont(), TextBlockUtils.getFontRenderContext());
 		svg.setFillColor(mapper.toRGB(param.getColor()));
 		svg.drawPathIterator(xpos, ypos, t.getOutline(null).getPathIterator(null));
 

File: src/net/sourceforge/plantuml/ugraphic/svg/DriverTextAsPathSvg.java
Patch:
@@ -69,7 +69,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		final FontConfiguration fontConfiguration = shape.getFontConfiguration();
 		final UFont font = fontConfiguration.getFont();
 
-		final TextLayout t = new TextLayout(shape.getText(), font.getFont(), fontRenderContext);
+		final TextLayout t = new TextLayout(shape.getText(), font.getUnderlayingFont(), fontRenderContext);
 		svg.drawPathIterator(x, y, t.getOutline(null).getPathIterator(null));
 	}
 

File: src/net/sourceforge/plantuml/ugraphic/tikz/DriverCenteredCharacterTikz.java
Patch:
@@ -57,7 +57,7 @@ public void draw(UShape ushape, double x, double y, ColorMapper mapper, UParam p
 		final double xpos = x - unusedSpace.getCenterX() - 0.5;
 		final double ypos = y - unusedSpace.getCenterY() - 0.5;
 
-		final TextLayout t = new TextLayout("" + c, font.getFont(), TextBlockUtils.getFontRenderContext());
+		final TextLayout t = new TextLayout("" + c, font.getUnderlayingFont(), TextBlockUtils.getFontRenderContext());
 		tikz.setStrokeColor(mapper.toColor(param.getColor()));
 		tikz.drawPathIterator(xpos, ypos, t.getOutline(null).getPathIterator(null));
 

File: src/net/sourceforge/plantuml/ugraphic/txt/UGraphicTxt.java
Patch:
@@ -82,7 +82,7 @@ public void draw(UShape shape) {
 		// final UClip clip = getClip();
 		if (shape instanceof UText) {
 			final UText txt = (UText) shape;
-			final int y = ((int) (getTranslateY() + txt.getDescent())) / 10;
+			final int y = ((int) (getTranslateY() + txt.getDescent(getStringBounder()))) / 10;
 			if (txt.getFontConfiguration().containsStyle(FontStyle.WAVE)) {
 				charArea.drawHLine('^', y, getDx(), txt.getText().length());
 				charArea.drawStringLR(txt.getText(), getDx(), y + 1);

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -410,7 +410,8 @@ public boolean isBoxPending() {
 	@Override
 	public int getNbImages() {
 		try {
-			return getSequenceDiagramPngMaker(1, new FileFormatOption(FileFormat.PNG)).getNbPages();
+			// The DEBUG StringBounder is ok just to compute the number of pages here.
+			return getSequenceDiagramPngMaker(1, new FileFormatOption(FileFormat.DEBUG)).getNbPages();
 		} catch (Throwable t) {
 			t.printStackTrace();
 			return 1;

File: src/net/sourceforge/plantuml/FileFormat.java
Patch:
@@ -80,7 +80,8 @@ public enum FileFormat {
 	LATEX_NO_PREAMBLE("application/x-latex"),
 	BASE64("text/plain; charset=x-user-defined"),
 	BRAILLE_PNG("image/png"),
-	PREPROC("text/plain");
+	PREPROC("text/plain"),
+	DEBUG("text/plain");
 
 	private final String mimeType;
 

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMakerSvek.java
Patch:
@@ -117,6 +117,7 @@ private ImageData createFileInternal(OutputStream os, List<String> dotStrings, F
 		if (widthwarning != null && widthwarning.matches("\\d+")) {
 			warningOrError = svek2.getWarningOrError(Integer.parseInt(widthwarning));
 		}
+		result.calculateDimension(stringBounder);  // Ensure text near the margins is not cut off
 
 		final HColor backcolor = result.getBackcolor();
 		final String metadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMakerSvek.java
Patch:
@@ -117,6 +117,7 @@ private ImageData createFileInternal(OutputStream os, List<String> dotStrings, F
 		if (widthwarning != null && widthwarning.matches("\\d+")) {
 			warningOrError = svek2.getWarningOrError(Integer.parseInt(widthwarning));
 		}
+		result.calculateDimension(stringBounder);  // Ensure text near the margins is not cut off
 
 		final HColor backcolor = result.getBackcolor();
 		final String metadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -531,6 +531,8 @@ public List<LinkAnchor> getLinkAnchors() {
 
 	@Override
 	public ClockwiseTopRightBottomLeft getDefaultMargins() {
-		return ClockwiseTopRightBottomLeft.same(5);
+		return modeTeoz()  // this is for backward compatibility
+				? ClockwiseTopRightBottomLeft.same(5)
+				: ClockwiseTopRightBottomLeft.topRightBottomLeft(5, 5, 5, 0);
 	}
 }

File: src/net/sourceforge/plantuml/sequencediagram/SequenceDiagram.java
Patch:
@@ -531,6 +531,8 @@ public List<LinkAnchor> getLinkAnchors() {
 
 	@Override
 	public ClockwiseTopRightBottomLeft getDefaultMargins() {
-		return ClockwiseTopRightBottomLeft.same(5);
+		return modeTeoz()  // this is for backward compatibility
+				? ClockwiseTopRightBottomLeft.same(5)
+				: ClockwiseTopRightBottomLeft.topRightBottomLeft(5, 5, 5, 0);
 	}
 }

File: src/net/sourceforge/plantuml/SourceStringReader.java
Patch:
@@ -229,7 +229,7 @@ public ImageData noStartumlFound(OutputStream os, FileFormatOption fileFormatOpt
 		final TextBlockBackcolored error = GraphicStrings.createForError(Arrays.asList("No @startuml/@enduml found"),
 				fileFormatOption.isUseRedForError());
 		HColor backcolor = error.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(error);

File: src/net/sourceforge/plantuml/TitledDiagram.java
Patch:
@@ -212,6 +212,8 @@ public boolean isUseSmetana() {
 		return useSmetana;
 	}
 
+	@Deprecated
+	// TODO Well I think it's deprecated - whatever uses it should be looked at closely
 	public final double getScaleCoef(FileFormatOption fileFormatOption) {
 		if (getSkinParam().getDpi() == 96) {
 			return fileFormatOption.getScaleCoef();

File: src/net/sourceforge/plantuml/UmlDiagram.java
Patch:
@@ -185,7 +185,7 @@ public static void exportDiagramError(OutputStream os, Throwable exception, File
 
 		strings.addAll(CommandExecutionResult.getStackTrace(exception));
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, metadata,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, metadata,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/bpm/BpmDiagram.java
Patch:
@@ -81,8 +81,7 @@ public BpmDiagram() {
 	@Override
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(getUDrawable());

File: src/net/sourceforge/plantuml/braille/UGraphicBraille.java
Patch:
@@ -128,7 +128,7 @@ public StringBounder getStringBounder() {
 
 	public void writeImageTOBEMOVED(OutputStream os, String metadata, int dpi) throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, metadata,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, metadata,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(new BrailleDrawer(getGraphicObject()));

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagram.java
Patch:
@@ -198,7 +198,7 @@ final protected ImageData exportLayoutExplicit(OutputStream os, int index, FileF
 			final RowLayout rawLayout = getRawLayout(i);
 			fullLayout.addRowLayout(rawLayout);
 		}
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, 1.0);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(fullLayout);
 		return imageBuilder.writeImageTOBEMOVED(seed(), os);

File: src/net/sourceforge/plantuml/creole/legacy/PSystemCreole.java
Patch:
@@ -84,7 +84,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		final Sheet sheet = Parser.build(fontConfiguration, HorizontalAlignment.LEFT,
 				SkinParam.create(UmlDiagramType.SEQUENCE), CreoleMode.FULL).createSheet(display);
 		final SheetBlock1 sheetBlock = new SheetBlock1(sheet, LineBreakStrategy.NONE, 0);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/cute/PSystemCute.java
Patch:
@@ -100,7 +100,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			margin2 = 10;
 		}
 		final ClockwiseTopRightBottomLeft margins = ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, margins, null);
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);
 		builder.setUDrawable(root);

File: src/net/sourceforge/plantuml/dedication/PSystemDedication.java
Patch:
@@ -69,7 +69,7 @@ public PSystemDedication(Dedication dedication, String keepLetter) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(new UDrawable() {

File: src/net/sourceforge/plantuml/definition/PSystemDefinition.java
Patch:
@@ -73,7 +73,7 @@ public DiagramDescription getDescription() {
 	@Override
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormatOption, long seed)
 			throws IOException {
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, "", "",
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, "", "",
 				ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(this);

File: src/net/sourceforge/plantuml/donors/PSystemDonors.java
Patch:
@@ -111,7 +111,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/donors/PSystemSkinparameterList.java
Patch:
@@ -66,7 +66,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemAppleTwo.java
Patch:
@@ -72,7 +72,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemCharlie.java
Patch:
@@ -67,7 +67,7 @@ public class PSystemCharlie extends AbstractPSystem {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.BLACK;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(new UDrawable() {

File: src/net/sourceforge/plantuml/eggs/PSystemColors.java
Patch:
@@ -93,7 +93,7 @@ public PSystemColors(String option) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(this);

File: src/net/sourceforge/plantuml/eggs/PSystemEgg.java
Patch:
@@ -69,7 +69,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemLost.java
Patch:
@@ -65,7 +65,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemRIP.java
Patch:
@@ -84,7 +84,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemWelcome.java
Patch:
@@ -89,7 +89,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/error/PSystemError.java
Patch:
@@ -231,7 +231,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 
 		TextBlock udrawable;
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setRandomPixel(true);

File: src/net/sourceforge/plantuml/font/PSystemListFonts.java
Patch:
@@ -79,7 +79,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/help/Help.java
Patch:
@@ -79,7 +79,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final Sheet sheet = Parser.build(fontConfiguration, HorizontalAlignment.LEFT, getSkinParam(), CreoleMode.FULL)
 				.createSheet(display);
 		final SheetBlock1 sheetBlock = new SheetBlock1(sheet, LineBreakStrategy.NONE, 0);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/jungle/PSystemTree.java
Patch:
@@ -83,7 +83,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		HColor backcolor = HColorUtils.WHITE;
 
 		final ClockwiseTopRightBottomLeft margins = ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, margins, backcolor);
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/math/ScientificEquationSafe.java
Patch:
@@ -138,7 +138,7 @@ private void printTrace(Exception e) {
 
 	private ImageBuilder getRollback() {
 		final TextBlock block = GraphicStrings.createBlackOnWhiteMonospaced(Arrays.asList(formula));
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(block);

File: src/net/sourceforge/plantuml/openiconic/PSystemListOpenIconic.java
Patch:
@@ -68,7 +68,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
 		final String metadata = fileFormat.isWithMetadata() ? getMetadata() : null;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, metadata,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, metadata,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/openiconic/PSystemOpenIconic.java
Patch:
@@ -76,7 +76,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			margin2 = 5;
 		}
 		final ClockwiseTopRightBottomLeft margins = ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, margins, null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(icon.asTextBlock(HColorUtils.BLACK, factor));

File: src/net/sourceforge/plantuml/oregon/PSystemOregon.java
Patch:
@@ -102,7 +102,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 		getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -442,8 +442,7 @@ private ImageData createFileLocked(OutputStream os, List<String> dotStrings, Fil
 			// DebugUtils.printDebugEdge(e);
 			// }
 
-			final double scale = 1;
-			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, scale);
+			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption);
 
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sprite/ListSpriteDiagram.java
Patch:
@@ -75,8 +75,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 			throws IOException {
 
 		final TextBlock result = getTable();
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/sprite/PSystemListInternalSprites.java
Patch:
@@ -63,7 +63,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/sprite/StdlibDiagram.java
Patch:
@@ -86,8 +86,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final TextBlock result = getTable();
 
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/stats/PSystemStats.java
Patch:
@@ -65,7 +65,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/swing/ImageWindow2.java
Patch:
@@ -333,7 +333,7 @@ private ScrollablePicture buildScrollablePicture() {
 			final String msg = "Error reading file: " + ex.toString();
 			final TextBlockBackcolored error = GraphicStrings.createForError(Arrays.asList(msg), false);
 			HColor backcolor = error.getBackcolor();
-			final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+			final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 					null, ClockwiseTopRightBottomLeft.none(), backcolor);
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 			imageBuilder.setUDrawable(error);

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagram.java
Patch:
@@ -99,8 +99,7 @@ public TimingDiagram() {
 	@Override
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/ugraphic/FontChecker.java
Patch:
@@ -172,7 +172,7 @@ private String getSvgImage(char c) throws IOException, TransformerException {
 
 	public BufferedImage getBufferedImage(final char c) throws IOException {
 		assert c != '\t';
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		final double dim = 20;

File: src/net/sourceforge/plantuml/version/PSystemKeycheck.java
Patch:
@@ -79,7 +79,7 @@ public PSystemKeycheck(String sig, String key) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/version/PSystemKeygen.java
Patch:
@@ -77,7 +77,7 @@ public PSystemKeygen(String key) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/version/PSystemLicense.java
Patch:
@@ -62,7 +62,7 @@ public class PSystemLicense extends AbstractPSystem implements UDrawable {
 	@Override
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(this);

File: src/net/sourceforge/plantuml/version/PSystemVersion.java
Patch:
@@ -173,7 +173,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		final TextBlockBackcolored result = GraphicStrings.createBlackOnWhite(strings, image,
 				GraphicPosition.BACKGROUND_CORNER_BOTTOM_RIGHT);
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/SourceStringReader.java
Patch:
@@ -229,7 +229,7 @@ public ImageData noStartumlFound(OutputStream os, FileFormatOption fileFormatOpt
 		final TextBlockBackcolored error = GraphicStrings.createForError(Arrays.asList("No @startuml/@enduml found"),
 				fileFormatOption.isUseRedForError());
 		HColor backcolor = error.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(error);

File: src/net/sourceforge/plantuml/TitledDiagram.java
Patch:
@@ -212,6 +212,8 @@ public boolean isUseSmetana() {
 		return useSmetana;
 	}
 
+	@Deprecated
+	// TODO Well I think it's deprecated - whatever uses it should be looked at closely
 	public final double getScaleCoef(FileFormatOption fileFormatOption) {
 		if (getSkinParam().getDpi() == 96) {
 			return fileFormatOption.getScaleCoef();

File: src/net/sourceforge/plantuml/UmlDiagram.java
Patch:
@@ -185,7 +185,7 @@ public static void exportDiagramError(OutputStream os, Throwable exception, File
 
 		strings.addAll(CommandExecutionResult.getStackTrace(exception));
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, metadata,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, metadata,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/bpm/BpmDiagram.java
Patch:
@@ -81,8 +81,7 @@ public BpmDiagram() {
 	@Override
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(getUDrawable());

File: src/net/sourceforge/plantuml/braille/UGraphicBraille.java
Patch:
@@ -128,7 +128,7 @@ public StringBounder getStringBounder() {
 
 	public void writeImageTOBEMOVED(OutputStream os, String metadata, int dpi) throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, metadata,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, metadata,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(new BrailleDrawer(getGraphicObject()));

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagram.java
Patch:
@@ -198,7 +198,7 @@ final protected ImageData exportLayoutExplicit(OutputStream os, int index, FileF
 			final RowLayout rawLayout = getRawLayout(i);
 			fullLayout.addRowLayout(rawLayout);
 		}
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, 1.0);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(fullLayout);
 		return imageBuilder.writeImageTOBEMOVED(seed(), os);

File: src/net/sourceforge/plantuml/creole/legacy/PSystemCreole.java
Patch:
@@ -84,7 +84,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		final Sheet sheet = Parser.build(fontConfiguration, HorizontalAlignment.LEFT,
 				SkinParam.create(UmlDiagramType.SEQUENCE), CreoleMode.FULL).createSheet(display);
 		final SheetBlock1 sheetBlock = new SheetBlock1(sheet, LineBreakStrategy.NONE, 0);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/cute/PSystemCute.java
Patch:
@@ -100,7 +100,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			margin2 = 10;
 		}
 		final ClockwiseTopRightBottomLeft margins = ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, margins, null);
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);
 		builder.setUDrawable(root);

File: src/net/sourceforge/plantuml/dedication/PSystemDedication.java
Patch:
@@ -69,7 +69,7 @@ public PSystemDedication(Dedication dedication, String keepLetter) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(new UDrawable() {

File: src/net/sourceforge/plantuml/definition/PSystemDefinition.java
Patch:
@@ -73,7 +73,7 @@ public DiagramDescription getDescription() {
 	@Override
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormatOption, long seed)
 			throws IOException {
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, "", "",
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, "", "",
 				ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(this);

File: src/net/sourceforge/plantuml/donors/PSystemDonors.java
Patch:
@@ -111,7 +111,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/donors/PSystemSkinparameterList.java
Patch:
@@ -66,7 +66,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemAppleTwo.java
Patch:
@@ -72,7 +72,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemCharlie.java
Patch:
@@ -67,7 +67,7 @@ public class PSystemCharlie extends AbstractPSystem {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.BLACK;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(new UDrawable() {

File: src/net/sourceforge/plantuml/eggs/PSystemColors.java
Patch:
@@ -93,7 +93,7 @@ public PSystemColors(String option) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(this);

File: src/net/sourceforge/plantuml/eggs/PSystemEgg.java
Patch:
@@ -69,7 +69,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemLost.java
Patch:
@@ -65,7 +65,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemRIP.java
Patch:
@@ -84,7 +84,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/eggs/PSystemWelcome.java
Patch:
@@ -89,7 +89,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/error/PSystemError.java
Patch:
@@ -231,7 +231,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 
 		TextBlock udrawable;
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setRandomPixel(true);

File: src/net/sourceforge/plantuml/font/PSystemListFonts.java
Patch:
@@ -79,7 +79,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/help/Help.java
Patch:
@@ -79,7 +79,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final Sheet sheet = Parser.build(fontConfiguration, HorizontalAlignment.LEFT, getSkinParam(), CreoleMode.FULL)
 				.createSheet(display);
 		final SheetBlock1 sheetBlock = new SheetBlock1(sheet, LineBreakStrategy.NONE, 0);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/jungle/PSystemTree.java
Patch:
@@ -83,7 +83,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		HColor backcolor = HColorUtils.WHITE;
 
 		final ClockwiseTopRightBottomLeft margins = ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, margins, backcolor);
 		final ImageBuilder builder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/math/ScientificEquationSafe.java
Patch:
@@ -138,7 +138,7 @@ private void printTrace(Exception e) {
 
 	private ImageBuilder getRollback() {
 		final TextBlock block = GraphicStrings.createBlackOnWhiteMonospaced(Arrays.asList(formula));
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(block);

File: src/net/sourceforge/plantuml/openiconic/PSystemListOpenIconic.java
Patch:
@@ -68,7 +68,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
 		final String metadata = fileFormat.isWithMetadata() ? getMetadata() : null;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, metadata,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, metadata,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/openiconic/PSystemOpenIconic.java
Patch:
@@ -76,7 +76,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			margin2 = 5;
 		}
 		final ClockwiseTopRightBottomLeft margins = ClockwiseTopRightBottomLeft.margin1margin2(margin1, margin2);
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, margins, null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(icon.asTextBlock(HColorUtils.BLACK, factor));

File: src/net/sourceforge/plantuml/oregon/PSystemOregon.java
Patch:
@@ -102,7 +102,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 		getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -442,8 +442,7 @@ private ImageData createFileLocked(OutputStream os, List<String> dotStrings, Fil
 			// DebugUtils.printDebugEdge(e);
 			// }
 
-			final double scale = 1;
-			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, scale);
+			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption);
 
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sprite/ListSpriteDiagram.java
Patch:
@@ -75,8 +75,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 			throws IOException {
 
 		final TextBlock result = getTable();
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/sprite/PSystemListInternalSprites.java
Patch:
@@ -63,7 +63,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final UDrawable result = getGraphicStrings();
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/sprite/StdlibDiagram.java
Patch:
@@ -86,8 +86,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final TextBlock result = getTable();
 
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/stats/PSystemStats.java
Patch:
@@ -65,7 +65,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			throws IOException {
 		final TextBlockBackcolored result = getGraphicStrings();
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/swing/ImageWindow2.java
Patch:
@@ -333,7 +333,7 @@ private ScrollablePicture buildScrollablePicture() {
 			final String msg = "Error reading file: " + ex.toString();
 			final TextBlockBackcolored error = GraphicStrings.createForError(Arrays.asList(msg), false);
 			HColor backcolor = error.getBackcolor();
-			final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+			final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 					null, ClockwiseTopRightBottomLeft.none(), backcolor);
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 			imageBuilder.setUDrawable(error);

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagram.java
Patch:
@@ -99,8 +99,7 @@ public TimingDiagram() {
 	@Override
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
-		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/ugraphic/FontChecker.java
Patch:
@@ -172,7 +172,7 @@ private String getSvgImage(char c) throws IOException, TransformerException {
 
 	public BufferedImage getBufferedImage(final char c) throws IOException {
 		assert c != '\t';
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, null,
 				null, ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		final double dim = 20;

File: src/net/sourceforge/plantuml/version/PSystemKeycheck.java
Patch:
@@ -79,7 +79,7 @@ public PSystemKeycheck(String sig, String key) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/version/PSystemKeygen.java
Patch:
@@ -77,7 +77,7 @@ public PSystemKeygen(String key) {
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
 		HColor backcolor = HColorUtils.WHITE;
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/version/PSystemLicense.java
Patch:
@@ -62,7 +62,7 @@ public class PSystemLicense extends AbstractPSystem implements UDrawable {
 	@Override
 	final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatOption fileFormat, long seed)
 			throws IOException {
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), null);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(this);

File: src/net/sourceforge/plantuml/version/PSystemVersion.java
Patch:
@@ -173,7 +173,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 		final TextBlockBackcolored result = GraphicStrings.createBlackOnWhite(strings, image,
 				GraphicPosition.BACKGROUND_CORNER_BOTTOM_RIGHT);
 		HColor backcolor = result.getBackcolor();
-		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0,
+		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null,
 				getMetadata(), null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/gen/lib/dotgen/mincross__c.java
Patch:
@@ -1541,7 +1541,7 @@ public static void flat_reorder(ST_Agraph_s g) {
 
 
 
-@Reviewed(when = "16/11/2020Â²")
+@Reviewed(when = "16/11/2020")
 @Original(version="2.38.0", path="lib/dotgen/mincross.c", name="reorder", key="inv6wazjcnh4xkzzphsdcmg4", definition="static void reorder(graph_t * g, int r, int reverse, int hasfixed)")
 public static void reorder(ST_Agraph_s g, int r, boolean reverse, boolean hasfixed) {
 ENTERING("inv6wazjcnh4xkzzphsdcmg4","reorder");

File: src/net/sourceforge/plantuml/sequencediagram/LifeEvent.java
Patch:
@@ -78,9 +78,8 @@ public boolean isDeactivateOrDestroy() {
 		return type == LifeEventType.DEACTIVATE || type == LifeEventType.DESTROY;
 	}
 
-	@Deprecated
-	public boolean isDestroy() {
-		return type == LifeEventType.DESTROY;
+	public boolean isDeactivate() {
+		return type == LifeEventType.DEACTIVATE;
 	}
 
 	public boolean isDestroy(Participant p) {

File: src/net/sourceforge/plantuml/sequencediagram/teoz/AbstractTile.java
Patch:
@@ -55,7 +55,7 @@ final public double getZZZ() {
 		return result;
 	}
 
-	public boolean matchAnchorV1(String anchor) {
+	public boolean matchAnchor(String anchor) {
 		final Event event = this.getEvent();
 		if (event instanceof AbstractMessage) {
 			final AbstractMessage msg = (AbstractMessage) event;

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationExoTile.java
Patch:
@@ -167,7 +167,7 @@ public void addConstraints() {
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		final ArrowComponent comp = getComponent(getStringBounder());
 		final Dimension2D dim = comp.getPreferredDimension(getStringBounder());
 		final double arrowY = comp.getStartPoint(getStringBounder(), dim).getY();

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTile.java
Patch:
@@ -141,7 +141,7 @@ public double getContactPointRelative() {
 	public static final double LIVE_DELTA_SIZE = 5;
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		if (message.isCreate()) {
 			livingSpace2.goCreate(y);
 		}

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteBottom.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.graphic.StringBounder;
+import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.real.Real;
 import net.sourceforge.plantuml.sequencediagram.AbstractMessage;
 import net.sourceforge.plantuml.sequencediagram.Event;
@@ -83,7 +84,7 @@ public CommunicationTileNoteBottom(Tile tile, AbstractMessage message, Rose skin
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		tile.callbackY(y);
 	}
 
@@ -103,7 +104,7 @@ public void drawU(UGraphic ug) {
 		final Component comp = getComponent(stringBounder);
 		final Dimension2D dim = comp.getPreferredDimension(stringBounder);
 		final Area area = new Area(dim.getWidth(), dim.getHeight());
-		tile.drawU(ug);
+		((UDrawable) tile).drawU(ug);
 
 		final double middleMsg = (tile.getMinX().getCurrentValue() + tile.getMaxX().getCurrentValue()) / 2;
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteLeft.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.graphic.StringBounder;
+import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.real.Real;
 import net.sourceforge.plantuml.sequencediagram.AbstractMessage;
 import net.sourceforge.plantuml.sequencediagram.Event;
@@ -81,7 +82,7 @@ public CommunicationTileNoteLeft(Tile tile, AbstractMessage message, Rose skin,
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		tile.callbackY(y);
 	}
 
@@ -102,7 +103,7 @@ public void drawU(UGraphic ug) {
 		final Component comp = getComponent(stringBounder);
 		final Dimension2D dim = comp.getPreferredDimension(stringBounder);
 		final Area area = new Area(dim.getWidth(), dim.getHeight());
-		tile.drawU(ug);
+		((UDrawable) tile).drawU(ug);
 		final Real p = getNotePosition(stringBounder);
 
 		comp.drawU(ug.apply(UTranslate.dx(p.getCurrentValue())), area, (Context2D) ug);

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteRight.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.graphic.StringBounder;
+import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.real.Real;
 import net.sourceforge.plantuml.sequencediagram.AbstractMessage;
 import net.sourceforge.plantuml.sequencediagram.Event;
@@ -85,7 +86,7 @@ public CommunicationTileNoteRight(Tile tile, AbstractMessage message, Rose skin,
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		tile.callbackY(y);
 	}
 
@@ -110,7 +111,7 @@ public void drawU(UGraphic ug) {
 		final Component comp = getComponent(stringBounder);
 		final Dimension2D dim = comp.getPreferredDimension(stringBounder);
 		final Area area = new Area(dim.getWidth(), dim.getHeight());
-		tile.drawU(ug);
+		((UDrawable) tile).drawU(ug);
 		final Real p = getNotePosition(stringBounder);
 
 		comp.drawU(ug.apply(UTranslate.dx(p.getCurrentValue())), area, (Context2D) ug);

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileNoteTop.java
Patch:
@@ -40,6 +40,7 @@
 import net.sourceforge.plantuml.ColorParam;
 import net.sourceforge.plantuml.ISkinParam;
 import net.sourceforge.plantuml.graphic.StringBounder;
+import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.real.Real;
 import net.sourceforge.plantuml.sequencediagram.AbstractMessage;
 import net.sourceforge.plantuml.sequencediagram.Event;
@@ -83,7 +84,7 @@ public CommunicationTileNoteTop(Tile tile, AbstractMessage message, Rose skin, I
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		tile.callbackY(y);
 	}
 
@@ -104,7 +105,7 @@ public void drawU(UGraphic ug) {
 		final Dimension2D dim = comp.getPreferredDimension(stringBounder);
 		final Area area = new Area(dim.getWidth(), dim.getHeight());
 
-		tile.drawU(ug.apply(UTranslate.dy(dim.getHeight() + spacey)));
+		((UDrawable) tile).drawU(ug.apply(UTranslate.dy(dim.getHeight() + spacey)));
 
 		final double middleMsg = (tile.getMinX().getCurrentValue() + tile.getMaxX().getCurrentValue()) / 2;
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelf.java
Patch:
@@ -100,7 +100,7 @@ private ArrowComponent getComponent(StringBounder stringBounder) {
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		final ArrowComponent comp = getComponent(getStringBounder());
 		final Dimension2D dim = comp.getPreferredDimension(getStringBounder());
 		final Point2D p1 = comp.getStartPoint(getStringBounder(), dim);

File: src/net/sourceforge/plantuml/sequencediagram/teoz/CommunicationTileSelfNoteRight.java
Patch:
@@ -79,7 +79,7 @@ public CommunicationTileSelfNoteRight(CommunicationTileSelf tile, Message messag
 	}
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		tile.callbackY(y);
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LifeEventTile.java
Patch:
@@ -59,7 +59,7 @@ public class LifeEventTile extends AbstractTile {
 	private final ISkinParam skinParam;
 
 	@Override
-	public void callbackY_internal(double y) {
+	final protected void callbackY_internal(double y) {
 		// System.err.println("LifeEventTile::updateStairs " + lifeEvent + " " +
 		// livingSpace.getParticipant() + " y=" + y);
 		livingSpace.addStepForLivebox(getEvent(), y);

File: src/net/sourceforge/plantuml/sequencediagram/teoz/LivingSpaces.java
Patch:
@@ -136,7 +136,7 @@ public void drawLifeLines(final UGraphic ug, double height, Context2D context) {
 			// }
 			// System.err.println("drawing lines " + livingSpace);
 			final double x = livingSpace.getPosC(ug.getStringBounder()).getCurrentValue();
-			livingSpace.drawLineAndLiveBoxes(ug.apply(UTranslate.dx(x)), height, context);
+			livingSpace.drawLineAndLiveboxes(ug.apply(UTranslate.dx(x)), height, context);
 		}
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/TileMarged.java
Patch:
@@ -35,6 +35,7 @@
  */
 package net.sourceforge.plantuml.sequencediagram.teoz;
 
+import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.real.Real;
 import net.sourceforge.plantuml.sequencediagram.Event;
 import net.sourceforge.plantuml.ugraphic.UGraphic;
@@ -58,7 +59,7 @@ public TileMarged(Tile tile, double x1, double x2, double y1, double y2) {
 	}
 
 	public void drawU(UGraphic ug) {
-		tile.drawU(ug.apply(new UTranslate(x1, y1)));
+		((UDrawable) tile).drawU(ug.apply(new UTranslate(x1, y1)));
 
 	}
 

File: src/net/sourceforge/plantuml/sequencediagram/teoz/UGraphicInterceptorTile.java
Patch:
@@ -35,6 +35,7 @@
  */
 package net.sourceforge.plantuml.sequencediagram.teoz;
 
+import net.sourceforge.plantuml.graphic.UDrawable;
 import net.sourceforge.plantuml.graphic.UGraphicDelegator;
 import net.sourceforge.plantuml.skin.Context2D;
 import net.sourceforge.plantuml.ugraphic.UChange;
@@ -52,7 +53,7 @@ public UGraphicInterceptorTile(UGraphic ug, boolean isBackground) {
 
 	public void draw(UShape shape) {
 		if (shape instanceof Tile) {
-			final Tile drawable = (Tile) shape;
+			final UDrawable drawable = (UDrawable) shape;
 			drawable.drawU(this);
 		} else {
 			getUg().draw(shape);

File: src/net/sourceforge/plantuml/ugraphic/svg/UGraphicSvg.java
Patch:
@@ -61,6 +61,7 @@
 import net.sourceforge.plantuml.ugraphic.UImageSvg;
 import net.sourceforge.plantuml.ugraphic.ULine;
 import net.sourceforge.plantuml.ugraphic.UPath;
+import net.sourceforge.plantuml.ugraphic.UPixel;
 import net.sourceforge.plantuml.ugraphic.UPolygon;
 import net.sourceforge.plantuml.ugraphic.URectangle;
 import net.sourceforge.plantuml.ugraphic.UText;
@@ -148,6 +149,7 @@ private void register() {
 			registerDriver(UText.class, new DriverTextSvg(getStringBounder(), this));
 		}
 		registerDriver(ULine.class, new DriverLineSvg(this));
+		registerDriver(UPixel.class, new DriverPixelSvg());
 		registerDriver(UPolygon.class, new DriverPolygonSvg(this));
 		registerDriver(UEllipse.class, new DriverEllipseSvg(this));
 		registerDriver(UImage.class, new DriverImagePng(this));

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 2;
+		final int beta = 6;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/wbs/WBSDiagram.java
Patch:
@@ -146,7 +146,7 @@ public CommandExecutionResult addIdea(HColor backColor, int level, String label,
 				if (root != null) {
 					return CommandExecutionResult.error("Error 44");
 				}
-				initRoot(backColor, label, stereotype);
+				initRoot(backColor, label, stereotype, shape);
 				return CommandExecutionResult.ok();
 			}
 			return add(backColor, level, label, stereotype, direction, shape);
@@ -159,9 +159,9 @@ public CommandExecutionResult addIdea(HColor backColor, int level, String label,
 	private WElement root;
 	private WElement last;
 
-	private void initRoot(HColor backColor, String label, String stereotype) {
+	private void initRoot(HColor backColor, String label, String stereotype, IdeaShape shape) {
 		root = new WElement(backColor, Display.getWithNewlines(label), stereotype,
-				getSkinParam().getCurrentStyleBuilder());
+				getSkinParam().getCurrentStyleBuilder(), shape);
 		last = root;
 	}
 

File: src/net/sourceforge/plantuml/wbs/WElement.java
Patch:
@@ -104,8 +104,8 @@ public Style getStyle() {
 		return result;
 	}
 
-	public WElement(HColor backColor, Display label, String stereotype, StyleBuilder styleBuilder) {
-		this(backColor, 0, label, stereotype, null, IdeaShape.BOX, styleBuilder);
+	public WElement(HColor backColor, Display label, String stereotype, StyleBuilder styleBuilder, IdeaShape shape) {
+		this(backColor, 0, label, stereotype, null, shape, styleBuilder);
 	}
 
 	private WElement(HColor backColor, int level, Display label, String stereotype, WElement parent, IdeaShape shape,

File: src/net/sourceforge/plantuml/yaml/YamlLines.java
Patch:
@@ -44,7 +44,7 @@
 
 public class YamlLines implements Iterable<String> {
 
-	public static final String KEY = "([_0-9\\w].*)";
+	public static final String KEY = "([^:\\s]+)";
 
 	private List<String> lines = new ArrayList<String>();
 

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -226,8 +226,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final double dpiFactor = getDpiFactor(fileFormatOption,
 				Dimension2DDouble.delta(dim, margins.getLeft() + margins.getRight(), 0));
 
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/board/BoardDiagram.java
Patch:
@@ -86,8 +86,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
 
-		final ImageParameter imageParameter = new ImageParameter(this,
-				fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/bpm/BpmDiagram.java
Patch:
@@ -82,8 +82,7 @@ public BpmDiagram() {
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(getUDrawable());

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagram.java
Patch:
@@ -198,7 +198,7 @@ final protected ImageData exportLayoutExplicit(OutputStream os, int index, FileF
 			final RowLayout rawLayout = getRawLayout(i);
 			fullLayout.addRowLayout(rawLayout);
 		}
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, 1.0, null);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, 1.0);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(fullLayout);
 		return imageBuilder.writeImageTOBEMOVED(seed(), os);

File: src/net/sourceforge/plantuml/jsondiagram/JsonDiagram.java
Patch:
@@ -95,8 +95,7 @@ protected ImageData exportDiagramNow(OutputStream os, int index, FileFormatOptio
 
 		final double dpiFactor = scale == null ? 1 : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor,
-				"");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();
 		result = new AnnotatedWorker(this, skinParam, fileFormatOption.getDefaultStringBounder(getSkinParam()))

File: src/net/sourceforge/plantuml/mindmap/MindMapDiagram.java
Patch:
@@ -90,7 +90,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final Scale scale = getScale();
 
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/nwdiag/NwDiagram.java
Patch:
@@ -221,8 +221,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final double dpiFactor = scale == null ? 1 : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor,
-				"");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();
 		result = new AnnotatedWorker(this, skinParam, fileFormatOption.getDefaultStringBounder(getSkinParam()))

File: src/net/sourceforge/plantuml/project/GanttDiagram.java
Patch:
@@ -170,8 +170,7 @@ protected ImageData exportDiagramNow(OutputStream os, int index, FileFormatOptio
 			throws IOException {
 		final Scale scale = getScale();
 		final double dpiFactor = scale == null ? 1 : scale.getScale(100, 100);
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor,
-				"");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		final StringBounder stringBounder = fileFormatOption.getDefaultStringBounder(getSkinParam());

File: src/net/sourceforge/plantuml/salt/PSystemSalt.java
Patch:
@@ -127,8 +127,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			final Scale scale = getScale();
 			final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 			final ISkinParam skinParam = getSkinParam();
-			final ImageParameter imageParameter = new ImageParameter(this,
-					fileFormatOption, null, dpiFactor, "");
+			final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -443,8 +443,7 @@ private ImageData createFileLocked(OutputStream os, List<String> dotStrings, Fil
 			// }
 
 			final double scale = 1;
-			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), scale,
-					null);
+			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, scale);
 
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sequencediagram/graphic/SequenceDiagramFileMakerPuma2.java
Patch:
@@ -195,8 +195,7 @@ public ImageData createOne(OutputStream os, final int index, boolean isWithMetad
 		// System.err.println("scale=" + scale);
 
 		final double factor = oneOf(scale, dpiFactor);
-		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), factor,
-				null);
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, factor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		imageBuilder.setUDrawable(new UDrawable() {

File: src/net/sourceforge/plantuml/sequencediagram/teoz/SequenceDiagramFileMakerTeoz.java
Patch:
@@ -151,8 +151,7 @@ public ImageData createOne(OutputStream os, final int index, boolean isWithMetad
 		final double scale = 1;
 
 		final double factor = oneOf(scale, dpiFactor);
-		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), factor,
-				null);
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, factor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sprite/ListSpriteDiagram.java
Patch:
@@ -76,8 +76,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final TextBlock result = getTable();
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/sprite/StdlibDiagram.java
Patch:
@@ -87,8 +87,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final TextBlock result = getTable();
 
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMakerSvek.java
Patch:
@@ -124,7 +124,7 @@ private ImageData createFileInternal(OutputStream os, List<String> dotStrings, F
 		final HColor backcolor = result.getBackcolor();
 		final String metadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;
 
-		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), scale, metadata,
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, scale, metadata,
 				warningOrError, backcolor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagram.java
Patch:
@@ -100,8 +100,7 @@ public TimingDiagram() {
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/wbs/WBSDiagram.java
Patch:
@@ -83,8 +83,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this,
-				fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/wire/WireDiagram.java
Patch:
@@ -87,8 +87,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this,
-				fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -226,8 +226,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final double dpiFactor = getDpiFactor(fileFormatOption,
 				Dimension2DDouble.delta(dim, margins.getLeft() + margins.getRight(), 0));
 
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/board/BoardDiagram.java
Patch:
@@ -86,8 +86,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
 
-		final ImageParameter imageParameter = new ImageParameter(this,
-				fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/bpm/BpmDiagram.java
Patch:
@@ -82,8 +82,7 @@ public BpmDiagram() {
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(getUDrawable());

File: src/net/sourceforge/plantuml/classdiagram/ClassDiagram.java
Patch:
@@ -198,7 +198,7 @@ final protected ImageData exportLayoutExplicit(OutputStream os, int index, FileF
 			final RowLayout rawLayout = getRawLayout(i);
 			fullLayout.addRowLayout(rawLayout);
 		}
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, 1.0, null);
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, 1.0);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(fullLayout);
 		return imageBuilder.writeImageTOBEMOVED(seed(), os);

File: src/net/sourceforge/plantuml/jsondiagram/JsonDiagram.java
Patch:
@@ -95,8 +95,7 @@ protected ImageData exportDiagramNow(OutputStream os, int index, FileFormatOptio
 
 		final double dpiFactor = scale == null ? 1 : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor,
-				"");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();
 		result = new AnnotatedWorker(this, skinParam, fileFormatOption.getDefaultStringBounder(getSkinParam()))

File: src/net/sourceforge/plantuml/mindmap/MindMapDiagram.java
Patch:
@@ -90,7 +90,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final Scale scale = getScale();
 
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/nwdiag/NwDiagram.java
Patch:
@@ -221,8 +221,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final double dpiFactor = scale == null ? 1 : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor,
-				"");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();
 		result = new AnnotatedWorker(this, skinParam, fileFormatOption.getDefaultStringBounder(getSkinParam()))

File: src/net/sourceforge/plantuml/project/GanttDiagram.java
Patch:
@@ -170,8 +170,7 @@ protected ImageData exportDiagramNow(OutputStream os, int index, FileFormatOptio
 			throws IOException {
 		final Scale scale = getScale();
 		final double dpiFactor = scale == null ? 1 : scale.getScale(100, 100);
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, null, dpiFactor,
-				"");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		final StringBounder stringBounder = fileFormatOption.getDefaultStringBounder(getSkinParam());

File: src/net/sourceforge/plantuml/salt/PSystemSalt.java
Patch:
@@ -127,8 +127,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 			final Scale scale = getScale();
 			final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 			final ISkinParam skinParam = getSkinParam();
-			final ImageParameter imageParameter = new ImageParameter(this,
-					fileFormatOption, null, dpiFactor, "");
+			final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sdot/CucaDiagramFileMakerSmetana.java
Patch:
@@ -443,8 +443,7 @@ private ImageData createFileLocked(OutputStream os, List<String> dotStrings, Fil
 			// }
 
 			final double scale = 1;
-			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), scale,
-					null);
+			final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, scale);
 
 			final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sequencediagram/graphic/SequenceDiagramFileMakerPuma2.java
Patch:
@@ -195,8 +195,7 @@ public ImageData createOne(OutputStream os, final int index, boolean isWithMetad
 		// System.err.println("scale=" + scale);
 
 		final double factor = oneOf(scale, dpiFactor);
-		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), factor,
-				null);
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, factor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		imageBuilder.setUDrawable(new UDrawable() {

File: src/net/sourceforge/plantuml/sequencediagram/teoz/SequenceDiagramFileMakerTeoz.java
Patch:
@@ -151,8 +151,7 @@ public ImageData createOne(OutputStream os, final int index, boolean isWithMetad
 		final double scale = 1;
 
 		final double factor = oneOf(scale, dpiFactor);
-		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), factor,
-				null);
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, factor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 

File: src/net/sourceforge/plantuml/sprite/ListSpriteDiagram.java
Patch:
@@ -76,8 +76,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final TextBlock result = getTable();
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/sprite/StdlibDiagram.java
Patch:
@@ -87,8 +87,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final TextBlock result = getTable();
 
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
 

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMakerSvek.java
Patch:
@@ -124,7 +124,7 @@ private ImageData createFileInternal(OutputStream os, List<String> dotStrings, F
 		final HColor backcolor = result.getBackcolor();
 		final String metadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;
 
-		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), scale, metadata,
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, scale, metadata,
 				warningOrError, backcolor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagram.java
Patch:
@@ -100,8 +100,7 @@ public TimingDiagram() {
 	protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormatOption fileFormatOption)
 			throws IOException {
 		final double dpiFactor = 1;
-		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, getAnimation(), dpiFactor,
-				getWarningOrError());
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/wbs/WBSDiagram.java
Patch:
@@ -83,8 +83,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this,
-				fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/wire/WireDiagram.java
Patch:
@@ -87,8 +87,7 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
-		final ImageParameter imageParameter = new ImageParameter(this,
-				fileFormatOption, null, dpiFactor, "");
+		final ImageParameter imageParameter = new ImageParameter(this, fileFormatOption, dpiFactor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		TextBlock result = getTextBlock();

File: src/net/sourceforge/plantuml/command/CommandAffineTransformMultiline.java
Patch:
@@ -35,9 +35,9 @@
  */
 package net.sourceforge.plantuml.command;
 
-import net.sourceforge.plantuml.UmlDiagram;
+import net.sourceforge.plantuml.TitledDiagram;
 
-public class CommandAffineTransformMultiline extends CommandMultilines<UmlDiagram> {
+public class CommandAffineTransformMultiline extends CommandMultilines<TitledDiagram> {
 
 	public CommandAffineTransformMultiline() {
 		super("(?i)^!transformation[%s]+\\{[%s]*$");
@@ -48,7 +48,7 @@ public String getPatternEnd() {
 		return "(?i)^[%s]*!\\}[%s]*$";
 	}
 
-	public CommandExecutionResult execute(final UmlDiagram diagram, BlocLines lines) {
+	public CommandExecutionResult execute(final TitledDiagram diagram, BlocLines lines) {
 		// lines = lines.subExtract(1, 1);
 		// diagram.setAnimation(lines);
 		return CommandExecutionResult.error("Not yet implemented");

File: src/net/sourceforge/plantuml/cucadiagram/entity/EntityFactory.java
Patch:
@@ -123,6 +123,7 @@ public ILeaf createLeafForEmptyGroup(IGroup g, ISkinParam skinParam) {
 		final USymbol symbol = g.getUSymbol();
 		folder.setUSymbol(symbol);
 		folder.setStereotype(g.getStereotype());
+		folder.setColors(g.getColors(skinParam));
 		if (g.getUrl99() != null) {
 			folder.addUrl(g.getUrl99());
 		}

File: src/net/sourceforge/plantuml/descdiagram/command/CommandLinkElement.java
Patch:
@@ -98,7 +98,9 @@ static IRegex getRegexConcat() {
 				color().getRegex(), //
 				RegexLeaf.spaceZeroOrMore(), //
 				new RegexLeaf("STEREOTYPE", "(\\<\\<.*\\>\\>)?"), //
-				RegexLeaf.spaceZeroOrMore(), new RegexLeaf("LABEL_LINK", "(?::[%s]*(.+))?"), RegexLeaf.end());
+				RegexLeaf.spaceZeroOrMore(), //
+				new RegexLeaf("LABEL_LINK", "(?::[%s]*(.+))?"), //
+				RegexLeaf.end());
 	}
 
 	private static ColorParser color() {

File: src/net/sourceforge/plantuml/version/Version.java
Patch:
@@ -80,7 +80,7 @@ public static String versionString(int size) {
 	}
 
 	public static int beta() {
-		final int beta = 0;
+		final int beta = 2;
 		return beta;
 	}
 

File: src/net/sourceforge/plantuml/svek/CucaDiagramFileMakerSvek.java
Patch:
@@ -124,12 +124,12 @@ private ImageData createFileInternal(OutputStream os, List<String> dotStrings, F
 		final HColor backcolor = result.getBackcolor();
 		final String metadata = fileFormatOption.isWithMetadata() ? diagram.getMetadata() : null;
 
-		final ImageParameter imageParameter = new ImageParameter(diagram, diagram.getAnimation(), scale, metadata,
+		final ImageParameter imageParameter = new ImageParameter(diagram, fileFormatOption, diagram.getAnimation(), scale, metadata,
 				warningOrError, backcolor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);
-		final ImageData imageData = imageBuilder.writeImageTOBEMOVED(fileFormatOption, diagram.seed(), os);
+		final ImageData imageData = imageBuilder.writeImageTOBEMOVED(diagram.seed(), os);
 		if (isGraphvizCrash) {
 			((ImageDataAbstract) imageData).setStatus(503);
 		}

File: src/net/sourceforge/plantuml/activitydiagram3/ActivityDiagram3.java
Patch:
@@ -228,8 +228,8 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 
 		final HColor backcolor = skinParam.getBackgroundColor(false);
 		final String metadata = fileFormatOption.isWithMetadata() ? getMetadata() : null;
-		final ImageParameter imageParameter = new ImageParameter(skinParam, getAnimation(), dpiFactor, metadata,
-				getWarningOrError(), margins, backcolor);
+		final ImageParameter imageParameter = new ImageParameter(this, getAnimation(), dpiFactor, metadata,
+				getWarningOrError(), backcolor);
 
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(result);

File: src/net/sourceforge/plantuml/SourceStringReader.java
Patch:
@@ -225,15 +225,15 @@ public String getCMapData(int numImage, FileFormatOption fileFormatOption) throw
 
 	}
 
-	private void noStartumlFound(OutputStream os, FileFormatOption fileFormatOption, long seed) throws IOException {
+	public ImageData noStartumlFound(OutputStream os, FileFormatOption fileFormatOption, long seed) throws IOException {
 		final TextBlockBackcolored error = GraphicStrings.createForError(Arrays.asList("No @startuml/@enduml found"),
 				fileFormatOption.isUseRedForError());
 		HColor backcolor = error.getBackcolor();
 		final ImageParameter imageParameter = new ImageParameter(new ColorMapperIdentity(), false, null, 1.0, null,
 				null, ClockwiseTopRightBottomLeft.none(), backcolor);
 		final ImageBuilder imageBuilder = ImageBuilder.build(imageParameter);
 		imageBuilder.setUDrawable(error);
-		imageBuilder.writeImageTOBEMOVED(fileFormatOption, seed, os);
+		return imageBuilder.writeImageTOBEMOVED(fileFormatOption, seed, os);
 	}
 
 	public final List<BlockUml> getBlocks() {

File: src/net/sourceforge/plantuml/Pipe.java
Patch:
@@ -163,10 +163,10 @@ private String readOneDiagram() throws IOException {
 				break;
 			}
 		}
-		if (sb.length() == 0) {
+		String source = sb.toString().trim();
+		if (source.length() == 0) {
 			return null;
 		}
-		String source = sb.toString();
 		if (source.startsWith("@start") == false) {
 			source = "@startuml\n" + source + "\n@enduml";
 		}

File: src/net/sourceforge/plantuml/sprite/PSystemListInternalSprites.java
Patch:
@@ -67,7 +67,7 @@ final protected ImageData exportDiagramNow(OutputStream os, int num, FileFormatO
 
 	private UDrawable getGraphicStrings() throws IOException {
 		final List<String> lines = new ArrayList<String>();
-		lines.add("<b>List Current Sprits");
+		lines.add("<b>List Current Sprites");
 		lines.add("<i>Credit to");
 		lines.add("http://www.archimatetool.com");
 		lines.add(" ");

File: src/net/sourceforge/plantuml/FileFormatOption.java
Patch:
@@ -79,7 +79,7 @@ public final boolean isWithMetadata() {
 	}
 
 	public FileFormatOption(FileFormat fileFormat, boolean withMetadata) {
-		this(fileFormat, null, false, false, "_top", false, null, TikzFontDistortion.getDefault(), 1.0);
+		this(fileFormat, null, withMetadata, false, "_top", false, null, TikzFontDistortion.getDefault(), 1.0);
 	}
 
 	private FileFormatOption(FileFormat fileFormat, AffineTransform at, boolean withMetadata, boolean useRedForError,

File: src/net/sourceforge/plantuml/FileFormatOption.java
Patch:
@@ -79,7 +79,7 @@ public final boolean isWithMetadata() {
 	}
 
 	public FileFormatOption(FileFormat fileFormat, boolean withMetadata) {
-		this(fileFormat, null, false, false, "_top", false, null, TikzFontDistortion.getDefault(), 1.0);
+		this(fileFormat, null, withMetadata, false, "_top", false, null, TikzFontDistortion.getDefault(), 1.0);
 	}
 
 	private FileFormatOption(FileFormat fileFormat, AffineTransform at, boolean withMetadata, boolean useRedForError,

File: src/net/sourceforge/plantuml/mindmap/MindMapDiagram.java
Patch:
@@ -90,7 +90,9 @@ protected ImageData exportDiagramInternal(OutputStream os, int index, FileFormat
 		final double dpiFactor = scale == null ? getScaleCoef(fileFormatOption) : scale.getScale(100, 100);
 		final ISkinParam skinParam = getSkinParam();
 		final ImageBuilder imageBuilder = new ImageBuilder(skinParam.getColorMapper(), dpiFactor,
-				skinParam.getBackgroundColor(), "", "", 10, 10, null, skinParam.handwritten());
+				skinParam.getBackgroundColor(),
+                fileFormatOption.isWithMetadata() ? getMetadata() : null,
+                "", 10, 10, null, skinParam.handwritten());
 		TextBlock result = getTextBlock();
 
 		result = new AnnotatedWorker(this, skinParam, fileFormatOption.getDefaultStringBounder()).addAdd(result);

File: src/net/sourceforge/plantuml/project/IncompleteItem.java
Patch:
@@ -60,7 +60,7 @@ public void setData(ItemCaract caract, Numeric value) {
 		if (caract.getNumericType() != value.getNumericType()) {
 			throw new IllegalArgumentException();
 		}
-		if (data.containsKey(caract.getNumericType())) {
+		if (data.containsKey(caract)) {
 			throw new IllegalStateException();
 		}
 		data.put(caract, value);

File: src/net/sourceforge/plantuml/project/IncompleteItem.java
Patch:
@@ -60,7 +60,7 @@ public void setData(ItemCaract caract, Numeric value) {
 		if (caract.getNumericType() != value.getNumericType()) {
 			throw new IllegalArgumentException();
 		}
-		if (data.containsKey(caract.getNumericType())) {
+		if (data.containsKey(caract)) {
 			throw new IllegalStateException();
 		}
 		data.put(caract, value);

File: src/net/sourceforge/plantuml/timingdiagram/TimingDiagramFactory.java
Patch:
@@ -40,6 +40,7 @@
 
 import net.sourceforge.plantuml.command.Command;
 import net.sourceforge.plantuml.command.UmlDiagramFactory;
+import net.sourceforge.plantuml.command.CommandFootboxIgnored;
 
 public class TimingDiagramFactory extends UmlDiagramFactory {
 
@@ -52,6 +53,7 @@ public TimingDiagram createEmptyDiagram() {
 	protected List<Command> createCommands() {
 
 		final List<Command> cmds = new ArrayList<Command>();
+		cmds.add(new CommandFootboxIgnored());
 
 		addCommonCommands(cmds);
 

