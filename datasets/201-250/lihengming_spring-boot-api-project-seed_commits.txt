File: src/main/java/com/company/project/configurer/WebMvcConfigurer.java
Patch:
@@ -3,6 +3,7 @@
 import java.io.IOException;
 import java.nio.charset.Charset;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 
@@ -24,6 +25,7 @@
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.http.MediaType;
 import org.springframework.http.converter.HttpMessageConverter;
 import org.springframework.web.method.HandlerMethod;
 import org.springframework.web.servlet.HandlerExceptionResolver;
@@ -56,6 +58,7 @@ public void configureMessageConverters(List<HttpMessageConverter<?>> converters)
 
         converter.setFastJsonConfig(config);
         converter.setDefaultCharset(Charset.forName("UTF-8"));
+        converter.setSupportedMediaTypes(Arrays.asList(MediaType.APPLICATION_JSON_UTF8));
         converters.add(converter);
     }
 

File: src/main/java/com/company/project/configurer/WebMvcConfigurer.java
Patch:
@@ -71,6 +71,7 @@ public ModelAndView resolveException(HttpServletRequest request, HttpServletResp
                 } else if (e instanceof ServletException) {
                     result.setCode(ResultCode.FAIL).setMessage(e.getMessage());
                 } else {
+                    result.setCode(ResultCode.INTERNAL_SERVER_ERROR).setMessage("接口 [" + request.getRequestURI() + "] 内部错误，请联系管理员");
                     String message;
                     if (handler instanceof HandlerMethod) {
                         HandlerMethod handlerMethod = (HandlerMethod) handler;
@@ -82,8 +83,7 @@ public ModelAndView resolveException(HttpServletRequest request, HttpServletResp
                     } else {
                         message = e.getMessage();
                     }
-                    result.setCode(ResultCode.INTERNAL_SERVER_ERROR).setMessage(message);
-                    logger.error(e.getMessage(), e);
+                    logger.error(message, e);
                 }
                 responseResult(response, result);
                 return new ModelAndView();

