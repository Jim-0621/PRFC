File: core/src/main/java/com/github/ompc/greys/core/advisor/Enhancer.java
Patch:
@@ -126,7 +126,7 @@ private void spy(final ClassLoader targetClassLoader)
         // 看来间谍不存在啊
         catch (ClassNotFoundException cnfe) {
 
-            try {// 在目标类加载起中混入间谍
+            try {// 在目标类加载器中混入间谍
                 spyClassFromTargetClassLoader = defineClass(
                         targetClassLoader,
                         spyClassName,

File: core/src/main/java/com/github/ompc/greys/core/advisor/Enhancer.java
Patch:
@@ -126,7 +126,7 @@ private void spy(final ClassLoader targetClassLoader)
         // 看来间谍不存在啊
         catch (ClassNotFoundException cnfe) {
 
-            try {// 在目标类加载起中混入间谍
+            try {// 在目标类加载器中混入间谍
                 spyClassFromTargetClassLoader = defineClass(
                         targetClassLoader,
                         spyClassName,

File: core/src/main/java/com/github/ompc/greys/core/view/TimeFragmentDetailView.java
Patch:
@@ -69,7 +69,7 @@ public String draw() {
         }
 
         // fill the returnObj
-        if (advice.isThrow) {
+        if (!advice.isThrow) {
 
             view.addRow(
                     "RETURN-OBJ",

File: core/src/main/java/com/github/ompc/greys/core/advisor/ReflectAdviceTracingListenerAdapter.java
Patch:
@@ -9,6 +9,8 @@
 public abstract class ReflectAdviceTracingListenerAdapter<PC extends ProcessContext, IC extends InnerContext>
         extends ReflectAdviceListenerAdapter<PC, IC> implements AdviceTracingListener {
 
+
+
     @Override
     final public void invokeBeforeTracing(String tracingClassName, String tracingMethodName, String tracingMethodDesc) throws Throwable {
         final ProcessContextBound bound = processContextBoundRef.get();

File: core/src/main/java/com/github/ompc/greys/core/command/TraceCommand.java
Patch:
@@ -131,8 +131,8 @@ public Entity init() {
                                     }
                                 });
 
-                                entity.view = new TreeView(true, "Tracing for : " + getThreadInfo());
-                                entity.view.begin(advice.clazz.getName() + ":" + advice.method.getName() + "()");
+                                entity.view = new TreeView(true, "Tracing for : " + getThreadInfo())
+                                        .begin(advice.clazz.getName() + ":" + advice.method.getName() + "()");
 
                             }
 

File: core/src/main/java/com/github/ompc/greys/core/advisor/AdviceWeaver.java
Patch:
@@ -422,7 +422,7 @@ private void _debug(final StringBuilder append, final String msg) {
                 // println msg
                 visitFieldInsn(GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;");
                 if(StringUtils.isBlank(append.toString()) ) {
-                    visitLdcInsn(msg);
+                    visitLdcInsn(append.append(msg).toString());
                 } else {
                     visitLdcInsn(append.append(" >> ").append(msg).toString());
                 }

File: core/src/main/java/com/github/ompc/greys/core/advisor/AdviceWeaver.java
Patch:
@@ -620,7 +620,6 @@ public void code() {
                             loadReturn(opcode);
                             _debug(append, "loadReturn()");
 
-
                             // 加载returning方法
                             loadAdviceMethod(KEY_GREYS_ADVICE_RETURN_METHOD);
                             _debug(append, "loadAdviceMethod()");

File: agent/src/main/java/com/github/ompc/greys/agent/Spy.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.ompc.greys.core.advisor;
+package com.github.ompc.greys.agent;
 
 import java.lang.reflect.Method;
 

File: core/src/main/java/com/github/ompc/greys/core/advisor/AdviceWeaver.java
Patch:
@@ -396,7 +396,7 @@ public MethodVisitor visitMethod(
 
 
             // -- KEY of ASM_TYPE or ASM_METHOD --
-            private final Type ASM_TYPE_SPY = Type.getType(Spy.class);
+            private final Type ASM_TYPE_SPY = Type.getType("Lcom/github/ompc/greys/agent/Spy;");
             private final Type ASM_TYPE_OBJECT = Type.getType(Object.class);
             private final Type ASM_TYPE_OBJECT_ARRAY = Type.getType(Object[].class);
             private final Type ASM_TYPE_CLASS = Type.getType(Class.class);

File: src/main/java/com/github/ompc/greys/advisor/Enhancer.java
Patch:
@@ -236,7 +236,6 @@ private static boolean isUnsupportedClass(Class<?> clazz) {
         return clazz.isArray()
                 || clazz.isInterface()
                 || clazz.isEnum()
-                || clazz.getName().contains("$$EnhancerByCGLIB$$") // 在没有解决cglib增强出来的类会失败的问题之前,暂时先过滤掉
                 ;
     }
 

File: src/main/java/com/github/ompc/greys/advisor/Enhancer.java
Patch:
@@ -236,6 +236,7 @@ private static boolean isUnsupportedClass(Class<?> clazz) {
         return clazz.isArray()
                 || clazz.isInterface()
                 || clazz.isEnum()
+                || clazz.getName().contains("$$EnhancerByCGLIB$$") // 在没有解决cglib增强出来的类会失败的问题之前,暂时先过滤掉
                 ;
     }
 

File: src/main/java/com/github/ompc/greys/advisor/Enhancer.java
Patch:
@@ -236,7 +236,6 @@ private static boolean isUnsupportedClass(Class<?> clazz) {
         return clazz.isArray()
                 || clazz.isInterface()
                 || clazz.isEnum()
-                || clazz.getName().contains("$$EnhancerByCGLIB$$") // 在没有解决cglib增强出来的类会失败的问题之前,暂时先过滤掉
                 ;
     }
 

File: src/main/java/com/github/ompc/greys/command/view/ClassInfoView.java
Patch:
@@ -70,7 +70,7 @@ private String drawField() {
 
             for (Field field : fields) {
 
-                final KVView kvView = new KVView(new ColumnDefine(RIGHT), new ColumnDefine(80, false, LEFT))
+                final KVView kvView = new KVView(new ColumnDefine(RIGHT), new ColumnDefine(50, false, LEFT))
                         .add("modifier", tranModifier(field.getModifiers()))
                         .add("type", tranClassName(field.getType()))
                         .add("name", field.getName());

File: src/main/java/com/github/ompc/greys/command/view/TableView.java
Patch:
@@ -362,7 +362,7 @@ public static void main(String... args) {
 
 
         final TableView tv = new TableView(new ColumnDefine[]{
-                new ColumnDefine(10, false, Align.RIGHT),
+                new ColumnDefine(10, true, Align.RIGHT),
                 new ColumnDefine(0, true, Align.LEFT),
         });
 

File: src/main/java/com/github/ompc/greys/agent/AgentLauncher.java
Patch:
@@ -71,11 +71,14 @@ protected synchronized Class<?> loadClass(String name, boolean resolve) throws C
                     Object.class));
             props.put(KEY_GREYS_ADVICE_THROWS_METHOD, clazz.getMethod("methodOnThrowingEnd",
                     Throwable.class));
+
             props.put(KEY_GREYS_ADVICE_BEFORE_INVOKING_METHOD, clazz.getMethod("methodOnInvokeBeforeTracing",
+                    int.class,
                     String.class,
                     String.class,
                     String.class));
             props.put(KEY_GREYS_ADVICE_AFTER_INVOKING_METHOD, clazz.getMethod("methodOnInvokeAfterTracing",
+                    int.class,
                     String.class,
                     String.class,
                     String.class));

File: src/main/java/com/github/ompc/greys/command/MonitorCommand.java
Patch:
@@ -298,7 +298,6 @@ private void finishing(Class<?> clazz, GaMethod method, boolean isThrowing) {
                                 }
                                 final long cost = currentTimeMillis() - startTime;
                                 final Key key = new Key(clazz.getName(), method.getName());
-                                System.out.println(clazz.getName()+"$"+method.getName());
 
                                 while (true) {
                                     AtomicReference<Data> value = monitorData.get(key);

File: src/main/java/com/github/ompc/greys/command/MonitorCommand.java
Patch:
@@ -298,6 +298,7 @@ private void finishing(Class<?> clazz, GaMethod method, boolean isThrowing) {
                                 }
                                 final long cost = currentTimeMillis() - startTime;
                                 final Key key = new Key(clazz.getName(), method.getName());
+                                System.out.println(clazz.getName()+"$"+method.getName());
 
                                 while (true) {
                                     AtomicReference<Data> value = monitorData.get(key);
@@ -312,7 +313,9 @@ private void finishing(Class<?> clazz, GaMethod method, boolean isThrowing) {
                                         nData.cost = oData.cost + cost;
                                         if (isThrowing) {
                                             nData.failed = oData.failed + 1;
+                                            nData.success = oData.success;
                                         } else {
+                                            nData.failed = oData.failed;
                                             nData.success = oData.success + 1;
                                         }
                                         nData.total = oData.total + 1;

File: src/main/java/com/googlecode/greysanatomy/console/command/QuitCommand.java
Patch:
@@ -1,13 +1,13 @@
 package com.googlecode.greysanatomy.console.command;
 
-import com.googlecode.greysanatomy.console.command.annotation.RiscCmd;
+import com.googlecode.greysanatomy.console.command.annotation.Cmd;
 import com.googlecode.greysanatomy.console.server.ConsoleServer;
 
 /**
  * �˳�����
  * Created by vlinux on 14/11/1.
  */
-@RiscCmd(named = "quit", sort = 8, desc = "Quit the Greys console.",
+@Cmd(named = "quit", sort = 8, desc = "Quit the Greys console.",
         eg = {
                 "quit"
         })

File: src/main/java/com/googlecode/greysanatomy/console/command/ShutdownCommand.java
Patch:
@@ -1,13 +1,13 @@
 package com.googlecode.greysanatomy.console.command;
 
-import com.googlecode.greysanatomy.console.command.annotation.RiscCmd;
+import com.googlecode.greysanatomy.console.command.annotation.Cmd;
 import com.googlecode.greysanatomy.console.server.ConsoleServer;
 
 /**
  * �ر�����
  * Created by vlinux on 14/10/23.
  */
-@RiscCmd(named = "shutdown", sort = 9, desc = "Shutdown the greys's RMI service, and exit the console.",
+@Cmd(named = "shutdown", sort = 9, desc = "Shutdown the greys's RMI service, and exit the console.",
         eg = {
                 "shutdown"
         })

File: src/main/java/com/googlecode/greysanatomy/console/command/VersionCommand.java
Patch:
@@ -1,6 +1,6 @@
 package com.googlecode.greysanatomy.console.command;
 
-import com.googlecode.greysanatomy.console.command.annotation.RiscCmd;
+import com.googlecode.greysanatomy.console.command.annotation.Cmd;
 import com.googlecode.greysanatomy.console.server.ConsoleServer;
 import com.googlecode.greysanatomy.util.GaStringUtils;
 
@@ -9,7 +9,7 @@
  *
  * @author vlinux
  */
-@RiscCmd(named = "version", sort = 8, desc = "Output the target's greys version",
+@Cmd(named = "version", sort = 8, desc = "Output the target's greys version",
         eg = {
                 "version"
         })

File: src/main/java/com/googlecode/greysanatomy/console/command/annotation/Cmd.java
Patch:
@@ -10,7 +10,7 @@
  */
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.TYPE)
-public @interface RiscCmd {
+public @interface Cmd {
 
     /**
      * ָ�����������<br/>

File: src/main/java/com/googlecode/greysanatomy/util/ProfilerUtils.java
Patch:
@@ -1,6 +1,6 @@
 package com.googlecode.greysanatomy.util;
 
-import com.googlecode.greysanatomy.clocker.Clocker;
+import com.googlecode.greysanatomy.clocker.Timer;
 
 import java.text.MessageFormat;
 import java.util.ArrayList;
@@ -126,7 +126,7 @@ public static final class Entry {
          */
         private Entry(String message, Entry parentEntry, Entry firstEntry) {
             this.message = message;
-            this.startTime = Clocker.current().getCurrentTimeMillis();
+            this.startTime = Timer.current().getCurrentTimeMillis();
             this.parentEntry = parentEntry;
             this.firstEntry = (Entry) defaultIfNull(firstEntry, this);
             this.baseTime = (firstEntry == null) ? 0 : firstEntry.startTime;
@@ -227,7 +227,7 @@ public double getPecentageOfAll() {
          * ������ǰentry������¼����ʱ�䡣
          */
         private void release() {
-            endTime = Clocker.current().getCurrentTimeMillis();
+            endTime = Timer.current().getCurrentTimeMillis();
         }
 
         /**

File: src/main/java/com/googlecode/greysanatomy/probe/ProbeJobs.java
Patch:
@@ -47,7 +47,7 @@ private static class Job {
             this.id = id;
             final File dir = new File(REST_DIR);
             if( !dir.exists() ) {
-                if(!dir.mkdir()) {
+                if(!dir.mkdirs()) {
                     throw new IOException(String.format("create greys's temp dir:%s failed.",REST_DIR));
                 }
             }

File: src/main/java/com/googlecode/greysanatomy/console/command/RecordCommand.java
Patch:
@@ -447,10 +447,10 @@ private void doShow(final Sender sender) {
         final String className = record.getAdvice().getTarget().getTargetClassName();
         final String methodName = record.getAdvice().getTarget().getTargetBehaviorName();
         final String objectAddress = record.getAdvice().getTarget().getTargetThis() == null ? "NULL" : "0x" + Integer.toHexString(record.getAdvice().getTarget().getTargetThis().hashCode());
-        final int maxColLen = 1+Math.max(Math.max(className.length(), methodName.length()), 50);
+        final int maxColLen = Math.max(Math.max(className.length(), methodName.length()), 50);
 
         final StringBuilder detailSB = new StringBuilder();
-        final String headFormat = "|%20s| %-" + maxColLen + "s|";
+        final String headFormat = "|%20s|%-" + maxColLen + "s|";
         final String lineSplit = new StringBuilder()
                 .append("+").append(StringUtils.repeat("-", 20))
                 .append("+").append(StringUtils.repeat("-", maxColLen))

File: src/main/java/com/googlecode/greysanatomy/console/command/RecordCommand.java
Patch:
@@ -447,10 +447,10 @@ private void doShow(final Sender sender) {
         final String className = record.getAdvice().getTarget().getTargetClassName();
         final String methodName = record.getAdvice().getTarget().getTargetBehaviorName();
         final String objectAddress = record.getAdvice().getTarget().getTargetThis() == null ? "NULL" : "0x" + Integer.toHexString(record.getAdvice().getTarget().getTargetThis().hashCode());
-        final int maxColLen = Math.max(Math.max(className.length(), methodName.length()), 50);
+        final int maxColLen = 1+Math.max(Math.max(className.length(), methodName.length()), 50);
 
         final StringBuilder detailSB = new StringBuilder();
-        final String headFormat = "|%20s|%-" + maxColLen + "s|";
+        final String headFormat = "|%20s| %-" + maxColLen + "s|";
         final String lineSplit = new StringBuilder()
                 .append("+").append(StringUtils.repeat("-", 20))
                 .append("+").append(StringUtils.repeat("-", maxColLen))

File: src/main/java/com/googlecode/greysanatomy/console/command/RecordCommand.java
Patch:
@@ -382,7 +382,7 @@ private void doWatch(final Sender sender) throws Throwable {
 
         final ScriptEngine jsEngine = new ScriptEngineManager().getEngineByExtension("js");
 
-        jsEngine.eval("function printWatch(p,o){try{o.send(true, " + watchExpress + "+'\\n');}catch(e){o.send(false, e.message+'\\n');}}");
+        jsEngine.eval("function printWatch(p,o){try{o.send(true, " + watchExpress + "+'\\n');}catch(e){o.send(true, e.message+'\\n');}}");
         final Invocable invoke = (Invocable) jsEngine;
         final Advice p = record.getAdvice();
         invoke.invokeFunction("printWatch", p, sender);

File: src/main/java/com/googlecode/greysanatomy/console/command/WatchCommand.java
Patch:
@@ -74,7 +74,7 @@ public Action getAction() {
 
             @Override
             public void action(final ConsoleServer consoleServer, Info info, final Sender sender) throws Throwable {
-                ScriptEngine jsEngine = new ScriptEngineManager().getEngineByExtension("js");
+                final ScriptEngine jsEngine = new ScriptEngineManager().getEngineByExtension("js");
 
                 jsEngine.eval("function printWatch(p,o){try{o.send(false, " + expression + "+'\\n');}catch(e){o.send(false, e.message+'\\n');}}");
                 final Invocable invoke = (Invocable) jsEngine;

File: src/main/java/com/googlecode/greysanatomy/console/server/ConsoleServerHandler.java
Patch:
@@ -99,7 +99,7 @@ public void send(boolean isF, String message) {
                 } catch (Throwable t) {
                     // ִ������ʧ��
                     logger.warn("do action failed.", t);
-                    write(respResult.getJobId(), true, "do action failed. cause:" + t.getMessage());
+                    write(respResult.getJobId(), true, "do action failed. cause : " + t.getMessage());
                     return;
                 }
             }

File: src/main/java/com/googlecode/greysanatomy/GreysAnatomyMain.java
Patch:
@@ -61,7 +61,7 @@ private Configer analyzeConfiger(String[] args) {
         }
 
         if (os.has("multi")
-                && (Boolean) os.valueOf("multi")) {
+                && (Integer) os.valueOf("multi") == 1) {
             configer.setMulti(true);
         } else {
             configer.setMulti(false);

File: src/main/java/com/googlecode/greysanatomy/console/GreysAnatomyConsole.java
Patch:
@@ -232,7 +232,7 @@ public void write(RespResult resp) {
 	private void write(String message) {
 		final Writer writer = console.getOutput();
 		try {
-			writer.write(message+"\n");
+			writer.write(message);
 			writer.flush();
 		}catch(IOException e) {
 			// ����̨дʧ�ܣ�����ô��

File: src/main/java/com/googlecode/greysanatomy/console/command/WatchCommand.java
Patch:
@@ -31,7 +31,7 @@ public class WatchCommand extends Command {
 	private String expression;
 	
 	@Arg(name="watch-point", isRequired=false)
-	private WatchPointEnum watchPoint;
+	private WatchPointEnum watchPoint = WatchPointEnum.before;
 
 	@Override
 	public Action getAction() {
@@ -41,7 +41,7 @@ public Action getAction() {
 			public void action(Info info, final Sender sender) throws Throwable {
 				ScriptEngine jsEngine = new ScriptEngineManager().getEngineByExtension("js");
 				
-				jsEngine.eval("function printWatch(p,o){try{o.send(false, " + expression + ");}catch(e){o.send(false, e.message);}}");
+				jsEngine.eval("function printWatch(p,o){try{o.send(false, " + expression + "+'\\n');}catch(e){o.send(false, e.message+'\\n');}}");
 				final Invocable invoke = (Invocable) jsEngine;
 				
 				final Instrumentation inst = info.getInst();

