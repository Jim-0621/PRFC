File: badgeviewlib/src/main/java/q/rorbin/badgeview/QBadgeView.java
Patch:
@@ -582,6 +582,7 @@ public void reset() {
     @Override
     public void hide(boolean animate) {
         if (animate && mActivityRoot != null) {
+            initRowBadgeCenter();
             animateHide(mRowBadgeCenter);
         } else {
             setBadgeNumber(0);

File: app/src/main/java/q/rorbin/badgeviewdemo/MainActivity.java
Patch:
@@ -64,7 +64,7 @@ private void initBadge() {
                 .setBadgeBackground(getResources().getDrawable(R.drawable.shape_round_rect)));
         badges.add(new QBadgeView(this).bindTarget(button).setBadgeText("新").setBadgeTextSize(13, true)
                 .setBadgeBackgroundColor(0xffffeb3b).setBadgeTextColor(0xff000000)
-                .setBorder(0xff000000, 1, true));
+                .stroke(0xff000000, 1, true));
     }
 
     private void initView() {

File: badgeviewlib/src/main/java/q/rorbin/badgeview/Badge.java
Patch:
@@ -29,7 +29,7 @@ public interface Badge {
 
     Badge setBadgeBackgroundColor(int color);
 
-    Badge setBorder(int color, float width, boolean isDpValue);
+    Badge stroke(int color, float width, boolean isDpValue);
 
     int getBadgeBackgroundColor();
 

File: badgeviewlib/src/main/java/q/rorbin/badgeview/QBadgeView.java
Patch:
@@ -666,7 +666,7 @@ public Badge setBadgeBackgroundColor(int color) {
     }
 
     @Override
-    public Badge setBorder(int color, float width, boolean isDpValue) {
+    public Badge stroke(int color, float width, boolean isDpValue) {
         mColorBackgroundBorder = color;
         mBackgroundBorderWidth = isDpValue ? DisplayUtil.dp2px(getContext(), width) : width;
         invalidate();

File: badgeviewlib/src/main/java/q/rorbin/badgeview/BadgeAnimator.java
Patch:
@@ -18,7 +18,7 @@
 /**
  * @author chqiu
  *         Email:qstumn@163.com
- * 隐藏动画,动画参考自https://github.com/tyrantgit/ExplosionField
+ * Animation borrowed from https://github.com/tyrantgit/ExplosionField
  */
 
 public class BadgeAnimator extends ValueAnimator {

File: badgeviewlib/src/main/java/q/rorbin/badgeview/BadgeAnimator.java
Patch:
@@ -18,6 +18,7 @@
 /**
  * @author chqiu
  *         Email:qstumn@163.com
+ * 隐藏动画,动画参考自https://github.com/tyrantgit/ExplosionField
  */
 
 public class BadgeAnimator extends ValueAnimator {

File: app/src/main/java/q/rorbin/badgeviewdemo/ListViewActivity.java
Patch:
@@ -56,7 +56,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
                 convertView = LayoutInflater.from(ListViewActivity.this).inflate(R.layout.item_view, parent, false);
                 holder.textView = (TextView) convertView.findViewById(R.id.tv_content);
                 holder.badge = new QBadgeView(ListViewActivity.this).bindTarget(convertView.findViewById(R.id.imageview));
-                holder.badge.setBadgeNumberSize(12, true);
+                holder.badge.setBadgeTextSize(12, true);
                 convertView.setTag(holder);
             } else {
                 holder = (Holder) convertView.getTag();

File: app/src/main/java/q/rorbin/badgeviewdemo/RecyclerViewActivity.java
Patch:
@@ -60,7 +60,7 @@ public Holder(View itemView) {
                 textView = (TextView) itemView.findViewById(R.id.tv_content);
                 badge = new QBadgeView(RecyclerViewActivity.this).bindTarget(itemView.findViewById(R.id.root));
                 badge.setBadgeGravity(Gravity.CENTER | Gravity.END);
-                badge.setBadgeNumberSize(14, true);
+                badge.setBadgeTextSize(14, true);
                 badge.setBadgePadding(6, true);
                 badge.setOnDragStateChangedListener(new Badge.OnDragStateChangedListener() {
                     @Override

File: badgeviewlib/src/main/java/q/rorbin/badgeview/BadgeAnimator.java
Patch:
@@ -5,6 +5,7 @@
 import android.animation.ValueAnimator;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
+import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.PointF;
 import android.util.Log;
@@ -64,7 +65,7 @@ public void draw(Canvas canvas) {
     private BitmapFragment[][] getFragments(Bitmap badgeBitmap, PointF center) {
         int width = badgeBitmap.getWidth();
         int height = badgeBitmap.getHeight();
-        float fragmentSize = Math.max(width, height) / 6f;
+        float fragmentSize = Math.min(width, height) / 6f;
         float startX = center.x - badgeBitmap.getWidth() / 2f;
         float startY = center.y - badgeBitmap.getHeight() / 2f;
         BitmapFragment[][] fragments = new BitmapFragment[(int) (height / fragmentSize)][(int) (width / fragmentSize)];

File: badgeviewlib/src/main/java/q/rorbin/badgeview/QBadgeView.java
Patch:
@@ -136,6 +136,7 @@ public Badge bindTarget(final View targetView) {
                 ViewGroup.LayoutParams targetParams = targetView.getLayoutParams();
                 targetContainer.removeView(targetView);
                 final BadgeContainer badgeContainer = new BadgeContainer(getContext());
+                badgeContainer.setId(targetView.getId());
                 targetContainer.addView(badgeContainer, index, targetParams);
                 badgeContainer.addView(targetView);
                 badgeContainer.addView(this);

File: app/src/main/java/q/rorbin/badgeviewdemo/MainActivity.java
Patch:
@@ -53,7 +53,7 @@ protected void onCreate(Bundle savedInstanceState) {
         et_badgenumber.setText("5");
         seekBar_offset.setProgress(5);
         seekBar_padding.setProgress(5);
-        seekBar_numbersize.setProgress(10);
+        seekBar_numbersize.setProgress(11);
         swicth_exact.setChecked(false);
         swicth_draggable.setChecked(true);
         swicth_shadow.setChecked(true);

File: badgeviewlib/src/main/java/q/rorbin/badgeview/BadgeAnimator.java
Patch:
@@ -67,7 +67,7 @@ public void draw(Canvas canvas) {
     private BitmapFragment[][] getFragments(Bitmap badgeBitmap, PointF center) {
         int width = badgeBitmap.getWidth();
         int height = badgeBitmap.getHeight();
-        float fragmentSize = Math.max(width, height) / 8f;
+        float fragmentSize = Math.max(width, height) / 6f;
         float startX = center.x - badgeBitmap.getWidth() / 2f;
         float startY = center.y - badgeBitmap.getHeight() / 2f;
         BitmapFragment[][] fragments = new BitmapFragment[(int) (height / fragmentSize)][(int) (width / fragmentSize)];

