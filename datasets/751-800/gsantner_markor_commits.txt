File: app/src/main/java/net/gsantner/markor/format/FormatRegistry.java
Patch:
@@ -29,6 +29,7 @@
 import net.gsantner.markor.format.markdown.MarkdownSyntaxHighlighter;
 import net.gsantner.markor.format.markdown.MarkdownTextConverter;
 import net.gsantner.markor.format.orgmode.OrgmodeActionButtons;
+import net.gsantner.markor.format.orgmode.OrgmodeReplacePatternGenerator;
 import net.gsantner.markor.format.orgmode.OrgmodeSyntaxHighlighter;
 import net.gsantner.markor.format.orgmode.OrgmodeTextConverter;
 import net.gsantner.markor.format.plaintext.PlaintextActionButtons;
@@ -184,8 +185,8 @@ public static FormatRegistry getFormat(int formatId, @NonNull final Context cont
                 format._converter = CONVERTER_ORGMODE;
                 format._highlighter = new OrgmodeSyntaxHighlighter(appSettings);
                 format._textActions = new OrgmodeActionButtons(context, document);
-                format._autoFormatInputFilter = new AutoTextFormatter(MarkdownReplacePatternGenerator.formatPatterns);
-                format._autoFormatTextWatcher = new ListHandler(MarkdownReplacePatternGenerator.formatPatterns);
+                format._autoFormatInputFilter = new AutoTextFormatter(OrgmodeReplacePatternGenerator.formatPatterns);
+                format._autoFormatTextWatcher = new ListHandler(OrgmodeReplacePatternGenerator.formatPatterns);
                 break;
             }
             default:

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownActionButtons.java
Patch:
@@ -255,7 +255,8 @@ public static Link extract(final CharSequence text, final int pos) {
                     final int start = m.start(), end = m.end();
                     if (start <= po && end >= po) {
                         final boolean isImage = m.group(1) != null;
-                        return new Link(m.group(2), m.group(3), isImage, start, end);
+                        final String link = m.group(3);
+                        return new Link(m.group(2), link == null ? null : link.trim(), isImage, start, end);
                     }
                 }
             }

File: app/src/main/java/net/gsantner/markor/activity/ActionButtonSettingsActivity.java
Patch:
@@ -32,10 +32,10 @@
 import net.gsantner.markor.format.ActionButtonBase.ActionItem.DisplayMode;
 import net.gsantner.markor.format.asciidoc.AsciidocActionButtons;
 import net.gsantner.markor.format.markdown.MarkdownActionButtons;
+import net.gsantner.markor.format.orgmode.OrgmodeActionButtons;
 import net.gsantner.markor.format.plaintext.PlaintextActionButtons;
 import net.gsantner.markor.format.todotxt.TodoTxtActionButtons;
 import net.gsantner.markor.format.wikitext.WikitextActionButtons;
-import net.gsantner.markor.format.orgmode.OrgmodeActionButtons;
 import net.gsantner.opoc.util.GsCollectionUtils;
 
 import java.util.ArrayList;

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -38,7 +38,6 @@
 import net.gsantner.opoc.util.GsFileUtils;
 
 import java.io.File;
-import java.util.Stack;
 
 import other.so.AndroidBug5497Workaround;
 

File: app/src/main/java/net/gsantner/markor/format/TextConverterBase.java
Patch:
@@ -200,9 +200,9 @@ protected String getContentType() {
     }
 
     public boolean isFileOutOfThisFormat(final @NonNull File file) {
-        final String name = file.getName().toLowerCase().replace(JavaPasswordbasedCryption.DEFAULT_ENCRYPTION_EXTENSION, "");
-        final String ext = name.replaceAll(".*\\.", ".");
-        return isFileOutOfThisFormat(file, name, ext);
+        final String name = file.getName().toLowerCase().replace(JavaPasswordbasedCryption.DEFAULT_ENCRYPTION_EXTENSION, "").trim();
+        final String extWithDot = GsFileUtils.getFilenameExtension(name);
+        return isFileOutOfThisFormat(file, name, extWithDot);
     }
 
     protected abstract boolean isFileOutOfThisFormat(final File file, final String name, final String ext);

File: app/src/main/java/net/gsantner/markor/format/asciidoc/AsciidocActionButtons.java
Patch:
@@ -15,7 +15,6 @@
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.ActionButtonBase;
 import net.gsantner.markor.frontend.MarkorDialogFactory;
-import net.gsantner.markor.frontend.textview.TextViewUtils;
 import net.gsantner.markor.model.Document;
 
 import java.util.Arrays;

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTask.java
Patch:
@@ -83,7 +83,7 @@ public static List<TodoTxtTask> getSelectedTasks(final TextView view) {
     }
 
     public static List<TodoTxtTask> getAllTasks(final CharSequence text) {
-        return getTasks(text, new int[] {0, text.length()});
+        return getTasks(text, new int[]{0, text.length()});
     }
 
     public static List<String> getProjects(final List<TodoTxtTask> tasks) {

File: app/src/main/java/net/gsantner/markor/frontend/MarkorDialogFactory.java
Patch:
@@ -757,7 +757,7 @@ public static void showUpdateItemsDialog(
     // Get a callback which applies highligting spans to a todo.txt line
     private static GsCallback.a1<Spannable> getSttHighlighter() {
         final SyntaxHighlighterBase h = new TodoTxtBasicSyntaxHighlighter(as()).configure();
-        return s -> h.setSpannable(s).recompute().applyAll();
+        return s -> h.setSpannable(s).recompute().applyStatic().applyDynamic();
     }
 
     // Basic search dialog

File: app/src/main/java/net/gsantner/markor/frontend/filebrowser/MarkorFileBrowserFactory.java
Patch:
@@ -79,9 +79,9 @@ public static GsFileBrowserOptions.Options prepareFsViewerOpts(
     }
 
     public static void updateFsViewerOpts(
-        final GsFileBrowserOptions.Options opts,
-        final Context context,
-        AppSettings appSettings
+            final GsFileBrowserOptions.Options opts,
+            final Context context,
+            AppSettings appSettings
     ) {
         appSettings = appSettings != null ? appSettings : ApplicationObject.settings();
 

File: app/src/main/java/net/gsantner/markor/widget/TodoWidgetService.java
Patch:
@@ -1,4 +1,3 @@
-
 package net.gsantner.markor.widget;
 
 import android.content.Intent;

File: app/src/main/java/net/gsantner/opoc/util/GsContextUtils.java
Patch:
@@ -58,7 +58,6 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Environment;
-import android.os.Handler;
 import android.os.IBinder;
 import android.os.ParcelFileDescriptor;
 import android.os.SystemClock;

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -124,7 +124,6 @@ public void onActivityFirstTimeVisible() {
         }
     }
 
-
     @Override
     public void onSaveInstanceState(@NonNull final Bundle outState) {
         super.onSaveInstanceState(outState);
@@ -334,7 +333,7 @@ public void onBackPressed() {
     }
 
     public String getFileBrowserTitle() {
-        final File file = _notebook.getCurrentFolder();
+        final File file = _notebook != null ? _notebook.getCurrentFolder() : null;
         if (file != null && !_appSettings.getNotebookDirectory().equals(file)) {
             return "> " + file.getName();
         } else {

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -61,8 +61,6 @@ public class AppSettings extends GsSharedPreferencesPropertyBackend {
     public static Boolean _isDeviceGoodHardware = null;
     private MarkorContextUtils _cu;
 
-    private static final File LOCAL_TESTFOLDER_FILEPATH = new File("/storage/emulated/0/00_sync/documents/special");
-
     @Override
     public AppSettings init(final Context context) {
         super.init(context);

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserDialog.java
Patch:
@@ -173,11 +173,12 @@ public void onViewCreated(final View root, final @Nullable Bundle savedInstanceS
 
         _filesystemViewerAdapter = new GsFileBrowserListAdapter(_dopt, activity);
         _recyclerList.setAdapter(_filesystemViewerAdapter);
-        onFsViewerDoUiUpdate(_filesystemViewerAdapter);
 
         // Setup callbacks
         _dopt.setSubtitle = _toolBar::setSubtitle;
         _dopt.setTitle = _toolBar::setTitle;
+
+        _recyclerList.post(() -> onFsViewerDoUiUpdate(_filesystemViewerAdapter));
     }
 
     private int rcolor(@ColorRes int colorRes) {

File: app/thirdparty/java/other/writeily/widget/WrWidgetConfigure.java
Patch:
@@ -20,6 +20,7 @@
 import net.gsantner.markor.R;
 import net.gsantner.markor.activity.MarkorBaseActivity;
 import net.gsantner.markor.frontend.filebrowser.MarkorFileBrowserFactory;
+import net.gsantner.opoc.frontend.filebrowser.GsFileBrowserListAdapter;
 import net.gsantner.opoc.frontend.filebrowser.GsFileBrowserOptions;
 
 import java.io.File;
@@ -65,7 +66,7 @@ public void onFsViewerSelected(String request, File file, final Integer lineNumb
             @Override
             public void onFsViewerConfig(GsFileBrowserOptions.Options dopt) {
                 dopt.titleText = R.string.select_folder;
-                dopt.rootFolder = ApplicationObject.settings().getNotebookDirectory();
+                dopt.rootFolder = GsFileBrowserListAdapter.VIRTUAL_STORAGE_ROOT;
             }
 
             @Override

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -375,7 +375,7 @@ private String formatShare(final String shared) {
             }
 
             // Put the shared text in the right place
-            parts.add(1, shared);
+            parts.add(parts.isEmpty() ? 0 : 1, shared);
 
             return TextUtils.join("", parts);
         }

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -855,7 +855,7 @@ public boolean isExperimentalFeaturesEnabled() {
     }
 
     public boolean isHighlightBiggerHeadings() {
-        return getBool(R.string.pref_key__editor_markdown_bigger_headings_2, false);
+        return getBool(R.string.pref_key__editor_markdown_bigger_headings_3, false);
     }
 
     public String getViewModeLinkColor() {

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserListAdapter.java
Patch:
@@ -151,7 +151,7 @@ public Map<File, File> getVirtualFolders() {
         }
 
         for (final File file : ContextCompat.getExternalFilesDirs(_context, null)) {
-            if (file == null || file.getParentFile() == null) {
+            if (file == null || (file != null && file.getParentFile() == null)) {
                 continue;
             }
             final File remap = new File(VIRTUAL_STORAGE_ROOT, "AppData (" + file.getParentFile().toString().replace("/", "-").substring(1) + ")");

File: app/src/main/java/net/gsantner/markor/frontend/textview/SyntaxHighlighterBase.java
Patch:
@@ -375,7 +375,7 @@ public SyntaxHighlighterBase applyStatic() {
 
             boolean hasStatic = false;
             for (final SpanGroup group : _groups) {
-                if (group.isStatic) {
+                if (group != null && group.isStatic) {
                     hasStatic = true;
                     _spannable.setSpan(group.span, group.start, group.end, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
                 }

File: app/src/main/java/net/gsantner/opoc/util/GsFileUtils.java
Patch:
@@ -461,6 +461,8 @@ private static String gatherMimeType(final File file) {
             return "text/markdown";
         } else if (ext.matches("(te?xt)|(taskpaper)")) {
             return "text/plain";
+        } else if (ext.matches("org")) {
+            return "text/org";
         } else if (ext.matches("webp")) {
             return "image/webp";
         } else if (ext.matches("jpe?g")) {

File: app/src/main/java/net/gsantner/markor/activity/ActionButtonSettingsActivity.java
Patch:
@@ -35,6 +35,7 @@
 import net.gsantner.markor.format.plaintext.PlaintextActionButtons;
 import net.gsantner.markor.format.todotxt.TodoTxtActionButtons;
 import net.gsantner.markor.format.wikitext.WikitextActionButtons;
+import net.gsantner.markor.format.orgmode.OrgmodeActionButtons;
 import net.gsantner.opoc.util.GsCollectionUtils;
 
 import java.util.ArrayList;
@@ -133,6 +134,8 @@ private void extractActionData() {
             _textActions = new WikitextActionButtons(this, null);
         } else if (documentType == R.string.pref_key__asciidoc__reorder_actions) {
             _textActions = new AsciidocActionButtons(this, null);
+        } else if (documentType == R.string.pref_key__orgmode__reorder_actions) {
+            _textActions = new OrgmodeActionButtons(this, null);
         } else { // Default to Plaintext
             _textActions = new PlaintextActionButtons(this, null);
         }

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextTextConverter.java
Patch:
@@ -30,7 +30,7 @@ public class PlaintextTextConverter extends TextConverterBase {
     private static final String HTML101_BODY_PRE_END = "</pre>";
     private static final List<String> EXT_TEXT = Arrays.asList(".txt", ".taskpaper", ".org", ".ldg", ".ledger", ".m3u", ".m3u8");
     private static final List<String> EXT_HTML = Arrays.asList(".html", ".htm");
-    private static final List<String> EXT_CODE_HL = Arrays.asList(".py", ".cpp", ".h", ".c", ".js", ".mjs", ".css", ".cs", ".kt", ".lua", ".perl", ".java", ".qml", ".diff", ".php", ".r", ".patch", ".rs", ".swift", ".ts", ".mm", ".go", ".sh", ".rb", ".tex", ".xml", ".xlf");
+    private static final List<String> EXT_CODE_HL = Arrays.asList(".py", ".cpp", ".h", ".c", ".js", ".mjs", ".css", ".cs", ".kt", ".lua", ".lrc", ".perl", ".java", ".qml", ".diff", ".php", ".r", ".patch", ".rs", ".swift", ".ts", ".mm", ".go", ".sh", ".rb", ".tex", ".xml", ".xlf");
     private static final List<String> EXT = new ArrayList<>();
 
     static {

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -663,7 +663,7 @@ public void setEditorBasicColor(boolean forDarkMode, @ColorRes int fgColor, @Col
 
     public boolean isMultiWindowEnabled() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
-            return getBool(R.string.pref_key__is_multi_window_enabled, true);
+            return getBool(R.string.pref_key__is_multi_window_enabled, false);
         } else {
             return false;
         }

File: app/thirdparty/java/other/writeily/widget/WrMarkorWidgetProvider.java
Patch:
@@ -65,6 +65,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
 
             // Open Folder
             final Intent goToFolder = new Intent(context, MainActivity.class)
+                    .addFlags(Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)
                     .setAction(Intent.ACTION_VIEW)
                     .putExtra(Document.EXTRA_FILE, directoryF);
             views.setOnClickPendingIntent(R.id.widget_header, PendingIntent.getActivity(context, requestCode++, goToFolder, staticFlags));
@@ -87,6 +88,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
 
             // Open Notebook
             final Intent goHome = new Intent(context, MainActivity.class)
+                    .addFlags(Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)
                     .setAction(Intent.ACTION_VIEW)
                     .putExtra(Document.EXTRA_FILE, appSettings.getNotebookDirectory());
             views.setOnClickPendingIntent(R.id.widget_main, PendingIntent.getActivity(context, requestCode++, goHome, staticFlags));

File: app/src/main/java/net/gsantner/markor/format/TextConverterBase.java
Patch:
@@ -107,12 +107,12 @@ public String convertMarkupShowInWebView(
             final boolean lineNum) {
         String html;
         try {
-            html = convertMarkup(content, context, lightMode, lineNum, document.getFile());
+            html = convertMarkup(content, context, lightMode, lineNum, document.file);
         } catch (Exception e) {
             html = "Please report at project issue tracker: " + e;
         }
 
-        String parent = document.getFile().getParent();
+        String parent = document.file.getParent();
         if (parent == null) {
             parent = _appSettings.getNotebookDirectory().getAbsolutePath();
         }

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtSyntaxHighlighter.java
Patch:
@@ -11,7 +11,6 @@
 import android.graphics.Paint;
 import android.text.style.LineBackgroundSpan;
 import android.text.style.LineHeightSpan;
-import android.text.style.UpdateLayout;
 
 import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
@@ -45,7 +44,7 @@ public void generateSpans() {
     }
 
     // Adds spacing and divider line between paragraphs
-    public static class ParagraphDividerSpan implements LineBackgroundSpan, LineHeightSpan, UpdateLayout {
+    public static class ParagraphDividerSpan implements LineBackgroundSpan, LineHeightSpan, StaticSpan {
         private final int _lineColor;
         private Integer _origAscent = null;
 

File: app/src/main/java/net/gsantner/markor/frontend/MarkorDialogFactory.java
Patch:
@@ -290,6 +290,7 @@ public static void showSttFilteringDialog(final Activity activity, final EditTex
 
                 // Delete view
                 doptView.neutralButtonText = R.string.delete;
+                doptView.isSoftInputVisible = false;
                 doptView.neutralButtonCallback = viewDialog -> {
                     final DialogOptions confirmDopt = new DialogOptions();
                     baseConf(activity, confirmDopt);
@@ -1015,4 +1016,4 @@ public static void baseConf(Activity activity, DialogOptions dopt) {
         dopt.highlightColor = ContextCompat.getColor(activity, R.color.accent);
         dopt.dialogStyle = R.style.Theme_AppCompat_DayNight_Dialog_Rounded;
     }
-}
+}
\ No newline at end of file

File: app/src/main/java/net/gsantner/markor/frontend/filebrowser/MarkorFileBrowserFactory.java
Patch:
@@ -53,7 +53,6 @@ public static GsFileBrowserOptions.Options prepareFsViewerOpts(
         opts.newDirButtonText = R.string.create_folder;
         opts.upButtonEnable = true;
         opts.homeButtonEnable = true;
-        opts.mustStartWithRootFolder = false;
         opts.contentDescriptionFolder = R.string.folder;
         opts.contentDescriptionSelected = R.string.selected;
         opts.contentDescriptionFile = R.string.file;
@@ -68,6 +67,7 @@ public static GsFileBrowserOptions.Options prepareFsViewerOpts(
         opts.folderColor = R.color.folder;
         opts.fileImage = R.drawable.ic_file_white_24dp;
         opts.folderImage = R.drawable.ic_folder_white_24dp;
+        opts.descriptionFormat = appSettings.getString(R.string.pref_key__file_description_format, "");
 
         opts.titleText = R.string.select;
 
@@ -109,6 +109,7 @@ public static GsFileBrowserDialog showFileDialog(
     ) {
         final GsFileBrowserOptions.Options opts = prepareFsViewerOpts(context, false, listener);
         opts.fileOverallFilter = fileOverallFilter;
+        opts.descModtimeInsteadOfParent = true;
         return showDialog(fm, opts);
     }
 
@@ -119,6 +120,7 @@ public static GsFileBrowserDialog showFolderDialog(
     ) {
         final GsFileBrowserOptions.Options opts = prepareFsViewerOpts(context, true, listener);
         opts.okButtonText = R.string.select_this_folder;
+        opts.descModtimeInsteadOfParent = true;
         return showDialog(fm, opts);
     }
 }

File: app/src/main/java/net/gsantner/markor/util/MarkorContextUtils.java
Patch:
@@ -80,7 +80,7 @@ public <T extends GsContextUtils> T createLauncherDesktopShortcut(final Context
     @RequiresApi(api = Build.VERSION_CODES.KITKAT)
     @SuppressWarnings("deprecation")
     public PrintJob printOrCreatePdfFromWebview(final WebView webview, Document document, boolean... landscape) {
-        String jobName = String.format("%s (%s)", document.getTitle(), webview.getContext().getString(R.string.app_name_real));
+        String jobName = String.format("%s (%s)", document.title, webview.getContext().getString(R.string.app_name_real));
         return super.print(webview, jobName, landscape);
     }
 

File: app/src/main/java/net/gsantner/opoc/frontend/base/GsFragmentBase.java
Patch:
@@ -130,10 +130,10 @@ public String getAppLanguage() {
     /**
      * This will be called when this fragment gets the first time visible
      */
-    public void onFragmentFirstTimeVisible() {
+    protected void onFragmentFirstTimeVisible() {
     }
 
-    private synchronized void checkRunFirstTimeVisible() {
+    private void checkRunFirstTimeVisible() {
         if (_fragmentFirstTimeVisible && isVisible() && isResumed()) {
             _fragmentFirstTimeVisible = false;
             onFragmentFirstTimeVisible();
@@ -173,7 +173,7 @@ public void onResume() {
         super.onResume();
         final View view = getView();
         if (view != null) {
-            view.postDelayed(this::checkRunFirstTimeVisible, 200);
+            view.post(this::checkRunFirstTimeVisible);
             // Add any remaining tasks
             while (!_postTasks.isEmpty()) {
                 view.post(_postTasks.remove());

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserOptions.java
Patch:
@@ -49,14 +49,15 @@ public static class Options {
         public String requestId = "show_dialog";
         public String sortByType = GsFileUtils.SORT_BY_NAME;
 
+        public String descriptionFormat = null;
+
         // Dialog type
         public boolean
                 doSelectFolder = true,
                 doSelectFile = false,
                 doSelectMultiple = false;
 
-        public boolean mustStartWithRootFolder = true,
-                sortFolderFirst = true,
+        public boolean sortFolderFirst = true,
                 sortReverse = false,
                 descModtimeInsteadOfParent = false,
                 filterShowDotFiles = true;

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -1047,6 +1047,7 @@ public Set<String> getTitleFormats() {
         final String js = getString(R.string.pref_key__title_format_list, "[]");
         final Set<String> formats = new LinkedHashSet<>(jsonStringToList(js));
         formats.addAll(Arrays.asList(
+                "`yyyy-MM-dd`-{{title}}",
                 "{{date}}_{{title}}",
                 "{{date}}T{{time}}_{{title}}",
                 "`yyyyMMddHHmmss`_{{title}}",

File: app/src/main/java/net/gsantner/markor/format/wikitext/WikitextActionButtons.java
Patch:
@@ -62,6 +62,7 @@ public List<ActionItem> getFormatActionList() {
                 new ActionItem(R.string.abid_common_deindent, R.drawable.ic_format_indent_decrease_black_24dp, R.string.deindent),
                 new ActionItem(R.string.abid_wikitext_h4, R.drawable.format_header_4, R.string.heading_4),
                 new ActionItem(R.string.abid_wikitext_h5, R.drawable.format_header_5, R.string.heading_5),
+                new ActionItem(R.string.abid_common_insert_audio, R.drawable.ic_keyboard_voice_black_24dp, R.string.audio),
                 new ActionItem(R.string.abid_common_insert_image, R.drawable.ic_image_black_24dp, R.string.insert_image),
                 new ActionItem(R.string.abid_common_insert_link, R.drawable.ic_link_black_24dp, R.string.insert_link)
         );

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -127,7 +127,7 @@ public File getDefaultTodoFile() {
 
     public File getSnippetsDirectory() {
         final File _default = new File(getNotebookDirectory(), ".app/snippets");
-        final File snf = new File(getString(R.string.pref_key__quicknote_filepath, _default.getAbsolutePath()));
+        final File snf = new File(getString(R.string.pref_key__snippet_directory_path, _default.getAbsolutePath()));
         return snf.isDirectory() && snf.canRead() ? snf : _default;
     }
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -220,9 +220,9 @@ protected AppSettings getAppSettings(Context context) {
         @Override
         protected void afterOnCreate(Bundle savedInstances, Context context) {
             super.afterOnCreate(savedInstances, context);
-            doUpdatePreferences();
 
             if (_editor != null && _linkCheckBox != null) {
+                doUpdatePreferences();
                 _linkCheckBox.setVisibility(hasLinks(_editor.getText()) ? View.VISIBLE : View.GONE);
                 _linkCheckBox.setChecked(true);
                 _editor.addTextChangedListener(GsTextWatcherAdapter.on((ctext, arg2, arg3, arg4) ->

File: app/src/main/java/net/gsantner/markor/frontend/NewFileDialog.java
Patch:
@@ -342,7 +342,8 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {
 
         // Initial creation - loop through and set type
         final int lastUsedType = appSettings.getNewFileDialogLastUsedType();
-        typeSpinner.setSelection(GsCollectionUtils.indices(formats, f -> f.format == lastUsedType).get(0));
+        final List<Integer> indices = GsCollectionUtils.indices(formats, f -> f.format == lastUsedType);
+        typeSpinner.setSelection(indices.isEmpty() ? 0 : indices.get(0));
 
         titleEdit.requestFocus();
 

File: app/src/main/java/net/gsantner/markor/frontend/filebrowser/MarkorFileBrowserFactory.java
Patch:
@@ -64,6 +64,8 @@ public static GsFileBrowserOptions.Options prepareFsViewerOpts(
         opts.secondaryTextColor = R.color.secondary_text;
         opts.backgroundColor = R.color.background;
         opts.titleTextColor = R.color.primary_text;
+        opts.fileColor = R.color.file;
+        opts.folderColor = R.color.folder;
         opts.fileImage = R.drawable.ic_file_white_24dp;
         opts.folderImage = R.drawable.ic_folder_white_24dp;
 

File: app/src/main/java/net/gsantner/markor/activity/MarkorBaseActivity.java
Patch:
@@ -39,7 +39,7 @@ protected boolean onReceiveKeyPress(GsFragmentBase fragment, int keyCode, KeyEve
 
     @Override
     public Integer getNewNavigationBarColor() {
-        return _cu.parseHexColorString(_appSettings.getNavigationBarColor());
+        return _appSettings.getAppThemeName().contains("black") ? Color.BLACK : null;
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -286,6 +286,7 @@ public void onFsViewerSelected(String request, File file, final Integer lineNumb
                         public void onFsViewerConfig(GsFileBrowserOptions.Options dopt) {
                             dopt.titleText = R.string.quicknote;
                             dopt.rootFolder = _appSettings.getNotebookDirectory();
+                            dopt.newDirButtonEnable = false;
                         }
                     }, fragManager, getActivity(), MarkorFileBrowserFactory.IsMimeText);
                     return true;
@@ -303,6 +304,7 @@ public void onFsViewerSelected(String request, File file, final Integer lineNumb
                         public void onFsViewerConfig(GsFileBrowserOptions.Options dopt) {
                             dopt.titleText = R.string.todo;
                             dopt.rootFolder = _appSettings.getNotebookDirectory();
+                            dopt.newDirButtonEnable = false;
                         }
                     }, fragManager, getActivity(), MarkorFileBrowserFactory.IsMimeText);
                     return true;

File: app/src/main/java/net/gsantner/markor/activity/StoragePermissionActivity.java
Patch:
@@ -30,7 +30,7 @@ public void onActivityFirstTimeVisible() {
     }
 
     private void askForPermissions() {
-        final AlertDialog d = new AlertDialog.Builder(this)
+        final AlertDialog d = new AlertDialog.Builder(this, R.style.Theme_AppCompat_DayNight_Dialog_Rounded)
                 .setMessage(R.string.storage_permission_required)
                 .setNegativeButton(R.string.exit, (dialog, which) -> finish())
                 .setPositiveButton(android.R.string.yes, (dialog, which) -> {

File: app/src/main/java/net/gsantner/markor/format/FormatRegistry.java
Patch:
@@ -51,7 +51,6 @@
 import java.io.File;
 import java.util.Arrays;
 import java.util.List;
-import java.util.Locale;
 
 public class FormatRegistry {
     public static final int FORMAT_UNKNOWN = 0;
@@ -107,12 +106,11 @@ public Format(@StringRes final int a_format, @StringRes final int a_name, final
     public static boolean isFileSupported(final File file, final boolean... textOnly) {
         final boolean textonly = textOnly != null && textOnly.length > 0 && textOnly[0];
         if (file != null) {
-            final String filepath = file.getAbsolutePath().toLowerCase(Locale.ROOT);
             for (final Format format : FORMATS) {
                 if (textonly && format.converter instanceof EmbedBinaryTextConverter) {
                     continue;
                 }
-                if (format.converter != null && format.converter.isFileOutOfThisFormat(filepath)) {
+                if (format.converter != null && format.converter.isFileOutOfThisFormat(file)) {
                     return true;
                 }
             }

File: app/src/main/java/net/gsantner/markor/format/asciidoc/AsciidocTextConverter.java
Patch:
@@ -60,7 +60,7 @@ public String convertMarkup(String markup, Context context, boolean lightMode, b
     }
 
     @Override
-    protected boolean isFileOutOfThisFormat(String filepath, String extWithDot) {
-        return EXT.contains(extWithDot);
+    protected boolean isFileOutOfThisFormat(final File file, final String name, final String ext) {
+        return EXT.contains(ext);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/binary/EmbedBinaryTextConverter.java
Patch:
@@ -161,7 +161,7 @@ protected String getContentType() {
     }
 
     @Override
-    protected boolean isFileOutOfThisFormat(String filepath, String extWithDot) {
-        return EXT.contains(extWithDot);
+    protected boolean isFileOutOfThisFormat(final File file, final String name, final String ext) {
+        return EXT.contains(ext);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/keyvalue/KeyValueTextConverter.java
Patch:
@@ -9,6 +9,7 @@
 
 import net.gsantner.markor.format.plaintext.PlaintextTextConverter;
 
+import java.io.File;
 import java.util.Arrays;
 import java.util.List;
 
@@ -17,7 +18,7 @@ public class KeyValueTextConverter extends PlaintextTextConverter {
     private static final List<String> EXT = Arrays.asList(".yml", ".yaml", ".toml", ".vcf", ".ics", ".ini", ".json", ".zim");
 
     @Override
-    public boolean isFileOutOfThisFormat(String filepath, String extWithDot) {
-        return EXT.contains(extWithDot);
+    protected boolean isFileOutOfThisFormat(final File file, final String name, final String ext) {
+        return EXT.contains(ext);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownSyntaxHighlighter.java
Patch:
@@ -23,15 +23,14 @@ public class MarkdownSyntaxHighlighter extends SyntaxHighlighterBase {
     public final static Pattern ITALICS = Pattern.compile("(?<=(\\n|^|\\s|\\[|\\{|\\())([*_])(?=((?!\\2)|\\2{2,}))(?=\\S)(.*?)\\S\\2(?=(\\n|$|\\s|\\.|,|:|;|-|\\]|\\}|\\)))");
     public final static Pattern HEADING = Pattern.compile("(?m)((^#{1,6}[^\\S\\n][^\\n]+)|((\\n|^)[^\\s]+.*?\\n(-{2,}|={2,})[^\\S\\n]*$))");
     public final static Pattern HEADING_SIMPLE = Pattern.compile("(?m)^(#{1,6}\\s.*$)");
-    public final static Pattern LINK = Pattern.compile("\\[([^\\[]+)\\]\\(([^\\)]+)\\)");
+    // Group 1 matches image, Group 2 matches text, group 3 matches path
+    public static final Pattern LINK = Pattern.compile("(?m)(!)?\\[([^]]*)]\\(([^()]*(?:\\([^()]*\\)[^()]*)*)\\)");
     public final static Pattern LIST_UNORDERED = Pattern.compile("(\\n|^)\\s{0,16}([*+-])( \\[[ xX]\\])?(?= )");
     public final static Pattern LIST_ORDERED = Pattern.compile("(?m)^\\s{0,16}(\\d+)(:?\\.|\\))\\s");
     public final static Pattern QUOTATION = Pattern.compile("(\\n|^)>");
     public final static Pattern STRIKETHROUGH = Pattern.compile("~{2}(.*?)\\S~{2}");
     public final static Pattern CODE = Pattern.compile("(?m)(`(?!`)(.*?)`)|(^[^\\S\\n]{4}(?![0-9\\-*+]).*$)");
     public final static Pattern DOUBLESPACE_LINE_ENDING = Pattern.compile("(?m)(?<=\\S)([^\\S\\n]{2,})\\n");
-    public final static Pattern ACTION_LINK_PATTERN = Pattern.compile("(?m)\\[(.*?)\\]\\((.*?)\\)");
-    public final static Pattern ACTION_IMAGE_PATTERN = Pattern.compile("(?m)!\\[(.*?)\\]\\((.*?)\\)");
 
     private static final int MD_COLOR_HEADING = 0xffef6D00;
     private static final int MD_COLOR_LINK = 0xff1ea3fe;

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextTextConverter.java
Patch:
@@ -87,7 +87,7 @@ protected String getContentType() {
     }
 
     @Override
-    protected boolean isFileOutOfThisFormat(String filepath, String extWithDot) {
-        return EXT.contains(extWithDot) || _appSettings.isExtOpenWithThisApp(extWithDot) || GsFileUtils.isTextFile(new File(filepath));
+    protected boolean isFileOutOfThisFormat(final File file, final String name, final String ext) {
+        return EXT.contains(ext) || _appSettings.isExtOpenWithThisApp(ext) || GsFileUtils.isTextFile(file);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/wikitext/WikitextActionButtons.java
Patch:
@@ -196,7 +196,7 @@ private void openLink() {
         if (resolver.isWebLink()) {
             getCu().openWebpageInExternalBrowser(getContext(), resolvedLink);
         } else {
-            DocumentActivity.launch(getActivity(), new File(resolvedLink), false, null, null);
+            DocumentActivity.launch(getActivity(), new File(resolvedLink), false, null);
         }
     }
 

File: app/src/main/java/net/gsantner/markor/frontend/FileInfoDialog.java
Patch:
@@ -75,7 +75,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
     private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater) {
         View root;
         AlertDialog.Builder dialogBuilder;
-        dialogBuilder = new AlertDialog.Builder(inflater.getContext(), R.style.Theme_AppCompat_DayNight_Dialog);
+        dialogBuilder = new AlertDialog.Builder(inflater.getContext(), R.style.Theme_AppCompat_DayNight_Dialog_Rounded);
         root = inflater.inflate(R.layout.file_info_dialog, null);
 
         dialogBuilder.setView(root);

File: app/src/main/java/net/gsantner/markor/frontend/SearchAndReplaceTextDialog.java
Patch:
@@ -106,7 +106,7 @@ private SearchAndReplaceTextDialog(final Activity activity, final Editable edit,
         }
 
         final Resources res = activity.getResources();
-        final AlertDialog.Builder builder = new AlertDialog.Builder(activity);
+        final AlertDialog.Builder builder = new AlertDialog.Builder(activity, R.style.Theme_AppCompat_DayNight_Dialog_Rounded);
         final View viewRoot = activity.getLayoutInflater().inflate(R.layout.search_replace_dialog, null);
         final AtomicReference<Dialog> dialog = new AtomicReference<>();
 

File: app/src/main/java/net/gsantner/markor/frontend/filesearch/FileSearchDialog.java
Patch:
@@ -41,7 +41,7 @@ public static void showDialog(
             final FileSearchDialog.Options options,
             final GsCallback.a1<FileSearchEngine.SearchOptions> dialogCallback
     ) {
-        final AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(activity, R.style.Theme_AppCompat_DayNight_Dialog);
+        final AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(activity, R.style.Theme_AppCompat_DayNight_Dialog_Rounded);
         final AppSettings appSettings = ApplicationObject.settings();
 
         final ScrollView scrollView = new ScrollView(activity);

File: app/src/main/java/net/gsantner/markor/frontend/filesearch/FileSearchResultSelectorDialog.java
Patch:
@@ -46,7 +46,7 @@ public static void showDialog(
             final List<FileSearchEngine.FitFile> searchResults,
             final GsCallback.a3<String, Integer, Boolean> callback
     ) {
-        final AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(activity, R.style.Theme_AppCompat_DayNight_Dialog);
+        final AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(activity, R.style.Theme_AppCompat_DayNight_Dialog_Rounded);
 
         final LinearLayout dialogLayout = new LinearLayout(activity);
         dialogLayout.setOrientation(LinearLayout.VERTICAL);
@@ -98,8 +98,8 @@ public void afterTextChanged(final Editable arg0) {
 
         final Window window = dialog.getWindow();
         if (window != null) {
-            window.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE | WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
-            window.setLayout(WindowManager.LayoutParams.MATCH_PARENT, WindowManager.LayoutParams.WRAP_CONTENT);
+            window.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE | WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
+            window.setLayout(WindowManager.LayoutParams.MATCH_PARENT, WindowManager.LayoutParams.MATCH_PARENT);
         }
 
         expandableListView.setOnGroupClickListener((parent, view, groupPosition, id) -> {

File: app/src/main/java/net/gsantner/markor/frontend/textview/HighlightingEditor.java
Patch:
@@ -147,6 +147,7 @@ private void updateHighlighting(final boolean recompute) {
 
     public void setDynamicHighlightingEnabled(final boolean enable) {
         _isDynamicHighlightingEnabled = enable;
+        updateHighlighting(true);
     }
 
     public boolean isDynamicHighlightingEnabled() {

File: app/src/main/java/net/gsantner/markor/web/MarkorWebViewClient.java
Patch:
@@ -49,7 +49,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                         break;
                     }
                 }
-                DocumentActivity.handleFileClick(_activity, file, null);
+                DocumentActivity.launch(_activity, file, null, null);
             } else {
                 MarkorContextUtils su = new MarkorContextUtils(_activity);
                 AppSettings settings = ApplicationObject.settings();

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserDialog.java
Patch:
@@ -227,7 +227,8 @@ private void showNewDirDialog() {
         dopt.titleText = _dopt.newDirButtonText;
         dopt.textColor = rcolor(_dopt.primaryTextColor);
         dopt.searchHintText = android.R.string.untitled;
-        dopt.callback = (name) -> _filesystemViewerAdapter.createDirectoryHere(name, true);
+        dopt.searchInputFilter = GsContextUtils.instance.makeFilenameInputFilter();
+        dopt.callback = name -> _filesystemViewerAdapter.createDirectoryHere(name);
 
         GsSearchOrCustomTextDialog.showMultiChoiceDialogWithSearchFilterUI(activity, dopt);
     }

File: app/src/test/java/net/gsantner/markor/format/todotxt/TodoTxtFileRecognitionTests.java
Patch:
@@ -18,7 +18,7 @@ public class TodoTxtFileRecognitionTests {
 
     @Test
     public void checkTodoTxtFileRecognition() {
-        Pattern p = TodoTxtTask.TODOTXT_FILE_PATTERN;
+        Pattern p = TodoTxtTextConverter.TODOTXT_FILE_PATTERN;
         assertThat(ispm(p, "todo.txt")).isEqualTo(true);
         assertThat(ispm(p, "ToDO.txt")).isEqualTo(true);
         assertThat(ispm(p, "todo.archive.txt")).isEqualTo(true);

File: app/thirdparty/java/other/writeily/ui/WrConfirmDialog.java
Patch:
@@ -56,7 +56,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         _data = getArguments().getSerializable(EXTRA_DATA);
 
         AlertDialog.Builder dialogBuilder;
-        dialogBuilder = new AlertDialog.Builder(getActivity(), R.style.Theme_AppCompat_DayNight_Dialog);
+        dialogBuilder = new AlertDialog.Builder(getActivity(), R.style.Theme_AppCompat_DayNight_Dialog_Rounded);
 
         dialogBuilder.setTitle(title);
         if (!TextUtils.isEmpty(message)) {

File: app/thirdparty/java/other/writeily/ui/WrRenameDialog.java
Patch:
@@ -108,13 +108,14 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
     private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater) {
         View root;
         AlertDialog.Builder dialogBuilder;
-        dialogBuilder = new AlertDialog.Builder(getActivity(), R.style.Theme_AppCompat_DayNight_Dialog);
+        dialogBuilder = new AlertDialog.Builder(getActivity(), R.style.Theme_AppCompat_DayNight_Dialog_Rounded);
         root = inflater.inflate(R.layout.rename__dialog, null);
 
         dialogBuilder.setTitle(getResources().getString(R.string.rename));
         dialogBuilder.setView(root);
 
         EditText editText = root.findViewById(R.id.new_name);
+        editText.setFilters(new InputFilter[]{GsContextUtils.instance.makeFilenameInputFilter()});
         editText.requestFocus();
         editText.setText(file.getName());
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -50,7 +50,6 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -548,7 +547,7 @@ private static String extractShareText(final Intent intent) {
         link = link != null ? link.trim() : "";
 
         if (Patterns.WEB_URL.matcher(link).matches()) {
-            link = (title != null? title : "") + sanitize(link);
+            link = (title != null ? title : "") + sanitize(link);
         }
 
         return link;

File: app/src/main/java/net/gsantner/markor/format/FormatRegistry.java
Patch:
@@ -96,6 +96,7 @@ public static class Format {
             new Format(FormatRegistry.FORMAT_ASCIIDOC, R.string.asciidoc, ".adoc", CONVERTER_ASCIIDOC),
             new Format(FormatRegistry.FORMAT_CSV, R.string.csv, ".csv", CONVERTER_CSV),
             new Format(FormatRegistry.FORMAT_ORGMODE, R.string.orgmode, ".org", CONVERTER_ORGMODE),
+            new Format(FormatRegistry.FORMAT_EMBEDBINARY, R.string.embed_binary, ".jpg", CONVERTER_EMBEDBINARY),
             new Format(FormatRegistry.FORMAT_UNKNOWN, R.string.none, "", null),
     };
 

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -77,7 +77,7 @@ public Document(@NonNull final File file) {
         // Set initial format
         final String fnlower = _file.getName().toLowerCase();
         for (final FormatRegistry.Format format : FormatRegistry.FORMATS) {
-            if (format.converter.isFileOutOfThisFormat(fnlower)) {
+            if (format.converter == null || format.converter.isFileOutOfThisFormat(fnlower)) {
                 setFormat(format.format);
                 break;
             }

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserDialog.java
Patch:
@@ -277,7 +277,9 @@ public void onFsViewerDoUiUpdate(GsFileBrowserListAdapter adapter) {
         if (_callback != null) {
             _callback.onFsViewerDoUiUpdate(adapter);
         }
-        _toolBar.setSubtitle(adapter.getCurrentFolder().getName());
+        if (adapter.getCurrentFolder() != null) {
+            _toolBar.setSubtitle(adapter.getCurrentFolder().getName());
+        }
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -198,7 +198,7 @@ private void appendToExistingDocumentAndClose(final File file, final boolean sho
                 Toast.makeText(context, R.string.error_could_not_open_file, Toast.LENGTH_LONG).show();
             }
 
-            _appSettings.addRecentDocument(file);
+            _appSettings.addRecentFile(file);
             if (showEditor) {
                 showInDocumentActivity(document);
             } else {
@@ -367,8 +367,8 @@ public void onFsViewerConfig(GsFileBrowserOptions.Options dopt) {
                 @Override
                 public void onFsViewerSelected(final String request, final File sel, final Integer lineNumber) {
                     if (sel.isDirectory()) {
-                        NewFileDialog.newInstance(sel, false, (ok, f) -> {
-                            if (ok && f.isFile()) {
+                        NewFileDialog.newInstance(sel, false, f -> {
+                            if (f.isFile()) {
                                 appendToExistingDocumentAndClose(f, true);
                             }
                         }).show(getChildFragmentManager(), NewFileDialog.FRAGMENT_TAG);

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtAutoTextFormatter.java
Patch:
@@ -11,6 +11,7 @@
 import android.text.Spanned;
 
 import net.gsantner.markor.frontend.textview.TextViewUtils;
+import net.gsantner.opoc.format.GsTextUtils;
 
 import java.util.Date;
 
@@ -19,7 +20,7 @@ public class TodoTxtAutoTextFormatter implements InputFilter {
     @Override
     public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
         try {
-            if (start < source.length() && dstart <= dest.length() && TextViewUtils.isNewLine(source, start, end)) {
+            if (start < source.length() && dstart <= dest.length() && GsTextUtils.isNewLine(source, start, end)) {
                 return autoIndent(source);
             }
         } catch (IndexOutOfBoundsException | NullPointerException e) {

File: app/src/main/java/net/gsantner/markor/frontend/textview/AutoTextFormatter.java
Patch:
@@ -30,7 +30,7 @@ public AutoTextFormatter(FormatPatterns patterns) {
     @Override
     public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
         try {
-            if (start < source.length() && dstart <= dest.length() && TextViewUtils.isNewLine(source, start, end)) {
+            if (start < source.length() && dstart <= dest.length() && GsTextUtils.isNewLine(source, start, end)) {
                 return autoIndent(source, dest, dstart, dend);
             }
         } catch (IndexOutOfBoundsException | NullPointerException e) {
@@ -277,7 +277,7 @@ private static OrderedListLine getOrderedListStart(final CharSequence text, int
     public static void renumberOrderedList(final Editable edit, final FormatPatterns patterns) {
 
         final int[] sel = TextViewUtils.getSelection(edit);
-        if (!TextViewUtils.inRange(0, edit.length(), sel)) {
+        if (!GsTextUtils.inRange(0, edit.length(), sel)) {
             return;
         }
 
@@ -351,7 +351,7 @@ else if (!line.isEmpty) {
             chunked.applyChanges();
 
             final int[] newSel = new int[]{sel[0] + shifts[0], sel[1] + shifts[1]};
-            if (TextViewUtils.inRange(0, edit.length(), newSel)) {
+            if (GsTextUtils.inRange(0, edit.length(), newSel)) {
                 Selection.setSelection(edit, newSel[0], newSel[1]);
             }
 

File: app/thirdparty/java/other/writeily/widget/WrFilesWidgetFactory.java
Patch:
@@ -54,9 +54,9 @@ public void onDataSetChanged() {
         final AppSettings as = ApplicationObject.settings();
 
         if (dir.equals(GsFileBrowserListAdapter.VIRTUAL_STORAGE_RECENTS)) {
-            _widgetFilesList.addAll(Arrays.asList(MarkorFileBrowserFactory.strlistToArray(ApplicationObject.settings().getRecentDocuments())));
+            _widgetFilesList.addAll(ApplicationObject.settings().getRecentFiles());
         } else if (dir.equals(GsFileBrowserListAdapter.VIRTUAL_STORAGE_POPULAR)) {
-            _widgetFilesList.addAll(Arrays.asList(MarkorFileBrowserFactory.strlistToArray(ApplicationObject.settings().getPopularDocuments())));
+            _widgetFilesList.addAll(ApplicationObject.settings().getPopularFiles());
         } else if (dir.equals(GsFileBrowserListAdapter.VIRTUAL_STORAGE_FAVOURITE)) {
             _widgetFilesList.addAll(ApplicationObject.settings().getFavouriteFiles());
         } else if (dir.exists() && dir.canRead()) {

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -176,7 +176,7 @@ protected void onNewIntent(final Intent intent) {
         super.onNewIntent(intent);
         final File file = MarkorContextUtils.getValidIntentFile(intent, null);
         if (_notebook != null && file != null) {
-            if (file.isDirectory()) {
+            if (file.isDirectory() || GsFileBrowserListAdapter.isVirtualFolder(file)) {
                 _notebook.post(() -> _notebook.setCurrentFolder(file));
             } else {
                 _notebook.post(() -> _notebook.getAdapter().showFile(file));

File: app/src/main/java/net/gsantner/markor/activity/openeditor/OpenFromShortcutOrWidgetActivity.java
Patch:
@@ -7,6 +7,7 @@
 import net.gsantner.markor.activity.MainActivity;
 import net.gsantner.markor.activity.MarkorBaseActivity;
 import net.gsantner.markor.util.MarkorContextUtils;
+import net.gsantner.opoc.frontend.filebrowser.GsFileBrowserListAdapter;
 
 import java.io.File;
 
@@ -31,7 +32,7 @@ protected void onNewIntent(final Intent intent) {
     private void launchActivityAndFinish(Intent intent) {
         final Intent newIntent = new Intent(intent);
         final File intentFile = MarkorContextUtils.getIntentFile(intent, null);
-        if (intentFile != null && intentFile.isDirectory()) {
+        if (intentFile != null && (intentFile.isDirectory() || GsFileBrowserListAdapter.isVirtualFolder(intentFile))) {
             newIntent.setClass(this, MainActivity.class);
             startActivity(newIntent);
         } else {

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTask.java
Patch:
@@ -37,8 +37,8 @@ public class TodoTxtTask {
     public static final SimpleDateFormat DATEF_YYYY_MM_DD = new SimpleDateFormat("yyyy-MM-dd", Locale.ROOT);
     public static final int DATEF_YYYY_MM_DD_LEN = "yyyy-MM-dd".length();
     public static final String PT_DATE = "\\d{4}-\\d{2}-\\d{2}";
-    public static final Pattern PATTERN_PROJECTS = Pattern.compile("\\B(?:\\++)(\\S+)");
-    public static final Pattern PATTERN_CONTEXTS = Pattern.compile("\\B(?:\\@+)(\\S+)");
+    public static final Pattern PATTERN_PROJECTS = Pattern.compile("(?:^|\\s)(?:\\++)(\\S+)");
+    public static final Pattern PATTERN_CONTEXTS = Pattern.compile("(?:^|\\s)(?:\\@+)(\\S+)");
     public static final Pattern PATTERN_DONE = Pattern.compile("(?m)(^[Xx]) (.*)$");
     public static final Pattern PATTERN_DATE = Pattern.compile("(?:^|\\s|:)(" + PT_DATE + ")(?:$|\\s)");
     public static final Pattern PATTERN_KEY_VALUE_PAIRS__TAG_ONLY = Pattern.compile("(?i)([a-z]+):([a-z0-9_-]+)");

File: app/src/main/java/net/gsantner/opoc/format/GsTextUtils.java
Patch:
@@ -328,7 +328,6 @@ public static void forEachline(final CharSequence text, GsCallback.b3<Integer, I
             if (!callback.callback(i, start, end)) {
                 break;
             }
-            ;
             start = end + 1;
         }
         callback.callback(i, start, text.length());

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserFragment.java
Patch:
@@ -663,7 +663,7 @@ private void importFileToCurrentDirectory(Context context, File sourceFile) {
     }
 
     public void setCurrentFolder(final File folder) {
-        if (folder != null && folder.canRead() && _filesystemViewerAdapter != null) {
+        if (folder != null && (folder.canRead() || GsFileBrowserListAdapter.isVirtualFolder(folder)) && _filesystemViewerAdapter != null) {
             _filesystemViewerAdapter.setCurrentFolder(folder);
         }
     }

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserListAdapter.java
Patch:
@@ -63,9 +63,9 @@ public class GsFileBrowserListAdapter extends RecyclerView.Adapter<GsFileBrowser
     //## Static
     //########################
     public static final File VIRTUAL_STORAGE_ROOT = new File("/storage/");
-    public static final File VIRTUAL_STORAGE_RECENTS = new File(VIRTUAL_STORAGE_ROOT, "recent-files");
-    public static final File VIRTUAL_STORAGE_FAVOURITE = new File(VIRTUAL_STORAGE_ROOT, "favourite-files");
-    public static final File VIRTUAL_STORAGE_POPULAR = new File(VIRTUAL_STORAGE_ROOT, "popular-files");
+    public static final File VIRTUAL_STORAGE_RECENTS = new File(VIRTUAL_STORAGE_ROOT, "Recent");
+    public static final File VIRTUAL_STORAGE_FAVOURITE = new File(VIRTUAL_STORAGE_ROOT, "Favourites");
+    public static final File VIRTUAL_STORAGE_POPULAR = new File(VIRTUAL_STORAGE_ROOT, "Popular");
     public static final File VIRTUAL_STORAGE_APP_DATA_PRIVATE = new File(VIRTUAL_STORAGE_ROOT, "appdata-private");
     private static final StrikethroughSpan STRIKE_THROUGH_SPAN = new StrikethroughSpan();
     public static final String EXTRA_CURRENT_FOLDER = "EXTRA_CURRENT_FOLDER";

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditAndViewFragment.java
Patch:
@@ -703,7 +703,6 @@ private boolean isWrapped() {
     }
 
     private void setHorizontalScrollMode(final boolean wrap) {
-
         final Context context = getContext();
         if (context != null && _hlEditor != null && isWrapped() != wrap) {
 
@@ -864,7 +863,7 @@ public void onAnimationEnd(Animator animation) {
 
     @Override
     protected void onToolbarClicked(View v) {
-        if (!_isPreviewVisible && _format != null) {
+        if (_format != null) {
             _format.getActions().runTitleClick();
         }
     }
@@ -892,7 +891,7 @@ public Document getDocument() {
         return _document;
     }
 
-    public WebView getWebview() {
+    public WebView getWebView() {
         return _webView;
     }
 

File: app/src/main/java/net/gsantner/markor/format/TextConverterBase.java
Patch:
@@ -104,8 +104,7 @@ public String convertMarkupShowInWebView(
             final Activity context,
             final WebView webView,
             final boolean lightMode,
-            final boolean lineNum
-    ) {
+            final boolean lineNum) {
         String html;
         try {
             html = convertMarkup(content, context, lightMode, lineNum, document.getFile());

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownActionButtons.java
Patch:
@@ -304,7 +304,7 @@ private void insertTableRow(int cols, boolean isHeaderEnabled) {
     @Override
     public boolean runTitleClick() {
         final Matcher m = MarkdownReplacePatternGenerator.PREFIX_ATX_HEADING.matcher("");
-        MarkorDialogFactory.showHeadlineDialog(getActivity(), _hlEditor, _disabledHeadings, (text, start, end) -> {
+        MarkorDialogFactory.showHeadlineDialog(getActivity(), _hlEditor, _webView, _disabledHeadings, (text, start, end) -> {
             if (m.reset(text.subSequence(start, end)).find()) {
                 return m.end(2) - m.start(2) - 1;
             }

File: app/src/main/java/net/gsantner/markor/format/wikitext/WikitextActionButtons.java
Patch:
@@ -263,7 +263,7 @@ public static String createWikitextHeaderAndTitleContents(String fileNameWithout
     @Override
     public boolean runTitleClick() {
         final Matcher m = WikitextSyntaxHighlighter.HEADING.matcher("");
-        MarkorDialogFactory.showHeadlineDialog(getActivity(), _hlEditor, _disabledHeadings, (text, start, end) -> {
+        MarkorDialogFactory.showHeadlineDialog(getActivity(), _hlEditor, _webView, _disabledHeadings, (text, start, end) -> {
             if (m.reset(text.subSequence(start, end)).find()) {
                 return 7 - (m.end(2) - m.start(2));
             }

File: app/src/main/java/net/gsantner/markor/frontend/NewFileDialog.java
Patch:
@@ -146,7 +146,7 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
 
             if (pos == 3) { // Jekyll
                 prefix = TodoTxtTask.DATEF_YYYY_MM_DD.format(new Date()) + "-";
-            } else if (pos == 9) { //ZettelKasten
+            } else if (pos == 9) { // ZettelKasten
                 prefix = new SimpleDateFormat("yyyyMMddHHmm", Locale.ROOT).format(new Date()) + "-";
             }
             if (!TextUtils.isEmpty(prefix) && !fileNameEdit.getText().toString().startsWith(prefix)) {
@@ -325,7 +325,7 @@ private String getTemplateByPos(
                         "   line\";2059-12-24\n";
             }
             case 12: {
-                // orgmode
+                // Org-mode
                 return "OrgMode Reference\n" + "* Headline\n" + "** Nested headline\n" + "*** Deeper\n" + "\n" + "* Basic markup\n" + "This is the general building block for org-mode navigation.\n" + "- _underscores let you underline things_\n" + "- *stars add emphasis*\n" + "- /slashes are italics/\n" + "- +pluses are strikethrough+\n" + "- =equal signs are verbatim text=\n" + "- ~tildes can also be used~\n" + "\n" + "* List\n" + "** Unordered List\n" + "- Item 1\n" + "- Item 2\n" + "  - Subitem 2.1\n" + "  - Subitem 2.2\n" + "** Ordered List\n" + "1. First Item\n" + "2. Second Item\n" + "   1. Subitem 2.1\n" + "   2. Subitem 2.2\n" + "- [X] Completed Task\n" + "- [ ] Uncompleted Task\n" + "** Nested List\n" + "   - Item A\n" + "     - Subitem A.1\n" + "     - Subitem A.2\n" + "   - Item B\n" + "\n" + "* Tables\n" + "\n" + "| First Name                 | Last Name           | Years using Emacs |\n" + "|----------------------------+---------------------+-------------------|\n" + "| Lee                        | Hinman              |                 5 |\n" + "| Mike                       | Hunsinger           |                 2 |\n" + "| Daniel                     | Glauser             |                 4 |\n" + "| Really-long-first-name-guy | long-last-name-pers |                 1 |\n" + "\n" + "* Org-mode links\n" + "\n" + "#+BEGIN_SRC fundamental\n" + "[[http://google.com/][Google]]\n" + "#+END_SRC\n" + "\n" + "[[./images/pic1.png]]\n" + "\n" + "\n" + "* TODO List\n" + "** TODO This is a task that needs doing\n" + "** TODO Another todo task\n" + "- [ ] sub task one\n" + "- [X] sub task two\n" + "- [ ] sub task three\n" + "** DONE I've already finished this one\n" + "*** CANCELLED learn todos\n" + "    CLOSED: [2023-10-16 Mon 08:39]\n" + "\n" + "* Code\n" + "#+BEGIN_LaTeX\n" + "$a + b$\n" + "#+END_LaTeX\n" + "\n" + "#+BEGIN_SRC emacs-lisp\n" + "(defun my/function ()\n" + "  \"docstring\"\n" + "  (interactive)\n" + "  (progn\n" + "    (+ 1 1)\n" + "    (message \"Hi\")))\n" + "#+END_SRC\n" + "\n";
             }
         }

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserOptions.java
Patch:
@@ -66,7 +66,6 @@ public static class Options {
 
         // Visibility of elements
         public boolean
-                titleTextEnable = true,
                 utilsBarEnable = true,
                 searchEnable = true,
                 upButtonEnable = true,
@@ -120,6 +119,7 @@ public static class Options {
         public int titleTextColor = 0;
 
         public Collection<File> favouriteFiles, recentFiles, popularFiles = null;
+        public GsCallback.a1<CharSequence> setTitle = null, setSubtitle = null;
     }
 
     public static class SelectionListenerAdapter implements SelectionListener, Serializable {

File: app/src/main/java/net/gsantner/markor/util/MarkorContextUtils.java
Patch:
@@ -42,6 +42,7 @@ public <T extends GsContextUtils> T applySpecialLaunchersVisibility(final Contex
         setLauncherActivityEnabled(context, OpenEditorQuickNoteActivity.class, extraLaunchersEnabled);
         setLauncherActivityEnabled(context, OpenEditorTodoActivity.class, extraLaunchersEnabled);
         setLauncherActivityEnabled(context, OpenShareIntoActivity.class, extraLaunchersEnabled);
+        setLauncherActivityEnabledFromString(context, "net.gsantner.markor.AliasDocumentProcessText", extraLaunchersEnabled);
         return thisp();
     }
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -30,6 +30,7 @@
 import net.gsantner.markor.model.AppSettings;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.util.MarkorContextUtils;
+import net.gsantner.opoc.format.GsTextUtils;
 import net.gsantner.opoc.frontend.base.GsFragmentBase;
 import net.gsantner.opoc.util.GsContextUtils;
 import net.gsantner.opoc.util.GsFileUtils;
@@ -217,7 +218,7 @@ private void handleLaunchingIntent(final Intent intent) {
             } else if (intentData != null) {
                 final String line = intentData.getQueryParameter("line");
                 if (line != null) {
-                    startLine = TextViewUtils.tryParseInt(line, -1);
+                    startLine = GsTextUtils.tryParseInt(line, -1);
                 }
             }
 

File: app/src/main/java/net/gsantner/markor/frontend/SearchAndReplaceTextDialog.java
Patch:
@@ -28,6 +28,7 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.frontend.textview.TextViewUtils;
+import net.gsantner.opoc.format.GsTextUtils;
 import net.gsantner.opoc.model.GsSharedPreferencesPropertyBackend;
 
 import org.json.JSONArray;
@@ -244,7 +245,7 @@ private Pattern makePattern() {
     }
 
     private String getReplacePattern() {
-        return TextViewUtils.unescapeString(replaceText.getText().toString());
+        return GsTextUtils.unescapeString(replaceText.getText().toString());
     }
 
     private void updateUI() {

File: app/src/main/java/net/gsantner/markor/frontend/textview/AutoTextFormatter.java
Patch:
@@ -12,6 +12,8 @@
 import android.text.Selection;
 import android.text.Spanned;
 
+import net.gsantner.opoc.format.GsTextUtils;
+
 import java.util.EmptyStackException;
 import java.util.Stack;
 import java.util.regex.Matcher;
@@ -365,7 +367,7 @@ private static String getNextOrderedValue(final String currentValue, final boole
         final Pattern capitalLetterPattern = Pattern.compile("[A-z]");
 
         if (numberPattern.matcher(currentValue).find()) {
-            final int intValue = TextViewUtils.tryParseInt(currentValue, 0);
+            final int intValue = GsTextUtils.tryParseInt(currentValue, 0);
             return restart ? "1" : Integer.toString(intValue + 1);
         } else {
             final char charValue = currentValue.charAt(0);

File: app/src/main/java/net/gsantner/markor/frontend/textview/TextViewUtils.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.UUID;
 
 @SuppressWarnings({"CharsetObjectCanBeUsed", "WeakerAccess", "unused"})
-public final class TextViewUtils extends GsTextUtils {
+public final class TextViewUtils {
 
     // Suppress default constructor for noninstantiability
     private TextViewUtils() {

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -942,6 +942,6 @@ File getAttachmentFolder(final File file) {
             return getNotebookDirectory();
         }
         final String child = getString(R.string.pref_key__attachment_folder_name, "_res").trim();
-        return TextViewUtils.isNullOrEmpty(child) ? parent : new File(parent, child);
+        return GsTextUtils.isNullOrEmpty(child) ? parent : new File(parent, child);
     }
 }

File: app/src/main/java/net/gsantner/opoc/frontend/GsAudioRecordOmDialog.java
Patch:
@@ -58,7 +58,7 @@
 //
 @SuppressWarnings({"ResultOfMethodCallIgnored", "unused"})
 public class GsAudioRecordOmDialog {
-    public static void showAudioRecordDialog(final Activity activity, @StringRes final int titleResId, final GsCallback.a1<File> recordFinishedCallbackWithPathToTemporaryFile) {
+    public static void showAudioRecordDialog(final Activity activity, @StringRes final int titleResId, final GsCallback.a1<String> recordFinishedCallbackWithPathToTemporaryFile) {
         ////////////////////////////////////
         // Request permission in case not granted. Do not show dialog UI in this case
         if (ContextCompat.checkSelfPermission(activity, Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {
@@ -181,7 +181,7 @@ public static void showAudioRecordDialog(final Activity activity, @StringRes fin
                         TMP_FILE_RECORDING.delete();
                     }
                 } else if (recordFinishedCallbackWithPathToTemporaryFile != null) {
-                    recordFinishedCallbackWithPathToTemporaryFile.callback(TMP_FILE_RECORDING);
+                    recordFinishedCallbackWithPathToTemporaryFile.callback(TMP_FILE_RECORDING.getAbsolutePath());
                 }
             }
             dialogInterface.dismiss();

File: app/src/main/java/net/gsantner/opoc/util/GsFileUtils.java
Patch:
@@ -499,7 +499,7 @@ public static String getMimeType(final File file) {
 
     public static boolean isTextFile(File file) {
         final String mime = getMimeType(file);
-        return mime != null && mime.startsWith("text/");
+        return mime != null && (mime.startsWith("text/") || mime.contains("xml"));
     }
 
     /**

File: app/src/main/java/net/gsantner/markor/format/asciidoc/AsciidocTextConverter.java
Patch:
@@ -8,6 +8,7 @@
 package net.gsantner.markor.format.asciidoc;
 
 import android.content.Context;
+
 import net.gsantner.markor.format.TextConverterBase;
 import net.gsantner.opoc.format.GsTextUtils;
 

File: app/src/main/java/net/gsantner/markor/format/csv/CsvTextConverter.java
Patch:
@@ -133,7 +133,8 @@ private static void addColumnsLine(StringBuilder mdMarkup, @NonNull String[] col
             mdMarkup.append(MD_COL_DELIMITER).append(MD_LINE_DELIMITER);
         }
 
-        @NonNull private static String getCol(@NonNull String[] columns, int i) {
+        @NonNull
+        private static String getCol(@NonNull String[] columns, int i) {
             return (i >= 0 && i < columns.length) ? columns[i] : "";
         }
 

File: app/src/main/java/net/gsantner/markor/format/wikitext/WikitextActionButtons.java
Patch:
@@ -290,7 +290,7 @@ public static String createWikitextHeaderAndTitleContents(String fileNameWithout
     @Override
     public boolean runTitleClick() {
         final Matcher m = WikitextSyntaxHighlighter.HEADING.matcher("");
-        MarkorDialogFactory.showHeadlineDialog(getActivity(),  _hlEditor, _disabledHeadings, (text, start, end) -> {
+        MarkorDialogFactory.showHeadlineDialog(getActivity(), _hlEditor, _disabledHeadings, (text, start, end) -> {
             if (m.reset(text.subSequence(start, end)).find()) {
                 return 7 - (m.end(2) - m.start(2));
             }

File: app/src/main/java/net/gsantner/markor/frontend/MarkorDialogFactory.java
Patch:
@@ -32,7 +32,6 @@
 import android.widget.EditText;
 import android.widget.Toast;
 
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 import androidx.core.content.ContextCompat;
@@ -62,7 +61,6 @@
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Collections;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;

File: app/src/main/java/net/gsantner/markor/frontend/textview/TextViewUtils.java
Patch:
@@ -20,7 +20,6 @@
 import android.text.Layout;
 import android.text.Selection;
 import android.text.TextUtils;
-import android.text.TextWatcher;
 import android.util.DisplayMetrics;
 import android.view.View;
 import android.view.WindowInsets;
@@ -31,7 +30,6 @@
 
 import net.gsantner.opoc.format.GsTextUtils;
 import net.gsantner.opoc.util.GsContextUtils;
-import net.gsantner.opoc.wrapper.GsCallback;
 
 import java.lang.reflect.Array;
 import java.util.ArrayList;
@@ -234,7 +232,7 @@ public static boolean isNewLine(CharSequence source, int start, int end) {
         return isValidIndex(source, start, end - 1) && (source.charAt(start) == '\n' || source.charAt(end - 1) == '\n');
     }
 
-    public static void selectLines(final EditText edit, final Integer ... positions) {
+    public static void selectLines(final EditText edit, final Integer... positions) {
         selectLines(edit, Arrays.asList(positions));
     }
 

File: app/src/main/java/net/gsantner/opoc/format/GsTextUtils.java
Patch:
@@ -10,10 +10,7 @@
 package net.gsantner.opoc.format;
 
 import android.util.Base64;
-import android.util.Pair;
 
-import net.gsantner.opoc.util.GsCollectionUtils;
-import net.gsantner.opoc.util.GsContextUtils;
 import net.gsantner.opoc.wrapper.GsCallback;
 
 import org.json.JSONArray;

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserFragment.java
Patch:
@@ -39,7 +39,6 @@
 
 import net.gsantner.markor.ApplicationObject;
 import net.gsantner.markor.R;
-import net.gsantner.markor.format.ActionButtonBase;
 import net.gsantner.markor.format.FormatRegistry;
 import net.gsantner.markor.frontend.FileInfoDialog;
 import net.gsantner.markor.frontend.MarkorDialogFactory;

File: app/src/main/java/net/gsantner/opoc/util/GsContextUtils.java
Patch:
@@ -2507,7 +2507,7 @@ public void showSnackBar(final Activity context, @StringRes int stringResId, boo
                 .show();
     }
 
-    public <T extends GsContextUtils> T showSoftKeyboard(final Activity activity, final boolean show, final View ... view) {
+    public <T extends GsContextUtils> T showSoftKeyboard(final Activity activity, final boolean show, final View... view) {
         if (activity != null) {
             final InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
             final View focus = (view != null && view.length > 0) ? view[0] : activity.getCurrentFocus();

File: app/src/main/java/net/gsantner/markor/frontend/textview/ListHandler.java
Patch:
@@ -11,8 +11,7 @@
 import android.text.TextWatcher;
 import android.util.Pair;
 
-
-public class ListHandler implements TextViewUtils.MTextWatcher {
+public class ListHandler implements TextWatcher {
     private boolean triggerReorder = false;
     private Integer beforeLineEnd = null;
     private boolean alreadyRunning = false; // Prevent this instance from triggering itself

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserFragment.java
Patch:
@@ -39,6 +39,7 @@
 
 import net.gsantner.markor.ApplicationObject;
 import net.gsantner.markor.R;
+import net.gsantner.markor.format.ActionButtonBase;
 import net.gsantner.markor.format.FormatRegistry;
 import net.gsantner.markor.frontend.FileInfoDialog;
 import net.gsantner.markor.frontend.MarkorDialogFactory;
@@ -128,7 +129,7 @@ public void onViewCreated(@NonNull View root, @Nullable Bundle savedInstanceStat
             swipe.setRefreshing(false);
         });
 
-        if (FileSearchEngine.isSearchExecuting) {
+        if (FileSearchEngine.isSearchExecuting.get()) {
             FileSearchEngine.activity.set(new WeakReference<>(getActivity()));
         }
     }

File: app/src/main/java/net/gsantner/opoc/util/GsFileUtils.java
Patch:
@@ -695,7 +695,7 @@ public static String getFilenameWithTimestamp(final String... A0prefixA1postfixA
      */
     private static List<String> makeSortKey(final String sortBy, final File file, final boolean dirFirst) {
         // If we want directories first we prefix with a 0 to increase priority
-        final String dirPrefix = file.isDirectory() ? "0" : "1";
+        final String dirPrefix = (dirFirst && file.isDirectory()) ? "0" : "1";
         // All sort conflicts resolved by name
         final String name = file.getName().toLowerCase();
 

File: app/src/main/java/net/gsantner/markor/web/MarkorWebViewClient.java
Patch:
@@ -41,7 +41,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return false;
             } else if (url.startsWith("file://")) {
                 MarkorContextUtils su = new MarkorContextUtils(view.getContext());
-                File file = new File(URLDecoder.decode(url.replace("file://", "")));
+                File file = new File(URLDecoder.decode(url.replace("file://", "").replace("+", "%2B")));
                 for (String str : new String[]{file.getAbsolutePath(), file.getAbsolutePath().replaceFirst("[#].*$", ""), file.getAbsolutePath() + ".md", file.getAbsolutePath() + ".txt"}) {
                     File f = new File(str);
                     if (f.exists()) {

File: app/src/main/java/net/gsantner/markor/frontend/FileInfoDialog.java
Patch:
@@ -85,6 +85,7 @@ private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater
         tv(root, R.id.ui__fileinfodialog__last_modified).setText(DateUtils.formatDateTime(root.getContext(), file.lastModified(), (DateUtils.FORMAT_SHOW_TIME | DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR | DateUtils.FORMAT_NUMERIC_DATE)));
         tv(root, R.id.ui__fileinfodialog__last_modified_caption).setText(getString(R.string.last_modified_witharg, "").replace(":", "").trim());
         tv(root, R.id.ui__fileinfodialog__size_description).setText(GsFileUtils.getReadableFileSize(file.length(), false));
+        tv(root, R.id.ui__fileinfodialog__mimetype_description).setText(GsFileUtils.getMimeType(file));
         tv(root, R.id.ui__fileinfodialog__location).setOnLongClickListener(v -> {
             GsContextUtils.instance.setClipboard(v.getContext(), file.getAbsolutePath());
             Toast.makeText(v.getContext(), R.string.clipboard, Toast.LENGTH_SHORT).show();

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditAndViewFragment.java
Patch:
@@ -147,7 +147,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
             WebView.enableSlowWholeDocumentDraw();
         }
 
-        _webViewClient = new MarkorWebViewClient(activity);
+        _webViewClient = new MarkorWebViewClient(_webView, activity);
         _webView.setWebChromeClient(new GsWebViewChromeClient(_webView, activity, view.findViewById(R.id.document__fragment_fullscreen_overlay)));
         _webView.setWebViewClient(_webViewClient);
         _webView.addJavascriptInterface(this, "Android");

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownSyntaxHighlighter.java
Patch:
@@ -70,7 +70,7 @@ protected void generateSpans() {
         if (_highlightBiggerHeadings) {
             createSpanForMatches(HEADING, new WrMarkdownHeaderSpanCreator(_spannable, MD_COLOR_HEADING, _textSize));
         } else {
-            createColorSpanForMatches(HEADING_SIMPLE, MD_COLOR_HEADING);
+            createColorSpanForMatches(HEADING, MD_COLOR_HEADING);
         }
 
         createColorSpanForMatches(LINK, MD_COLOR_LINK);

File: app/src/main/java/net/gsantner/markor/activity/openeditor/OpenShareIntoActivity.java
Patch:
@@ -20,7 +20,7 @@ public class OpenShareIntoActivity extends OpenEditorActivity {
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        Intent openShare = new Intent(this, OpenEditorFromShortcutOrWidgetActivity.class)
+        Intent openShare = new Intent(this, OpenFromShortcutOrWidgetActivity.class)
                 .setAction(Intent.ACTION_SEND)
                 .putExtra(Intent.EXTRA_TEXT, "");
         openActivityAndClose(openShare, null);

File: app/src/main/java/net/gsantner/markor/format/ActionButtonBase.java
Patch:
@@ -608,7 +608,7 @@ protected final boolean runCommonAction(final @StringRes int action) {
                 return true;
             }
             case R.string.abid_common_insert_snippet: {
-                MarkorDialogFactory.showInsertSnippetDialog(getActivity(), (snip) -> {
+                MarkorDialogFactory.showInsertSnippetDialog(getActivity(), _hlEditor, (snip) -> {
                     _hlEditor.insertOrReplaceTextOnCursor(TextViewUtils.interpolateEscapedDateTime(snip));
                     _lastSnip = snip;
                 });

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -167,7 +167,7 @@ public boolean isHighlightCodeMonospaceFont() {
     }
 
     public boolean isHighlightCodeBlock() {
-        return !getBool(R.string.pref_key__hightlight_code_block_disabled, false);
+        return !getBool(R.string.pref_key__highlight_code_block_disabled, false);
     }
 
     public int getHighlightingDelayTodoTxt() {

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -311,6 +311,7 @@ public synchronized boolean saveContent(final Activity context, final CharSequen
         if (isBinaryFileNoTextLoading()) {
             return true;
         }
+
         if (!isManualSave && TextUtils.getTrimmedLength(content) < GsContextUtils.TEXTFILE_OVERWRITE_MIN_TEXT_LENGTH) {
             return false;
         }

File: app/src/main/java/net/gsantner/opoc/frontend/GsSearchOrCustomTextDialog.java
Patch:
@@ -22,6 +22,7 @@
 import android.text.Spannable;
 import android.text.SpannableString;
 import android.text.TextUtils;
+import android.text.method.LinkMovementMethod;
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.LayoutInflater;
@@ -411,6 +412,7 @@ private static View makeTitleView(final Context context, final DialogOptions dop
             subTitle.setPadding(0, dopt.titleText == 0 ? 0 : paddingBetween, 0, 0);
             subTitle.setText(dopt.messageText);
             subTitle.setTextIsSelectable(true);
+            subTitle.setMovementMethod(LinkMovementMethod.getInstance()); // Allow links to be shown and followed
             titleLayout.addView(subTitle, new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT));
         }
 

File: app/thirdparty/java/other/writeily/model/WrMarkorSingleton.java
Patch:
@@ -19,8 +19,6 @@
 import net.gsantner.opoc.util.GsFileUtils;
 
 import java.io.File;
-import java.io.IOException;
-import java.nio.file.Path;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -597,7 +597,7 @@ public void applyAppTheme() {
     }
 
     public String getAppThemeName() {
-        return getString(R.string.pref_key__app_theme, _context.getString(R.string.app_theme_auto));
+        return getString(R.string.pref_key__app_theme, _context.getString(R.string.app_theme_system));
     }
 
     public void setEditorBasicColor(boolean forDarkMode, @ColorRes int fgColor, @ColorRes int bgColor) {

File: app/src/main/java/net/gsantner/markor/activity/openeditor/OpenEditorActivity.java
Patch:
@@ -44,7 +44,9 @@ protected void openActivityAndClose(final Intent openIntent, File file) {
                     file.getParentFile().mkdirs();
                 }
                 if (!file.exists() && !file.isDirectory()) {
-                    GsFileUtils.writeFile(file, "", new GsFileUtils.FileInfo().withBom(_appSettings.getNewFileDialogLastUsedUtf8Bom()));
+                    final GsFileUtils.FileInfo info = new GsFileUtils.FileInfo();
+                    info.hasBom = _appSettings.getNewFileDialogLastUsedUtf8Bom();
+                    GsFileUtils.writeFile(file, "", info);
                 }
                 openIntent.putExtra(Document.EXTRA_PATH, openIntent.hasExtra(Document.EXTRA_PATH) ? openIntent.getSerializableExtra(Document.EXTRA_PATH) : file);
                 _cu.animateToActivity(this, openIntent, true, 1);

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtAutoTextFormatter.java
Patch:
@@ -31,6 +31,6 @@ public CharSequence filter(CharSequence source, int start, int end, Spanned dest
     }
 
     private CharSequence autoIndent(CharSequence source) {
-        return source + TodoTxtParser.DATEF_YYYY_MM_DD.format(new Date()) + " ";
+        return source + TodoTxtTask.DATEF_YYYY_MM_DD.format(new Date()) + " ";
     }
 }

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextConverter.java
Patch:
@@ -51,6 +51,6 @@ protected String getContentType() {
 
     @Override
     protected boolean isFileOutOfThisFormat(String filepath, String extWithDot) {
-        return TodoTxtParser.isTodoFile(filepath.replace(JavaPasswordbasedCryption.DEFAULT_ENCRYPTION_EXTENSION, ""));
+        return TodoTxtTask.isTodoFile(filepath.replace(JavaPasswordbasedCryption.DEFAULT_ENCRYPTION_EXTENSION, ""));
     }
 }

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserFragment.java
Patch:
@@ -98,7 +98,7 @@ public interface FilesystemFragmentOptionsListener {
     }
 
     @Override
-    public void onViewCreated(View root, @Nullable Bundle savedInstanceState) {
+    public void onViewCreated(@NonNull View root, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(root, savedInstanceState);
         Context context = getContext();
         _recyclerList = root.findViewById(R.id.ui__filesystem_dialog__list);
@@ -301,7 +301,7 @@ public void onResume() {
         super.onResume();
         if (!_appSettings.getNotebookDirectoryAsStr().equals(_previousNotebookDirectory)) {
             _dopt.rootFolder = _appSettings.getNotebookDirectory();
-            _filesystemViewerAdapter.setCurrentFolder(_dopt.rootFolder, false);
+            _filesystemViewerAdapter.setCurrentFolder(_dopt.rootFolder);
         }
 
         if (!firstResume) {
@@ -432,7 +432,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case R.id.action_go_to_appdata_sdcard_2:
             case R.id.action_go_to_appdata_public: {
                 final File folder = _appSettings.getFolderToLoadByMenuId(_id);
-                _filesystemViewerAdapter.setCurrentFolder(folder, true);
+                _filesystemViewerAdapter.setCurrentFolder(folder);
                 Toast.makeText(getContext(), folder.getAbsolutePath(), Toast.LENGTH_SHORT).show();
                 return true;
             }

File: app/src/test/java/net/gsantner/markor/format/todotxt/TodoTxtFileRecognitionTests.java
Patch:
@@ -20,7 +20,7 @@ public class TodoTxtFileRecognitionTests {
 
     @Test
     public void checkTodoTxtFileRecognition() {
-        Pattern p = TodoTxtParser.TODOTXT_FILE_PATTERN;
+        Pattern p = TodoTxtTask.TODOTXT_FILE_PATTERN;
         assertThat(ispm(p, "todo.txt")).isEqualTo(true);
         assertThat(ispm(p, "ToDO.txt")).isEqualTo(true);
         assertThat(ispm(p, "todo.archive.txt")).isEqualTo(true);

File: app/src/main/java/net/gsantner/opoc/util/GsFileUtils.java
Patch:
@@ -10,6 +10,7 @@
 package net.gsantner.opoc.util;
 
 import android.annotation.SuppressLint;
+import android.os.Build;
 import android.text.TextUtils;
 import android.util.Pair;
 
@@ -423,7 +424,6 @@ public static String relativePath(File src, File dest) {
     }
 
     @SuppressWarnings("StatementWithEmptyBody")
-    @SuppressLint("NewApi")
     private final static GsCallback.s1<File> gatherMimeType = file -> {
         if (file == null) {
             return "*/*";
@@ -451,8 +451,9 @@ public static String relativePath(File src, File dest) {
         }
 
         String t;
+
         try {
-            if (!GsTextUtils.isNullOrEmpty(t = Files.probeContentType(file.toPath()))) {
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O && !GsTextUtils.isNullOrEmpty(t = Files.probeContentType(file.toPath()))) {
                 return t;
             }
         } catch (Exception ignored) {

File: app/src/main/java/net/gsantner/opoc/util/GsFileUtils.java
Patch:
@@ -728,8 +728,8 @@ public static Comparator<File> sortFiles(List<File> filesToSort, final String so
         if (filesToSort != null) {
             try {
                 Collections.sort(filesToSort, mainComparator);
-            } catch (Exception ignored) {
-                ignored.printStackTrace();
+            } catch (Exception e) {
+                e.printStackTrace();
             }
         }
 

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -116,7 +116,7 @@ protected void onNewIntent(final Intent intent) {
         final File dir = getIntentDir(intent, null);
         final GsFileBrowserFragment frag = getNotebook();
         if (frag != null && dir != null) {
-            frag.getAdapter().setCurrentFolder(dir, false);
+            frag.post(() -> frag.getAdapter().setCurrentFolder(dir, false));
             _bottomNav.postDelayed(() -> _bottomNav.setSelectedItemId(R.id.nav_notebook), 10);
         }
     }
@@ -189,6 +189,7 @@ public boolean onCreateOptionsMenu(final Menu menu) {
     protected void onResume() {
         //new AndroidSupportMeWrapper(this).mainOnResume();
         super.onResume();
+
         if (_appSettings.isRecreateMainRequired()) {
             // recreate(); // does not remake fragments
             final Intent intent = getIntent();

File: app/src/main/java/net/gsantner/opoc/util/GsFileUtils.java
Patch:
@@ -500,7 +500,6 @@ public static String getMimeType(File file) {
         final String fp = file.getAbsolutePath();
         String mime = MIME_TYPE_CACHE.getOrDefault(fp, null);
         if (mime == null) {
-            System.out.println("get mimetype" + fp);
             mime = gatherMimeType.callback(file);
             MIME_TYPE_CACHE.add(fp, mime);
         }

File: app/src/main/java/net/gsantner/opoc/format/GsTextUtils.java
Patch:
@@ -170,8 +170,8 @@ public static <T> ArrayList<T> toArrayList(T... array) {
     }
 
     // Not null, not empty, not spaces only
-    public static boolean ne(final String str) {
-        return str != null && !str.trim().isEmpty();
+    public static boolean isNullOrEmpty(final CharSequence str) {
+        return str == null || str.toString().trim().isEmpty();
     }
 
     /**

File: app/src/main/java/net/gsantner/opoc/util/GsContextUtils.java
Patch:
@@ -977,12 +977,12 @@ public String getMimeType(final Context context, String uri) {
             mimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(ext.toLowerCase());
         }
 
-        // Try to guess if the recommended methods fail
-        if (GsTextUtils.ne(mimeType) && new File(uri).exists()) {
+        // Next-best try if other methods fail
+        if (GsTextUtils.isNullOrEmpty(mimeType) && new File(uri).exists()) {
             mimeType = GsFileUtils.getMimeType(new File(uri));
         }
 
-        if (GsTextUtils.ne((mimeType))) {
+        if (GsTextUtils.isNullOrEmpty((mimeType))) {
             mimeType = "*/*";
         }
         return mimeType.toLowerCase(Locale.ROOT);

File: app/src/main/java/net/gsantner/opoc/frontend/settings/GsLanguagePreferenceCompat.java
Patch:
@@ -11,7 +11,7 @@
 /*
  * Requires:
       The BuildConfig field "APPLICATION_LANGUAGES" which is a array of all available languages
-      opoc/ContextUtils
+      opoc/GsContextUtils
  * BuildConfig field can be defined by using the method below
 
 buildConfigField "String[]", "APPLICATION_LANGUAGES", "${getUsedAndroidLanguages()}"

File: app/src/main/java/net/gsantner/markor/frontend/textview/AutoTextFormatter.java
Patch:
@@ -196,7 +196,7 @@ public OrderedListLine getNext() {
         }
 
         public OrderedListLine recreate() {
-            return new OrderedListLine(text, (lineEnd + lineStart) / 2, patterns);
+            return new OrderedListLine(text, lineStart, patterns);
         }
     }
 
@@ -361,10 +361,10 @@ private static String getNextOrderedValue(final String currentValue, final boole
         final Pattern capitalLetterPattern = Pattern.compile("[A-z]");
 
         if (numberPattern.matcher(currentValue).find()) {
-            int intValue = Integer.parseInt(currentValue);
+            final int intValue = TextViewUtils.tryParseInt(currentValue, 0);
             return restart ? "1" : Integer.toString(intValue + 1);
         } else {
-            char charValue = currentValue.charAt(0);
+            final char charValue = currentValue.charAt(0);
             if (lowercaseLetterPattern.matcher(currentValue).find()) {
                 return (restart || charValue >= 'z') ? "a" : String.valueOf(charValue + 1);
             } else if (capitalLetterPattern.matcher(currentValue).find()) {

File: app/src/main/java/net/gsantner/markor/format/ActionButtonBase.java
Patch:
@@ -596,7 +596,7 @@ protected final boolean runCommonAction(final @StringRes int action) {
                 return true;
             }
             case R.string.abid_common_ordered_list_renumber: {
-                renumberOrderedList(TextViewUtils.getSelection(_hlEditor)[0]);
+                renumberOrderedList();
                 return true;
             }
             case R.string.abid_common_move_text_one_line_up:
@@ -765,7 +765,7 @@ public static void moveLineSelectionBy1(final HighlightingEditor hlEditor, final
     }
 
     // Derived classes should override this to implement format-specific renumber logic
-    protected void renumberOrderedList(final int cursorPosition) {
+    protected void renumberOrderedList() {
         // No-op in base class
     }
 
@@ -775,7 +775,7 @@ public final void runRenumberOrderedListIfRequired() {
 
     public final void runRenumberOrderedListIfRequired(final boolean force) {
         if (force || _hlEditor.getAutoFormatEnabled()) {
-            _hlEditor.withAutoFormatDisabled(() -> renumberOrderedList(TextViewUtils.getSelection(_hlEditor)[0]));
+            _hlEditor.withAutoFormatDisabled(this::renumberOrderedList);
         }
     }
 

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownActionButtons.java
Patch:
@@ -212,7 +212,7 @@ public boolean runTitleClick() {
     }
 
     @Override
-    protected void renumberOrderedList(final int position) {
-        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, MarkdownReplacePatternGenerator.formatPatterns);
+    protected void renumberOrderedList() {
+        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), MarkdownReplacePatternGenerator.formatPatterns);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextActionButtons.java
Patch:
@@ -62,8 +62,8 @@ int getFormatActionsKey() {
     }
 
     @Override
-    protected void renumberOrderedList(final int position) {
+    protected void renumberOrderedList() {
         // Use markdown format for plain text too
-        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, MarkdownReplacePatternGenerator.formatPatterns);
+        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), MarkdownReplacePatternGenerator.formatPatterns);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/wikitext/WikitextActionButtons.java
Patch:
@@ -292,7 +292,7 @@ public boolean runTitleClick() {
     }
 
     @Override
-    protected void renumberOrderedList(final int position) {
-        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, WikitextReplacePatternGenerator.formatPatterns);
+    protected void renumberOrderedList() {
+        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), WikitextReplacePatternGenerator.formatPatterns);
     }
 }
\ No newline at end of file

File: app/src/main/java/net/gsantner/markor/format/TextConverterBase.java
Patch:
@@ -23,6 +23,7 @@
 import net.gsantner.markor.model.AppSettings;
 import net.gsantner.markor.model.Document;
 import net.gsantner.opoc.format.GsTextUtils;
+import net.gsantner.opoc.util.GsContextUtils;
 
 import java.io.File;
 import java.util.Date;
@@ -140,7 +141,7 @@ protected String getFileExtension(File file) {
 
     protected String putContentIntoTemplate(Context context, String content, boolean isExportInLightMode, File file, String onLoadJs, String head) {
         final String contentLower = content.toLowerCase();
-        boolean darkTheme = _appSettings.isDarkThemeEnabled() && !isExportInLightMode;
+        boolean darkTheme = GsContextUtils.instance.isDarkModeEnabled(context) && !isExportInLightMode;
         String html = HTML_DOCTYPE + HTML001_HEAD_WITH_BASESTYLE.replace(TOKEN_POST_LANG, Locale.getDefault().getLanguage()) + (darkTheme ? HTML002_HEAD_WITH_STYLE_DARK : HTML002_HEAD_WITH_STYLE_LIGHT);
         if (isExportInLightMode) {
             html = html.replace("html,body{color:#303030;}", "html,body{color: black !important; background-color: white !important;}");

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -42,6 +42,7 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.TextConverterBase;
+import net.gsantner.opoc.util.GsContextUtils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -261,7 +262,7 @@ public String convertMarkup(String markup, Context context, boolean isExportInLi
         }
 
         // Enable View (block) code syntax highlighting
-        final String xt = getViewHlPrismIncludes(context, (_appSettings.isDarkThemeEnabled() ? "-tomorrow" : ""));
+        final String xt = getViewHlPrismIncludes(context, (GsContextUtils.instance.isDarkModeEnabled(context) ? "-tomorrow" : ""));
         head += xt;
 
         // Jekyll: Replace {{ site.baseurl }} with ..--> usually used in Jekyll blog _posts folder which is one folder below repository root, for reference to e.g. pictures in assets folder

File: app/src/main/java/net/gsantner/markor/frontend/MarkorDialogFactory.java
Patch:
@@ -48,6 +48,7 @@
 import net.gsantner.markor.frontend.textview.TextViewUtils;
 import net.gsantner.markor.model.AppSettings;
 import net.gsantner.opoc.frontend.GsSearchOrCustomTextDialog;
+import net.gsantner.opoc.util.GsContextUtils;
 import net.gsantner.opoc.util.GsFileUtils;
 import net.gsantner.opoc.wrapper.GsCallback;
 
@@ -694,7 +695,7 @@ public static void showInsertSnippetDialog(final Activity activity, final GsCall
     }
 
     public static void baseConf(Activity activity, GsSearchOrCustomTextDialog.DialogOptions dopt) {
-        dopt.isDarkDialog = as().isDarkThemeEnabled();
+        dopt.isDarkDialog = GsContextUtils.instance.isDarkModeEnabled(activity);
         dopt.clearInputIcon = R.drawable.ic_baseline_clear_24;
         dopt.textColor = ContextCompat.getColor(activity, R.color.primary_text);
         dopt.highlightColor = ContextCompat.getColor(activity, R.color.accent);

File: app/src/main/java/net/gsantner/markor/frontend/textview/SyntaxHighlighterBase.java
Patch:
@@ -35,6 +35,7 @@
 import net.gsantner.markor.format.general.ColorUnderlineSpan;
 import net.gsantner.markor.format.plaintext.PlaintextSyntaxHighlighter;
 import net.gsantner.markor.model.AppSettings;
+import net.gsantner.opoc.util.GsContextUtils;
 import net.gsantner.opoc.wrapper.GsCallback;
 
 import java.util.ArrayList;
@@ -87,7 +88,7 @@ public SyntaxHighlighterBase configure() {
      * @return Highlighter
      */
     public SyntaxHighlighterBase configure(@Nullable final Paint paint) {
-        _isDarkMode = _appSettings.isDarkThemeEnabled();
+        _isDarkMode = GsContextUtils.instance.isDarkModeEnabled(_appSettings.getContext());
         _fontFamily = _appSettings.getFontFamily();
         _textColor = _appSettings.getEditorForegroundColor();
         if (paint != null) {

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownActionButtons.java
Patch:
@@ -141,7 +141,7 @@ public boolean onActionClick(final @StringRes int action) {
                 return true;
             }
             default: {
-                return runCommonTextAction(action);
+                return runCommonAction(action);
             }
         }
     }
@@ -170,7 +170,7 @@ public boolean onActionLongClick(final @StringRes int action) {
                 return true;
             }
             default: {
-                return runCommonLongPressTextActions(action);
+                return runCommonLongPressAction(action);
             }
         }
     }

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtActionButtons.java
Patch:
@@ -199,7 +199,7 @@ public void run() {
                 return true;
             }
             default: {
-                return runCommonTextAction(action);
+                return runCommonAction(action);
             }
         }
     }
@@ -230,7 +230,7 @@ public boolean onActionLongClick(final @StringRes int action) {
                 return true;
             }
             default: {
-                return runCommonLongPressTextActions(action);
+                return runCommonLongPressAction(action);
             }
         }
     }

File: app/src/main/java/net/gsantner/markor/format/wikitext/WikitextActionButtons.java
Patch:
@@ -165,7 +165,7 @@ public boolean onActionClick(final @StringRes int action) {
                 return true;
             }
             default: {
-                return runCommonTextAction(action);
+                return runCommonAction(action);
             }
         }
     }
@@ -199,7 +199,7 @@ public boolean onActionLongClick(final @StringRes int action) {
                 return true;
             }
             default: {
-                return runCommonLongPressTextActions(action);
+                return runCommonLongPressAction(action);
             }
         }
     }
@@ -210,7 +210,7 @@ private void openLink() {
 
         if (fullWikitextLink == null) {
             // the link under the cursor is not a wikitext link, probably just a plain url
-            runCommonTextAction(R.string.abid_common_open_link_browser);
+            runCommonAction(R.string.abid_common_open_link_browser);
             return;
         }
 

File: app/src/main/java/net/gsantner/markor/model/AppSettings.java
Patch:
@@ -311,7 +311,7 @@ public boolean isEditorStartEditingInCenter() {
         return getBool(R.string.pref_key__editor_start_editing_in_center, false);
     }
 
-    public int getEditorTextActionItemPadding() {
+    public int getEditorActionButtonItemPadding() {
         return getInt(R.string.pref_key__editor_textaction_bar_item_padding, 8);
     }
 

File: app/src/flavorAtest/java/net/gsantner/opoc/util/GsAndroidSupportMeWrapper.java
Patch:
@@ -56,7 +56,7 @@ public void mainOnResume(final Context context) {
         }
     }
 
-    private class LocalSettingsImpl extends GsSharedPreferencesPropertyBackend {
+    private static class LocalSettingsImpl extends GsSharedPreferencesPropertyBackend {
         private final SharedPreferences _prefCache;
 
         public LocalSettingsImpl(Context context) {

File: app/src/main/java/net/gsantner/markor/activity/ActionButtonSettingsActivity.java
Patch:
@@ -20,10 +20,10 @@
 import android.view.ViewGroup;
 import android.widget.ImageView;
 import android.widget.RelativeLayout;
-import android.widget.Switch;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.SwitchCompat;
 import androidx.recyclerview.widget.DividerItemDecoration;
 import androidx.recyclerview.widget.ItemTouchHelper;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -159,7 +159,7 @@ private Holder(View row) {
         }
 
         private void bindModel(final ActionButtonBase.ActionItem action, final String key, final Set<String> disabled) {
-            final Switch enabled = _row.findViewById(R.id.enabled_switch);
+            final SwitchCompat enabled = _row.findViewById(R.id.enabled_switch);
             enabled.setOnCheckedChangeListener(null);
 
             enabled.setChecked(!disabled.contains(key));

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -107,7 +107,7 @@ public void onPageSelected(int position) {
         // Switch to tab if specific folder _not_ requested, and not recreating from saved instance
         final int startTab = _appSettings.getAppStartupTab();
         if (startTab != R.id.nav_notebook && savedInstanceState == null && getIntentDir(getIntent(), null) == null) {
-            _bottomNav.postDelayed(() -> _bottomNav.setSelectedItemId(startTab), 10);
+            _viewPager.postDelayed(() -> _viewPager.setCurrentItem(tabIdToPos(startTab)), 100);
         }
     }
 

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -183,7 +183,6 @@ public void doUpdatePreferences() {
                 updateSummary(R.string.pref_key__set_encryption_password, getString(R.string.hidden_password));
             }
 
-
             final int[] experimentalKeys = new int[]{
                     R.string.pref_key__swipe_to_change_mode,
                     R.string.pref_key__todotxt__hl_delay,

File: app/src/main/java/net/gsantner/markor/format/binary/EmbedBinaryTextConverter.java
Patch:
@@ -76,7 +76,7 @@ public String convertMarkup(String markup, Context context, boolean isExportInLi
                 converted += "<button type='button floatl' class='fa' onclick=\"javascript:document.avSeek(-30);\"/>⏩</button>";
                 converted += "<button type='button floatl' class='fa' onclick=\"javascript:document.avSetPlaylistPos(null, +1);\"/>⏭️</button>";
                 converted += "<button type='button floatl' class='fa' onclick=\"javascript:document.avLoopToggle();\"/>&#128257;</button>";
-                converted += "<p id='avCurrentPlayedTitleP' style='margin: 0px; margin-bottom: 2px;" + (extWithDot.matches(EXT_MATCHES_M3U_PLAYLIST) ? "" : "display:none;") +  "'></p>";
+                converted += "<p id='avCurrentPlayedTitleP' style='margin: 0px; margin-bottom: 2px;" + (extWithDot.matches(EXT_MATCHES_M3U_PLAYLIST) ? "" : "display:none;") + "'></p>";
 
                 onLoadJs += "document.playlist = []; document.playlistTitles = []; document.playlistIndex = -1;";
                 onLoadJs += "document.avLoopToggle = function()      { var o=document.getElementsByClassName('htmlav')[0]; o.loop = !o.loop; };";

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownActionButtons.java
Patch:
@@ -213,6 +213,6 @@ public boolean runTitleClick() {
 
     @Override
     protected void renumberOrderedList(final int position) {
-        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, MarkdownAutoTextFormatter.getPrefixPatterns());
+        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, MarkdownReplacePatternGenerator.formatPatterns);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextActionButtons.java
Patch:
@@ -16,7 +16,7 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.ActionButtonBase;
-import net.gsantner.markor.format.markdown.MarkdownAutoTextFormatter;
+import net.gsantner.markor.format.markdown.MarkdownReplacePatternGenerator;
 import net.gsantner.markor.frontend.textview.AutoTextFormatter;
 import net.gsantner.markor.model.Document;
 
@@ -64,6 +64,6 @@ int getFormatActionsKey() {
     @Override
     protected void renumberOrderedList(final int position) {
         // Use markdown format for plain text too
-        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, MarkdownAutoTextFormatter.getPrefixPatterns());
+        AutoTextFormatter.renumberOrderedList(_hlEditor.getText(), position, MarkdownReplacePatternGenerator.formatPatterns);
     }
 }

File: app/src/main/java/net/gsantner/markor/frontend/AttachLinkOrFileDialog.java
Patch:
@@ -26,7 +26,7 @@
 import net.gsantner.markor.ApplicationObject;
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.FormatRegistry;
-import net.gsantner.markor.format.markdown.MarkdownHighlighterPattern;
+import net.gsantner.markor.format.markdown.MarkdownSyntaxHighlighter;
 import net.gsantner.markor.frontend.filebrowser.MarkorFileBrowserFactory;
 import net.gsantner.markor.frontend.textview.HighlightingEditor;
 import net.gsantner.markor.model.AppSettings;
@@ -118,7 +118,7 @@ public static Dialog showInsertImageOrLinkDialog(final int action, final int tex
                 }
 
                 final String line = contentText.subSequence(lineStartidx, lineEndidx).toString();
-                Matcher m = (action == FILE_OR_LINK_ACTION ? MarkdownHighlighterPattern.ACTION_LINK_PATTERN : MarkdownHighlighterPattern.ACTION_IMAGE_PATTERN).pattern.matcher(line);
+                Matcher m = (action == FILE_OR_LINK_ACTION ? MarkdownSyntaxHighlighter.ACTION_LINK_PATTERN : MarkdownSyntaxHighlighter.ACTION_IMAGE_PATTERN).matcher(line);
                 if (m.find() && startCursorPos > lineStartidx + m.start() && startCursorPos < m.end() + lineStartidx) {
                     int stat = lineStartidx + m.start();
                     int en = lineStartidx + m.end();

File: app/src/main/java/net/gsantner/markor/frontend/textview/ListHandler.java
Patch:
@@ -20,9 +20,9 @@ public class ListHandler implements TextWatcher {
     private boolean alreadyRunning = false; // Prevent this instance from triggering itself
     private Pair<Integer, Integer> _deleteRegion;
 
-    private final AutoTextFormatter.PrefixPatterns _prefixPatterns;
+    private final AutoTextFormatter.FormatPatterns _prefixPatterns;
 
-    public ListHandler(final AutoTextFormatter.PrefixPatterns prefixPatterns) {
+    public ListHandler(final AutoTextFormatter.FormatPatterns prefixPatterns) {
         super();
         _prefixPatterns = prefixPatterns;
     }

File: app/src/test/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPatternBoldTest.java
Patch:
@@ -23,7 +23,7 @@ public class MarkdownHighlighterPatternBoldTest {
 
     @Before
     public void before() {
-        pattern = MarkdownHighlighterPattern.BOLD.pattern;
+        pattern = MarkdownSyntaxHighlighter.BOLD;
     }
 
     @Test

File: app/src/test/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPatternItalicTest.java
Patch:
@@ -23,7 +23,7 @@ public class MarkdownHighlighterPatternItalicTest {
 
     @Before
     public void before() {
-        pattern = MarkdownHighlighterPattern.ITALICS.pattern;
+        pattern = MarkdownSyntaxHighlighter.ITALICS;
     }
 
     @Test

File: app/src/test/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPatternListTest.java
Patch:
@@ -23,7 +23,7 @@ public class MarkdownHighlighterPatternListTest {
 
     @Before
     public void before() {
-        pattern = MarkdownHighlighterPattern.LIST_UNORDERED.pattern;
+        pattern = MarkdownSyntaxHighlighter.LIST_UNORDERED;
     }
 
     @Test

File: app/src/test/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPatternOrderedListTest.java
Patch:
@@ -23,7 +23,7 @@ public class MarkdownHighlighterPatternOrderedListTest {
 
     @Before
     public void before() {
-        pattern = MarkdownHighlighterPattern.LIST_ORDERED.pattern;
+        pattern = MarkdownSyntaxHighlighter.LIST_ORDERED;
     }
 
     @Test

File: app/src/test/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPatternStrikethroughTest.java
Patch:
@@ -23,7 +23,7 @@ public class MarkdownHighlighterPatternStrikethroughTest {
 
     @Before
     public void before() {
-        pattern = MarkdownHighlighterPattern.STRIKETHROUGH.pattern;
+        pattern = MarkdownSyntaxHighlighter.STRIKETHROUGH;
     }
 
     @Test

File: app/src/test/java/net/gsantner/markor/format/wikitext/WikitextFileTests.java
Patch:
@@ -51,15 +51,15 @@ public static class ZimFileHeaderTest {
 
         @Test
         public void zimHeaderAtBeginningOfTheFileShouldMatch() {
-            pattern = WikitextSyntaxHighlighter.Patterns.ZIMHEADER.pattern;
+            pattern = WikitextSyntaxHighlighter.ZIMHEADER;
             Matcher matcher = pattern.matcher("Content-Type: text/x-zim-wiki\nWiki-Format: zim 0.4\nCreation-Date: 2019-03-31T14:48:06+02:00\nOther content...");
             assertThat(matcher.find()).isTrue();
             assertThat(matcher.group()).isEqualTo("Content-Type: text/x-zim-wiki\nWiki-Format: zim 0.4\nCreation-Date: 2019-03-31T14:48:06+02:00");
         }
 
         @Test
         public void zimHeaderNotAtBeginningOfTheFileShouldNotMatch() {
-            pattern = WikitextSyntaxHighlighter.Patterns.ZIMHEADER.pattern;
+            pattern = WikitextSyntaxHighlighter.ZIMHEADER;
             Matcher matcher = pattern.matcher("Blabla\nContent-Type: text/x-zim-wiki\nWiki-Format: zim 0.4\nCreation-Date: 2019-03-31T14:48:06+02:00");
             assertThat(matcher.find()).isFalse();
         }

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditAndViewFragment.java
Patch:
@@ -208,6 +208,8 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
 
         _hlEditor.setGravity(_appSettings.isEditorStartEditingInCenter() ? Gravity.CENTER : Gravity.NO_GRAVITY);
 
+        _hlEditor.setSaveInstanceState(false); // We will reload from disk
+
         // Do not need to send contents to accessibility
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             _hlEditor.setImportantForAccessibility(View.IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS);

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditAndViewFragment.java
Patch:
@@ -299,7 +299,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.document__edit__menu, menu);
         _cu.tintMenuItems(menu, true, Color.WHITE);
-        _cu.setSubMenuIconsVisiblity(menu, true);
+        _cu.setSubMenuIconsVisibility(menu, true);
 
         final boolean isExperimentalFeaturesEnabled = _appSettings.isExperimentalFeaturesEnabled();
         final boolean isText = !_document.isBinaryFileNoTextLoading();

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -180,7 +180,7 @@ public boolean onCreateOptionsMenu(final Menu menu) {
         menu.findItem(R.id.action_settings).setVisible(_appSettings.isShowSettingsOptionInMainToolbar());
 
         _cu.tintMenuItems(menu, true, Color.WHITE);
-        _cu.setSubMenuIconsVisiblity(menu, true);
+        _cu.setSubMenuIconsVisibility(menu, true);
         return true;
     }
 

File: app/src/main/java/net/gsantner/markor/frontend/NewFileDialog.java
Patch:
@@ -190,7 +190,7 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
                                 arg_fos.write(0xBB);
                                 arg_fos.write(0xBF);
                             }
-                            if (templateContents != null && (!f.exists() || f.length() < MarkorContextUtils.MIN_OVERWRITE_LENGTH)) {
+                            if (templateContents != null && (!f.exists() || f.length() < GsContextUtils.TEXTFILE_OVERWRITE_MIN_TEXT_LENGTH)) {
                                 arg_fos.write(templateContents);
                             }
                         } catch (Exception ignored) {

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -28,6 +28,7 @@
 import net.gsantner.markor.format.FormatRegistry;
 import net.gsantner.markor.format.markdown.MarkdownTextConverter;
 import net.gsantner.markor.util.MarkorContextUtils;
+import net.gsantner.opoc.util.GsContextUtils;
 import net.gsantner.opoc.util.GsFileUtils;
 
 import java.io.File;
@@ -284,7 +285,7 @@ public synchronized boolean saveContent(final Activity context, final CharSequen
         if (isBinaryFileNoTextLoading()) {
             return true;
         }
-        if (!isManualSave && TextUtils.getTrimmedLength(content) < MarkorContextUtils.MIN_OVERWRITE_LENGTH) {
+        if (!isManualSave && TextUtils.getTrimmedLength(content) < GsContextUtils.TEXTFILE_OVERWRITE_MIN_TEXT_LENGTH) {
             return false;
         }
 

File: app/src/main/java/net/gsantner/markor/util/MarkorContextUtils.java
Patch:
@@ -34,6 +34,7 @@
 import java.io.File;
 
 public class MarkorContextUtils extends GsContextUtils {
+
     public MarkorContextUtils(@Nullable final Context context) {
         if (context != null) {
             setChooserTitle(context.getString(R.string.share_to_arrow));

File: app/src/main/java/net/gsantner/opoc/frontend/filebrowser/GsFileBrowserFragment.java
Patch:
@@ -324,7 +324,7 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         super.onCreateOptionsMenu(menu, inflater);
         inflater.inflate(R.menu.filesystem__menu, menu);
         _cu.tintMenuItems(menu, true, Color.WHITE);
-        _cu.setSubMenuIconsVisiblity(menu, true);
+        _cu.setSubMenuIconsVisibility(menu, true);
 
         MenuItem item;
         if ((item = menu.findItem(R.id.action_folder_first)) != null) {

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -236,7 +236,7 @@ public boolean saveContent(final Context context, final CharSequence content) {
     }
 
     @SuppressWarnings("ConstantConditions")
-    public synchronized boolean saveContent(final Context context, final CharSequence content, ShareUtil shareUtil, boolean isManualSave) {
+    public synchronized boolean saveContent(final Context context, final CharSequence content, ShareUtil shareUtil1, boolean isManualSave) {
         if (!isManualSave && TextUtils.getTrimmedLength(content) < ShareUtil.MIN_OVERWRITE_LENGTH) {
             return false;
         }
@@ -260,7 +260,7 @@ public synchronized boolean saveContent(final Context context, final CharSequenc
                 contentAsBytes = content.toString().getBytes();
             }
 
-            final ShareUtil shu = (shareUtil != null ? shareUtil : new ShareUtil(context));
+            final ShareUtil shareUtil = (shareUtil1 != null ? shareUtil1 : new ShareUtil(context));
             if (shareUtil.isUnderStorageAccessFolder(_file, false) || shareUtil.isContentResolverProxyFile(_file)) {
                 shareUtil.writeFile(_file, false, (fileOpened, fos) -> {
                     try {
@@ -272,7 +272,7 @@ public synchronized boolean saveContent(final Context context, final CharSequenc
                         fos.write(contentAsBytes);
 
                         // Also overwrite content resolver proxy file in addition to writing back to the origin
-                        if (shu.isContentResolverProxyFile(_file)) {
+                        if (shareUtil.isContentResolverProxyFile(_file)) {
                             FileUtils.writeFile(_file, contentAsBytes, _fileInfo);
                         }
                     } catch (Exception ignored) {

File: app/src/main/java/net/gsantner/markor/activity/MarkorBaseActivity.java
Patch:
@@ -34,7 +34,7 @@ protected void onPreCreate(@Nullable Bundle savedInstanceState) {
 
     @Override
     public Integer getNewNavigationBarColor() {
-        return _activityUtils.parseColor(_appSettings.getNavigationBarColor());
+        return _activityUtils.parseHexColorString(_appSettings.getNavigationBarColor());
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/ui/hleditor/Highlighter.java
Patch:
@@ -48,7 +48,6 @@ public abstract class Highlighter {
 
     protected final static int LONG_HIGHLIGHTING_DELAY = 2400;
 
-    public static final Pattern HEX_CODE_UNDERLINE_PATTERN = Pattern.compile("(?:\\s|[\";,:'*]|^)(#[A-Fa-f0-9]{6,8})+(?:\\s|[\";,:'*]|$)");
     private static final Pattern PATTERN_TAB = Pattern.compile("\t");
 
     protected static Highlighter getDefaultHighlighter(final AppSettings as) {
@@ -411,7 +410,7 @@ protected final void createSmallBlueLinkSpans() {
     }
 
     protected final void createUnderlineHexColorsSpans() {
-        createColoredUnderlineSpanForMatches(HEX_CODE_UNDERLINE_PATTERN, m -> new ColorUnderlineSpan(Color.parseColor(m.group(1)), 3f), 1);
+        createColoredUnderlineSpanForMatches(ColorUnderlineSpan.HEX_CODE_UNDERLINE_PATTERN, m -> new ColorUnderlineSpan(m.group(1), 3f), 1);
     }
 
     // We _do not_ implement UpdateLayout or Parcelable for performance reasons

File: app/src/main/java/net/gsantner/opoc/ui/SearchOrCustomTextDialog.java
Patch:
@@ -308,6 +308,8 @@ public static void showMultiChoiceDialogWithSearchFilterUI(final Activity activi
         if (win != null) {
             int ds_w = dopt.dialogWidthDp < 100 ? dopt.dialogWidthDp : ((int) (dopt.dialogWidthDp * activity.getResources().getDisplayMetrics().density));
             int ds_h = dopt.dialogHeightDp < 100 ? dopt.dialogHeightDp : ((int) (dopt.dialogHeightDp * activity.getResources().getDisplayMetrics().density));
+            ds_w = (ds_w*1.1 > activity.getResources().getDisplayMetrics().widthPixels) ? ViewGroup.LayoutParams.MATCH_PARENT : ds_w;
+            ds_h = (ds_h*1.1 > activity.getResources().getDisplayMetrics().heightPixels) ? ViewGroup.LayoutParams.MATCH_PARENT : ds_h;
             win.setLayout(ds_w, ds_h);
         }
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -681,11 +681,11 @@ public boolean checkPermissions() {
         if (_document != null) {
             final File file = _document.getFile();
 
-            if (_shareUtil.isUnderStorageAccessFolder(file) && _shareUtil.getStorageAccessFrameworkTreeUri() == null) {
+            if (_shareUtil.isUnderStorageAccessFolder(file, false) && _shareUtil.getStorageAccessFrameworkTreeUri() == null) {
                 _shareUtil.showMountSdDialog(getActivity());
             }
 
-            final boolean permok = _document.testCreateParent() && _shareUtil.canWriteFile(file, false);
+            final boolean permok = _document.testCreateParent() && _shareUtil.canWriteFile(file, false, true);
             _textSdWarning.setVisibility(permok ? View.GONE : View.VISIBLE);
             return permok;
         }

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -283,7 +283,7 @@ public void onClickFab(View view) {
         if (permc.mkdirIfStoragePermissionGranted()) {
             switch (view.getId()) {
                 case R.id.fab_add_new_item: {
-                    if (_shareUtil.isUnderStorageAccessFolder(fsFrag.getCurrentFolder()) && _shareUtil.getStorageAccessFrameworkTreeUri() == null) {
+                    if (_shareUtil.isUnderStorageAccessFolder(fsFrag.getCurrentFolder(), true) && _shareUtil.getStorageAccessFrameworkTreeUri() == null) {
                         _shareUtil.showMountSdDialog(this);
                         return;
                     }

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -261,7 +261,7 @@ public synchronized boolean saveContent(final Context context, final CharSequenc
             }
 
             final ShareUtil shu = (shareUtil != null ? shareUtil : new ShareUtil(context));
-            if (shareUtil.isUnderStorageAccessFolder(_file) || shareUtil.isContentResolverProxyFile(_file)) {
+            if (shareUtil.isUnderStorageAccessFolder(_file, false) || shareUtil.isContentResolverProxyFile(_file)) {
                 shareUtil.writeFile(_file, false, (fileOpened, fos) -> {
                     try {
                         if (_fileInfo != null && _fileInfo.hasBom) {

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -205,7 +205,7 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
                     }
                     final String usedFoldername = getFileNameWithoutExtension(fileNameEdit.getText().toString().trim(), templateSpinner.getSelectedItemPosition());
                     File f = new File(basedir, usedFoldername);
-                    if (shareUtil.isUnderStorageAccessFolder(f)) {
+                    if (shareUtil.isUnderStorageAccessFolder(f, true)) {
                         DocumentFile dof = shareUtil.getDocumentFile(f, true);
                         callback(dof != null && dof.exists(), f);
                     } else {

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerFragment.java
Patch:
@@ -255,9 +255,9 @@ private void updateMenuItems() {
             _fragmentMenu.findItem(R.id.action_delete_selected_items).setVisible((selMulti1 || selMultiMore) && selWritable);
             _fragmentMenu.findItem(R.id.action_rename_selected_item).setVisible(selMulti1 && selWritable);
             _fragmentMenu.findItem(R.id.action_info_selected_item).setVisible(selMulti1);
-            _fragmentMenu.findItem(R.id.action_move_selected_items).setVisible((selMulti1 || selMultiMore) && selWritable && !_shareUtil.isUnderStorageAccessFolder(getCurrentFolder()));
-            _fragmentMenu.findItem(R.id.action_copy_selected_items).setVisible((selMulti1 || selMultiMore) && selWritable && !_shareUtil.isUnderStorageAccessFolder(getCurrentFolder()));
-            _fragmentMenu.findItem(R.id.action_share_files).setVisible(selFilesOnly && (selMulti1 || selMultiMore) && !_shareUtil.isUnderStorageAccessFolder(getCurrentFolder()));
+            _fragmentMenu.findItem(R.id.action_move_selected_items).setVisible((selMulti1 || selMultiMore) && selWritable && !_shareUtil.isUnderStorageAccessFolder(getCurrentFolder(), true));
+            _fragmentMenu.findItem(R.id.action_copy_selected_items).setVisible((selMulti1 || selMultiMore) && selWritable && !_shareUtil.isUnderStorageAccessFolder(getCurrentFolder(), true));
+            _fragmentMenu.findItem(R.id.action_share_files).setVisible(selFilesOnly && (selMulti1 || selMultiMore) && !_shareUtil.isUnderStorageAccessFolder(getCurrentFolder(), true));
             _fragmentMenu.findItem(R.id.action_go_to).setVisible(!_filesystemViewerAdapter.areItemsSelected());
             _fragmentMenu.findItem(R.id.action_sort).setVisible(!_filesystemViewerAdapter.areItemsSelected());
             _fragmentMenu.findItem(R.id.action_import).setVisible(!_filesystemViewerAdapter.areItemsSelected() && !_filesystemViewerAdapter.isCurrentFolderVirtual());

File: app/thirdparty/java/other/writeily/model/WrMarkorSingleton.java
Patch:
@@ -108,7 +108,7 @@ public boolean deleteFile(final File file, final Context context) {
         }
 
         final ShareUtil shareUtil = new ShareUtil(context);
-        if (context != null && shareUtil.isUnderStorageAccessFolder(file)) {
+        if (context != null && shareUtil.isUnderStorageAccessFolder(file, file.isDirectory())) {
             final DocumentFile dof = shareUtil.getDocumentFile(file, file.isDirectory());
             shareUtil.freeContextRef();
             return dof == null ? false : (dof.delete() || !dof.exists());

File: app/thirdparty/java/other/writeily/ui/WrRenameDialog.java
Patch:
@@ -78,7 +78,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             if (filenameChanged) {
                 _filenameClash = optShowFilenameClashDialog(file, newFileName);
             }
-            if (shareUtil.isUnderStorageAccessFolder(file)) {
+            if (shareUtil.isUnderStorageAccessFolder(file, file.isDirectory())) {
                 DocumentFile dof = shareUtil.getDocumentFile(file, file.isDirectory());
                 if (dof != null) {
                     if (!_filenameClash) {

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -309,7 +309,7 @@ public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
                 }
                 case R.string.pref_key__editor_basic_color_scheme_markor: {
                     _as.setEditorBasicColor(true, R.color.white, R.color.dark_grey);
-                    _as.setEditorBasicColor(false, R.color.dark_grey, R.color.background);
+                    _as.setEditorBasicColor(false, R.color.dark_grey, R.color.light__background);
                     break;
                 }
                 case R.string.pref_key__editor_basic_color_scheme_blackorwhite: {

File: app/src/main/java/net/gsantner/markor/format/TextConverter.java
Patch:
@@ -45,7 +45,7 @@ public abstract class TextConverter {
     protected static final String TOKEN_POST_LANG = "{{ post.lang }}";
 
     protected static final String HTML_DOCTYPE = "<!DOCTYPE html>";
-    protected static final String HTML001_HEAD_WITH_BASESTYLE = "<html lang='" + TOKEN_POST_LANG + "'><head>" + CSS_S + "html,body{padding:4px 8px 4px 8px;font-family:'" + TOKEN_FONT + "';}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color: " + TOKEN_LINK_COLOR + ";text-decoration:underline;}img{height:auto;width:325px;margin:auto;}" + CSS_E;
+    protected static final String HTML001_HEAD_WITH_BASESTYLE = "<html lang='" + TOKEN_POST_LANG + "'><head>" + CSS_S + "html,body{padding:4px 8px 4px 8px;font-family:'" + TOKEN_FONT + "';}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color: " + TOKEN_LINK_COLOR + ";text-decoration:underline;}img{height:auto;max-width:100%;max-height: 90vh;margin:auto;}" + CSS_E;
     protected static final String HTML002_HEAD_WITH_STYLE_LIGHT = CSS_S + "html,body{color:#303030;}blockquote{color:#73747d;}" + CSS_E;
     protected static final String HTML002_HEAD_WITH_STYLE_DARK = CSS_S + "html,body{color:#ffffff;background-color:#303030;}a:visited{color:#dddddd;}blockquote{color:#cccccc;}" + CSS_E;
     protected static final String HTML003_RIGHT_TO_LEFT = CSS_S + "body{text-align:" + TOKEN_TEXT_DIRECTION + ";direction:rtl;}" + CSS_E;

File: app/src/main/java/net/gsantner/opoc/ui/SearchOrCustomTextDialog.java
Patch:
@@ -268,7 +268,7 @@ public static void showMultiChoiceDialogWithSearchFilterUI(final Activity activi
         // =========================================================================================
 
         // Ok button action
-        if ((dopt.callback != null) || (dopt.isMultiSelectEnabled)) {
+        if (((dopt.callback != null) || (dopt.isMultiSelectEnabled)) && dopt.okButtonText != 0) {
             dialogBuilder.setPositiveButton(dopt.okButtonText, (dialogInterface, i) -> {
                 final String searchText = dopt.isSearchEnabled ? searchEditText.getText().toString() : null;
                 if (dopt.positionCallback != null && !listAdapter._selectedItems.isEmpty()) {
@@ -284,7 +284,7 @@ public static void showMultiChoiceDialogWithSearchFilterUI(final Activity activi
         final AlertDialog dialog = dialogBuilder.create();
 
         searchEditText.setOnKeyListener((keyView, keyCode, keyEvent) -> {
-            if ((keyEvent.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER)) {
+            if ((keyEvent.getAction() == KeyEvent.ACTION_DOWN) && (keyCode == KeyEvent.KEYCODE_ENTER) && dopt.okButtonText != 0) {
                 dialog.dismiss();
                 if (dopt.callback != null && !TextUtils.isEmpty(searchEditText.getText().toString())) {
                     dopt.callback.callback(searchEditText.getText().toString());

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -222,8 +222,8 @@ private void callback(boolean ok, File file) {
     }
 
     // How to get content out of a file:
-    // 1) Replace \n with \\n | copy to clipboard
-    //    cat markor-markdown-reference.md  | sed 's@\\@\\\\@g' | sed -z 's@\n@\\n@g'  | xclip
+    // 1) Replace \n with \n | copy to clipboard
+    //    cat markor-markdown-reference.md  | sed 's@\\@\\\\@g' | sed -z 's@\n@\n@g'  | xclip
     //
     // 2) t = "<cursor>";  | ctrl+shift+v "paste without formatting"
     //
@@ -233,7 +233,7 @@ private byte[] getTemplateContent(final Spinner templateSpinner, final File base
         byte[] bytes = null;
         switch (templateSpinner.getSelectedItemPosition()) {
             case 1: {
-                t = "# Markdown Reference\nAutomatically generate _table of contents_ by checking the option here: `Settings > Format > Markdown`.\n\n## H2 Header\n### H3 header\n#### H4 Header\n##### H5 Header\n###### H6 Header\n\n<!-- --------------- -->\n\n## Format Text\n\n*Italic emphasis* , _Alternative italic emphasis_\n\n**Bold emphasis** , __Alternative bold emphasis__\n\n~~Strikethrough~~\n\nBreak line (two spaces at end of line)  \n\n> Block quote\n\n`Inline code`\n\n```\nCode blocks\nare\nawesome\n```\n\n<!-- --------------- -->\n \n## Lists\n### Ordered & unordered\n\n* Unordered list\n* ...with asterisk/star\n* Test\n\n- Another unordered list\n- ...with hyphen/minus\n- Test\n\n1. Ordered list\n2. Test\n3. Test\n4. Test\n\n- Nested lists\n    * Unordered nested list\n    * Test\n    * Test\n    * Test\n- Ordered nested list\n    1. Test\n    2. Test\n    3. Test\n    4. Test\n- Double-nested unordered list\n    - Test\n    - Unordered\n        - Test a\n        - Test b\n    - Ordered\n        1. Test 1\n        2. Test 2\n\n### Checklist\n* [ ] Salad\n* [x] Potatoes\n\n1. [x] Clean\n2. [ ] Cook\n\n<!-- --------------- -->\n\n## Links\n[Link](https://duckduckgo.com/)\n\n[File in same folder as the document.](markor-markdown-reference.md) Use %20 for spaces!\n\n<!-- --------------- -->\n\n## Tables\n\n| Left aligned | Middle aligned | Right aligned |\n| :--------------- | :------------------: | -----------------: |\n| Test                 | Test                      | Test                    |\n| Test                 | Test                      | Test                    |\n\n÷÷÷÷\n\nShorter | Table | Syntax\n:---: | ---: | :---\nTest | Test | Test\nTest | Test | Test\n\n<!-- Comment: Not visibile in view. Can also span across multiple lines. End with:-->\n\n<!-- --------------- -->\n\n## Math (KaTeX)\nSee [reference](https://katex.org/docs/supported.html) & [examples](https://github.com/waylonflinn/markdown-it-katex/blob/master/README.md). Enable by checking Math at `Settings > Markdown`.\n\n### Math inline\n\n$ I = \\frac V R $\n\n### Math block\n\n$$\\begin{array}{c} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{array}$$\n\n\n$$\\frac{k_t}{k_e} = \\sqrt{2}$$\n\n<!-- --------------- -->\n\n## Format Text (continued)\n\n### Text color\n\n<span style='background-color:#ffcb2e;'>Text with background color / highlight</span>\n\n<span style='color:#3333ff;'>Text foreground color</span>\n\n<span style='text-shadow: 0px 0px 2px #FF0000;'>Text with colored outline</span> / <span style='text-shadow: 0px 0px 2px #0000FF; color: white'>Text with colored outline</span>\n\n\n### Text sub & superscript\n\n<u>Underline</u>\n\nThe <sub>Subway</sub> sandwich was <sup>super</sup>\n\nSuper special characters: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ ™ ® ℠\n\n### Text positioning\n<div markdown='1' align='right'>\n\ntext on the **right**\n\n</div>\n\n<div markdown='1' align='center'>\n\ntext in the **center**  \n(one empy line above and below  \nrequired for Markdown support OR markdown='1')\n\n</div>\n\n### Block Text\n\n<div markdown='1' style='text-align: justify; text-justify: inter-word;'>\nlorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \n</div>\n\n### Dropdown\n\n<details markdown='1'><summary>Click to Expand/Collapse</summary>\n\nExpanded content. Shows up and keeps visible when clicking expand. Hide again by clicking the dropdown button again.\n\n</details>\n\n\n<!-- --------------- -->\n\n## Multimedia\n\n### Images\n![Image](https://gsantner.net/assets/blog/img/markor/markor-v1-7-showcase-3.jpg)\n\n### Videos\n**Youtube** [Welcome to Upper Austria](https://www.youtube.com/watch?v=RJREFH7Lmm8)\n<iframe width='360' height='200' src='https://www.youtube.com/embed/RJREFH7Lmm8'> </iframe>\n\n**Peertube** [Road in the wood](https://open.tube/videos/watch/8116312a-dbbd-43a3-9260-9ea6367c72fc)\n<div><video controls><source src='https://peertube.mastodon.host/download/videos/8116312a-dbbd-43a3-9260-9ea6367c72fc-480.mp4' </source></video></div>\n\n<!-- **Local video** <div><video controls><source src='voice-parrot.mp4' </source></video></div> -->\n\n### Audio & Music\n**Web audio** [Guifrog - Xia Yu](https://www.freemusicarchive.org/music/Guifrog/Xia_Yu)\n<audio controls src='https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Guifrog/Xia_Yu/Guifrog_-_Xia_Yu.mp3'></audio>\n\n**Local audio** Yellowcard - Lights up in the sky\n<audio controls src='../Music/mp3/Yellowcard/[2007]%20Paper%20Walls/Yellowcard%20-%2005%20-%20Light%20Up%20the%20Sky.mp3'></audio>\n\n## Admonition Extension\nCreate block-styled side content.  \nUse one of these qualifiers to select the icon and the block color: abstract, summary, tldr, bug, danger, error, example, snippet, failure, fail, missing, question, help, faq, info, todo, note, seealso, quote, cite, success, check, done, tip, hint, important, warning, caution, attention.\n\n!!! warning 'Optional Title'\n    Block-Styled Side Content with **Markdown support**\n\n!!! info ''\n    No-Heading Content\n\n??? bug 'Collapsed by default'\n    Collapsible Block-Styled Side Content\n\n???+ example 'Open by default'\n     Collapsible Block-Styled Side Content\n\n------------------\n\nThis Markdown reference file was created for the [Markor](https://gsantner.net/project/markor?source=markdownref) project by [Gregor Santner](https://gsantner.net) and is licensed [Creative Commons Zero 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) (public domain). File revision 3.\n\n------------------\n\n\n";
+                t = "# Markdown Reference\nAutomatically generate _table of contents_ by checking the option here: `Settings > Format > Markdown`.\n\n## H2 Header\n### H3 header\n#### H4 Header\n##### H5 Header\n###### H6 Header\n\n<!-- --------------- -->\n\n## Format Text\n\n*Italic emphasis* , _Alternative italic emphasis_\n\n**Bold emphasis** , __Alternative bold emphasis__\n\n~~Strikethrough~~\n\nBreak line (two spaces at end of line)  \n\n> Block quote\n\n`Inline code`\n\n```\nCode blocks\nare\nawesome\n```\n\n<!-- --------------- -->\n \n## Lists\n### Ordered & unordered\n\n* Unordered list\n* ...with asterisk/star\n* Test\n\n- Another unordered list\n- ...with hyphen/minus\n- Test\n\n1. Ordered list\n2. Test\n3. Test\n4. Test\n\n- Nested lists\n    * Unordered nested list\n    * Test\n    * Test\n    * Test\n- Ordered nested list\n    1. Test\n    2. Test\n    3. Test\n    4. Test\n- Double-nested unordered list\n    - Test\n    - Unordered\n        - Test a\n        - Test b\n    - Ordered\n        1. Test 1\n        2. Test 2\n\n### Checklist\n* [ ] Salad\n* [x] Potatoes\n\n1. [x] Clean\n2. [ ] Cook\n\n<!-- --------------- -->\n\n## Links\n[Link](https://duckduckgo.com/)\n\n[File in same folder as the document.](markor-markdown-reference.md) Use %20 for spaces!\n\n<!-- --------------- -->\n\n## Tables\n\n| Left aligned | Middle aligned | Right aligned |\n| :--------------- | :------------------: | -----------------: |\n| Test                 | Test                      | Test                    |\n| Test                 | Test                      | Test                    |\n\n÷÷÷÷\n\nShorter | Table | Syntax\n:---: | ---: | :---\nTest | Test | Test\nTest | Test | Test\n\n<!-- Comment: Not visibile in view. Can also span across multiple lines. End with:-->\n\n<!-- ------------- -->\n\n## Math (KaTeX)\nSee [reference](https://katex.org/docs/supported.html) & [examples](https://github.com/waylonflinn/markdown-it-katex/blob/master/README.md). Enable by checking Math at `Settings > Markdown`.\n\n### Math inline\n\n$ I = \\frac V R $\n\n### Math block\n\n$$\\begin{array}{c} \nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\ \nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\ \nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{array}$$\n\n\n$$\\frac{k_t}{k_e} = \\sqrt{2}$$\n\n<!-- ------------- -->\n\n## Format Text (continued)\n\n### Text color\n\n<span style='background-color:#ffcb2e;'>Text with background color / highlight</span>\n\n<span style='color:#3333ff;'>Text foreground color</span>\n\n<span style='text-shadow: 0px 0px 2px #FF0000;'>Text with colored outline</span> / <span style='text-shadow: 0px 0px 2px #0000FF; color: white'>Text with colored outline</span>\n\n\n### Text sub & superscript\n\n<u>Underline</u>\n\nThe <sub>Subway</sub> sandwich was <sup>super</sup>\n\nSuper special characters: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ ™ ® ℠\n\n### Text positioning\n<div markdown='1' align='right'>\n\ntext on the **right**\n\n</div>\n\n<div markdown='1' align='center'>\n\ntext in the **center**  \n(one empy line above and below  \nrequired for Markdown support OR markdown='1')\n\n</div>\n\n### Block Text\n\n<div markdown='1' style='text-align: justify; text-justify: inter-word;'>\nlorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \n</div>\n\n### Dropdown\n\n<details markdown='1'><summary>Click to Expand/Collapse</summary>\n\nExpanded content. Shows up and keeps visible when clicking expand. Hide again by clicking the dropdown button again.\n\n</details>\n\n\n### Break page\nTo break the page (/start a new page), put the div below into a own line.\nRelevant for creating printable pages from the document (Print / PDF).\n\n<div style='page-break-after: always'></div>\n\n\n<!-- ------------- -->\n\n## Multimedia\n\n### Images\n![Image](https://gsantner.net/assets/blog/img/markor/markor-v1-7-showcase-3.jpg)\n\n### Videos\n**Youtube** [Welcome to Upper Austria](https://www.youtube.com/watch?v=RJREFH7Lmm8)\n<iframe width='360' height='200' src='https://www.youtube.com/embed/RJREFH7Lmm8'> </iframe>\n\n**Peertube** [Road in the wood](https://open.tube/videos/watch/8116312a-dbbd-43a3-9260-9ea6367c72fc)\n<div><video controls><source src='https://peertube.mastodon.host/download/videos/8116312a-dbbd-43a3-9260-9ea6367c72fc-480.mp4' </source></video></div>\n\n<!-- **Local video** <div><video controls><source src='voice-parrot.mp4' </source></video></div> -->\n\n### Audio & Music\n**Web audio** [Guifrog - Xia Yu](https://www.freemusicarchive.org/music/Guifrog/Xia_Yu)\n<audio controls src='https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Guifrog/Xia_Yu/Guifrog_-_Xia_Yu.mp3'></audio>\n\n**Local audio** Yellowcard - Lights up in the sky\n<audio controls src='../Music/mp3/Yellowcard/[2007]%20Paper%20Walls/Yellowcard%20-%2005%20-%20Light%20Up%20the%20Sky.mp3'></audio>\n\n## Charts / Graphs / Diagrams (mermaidjs)\nPie, flow, sequence, class, state, ER  \nSee also: mermaidjs [live editor](https://mermaid-js.github.io/mermaid-live-editor/).\n\n```mermaid\ngraph LR\n    A[Square Rect] -- Link text --> B((Circle))\n    A --> C(Round Rect)\n    B --> D{Rhombus}\n    C --> D\n```\n\n\n\n## Admonition Extension\nCreate block-styled side content.  \nUse one of these qualifiers to select the icon and the block color: abstract, summary, tldr, bug, danger, error, example, snippet, failure, fail, missing, question, help, faq, info, todo, note, seealso, quote, cite, success, check, done, tip, hint, important, warning, caution, attention.\n\n!!! warning 'Optional Title'\n    Block-Styled Side Content with **Markdown support**\n\n!!! info ''\n    No-Heading Content\n\n??? bug 'Collapsed by default'\n    Collapsible Block-Styled Side Content\n\n???+ example 'Open by default'\n     Collapsible Block-Styled Side Content\n\n------------------\n\nThis Markdown reference file was created for the [Markor](https://gsantner.net/project/markor?source=markdownref) project by [Gregor Santner](https://gsantner.net) and is licensed [Creative Commons Zero 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) (public domain). File revision 3.\n\n------------------\n\n\n";
                 break;
             }
             case 2: {

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -730,11 +730,11 @@ public File getFolderToLoadByMenuId(int itemId) {
     }
 
     public void setShowDotFiles(boolean value) {
-        setBool(R.string.pref_key__show_dot_files, value);
+        setBool(R.string.pref_key__show_dot_files_v2, value);
     }
 
     public boolean isShowDotFiles() {
-        return getBool(R.string.pref_key__show_dot_files, false);
+        return getBool(R.string.pref_key__show_dot_files_v2, true);
     }
 
     public int getTabWidth() {

File: app/src/main/java/net/gsantner/opoc/ui/SearchOrCustomTextDialog.java
Patch:
@@ -78,7 +78,7 @@ public static class DialogOptions {
         public List<? extends CharSequence> data = null;
         public List<? extends CharSequence> highlightData = null;
         public List<Integer> iconsForData;
-        public String messageText = "";
+        public CharSequence messageText = "";
         public String defaultText = "";
         public boolean isSearchEnabled = true;
         public boolean isDarkDialog = false;

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -171,7 +171,7 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
                     final byte[] templateContents = getTemplateContent(templateSpinner, basedir, f.getName(), encryptCheckbox.isChecked());
                     shareUtil.writeFile(f, false, (arg_ok, arg_fos) -> {
                         try {
-                            if (f.exists() && f.length() < ShareUtil.MIN_OVERWRITE_LENGTH && templateContents != null) {
+                            if (templateContents != null && (!f.exists() || f.length() < ShareUtil.MIN_OVERWRITE_LENGTH)) {
                                 arg_fos.write(templateContents);
                             }
                         } catch (Exception ignored) {

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerFragment.java
Patch:
@@ -627,7 +627,7 @@ public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
             public void onFsViewerDoUiUpdate(FilesystemViewerAdapter adapter) {
                 if (_doptMoC.listener instanceof FilesystemViewerDialog) {
                     final TextView titleView = ((FilesystemViewerDialog) _doptMoC.listener)._dialogTitle;
-                    if (titleView != null) {
+                    if (titleView != null && adapter.getCurrentFolder() != null) {
                         titleView.setText(String.format("%s → %s", titleView.getContext().getString(isMove ? R.string.move : R.string.copy), adapter.getCurrentFolder().getName()));
                     }
                 }

File: app/src/main/java/net/gsantner/markor/util/ShortcutUtils.java
Patch:
@@ -90,7 +90,7 @@ public static void setShortcuts(@NonNull Context context) {
             final AppSettings settings = new AppSettings(context);
             final List<String> recentDocuments = settings.getRecentDocuments();
 
-            for (int i = 0; i < MAX_RECENT_DOCUMENTS; i++) {
+            for (int i = 0; i < Math.min(MAX_RECENT_DOCUMENTS, recentDocuments.size()); i++) {
                 final File file = new File(recentDocuments.get(i));
 
                 final Intent openFile = new Intent(context, OpenEditorFromShortcutOrWidgetActivity.class)

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -407,7 +407,8 @@ public FilesystemViewerData.Options getFilesystemFragmentOptions(FilesystemViewe
                 @Override
                 public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
                     dopt.descModtimeInsteadOfParent = true;
-                    dopt.rootFolder = getIntentDir(getIntent(), _appSettings.getFolderToLoadByMenuId(_appSettings.getAppStartupFolderMenuId()));
+                    dopt.rootFolder = _appSettings.getNotebookDirectory();
+                    dopt.startFolder = getIntentDir(getIntent(), _appSettings.getFolderToLoadByMenuId(_appSettings.getAppStartupFolderMenuId()));
                     dopt.folderFirst = _appSettings.isFilesystemListFolderFirst();
                     dopt.doSelectMultiple = dopt.doSelectFolder = dopt.doSelectFile = true;
                     dopt.mountedStorageFolder = _shareUtil.getStorageAccessFolder();

File: app/src/main/java/net/gsantner/markor/ui/SearchOrCustomTextDialogCreator.java
Patch:
@@ -22,7 +22,6 @@
 import android.app.AlertDialog;
 import android.content.Context;
 import android.os.Build;
-import android.support.annotation.StringRes;
 import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.InputType;
@@ -35,7 +34,6 @@
 import android.widget.Toast;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.format.TextFormat;
 import net.gsantner.markor.format.todotxt.TodoTxtFilter;
 import net.gsantner.markor.format.todotxt.TodoTxtHighlighter;
 import net.gsantner.markor.format.todotxt.TodoTxtTask;
@@ -46,7 +44,6 @@
 import net.gsantner.opoc.ui.SearchOrCustomTextDialog;
 import net.gsantner.opoc.util.Callback;
 import net.gsantner.opoc.util.FileUtils;
-import net.gsantner.opoc.util.ShareUtil;
 import net.gsantner.opoc.util.StringUtils;
 
 import java.io.File;

File: app/src/main/java/net/gsantner/opoc/util/StringUtils.java
Patch:
@@ -9,7 +9,6 @@
 #########################################################*/
 package net.gsantner.opoc.util;
 
-import android.content.Context;
 import android.text.TextUtils;
 import android.util.Base64;
 import android.widget.EditText;

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -87,7 +87,7 @@ public class MarkdownTextConverter extends TextConverter {
     public static final String CSS_HEADER_UNDERLINE = CSS_S + " .header_no_underline { text-decoration: none; color: " + TOKEN_BW_INVERSE_OF_THEME + "; } h1 < a.header_no_underline { border-bottom: 2px solid #eaecef; } " + CSS_E;
     public static final String CSS_H1_H2_UNDERLINE = CSS_S + " h1,h2 { border-bottom: 2px solid " + TOKEN_BW_INVERSE_OF_THEME_HEADER_UNDERLINE + "; } " + CSS_E;
     public static final String CSS_BLOCKQUOTE_VERTICAL_LINE = CSS_S + "blockquote{padding:0px 14px;border-" + TOKEN_TEXT_DIRECTION + ":3.5px solid #dddddd;margin:4px 0}" + CSS_E;
-    public static final String CSS_LIST_TASK_NO_BULLET = CSS_S + ".task-list-item { list-style-type:none; text-indent: -1.4em; } li.task-list-item > pre { text-indent: 0pt; }" + CSS_E;
+    public static final String CSS_LIST_TASK_NO_BULLET = CSS_S + ".task-list-item { list-style-type:none; text-indent: -1.4em; } li.task-list-item > pre, li.task-list-item > ul > li { text-indent: 0pt; }" + CSS_E;
     public static final String CSS_GITLAB_VIDEO_CAPTION = CSS_S + ".video-container > p { margin: 0; }" + CSS_E;
     public static final String CSS_LINK_SOFT_WRAP_AUTOBREAK_LINES = CSS_S + "p > a { word-break:break-all; }" + CSS_E;
 

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -87,7 +87,7 @@ public class MarkdownTextConverter extends TextConverter {
     public static final String CSS_HEADER_UNDERLINE = CSS_S + " .header_no_underline { text-decoration: none; color: " + TOKEN_BW_INVERSE_OF_THEME + "; } h1 < a.header_no_underline { border-bottom: 2px solid #eaecef; } " + CSS_E;
     public static final String CSS_H1_H2_UNDERLINE = CSS_S + " h1,h2 { border-bottom: 2px solid " + TOKEN_BW_INVERSE_OF_THEME_HEADER_UNDERLINE + "; } " + CSS_E;
     public static final String CSS_BLOCKQUOTE_VERTICAL_LINE = CSS_S + "blockquote{padding:0px 14px;border-" + TOKEN_TEXT_DIRECTION + ":3.5px solid #dddddd;margin:4px 0}" + CSS_E;
-    public static final String CSS_LIST_TASK_NO_BULLET = CSS_S + ".task-list-item { list-style-type:none; text-indent: -1.4em; }" + CSS_E;
+    public static final String CSS_LIST_TASK_NO_BULLET = CSS_S + ".task-list-item { list-style-type:none; text-indent: -1.4em; } li.task-list-item > pre { text-indent: 0pt; }" + CSS_E;
     public static final String CSS_GITLAB_VIDEO_CAPTION = CSS_S + ".video-container > p { margin: 0; }" + CSS_E;
     public static final String CSS_LINK_SOFT_WRAP_AUTOBREAK_LINES = CSS_S + "p > a { word-break:break-all; }" + CSS_E;
 

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownAutoFormat.java
Patch:
@@ -17,7 +17,6 @@
 import java.util.regex.Pattern;
 
 public class MarkdownAutoFormat implements InputFilter {
-    public static final Pattern PREFIX_CHECKBOX_LIST = Pattern.compile("^(\\s*)(([-*+]\\s\\[)[\\sxX](]\\s))");
 
     private final AutoFormatter _autoFormatter;
 
@@ -34,7 +33,7 @@ public CharSequence filter(CharSequence source, int start, int end, Spanned dest
     public static AutoFormatter.PrefixPatterns getPrefixPatterns() {
         return new AutoFormatter.PrefixPatterns(
                 MarkdownReplacePatternGenerator.PREFIX_UNORDERED_LIST,
-                PREFIX_CHECKBOX_LIST,
+                MarkdownReplacePatternGenerator.PREFIX_CHECKBOX_LIST,
                 MarkdownReplacePatternGenerator.PREFIX_ORDERED_LIST);
     }
 }

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownReplacePatternGenerator.java
Patch:
@@ -25,6 +25,7 @@ public class MarkdownReplacePatternGenerator {
     public static final Pattern PREFIX_ATX_HEADING = Pattern.compile("^(\\s{0,3})(#{1,6}\\s)");
     public static final Pattern PREFIX_QUOTE = Pattern.compile("^(>\\s)");
     public static final Pattern PREFIX_CHECKED_LIST = Pattern.compile("^(\\s*)((-|\\*|\\+)\\s\\[(x|X)]\\s)");
+    public static final Pattern PREFIX_CHECKBOX_LIST = Pattern.compile("^(\\s*)(([-*+]\\s\\[)[\\sxX](]\\s))");
     public static final Pattern PREFIX_UNCHECKED_LIST = Pattern.compile("^(\\s*)((-|\\*|\\+)\\s\\[\\s]\\s)");
     public static final Pattern PREFIX_UNORDERED_LIST = Pattern.compile("^(\\s*)((-|\\*|\\+)\\s)");
     public static final Pattern PREFIX_LEADING_SPACE = Pattern.compile("^(\\s*)");

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -233,7 +233,7 @@ private byte[] getTemplateContent(final Spinner templateSpinner, final File base
         byte[] bytes = null;
         switch (templateSpinner.getSelectedItemPosition()) {
             case 1: {
-                t = "# Markdown Reference\nAutomatically generate _table of contents_ by checking the option here: `Settings > Format > Markdown`.\n\n## H2 Header\n### H3 header\n#### H4 Header\n##### H5 Header\n###### H6 Header\n\n<!-- --------------- -->\n\n## Format Text\n\n*Italic emphasis* , _Alternative italic emphasis_\n\n**Bold emphasis** , __Alternative bold emphasis__\n\n~~Strikethrough~~\n\nBreak line (two spaces at end of line)  \n\n> Block quote\n\n`Inline code`\n\n```\nCode blocks\nare\nawesome\n```\n\n<!-- --------------- -->\n \n## Lists\n### Ordered & unordered\n\n* Unordered list\n* ...with asterisk/star\n* Test\n\n- Another unordered list\n- ...with hyphen/minus\n- Test\n\n1. Ordered list\n2. Test\n3. Test\n4. Test\n\n- Nested lists\n    * Unordered nested list\n    * Test\n    * Test\n    * Test\n- Ordered nested list\n    1. Test\n    2. Test\n    3. Test\n    4. Test\n- Double-nested unordered list\n    - Test\n    - Unordered\n        - Test a\n        - Test b\n    - Ordered\n        1. Test 1\n        2. Test 2\n\n### Checklist\n* [ ] Salad\n* [x] Potatoes\n\n1. [x] Clean\n2. [ ] Cook\n\n<!-- --------------- -->\n\n## Links\n[Link](https://duckduckgo.com/)\n\n[File in same folder as the document.](markor-markdown-reference.md) Use %20 for spaces!\n\n<!-- --------------- -->\n\n## Tables\n\n| Left aligned | Middle aligned | Right aligned |\n| :--------------- | :------------------: | -----------------: |\n| Test                 | Test                      | Test                    |\n| Test                 | Test                      | Test                    |\n\n÷÷÷÷\n\nShorter | Table | Syntax\n:---: | ---: | :---\nTest | Test | Test\nTest | Test | Test\n\n<!-- Comment: Not visibile in view. Can also span across multiple lines. End with:-->\n\n<!-- --------------- -->\n\n## Math (KaTeX)\nSee [reference](https://katex.org/docs/supported.html) & [examples](https://github.com/waylonflinn/markdown-it-katex/blob/master/README.md). Enable by checking Math at `Settings > Markdown`.\n\n### Math inline\n\n$ I = \\frac V R $\n\n### Math block\n\n<div>\n$$\\begin{array}{c} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{array}$$\n</div>\n\n\n$$\\frac{k_t}{k_e} = \\sqrt{2}$$\n\n<!-- --------------- -->\n\n## Format Text (continued)\n\n### Text color\n\n<span style='background-color:#ffcb2e;'>Text with background color / highlight</span>\n\n<span style='color:#3333ff;'>Text foreground color</span>\n\n<span style='text-shadow: 0px 0px 2px #FF0000;'>Text with colored outline</span> / <span style='text-shadow: 0px 0px 2px #0000FF; color: white'>Text with colored outline</span>\n\n\n### Text sub & superscript\n\n<u>Underline</u>\n\nThe <sub>Subway</sub> sandwich was <sup>super</sup>\n\nSuper special characters: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ ™ ® ℠\n\n### Text positioning\n<div markdown='1' align='right'>\n\ntext on the **right**\n\n</div>\n\n<div markdown='1' align='center'>\n\ntext in the **center**  \n(one empy line above and below  \nrequired for Markdown support OR markdown='1')\n\n</div>\n\n### Block Text\n\n<div markdown='1' style='text-align: justify; text-justify: inter-word;'>\nlorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \n</div>\n\n### Dropdown\n\n<details markdown='1'><summary>Click to Expand/Collapse</summary>\n\nExpanded content. Shows up and keeps visible when clicking expand. Hide again by clicking the dropdown button again.\n\n</details>\n\n\n<!-- --------------- -->\n\n## Multimedia\n\n### Images\n![Image](https://gsantner.net/assets/blog/img/markor/markor-v1-7-showcase-3.jpg)\n\n### Videos\n**Youtube** [Welcome to Upper Austria](https://www.youtube.com/watch?v=RJREFH7Lmm8)\n<iframe width='360' height='200' src='https://www.youtube.com/embed/RJREFH7Lmm8'> </iframe>\n\n**Peertube** [Road in the wood](https://open.tube/videos/watch/8116312a-dbbd-43a3-9260-9ea6367c72fc)\n<div><video controls><source src='https://peertube.mastodon.host/download/videos/8116312a-dbbd-43a3-9260-9ea6367c72fc-480.mp4' </source></video></div>\n\n<!-- **Local video** <div><video controls><source src='voice-parrot.mp4' </source></video></div> -->\n\n### Audio & Music\n**Web audio** [Guifrog - Xia Yu](https://www.freemusicarchive.org/music/Guifrog/Xia_Yu)\n<audio controls src='https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Guifrog/Xia_Yu/Guifrog_-_Xia_Yu.mp3'></audio>\n\n**Local audio** Yellowcard - Lights up in the sky\n<audio controls src='../Music/mp3/Yellowcard/[2007]%20Paper%20Walls/Yellowcard%20-%2005%20-%20Light%20Up%20the%20Sky.mp3'></audio>\n\n------------------\n\nThis Markdown reference file was created for the [Markor](https://gsantner.net/project/markor?source=markdownref) project by [Gregor Santner](https://gsantner.net) and is licensed [Creative Commons Zero 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) (public domain). File revision 2.\n\n------------------\n\n\n";
+                t = "# Markdown Reference\nAutomatically generate _table of contents_ by checking the option here: `Settings > Format > Markdown`.\n\n## H2 Header\n### H3 header\n#### H4 Header\n##### H5 Header\n###### H6 Header\n\n<!-- --------------- -->\n\n## Format Text\n\n*Italic emphasis* , _Alternative italic emphasis_\n\n**Bold emphasis** , __Alternative bold emphasis__\n\n~~Strikethrough~~\n\nBreak line (two spaces at end of line)  \n\n> Block quote\n\n`Inline code`\n\n```\nCode blocks\nare\nawesome\n```\n\n<!-- --------------- -->\n \n## Lists\n### Ordered & unordered\n\n* Unordered list\n* ...with asterisk/star\n* Test\n\n- Another unordered list\n- ...with hyphen/minus\n- Test\n\n1. Ordered list\n2. Test\n3. Test\n4. Test\n\n- Nested lists\n    * Unordered nested list\n    * Test\n    * Test\n    * Test\n- Ordered nested list\n    1. Test\n    2. Test\n    3. Test\n    4. Test\n- Double-nested unordered list\n    - Test\n    - Unordered\n        - Test a\n        - Test b\n    - Ordered\n        1. Test 1\n        2. Test 2\n\n### Checklist\n* [ ] Salad\n* [x] Potatoes\n\n1. [x] Clean\n2. [ ] Cook\n\n<!-- --------------- -->\n\n## Links\n[Link](https://duckduckgo.com/)\n\n[File in same folder as the document.](markor-markdown-reference.md) Use %20 for spaces!\n\n<!-- --------------- -->\n\n## Tables\n\n| Left aligned | Middle aligned | Right aligned |\n| :--------------- | :------------------: | -----------------: |\n| Test                 | Test                      | Test                    |\n| Test                 | Test                      | Test                    |\n\n÷÷÷÷\n\nShorter | Table | Syntax\n:---: | ---: | :---\nTest | Test | Test\nTest | Test | Test\n\n<!-- Comment: Not visibile in view. Can also span across multiple lines. End with:-->\n\n<!-- --------------- -->\n\n## Math (KaTeX)\nSee [reference](https://katex.org/docs/supported.html) & [examples](https://github.com/waylonflinn/markdown-it-katex/blob/master/README.md). Enable by checking Math at `Settings > Markdown`.\n\n### Math inline\n\n$ I = \\frac V R $\n\n### Math block\n\n$$\\begin{array}{c} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{array}$$\n\n\n$$\\frac{k_t}{k_e} = \\sqrt{2}$$\n\n<!-- --------------- -->\n\n## Format Text (continued)\n\n### Text color\n\n<span style='background-color:#ffcb2e;'>Text with background color / highlight</span>\n\n<span style='color:#3333ff;'>Text foreground color</span>\n\n<span style='text-shadow: 0px 0px 2px #FF0000;'>Text with colored outline</span> / <span style='text-shadow: 0px 0px 2px #0000FF; color: white'>Text with colored outline</span>\n\n\n### Text sub & superscript\n\n<u>Underline</u>\n\nThe <sub>Subway</sub> sandwich was <sup>super</sup>\n\nSuper special characters: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ ™ ® ℠\n\n### Text positioning\n<div markdown='1' align='right'>\n\ntext on the **right**\n\n</div>\n\n<div markdown='1' align='center'>\n\ntext in the **center**  \n(one empy line above and below  \nrequired for Markdown support OR markdown='1')\n\n</div>\n\n### Block Text\n\n<div markdown='1' style='text-align: justify; text-justify: inter-word;'>\nlorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \n</div>\n\n### Dropdown\n\n<details markdown='1'><summary>Click to Expand/Collapse</summary>\n\nExpanded content. Shows up and keeps visible when clicking expand. Hide again by clicking the dropdown button again.\n\n</details>\n\n\n<!-- --------------- -->\n\n## Multimedia\n\n### Images\n![Image](https://gsantner.net/assets/blog/img/markor/markor-v1-7-showcase-3.jpg)\n\n### Videos\n**Youtube** [Welcome to Upper Austria](https://www.youtube.com/watch?v=RJREFH7Lmm8)\n<iframe width='360' height='200' src='https://www.youtube.com/embed/RJREFH7Lmm8'> </iframe>\n\n**Peertube** [Road in the wood](https://open.tube/videos/watch/8116312a-dbbd-43a3-9260-9ea6367c72fc)\n<div><video controls><source src='https://peertube.mastodon.host/download/videos/8116312a-dbbd-43a3-9260-9ea6367c72fc-480.mp4' </source></video></div>\n\n<!-- **Local video** <div><video controls><source src='voice-parrot.mp4' </source></video></div> -->\n\n### Audio & Music\n**Web audio** [Guifrog - Xia Yu](https://www.freemusicarchive.org/music/Guifrog/Xia_Yu)\n<audio controls src='https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Guifrog/Xia_Yu/Guifrog_-_Xia_Yu.mp3'></audio>\n\n**Local audio** Yellowcard - Lights up in the sky\n<audio controls src='../Music/mp3/Yellowcard/[2007]%20Paper%20Walls/Yellowcard%20-%2005%20-%20Light%20Up%20the%20Sky.mp3'></audio>\n\n------------------\n\nThis Markdown reference file was created for the [Markor](https://gsantner.net/project/markor?source=markdownref) project by [Gregor Santner](https://gsantner.net) and is licensed [Creative Commons Zero 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) (public domain). File revision 2.\n\n------------------\n\n\n";
                 break;
             }
             case 2: {

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -85,7 +85,7 @@ public static void launch(Activity activity, File path, Boolean isFolder, Boolea
             intent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
         }
         nextLaunchTransparentBg = (activity instanceof MainActivity);
-        new ActivityUtils(activity).animateToActivity(intent, false, 0).freeContextRef();
+        new ActivityUtils(activity).animateToActivity(intent, false, null).freeContextRef();
     }
 
     public static Object[] checkIfLikelyTextfileAndGetExt(File file) {

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -203,7 +203,7 @@ private void appendToExistingDocument(final File file, final String separator, f
             final String shareIntoFormat = ShareUtil.formatDateTime(context, _appSettings.getShareIntoPrefix(), System.currentTimeMillis());
             final boolean isTodoTxt = TextFormat.CONVERTER_TODOTXT.isFileOutOfThisFormat(file.getAbsolutePath());
 
-            final String newContent = document.loadContent(context).replaceAll("(?m)^[\\r\\n]+|[\\r\\n]+$", "")
+            final String newContent = document.loadContent(context).replaceAll("(^[\\r\\n]+|[\\r\\n]+$)", "")
                     + separator
                     + (isTodoTxt ? _sharedText : formatOrPrefixSharedText(shareIntoFormat, _sharedText));
             document.saveContent(context, newContent);

File: app/src/main/java/net/gsantner/markor/ui/hleditor/TextActions.java
Patch:
@@ -63,14 +63,14 @@ public abstract class TextActions {
     private static final String ORDER_SUFFIX = "_order";
     private static final String DISABLED_SUFFIX = "_disabled";
 
-    public TextActions(Activity activity, Document document) {
+    public TextActions(final Activity activity, final Document document) {
         _document = document;
         _activity = activity;
         _au = new ActivityUtils(activity);
         _context = activity != null ? activity : _hlEditor.getContext();
         _appSettings = new AppSettings(_context);
         _textActionSidePadding = (int) (_appSettings.getEditorTextActionItemPadding() * _context.getResources().getDisplayMetrics().density);
-        _indent = _appSettings.getDocumentIndentSize(_document.getPath());
+        _indent = _appSettings.getDocumentIndentSize(_document != null ? _document.getPath() : null);
     }
 
     /**

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -173,8 +173,8 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
         webSettings.setJavaScriptEnabled(true);
         webSettings.setDomStorageEnabled(true);
 
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && BuildConfig.IS_TEST_BUILD) {
-            WebView.setWebContentsDebuggingEnabled(true);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && BuildConfig.IS_TEST_BUILD && BuildConfig.DEBUG) {
+            WebView.setWebContentsDebuggingEnabled(true); // Inspect on computer chromium browser: chrome://inspect/#devices
         }
 
         int intentLineNumber = -1;

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTask.java
Patch:
@@ -65,7 +65,8 @@ public static String getToday() {
     }
 
     public static boolean isTodoFile(String filepath) {
-        return filepath != null && TODOTXT_FILE_PATTERN.matcher(filepath).matches() && (filepath.endsWith(".txt") || filepath.endsWith(".text"));
+        return filepath != null && (filepath.endsWith("/todo.txt")
+                || TODOTXT_FILE_PATTERN.matcher(filepath).matches() && (filepath.endsWith(".txt") || filepath.endsWith(".text")));
     }
 
     public static List<TodoTxtTask> getTasks(final CharSequence text, final int selStart, final int selEnd) {
@@ -76,7 +77,7 @@ public static List<TodoTxtTask> getTasks(final CharSequence text, final int selS
 
         final List<TodoTxtTask> tasks = new ArrayList<>();
         for (final String line : lines) {
-             tasks.add(new TodoTxtTask(line));
+            tasks.add(new TodoTxtTask(line));
         }
         return tasks;
     }

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -252,7 +252,7 @@ protected void onPreferenceChanged(final SharedPreferences prefs, final String k
                     Toast.makeText(getContext(), e.getLocalizedMessage() + "\n\n" + getString(R.string.loading_default_value), Toast.LENGTH_SHORT).show();
                     prefs.edit().putString(key, "").commit();
                 }
-            } else if (eq(key, R.string.pref_key__share_into_prefix)) {
+            } else if (eq(key, R.string.pref_key__share_into_format)) {
                 try {
                     Toast.makeText(context, ShareUtil.formatDateTime(context, prefs.getString(key, ""), System.currentTimeMillis(), null), Toast.LENGTH_SHORT).show();
                 } catch (IllegalArgumentException e) {

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -917,6 +917,6 @@ public boolean isZimWikiDynamicNotebookRootEnabled() {
     }
 
     public String getShareIntoPrefix() {
-        return getString(R.string.pref_key__share_into_prefix, "");
+        return getString(R.string.pref_key__share_into_format, "\n----\n");
     }
 }

File: app/src/main/java/net/gsantner/markor/ui/hleditor/Highlighter.java
Patch:
@@ -102,7 +102,7 @@ public void generalHighlightRun(final Spannable spannable) {
             _profiler.restart("Link Color");
             createColorSpanForMatches(spannable, Patterns.WEB_URL, 0xff1ea3fd);
             _profiler.restart("Link Size");
-            createRelativeSizeSpanForMatches(spannable, Patterns.WEB_URL, 0.7f);
+            createRelativeSizeSpanForMatches(spannable, Patterns.WEB_URL, 0.85f);
             _profiler.restart("Link Italic");
             createStyleSpanForMatches(spannable, Patterns.WEB_URL, Typeface.ITALIC);
         }

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -288,6 +288,7 @@ public void showTextEditor(@Nullable Document document, @Nullable File file, boo
 
         if (!sameDocumentRequested) {
             if (document != null) {
+                document.resetModTime();
                 showFragment(DocumentEditFragment.newInstance(document).setPreviewFlag(preview));
             } else {
                 showFragment(DocumentEditFragment.newInstance(file, fileIsFolder, fileLineNumber).setPreviewFlag(preview));

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -209,6 +209,7 @@ private void appendToExistingDocument(final File file, final String separator, f
             String trimmedContent = document.loadContent(context).trim();
             String currentContent = TextUtils.isEmpty(trimmedContent) ? "" : (trimmedContent + "\n");
             document.saveContent(context, currentContent + separator + _sharedText);
+            document.resetModTime();
 
             if (showEditor) {
                 showInDocumentActivity(document);

File: app/src/main/java/net/gsantner/markor/activity/openeditor/OpenShareIntoActivity.java
Patch:
@@ -14,7 +14,7 @@
 import android.support.annotation.Nullable;
 
 import net.gsantner.markor.activity.DocumentRelayActivity;
-import net.gsantner.markor.util.DocumentIO;
+import net.gsantner.markor.model.Document;
 
 public class OpenShareIntoActivity extends OpenEditorActivity {
 
@@ -24,7 +24,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
 
         Intent openShare = new Intent(this, DocumentRelayActivity.class)
                 .setAction(Intent.ACTION_SEND)
-                .putExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, true)
+                .putExtra(Document.EXTRA_PATH_IS_FOLDER, true)
                 .putExtra(Intent.EXTRA_TEXT, "");
         openActivityAndClose(openShare, null);
     }

File: app/src/main/java/net/gsantner/markor/format/TextConverter.java
Patch:
@@ -74,11 +74,11 @@ public abstract class TextConverter {
      * @param webView  The WebView content to be shown in
      * @return Copy of converted html
      */
-    public String convertMarkupShowInWebView(Document document, WebView webView, boolean isExportInLightMode, File file) {
+    public String convertMarkupShowInWebView(Document document, String content, WebView webView, boolean isExportInLightMode) {
         Context context = webView.getContext();
         String html;
         try {
-            html = convertMarkup(document.getContent(), context, isExportInLightMode, file);
+            html = convertMarkup(content, context, isExportInLightMode, document.getFile());
         } catch (Exception e) {
             html = "Please report at project issue tracker: " + e.toString();
         }

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -31,6 +31,7 @@
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.todotxt.TodoTxtTask;
 import net.gsantner.markor.format.zimwiki.ZimWikiTextActions;
+import net.gsantner.markor.model.Document;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ShareUtil;
 import net.gsantner.opoc.ui.AndroidSpinnerOnItemSelectedAdapter;
@@ -166,7 +167,7 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
 
                     appSettings.setNewFileDialogLastUsedExtension(fileExtEdit.getText().toString().trim());
                     final String usedFilename = getFileNameWithoutExtension(fileNameEdit.getText().toString(), templateSpinner.getSelectedItemPosition());
-                    final File f = new File(basedir, usedFilename.trim() + fileExtEdit.getText().toString().trim());
+                    final File f = new File(basedir, Document.normalizeFilename(usedFilename.trim()) + fileExtEdit.getText().toString().trim());
                     final byte[] templateContents = getTemplateContent(templateSpinner, basedir, f.getName(), encryptCheckbox.isChecked());
                     shareUtil.writeFile(f, false, (arg_ok, arg_fos) -> {
                         try {

File: app/src/main/java/net/gsantner/markor/util/MarkorWebViewClient.java
Patch:
@@ -20,6 +20,7 @@
 import net.gsantner.markor.R;
 import net.gsantner.markor.activity.DocumentActivity;
 import net.gsantner.markor.format.TextFormat;
+import net.gsantner.markor.model.Document;
 
 import java.io.File;
 import java.net.URLDecoder;
@@ -56,7 +57,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 }
                 if (TextFormat.isTextFile(file)) {
                     Intent newPreview = new Intent(_activity, DocumentActivity.class);
-                    newPreview.putExtra(DocumentIO.EXTRA_PATH, file);
+                    newPreview.putExtra(Document.EXTRA_PATH, file);
                     newPreview.putExtra(DocumentActivity.EXTRA_DO_PREVIEW, true);
                     _activity.startActivity(newPreview);
                 } else if (file.getName().toLowerCase().endsWith(".apk")) {

File: app/thirdparty/java/other/writeily/widget/WrFilesWidgetFactory.java
Patch:
@@ -18,9 +18,9 @@
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.TextFormat;
 import net.gsantner.markor.format.markdown.MarkdownTextConverter;
+import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.FilesystemViewerCreator;
 import net.gsantner.markor.util.AppSettings;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.opoc.ui.FilesystemViewerAdapter;
 import net.gsantner.opoc.ui.FilesystemViewerFragment;
 
@@ -38,7 +38,7 @@ public class WrFilesWidgetFactory implements RemoteViewsService.RemoteViewsFacto
     public WrFilesWidgetFactory(Context context, Intent intent) {
         _context = context;
         _appWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);
-        _dir = (File) intent.getSerializableExtra(DocumentIO.EXTRA_PATH);
+        _dir = (File) intent.getSerializableExtra(Document.EXTRA_PATH);
     }
 
     @Override
@@ -98,7 +98,7 @@ public RemoteViews getViewAt(int position) {
             rowView.setTextColor(R.id.widget_note_title, _context.getResources().getColor(R.color.light__primary_text));
         if (position < _widgetFilesList.length) {
             File file = _widgetFilesList[position];
-            Intent fillInIntent = new Intent().putExtra(DocumentIO.EXTRA_PATH, file).putExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, file.isDirectory());
+            Intent fillInIntent = new Intent().putExtra(Document.EXTRA_PATH, file).putExtra(Document.EXTRA_PATH_IS_FOLDER, file.isDirectory());
             rowView.setTextViewText(R.id.widget_note_title, MarkdownTextConverter.MD_EXTENSION_PATTERN.matcher(file.getName()).replaceAll(""));
             rowView.setOnClickFillInIntent(R.id.widget_note_title, fillInIntent);
         }

File: app/src/main/java/net/gsantner/markor/format/zimwiki/ZimWikiHighlighter.java
Patch:
@@ -37,7 +37,7 @@ public enum Patterns {
         PREFORMATTED_MULTILINE(Pattern.compile("(?s)(?<=[\\n^])'''[\\n$](.*?)[\\n^]'''(?=[\\n$])")),
         LIST_UNORDERED(Pattern.compile("(?<=((\\n|^)\\s{0,10}))\\*(?= )")),
         LIST_ORDERED(Pattern.compile("(?<=((\\n|^)(\\s{0,10})))(\\d+|[a-zA-Z])(\\.)(?= )")),
-        LINK(Pattern.compile("(\\[\\[(?!\\[)(.+?\\]*)]\\])")),
+        LINK(ZimWikiLinkResolver.Patterns.LINK.pattern),
         IMAGE(Pattern.compile("(\\{\\{(?!\\{)(.*?)\\}\\})")),
         CHECKLIST(Pattern.compile("(?<=(\\n|^))\t*(\\[)([ x*>])(])(?= )")),
         CHECKLIST_UNCHECKED(Pattern.compile("(?<=(\\n|^))\t*(\\[)( )(])(?= )")),

File: app/src/main/java/net/gsantner/opoc/format/plaintext/PlainTextStuff.java
Patch:
@@ -33,13 +33,14 @@ public static String tryExtractUrlAroundPos(String text, int pos) {
             int begin = Math.max(text.lastIndexOf("https://", pos), text.lastIndexOf("http://", pos));
             if (begin >= 0) {
                 int end = text.length();
-                for (String check : new String[]{"\n", " ", "\t", "\r", ")"}) {
+                for (String check : new String[]{"\n", " ", "\t", "\r", ")", "|"}) {
                     if ((pos = text.indexOf(check, begin)) > begin && pos < end) {
                         end = pos;
                     }
                 }
+
                 if ((end - begin) > 5 && end > 5) {
-                    return text.substring(begin, end);
+                    return text.substring(begin, end).replaceAll("[\\]=%>}]+$", "");
                 }
             }
         }

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -183,7 +183,7 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
                     if (ez(fileNameEdit)) {
                         return;
                     }
-                    final String usedFoldername = getFileNameWithoutExtension(fileNameEdit.getText().toString(), templateSpinner.getSelectedItemPosition());
+                    final String usedFoldername = getFileNameWithoutExtension(fileNameEdit.getText().toString().trim(), templateSpinner.getSelectedItemPosition());
                     File f = new File(basedir, usedFoldername);
                     if (shareUtil.isUnderStorageAccessFolder(f)) {
                         DocumentFile dof = shareUtil.getDocumentFile(f, true);
@@ -202,15 +202,15 @@ private AlertDialog.Builder makeDialog(final File basedir, final boolean allowCr
     }
 
     private boolean ez(EditText et) {
-        return et.getText().toString().isEmpty();
+        return et.getText().toString().trim().isEmpty();
     }
 
     private String getFileNameWithoutExtension(String typedFilename, int selectedTemplatePos) {
         if (selectedTemplatePos == 7) {
             // zim wiki files always use underscores instead of spaces
             return typedFilename.trim().replace(' ', '_');
         }
-        return typedFilename;
+        return typedFilename.trim();
     }
 
     private void callback(boolean ok, File file) {

File: app/src/main/java/net/gsantner/markor/activity/MoreInfoFragment.java
Patch:
@@ -79,8 +79,7 @@ public Boolean onPreferenceClicked(Preference preference, String key, int keyRes
                 }
                 case R.string.pref_key__more_info__help: {
                     _cu.openWebpageInExternalBrowser(
-                            String.format("https://gsantner.net/project/%s.html?source=inapp_more_help_faq",
-                                    getString(R.string.app_name_real).toLowerCase()));
+                            String.format("https://gsantner.net/project/%s.html?source=inapp_more_help_faq", getString(R.string.app_name_real).toLowerCase()));
                     return true;
                 }
                 case R.string.pref_key__more_info__donate: {

File: app/src/main/java/net/gsantner/opoc/util/ContextUtils.java
Patch:
@@ -127,7 +127,7 @@ public enum ResType {
      */
     public int getResId(final ResType resType, final String name) {
         try {
-            return _context.getResources().getIdentifier(name, resType.name().toLowerCase(), _context.getPackageName());
+            return _context.getResources().getIdentifier(name, resType.name().toLowerCase(Locale.ENGLISH), _context.getPackageName());
         } catch (Exception e) {
             return 0;
         }
@@ -231,7 +231,7 @@ public String getAppInstallationSource() {
         }
         if (src == null || src.trim().isEmpty()) {
             return "Sideloaded";
-        } else if (src.toLowerCase().contains(".amazon.")) {
+        } else if (src.toLowerCase(Locale.ENGLISH).contains(".amazon.")) {
             return "Amazon Appstore";
         }
         switch (src) {
@@ -1048,7 +1048,7 @@ public List<ProviderInfo> getProvidersInfos() {
 
     public String getFileProvider() {
         for (final ProviderInfo info : getProvidersInfos()) {
-            if (info.name.toLowerCase().contains("fileprovider")) {
+            if (info.name.toLowerCase(Locale.ENGLISH).contains("fileprovider")) {
                 return info.authority;
             }
         }

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -467,8 +467,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
                 return true;
             }
             case R.id.action_send_debug_log: {
-                String text = "Hello!\nThanks for developing this app.\nI'm sending this debug log to you to improve the app. The debug log is below.\nI also looked at the FAQ \nhttps://gsantner.net/project/" + getString(R.string.app_name_real).toLowerCase() + ".html\nand checked if it resolves my issue. This debug log allows to analyze and improve performance, but it doesn't give information about crashes! If the app crashes, I will add all steps to reproduce the issue. \n\n\n\n------------------------\n\n\n\n";
-                text += AppSettings.getDebugLog() + "\n\n------------------------\n\n\n\n" + DocumentIO.getMaskedContent(_document);
+                final String text = AppSettings.getDebugLog() + "\n\n------------------------\n\n\n\n" + DocumentIO.getMaskedContent(_document);
                 _shareUtil.draftEmail("Debug Log " + getString(R.string.app_name_real), text, new StringBuilder(getString(R.string.app_contact_email_reverse)).reverse().toString());
                 return true;
             }

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -192,7 +192,7 @@ public boolean onCreateOptionsMenu(final Menu menu) {
     protected void onResume() {
         //new AndroidSupportMeWrapper(this).mainOnResume();
         super.onResume();
-        IS_DEBUG_ENABLED = BuildConfig.IS_TEST_BUILD || _appSettings.isDebugLogEnabled();
+        IS_DEBUG_ENABLED = BuildConfig.IS_TEST_BUILD;
         if (_appSettings.isRecreateMainRequired()) {
             // recreate(); // does not remake fragments
             Intent intent = getIntent();

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -214,7 +214,6 @@ public void doUpdatePreferences() {
                     R.string.pref_key__tab_width_v2,
                     R.string.pref_key__editor_line_spacing,
                     R.string.pref_key__todotxt__start_new_tasks_with_huuid_v3,
-                    R.string.pref_key__is_debug_log_enabled,
             };
             for (final int keyId : experimentalKeys) {
                 setPreferenceVisible(keyId, _as.isExperimentalFeaturesEnabled());

File: app/src/main/java/net/gsantner/markor/format/zimwiki/ZimWikiHighlighter.java
Patch:
@@ -35,8 +35,8 @@ public enum Patterns {
         HEADING(Pattern.compile("(?<=(\\n|^|\\s))(==+)[ \\t]+(.*?)[ \\t]\\2(?=(\\n|$|\\s))")),
         PREFORMATTED_INLINE(Pattern.compile("''(?!')(.+?)''")),
         PREFORMATTED_MULTILINE(Pattern.compile("(?s)(?<=[\\n^])'''[\\n$](.*?)[\\n^]'''(?=[\\n$])")),
-        LIST_UNORDERED(Pattern.compile("(?<=((\n|^)\\s{0,16}))\\*(?= )")),
-        LIST_ORDERED(Pattern.compile("(?<=((\n|^)(\\s{0,16})))(\\d+|[a-zA-Z])(\\.)(?= )")),
+        LIST_UNORDERED(Pattern.compile("(?<=((\\n|^)\\s{0,10}))\\*(?= )")),
+        LIST_ORDERED(Pattern.compile("(?<=((\\n|^)(\\s{0,10})))(\\d+|[a-zA-Z])(\\.)(?= )")),
         LINK(Pattern.compile("(\\[\\[(?!\\[)(.+?\\]*)]\\])")),
         IMAGE(Pattern.compile("(\\{\\{(?!\\{)(.*?)\\}\\})")),
         CHECKLIST(Pattern.compile("(?<=(\\n|^))\t*(\\[)([ x*>])(])(?= )")),

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -842,7 +842,7 @@ public DocumentEditFragment setPreviewFlag(boolean preview) {
     }
 
     public void onToolbarTitleClicked(final Toolbar toolbar) {
-        if (!_isPreviewVisible) {
+        if (!_isPreviewVisible && _textFormat != null) {
             _textFormat.getTextActions().runAction(getString(R.string.tmaid_common_toolbar_title_clicked_edit_action));
         }
     }

File: app/src/main/java/net/gsantner/opoc/util/StringUtils.java
Patch:
@@ -155,7 +155,7 @@ public static int getIndexFromLineOffset(final CharSequence s, final int l, fina
                     }
                 }
             }
-            if (i < s.length() - 1) {
+            if (i < s.length()) {
                 final int start = (l == 0) ? 0 : i + 1;
                 final int end = getLineEnd(s, start);
                 // Prevent selection from moving to previous line

File: app/src/main/java/net/gsantner/markor/ui/SearchOrCustomTextDialogCreator.java
Patch:
@@ -447,8 +447,7 @@ private static List<String> sortUniqNonEmpty(List<String> data, String... plus)
         if (plus != null) {
             uniq.addAll(Arrays.asList(plus));
         }
-        data.clear();
-        data.addAll(uniq);
+        data = new ArrayList<>(uniq);
         for (int i = 0; i < data.size(); i++) {
             if (data.get(i).trim().isEmpty()) {
                 data.remove(i);

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextActions.java
Patch:
@@ -388,7 +388,7 @@ private void setDueDate(final int offset) {
                     // Replace due date
                     new ReplacePattern(TodoTxtTask.PATTERN_DUE_DATE, "$1" + newDue + "$4"),
                     // Add due date to end if none already exists. Will correctly handle trailing whitespace.
-                    new ReplacePattern("(\\s)*$", " " + newDue)
+                    new ReplacePattern("\\s*$", " " + newDue)
             );
         };
 

File: app/src/main/java/net/gsantner/markor/ui/hleditor/TextActions.java
Patch:
@@ -424,8 +424,7 @@ private static void _runRegexReplaceAction(final EditText editor, final List<Rep
                         final CharSequence oldRegion = line.subSequence(matchStart, matchEnd);
                         // Have to create a new matcher, unfortunately, as replace does not respect region
                         final Matcher replacer = pattern.searchPattern.matcher(oldRegion);
-                        // Replace first vs all handled in matchStart -> matchEnd search
-                        final String newRegion = replacer.replaceAll(pattern.replacePattern);
+                        final String newRegion = pattern.replaceAll ? replacer.replaceAll(pattern.replacePattern) : replacer.replaceFirst(pattern.replacePattern);
                         text.replace(matchStart + lineStart, matchEnd + lineStart, newRegion);
                         // Change effective selection based on update
                         selEnd += newRegion.length() - oldRegion.length();

File: app/src/main/java/net/gsantner/markor/format/zimwiki/ZimWikiHighlighter.java
Patch:
@@ -46,6 +46,7 @@ public enum Patterns {
         CHECKLIST_ARROW(Pattern.compile("(?<=(\\n|^))\t*(\\[)(>)(])(?= )")),
         SUBSCRIPT(Pattern.compile("(_\\{(?!~)(.+?)\\})")),
         SUPERSCRIPT(Pattern.compile("(\\^\\{(?!~)(.+?)\\})")),
+        ZIMHEADER_CONTENT_TYPE_ONLY(Pattern.compile("^\\s*Content-Type:\\s*text/x-zim-wiki")),
         ZIMHEADER(Pattern.compile("^Content-Type: text/x-zim-wiki(\r\n|\r|\n)" +
                 "Wiki-Format: zim \\d+\\.\\d+(\r\n|\r|\n)" +
                 "Creation-Date: \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}[.+:\\d]+"));

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -562,11 +562,11 @@ private void setupAppearancePreferences(View fragmentView) {
 
     private void initDocState() {
         final boolean inMainActivity = getActivity() instanceof MainActivity;
-        wrapTextSetting = _appSettings.getDocumentWrapState(getPath());
+        final String path = getPath();
+        wrapTextSetting = _appSettings.getDocumentWrapState(path);
         wrapText = inMainActivity || wrapTextSetting;
 
-        highlightText = _appSettings.getDocumentHighlightState(getPath());
-
+        highlightText = _appSettings.getDocumentHighlightState(path, _hlEditor.getText());
         setToggleState();
 
         setHorizontalScrollMode(wrapText);

File: app/src/main/java/net/gsantner/markor/ui/SearchReplaceDialog.java
Patch:
@@ -92,7 +92,7 @@ private SearchReplaceDialog(final Activity activity, final Editable edit, final
                 cursorPosition = start;
             } else {
                 cursorPosition = -1;
-                _sel = new int[]{start, -1};
+                _sel = new int[]{start, end};
             }
         } else {
             _sel = new int[]{0, edit.length()};

File: app/src/main/java/net/gsantner/markor/ui/DraggableScrollbarScrollView.java
Patch:
@@ -1,11 +1,13 @@
 package net.gsantner.markor.ui;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.ScrollView;
 
+@SuppressLint("ClickableViewAccessibility")
 public class DraggableScrollbarScrollView extends ScrollView {
 
     private boolean _isFastScrolling = false;

File: app/src/main/java/net/gsantner/markor/ui/DraggableScrollbarWebView.java
Patch:
@@ -1,11 +1,13 @@
 package net.gsantner.markor.ui;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
 import android.webkit.WebView;
 
+@SuppressLint("ClickableViewAccessibility")
 public class DraggableScrollbarWebView extends WebView {
 
     private boolean _isFastScrolling = false;

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -209,6 +209,7 @@ private void callback(boolean ok, File file) {
     //
     // 2) t = "<cursor>";  | ctrl+shift+v "paste without formatting"
     //
+    @SuppressLint("TrulyRandom")
     private byte[] getTemplateContent(final Spinner templateSpinner, final File basedir, final boolean encrypt) {
         String t = null;
         byte[] bytes = null;

File: app/src/main/java/net/gsantner/opoc/util/NetworkUtils.java
Patch:
@@ -23,6 +23,7 @@
 import java.net.URL;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
+import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
 import java.util.HashMap;
 import java.util.Map;
@@ -150,6 +151,7 @@ private static String performCall(final URL url, final String method, final Stri
         return performCall(url, method, data, null);
     }
 
+    @SuppressWarnings("CharsetObjectCanBeUsed")
     private static String performCall(final URL url, final String method, final String data, final HttpURLConnection existingConnection) {
         try {
             final HttpURLConnection connection = existingConnection != null
@@ -160,7 +162,7 @@ private static String performCall(final URL url, final String method, final Stri
             if (data != null && !data.isEmpty()) {
                 connection.setDoOutput(true);
                 final OutputStream output = connection.getOutputStream();
-                output.write(data.getBytes(StandardCharsets.UTF_8));
+                output.write(data.getBytes(Charset.forName("UTF-8")));
                 output.flush();
                 output.close();
             }

File: app/src/main/java/net/gsantner/opoc/util/ShareUtil.java
Patch:
@@ -78,7 +78,7 @@
  * Also allows to parse/fetch information out of shared information.
  * (M)Permissions are not checked, wrap ShareUtils methods if neccessary
  */
-@SuppressWarnings({"UnusedReturnValue", "WeakerAccess", "SameParameterValue", "unused", "deprecation", "ConstantConditions", "ObsoleteSdkInt", "SpellCheckingInspection", "JavadocReference"})
+@SuppressWarnings({"UnusedReturnValue", "WeakerAccess", "SameParameterValue", "unused", "deprecation", "ConstantConditions", "ObsoleteSdkInt", "SpellCheckingInspection", "JavadocReference", "ConstantLocale"})
 public class ShareUtil {
     public final static String EXTRA_FILEPATH = "real_file_path_2";
     public final static SimpleDateFormat SDF_RFC3339_ISH = new SimpleDateFormat("yyyy-MM-dd'T'HH-mm-ss", Locale.getDefault());

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextActions.java
Patch:
@@ -238,7 +238,7 @@ public boolean onLongClick(View view) {
                 }
                 case R.string.tmaid_markdown_table_insert_columns: {
                     SearchOrCustomTextDialogCreator.showInsertTableRowDialog(_activity, true, callbackInsertTableRow);
-                    break;
+                    return true;
                 }
                 case R.string.tmaid_markdown_code_inline: {
                     _hlEditor.disableHighlighterAutoFormat();
@@ -252,6 +252,7 @@ public boolean onLongClick(View view) {
                 }
                 case R.string.tmaid_common_ordered_list_number: {
                     MarkdownAutoFormat.renumberOrderedList(_hlEditor.getText(), StringUtils.getSelection(_hlEditor)[0]);
+                    return true;
                 }
                 case R.string.tmaid_common_deindent:
                 case R.string.tmaid_common_indent: {

File: app/src/main/java/net/gsantner/markor/format/general/CommonTextActions.java
Patch:
@@ -182,7 +182,7 @@ public boolean runAction(String action) {
                 return true;
             }
             case ACTION_SEARCH: {
-                SearchOrCustomTextDialogCreator.showSearchDialog(_activity, origText, null, (text, lineNr) -> {
+                SearchOrCustomTextDialogCreator.showSearchDialog(_activity, _hlEditor.getText(), StringUtils.getSelection(_hlEditor), null, (text, lineNr) -> {
                     if (!_hlEditor.hasFocus()) {
                         _hlEditor.requestFocus();
                     }

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextActions.java
Patch:
@@ -51,9 +51,9 @@ public TodoTxtTextActions(Activity activity, Document document) {
     @Override
     public boolean runAction(String action, boolean modLongClick, String anotherArg) {
         if (action.equals(CommonTextActions.ACTION_SEARCH)) {
-            final String origText = _hlEditor.getText().toString();
+            final Editable edit = _hlEditor.getText();
 
-            SearchOrCustomTextDialogCreator.showSearchDialog(_activity, origText,
+            SearchOrCustomTextDialogCreator.showSearchDialog(_activity, edit, StringUtils.getSelection(_hlEditor),
                     (spannable) -> {
                         TodoTxtHighlighter.basicTodoTxtHighlights(
                                 spannable,
@@ -67,7 +67,7 @@ public boolean runAction(String action, boolean modLongClick, String anotherArg)
                         if (!_hlEditor.hasFocus()) {
                             _hlEditor.requestFocus();
                         }
-                        _hlEditor.setSelection(StringUtils.getIndexFromLineOffset(origText, lineNr, 0));
+                        _hlEditor.setSelection(StringUtils.getIndexFromLineOffset(edit, lineNr, 0));
                     }
             );
             return true;

File: app/src/main/java/net/gsantner/markor/ui/hleditor/TextActions.java
Patch:
@@ -40,6 +40,7 @@
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -208,8 +209,8 @@ public List<String> getActionOrder() {
             prefKeys = new ArrayList<>(loadActionPreference(""));
         }
 
-        Set<String> prefSet = new HashSet<>(prefKeys);
-        Set<String> defSet = new HashSet<>(definedKeys);
+        Set<String> prefSet = new LinkedHashSet<>(prefKeys);
+        Set<String> defSet = new LinkedHashSet<>(definedKeys);
 
         // Add any defined keys which are not in prefs
         defSet.removeAll(prefSet);

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -29,9 +29,9 @@
 import android.widget.Spinner;
 
 import net.gsantner.markor.R;
+import net.gsantner.markor.format.todotxt.TodoTxtTask;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ShareUtil;
-import net.gsantner.markor.format.todotxt.TodoTxtTask;
 import net.gsantner.opoc.ui.AndroidSpinnerOnItemSelectedAdapter;
 import net.gsantner.opoc.util.Callback;
 import net.gsantner.opoc.util.ContextUtils;
@@ -115,7 +115,9 @@ private AlertDialog.Builder makeDialog(final File basedir, LayoutInflater inflat
                 }
             }
             fileNameEdit.setSelection(fileNameEdit.length());
+            appSettings.setNewFileDialogLastUsedType(typeSpinner.getSelectedItemPosition());
         }));
+        typeSpinner.setSelection(appSettings.getNewFileDialogLastUsedType());
 
         templateSpinner.setOnItemSelectedListener(new AndroidSpinnerOnItemSelectedAdapter(pos -> {
             String prefix = null;

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextActions.java
Patch:
@@ -134,7 +134,9 @@ public void onClick(View view) {
             switch (_action) {
                 case R.string.tmaid_todotxt_toggle_done: {
                     origTask.setDone(!origTask.isDone());
-                    origTask.setCompletionDate(SttCommander.getToday());
+                    if (AppSettings.get().isInsertCompletionDateEnabled()) {
+                        origTask.setCompletionDate(SttCommander.getToday());
+                    }
                     cbUpdateOrigTask.callback(origTask);
                     return;
                 }

File: app/src/main/java/net/gsantner/opoc/format/todotxt/SttCommander.java
Patch:
@@ -10,6 +10,7 @@
 #########################################################*/
 package net.gsantner.opoc.format.todotxt;
 
+import net.gsantner.markor.util.AppSettings;
 import net.gsantner.opoc.format.todotxt.extension.SttTaskParserInfoExtension;
 import net.gsantner.opoc.format.todotxt.extension.SttTaskWithParserInfo;
 
@@ -227,7 +228,7 @@ public SttCommander regenerateTaskLine(SttTaskWithParserInfo task) {
         String tmp;
         if (task.isDone()) {
             sb.append("x ");
-            if (!nz(task.getCompletionDate())) {
+            if (!nz(task.getCompletionDate()) && AppSettings.get().isInsertCompletionDateEnabled()) {
                 task.setCompletionDate(getToday());
             }
             sb.append(task.getCompletionDate());

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPattern.java
Patch:
@@ -18,7 +18,7 @@ public enum MarkdownHighlighterPattern {
     HEADING_SIMPLE(Pattern.compile("(?m)^(#{1,6}\\s.*$)")),
     LINK(Pattern.compile("\\[([^\\[]+)\\]\\(([^\\)]+)\\)")),
     LIST_UNORDERED(Pattern.compile("(\\n|^)\\s{0,16}([*+-])( \\[[ xX]\\])?(?= )")),
-    LIST_ORDERED(Pattern.compile("(?m)^([0-9]+)(\\. )")),
+    LIST_ORDERED(Pattern.compile("(?m)^\\s{0,16}\\d+\\.\\s")),
     QUOTATION(Pattern.compile("(\\n|^)>")),
     STRIKETHROUGH(Pattern.compile("~{2}(.*?)\\S~{2}")),
     CODE(Pattern.compile("(?m)(`(?!`)(.*?)`)|(^[^\\S\\n]{4}(?![0-9\\-*+]).*$)")),

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -202,7 +202,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public boolean dispatchTouchEvent(MotionEvent event) {
-        if (_appSettings.isSwipeToChangeMode() && getCurrentVisibleFragment() instanceof DocumentEditFragment) {
+        if (_appSettings.isSwipeToChangeMode() && _appSettings.isEditorLineBreakingEnabled() && getCurrentVisibleFragment() instanceof DocumentEditFragment) {
             try {
                 Rect activityVisibleSize = new Rect();
                 getWindow().getDecorView().getWindowVisibleDisplayFrame(activityVisibleSize);

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -258,7 +258,7 @@ private static char[] getPassword(Context context) {
         final PasswordStore securityStore = new PasswordStore(context);
         final char[] pw = securityStore.loadKey(R.string.pref_key__default_encryption_password);
         if (pw == null || pw.length == 0) {
-            final String warningText = context.getString(R.string.no_password_set_cant_encrypt_decrypt_warning);
+            final String warningText = context.getString(R.string.no_password_set_cannot_encrypt_decrypt);
             Toast.makeText(context, warningText, Toast.LENGTH_LONG).show();
             Log.w(DocumentIO.class.getName(), warningText);
             return null;

File: app/src/main/java/net/gsantner/markor/ui/SearchOrCustomTextDialogCreator.java
Patch:
@@ -176,7 +176,6 @@ public static void showSttArchiveDialog(Activity activity, Callback.a1<String> c
         availableData.add("todo.done.txt");
         availableData.add("archive.txt");
         availableData.add("done.txt");
-        availableData.add(".todo.archive.txt");
         String hl = new AppSettings(activity).getLastTodoUsedArchiveFilename();
         if (!TextUtils.isEmpty(hl)) {
             highlightedData.add(hl);
@@ -187,7 +186,6 @@ public static void showSttArchiveDialog(Activity activity, Callback.a1<String> c
 
         dopt.data = availableData;
         dopt.highlightData = highlightedData;
-        dopt.titleText = R.string.archive;
         dopt.searchHintText = R.string.search_or_custom;
         dopt.messageText = activity.getString(R.string.archive_does_move_done_tasks);
         SearchOrCustomTextDialog.showMultiChoiceDialogWithSearchFilterUI(activity, dopt);

File: app/src/main/java/net/gsantner/opoc/ui/SearchOrCustomTextDialog.java
Patch:
@@ -78,7 +78,7 @@ public static class DialogOptions {
         @StringRes
         public int okButtonText = android.R.string.ok;
         @StringRes
-        public int titleText = android.R.string.untitled;
+        public int titleText = 0;
         @StringRes
         public int searchHintText = android.R.string.search_go;
     }

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -556,7 +556,7 @@ public boolean onBackPressed() {
     public boolean saveDocument() {
         boolean ret = false;
         if (isAdded() && _hlEditor != null && _hlEditor.getText() != null) {
-            ret = DocumentIO.saveDocument(_document, _hlEditor.getText().toString(), _shareUtil);
+            ret = DocumentIO.saveDocument(_document, _hlEditor.getText().toString(), _shareUtil, getContext());
             updateLauncherWidgets();
 
             if (_document != null && _document.getFile() != null) {

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -205,7 +205,7 @@ private void appendToExistingDocument(File file, String seperator, boolean showE
             args.putBoolean(DocumentIO.EXTRA_PATH_IS_FOLDER, false);
             Document document = DocumentIO.loadDocument(getContext(), args, null);
             String currentContent = TextUtils.isEmpty(document.getContent().trim()) ? "" : (document.getContent().trim() + "\n");
-            DocumentIO.saveDocument(document, currentContent + seperator + _sharedText, new ShareUtil(getContext()));
+            DocumentIO.saveDocument(document, currentContent + seperator + _sharedText, new ShareUtil(getContext()), getContext());
             if (showEditor) {
                 showInDocumentActivity(document);
             }

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextConverter.java
Patch:
@@ -19,6 +19,8 @@
 import java.util.Arrays;
 import java.util.List;
 
+import other.de.stanetz.jpencconverter.JavaPasswordbasedCryption;
+
 @SuppressWarnings("WeakerAccess")
 public class PlaintextConverter extends TextConverter {
     private static final String HTML100_BODY_PRE_BEGIN = "<pre style='white-space: pre-wrap;font-family: " + TOKEN_FONT + "' >";
@@ -51,6 +53,7 @@ protected String getContentType() {
     @Override
     public boolean isFileOutOfThisFormat(String filepath) {
         AppSettings appSettings = AppSettings.get();
+        filepath = filepath.replace(JavaPasswordbasedCryption.DEFAULT_ENCRYPTION_EXTENSION, "");
         if (!filepath.contains(".")) {
             return appSettings.isExtOpenWithThisApp("");
         }

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextActions.java
Patch:
@@ -208,7 +208,7 @@ public void onClick(View view) {
                                 doneFileContents += TextUtils.join("\n", move).trim() + "\n";
 
                                 // Write to do done file
-                                if (DocumentIO.saveDocument(new Document(doneFile), doneFileContents, new ShareUtil(_activity))) {
+                                if (DocumentIO.saveDocument(new Document(doneFile), doneFileContents, new ShareUtil(_activity), getContext())) {
                                     // All went good
                                     _hlEditor.setText(TextUtils.join("\n", keep));
                                     int newIndex = _hlEditor.getText().toString().indexOf(newCursorTarget);

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextConverter.java
Patch:
@@ -17,6 +17,8 @@
 
 import java.io.File;
 
+import other.de.stanetz.jpencconverter.JavaPasswordbasedCryption;
+
 @SuppressWarnings("WeakerAccess")
 public class TodoTxtTextConverter extends TextConverter {
 
@@ -49,6 +51,6 @@ protected String getContentType() {
 
     @Override
     public boolean isFileOutOfThisFormat(String filepath) {
-        return SttCommander.isTodoFile(filepath);
+        return SttCommander.isTodoFile(filepath.replace(JavaPasswordbasedCryption.DEFAULT_ENCRYPTION_EXTENSION, ""));
     }
 }

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPattern.java
Patch:
@@ -15,7 +15,7 @@ public enum MarkdownHighlighterPattern {
     BOLD(Pattern.compile("(?<=(\\n|^|\\s))(([*_]){2,3})(?=\\S)(.*?)\\S\\2(?=(\\n|$|\\s))")),
     ITALICS(Pattern.compile("(?<=(\\n|^|\\s))([*_])(?=((?!\\2)|\\2{2,}))(?=\\S)(.*?)\\S\\2(?=(\\n|$|\\s))")),
     HEADING(Pattern.compile("(?m)((^#{1,6}[^\\S\\n][^\\n]+)|((\\n|^)[^\\s]+.*?\\n(-{2,}|={2,})[^\\S\\n]*$))")),
-    HEADING_SIMPLE(Pattern.compile("(?m)(#{1,6}\\s.*$)")),
+    HEADING_SIMPLE(Pattern.compile("(?m)^(#{1,6}\\s.*$)")),
     LINK(Pattern.compile("\\[([^\\[]+)\\]\\(([^\\)]+)\\)")),
     LIST_UNORDERED(Pattern.compile("(\\n|^)\\s{0,16}([*+-])( \\[[ xX]\\])?(?= )")),
     LIST_ORDERED(Pattern.compile("(?m)^([0-9]+)(\\. )")),

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownAutoFormat.java
Patch:
@@ -12,11 +12,11 @@
 import android.text.InputFilter;
 import android.text.Spanned;
 
-import java.util.regex.Matcher;
-import java.util.Arrays;
-
 import net.gsantner.opoc.util.StringUtils;
 
+import java.util.Arrays;
+import java.util.regex.Matcher;
+
 public class MarkdownAutoFormat implements InputFilter {
     @Override
     public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {

File: app/src/main/java/net/gsantner/markor/util/MarkorWebViewClient.java
Patch:
@@ -37,7 +37,7 @@ public MarkorWebViewClient(Activity activity) {
     @Override
     public boolean shouldOverrideUrlLoading(WebView view, String url) {
         try {
-            if (url.equals("about:blank")){
+            if (url.equals("about:blank")) {
                 view.reload();
                 return true;
             }

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownHighlighterPattern.java
Patch:
@@ -17,8 +17,8 @@ public enum MarkdownHighlighterPattern {
     HEADING(Pattern.compile("(?m)((^#{1,6}[^\\S\\n][^\\n]+)|((\\n|^)[^\\s]+.*?\\n(-{2,}|={2,})[^\\S\\n]*$))")),
     HEADING_SIMPLE(Pattern.compile("(?m)(#{1,6}\\s.*$)")),
     LINK(Pattern.compile("\\[([^\\[]+)\\]\\(([^\\)]+)\\)")),
-    LIST_UNORDERED(Pattern.compile("(\\n|^)\\s{0,12}([*+-])( \\[[ xX]\\])?(?= )")),
-    LIST_ORDERED(Pattern.compile("(?m)^([0-9]+)(\\.)")),
+    LIST_UNORDERED(Pattern.compile("(\\n|^)\\s{0,16}([*+-])( \\[[ xX]\\])?(?= )")),
+    LIST_ORDERED(Pattern.compile("(?m)^([0-9]+)(\\. )")),
     QUOTATION(Pattern.compile("(\\n|^)>")),
     STRIKETHROUGH(Pattern.compile("~{2}(.*?)\\S~{2}")),
     CODE(Pattern.compile("(?m)(`(?!`)(.*?)`)|(^[^\\S\\n]{4}(?![0-9\\-*+]).*$)")),

File: app/thirdparty/java/other/writeily/format/markdown/WrMarkdownHeaderSpanCreator.java
Patch:
@@ -47,7 +47,7 @@ public ParcelableSpan create(Matcher m, int iM) {
             final char[] charSequence = extractMatchingRange(m);
             float proportion = calculateProportionBasedOnHeaderType(charSequence);
             Float size = calculateAdjustedSize(proportion);
-            return new TextAppearanceSpan(_highlighter._fontType, Typeface.BOLD, (int) size.byteValue(),
+            return new TextAppearanceSpan(_highlighter._fontType, Typeface.BOLD, size.byteValue(),
                     ColorStateList.valueOf(_color), null);
         } else {
             return new ForegroundColorSpan(_color);

File: app/thirdparty/java/other/writeily/ui/WrFilesystemListAdapter.java
Patch:
@@ -123,7 +123,7 @@ private String generateExtraForFile(int i) {
             StringBuilder sb = new StringBuilder();
             sb.append(_context.getResources().getQuantityString(R.plurals.documents, documentAmount));
             sb.append(": ");
-            sb.append(Integer.toString(documentAmount));
+            sb.append(documentAmount);
             if (filesAmount != documentAmount) {
                 sb.append(String.format(Locale.ROOT, " / %s: %d", _context.getString(R.string.files), filesAmount));
             }

File: app/thirdparty/java/other/writeily/ui/WrRenameDialog.java
Patch:
@@ -142,7 +142,7 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {
             @Override
             public void afterTextChanged(Editable s) {
                 if (_filenameClash) {
-                    ((AlertDialog) _dialog).getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(true);
+                    _dialog.getButton(AlertDialog.BUTTON_POSITIVE).setEnabled(true);
                     ((TextView) _dialog.findViewById(R.id.dialog_message)).setText("");
                     _filenameClash = false;
                 }

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -166,6 +166,9 @@ public boolean isMarkdownHighlightCodeFontMonospaceAllowed() {
         return getBool(R.string.pref_key__markdown__monospace_some_parts, false);
     }
 
+    public boolean isMarkdownDisableCodeBlockHighlight() {
+        return getBool(R.string.pref_key__markdown__disable_code_block_highlight, false);
+    }
 
     public int getHighlightingDelayTodoTxt() {
         return getInt(R.string.pref_key__todotxt__hl_delay, 870);

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextActions.java
Patch:
@@ -53,7 +53,7 @@ public boolean runAction(String action, boolean modLongClick, String anotherArg)
     // Mapping from action (string res) to icon (drawable res)
     private static final int[][] TMA_ACTIONS = {
             {R.string.tmaid_common_checkbox_list, R.drawable.ic_check_box_black_24dp, R.string.check_list},
-            {R.string.tmaid_common_unordered_list_hyphen, R.drawable.ic_list_black_24dp, R.string.unordered_list},
+            {R.string.tmaid_common_unordered_list_char, R.drawable.ic_list_black_24dp, R.string.unordered_list},
             {R.string.tmaid_markdown_bold, R.drawable.ic_format_bold_black_24dp, R.string.bold},
             {R.string.tmaid_markdown_italic, R.drawable.ic_format_italic_black_24dp, R.string.italic},
             {R.string.tmaid_common_delete_lines, CommonTextActions.ACTION_DELETE_LINES_ICON, R.string.delete_lines},
@@ -100,8 +100,8 @@ public void onClick(View view) {
                     runMarkdownRegularPrefixAction("### ");
                     break;
                 }
-                /*case R.string.tmaid_common_unordered_list_hyphen: {
-                    runMarkdownRegularPrefixAction("- ");
+                /*case R.string.tmaid_common_unordered_list_char: {
+                    runMarkdownRegularPrefixAction(_appSettings.getUnorderedListCharacter() + " ");
                     break;
                 }*/
                 case R.string.tmaid_markdown_bold: {

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextTextActions.java
Patch:
@@ -49,7 +49,7 @@ public boolean runAction(String action, boolean modLongClick, String anotherArg)
     //
     private static final int[][] TMA_ACTIONS = {
             {R.string.tmaid_common_checkbox_list, R.drawable.ic_check_box_black_24dp, R.string.check_list},
-            {R.string.tmaid_common_unordered_list_hyphen, R.drawable.ic_list_black_24dp, R.string.unordered_list},
+            {R.string.tmaid_common_unordered_list_char, R.drawable.ic_list_black_24dp, R.string.unordered_list},
             {R.string.tmaid_common_ordered_list_number, R.drawable.ic_format_list_numbered_black_24dp, R.string.ordered_list},
             {R.string.tmaid_common_jump_to_bottom, CommonTextActions.ACTION_JUMP_BOTTOM_TOP_ICON, R.string.jump_to_bottom},
             {R.string.tmaid_common_delete_lines, CommonTextActions.ACTION_DELETE_LINES_ICON, R.string.delete_lines},

File: app/src/main/java/net/gsantner/markor/ui/hleditor/TextActions.java
Patch:
@@ -300,8 +300,8 @@ public void setEditorTextAsync(final String text) {
 
     protected boolean runCommonTextAction(String action) {
         switch (action) {
-            case "tmaid_common_unordered_list_hyphen": {
-                runMarkdownRegularPrefixAction("- ");
+            case "tmaid_common_unordered_list_char": {
+                runMarkdownRegularPrefixAction(_appSettings.getUnorderedListCharacter() + " ");
                 return true;
             }
             case "tmaid_common_checkbox_list": {

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -542,7 +542,7 @@ public boolean onBackPressed() {
         } else if (!_isPreviewVisible && preview) {
             setDocumentViewVisibility(true);
             return true;
-        } else if (!_menuSearchViewForViewMode.isIconified()) {
+        } else if (_menuSearchViewForViewMode != null && !_menuSearchViewForViewMode.isIconified()) {
             _menuSearchViewForViewMode.clearFocus();
             return true;
         }

File: app/src/main/java/net/gsantner/markor/ui/FilesystemViewerFactory.java
Patch:
@@ -76,8 +76,8 @@ public static FilesystemViewerData.Options prepareFsViewerOpts(Context context,
         opts.fileImage = R.drawable.ic_file_white_24dp;
         opts.folderImage = R.drawable.ic_folder_white_24dp;
 
-        opts.recentFiles = strlistToArray(appSettings.getRecentDocuments());
-        opts.popularFiles = strlistToArray(appSettings.getPopularDocuments());
+        opts.recentFiles = appSettings.getAsFileList(appSettings.getRecentDocuments());
+        opts.popularFiles = appSettings.getAsFileList(appSettings.getPopularDocuments());
         opts.favouriteFiles = appSettings.getFavouriteFiles();
 
         opts.titleText = R.string.select;

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerData.java
Patch:
@@ -107,9 +107,7 @@ public static class Options implements Serializable {
         @ColorRes
         public int titleTextColor = 0;
 
-        public File[] recentFiles, popularFiles = null;
-
-        public List<File> favouriteFiles = null;
+        public List<File> favouriteFiles, recentFiles, popularFiles = null;
     }
 
     public static class SelectionListenerAdapter implements SelectionListener, Serializable {

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -437,8 +437,8 @@ public void onFsViewerSelected(String request, File file) {
                                                            }
 
                                                            @Override
-                                                           public void onFsViewerConfig(FilesystemViewerData.Options opt) {
-                                                               opt.titleText = R.string.select;
+                                                           public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
+                                                               dopt.titleText = R.string.select;
                                                            }
                                                        }, getFragmentManager(), getActivity(),
                         input -> input != null && input.getAbsolutePath().toLowerCase().endsWith(".epub")

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -237,8 +237,8 @@ private void showAppendDialog(int keyId) {
             }
             FilesystemViewerFactory.showFileDialog(new FilesystemViewerData.SelectionListenerAdapter() {
                 @Override
-                public void onFsViewerConfig(FilesystemViewerData.Options opt) {
-                    opt.rootFolder = startFolder;
+                public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
+                    dopt.rootFolder = startFolder;
                 }
 
                 @Override

File: app/src/main/java/net/gsantner/markor/ui/AttachImageOrLinkDialog.java
Patch:
@@ -147,9 +147,9 @@ public void onFsViewerSelected(final String request, final File file) {
             }
 
             @Override
-            public void onFsViewerConfig(FilesystemViewerData.Options opt) {
+            public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
                 if (currentWorkingFile != null) {
-                    opt.rootFolder = currentWorkingFile.getParentFile();
+                    dopt.rootFolder = currentWorkingFile.getParentFile();
                 }
             }
         };

File: app/src/main/java/net/gsantner/markor/ui/FilesystemViewerFactory.java
Patch:
@@ -67,6 +67,8 @@ public static FilesystemViewerData.Options prepareFsViewerOpts(Context context,
             return 0;
         };
 
+        opts.accentColor = R.color.accent;
+        opts.primaryColor = R.color.primary;
         opts.primaryTextColor = darkTheme ? R.color.dark__primary_text : R.color.light__primary_text;
         opts.secondaryTextColor = darkTheme ? R.color.dark__secondary_text : R.color.light__secondary_text;
         opts.backgroundColor = darkTheme ? R.color.dark__background : R.color.light__background;

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerDialog.java
Patch:
@@ -237,9 +237,9 @@ public void onFsViewerNothingSelected(String request) {
     }
 
     @Override
-    public void onFsViewerConfig(FilesystemViewerData.Options opt) {
+    public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
         if (_callback != null) {
-            _callback.onFsViewerConfig(opt);
+            _callback.onFsViewerConfig(dopt);
         }
     }
 

File: app/thirdparty/java/other/writeily/widget/WrWidgetConfigure.java
Patch:
@@ -56,9 +56,9 @@ public void onFsViewerNothingSelected(String request) {
                 }
 
                 @Override
-                public void onFsViewerConfig(FilesystemViewerData.Options opt) {
-                    opt.titleText = R.string.select_folder;
-                    opt.rootFolder = AppSettings.get().getNotebookDirectory();
+                public void onFsViewerConfig(FilesystemViewerData.Options dopt) {
+                    dopt.titleText = R.string.select_folder;
+                    dopt.rootFolder = AppSettings.get().getNotebookDirectory();
                 }
             }, fragManager, this);
         }

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -79,6 +79,7 @@ public void onCreate(Bundle b) {
         toolbar.setTitle(R.string.settings);
         setSupportActionBar(toolbar);
         toolbar.setNavigationIcon(getResources().getDrawable(R.drawable.ic_arrow_back_white_24dp));
+        toolbar.setNavigationContentDescription(getResources().getString(R.string.back));
         toolbar.setNavigationOnClickListener(view -> SettingsActivity.this.onBackPressed());
         showFragment(SettingsFragmentMaster.TAG, false);
     }

File: app/src/main/java/net/gsantner/markor/ui/hleditor/TextActions.java
Patch:
@@ -12,6 +12,7 @@
 import android.app.Activity;
 import android.content.Context;
 import android.support.annotation.DrawableRes;
+import android.support.annotation.StringRes;
 import android.support.v4.content.ContextCompat;
 import android.text.Editable;
 import android.text.TextUtils;
@@ -68,9 +69,10 @@ public View.OnLongClickListener getLongListenerShowingToastWithText(final String
         };
     }
 
-    protected void appendTextActionToBar(ViewGroup barLayout, @DrawableRes int iconRes, final View.OnClickListener listener, final View.OnLongClickListener longClickListener) {
+    protected void appendTextActionToBar(ViewGroup barLayout, @DrawableRes int iconRes, @StringRes int descRes, final View.OnClickListener listener, final View.OnLongClickListener longClickListener) {
         ImageView btn = (ImageView) _activity.getLayoutInflater().inflate(R.layout.quick_keyboard_button, null);
         btn.setImageResource(iconRes);
+        btn.setContentDescription(_activity.getString(descRes));
         btn.setOnClickListener(v -> {
             try {
                 listener.onClick(v);

File: app/src/main/java/net/gsantner/markor/format/general/DatetimeFormatDialog.java
Patch:
@@ -134,7 +134,7 @@ public void afterTextChanged(Editable s) {
                     previewTextView.setText(parseDatetimeFormatToString(locale, formatEditText.getText().toString(), cal.getTimeInMillis()));
                     final boolean error = previewTextView.getText().toString().isEmpty() && !formatEditText.getText().toString().isEmpty();
                     formatEditText.setError(error ? "^^^!!!  'normal text'" : null);
-                    previewTextView.setVisibility(error? View.GONE : View.VISIBLE);
+                    previewTextView.setVisibility(error ? View.GONE : View.VISIBLE);
                 }
             }
         });

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -129,10 +129,10 @@ public String convertMarkup(String markup, Context context, boolean isExportInLi
 
         // gfm table parsing
         options.set(TablesExtension.WITH_CAPTION, false)
-                .set(TablesExtension.COLUMN_SPANS, false)
-                .set(TablesExtension.MIN_HEADER_ROWS, 1)
+                .set(TablesExtension.COLUMN_SPANS, true)
+                .set(TablesExtension.MIN_HEADER_ROWS, 0)
                 .set(TablesExtension.MAX_HEADER_ROWS, 1)
-                .set(TablesExtension.APPEND_MISSING_COLUMNS, true)
+                .set(TablesExtension.APPEND_MISSING_COLUMNS, false)
                 .set(TablesExtension.DISCARD_EXTRA_COLUMNS, true)
                 .set(WikiLinkExtension.LINK_ESCAPE_CHARS, "")
                 .set(TablesExtension.HEADER_SEPARATOR_COLUMN_MATCH, true);

File: app/src/main/java/net/gsantner/markor/util/ShareUtil.java
Patch:
@@ -48,7 +48,7 @@ public void createLauncherDesktopShortcut(Document document) {
 
     @RequiresApi(api = Build.VERSION_CODES.KITKAT)
     @SuppressWarnings("deprecation")
-    public PrintJob printOrCreatePdfFromWebview(WebView webview, Document document, boolean...landscape) {
+    public PrintJob printOrCreatePdfFromWebview(WebView webview, Document document, boolean... landscape) {
         String jobName = String.format("%s (%s)", document.getTitle(), _context.getString(R.string.app_name_real));
         return super.print(webview, jobName, landscape);
     }

File: app/src/main/java/net/gsantner/opoc/ui/SearchOrCustomTextDialog.java
Patch:
@@ -67,6 +67,7 @@ public static class DialogOptions {
         public int dialogWidthDp = WindowManager.LayoutParams.MATCH_PARENT;
         public int dialogHeightDp = WindowManager.LayoutParams.WRAP_CONTENT;
         public int gravity = Gravity.NO_GRAVITY;
+        public int searchInputType = 0;
 
         @ColorInt
         public int textColor = 0xFF000000;
@@ -151,6 +152,7 @@ protected FilterResults performFiltering(final CharSequence constraint) {
         searchEditText.setTextColor(dopt.textColor);
         searchEditText.setHintTextColor((dopt.textColor & 0x00FFFFFF) | 0x99000000);
         searchEditText.setHint(dopt.searchHintText);
+        searchEditText.setInputType(dopt.searchInputType == 0 ? searchEditText.getInputType() : dopt.searchInputType);
 
         searchEditText.addTextChangedListener(new TextWatcher() {
             @Override

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerAdapter.java
Patch:
@@ -31,6 +31,7 @@
 import android.widget.Toast;
 
 import net.gsantner.markor.R;
+import net.gsantner.opoc.util.ContextUtils;
 
 import java.io.File;
 import java.io.FilenameFilter;
@@ -115,6 +116,7 @@ public void onBindViewHolder(@NonNull ilesystemViewerViewHolder holder, int posi
             holder.title.setText("????");
             return;
         }
+        new ContextUtils(_context).setLocale(Locale.getDefault()).freeContextRef();
         File file_pre_Parent = file_pre.getParentFile() == null ? new File("/") : file_pre.getParentFile();
         String filename = file_pre.getName();
         if (_virtualMapping.keySet().contains(file_pre)) {

File: app/src/main/java/net/gsantner/markor/ui/hleditor/HighlightingEditor.java
Patch:
@@ -145,6 +145,7 @@ public void simulateKeyPress(int keyEvent_KEYCODE_SOMETHING) {
     }
 
     public void insertOrReplaceTextOnCursor(String newText) {
+        newText = (newText == null ? "" : newText);
         int start = Math.max(getSelectionStart(), 0);
         int end = Math.max(getSelectionEnd(), 0);
         getText().replace(Math.min(start, end), Math.max(start, end), newText, 0, newText.length());

File: app/src/main/java/net/gsantner/markor/format/TextConverter.java
Patch:
@@ -45,11 +45,11 @@ public abstract class TextConverter {
     protected static final String HTML100_PERCENT_IN_FILEPATH = "<base>" + JS_S + "var newbase = document.baseURI.split('%').join('%25'); document.querySelector('base').setAttribute('href', newbase);" + JS_E;
 
     // onPageLoaded_markor_private() invokes the user injected function onPageLoaded()
-    protected static final String HTML500_BODY = "</head>\n<body class='" + TOKEN_TEXT_CONVERTER_CSS_CLASS + "' onload='onPageLoaded_markor_private();'>\n\n<!-- USER CONTENT -->\n\n\n";
+    protected static final String HTML500_BODY = "</head>\n<body class='" + TOKEN_TEXT_CONVERTER_CSS_CLASS + "' onload='onPageLoaded_markor_private();'>\n\n<!-- USER DOCUMENT CONTENT -->\n\n\n";
     //protected static final String HTML900_TO_TOP = "<a class='back_to_top'>&uarr;</a>"
     //        + CSS_S + ".back_to_top { position: fixed; bottom: 80px; right: 40px; z-index: 9999; width: 30px; height: 30px; text-align: center; line-height: 30px; background: #f5f5f5; color: #444; cursor: pointer; border-radius: 2px; display: none; } .back_to_top:hover { background: #e9ebec; } .back_to_top-show { display: block; }" +CSS_E
     //        + "<script>" + "(function() { 'use strict'; function trackScroll() { var scrolled = window.pageYOffset; var coords = document.documentElement.clientHeight; if (scrolled > coords) { goTopBtn.classList.add('back_to_top-show'); } if (scrolled < coords) { goTopBtn.classList.remove('back_to_top-show'); } } function backToTop() { if (window.pageYOffset > 0) { window.scrollBy(0, -80); setTimeout(backToTop, 0); } } var goTopBtn = document.querySelector('.back_to_top'); window.addEventListener('scroll', trackScroll); goTopBtn.addEventListener('click', backToTop); })();" + "</script>";
-    protected static final String HTML990_BODY_END = "\n\n<!-- USER CONTENT END -->\n</body></html>";
+    protected static final String HTML990_BODY_END = "\n\n<!-- USER DOCUMENT CONTENT END -->\n\n</body></html>";
 
     protected static final String HTML_ON_PAGE_LOAD_S = "<script> function onPageLoaded_markor_private() {\n";
     protected static final String HTML_ON_PAGE_LOAD_E = "\nonPageLoaded(); }\n</script>";

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -118,6 +118,9 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
     }
 
     public static synchronized boolean saveDocument(final Document document, final String text, final ShareUtil shareUtil) {
+        if (text != null && text.trim().isEmpty() && text.length() < 5) {
+            return false;
+        }
         boolean ret;
         String filename = DocumentIO.normalizeTitleForFilename(document, text) + document.getFileExtension();
         document.setDoHistory(true);

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -25,6 +25,7 @@
 import net.gsantner.opoc.util.FileUtils;
 
 import java.io.File;
+import java.util.Locale;
 import java.util.UUID;
 
 public class DocumentIO {
@@ -111,7 +112,7 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
         document.setDoHistory(true);
         if (MainActivity.IS_DEBUG_ENABLED) {
             String c = document.getContent();
-            AppSettings.appendDebugLog("\n\n\n--------------\nLoaded document, filepattern " + document.getFile().getName().replaceAll(".*\\.", "-") + ", chars: " + c.length() + " bytes:" + c.getBytes().length + "(" + FileUtils.getReadableFileSize(c.getBytes().length, true) + ")");
+            AppSettings.appendDebugLog("\n\n\n--------------\nLoaded document, filepattern " + document.getFile().getName().replaceAll(".*\\.", "-") + ", chars: " + c.length() + " bytes:" + c.getBytes().length + "(" + FileUtils.getReadableFileSize(c.getBytes().length, true) + "). Language >" + Locale.getDefault().toString() + "<, Language override >" + AppSettings.get().getLanguage() + "<");
         }
         return document;
     }

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -75,7 +75,7 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
             }
         } else if (filePath.isFile() && filePath.canRead()) {
             // Extract content and title
-            document.setTitle(MarkdownTextConverter.MD_EXTENSION_PATTERN.matcher(filePath.getName()).replaceAll(""));
+            document.setTitle(filePath.getName());
             document.setContent(FileUtils.readTextFileFast(filePath));
             document.setModTime(filePath.lastModified());
         }

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -100,7 +100,6 @@ public boolean isHighPerformingDevice() {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             getWindow().setExitTransition(null);
         }
@@ -115,6 +114,7 @@ protected void onCreate(Bundle savedInstanceState) {
             _appSettings.setLastOpenedDirectory(null);
         }
         setTheme(_appSettings.isDarkThemeEnabled() ? R.style.AppTheme_Dark : R.style.AppTheme_Light);
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.main__activity);
         ButterKnife.bind(this);
         setSupportActionBar(_toolbar);

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -58,11 +58,11 @@ public static class RESULT {
 
     public void onCreate(Bundle b) {
         // Must be applied before setContentView
-        super.onCreate(b);
         AppSettings appSettings = new AppSettings(this);
         ContextUtils contextUtils = new ContextUtils(this);
         contextUtils.setAppLanguage(appSettings.getLanguage());
         setTheme(appSettings.isDarkThemeEnabled() ? R.style.AppTheme_Dark : R.style.AppTheme_Light);
+        super.onCreate(b);
 /*
         ActivityUtils au = new ActivityUtils(this);
         boolean extraLaunchersEnabled = appSettings.isSpecialFileLaunchersEnabled();

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -182,7 +182,7 @@ private String getTemplateContent(final Spinner templateSpinner, final File base
         String t = null;
         switch (templateSpinner.getSelectedItemPosition()) {
             case 1: {
-                t = "---\n\n# Markdown Reference\nAutomatically generate _table of contents_ by checking the option here: `Settings > Format > Markdown`.\n\n## H2 Header\n### H3 header\n#### H4 Header\n##### H5 Header\n###### H6 Header\n\n---\n\n## Text\n\n*Italic emphasis*\n_Alternative italic emphasis_\n\n**Bold emphasis**\n__Alternative bold emphasis__\n\n~~Strikethrough~~\n\nBreak line (two spaces at end of line)  \n\n> Block quote\n\n`Inline code`\n\n```\nCode blocks\nare\nawesome\n```\n\n---\n \n## Lists\n### Ordered & unordered\n\n* Unordered list\n* ...with asterisk/star\n* Test\n\n- Another unordered list\n- ...with hyphen/minus\n- Test\n\n1. Ordered list\n2. Test\n3. Test\n4. Test\n\n- Nested lists\n    * Unordered nested list\n    * Test\n    * Test\n    * Test\n- Ordered nested list\n    1. Test\n    2. Test\n    3. Test\n    4. Test\n- Double-nested unordered list\n    - Test\n    - Unordered\n        - Test a\n        - Test b\n    - Ordered\n        1. Test 1\n        2. Test 2\n\n### Checklist\n* [ ] Salad\n* [x] Potatoes\n\n1. [x] Clean\n2. [ ] Cook\n\n---\n\n## Links\n[Link](https://duckduckgo.com/)\n\n[File in same folder as the document.](markor-markdown-reference.md) Use %20 for spaces!\n\n---\n\n## Tables\n\n| Left aligned | Middle aligned | Right aligned |\n| :--------------- | :------------------: | -----------------: |\n| Test                 | Test                      | Test                    |\n| Test                 | Test                      | Test                    |\n\n÷÷÷÷\n\nShorter | Table | Syntax\n:---: | ---: | :---\nTest | Test | Test\nTest | Test | Test\n\n<!-- Comment: Not visibile in view. Can also be across multiple lines. -->\n\n---\n\n## Math (KaTeX)\nSee [reference](https://katex.org/docs/supported.html) & [examples](https://github.com/waylonflinn/markdown-it-katex/blob/master/README.md). Enable by checking Math at `Settings > Format > Markdown`.\n\n### Math inline\n\n$ I = \\frac V R $\n\n### Math block\n\n<div>\n$$\\begin{array}{c} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{array}$$\n</div>\n\n---\n\n## Text (advanced)\n\n### Text color\n\n<span style='background-color:#ffcb2e;'>Text with background color / highlight</span>\n\n<span style='color:#3333ff;'>Text foreground color</span>\n\n<span style='text-shadow: 0px 0px 2px #FF0000;'>Text with colored outline</span> / <span style='text-shadow: 0px 0px 2px #0000FF; color: white'>Text with colored outline</span>\n\n\n### Text sub & superscript\n\n<u>Underline</u>\n\nThe <sub>Subway</sub> sandwich was <sup>super</sup>\n\nSuper special characters: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ ™ ® ℠\n\n### Text positioning\n<div align='right'>\n\ntext on the **right**\n\n</div>\n\n<div align='center'>\n\ntext in the **center**  \n(one empy line above and below  \nrequired for Markdown support)\n\n</div>\n\n### Block Text\n\n<div style='text-align: justify; text-justify: inter-word;'>\nlorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \n</div>\n\n---\n\n## Multimedia\n\n### Image\n![Image](https://gsantner.net/assets/blog/img/markor/markor-v1-7-showcase-3.jpg)\n\n### YouTube\n<iframe width='360' height='200' src='https://www.youtube.com/embed/RJREFH7Lmm8'> </iframe>\n\n### Link to video\n[Road in the wood](https://open.tube/videos/watch/8116312a-dbbd-43a3-9260-9ea6367c72fc) (Peertube)\n<div><video controls><source src='https://peertube.mastodon.host/download/videos/8116312a-dbbd-43a3-9260-9ea6367c72fc-480.mp4' </source></video></div>\n\n<!--  Local video file <div><video controls><source src='voice-parrot.mp4' </source></video></div> -->\n\n### Audio / Music\nYellowcard - Lights up in the sky\n\n<audio controls src='../Music/mp3/Yellowcard/[2007]%20Paper%20Walls/Yellowcard%20-%2005%20-%20Light%20Up%20the%20Sky.mp3'></audio>\n\n---\n\nThis Markdown reference file was created for the [Markor](https://gsantner.net/project/markor?source=markdownref) project by [Gregor Santner](https://gsantner.net) and is licensed [Creative Commons Zero 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) (public domain). File revision 1.\n\n---\n\n";
+                t = "---\n\n# Markdown Reference\nAutomatically generate _table of contents_ by checking the option here: `Settings > Format > Markdown`.\n\n## H2 Header\n### H3 header\n#### H4 Header\n##### H5 Header\n###### H6 Header\n\n---\n\n## Text\n\n*Italic emphasis*\n_Alternative italic emphasis_\n\n**Bold emphasis**\n__Alternative bold emphasis__\n\n~~Strikethrough~~\n\nBreak line (two spaces at end of line)  \n\n> Block quote\n\n`Inline code`\n\n```\nCode blocks\nare\nawesome\n```\n\n---\n \n## Lists\n### Ordered & unordered\n\n* Unordered list\n* ...with asterisk/star\n* Test\n\n- Another unordered list\n- ...with hyphen/minus\n- Test\n\n1. Ordered list\n2. Test\n3. Test\n4. Test\n\n- Nested lists\n    * Unordered nested list\n    * Test\n    * Test\n    * Test\n- Ordered nested list\n    1. Test\n    2. Test\n    3. Test\n    4. Test\n- Double-nested unordered list\n    - Test\n    - Unordered\n        - Test a\n        - Test b\n    - Ordered\n        1. Test 1\n        2. Test 2\n\n### Checklist\n* [ ] Salad\n* [x] Potatoes\n\n1. [x] Clean\n2. [ ] Cook\n\n---\n\n## Links\n[Link](https://duckduckgo.com/)\n\n[File in same folder as the document.](markor-markdown-reference.md) Use %20 for spaces!\n\n---\n\n## Tables\n\n| Left aligned | Middle aligned | Right aligned |\n| :--------------- | :------------------: | -----------------: |\n| Test                 | Test                      | Test                    |\n| Test                 | Test                      | Test                    |\n\n÷÷÷÷\n\nShorter | Table | Syntax\n:---: | ---: | :---\nTest | Test | Test\nTest | Test | Test\n\n<!-- Comment: Not visibile in view. Can also be across multiple lines. -->\n\n---\n\n## Math (KaTeX)\nSee [reference](https://katex.org/docs/supported.html) & [examples](https://github.com/waylonflinn/markdown-it-katex/blob/master/README.md). Enable by checking Math at `Settings > Format > Markdown`.\n\n### Math inline\n\n$ I = \\frac V R $\n\n### Math block\n\n<div>\n$$\\begin{array}{c} \\nabla \\times \\vec{\\mathbf{B}} -\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{E}}}{\\partial t} & = \\frac{4\\pi}{c}\\vec{\\mathbf{j}} \\nabla \\cdot \\vec{\\mathbf{E}} & = 4 \\pi \\rho \\\\ \\nabla \\times \\vec{\\mathbf{E}}\\, +\\, \\frac1c\\, \\frac{\\partial\\vec{\\mathbf{B}}}{\\partial t} & = \\vec{\\mathbf{0}} \\\\ \\nabla \\cdot \\vec{\\mathbf{B}} & = 0 \\end{array}$$\n</div>\n\n---\n\n## Text (advanced)\n\n### Text color\n\n<span style='background-color:#ffcb2e;'>Text with background color / highlight</span>\n\n<span style='color:#3333ff;'>Text foreground color</span>\n\n<span style='text-shadow: 0px 0px 2px #FF0000;'>Text with colored outline</span> / <span style='text-shadow: 0px 0px 2px #0000FF; color: white'>Text with colored outline</span>\n\n\n### Text sub & superscript\n\n<u>Underline</u>\n\nThe <sub>Subway</sub> sandwich was <sup>super</sup>\n\nSuper special characters: ⁰ ¹ ² ³ ⁴ ⁵ ⁶ ⁷ ⁸ ⁹ ⁺ ⁻ ⁼ ⁽ ⁾ ⁿ ™ ® ℠\n\n### Text positioning\n<div align='right'>\n\ntext on the **right**\n\n</div>\n\n<div align='center'>\n\ntext in the **center**  \n(one empy line above and below  \nrequired for Markdown support)\n\n</div>\n\n### Block Text\n\n<div style='text-align: justify; text-justify: inter-word;'>\nlorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \n</div>\n\n---\n\n## Multimedia\n\n### Image\n![Image](https://gsantner.net/assets/blog/img/markor/markor-v1-7-showcase-3.jpg) \n\n### YouTube\n<iframe width='360' height='200' src='https://www.youtube.com/embed/RJREFH7Lmm8'> </iframe>\n\n### Link to video\n[Road in the wood](https://open.tube/videos/watch/8116312a-dbbd-43a3-9260-9ea6367c72fc) (Peertube)\n<div><video controls><source src='https://peertube.mastodon.host/download/videos/8116312a-dbbd-43a3-9260-9ea6367c72fc-480.mp4' </source></video></div>\n\n<!--  Local video file <div><video controls><source src='voice-parrot.mp4' </source></video></div> -->\n\n### Audio / Music\nYellowcard - Lights up in the sky\n\n<audio controls src='../Music/mp3/Yellowcard/[2007]%20Paper%20Walls/Yellowcard%20-%2005%20-%20Light%20Up%20the%20Sky.mp3'></audio>\n\n---\n\nThis Markdown reference file was created for the [Markor](https://gsantner.net/project/markor?source=markdownref) project by [Gregor Santner](https://gsantner.net) and is licensed [Creative Commons Zero 1.0](https://creativecommons.org/publicdomain/zero/1.0/legalcode) (public domain). File revision 1.\n\n---\n\n";
                 break;
             }
             case 2: {

File: app/src/main/java/net/gsantner/markor/format/general/HexColorCodeUnderlineSpan.java
Patch:
@@ -18,10 +18,10 @@
 import java.util.regex.Pattern;
 
 public class HexColorCodeUnderlineSpan implements SpanCreator.ParcelableSpanCreator {
-    public static final Pattern PATTERN = Pattern.compile("(?:\\s|^)(#[A-Fa-f0-9]{6,8})+(?:\\s|$)");
+    public static final Pattern PATTERN = Pattern.compile("(?:\\s|[\";,:'*]|^)(#[A-Fa-f0-9]{6,8})+(?:\\s|[\";,:'*]|$)");
 
     public ParcelableSpan create(Matcher matcher, int iM) {
-        return new ColorUnderlineSpan(Color.parseColor(matcher.group(1)), null);
+        return new ColorUnderlineSpan(Color.parseColor(matcher.group(1)), 3f);
 
     }
 }

File: app/src/main/java/net/gsantner/markor/util/MarkorWebViewClient.java
Patch:
@@ -43,8 +43,9 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
             File file = new File(URLDecoder.decode(url.replace("file://", "")));
             String mimetype;
             for (String str : new String[]{file.getAbsolutePath(), file.getAbsolutePath().replaceFirst("[#].*$", ""), file.getAbsolutePath() + ".md", file.getAbsolutePath() + ".txt"}) {
-                if (TextFormat.isTextFile(new File(str))) {
-                    file = new File(str);
+                File f = new File(str);
+                if (f.exists() && TextFormat.isTextFile(f)) {
+                    file = f;
                     break;
                 }
             }

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -130,7 +130,7 @@ public boolean isHighlightingEnabled() {
     }
 
     public int getMarkdownHighlightingDelay() {
-        return getInt(R.string.pref_key__markdown__hl_delay, 270);
+        return getInt(R.string.pref_key__markdown__hl_delay_v2, 650);
     }
 
 
@@ -564,7 +564,7 @@ public boolean isShowDotFiles() {
     }
 
     public int getTabWidth() {
-        return getInt(R.string.pref_key__tab_width, 4);
+        return getInt(R.string.pref_key__tab_width_v2, 1);
     }
 
     public boolean listFileInRecents(File file) {

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -126,6 +126,7 @@ public static void askUserIfWantsToOpenFileInThisApp(final Activity activity, fi
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        AppSettings.clearDebugLog();
         _appSettings = new AppSettings(this);
         _contextUtils = new ActivityUtils(this);
         _contextUtils.setAppLanguage(_appSettings.getLanguage());

File: app/src/main/java/net/gsantner/markor/ui/hleditor/Highlighter.java
Patch:
@@ -34,6 +34,7 @@
 import android.util.Patterns;
 
 import net.gsantner.markor.BuildConfig;
+import net.gsantner.markor.activity.MainActivity;
 import net.gsantner.markor.format.general.ColorUnderlineSpan;
 import net.gsantner.markor.format.general.HexColorCodeUnderlineSpan;
 import net.gsantner.markor.format.plaintext.PlaintextHighlighter;
@@ -50,7 +51,7 @@ public abstract class Highlighter {
     protected final static InputFilter AUTOFORMATTER_NONE = (charSequence, i, i1, spanned, i2, i3) -> null;
     protected float _highlightingFactorBasedOnFilesize = 1f;
 
-    protected final NanoProfiler _profiler = new NanoProfiler().setEnabled(BuildConfig.IS_TEST_BUILD);
+    protected final NanoProfiler _profiler = new NanoProfiler().setEnabled(BuildConfig.IS_TEST_BUILD || MainActivity.IS_DEBUG_ENABLED);
 
     protected abstract Editable run(final Editable editable);
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -181,7 +181,7 @@ protected void afterOnCreate(Bundle savedInstances, Context context) {
         @Override
         public void onSaveInstanceState(Bundle outState) {
             super.onSaveInstanceState(outState);
-            if ((_sharedText.length() * 1.05) < 9200) {
+            if ((_sharedText.length() * 1.05) < 8200) {
                 outState.putString(EXTRA_TEXT, _sharedText);
             }
         }

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -136,7 +136,7 @@ public void onNothingSelected(AdapterView<?> adapterView) {
                                 }
                             });
                         }
-                        callback(dof.canWrite(), f);
+                        callback(dof != null && dof.canWrite(), f);
                     } else {
                         boolean touchOk = FileUtils.touch(f);
                         if (f.exists() && f.length() < 5 && templateContents != null) {
@@ -153,7 +153,7 @@ public void onNothingSelected(AdapterView<?> adapterView) {
                     File f = new File(basedir, fileNameEdit.getText().toString());
                     if (shareUtil.isUnderStorageAccessFolder(f)) {
                         DocumentFile dof = shareUtil.getDocumentFile(f, true);
-                        callback(dof.exists(), f);
+                        callback(dof != null && dof.exists(), f);
                     } else {
                         callback(f.mkdirs() || f.exists(), f);
                     }

File: app/src/main/java/net/gsantner/opoc/util/ShareUtil.java
Patch:
@@ -531,7 +531,7 @@ public File extractFileFromIntent(Intent receivingIntent) {
                 }
                 if (fileStr.startsWith((tmps = "content://"))) {
                     fileStr = fileStr.substring(tmps.length());
-                    String fileProvider = fileStr.substring(0, fileStr.indexOf("/"));
+                    String fileProvider = fileStr.substring(0, fileStr.contains("/") ? fileStr.indexOf("/") : 0);
                     fileStr = fileStr.substring(fileProvider.length() + 1);
 
                     // Some file managers dont add leading slash
@@ -1037,7 +1037,7 @@ public DocumentFile getDocumentFile(File file, boolean isDir) {
             return dof;
         }
         String[] parts = relPath.split("\\/");
-        for (int i = 0; i < parts.length; i++) {
+        for (int i = 0; dof != null && i < parts.length; i++) {
             DocumentFile nextDof = dof.findFile(parts[i]);
             if (nextDof == null) {
                 nextDof = ((i < parts.length - 1) || isDir) ? dof.createDirectory(parts[i]) : dof.createFile("image", parts[i]);

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -296,8 +296,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
             case R.id.action_share_html_source: {
                 if (saveDocument()) {
                     TextConverter converter = TextFormat.getFormat(_document.getFormat(), getActivity(), _document, _hlEditor).getConverter();
-                    converter.setCurrentFileExt(_document.getFileExtension());
-                    _shareUtil.shareText(converter.convertMarkup(_document.getContent(), _hlEditor.getContext(), false),
+                    _shareUtil.shareText(converter.convertMarkup(_document.getContent(), _hlEditor.getContext(), false, _document.getFile()),
                             "text/" + (item.getItemId() == R.id.action_share_html ? "html" : "plain"));
                 }
                 return true;
@@ -523,7 +522,7 @@ public void setDocumentViewVisibility(boolean show) {
         }
         if (show) {
             _document.setContent(_hlEditor.getText().toString());
-            _textFormat.getConverter().convertMarkupShowInWebView(_document, _webView, _nextConvertToPrintMode);
+            _textFormat.getConverter().convertMarkupShowInWebView(_document, _webView, _nextConvertToPrintMode, _document.getFile());
             new ActivityUtils(getActivity()).hideSoftKeyboard().freeContextRef();
             _hlEditor.clearFocus();
             _hlEditor.postDelayed(() -> new ActivityUtils(getActivity()).hideSoftKeyboard().freeContextRef(), 300);

File: app/src/main/java/net/gsantner/markor/format/TextFormat.java
Patch:
@@ -78,7 +78,7 @@ public static TextFormat getFormat(int formatType, Activity activity, Document d
             }
 
             case FORMAT_KEYVALUE: {
-                format.setConverter(CONVERTER_PLAINTEXT);
+                format.setConverter(CONVERTER_KEYVALUE);
                 format.setHighlighter(new KeyValueHighlighter(hlEditor, document));
                 format.setTextActions(new PlaintextTextActions(activity, document));
                 break;

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -109,7 +109,7 @@ public class MarkdownTextConverter extends TextConverter {
     //########################
 
     @Override
-    public String convertMarkup(String markup, Context context, boolean isExportInLightMode) {
+    public String convertMarkup(String markup, Context context, boolean isExportInLightMode, File file) {
         AppSettings appSettings = new AppSettings(context);
         String converted = "", onLoadJs = "", head = "";
 
@@ -153,12 +153,12 @@ public String convertMarkup(String markup, Context context, boolean isExportInLi
         markup = markup.replace("{{ site.baseurl }}", "..");
 
         converted = flexmarkRenderer.withOptions(options).render(flexmarkParser.parse(markup));
-        return putContentIntoTemplate(context, converted, isExportInLightMode, onLoadJs, head);
+        return putContentIntoTemplate(context, converted, isExportInLightMode, file, onLoadJs, head);
     }
 
     @Override
     public boolean isFileOutOfThisFormat(String filepath) {
-        return MarkdownTextConverter.PATTERN_HAS_FILE_EXTENSION_FOR_THIS_FORMAT.matcher(filepath).matches();
+        return (MarkdownTextConverter.PATTERN_HAS_FILE_EXTENSION_FOR_THIS_FORMAT.matcher(filepath).matches() && !filepath.toLowerCase().endsWith(".txt")) || filepath.toLowerCase().endsWith(".md.txt");
     }
 
     public static boolean isMarkdownFile(File file) {

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerAdapter.java
Patch:
@@ -361,6 +361,7 @@ public boolean toggleSelection(TagContainer data) {
     public boolean goUp() {
         if (canGoUp()) {
             if (_currentFolder != null && _currentFolder.getAbsolutePath() != null && _currentFolder.getParentFile() != null && !_currentFolder.getParentFile().getAbsolutePath().equals(_currentFolder.getAbsolutePath())) {
+                unselectAll();
                 loadFolder(_currentFolder.getParentFile());
                 return true;
             }

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerFragment.java
Patch:
@@ -554,6 +554,8 @@ private void askForMove() {
             public void onFsViewerSelected(String request, File file) {
                 super.onFsViewerSelected(request, file);
                 WrMarkorSingleton.getInstance().moveSelectedNotes(filesToMove, file.getAbsolutePath(), getContext());
+                _filesystemViewerAdapter.unselectAll();
+                _filesystemViewerAdapter.reloadCurrentFolder();
             }
 
             @Override

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -181,7 +181,9 @@ protected void afterOnCreate(Bundle savedInstances, Context context) {
         @Override
         public void onSaveInstanceState(Bundle outState) {
             super.onSaveInstanceState(outState);
-            outState.putString(EXTRA_TEXT, _sharedText);
+            if ((_sharedText.length() * 1.05) < 9200) {
+                outState.putString(EXTRA_TEXT, _sharedText);
+            }
         }
 
         @Override

File: app/src/main/java/net/gsantner/markor/ui/hleditor/HighlightingEditor.java
Patch:
@@ -111,6 +111,8 @@ private void highlightWithoutChange(Editable editable) {
             } catch (Exception e) {
                 // In no case ever let highlighting crash the editor
                 e.printStackTrace();
+            } catch (Error e) {
+                e.printStackTrace();
             }
             _modified = true;
         }

File: app/src/main/java/net/gsantner/markor/ui/hleditor/HighlightingEditor.java
Patch:
@@ -62,7 +62,9 @@ public void afterTextChanged(Editable e) {
                 if (!_modified) {
                     return;
                 }
-                _updateHandler.postDelayed(_updateRunnable, _hl.isFirstHighlighting() ? 300 : _hl.getHighlightingDelay(getContext()));
+                if (_hl != null) {
+                    _updateHandler.postDelayed(_updateRunnable, _hl.isFirstHighlighting() ? 300 : _hl.getHighlightingDelay(getContext()));
+                }
             }
 
             @Override

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -42,7 +42,7 @@
 import butterknife.ButterKnife;
 
 public class SettingsActivity extends AppActivityBase {
-    
+
     @SuppressWarnings("WeakerAccess")
     public static class RESULT {
         public static final int NOCHANGE = -1;

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextConverter.java
Patch:
@@ -22,7 +22,7 @@
 public class PlaintextConverter extends TextConverter {
     private static final String HTML100_BODY_PRE_BEGIN = "<pre style='white-space: pre-wrap;font-family: " + TOKEN_FONT + "' >";
     private static final String HTML101_BODY_PRE_END = "</pre>";
-	private static final List<String> EXT = Arrays.asList(new String[] { ".txt", ".taskpaper" });
+    private static final List<String> EXT = Arrays.asList(new String[]{".txt", ".taskpaper"});
 
 
     //########################

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -37,9 +37,9 @@
 
 import net.gsantner.markor.App;
 import net.gsantner.markor.R;
+import net.gsantner.markor.format.TextConverter;
 import net.gsantner.markor.format.TextFormat;
 import net.gsantner.markor.format.general.CommonTextActions;
-import net.gsantner.markor.format.markdown.MarkdownTextConverter;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.util.AppSettings;
@@ -295,7 +295,8 @@ public boolean onOptionsItemSelected(final MenuItem item) {
             case R.id.action_share_html:
             case R.id.action_share_html_source: {
                 if (saveDocument()) {
-                    MarkdownTextConverter converter = new MarkdownTextConverter();
+                    TextConverter converter = TextFormat.getFormat(_document.getFormat(), getActivity(), _document, _hlEditor).getConverter();
+                    converter.setCurrentFileExt(_document.getFileExtension());
                     _shareUtil.shareText(converter.convertMarkup(_document.getContent(), _hlEditor.getContext(), false),
                             "text/" + (item.getItemId() == R.id.action_share_html ? "html" : "plain"));
                 }

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -207,6 +207,9 @@ public void forceAddNextChangeToHistory() {
     }
 
     public String getFileExtension() {
+        if (_fileExtension == null && _file != null) {
+            _fileExtension = (_file.getName().contains(".") ? _file.getName().substring(_file.getName().lastIndexOf(".")) : "").toLowerCase();
+        }
         return _fileExtension;
     }
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -521,8 +521,10 @@ public void onFragmentFirstTimeVisible() {
     }
 
     public void setDocumentViewVisibility(boolean show) {
-        if (show) {
+        if (!show) {
             _webViewClient.setRestoreScrollY(_webView.getScrollY());
+        }
+        if (show) {
             _document.setContent(_hlEditor.getText().toString());
             _textFormat.getConverter().convertMarkupShowInWebView(_document, _webView, _nextConvertToPrintMode);
             new ActivityUtils(getActivity()).hideSoftKeyboard().freeContextRef();

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -49,7 +49,7 @@ public static AppSettings get() {
     }
 
     public boolean isDarkThemeEnabled() {
-        switch (getString(R.string.pref_key__app_theme, "auto")) {
+        switch (getString(R.string.pref_key__app_theme, "light")) {
             case "light": {
                 return false;
             }

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -106,7 +106,7 @@ public class MarkdownTextConverter extends TextConverter {
     //########################
 
     @Override
-    public String convertMarkup(String markup, Context context) {
+    public String convertMarkup(String markup, Context context, boolean isExportInLightMode) {
         AppSettings appSettings = new AppSettings(context);
         String converted = "", onLoadJs = "", head = "";
 
@@ -150,7 +150,7 @@ public String convertMarkup(String markup, Context context) {
         markup = markup.replace("{{ site.baseurl }}", "..");
 
         converted = flexmarkRenderer.withOptions(options).render(flexmarkParser.parse(markup));
-        return putContentIntoTemplate(context, converted, onLoadJs, head);
+        return putContentIntoTemplate(context, converted, isExportInLightMode, onLoadJs, head);
     }
 
     public static boolean isMarkdownFile(File file) {

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextConverter.java
Patch:
@@ -25,12 +25,12 @@ public class PlaintextConverter extends TextConverter {
     //########################
 
     @Override
-    public String convertMarkup(String markup, Context context) {
+    public String convertMarkup(String markup, Context context, boolean isExportInLightMode) {
         String converted = "", onLoadJs = "", head = "";
         converted = HTML100_BODY_PRE_BEGIN
                 + TextUtilsCompat.htmlEncode(markup)
                 + HTML101_BODY_PRE_END;
-        return putContentIntoTemplate(context, converted, onLoadJs, head);
+        return putContentIntoTemplate(context, converted, isExportInLightMode, onLoadJs, head);
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextConverter.java
Patch:
@@ -26,12 +26,12 @@ public class TodoTxtTextConverter extends TextConverter {
     //########################
 
     @Override
-    public String convertMarkup(String markup, Context context) {
+    public String convertMarkup(String markup, Context context, boolean isExportInLightMode) {
         String converted = "", onLoadJs = "", head = "";
         converted = HTML100_BODY_PRE_BEGIN
                 + parse(TextUtilsCompat.htmlEncode(markup))
                 + HTML101_BODY_PRE_END;
-        return putContentIntoTemplate(context, converted, onLoadJs, head);
+        return putContentIntoTemplate(context, converted, isExportInLightMode, onLoadJs, head);
     }
 
     private String parse(String str) {

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -185,6 +185,7 @@ public void doUpdatePreferences() {
                     ("Launcher (" + getString(R.string.special_documents) + ")"),
                     getString(R.string.app_drawer_launcher_special_files_description), true
             );
+            updateSummary(R.string.pref_key__exts_to_always_open_in_this_app, _appSettings.getString(R.string.pref_key__exts_to_always_open_in_this_app, ""));
             updateSummary(R.string.pref_key__todotxt__alternative_naming_context_project,
                     getString(R.string.category_to_context_project_to_tag, getString(R.string.context), getString(R.string.category), getString(R.string.project), getString(R.string.tag)));
 

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownHighlighter.java
Patch:
@@ -14,7 +14,6 @@
 import android.text.Editable;
 import android.text.InputFilter;
 
-import net.gsantner.markor.format.general.HexColorCodeUnderlineSpan;
 import net.gsantner.markor.ui.hleditor.Highlighter;
 import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.util.AppSettings;

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -402,9 +402,11 @@ public void applyTextFormat(int textFormatId) {
     }
 
     private void setupAppearancePreferences(View fragmentView) {
+        boolean isInMainActivity = getActivity() instanceof MainActivity;
         AppSettings as = AppSettings.get();
         _hlEditor.setTextSize(TypedValue.COMPLEX_UNIT_SP, as.getFontSize());
         _hlEditor.setTypeface(FontPreferenceCompat.typeface(getContext(), as.getFontFamily(), Typeface.NORMAL));
+        _hlEditor.setHorizontallyScrolling(!as.isEditorLineBreakingEnabled() && !isInMainActivity);
 
         _hlEditor.setBackgroundColor(as.getEditorBackgroundColor());
         _hlEditor.setTextColor(as.getEditorForegroundColor());

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerAdapter.java
Patch:
@@ -511,7 +511,9 @@ public boolean accept(File dir, String filename) {
         File f = new File(dir, filename);
         Boolean yes = _dopt.fileOverallFilter == null ? null : _dopt.fileOverallFilter.apply(f);
         yes = yes == null || yes;
-        yes = filename.startsWith(".") ? _dopt.showDotFiles : yes;
+        if (!_dopt.showDotFiles && filename.startsWith(".")) {
+            return false;
+        }
         return f.isDirectory() || (!f.isDirectory() && _dopt.doSelectFile && yes);
     }
 

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerFragment.java
Patch:
@@ -320,7 +320,6 @@ public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
         MenuItem[] sortBy = new MenuItem[]{menu.findItem(R.id.action_sort_by_name), menu.findItem(R.id.action_sort_by_date), menu.findItem(R.id.action_sort_by_filesize),};
         for (int i = 0; i < sortBy.length; i++) {
             if (sortBy[i] != null) {
-                System.out.println("Sort METHOD =: " + _appSettings.getSortMethod());
                 if (_appSettings.getSortMethod() == i){
                     sortBy[i].setChecked(true);
                 }
@@ -467,7 +466,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
     public static Comparator<File> sortFolder(List<File> filesToSort) {
         final int sortMethod = AppSettings.get().getSortMethod();
         final boolean sortReverse = AppSettings.get().isSortReverse();
-        System.out.println("SORT METHOD NEW: " + sortMethod);
 
         Comparator<File> comparator = new Comparator<File>() {
             @Override

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -385,7 +385,7 @@ private Document loadDocument() {
 
     public void applyTextFormat(int textFormatId) {
         _textActionsBar.removeAllViews();
-        _textFormat = TextFormat.getFormat(textFormatId, getActivity(), _document);
+        _textFormat = TextFormat.getFormat(textFormatId, getActivity(), _document, _hlEditor);
         _hlEditor.setHighlighter(_textFormat.getHighlighter());
         _textFormat.getTextActions()
                 .setHighlightingEditor(_hlEditor)

File: app/src/main/java/net/gsantner/markor/ui/hleditor/HighlightingEditor.java
Patch:
@@ -47,7 +47,7 @@ public HighlightingEditor(Context context, AttributeSet attrs) {
         super(context, attrs);
         AppSettings as = new AppSettings(context);
         if (as.isHighlightingEnabled()) {
-            setHighlighter(Highlighter.getDefaultHighlighter());
+            setHighlighter(Highlighter.getDefaultHighlighter(this));
             setAutoFormat(_hl.getAutoFormatter());
             setHighlightingEnabled(as.isHighlightingEnabled());
         }
@@ -88,7 +88,7 @@ public void setHighlighter(Highlighter newHighlighter) {
 
     private void enableHighlighterAutoFormat() {
         //if (_hlEnabled) {
-            setAutoFormat(_hl.getAutoFormatter());
+        setAutoFormat(_hl.getAutoFormatter());
         //}
     }
 
@@ -105,7 +105,7 @@ private void highlightWithoutChange(Editable editable) {
         if (_hlEnabled) {
             _modified = false;
             try {
-                _hl.run(this, editable);
+                _hl.run(editable);
             } catch (Exception e) {
                 // In no case ever let highlighting crash the editor
                 e.printStackTrace();

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -419,6 +419,7 @@ public void onFsViewerConfig(FilesystemViewerData.Options opt) {
                     opt.folderFirst = _appSettings.isFilesystemListFolderFirst();
                     opt.doSelectMultiple = opt.doSelectFolder = opt.doSelectFile = true;
                     opt.mountedStorageFolder = _shareUtil.getStorageAccessFolder();
+                    opt.showDotFiles = _appSettings.isShowDotFiles();
                 }
 
                 @Override

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerAdapter.java
Patch:
@@ -511,6 +511,7 @@ public boolean accept(File dir, String filename) {
         File f = new File(dir, filename);
         Boolean yes = _dopt.fileOverallFilter == null ? null : _dopt.fileOverallFilter.apply(f);
         yes = yes == null || yes;
+        yes = filename.startsWith(".") ? _dopt.showDotFiles : yes;
         return f.isDirectory() || (!f.isDirectory() && _dopt.doSelectFile && yes);
     }
 

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerData.java
Patch:
@@ -54,7 +54,8 @@ public static class Options implements Serializable {
 
         public boolean mustStartWithRootFolder = true,
                 folderFirst = true,
-                descModtimeInsteadOfParent = false;
+                descModtimeInsteadOfParent = false,
+                showDotFiles = false;
 
         public int itemSidePadding = 16; // dp
 

File: app/src/main/java/net/gsantner/markor/activity/AppActivityBase.java
Patch:
@@ -5,7 +5,7 @@
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.opoc.activity.GsActivityBase;
 
-public class AppActivityBase extends GsActivityBase<AppSettings> {
+public abstract class AppActivityBase extends GsActivityBase<AppSettings> {
 
     @Override
     public Integer getNewNavigationBarColor() {

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -55,7 +55,7 @@ public static DocumentShareIntoFragment newInstance(Intent intent) {
 
         String sharedText = intent.getStringExtra(Intent.EXTRA_TEXT) == null ? "" : intent.getStringExtra(Intent.EXTRA_TEXT);
         String tmp;
-        if (intent.hasExtra(Intent.EXTRA_SUBJECT) && !sharedText.contains((tmp = intent.getStringExtra(Intent.EXTRA_SUBJECT)))) {
+        if (intent.hasExtra(Intent.EXTRA_SUBJECT) && (tmp = intent.getStringExtra(Intent.EXTRA_SUBJECT)) != null && !sharedText.contains(tmp)) {
             if (!tmp.trim().contains("\n") && !sharedText.trim().contains("\n") && !sharedText.trim().contains(" ") && (sharedText.startsWith("http://") || sharedText.startsWith("https://"))) {
                 tmp = "[" + tmp.trim().replace("[", "\\[").replace("]", "\\]") + "]";
                 sharedText = "(" + sharedText.trim().replace("(", "\\(").replace(")", "\\)") + ")";

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemViewerAdapter.java
Patch:
@@ -126,7 +126,7 @@ public void onBindViewHolder(@NonNull ilesystemViewerViewHolder holder, int posi
             ((Spannable) holder.title.getText()).setSpan(STRIKE_THROUGH_SPAN, 0, holder.title.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
         }
 
-        File descriptionFile = fileParent.equals(_currentFolder) ? fileParent : file;
+        File descriptionFile = file.equals(_currentFolder.getParentFile()) ? fileParent : file;
         holder.description.setText(!_dopt.descModtimeInsteadOfParent || holder.title.getText().toString().equals("..") ? descriptionFile.getAbsolutePath() : DateUtils.formatDateTime(_context, descriptionFile.lastModified(), (DateUtils.FORMAT_SHOW_TIME | DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_YEAR | DateUtils.FORMAT_NUMERIC_DATE)));
         holder.description.setTextColor(ContextCompat.getColor(_context, _dopt.secondaryTextColor));
 

File: app/src/main/java/net/gsantner/markor/ui/FileInfoDialog.java
Patch:
@@ -71,7 +71,7 @@ private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater
         dialogBuilder.setView(root);
 
         ((TextView) root.findViewById(R.id.ui__fileinfodialog__name))
-                .setText(file.getParentFile().getName());
+                .setText(file.getName());
 
 
         ((TextView) root.findViewById(R.id.ui__fileinfodialog__location))

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -138,15 +138,15 @@ protected void onCreate(Bundle savedInstanceState) {
 
         //_shareUtil.showMountSdDialog(this);
 
-        _shareUtil.writeFile(new File("/storage/C151-0B05/amy.txt"), false, (arg1, arg2) -> {
+        /*_shareUtil.writeFile(new File("/storage/C151-0B05/amy.txt"), false, (arg1, arg2) -> {
             try {
                 arg2.write("COOLICOOL".getBytes());
             } catch (IOException e) {
                 e.printStackTrace();
             }
         });
         _shareUtil.writeFile(new File("/storage/C151-0B05/some/very/vool"), true, null);
-        _shareUtil.writeFile(new File("/storage/C151-0B05/net/test/a.lol.txt"), false, null);
+        _shareUtil.writeFile(new File("/storage/C151-0B05/net/test/a.lol.txt"), false, null);*/
 
         _bottomNav.postDelayed(() -> {
             if (_appSettings.getAppStartupTab() != R.id.nav_notebook) {

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -106,7 +106,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
         _hlEditor.setTextSize(TypedValue.COMPLEX_UNIT_SP, as.getFontSize());
         _hlEditor.setTypeface(Typeface.create(as.getFontFamily(), Typeface.NORMAL));
 
-        if (sharedText.trim().isEmpty()){
+        if (sharedText.trim().isEmpty()) {
             _hlEditor.requestFocus();
         }
     }

File: app/src/main/java/net/gsantner/markor/ui/FilesystemDialogCreator.java
Patch:
@@ -71,6 +71,7 @@ public static FilesystemDialogData.Options prepareFsDialogOpts(Context context,
 
         opts.recentFiles = strlistToArray(appSettings.getRecentDocuments());
         opts.popularFiles = strlistToArray(appSettings.getPopularDocuments());
+        opts.favouriteFiles = appSettings.getFavouriteFiles();
 
         opts.titleText = R.string.select;
 

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemDialogData.java
Patch:
@@ -21,6 +21,7 @@
 import java.io.File;
 import java.io.Serializable;
 import java.util.Comparator;
+import java.util.List;
 
 @SuppressWarnings({"unused", "WeakerAccess"})
 public class FilesystemDialogData {
@@ -102,6 +103,8 @@ public static class Options implements Serializable {
         public int titleTextColor = primaryTextColor;
 
         public File[] recentFiles, popularFiles = null;
+
+        public List<File> favouriteFiles = null;
     }
 
     public static class SelectionListenerAdapter implements SelectionListener, Serializable {

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -17,7 +17,6 @@
 import android.os.Environment;
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v7.app.AppCompatActivity;
 import android.support.v7.preference.Preference;
 import android.support.v7.preference.PreferenceFragmentCompat;
 import android.support.v7.preference.PreferenceScreen;

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -191,7 +191,7 @@ public boolean isOverviewStatusBarHidden() {
     }
 
     public String getLanguage() {
-        if (BuildConfig.IS_TEST_BUILD && isAppCurrentVersionFirstStart(false)){
+        if (BuildConfig.IS_TEST_BUILD && isAppCurrentVersionFirstStart(false)) {
             setString(R.string.pref_key__language, "en");
             return "en";
         }

File: app/src/main/java/net/gsantner/opoc/preference/FontPreferenceCompat.java
Patch:
@@ -202,7 +202,7 @@ public List<File> getAdditionalFonts() {
 
         // Also check external storage directories, at the respective root and data directory
         for (File externalFileDir : ContextCompat.getExternalFilesDirs(getContext(), null)) {
-            if (externalFileDir == null || externalFileDir.getAbsolutePath() == null){
+            if (externalFileDir == null || externalFileDir.getAbsolutePath() == null) {
                 continue;
             }
             checkedDirs.add(new File(externalFileDir.getAbsolutePath().replaceFirst("/Android/data/.*$", "/fonts")));

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemDialogData.java
Patch:
@@ -24,7 +24,7 @@
 
 @SuppressWarnings({"unused", "WeakerAccess"})
 public class FilesystemDialogData {
-    public interface SelectionListener extends Serializable{
+    public interface SelectionListener extends Serializable {
         void onFsSelected(String request, File file);
 
         void onFsMultiSelected(String request, File... files);
@@ -38,7 +38,7 @@ public interface SelectionListener extends Serializable{
         void onFsLongPressed(File file, boolean doSelectMultiple);
     }
 
-    public static class Options implements Serializable{
+    public static class Options implements Serializable {
         public SelectionListener listener = new SelectionListenerAdapter();
         public File rootFolder = Environment.getExternalStorageDirectory();
         public String requestId = "show_dialog";

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemFragment.java
Patch:
@@ -136,7 +136,6 @@ public void onViewCreated(View root, @Nullable Bundle savedInstanceState) {
     }
 
 
-
     @Override
     public String getFragmentTag() {
         return "FilesystemFragment";
@@ -214,7 +213,7 @@ public void onFsDoUiUpdate(FilesystemDialogAdapter adapter) {
         _recyclerList.postDelayed(this::updateMenuItems, 1000);
     }
 
-    private void updateMenuItems(){
+    private void updateMenuItems() {
         boolean multi1 = _dopt.doSelectMultiple && _filesystemDialogAdapter.getCurrentSelection().size() == 1;
         boolean multiMore = _dopt.doSelectMultiple && _filesystemDialogAdapter.getCurrentSelection().size() > 1;
 

File: app/src/main/java/net/gsantner/opoc/util/ContextUtils.java
Patch:
@@ -550,6 +550,9 @@ public File getAppDataPrivateDir() {
     public List<Pair<File, String>> getAppDataPublicDirs(boolean internalStorageFolder, boolean sdcardFolders, boolean storageNameWithoutType) {
         List<Pair<File, String>> dirs = new ArrayList<>();
         for (File externalFileDir : ContextCompat.getExternalFilesDirs(_context, null)) {
+            if (externalFileDir == null || externalFileDir.getAbsolutePath() == null || Environment.getExternalStorageDirectory() == null) {
+                continue;
+            }
             boolean isInt = externalFileDir.getAbsolutePath().startsWith(Environment.getExternalStorageDirectory().getAbsolutePath());
             boolean add = (internalStorageFolder && isInt) || (sdcardFolders && !isInt);
             if (add) {

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -467,6 +467,6 @@ public boolean isFilesystemListFolderFirst() {
     }
 
     public String getNavigationBarColor() {
-        return getString(R.string.pref_key__navigationbar_color, "");
+        return getString(R.string.pref_key__navigationbar_color, "#000000");
     }
 }

File: app/src/main/java/net/gsantner/markor/activity/IntroActivity.java
Patch:
@@ -12,6 +12,8 @@
 import com.github.paolorotolo.appintro.AppIntroFragment;
 
 import net.gsantner.markor.R;
+import net.gsantner.markor.util.AppSettings;
+import net.gsantner.markor.util.ContextUtils;
 import net.gsantner.opoc.util.PermissionChecker;
 
 public class IntroActivity extends AppIntro {
@@ -29,6 +31,7 @@ public static void optStart(Activity activeActivity) {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        new ContextUtils(this).setAppLanguage(AppSettings.get().getLanguage());
 
         // Instead of fragments, you can also use our default slide
         // Just set a title, description, background and image. AppIntro will do the rest

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -123,6 +123,7 @@ public String convertMarkup(String markup, Context context) {
                 .set(TablesExtension.MAX_HEADER_ROWS, 1)
                 .set(TablesExtension.APPEND_MISSING_COLUMNS, true)
                 .set(TablesExtension.DISCARD_EXTRA_COLUMNS, true)
+                .set(WikiLinkExtension.LINK_ESCAPE_CHARS, "")
                 .set(TablesExtension.HEADER_SEPARATOR_COLUMN_MATCH, true);
 
         // Add id to headers

File: app/src/main/java/net/gsantner/opoc/format/todotxt/SttCommander.java
Patch:
@@ -29,7 +29,7 @@ public class SttCommander {
     //
     // Statics
     //
-    public static final Pattern TODOTXT_FILE_PATTERN = Pattern.compile("(?i)(^todo[-.]?.*)|(.*[-.]todo\\.((txt)|(md))$)");
+    public static final Pattern TODOTXT_FILE_PATTERN = Pattern.compile("(?i)(^todo[-.]?.*)|(.*[-.]todo\\.((txt)|(text))$)");
     public static final SimpleDateFormat DATEF_YYYY_MM_DD = new SimpleDateFormat("yyyy-MM-dd", Locale.ROOT);
     private static final String PT_DATE = "\\d{4}-\\d{2}-\\d{2}";
 

File: app/src/main/java/net/gsantner/markor/format/general/DatetimeFormatDialog.java
Patch:
@@ -114,6 +114,7 @@ public void afterTextChanged(Editable s) {
             }
         });
 
+        formatEdit.setText(as.getString(LAST_USED_PREF, ""));
         viewRoot.findViewById(R.id.time_format_last_used).setOnClickListener(b -> formatEdit.setText(as.getString(LAST_USED_PREF, "")));
         viewRoot.findViewById(R.id.time_format_just_date).setOnClickListener(b -> formatEdit.setText(cu.getLocalizedDateFormat()));
         viewRoot.findViewById(R.id.time_format_just_time).setOnClickListener(b -> formatEdit.setText(cu.getLocalizedTimeFormat()));

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -47,7 +47,6 @@
 
 import butterknife.BindView;
 import butterknife.ButterKnife;
-import butterknife.OnTextChanged;
 import other.so.AndroidBug5497Workaround;
 
 @SuppressWarnings("unused")

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -37,6 +37,7 @@
 import net.gsantner.markor.util.ContextUtils;
 import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.opoc.activity.GsFragmentBase;
+import net.gsantner.opoc.preference.FontPreferenceCompat;
 import net.gsantner.opoc.util.ActivityUtils;
 
 import java.io.File;
@@ -257,7 +258,7 @@ public void applyTextFormat(int textFormatId) {
     private void setupAppearancePreferences(View fragmentView) {
         AppSettings as = AppSettings.get();
         _hlEditor.setTextSize(TypedValue.COMPLEX_UNIT_SP, as.getFontSize());
-        _hlEditor.setTypeface(Typeface.create(as.getFontFamily(), Typeface.NORMAL));
+        _hlEditor.setTypeface(FontPreferenceCompat.typeface(getContext(), as.getFontFamily(), Typeface.NORMAL));
 
         _hlEditor.setBackgroundColor(as.getEditorBackgroundColor());
         _hlEditor.setTextColor(as.getEditorForegroundColor());

File: app/src/main/java/net/gsantner/markor/activity/DocumentRepresentationFragment.java
Patch:
@@ -20,7 +20,6 @@
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
-import android.view.animation.AlphaAnimation;
 import android.webkit.WebSettings;
 import android.webkit.WebView;
 

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -33,6 +33,7 @@
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ContextUtils;
 import net.gsantner.markor.util.PermissionChecker;
+import net.gsantner.opoc.preference.FontPreferenceCompat;
 import net.gsantner.opoc.preference.GsPreferenceFragmentCompat;
 import net.gsantner.opoc.preference.SharedPreferencesPropertyBackend;
 import net.gsantner.opoc.ui.FilesystemDialogData;
@@ -74,6 +75,7 @@ public void onCreate(Bundle b) {
         ButterKnife.bind(this);
 
         // Custom code
+        FontPreferenceCompat.additionalyCheckedFolder = new File(appSettings.getNotebookDirectory(), ".app/fonts");
         iconColor = contextUtils.rcolor(appSettings.isDarkThemeEnabled() ? R.color.dark__primary_text : R.color.light__primary_text);
         toolbar.setTitle(R.string.settings);
         setSupportActionBar(toolbar);

File: app/src/main/java/net/gsantner/markor/format/TextFormat.java
Patch:
@@ -13,14 +13,14 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.markdown.MarkdownHighlighter;
-import net.gsantner.markor.format.markdown.MarkdownTextConverter;
 import net.gsantner.markor.format.markdown.MarkdownTextActions;
+import net.gsantner.markor.format.markdown.MarkdownTextConverter;
 import net.gsantner.markor.format.plaintext.PlaintextConverter;
 import net.gsantner.markor.format.plaintext.PlaintextHighlighter;
 import net.gsantner.markor.format.plaintext.PlaintextTextActions;
 import net.gsantner.markor.format.todotxt.TodoTxtHighlighter;
-import net.gsantner.markor.format.todotxt.TodoTxtTextConverter;
 import net.gsantner.markor.format.todotxt.TodoTxtTextActions;
+import net.gsantner.markor.format.todotxt.TodoTxtTextConverter;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.hleditor.Highlighter;
 import net.gsantner.markor.ui.hleditor.TextActions;

File: app/src/main/java/net/gsantner/markor/ui/FilesystemDialogCreator.java
Patch:
@@ -18,7 +18,6 @@
 import net.gsantner.markor.util.ContextUtils;
 import net.gsantner.opoc.ui.FilesystemDialog;
 import net.gsantner.opoc.ui.FilesystemDialogData;
-import net.gsantner.opoc.util.FileUtils;
 
 import java.io.File;
 import java.util.List;

File: app/src/main/java/net/gsantner/markor/activity/MoreInfoFragment.java
Patch:
@@ -54,7 +54,7 @@ protected AppSettings getAppSettings(Context context) {
     public Boolean onPreferenceClicked(Preference preference, String key, int keyResId) {
         ActivityUtils au = new ActivityUtils(getActivity());
         if (isAdded() && preference.hasKey()) {
-            switch (keyToStringResId(preference)) {
+            switch (keyResId) {
                 case R.string.pref_key__more_info__app: {
                     _cu.openWebpageInExternalBrowser(getString(R.string.app_web_url));
                     return true;

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -261,7 +261,7 @@ public void onFsDialogConfig(FilesystemDialogData.Options opt) {
                                 opt.titleText = R.string.quicknote;
                                 opt.rootFolder = Environment.getExternalStorageDirectory();
                             }
-                        }, fragManager, getActivity());
+                        }, fragManager, getActivity(), FilesystemDialogCreator.IsMimeText);
                     }
                     return true;
                 }
@@ -282,7 +282,7 @@ public void onFsDialogConfig(FilesystemDialogData.Options opt) {
                                 opt.titleText = R.string.todo;
                                 opt.rootFolder = Environment.getExternalStorageDirectory();
                             }
-                        }, fragManager, getActivity());
+                        }, fragManager, getActivity(), FilesystemDialogCreator.IsMimeText);
                     }
                     return true;
                 }
@@ -303,7 +303,7 @@ public void onFsDialogConfig(FilesystemDialogData.Options opt) {
                                 opt.titleText = R.string.linkbox;
                                 opt.rootFolder = Environment.getExternalStorageDirectory();
                             }
-                        }, fragManager, getActivity());
+                        }, fragManager, getActivity(), FilesystemDialogCreator.IsMimeText);
                     }
                     return true;
                 }

File: app/thirdparty/java/other/writeily/activity/WrFilesystemListFragment.java
Patch:
@@ -434,7 +434,7 @@ public void onFsDialogConfig(FilesystemDialogData.Options opt) {
                 opt.doSelectFile = true;
                 opt.doSelectFolder = true;
             }
-        }, getFragmentManager(), getActivity());
+        }, getFragmentManager(), getActivity(), null);
     }
 
     /**

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -123,7 +123,7 @@ protected void onCreate(Bundle savedInstanceState) {
         boolean fileIsFolder = receivingIntent.getBooleanExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, false);
         if ((Intent.ACTION_VIEW.equals(intentAction) || Intent.ACTION_EDIT.equals(intentAction)) || Intent.ACTION_SEND.equals(intentAction)) {
             if (Intent.ACTION_SEND.equals(intentAction) && receivingIntent.hasExtra(Intent.EXTRA_TEXT)) {
-                showShareInto(receivingIntent.getStringExtra(Intent.EXTRA_TEXT));
+                showShareInto(receivingIntent);
             } else {
                 file = new ShareUtil(getApplicationContext()).extractFileFromIntent(receivingIntent);
                 if (file == null && receivingIntent.getData() != null && receivingIntent.getData().toString().startsWith("content://")) {
@@ -270,10 +270,10 @@ public GsFragmentBase showTextEditor(@Nullable Document document, @Nullable File
         return frag;
     }
 
-    public void showShareInto(String text) {
+    public void showShareInto(Intent intent) {
         // Disable edittext when going to shareinto
         _toolbarTitleText.setText(R.string.import_);
-        showFragment(DocumentShareIntoFragment.newInstance(text));
+        showFragment(DocumentShareIntoFragment.newInstance(intent));
     }
 
     public void showPreview(@Nullable Document document, @Nullable File file) {

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -348,6 +348,7 @@ public void onViewPagerPageSelected(int pos) {
         (_lastBottomMenuItem != null ? _lastBottomMenuItem : menu.getItem(0)).setChecked(false);
         _lastBottomMenuItem = menu.getItem(pos).setChecked(true);
         updateFabVisibility(pos == 0);
+        _toolbar.setTitle(new String[]{_currentTitle, getString(R.string.todo), getString(R.string.quicknote), getString(R.string.more)}[pos]);
 
         if (pos == 1 || pos == 2) {
             permc.doIfExtStoragePermissionGranted(); // cannot prevent bottom tab selection

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -236,7 +236,7 @@ private void showInDocumentActivity(Document document) {
 
         @Override
         @SuppressWarnings({"ConstantConditions", "ConstantIfStatement", "StatementWithEmptyBody"})
-        public Boolean onPreferenceClicked(Preference preference) {
+        public Boolean onPreferenceClicked(Preference preference, String key, int keyResId) {
             AppSettings appSettings = new AppSettings(getActivity().getApplicationContext());
             PermissionChecker permc = new PermissionChecker(getActivity());
             ShareUtil shu = new ShareUtil(getContext());

File: app/src/main/java/net/gsantner/markor/activity/MoreInfoFragment.java
Patch:
@@ -51,7 +51,7 @@ protected AppSettings getAppSettings(Context context) {
 
     @Override
     @SuppressWarnings({"ConstantConditions", "ConstantIfStatement", "StatementWithEmptyBody"})
-    public Boolean onPreferenceClicked(Preference preference) {
+    public Boolean onPreferenceClicked(Preference preference, String key, int keyResId) {
         ActivityUtils au = new ActivityUtils(getActivity());
         if (isAdded() && preference.hasKey()) {
             switch (keyToStringResId(preference)) {

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -90,7 +90,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l)
                 String ext = i < typeSpinnerToExtension.length ? typeSpinnerToExtension[i] : "";
                 switch (i) {
                     case 4: {
-                        prefix = new SimpleDateFormat("YYYY-MM-dd-").format(new Date());
+                        prefix = new SimpleDateFormat("yyyy-MM-dd-").format(new Date());
                         break;
                     }
                 }

File: app/src/main/java/net/gsantner/markor/ui/NewFileDialog.java
Patch:
@@ -90,7 +90,7 @@ public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l)
                 String ext = i < typeSpinnerToExtension.length ? typeSpinnerToExtension[i] : "";
                 switch (i) {
                     case 4: {
-                        prefix = new SimpleDateFormat("YYYY-MM-dd-").format(new Date());
+                        prefix = new SimpleDateFormat("yyyy-MM-dd-").format(new Date());
                         break;
                     }
                 }

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -394,8 +394,8 @@ public GsFragmentBase showFragment(GsFragmentBase fragment) {
         if (currentTop == null || !currentTop.getFragmentTag().equals(fragment.getFragmentTag())) {
             _fragManager.beginTransaction()
                     //.addToBackStack(null)
-                    .replace(R.id.document__placeholder_fragment
-                            , fragment, fragment.getFragmentTag()).commit();
+                    .replace(R.id.document__placeholder_fragment, fragment, fragment.getFragmentTag())
+                    .commit();
         } else {
             fragment = currentTop;
         }

File: app/src/main/java/net/gsantner/markor/activity/DocumentRepresentationFragment.java
Patch:
@@ -15,10 +15,12 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.v4.content.ContextCompat;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.animation.AlphaAnimation;
 import android.webkit.WebSettings;
 import android.webkit.WebView;
 
@@ -76,6 +78,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
             WebView.enableSlowWholeDocumentDraw();
         }
         AppSettings appSettings = new AppSettings(view.getContext());
+        _webView.setBackgroundColor(ContextCompat.getColor(view.getContext(), appSettings.isDarkThemeEnabled() ? R.color.dark__background : R.color.light__background));
         _webView.setWebViewClient(new MarkorWebViewClient(getActivity()));
         WebSettings webSettings = _webView.getSettings();
         webSettings.setBuiltInZoomControls(true);

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -77,7 +77,7 @@ public class MarkdownTextConverter extends TextConverter {
     public static final String JS_KATEX = "" +
             "renderMathInElement(document.body, {" +
             "   'delimiters': [ " +
-            "       {left: '$$', right: '$$', display: true},   {left: '\\(', right: '\\)', display: false},   {left: '\\[', right: '\\]', display: true}, { left: '$', right: '$', display: true }," +
+            "       {left: '$$', right: '$$', display: true},   {left: '\\(', right: '\\)', display: true},   {left: '\\[', right: '\\]', display: true}, { left: '$', right: '$', display: false }," +
             "]});\n";
 
     //########################

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -433,9 +433,7 @@ protected void onStop() {
      * while {@link WrFilesystemListFragment} action mode is active (e.g. when renaming a file)
      */
     private void restoreDefaultToolbar() {
-        WrFilesystemListFragment wrFragment = (WrFilesystemListFragment)
-                _viewPagerAdapter.getFragmentByTag(WrFilesystemListFragment.FRAGMENT_TAG);
-
+        WrFilesystemListFragment wrFragment = (WrFilesystemListFragment) _viewPagerAdapter.getFragmentByTag(WrFilesystemListFragment.FRAGMENT_TAG);
         if (wrFragment != null) {
             wrFragment.finishActionMode();
         }

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -17,7 +17,6 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.content.ContextCompat;
 import android.support.v7.app.ActionBar;
 import android.support.v7.app.AlertDialog;
 import android.support.v7.app.AppCompatActivity;

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -18,7 +18,6 @@
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
-import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.util.TypedValue;
 import android.view.Gravity;

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -35,7 +35,6 @@
 import com.pixplicity.generate.Rate;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.ui.FileInfoDialog;
 import net.gsantner.markor.ui.NewFileDialog;
 import net.gsantner.markor.ui.SearchOrCustomTextDialogCreator;
 import net.gsantner.markor.util.ActivityUtils;
@@ -57,7 +56,6 @@
 import butterknife.BindView;
 import butterknife.ButterKnife;
 import butterknife.OnClick;
-import butterknife.OnLongClick;
 import butterknife.OnPageChange;
 import other.writeily.activity.WrFilesystemListFragment;
 

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -104,13 +104,13 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
                 document.setFormat(TextFormat.FORMAT_PLAIN);
             } else {
                 String oldTitle = document.getTitle();
-                if(oldTitle.contains(".")){
+                if (oldTitle.contains(".")) {
                     int lastIndexOfDot = oldTitle.lastIndexOf(".");
 
                     //divide oldTitle to document title and file extension
                     document.setFileExtension(oldTitle.substring(lastIndexOfDot));
-                    document.setTitle(oldTitle.substring(0,lastIndexOfDot));
-                }else{
+                    document.setTitle(oldTitle.substring(0, lastIndexOfDot));
+                } else {
                     document.setFileExtension("");
                     document.setTitle(oldTitle);
                 }

File: app/src/main/java/net/gsantner/opoc/preference/SharedPreferencesPropertyBackend.java
Patch:
@@ -166,7 +166,7 @@ public int rcolor(@ColorRes int resColorId) {
 
     public String[] rstrs(int... keyResourceIds) {
         String[] ret = new String[keyResourceIds.length];
-        for (int i=0;  i < keyResourceIds.length; i++){
+        for (int i = 0; i < keyResourceIds.length; i++) {
             ret[i] = rstr(keyResourceIds[i]);
         }
         return ret;

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -325,4 +325,4 @@ else if (eq(preference, R.string.pref_key__editor_basic_color_scheme_gruvbox)) {
             return null;
         }
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownAutoFormat.java
Patch:
@@ -67,7 +67,7 @@ private String createIndentForNextLine(Spanned dest, int dend, int istart) {
                 // This is for any line that is not the first line in a file
                 Matcher listMatcher = MarkdownHighlighterPattern.LIST_UNORDERED.pattern.matcher(dest.toString().substring(iend, dend));
                 if (listMatcher.find()) {
-                    return listMatcher.group() + " ";
+                    return dest.toString().substring(istart, iend) + listMatcher.group() + " ";
                 } else {
                     Matcher m = MarkdownHighlighterPattern.LIST_ORDERED.pattern.matcher(dest.toString().substring(iend, dend));
                     if (m.find()) {

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownAutoFormat.java
Patch:
@@ -67,7 +67,7 @@ private String createIndentForNextLine(Spanned dest, int dend, int istart) {
                 // This is for any line that is not the first line in a file
                 Matcher listMatcher = MarkdownHighlighterPattern.LIST_UNORDERED.pattern.matcher(dest.toString().substring(iend, dend));
                 if (listMatcher.find()) {
-                    return listMatcher.group() + " ";
+                    return dest.toString().substring(istart, iend) + listMatcher.group() + " ";
                 } else {
                     Matcher m = MarkdownHighlighterPattern.LIST_ORDERED.pattern.matcher(dest.toString().substring(iend, dend));
                     if (m.find()) {

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlaintextModuleActions.java
Patch:
@@ -47,11 +47,13 @@ public void appendTextModuleActionsToBar(ViewGroup barLayout) {
             {CommonTextModuleActions.ACTION_OPEN_LINK_BROWSER__ICON, 0},
             {CommonTextModuleActions.ACTION_DELETE_LINES_ICON, 1},
             {CommonTextModuleActions.ACTION_SPECIAL_KEY__ICON, 2},
+            {CommonTextModuleActions.ACTION_COLOR_PICKER_ICON, 3},
     };
     private static final String[] ACTIONS = {
             CommonTextModuleActions.ACTION_OPEN_LINK_BROWSER,
             CommonTextModuleActions.ACTION_DELETE_LINES,
             CommonTextModuleActions.ACTION_SPECIAL_KEY,
+            CommonTextModuleActions.ACTION_COLOR_PICKER,
     };
 
     private class PlaintextTextActionImpl implements View.OnClickListener, View.OnLongClickListener {

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextModuleActions.java
Patch:
@@ -80,6 +80,7 @@ public void appendTextModuleActionsToBar(ViewGroup barLayout) {
             //"add_task",
             "archive_done_tasks",
             "insert_date",
+            CommonTextModuleActions.ACTION_COLOR_PICKER,
     };
 
     private class TodoTxtTextActionsImpl implements View.OnClickListener, View.OnLongClickListener {

File: app/src/main/java/net/gsantner/opoc/util/ActivityUtils.java
Patch:
@@ -164,7 +164,7 @@ public void showGooglePlayEntryForThisApp() {
             _activity.startActivity(goToMarket);
         } catch (ActivityNotFoundException e) {
             _activity.startActivity(new Intent(Intent.ACTION_VIEW,
-                    Uri.parse("http://play.google.com/store/apps/" + pkgId)));
+                    Uri.parse("https://play.google.com/store/apps/" + pkgId)));
         }
     }
 

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextConverter.java
Patch:
@@ -76,8 +76,7 @@ public class MarkdownTextConverter extends TextConverter {
     public static final String JS_KATEX = "" +
             "renderMathInElement(document.body, {" +
             "   'delimiters': [ " +
-            "       { left: '$', right: '$', display: false }," +
-            "       { left: '$$', right: '$$', display: true }" +
+            "       {left: '$$', right: '$$', display: true},   {left: '\\(', right: '\\)', display: false},   {left: '\\[', right: '\\]', display: true}, { left: '$', right: '$', display: true }," +
             "]});\n";
 
     //########################

File: app/thirdparty/java/other/writeily/activity/WrFilesystemListFragment.java
Patch:
@@ -575,7 +575,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         promptForNewName(_selectedItems.get(0));
                     }
                     finishActionMode();
-                    return true;`
+                    return true;
                 case R.id.context_menu_info:
                     if (!_selectedItems.isEmpty()) {
                         FileInfoDialog fileInfoDialog = FileInfoDialog.newInstance(_selectedItems.get(0));

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -387,7 +387,6 @@ private GsFragmentBase getCurrentVisibleFragment() {
     public void setDocument(Document document) {
         _document = document;
         _toolbarTitleText.setText(_document.getTitle());
-        _toolbarTitleText.setText(_document.getTitle());
 
         if (!TextUtils.isEmpty(_document.getTitle()) && _toolbarSwitcher.getNextView() == _toolbarTitleText) {
             _toolbarSwitcher.showNext();

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -44,7 +44,7 @@
 
 import butterknife.BindView;
 import butterknife.OnTextChanged;
-import other.writeily.widget.MarkorWidgetProvider;
+import other.writeily.widget.WrMarkorWidgetProvider;
 
 @SuppressWarnings({"UnusedReturnValue", "RedundantCast"})
 public class DocumentEditFragment extends GsFragmentBase implements TextFormat.TextFormatApplier {
@@ -335,7 +335,7 @@ public void onDestroyView() {
     private void updateLauncherWidgets() {
         Context c = App.get().getApplicationContext();
         AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(c);
-        int appWidgetIds[] = appWidgetManager.getAppWidgetIds(new ComponentName(c, MarkorWidgetProvider.class));
+        int appWidgetIds[] = appWidgetManager.getAppWidgetIds(new ComponentName(c, WrMarkorWidgetProvider.class));
         appWidgetManager.notifyAppWidgetViewDataChanged(appWidgetIds, R.id.widget_notes_list);
     }
 

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownHighlighter.java
Patch:
@@ -20,7 +20,7 @@
 import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.util.AppSettings;
 
-import other.writeily.format.markdown.MarkdownHeaderSpanCreator;
+import other.writeily.format.markdown.WrMarkdownHeaderSpanCreator;
 
 public class MarkdownHighlighter extends Highlighter {
     public final String _fontType;
@@ -96,7 +96,7 @@ protected Editable run(final HighlightingEditor editor, final Editable editable)
     }
 
     private void createHeaderSpanForMatches(Editable editable, MarkdownHighlighterPattern pattern, int headerColor) {
-        createSpanForMatches(editable, pattern.pattern, new MarkdownHeaderSpanCreator(this, editable, headerColor));
+        createSpanForMatches(editable, pattern.pattern, new WrMarkdownHeaderSpanCreator(this, editable, headerColor));
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -26,7 +26,7 @@
 import java.util.List;
 import java.util.Locale;
 
-import other.writeily.activity.FilesystemListFragment;
+import other.writeily.activity.WrFilesystemListFragment;
 
 @SuppressWarnings("SameParameterValue")
 public class AppSettings extends SharedPreferencesPropertyBackend {
@@ -183,7 +183,7 @@ public void setSortMethod(int value) {
 
 
     public int getSortMethod() {
-        return getInt(R.string.pref_key__sort_method, FilesystemListFragment.SORT_BY_NAME);
+        return getInt(R.string.pref_key__sort_method, WrFilesystemListFragment.SORT_BY_NAME);
     }
 
     public void setSortReverse(boolean value) {

File: app/thirdparty/java/other/writeily/format/markdown/WrMarkdownHeaderSpanCreator.java
Patch:
@@ -21,7 +21,7 @@
 
 import java.util.regex.Matcher;
 
-public class MarkdownHeaderSpanCreator implements SpanCreator.ParcelableSpanCreator {
+public class WrMarkdownHeaderSpanCreator implements SpanCreator.ParcelableSpanCreator {
     private static final Character POUND_SIGN = '#';
     private static final DisplayMetrics DISPLAY_METRICS = Resources.getSystem().getDisplayMetrics();
     private static final float STANDARD_PROPORTION_MAX = 1.80f;
@@ -31,7 +31,7 @@ public class MarkdownHeaderSpanCreator implements SpanCreator.ParcelableSpanCrea
     private final Editable _editable;
     private final int _color;
 
-    public MarkdownHeaderSpanCreator(MarkdownHighlighter highlighter, Editable editable, int color) {
+    public WrMarkdownHeaderSpanCreator(MarkdownHighlighter highlighter, Editable editable, int color) {
         _highlighter = highlighter;
         _editable = editable;
         _color = color;

File: app/thirdparty/java/other/writeily/ui/WrCreateFolderDialog.java
Patch:
@@ -22,15 +22,15 @@
 import net.gsantner.markor.util.AppCast;
 import net.gsantner.markor.util.AppSettings;
 
-public class CreateFolderDialog extends DialogFragment {
+public class WrCreateFolderDialog extends DialogFragment {
     public static final String FRAGMENT_TAG = "create_folder_dialog_tag";
     // ----- KEYS -----
     public static final String CURRENT_DIRECTORY_DIALOG_KEY = "current_dir_folder_key";
 
     private EditText folderNameEditText;
     private String currentDir;
 
-    public CreateFolderDialog() {
+    public WrCreateFolderDialog() {
     }
 
     @NonNull

File: app/thirdparty/java/other/writeily/ui/WrFilesystemListAdapter.java
Patch:
@@ -30,14 +30,14 @@
 import java.util.Locale;
 
 // Note: Selection color is controller by state-list-drawable
-public class FilesystemListAdapter extends ArrayAdapter<File> implements Filterable {
+public class WrFilesystemListAdapter extends ArrayAdapter<File> implements Filterable {
 
     public static final String EMPTY_STRING = "";
     private Context _context;
     private List<File> _data;
     private List<File> _filteredData;
 
-    public FilesystemListAdapter(Context context, int resource, List<File> objects) {
+    public WrFilesystemListAdapter(Context context, int resource, List<File> objects) {
         super(context, resource, objects);
         _context = context;
         _data = objects;

File: app/thirdparty/java/other/writeily/widget/WrFilesWidgetService.java
Patch:
@@ -10,9 +10,9 @@
 import android.content.Intent;
 import android.widget.RemoteViewsService;
 
-public class FilesWidgetService extends RemoteViewsService {
+public class WrFilesWidgetService extends RemoteViewsService {
     @Override
     public RemoteViewsFactory onGetViewFactory(Intent intent) {
-        return (new FilesWidgetFactory(getApplicationContext(), intent));
+        return (new WrFilesWidgetFactory(getApplicationContext(), intent));
     }
 }

File: app/thirdparty/java/other/writeily/widget/WrMarkorWidgetProvider.java
Patch:
@@ -24,7 +24,7 @@
 
 import java.io.File;
 
-public class MarkorWidgetProvider extends AppWidgetProvider {
+public class WrMarkorWidgetProvider extends AppWidgetProvider {
     public static final String WIDGET_PATH = "WIDGET_PATH";
 
     @Override
@@ -99,7 +99,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
 
 
             // ListView
-            Intent notesListIntent = new Intent(context, FilesWidgetService.class);
+            Intent notesListIntent = new Intent(context, WrFilesWidgetService.class);
             notesListIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);
             notesListIntent.putExtra(DocumentIO.EXTRA_PATH, directoryF);
             notesListIntent.putExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, true);

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -220,7 +220,7 @@ public boolean isAppCurrentVersionFirstStart(boolean doSet) {
     }
 
     public float getEditorLineSpacing() {
-        return getInt(R.string.pref_key__editor_line_spacing, 90) / 100f;
+        return getInt(R.string.pref_key__editor_line_spacing, 100) / 100f;
     }
 
     public void setLastTodoUsedArchiveFilename(String value) {

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -265,7 +265,7 @@ public Boolean onPreferenceClicked(Preference preference) {
                 }
                 case R.string.pref_key__share_into__quicknote: {
                     if (permc.doIfExtStoragePermissionGranted()) {
-                        appendToExistingDocument(AppSettings.get().getQuickNoteFile(), SEP_RULER, false);
+                        appendToExistingDocument(AppSettings.get().getQuickNoteFile(), _sharedText.length() > 200 ? SEP_RULER : "\n", false);
                         close = true;
                     }
                     break;
@@ -276,7 +276,7 @@ public Boolean onPreferenceClicked(Preference preference) {
                                 .replace("http://", "\nhttp://").replace("https://", "\nhttps://")
                                 .replaceAll("(\\s*)?-(\\s*)?\\n", "\n")
                                 .trim();
-                        appendToExistingDocument(AppSettings.get().getLinkBoxFile(), SEP_RULER, false);
+                        appendToExistingDocument(AppSettings.get().getLinkBoxFile(), "\n", false);
                         close = true;
                     }
                     break;

File: app/thirdparty/java/other/writeily/widget/FilesWidgetFactory.java
Patch:
@@ -65,7 +65,7 @@ public RemoteViews getViewAt(int position) {
         rowView.setTextViewText(R.id.widget_note_title, "???");
         if (position < _widgetFilesList.length) {
             File file = _widgetFilesList[position];
-            Intent fillInIntent = new Intent().putExtra(DocumentIO.EXTRA_PATH, file);
+            Intent fillInIntent = new Intent().putExtra(DocumentIO.EXTRA_PATH, file).putExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, file.isDirectory());
             rowView.setTextViewText(R.id.widget_note_title, MarkdownTextConverter.MD_EXTENSION_PATTERN.matcher(file.getName()).replaceAll(""));
             rowView.setOnClickFillInIntent(R.id.widget_note_title, fillInIntent);
         }

File: app/thirdparty/java/other/writeily/widget/MarkorWidgetProvider.java
Patch:
@@ -80,7 +80,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
             views.setEmptyView(R.id.widget_list_container, R.id.widget_empty_hint);
             views.setRemoteAdapter(R.id.widget_notes_list, notesListIntent);
 
-            Intent openNoteIntent = new Intent(context, DocumentActivity.class).setAction(Intent.ACTION_EDIT);
+            Intent openNoteIntent = new Intent(context, DocumentActivity.class);
             PendingIntent openNotePendingIntent = PendingIntent.getActivity(context, 0,
                     openNoteIntent, PendingIntent.FLAG_UPDATE_CURRENT);
             views.setPendingIntentTemplate(R.id.widget_notes_list, openNotePendingIntent);

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -41,7 +41,6 @@
 import net.gsantner.markor.format.markdown.MarkdownTextConverter;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.util.ActivityUtils;
-import other.so.AndroidBug5497Workaround;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.util.PermissionChecker;
@@ -55,6 +54,7 @@
 import butterknife.OnClick;
 import butterknife.OnFocusChange;
 import butterknife.OnTextChanged;
+import other.so.AndroidBug5497Workaround;
 
 @SuppressWarnings("unused")
 public class DocumentActivity extends AppCompatActivity {

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -31,19 +31,19 @@
 import net.gsantner.markor.App;
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.TextFormat;
-import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.model.Document;
+import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ContextUtils;
 import net.gsantner.markor.util.DocumentIO;
-import other.writeily.widget.MarkorWidgetProvider;
 import net.gsantner.opoc.activity.GsFragmentBase;
 import net.gsantner.opoc.util.ActivityUtils;
 
 import java.io.File;
 
 import butterknife.BindView;
 import butterknife.OnTextChanged;
+import other.writeily.widget.MarkorWidgetProvider;
 
 @SuppressWarnings({"UnusedReturnValue", "RedundantCast"})
 public class DocumentEditFragment extends GsFragmentBase implements TextFormat.TextFormatApplier {

File: app/src/main/java/net/gsantner/markor/activity/DocumentPreviewFragment.java
Patch:
@@ -81,7 +81,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
         WebSettings webSettings = _webView.getSettings();
         webSettings.setBuiltInZoomControls(true);
         webSettings.setDisplayZoomControls(false);
-        webSettings.setTextZoom((int)(appSettings.getFontSize() / 17f * 100f));
+        webSettings.setTextZoom((int) (appSettings.getFontSize() / 17f * 100f));
         webSettings.setAppCacheEnabled(true);
         webSettings.setDatabaseEnabled(true);
         webSettings.setGeolocationEnabled(false);

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -24,9 +24,9 @@
 import android.view.View;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.FilesystemDialogCreator;
+import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ContextUtils;
 import net.gsantner.markor.util.DocumentIO;

File: app/src/main/java/net/gsantner/markor/activity/MoreInfoFragment.java
Patch:
@@ -26,7 +26,6 @@
 import net.gsantner.opoc.format.markdown.SimpleMarkdownParser;
 import net.gsantner.opoc.preference.GsPreferenceFragmentCompat;
 import net.gsantner.opoc.util.ActivityUtils;
-import net.gsantner.opoc.util.FileUtils;
 import net.gsantner.opoc.util.ShareUtil;
 
 import java.io.IOException;

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownHighlighter.java
Patch:
@@ -15,9 +15,9 @@
 import android.text.Editable;
 import android.text.InputFilter;
 
+import net.gsantner.markor.format.general.HexColorCodeUnderlineSpan;
 import net.gsantner.markor.ui.hleditor.Highlighter;
 import net.gsantner.markor.ui.hleditor.HighlightingEditor;
-import net.gsantner.markor.format.general.HexColorCodeUnderlineSpan;
 import net.gsantner.markor.util.AppSettings;
 
 import other.writeily.format.markdown.MarkdownHeaderSpanCreator;

File: app/src/main/java/net/gsantner/markor/format/markdown/MarkdownTextModuleActions.java
Patch:
@@ -22,9 +22,9 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.plaintext.CommonTextModuleActions;
-import net.gsantner.markor.ui.hleditor.TextModuleActions;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.FilesystemDialogCreator;
+import net.gsantner.markor.ui.hleditor.TextModuleActions;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.opoc.ui.FilesystemDialogData;
 import net.gsantner.opoc.util.FileUtils;

File: app/src/main/java/net/gsantner/markor/format/plaintext/CommonTextModuleActions.java
Patch:
@@ -15,9 +15,9 @@
 import android.view.KeyEvent;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.SearchOrCustomTextDialogCreator;
+import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.opoc.format.plaintext.PlainTextStuff;
 import net.gsantner.opoc.util.ContextUtils;
 

File: app/src/main/java/net/gsantner/markor/format/plaintext/PlainTextModuleActions.java
Patch:
@@ -14,8 +14,8 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import net.gsantner.markor.ui.hleditor.TextModuleActions;
 import net.gsantner.markor.model.Document;
+import net.gsantner.markor.ui.hleditor.TextModuleActions;
 import net.gsantner.markor.util.AppSettings;
 
 public class PlainTextModuleActions extends TextModuleActions {

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtHighlighter.java
Patch:
@@ -15,10 +15,10 @@
 import android.text.Editable;
 import android.text.InputFilter;
 
-import net.gsantner.markor.ui.hleditor.Highlighter;
-import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.format.general.FirstLineTopPaddedParagraphSpan;
 import net.gsantner.markor.format.general.HorizontalLineBackgroundParagraphSpan;
+import net.gsantner.markor.ui.hleditor.Highlighter;
+import net.gsantner.markor.ui.hleditor.HighlightingEditor;
 import net.gsantner.markor.util.AppSettings;
 
 public class TodoTxtHighlighter extends Highlighter {

File: app/src/main/java/net/gsantner/markor/format/todotxt/TodoTxtTextModuleActions.java
Patch:
@@ -17,10 +17,10 @@
 import android.view.ViewGroup;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.ui.hleditor.TextModuleActions;
 import net.gsantner.markor.format.plaintext.CommonTextModuleActions;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.SearchOrCustomTextDialogCreator;
+import net.gsantner.markor.ui.hleditor.TextModuleActions;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.opoc.format.todotxt.SttCommander;
 import net.gsantner.opoc.format.todotxt.SttTask;

File: app/src/main/java/net/gsantner/opoc/preference/GsPreferenceFragmentCompat.java
Patch:
@@ -310,7 +310,7 @@ protected void updateSummary(@StringRes int keyResId, CharSequence summary) {
      * @see android.support.v7.preference.PreferenceGroup#findPreference(CharSequence)
      */
     public Preference findPreference(@StringRes int key) {
-        return findPreference(getString(key));
+        return isAdded() ? findPreference(getString(key)) : null;
     }
 
     @Nullable

File: app/src/main/java/net/gsantner/opoc/preference/SharedPreferencesPropertyBackend.java
Patch:
@@ -209,7 +209,7 @@ private ArrayList<String> getStringListOne(String key, final SharedPreferences p
         String value = pref
                 .getString(key, ARRAY_SEPARATOR)
                 .replace(ARRAY_SEPARATOR_SUBSTITUTE, ARRAY_SEPARATOR);
-        if (value.equals(ARRAY_SEPARATOR)) {
+        if (value.equals(ARRAY_SEPARATOR) || TextUtils.isEmpty(value)) {
             return ret;
         }
         ret.addAll(Arrays.asList(value.split(ARRAY_SEPARATOR)));

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -283,6 +283,7 @@ public void onSaveInstanceState(@NonNull Bundle outState) {
         }
         if (getArguments() != null && _document.getFile() != null) {
             getArguments().putSerializable(DocumentIO.EXTRA_PATH, _document.getFile());
+            getArguments().putSerializable(DocumentIO.EXTRA_PATH_IS_FOLDER, false);
         }
         if (_hlEditor != null) {
             outState.putSerializable(SAVESTATE_CURSOR_POS, _hlEditor.getSelectionStart());

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -278,7 +278,9 @@ public boolean saveDocument() {
     @Override
     public void onSaveInstanceState(@NonNull Bundle outState) {
         saveDocument();
-        outState.putSerializable(SAVESTATE_DOCUMENT, _document);
+        if ((_hlEditor.length() * _document.getHistory().size()) < 9000) {
+            outState.putSerializable(SAVESTATE_DOCUMENT, _document);
+        }
         if (_hlEditor != null) {
             outState.putSerializable(SAVESTATE_CURSOR_POS, _hlEditor.getSelectionStart());
         }

File: app/src/main/java/net/gsantner/markor/format/moduleactions/TodoTxtTextModuleActions.java
Patch:
@@ -201,7 +201,7 @@ public void onClick(View view) {
                                 File doneFile = new File(todoFile.getParentFile(), callbackPayload);
                                 String doneFileContents = "";
                                 if (doneFile.exists() && doneFile.canRead()) {
-                                    doneFileContents = FileUtils.readTextFile(doneFile).trim();
+                                    doneFileContents = FileUtils.readTextFileFast(doneFile).trim();
                                 }
                                 doneFileContents += TextUtils.join("\n", move);
                                 if (FileUtils.writeFile(doneFile, doneFileContents)) {

File: app/src/main/java/net/gsantner/markor/model/Document.java
Patch:
@@ -19,7 +19,7 @@
 @SuppressWarnings({"WeakerAccess", "UnusedReturnValue", "unused"})
 public class Document implements Serializable {
     private final static int MIN_HISTORY_DELAY = 2000; // [ms]
-    private final static int MAX_HISTORY_SIZE = 6;
+    private final static int MAX_HISTORY_SIZE = 5;
 
     private int _format = TextFormat.FORMAT_UNKNOWN;
     private ArrayList<Document> _history = new ArrayList<>();

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -89,7 +89,7 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
 
             // Extract content and title
             document.setTitle(MarkdownTextConverter.MD_EXTENSION_PATTERN.matcher(filePath.getName()).replaceAll(""));
-            document.setContent(FileUtils.readTextFile(filePath));
+            document.setContent(FileUtils.readTextFileFast(filePath));
         }
 
         document.setFile(filePath);

File: app/src/main/java/net/gsantner/markor/format/moduleactions/MarkdownTextModuleActions.java
Patch:
@@ -287,11 +287,11 @@ private void getAlertDialog(int action) {
             }
         }
 
-        final String formatTemplate = action == 1 ? "[%s](%s)" : "![%s](%s)";
+        final String formatTemplate = action == 2 ? "[%s](%s)" : "![%s](%s)";
         int actionTitle = R.string.select;
-        if (action == 1) {
+        if (action == 2) {
             actionTitle = R.string.insert_link;
-        } else if (action == 2) {
+        } else if (action == 3) {
             actionTitle = R.string.insert_image;
         }
 

File: app/src/main/java/net/gsantner/markor/format/moduleactions/TextModuleActions.java
Patch:
@@ -13,7 +13,6 @@
 import android.view.ViewGroup;
 import android.widget.HorizontalScrollView;
 import android.widget.ImageView;
-import android.widget.LinearLayout;
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.highlighter.HighlightingEditor;

File: app/src/main/java/net/gsantner/opoc/util/ShareUtil.java
Patch:
@@ -444,8 +444,7 @@ public File extractFileFromIntent(Intent receivingIntent) {
                         tmpf = new File(Uri.decode(fileStr));
                         if (tmpf.exists()) {
                             return tmpf;
-                        }
-                        else if ((tmpf=new File(fileStr)).exists()) {
+                        } else if ((tmpf = new File(fileStr)).exists()) {
                             return tmpf;
                         }
                     }

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -535,6 +535,7 @@ private class ActionModeCallback implements ListView.MultiChoiceModeListener {
         public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             MenuInflater inflater = mode.getMenuInflater();
             inflater.inflate(R.menu.filesystem__context_menu, menu);
+            _cu.tintMenuItems(menu, true, Color.WHITE);
             mode.setTitle(getResources().getString(R.string.select_elements));
             return true;
         }

File: app/src/main/java/net/gsantner/opoc/preference/GsPreferenceFragmentCompat.java
Patch:
@@ -298,7 +298,7 @@ public boolean onPreferenceStartScreen(PreferenceFragmentCompat preferenceFragme
         return true;
     }
 
-    protected void updateSummary(@StringRes int keyResId, String summary) {
+    protected void updateSummary(@StringRes int keyResId, CharSequence summary) {
         updatePreference(keyResId, null, null, summary, null);
     }
 
@@ -315,7 +315,7 @@ public Preference findPreference(@StringRes int key) {
 
     @Nullable
     @SuppressWarnings("SameParameterValue")
-    protected Preference updatePreference(@StringRes int keyResId, @DrawableRes Integer iconRes, String title, String summary, Boolean visible) {
+    protected Preference updatePreference(@StringRes int keyResId, @DrawableRes Integer iconRes, CharSequence title, CharSequence summary, Boolean visible) {
         Preference pref = findPreference(getString(keyResId));
         if (pref != null) {
             if (summary != null) {

File: app/src/main/java/net/gsantner/opoc/util/ShareUtil.java
Patch:
@@ -54,6 +54,7 @@ public class ShareUtil {
     public final static String EXTRA_FILEPATH = "real_file_path_2";
     public final static SimpleDateFormat SDF_RFC3339_ISH = new SimpleDateFormat("yyyy-MM-dd'T'HH-mm", Locale.getDefault());
     public final static SimpleDateFormat SDF_SHORT = new SimpleDateFormat("yyMMdd-HHmm", Locale.getDefault());
+    public final static String MIME_TEXT_PLAIN = "text/plain";
 
 
     protected Context _context;
@@ -162,7 +163,7 @@ public void createLauncherDesktopShortcutLegacy(Intent intent, @DrawableRes int
     public void shareText(String text, @Nullable String mimeType) {
         Intent intent = new Intent(Intent.ACTION_SEND);
         intent.putExtra(Intent.EXTRA_TEXT, text);
-        intent.setType(mimeType != null ? mimeType : "text/plain");
+        intent.setType(mimeType != null ? mimeType : MIME_TEXT_PLAIN);
         showChooser(intent, null);
     }
 

File: app/src/main/java/net/gsantner/opoc/format/todotxt/SttCommander.java
Patch:
@@ -54,7 +54,7 @@ public class SttCommander {
     public static final Pattern PATTERN_PRIORITY_E = Pattern.compile("(?:^|\\n)\\(([Ee])\\)\\s");
     public static final Pattern PATTERN_PRIORITY_F = Pattern.compile("(?:^|\\n)\\(([Ff])\\)\\s");
     public static final Pattern PATTERN_COMPLETION_DATE = Pattern.compile("(?:^|\\n)(?:[Xx] )(" + PT_DATE + ")");
-    public static final Pattern PATTERN_CREATION_DATE = Pattern.compile("(?:^|\\n)(?:[Xx] " + PT_DATE + " )?(" + PT_DATE + ")");
+    public static final Pattern PATTERN_CREATION_DATE = Pattern.compile("(?:^|\\n)(?:\\([A-Za-z]\\)\\s)?(?:[Xx] " + PT_DATE + " )?(" + PT_DATE + ")");
 
     // Tasks from inside full text
     public static class SttTasksInTextRange {

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -58,6 +58,7 @@
 
 import static android.content.Context.SEARCH_SERVICE;
 
+@SuppressWarnings("all")
 public class FilesystemListFragment extends GsFragmentBase {
     public static final String FRAGMENT_TAG = "FilesystemListFragment";
     public static final int SORT_BY_DATE = 0;

File: app/src/main/java/net/gsantner/markor/format/highlighter/markdown/MarkdownHeaderSpanCreator.java
Patch:
@@ -38,7 +38,7 @@ public MarkdownHeaderSpanCreator(MarkdownHighlighter highlighter, Editable edita
 
     public ParcelableSpan create(Matcher m, int iM) {
         final char[] charSequence = extractMatchingRange(m);
-        Float proportion = calculateProportionBasedOnHeaderType(charSequence);
+        float proportion = calculateProportionBasedOnHeaderType(charSequence);
         Float size = calculateAdjustedSize(proportion);
         return new TextAppearanceSpan(_highlighter._fontType, Typeface.BOLD, (int) size.byteValue(),
                 ColorStateList.valueOf(_color), null);
@@ -64,7 +64,7 @@ private Float calculateProportionBasedOnHeaderType(final char[] charSequence) {
     }
 
     private Float calculateProportionForUnderlineHeader(final char[] charSequence) {
-        Float proportion = STANDARD_PROPORTION_MAX;
+        float proportion = STANDARD_PROPORTION_MAX;
         if (Character.valueOf('=').equals(charSequence[charSequence.length - 1])) {
             proportion -= SIZE_STEP;
         } else if (Character.valueOf('-').equals(charSequence[charSequence.length - 1])) {

File: app/src/main/java/net/gsantner/markor/format/moduleactions/TextModuleActions.java
Patch:
@@ -38,7 +38,7 @@ public TextModuleActions(Activity activity, Document document) {
     public abstract void appendTextModuleActionsToBar(ViewGroup viewGroup);
 
     protected void appendTextModuleActionToBar(ViewGroup barLayout, @DrawableRes int iconRes, View.OnClickListener l) {
-        ImageView btn = (ImageView) _activity.getLayoutInflater().inflate(R.layout.ui__quick_keyboard_button, (ViewGroup) null);
+        ImageView btn = (ImageView) _activity.getLayoutInflater().inflate(R.layout.ui__quick_keyboard_button, null);
         btn.setImageResource(iconRes);
         btn.setOnClickListener(l);
 

File: app/src/main/java/net/gsantner/markor/format/moduleactions/TodoTxtTextModuleActions.java
Patch:
@@ -80,6 +80,7 @@ private class KeyboardRegularActionListener implements View.OnClickListener {
             _action = action;
         }
 
+        @SuppressWarnings("StatementWithEmptyBody")
         @Override
         public void onClick(View view) {
             final SttCommander sttcmd = SttCommander.get();

File: app/src/main/java/net/gsantner/markor/ui/CreateFolderDialog.java
Patch:
@@ -9,12 +9,12 @@
 
 import android.app.Dialog;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AlertDialog;
 import android.view.LayoutInflater;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.EditText;
 import android.widget.TextView;
 
@@ -33,6 +33,7 @@ public class CreateFolderDialog extends DialogFragment {
     public CreateFolderDialog() {
     }
 
+    @NonNull
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         LayoutInflater inflater = LayoutInflater.from(getActivity());
@@ -42,7 +43,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         AlertDialog.Builder dialogBuilder;
 
         boolean darkTheme = AppSettings.get().isDarkThemeEnabled();
-        root = inflater.inflate(R.layout.ui__create_folder__dialog, (ViewGroup) null);
+        root = inflater.inflate(R.layout.ui__create_folder__dialog, null);
         dialogBuilder = new AlertDialog.Builder(getActivity(), darkTheme ?
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
 

File: app/src/main/java/net/gsantner/markor/ui/FilesystemListAdapter.java
Patch:
@@ -60,8 +60,9 @@ public long getItemId(int i) {
         return i;
     }
 
+    @NonNull
     @Override
-    public View getView(int i, View view, ViewGroup viewGroup) {
+    public View getView(int i, View view, @NonNull ViewGroup viewGroup) {
         LayoutInflater inflater = (LayoutInflater) _context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
         View row = inflater.inflate(R.layout.ui__file__item, viewGroup, false);
@@ -149,7 +150,7 @@ protected FilterResults performFiltering(CharSequence constraint) {
                     searchResults.values = _data;
                     searchResults.count = _data.size();
                 } else {
-                    ArrayList<File> searchResultsData = new ArrayList<File>();
+                    ArrayList<File> searchResultsData = new ArrayList<>();
 
                     for (File item : _data) {
                         if (item.getName().toLowerCase(Locale.getDefault()).contains(constraint.toString().toLowerCase(Locale.getDefault()))) {

File: app/src/main/java/net/gsantner/markor/ui/RenameDialog.java
Patch:
@@ -9,12 +9,12 @@
 
 import android.app.Dialog;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AlertDialog;
 import android.view.LayoutInflater;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.WindowManager;
 import android.widget.EditText;
 
@@ -40,6 +40,7 @@ public static RenameDialog newInstance(File sourceFile) {
 
     private EditText _newNameField;
 
+    @NonNull
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         final File file = (File) getArguments().getSerializable(EXTRA_FILEPATH);
@@ -59,7 +60,7 @@ private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater
         boolean darkTheme = AppSettings.get().isDarkThemeEnabled();
         dialogBuilder = new AlertDialog.Builder(getActivity(), darkTheme ?
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
-        root = inflater.inflate(R.layout.ui__rename__dialog, (ViewGroup) null);
+        root = inflater.inflate(R.layout.ui__rename__dialog, null);
 
         dialogBuilder.setTitle(getResources().getString(R.string.rename));
         dialogBuilder.setView(root);

File: app/src/main/java/net/gsantner/markor/util/AndroidBug5497Workaround.java
Patch:
@@ -12,6 +12,7 @@
 import android.view.ViewTreeObserver;
 import android.widget.FrameLayout;
 
+@SuppressWarnings("all")
 public class AndroidBug5497Workaround {
 
     // For more information, see https://code.google.com/p/android/issues/detail?id=5497

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -212,7 +212,7 @@ public boolean isEditorStartOnBotttom() {
         return getBool(R.string.pref_key__editor_start_editing_on_bottom, true);
     }
 
-    public boolean isEditorStartEditingInCenter(){
+    public boolean isEditorStartEditingInCenter() {
         return getBool(R.string.pref_key__editor_start_editing_in_center, false);
     }
 }

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -114,7 +114,7 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
     }
 
     public static synchronized boolean saveDocument(Document document, boolean argAllowRename, String currentText) {
-        boolean ret = false;
+        boolean ret;
         String filename = DocumentIO.normalizeTitleForFilename(document) + document.getFileExtension();
         document.setDoHistory(true);
         document.setFile(new File(document.getFile().getParentFile(), filename));

File: app/src/main/java/net/gsantner/opoc/preference/GsPreferenceFragmentCompat.java
Patch:
@@ -144,7 +144,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {
             final Integer color = getIconTintColor();
             if (view != null && color != null) {
                 Runnable r = () -> tintAllPrefIcons(frag, color);
-                for (int delayFactor : new int[]{1, 10, 50, 100, 500}) {
+                for (long delayFactor : new int[]{1, 10, 50, 100, 500}) {
                     view.postDelayed(r, delayFactor * DEFAULT_ICON_TINT_DELAY);
                 }
             }

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemDialog.java
Patch:
@@ -121,7 +121,7 @@ public void onViewCreated(View root, @Nullable Bundle savedInstanceState) {
             }
         }
 
-        if (_dopt == null) {
+        if (_dopt == null || _buttonCancel == null) {
             dismiss();
             return;
         }

File: app/src/main/java/net/gsantner/opoc/util/ContextUtils.java
Patch:
@@ -369,7 +369,7 @@ public void setHtmlToTextView(TextView textView, String html) {
     public double getEstimatedScreenSizeInches() {
         DisplayMetrics dm = _context.getResources().getDisplayMetrics();
 
-        double calc = dm.density * 160;
+        double calc = dm.density * 160d;
         double x = Math.pow(dm.widthPixels / calc, 2);
         double y = Math.pow(dm.heightPixels / calc, 2);
         calc = Math.sqrt(x + y) * 1.16;  // 1.16 = est. Nav/Statusbar

File: app/src/main/java/net/gsantner/markor/format/moduleactions/MarkdownTextModuleActions.java
Patch:
@@ -221,7 +221,7 @@ public void onClick(View view) {
                         int insertPos = text.indexOf('\n', start);
                         insertPos = insertPos < 1 ? text.length() : insertPos;
                         _hlEditor.getText().insert(insertPos, "  " + (text.endsWith("\n") ? "" : "\n"));
-                        _hlEditor.setSelection(insertPos + 3);
+                        _hlEditor.setSelection(((insertPos + 3) > _hlEditor.length() ? _hlEditor.length() : (insertPos + 3)));
                     }
                     break;
                 }

File: app/src/main/java/net/gsantner/markor/format/moduleactions/MarkdownTextModuleActions.java
Patch:
@@ -146,7 +146,7 @@ public void onClick(View v) {
                 int selectionEnd = _hlEditor.getSelectionEnd();
 
                 //Check if Selection includes the shortcut characters
-                if (selectionEnd < text.length() && (text.substring(selectionStart, selectionEnd)
+                if (selectionEnd < text.length() && selectionStart >= 0 && (text.substring(selectionStart, selectionEnd)
                         .matches("(\\*\\*|~~|_|`)[a-zA-Z0-9\\s]*(\\*\\*|~~|_|`)"))) {
 
                     text = text.substring(selectionStart + _action.length(),

File: app/src/main/java/net/gsantner/markor/ui/FilesystemDialogCreator.java
Patch:
@@ -41,6 +41,7 @@ public class FilesystemDialogCreator {
         opts.selectedItemImage = R.drawable.ic_check_black_24dp;
         opts.upButtonEnable = true;
         opts.homeButtonEnable = true;
+        opts.mustStartWithRootFolder = false;
 
         opts.primaryTextColor = darkTheme ? R.color.dark__primary_text : R.color.light__primary_text;
         opts.secondaryTextColor = darkTheme ? R.color.dark__secondary_text : R.color.light__secondary_text;

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemDialogAdapter.java
Patch:
@@ -157,7 +157,7 @@ public void onClick(View view) {
             case R.id.ui__filesystem_dialog__dir_up: {
                 _currentSelection.clear();
                 File parent = _currentFolder.getParentFile();
-                if (parent != null && parent.getAbsolutePath().startsWith(_dopt.rootFolder.getAbsolutePath())) {
+                if (parent != null && (!_dopt.mustStartWithRootFolder || parent.getAbsolutePath().startsWith(_dopt.rootFolder.getAbsolutePath()))) {
                     loadFolder(parent);
                 }
                 return;

File: app/src/main/java/net/gsantner/opoc/ui/FilesystemDialogData.java
Patch:
@@ -44,6 +44,8 @@ public static class Options {
                 doSelectFile = false,
                 doSelectMultiple = false;
 
+        public boolean mustStartWithRootFolder = true;
+
         // Visibility of elements
         public boolean
                 titleTextEnable = true,

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -97,8 +97,11 @@ public static synchronized Document loadDocument(Context context, Bundle argumen
 
         if (document.getFormat() == TextFormat.FORMAT_UNKNOWN) {
             String fnlower = document.getFile().getName().toLowerCase();
+
             if (SttCommander.TODOTXT_FILE_PATTERN.matcher(fnlower).matches()) {
                 document.setFormat(TextFormat.FORMAT_TODOTXT);
+            } else if (fnlower.endsWith(".txt")) {
+                document.setFormat(TextFormat.FORMAT_PLAIN);
             } else if (ContextUtils.get().isMaybeMarkdownFile(filePath)) {
                 document.setFormat(TextFormat.FORMAT_MARKDOWN);
             } else {

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -120,14 +120,15 @@ protected void onCreate(Bundle savedInstanceState) {
             if (receivingIntent.getStringExtra(EXTRA_LAUNCHER_SHORTCUT_PATH) != null) {
                 fileUri = Uri.fromFile(new File(receivingIntent.getStringExtra(EXTRA_LAUNCHER_SHORTCUT_PATH)));
             }
-            file = new File(fileUri.getPath());
             if (fileUri.toString().startsWith("content://")) {
                 new AlertDialog.Builder(this)
                         .setMessage("Sorry, but editing texts from content:// URIs is not supported yet. See https://github.com/gsantner/markor/issues/126 . Thanks!")
                         .setNegativeButton("Go to issue", (dialogInterface, i) -> _contextUtils.openWebpageInExternalBrowser("https://github.com/gsantner/markor/issues/126"))
                         .setPositiveButton("OK", null)
                         .setOnDismissListener((dialogInterface) -> finish())
                         .create().show();
+            } else{
+                file = new File(fileUri.getPath());
             }
         }
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
         loadDocumentIntoUi();
         if (savedInstanceState != null && savedInstanceState.containsKey(SAVESTATE_CURSOR_POS)) {
             int cursor = savedInstanceState.getInt(SAVESTATE_CURSOR_POS);
-            if (cursor >= 0 && cursor < _hlEditor.length()){
+            if (cursor >= 0 && cursor < _hlEditor.length()) {
                 _hlEditor.setSelection(cursor);
             }
         }
@@ -120,7 +120,7 @@ public void onResume() {
         checkReloadDisk();
         int cursor = _hlEditor.getSelectionStart();
         _hlEditor.setText(_document.getContent());
-        if (cursor >= 0 && cursor < _hlEditor.length()){
+        if (cursor >= 0 && cursor < _hlEditor.length()) {
             _hlEditor.setSelection(cursor);
         }
     }
@@ -318,7 +318,7 @@ public void setUserVisibleHint(boolean isVisibleToUser) {
 
     private void checkReloadDisk() {
         Document cmp = DocumentIO.loadDocument(getActivity(), getArguments(), null);
-        if (!cmp.getContent().equals(_document.getContent())) {
+        if (_document != null && cmp != null && cmp.getContent() != null && !cmp.getContent().equals(_document.getContent())) {
             _document = cmp;
             loadDocument();
             loadDocumentIntoUi();

File: app/src/main/java/net/gsantner/opoc/util/ShareUtilBase.java
Patch:
@@ -150,7 +150,7 @@ public static Bitmap getBitmapFromWebView(WebView webView) {
             webView.destroyDrawingCache();
 
             return bitmap;
-        } catch (Exception e) {
+        } catch (Exception | OutOfMemoryError e) {
             e.printStackTrace();
             return null;
         }

File: app/src/main/java/net/gsantner/markor/format/highlighter/todotxt/TodoTxtHighlighterPattern.java
Patch:
@@ -21,7 +21,7 @@ public enum TodoTxtHighlighterPattern {
     DATE(SttCommander.PATTERN_DATE),
     COMPLETION_DATE(SttCommander.PATTERN_COMPLETION_DATE),
     CREATION_DATE(SttCommander.PATTERN_CREATION_DATE),
-    PATTERN_KEY_VALUE(SttCommander.PATTERN_KEY_VALUE_PAIRS),
+    PATTERN_KEY_VALUE(SttCommander.PATTERN_KEY_VALUE_PAIRS__TAG_ONLY),
     PRIORITY_ANY(SttCommander.PATTERN_PRIORITY_ANY),
     PRIORITY_A(SttCommander.PATTERN_PRIORITY_A),
     PRIORITY_B(SttCommander.PATTERN_PRIORITY_B),

File: app/src/main/java/net/gsantner/opoc/format/todotxt/SttCommander.java
Patch:
@@ -44,7 +44,8 @@ public class SttCommander {
     public static final Pattern PATTERN_CONTEXTS = Pattern.compile("\\B(?:\\@)(\\w+)");
     public static final Pattern PATTERN_DONE = Pattern.compile("(?m)(^[Xx]) (.*)$");
     public static final Pattern PATTERN_DATE = Pattern.compile("(?:^|\\s|:)(" + PT_DATE + ")(?:$|\\s)");
-    public static final Pattern PATTERN_KEY_VALUE_PAIRS = Pattern.compile("(?i)([a-z]+):([a-z0-9_-]+)");
+    public static final Pattern PATTERN_KEY_VALUE_PAIRS__TAG_ONLY = Pattern.compile("(?i)([a-z]+):([a-z0-9_-]+)");
+    public static final Pattern PATTERN_KEY_VALUE_PAIRS = Pattern.compile("(?i)((?:[a-z]+):(?:[a-z0-9_-]+))");
     public static final Pattern PATTERN_PRIORITY_ANY = Pattern.compile("(?:^|\\n)\\(([A-Za-z])\\)\\s");
     public static final Pattern PATTERN_PRIORITY_A = Pattern.compile("(?:^|\\n)\\(([Aa])\\)\\s");
     public static final Pattern PATTERN_PRIORITY_B = Pattern.compile("(?:^|\\n)\\(([Bb])\\)\\s");

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -102,7 +102,9 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
         loadDocumentIntoUi();
 
         new ActivityUtils(getActivity()).hideSoftKeyboard();
+        AppSettings appSettings = new AppSettings(_context);
         _hlEditor.clearFocus();
+        _hlEditor.setLineSpacing(0, appSettings.getEditorLineSpacing());
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -168,7 +168,6 @@ public void updateSummaries() {
             );
         }
 
-
         @Override
         protected void onPreferenceChanged(SharedPreferences prefs, String key) {
             super.onPreferenceChanged(prefs, key);

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -23,7 +23,7 @@ public class AppSettings extends AppSettingsBase {
 
     public AppSettings(Context _context) {
         super(_context);
-        _themeDarkResStr = rstr(R.string.app_theme_dark);
+        _themeDarkResStr = rstr(R.string.app_theme_light);
     }
 
     public static AppSettings get() {

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -498,7 +498,7 @@ public int compare(File file, File other) {
         reloadAdapter();
     }
 
-    public boolean isCurrentDirectoryNotebookDirectoy() {
+    public boolean isCurrentDirectoryNotebookDirectory() {
         return _currentDir == null || _rootDir == null ||
                 _currentDir.getAbsolutePath().equalsIgnoreCase(_rootDir.getAbsolutePath());
     }
@@ -522,7 +522,7 @@ public boolean onBackPressed() {
             return true;
         }
 
-        if (!isCurrentDirectoryNotebookDirectoy()) {
+        if (!isCurrentDirectoryNotebookDirectory()) {
             goDirectoryUp();
             return true;
         }

File: app/src/main/java/net/gsantner/markor/ui/FilesystemListAdapter.java
Patch:
@@ -30,6 +30,7 @@
 import java.util.List;
 import java.util.Locale;
 
+// Note: Selection color is controller by state-list-drawable
 public class FilesystemListAdapter extends ArrayAdapter<File> implements Filterable {
 
     public static final String EMPTY_STRING = "";
@@ -81,15 +82,15 @@ public View getView(int i, View view, ViewGroup viewGroup) {
             // Theme Adjustments
             if (AppSettings.get().isDarkThemeEnabled()) {
                 noteTitle.setTextColor(_context.getResources().getColor(android.R.color.white));
-
+                row.setBackgroundResource(R.drawable.ui__file__item__selection_background_dark);
                 if (item.isDirectory()) {
                     fileIdentifierImageView.setImageResource(getIdentifierDrawable(true));
                 } else {
                     fileIdentifierImageView.setImageResource(getIdentifierDrawable(false));
                 }
             } else {
                 noteTitle.setTextColor(_context.getResources().getColor(R.color.dark_grey));
-
+                row.setBackgroundResource(R.drawable.ui__file__item__selection_background_light);
                 if (item.isDirectory()) {
                     fileIdentifierImageView.setImageResource(getIdentifierDrawable(true));
                 } else {

File: app/src/main/java/net/gsantner/markor/ui/SearchOrCustomTextDialogCreator.java
Patch:
@@ -71,7 +71,7 @@ public static void showPriorityDialog(Activity activity, char selectedPriority,
     private static void baseConf(Activity activity, SearchOrCustomTextDialog.DialogOptions dopt) {
         AppSettings as = new AppSettings(activity);
         dopt.isDarkDialog = as.isDarkThemeEnabled();
-        dopt.textColor = ContextCompat.getColor(activity, dopt.isDarkDialog ? R.color.dark__primary_text : R.color.light__background);
+        dopt.textColor = ContextCompat.getColor(activity, dopt.isDarkDialog ? R.color.dark__primary_text : R.color.light__primary_text);
         dopt.highlightColor = 0xffF57900;
     }
 }

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -98,7 +98,7 @@ public boolean isHighlightingEnabled() {
     }
 
     public int getMarkdownHighlightingDelay() {
-        return getIntOfStringPref(R.string.pref_key__markdown__highlighting_delay, 110);
+        return getInt(R.string.pref_key__markdown__highlighting_delay, 270);
     }
 
 
@@ -112,7 +112,7 @@ public boolean isMarkdownHighlightCodeFontMonospaceAllowed() {
 
 
     public int getHighlightingDelayTodoTxt() {
-        return getIntOfStringPref(R.string.pref_key__todotxt__highlighting_delay, 190);
+        return getInt(R.string.pref_key__todotxt__highlighting_delay, 1200);
     }
 
     public String getLastOpenedDirectory() {

File: app/src/main/java/net/gsantner/markor/format/converter/TodoTxtTextConverter.java
Patch:
@@ -12,8 +12,6 @@
 
 import net.gsantner.markor.util.AppSettings;
 
-import java.util.regex.Pattern;
-
 @SuppressWarnings("WeakerAccess")
 public class TodoTxtTextConverter extends TextConverter {
 

File: app/src/main/java/net/gsantner/markor/format/highlighter/todotxt/TodoTxtHighlighter.java
Patch:
@@ -36,7 +36,8 @@ protected Editable run(final HighlightingEditor editor, final Editable editable)
                 return editable;
             }
 
-            _profiler.start(true, "Paragraph top padding");
+            _profiler.start(true, "Todo.Txt Highlighting");
+            _profiler.restart("Paragraph top padding");
             createParagraphStyleSpanForMatches(editable, TodoTxtHighlighterPattern.LINE_OF_TEXT.getPattern(),
                     (matcher, iM) -> new FirstLineTopPaddedParagraphSpan(2f));
 

File: app/src/main/java/net/gsantner/markor/format/highlighter/SpanCreatorP.java
Patch:
@@ -1,6 +1,4 @@
 /*
- * Copyright (c) 2014 Jeff Martin
- * Copyright (c) 2015 Pedro Lafuente
  * Copyright (c) 2017 Gregor Santner and Markor contributors
  *
  * Licensed under the MIT license. See LICENSE file in the project root for details.

File: app/src/main/java/net/gsantner/markor/format/highlighter/todotxt/TodoTxtHighlighterColors.java
Patch:
@@ -1,6 +1,4 @@
 /*
- * Copyright (c) 2014 Jeff Martin
- * Copyright (c) 2015 Pedro Lafuente
  * Copyright (c) 2017 Gregor Santner and Markor contributors
  *
  * Licensed under the MIT license. See LICENSE file in the project root for details.

File: app/src/main/java/net/gsantner/markor/format/highlighter/todotxt/TodoTxtHighlighterColorsNeutral.java
Patch:
@@ -1,6 +1,4 @@
 /*
- * Copyright (c) 2014 Jeff Martin
- * Copyright (c) 2015 Pedro Lafuente
  * Copyright (c) 2017 Gregor Santner and Markor contributors
  *
  * Licensed under the MIT license. See LICENSE file in the project root for details.

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -82,7 +82,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
 
         Document document = new Document();
         document.setContent(_sharedText);
-        new MarkdownTextConverter().markupToHtmlShowInWebView(document, _webView);
+        new MarkdownTextConverter().convertMarkupShowInWebView(document, _webView);
     }
 
 
@@ -163,7 +163,7 @@ private void showInDocumentActivity(Document document) {
             if (AppSettings.get().isPreviewFirst()) {
                 a.showPreview(document, null);
             } else {
-                a.showEditor(document, null, false);
+                a.showTextEditor(document, null, false);
             }
         }
 

File: app/src/main/java/net/gsantner/markor/format/converter/MarkdownTextConverter.java
Patch:
@@ -64,7 +64,7 @@ public class MarkdownTextConverter extends TextConverter {
     //########################
 
     @Override
-    public String markupToHtml(String markup, Context context) {
+    public String convertMarkup(String markup, Context context) {
         String markupRendered = renderer.render(parser.parse(markup));
         return putContentIntoTemplate(context, markupRendered);
     }

File: app/src/main/java/net/gsantner/markor/format/moduleactions/MarkdownTextModuleActions.java
Patch:
@@ -16,7 +16,6 @@
 import android.widget.EditText;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.format.highlighter.HighlightingEditor;
 import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.FilesystemDialogCreator;
 import net.gsantner.markor.util.AppSettings;
@@ -29,8 +28,8 @@
 
 public class MarkdownTextModuleActions extends TextModuleActions {
 
-    public MarkdownTextModuleActions(Activity activity, Document document, HighlightingEditor hlEditor) {
-        super(activity, document, hlEditor);
+    public MarkdownTextModuleActions(Activity activity, Document document) {
+        super(activity, document);
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/format/moduleactions/PlainTextModuleActions.java
Patch:
@@ -8,13 +8,12 @@
 import android.app.Activity;
 import android.view.ViewGroup;
 
-import net.gsantner.markor.format.highlighter.HighlightingEditor;
 import net.gsantner.markor.model.Document;
 
 public class PlainTextModuleActions extends TextModuleActions {
 
-    public PlainTextModuleActions(Activity activity, Document document, HighlightingEditor hlEditor) {
-        super(activity, document, hlEditor);
+    public PlainTextModuleActions(Activity activity, Document document) {
+        super(activity, document);
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -117,7 +117,7 @@ private void showAppendDialog() {
         FilesystemDialogCreator.showFileDialog(new FilesystemDialogData.SelectionListenerAdapter() {
             @Override
             public void onFsDialogConfig(FilesystemDialogData.Options opt) {
-                opt.rootFolder = new File(AppSettings.get().getSaveDirectory());
+                opt.rootFolder = new File(AppSettings.get().getNotebookDirectoryAsStr());
             }
 
             @Override
@@ -143,7 +143,7 @@ private void appendToExistingDocument(File file, boolean showEditor) {
     private void createNewDocument() {
         // Create a new document
         Bundle args = new Bundle();
-        args.putSerializable(DocumentIO.EXTRA_PATH, new File(AppSettings.get().getSaveDirectory()));
+        args.putSerializable(DocumentIO.EXTRA_PATH, new File(AppSettings.get().getNotebookDirectoryAsStr()));
         args.putBoolean(DocumentIO.EXTRA_PATH_IS_FOLDER, true);
         Document document = DocumentIO.loadDocument(_context, args, null);
         DocumentIO.saveDocument(document, false, _sharedText);

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -70,7 +70,7 @@ protected void onCreate(Bundle savedInstanceState) {
         if (AppSettings.get().isOverviewStatusBarHidden()) {
             getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         }
-        if (!AppSettings.get().isRememberLastDirectory()) {
+        if (!AppSettings.get().isLoadLastDirectoryAtStartup()) {
             AppSettings.get().setLastOpenedDirectory(null);
         }
         setContentView(R.layout.main__activity);
@@ -167,7 +167,7 @@ public void onReceive(Context context, Intent intent) {
             switch (action == null ? "" : action) {
                 case AppCast.VIEW_FOLDER_CHANGED.ACTION: {
                     File currentDir = new File(intent.getStringExtra(AppCast.VIEW_FOLDER_CHANGED.EXTRA_PATH));
-                    File rootDir = new File(AppSettings.get().getSaveDirectory());
+                    File rootDir = new File(AppSettings.get().getNotebookDirectoryAsStr());
                     if (currentDir.equals(rootDir)) {
                         _toolbar.setTitle(R.string.app_name);
                     } else {
@@ -204,7 +204,7 @@ public void onClickFab(View view) {
                                 .getCurrentDir();
                         intent.putExtra(DocumentIO.EXTRA_PATH, path);
                     } else {
-                        intent.putExtra(DocumentIO.EXTRA_PATH, new File(AppSettings.get().getSaveDirectory()));
+                        intent.putExtra(DocumentIO.EXTRA_PATH, new File(AppSettings.get().getNotebookDirectoryAsStr()));
                     }
                     intent.putExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, true);
                     startActivity(intent);

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -119,7 +119,7 @@ public void onPause() {
 
         public void updateSummaries() {
             Preference pref = findPreference(getString(R.string.pref_key__notebook_directory));
-            pref.setSummary(getString(R.string.select_storage_folder) + "\n" + AppSettings.get().getSaveDirectory());
+            pref.setSummary(getString(R.string.select_storage_folder) + "\n" + AppSettings.get().getNotebookDirectoryAsStr());
         }
 
         @Override
@@ -150,7 +150,7 @@ public void onFsSelected(String request, File file) {
                                     AppSettings as = AppSettings.get();
                                     as.setSaveDirectory(file.getAbsolutePath());
                                     as.setRecreateMainRequired(true);
-                                    as.setLastOpenedDirectory(as.getSaveDirectory());
+                                    as.setLastOpenedDirectory(as.getNotebookDirectoryAsStr());
                                     updateSummaries();
                                 }
 

File: app/src/main/java/net/gsantner/markor/format/converter/MarkdownConverter.java
Patch:
@@ -83,7 +83,7 @@ public static String convertToHtmlRenderIntoWebview(Document document, WebView w
         // Default font is set by css in line 1 of generated html
         html = html.replaceFirst("sans-serif-light", AppSettings.get().getFontFamily());
 
-        String baseFolder = AppSettings.get().getSaveDirectory();
+        String baseFolder = AppSettings.get().getNotebookDirectoryAsStr();
         if (document.getFile() != null && document.getFile().getParentFile() != null) {
             baseFolder = document.getFile().getParent();
         }

File: app/src/main/java/net/gsantner/markor/format/textmodule/MarkdownTextModuleActions.java
Patch:
@@ -262,7 +262,7 @@ private void getAlertDialog(int action) {
         final FilesystemDialogData.SelectionListener fsListener = new FilesystemDialogData.SelectionListenerAdapter() {
             @Override
             public void onFsSelected(final String request, final File file) {
-                final String saveDir = AppSettings.get().getSaveDirectory();
+                final String saveDir = AppSettings.get().getNotebookDirectoryAsStr();
                 String text = null;
                 if (file.getAbsolutePath().startsWith(saveDir) && _document.getFile().getAbsolutePath().startsWith(saveDir)) {
                     text = FileUtils.relativePath(_document.getFile(), file);

File: app/src/main/java/net/gsantner/markor/util/PermissionChecker.java
Patch:
@@ -43,7 +43,7 @@ public static boolean checkPermissionResult(final Activity activity, int request
     }
 
     public static boolean mkSaveDir(Activity activity) {
-        File saveDir = new File(AppSettings.get().getSaveDirectory());
+        File saveDir = new File(AppSettings.get().getNotebookDirectoryAsStr());
         if (!saveDir.exists() && !saveDir.mkdirs()) {
             new ActivityUtils(activity).showSnackBar(R.string.error_cannot_create_notebook_dir, false);
             return false;

File: app/src/main/java/net/gsantner/markor/widget/MarkorWidgetProvider.java
Patch:
@@ -60,7 +60,7 @@ public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] a
 
             SharedPreferences sharedPreferences = context.getSharedPreferences(
                     "" + appWidgetIds[i], Context.MODE_PRIVATE);
-            String directory = sharedPreferences.getString(WIDGET_PATH, AppSettings.get().getSaveDirectory());
+            String directory = sharedPreferences.getString(WIDGET_PATH, AppSettings.get().getNotebookDirectoryAsStr());
             Intent newDocumentIntent = new Intent(context, DocumentActivity.class)
                     .putExtra(DocumentIO.EXTRA_PATH, new File(directory))
                     .putExtra(DocumentIO.EXTRA_PATH_IS_FOLDER, true);

File: app/src/main/java/net/gsantner/markor/widget/WidgetConfigure.java
Patch:
@@ -55,7 +55,7 @@ public void onFsNothingSelected(String request) {
                 @Override
                 public void onFsDialogConfig(FilesystemDialogData.Options opt) {
                     opt.titleText = R.string.select_folder;
-                    opt.rootFolder = new File(AppSettings.get().getSaveDirectory());
+                    opt.rootFolder = new File(AppSettings.get().getNotebookDirectoryAsStr());
                 }
             }, fragManager, this);
         }

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -287,6 +287,8 @@ public void setUserVisibleHint(boolean isVisibleToUser) {
         Activity a = getActivity();
         if (isVisibleToUser && a != null && a instanceof MainActivity) {
             checkReloadDisk();
+        } else if (!isVisibleToUser && _document != null) {
+            saveDocument();
         }
     }
 

File: app/src/main/java/net/gsantner/markor/util/DocumentIO.java
Patch:
@@ -54,7 +54,7 @@ public static Document loadDocument(Context context, Intent arguments, @Nullable
     }
 
     @SuppressWarnings({"ConstantConditions", "ResultOfMethodCallIgnored"})
-    public static Document loadDocument(Context context, Bundle arguments, @Nullable Document existingDocument) {
+    public static synchronized Document loadDocument(Context context, Bundle arguments, @Nullable Document existingDocument) {
         if (existingDocument != null) {
             return existingDocument;
         }
@@ -96,7 +96,7 @@ public static Document loadDocument(Context context, Bundle arguments, @Nullable
         return document;
     }
 
-    public static boolean saveDocument(Document document, boolean argAllowRename, String currentText) {
+    public static synchronized boolean saveDocument(Document document, boolean argAllowRename, String currentText) {
         boolean ret = false;
         String filename = DocumentIO.normalizeTitleForFilename(document) + document.getFileExtension();
         document.setDoHistory(true);

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -130,6 +130,7 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin
                 _appSettings.setRecreateMainRequired(true);
             } else if (key.equals(getString(R.string.pref_key__app_theme))) {
                 ((SettingsActivity) getActivity()).restartActivity();
+                _appSettings.setRecreateMainRequired(true);
             } else if (key.equals(getString(R.string.pref_key__is_overview_statusbar_hidden))) {
                 activityRetVal = RESULT.RESTART_REQ;
                 _appSettings.setRecreateMainRequired(true);

File: app/src/main/java/net/gsantner/markor/format/shortcut/EditorShortcutsMarkdown.java
Patch:
@@ -269,7 +269,7 @@ public void onClick(DialogInterface dialog, int id) {
                             _contentEditor.setSelection(_contentEditor.getSelectionStart());
                         } else {
                             _contentEditor.getText().insert(_contentEditor.getSelectionStart(),
-                                    String.format("[%s](%s)", linkName.getText().toString(),
+                                    String.format("![%s](%s)", linkName.getText().toString(),
                                             linkUrl.getText().toString()));
                         }
                     }

File: app/src/main/java/net/gsantner/markor/format/shortcut/EditorShortcutsMarkdown.java
Patch:
@@ -136,7 +136,7 @@ public void onClick(View v) {
                 int selectionEnd = _contentEditor.getSelectionEnd();
 
                 //Check if Selection includes the shortcut characters
-                if ((text.substring(selectionStart, selectionEnd)
+                if (selectionEnd < text.length() && (text.substring(selectionStart, selectionEnd)
                         .matches("(\\*\\*|~~|_|`)[a-zA-Z0-9\\s]*(\\*\\*|~~|_|`)"))) {
 
                     text = text.substring(selectionStart + _action.length(),

File: app/src/main/java/net/gsantner/markor/activity/DocumentActivity.java
Patch:
@@ -29,13 +29,13 @@
 import android.widget.ViewSwitcher;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.model.Document;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.format.converter.MarkdownConverter;
+import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.BaseFragment;
 import net.gsantner.markor.util.AndroidBug5497Workaround;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ContextUtils;
+import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.util.PermissionChecker;
 import net.gsantner.markor.util.ShareUtil;
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentEditFragment.java
Patch:
@@ -29,10 +29,10 @@
 import net.gsantner.markor.format.shortcut.EditorShortcuts;
 import net.gsantner.markor.format.shortcut.EditorShortcutsMarkdown;
 import net.gsantner.markor.model.Document;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.ui.BaseFragment;
 import net.gsantner.markor.util.AppSettings;
 import net.gsantner.markor.util.ContextUtils;
+import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.widget.MarkorWidgetProvider;
 import net.gsantner.opoc.util.ActivityUtils;
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentPreviewFragment.java
Patch:
@@ -20,11 +20,11 @@
 import android.webkit.WebView;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.model.Document;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.format.converter.MarkdownConverter;
+import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.BaseFragment;
 import net.gsantner.markor.util.ContextUtils;
+import net.gsantner.markor.util.DocumentIO;
 
 import java.io.File;
 

File: app/src/main/java/net/gsantner/markor/activity/DocumentShareIntoFragment.java
Patch:
@@ -18,12 +18,12 @@
 import android.widget.TextView;
 
 import net.gsantner.markor.R;
-import net.gsantner.markor.ui.FilesystemDialogCreator;
-import net.gsantner.markor.model.Document;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.format.converter.MarkdownConverter;
+import net.gsantner.markor.model.Document;
 import net.gsantner.markor.ui.BaseFragment;
+import net.gsantner.markor.ui.FilesystemDialogCreator;
 import net.gsantner.markor.util.AppSettings;
+import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.util.PermissionChecker;
 import net.gsantner.opoc.ui.FilesystemDialogData;
 

File: app/src/main/java/net/gsantner/markor/format/highlighter/Highlighter.java
Patch:
@@ -67,14 +67,16 @@ private void createHeaderSpanForMatches(Editable e, MarkdownHighlighterPattern p
 
         createSpanForMatches(e, pattern, new MarkdownHeaderSpanCreator(this, e, headerColor));
     }
-    private void createColorSpanForDoublespace(Editable e, MarkdownHighlighterPattern pattern, final int color){
+
+    private void createColorSpanForDoublespace(Editable e, MarkdownHighlighterPattern pattern, final int color) {
         createSpanForMatches(e, pattern, new SpanCreator() {
             @Override
             public ParcelableSpan create(Matcher matcher) {
                 return new BackgroundColorSpan(color);
             }
         });
     }
+
     private void createMonospaceSpanForMatches(Editable e, MarkdownHighlighterPattern pattern) {
         createSpanForMatches(e, pattern, new SpanCreator() {
             @Override

File: app/src/main/java/net/gsantner/markor/format/highlighter/markdown/MarkdownHighlighterColorsNeutral.java
Patch:
@@ -31,7 +31,7 @@ public int getListColor() {
     }
 
     @Override
-    public int getDoublespaceColor(){
+    public int getDoublespaceColor() {
         return COLOR_DOUBLESPACE;
     }
 

File: app/src/main/java/net/gsantner/markor/format/shortcut/EditorShortcutsMarkdown.java
Patch:
@@ -225,7 +225,7 @@ private void getAlertDialog(int action) {
                     break;
                 }
             }
-            for (; lineEndidx <= contentText.length(); lineEndidx++) {
+            for (; lineEndidx < contentText.length(); lineEndidx++) {
                 if (contentText.charAt(lineEndidx) == '\n') {
                     break;
                 }

File: app/src/main/java/net/gsantner/markor/widget/FilesWidgetFactory.java
Patch:
@@ -15,8 +15,8 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.format.converter.MarkdownConverter;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.util.ContextUtils;
+import net.gsantner.markor.util.DocumentIO;
 
 import java.io.File;
 

File: app/src/main/java/net/gsantner/markor/widget/MarkorWidgetProvider.java
Patch:
@@ -19,8 +19,8 @@
 import net.gsantner.markor.R;
 import net.gsantner.markor.activity.DocumentActivity;
 import net.gsantner.markor.activity.MainActivity;
-import net.gsantner.markor.util.DocumentIO;
 import net.gsantner.markor.util.AppSettings;
+import net.gsantner.markor.util.DocumentIO;
 
 import java.io.File;
 

File: app/src/main/java/net/gsantner/markor/widget/FilesWidgetFactory.java
Patch:
@@ -44,7 +44,7 @@ public void onDataSetChanged() {
     }
 
     private void updateFiles() {
-        this._widgetFilesList = _dir.listFiles(file ->
+        _widgetFilesList = _dir.listFiles(file ->
                 !file.isDirectory() && ContextUtils.get().isMaybeMarkdownFile(file)
         );
     }
@@ -56,7 +56,7 @@ public void onDestroy() {
 
     @Override
     public int getCount() {
-        return _widgetFilesList.length;
+        return _widgetFilesList == null ? 0 : _widgetFilesList.length;
     }
 
     @Override

File: app/src/main/java/net/gsantner/markor/activity/DocumentPreviewFragment.java
Patch:
@@ -94,7 +94,7 @@ private void showDocument() {
         _webView.loadDataWithBaseURL(_document.getFile().getParent(), html, "text/html", Constants.UTF_CHARSET, null);
     }
 
-    private String renderMarkdown(){
+    private String renderMarkdown() {
         String html = _mdRenderer.renderMarkdown(_document.getContent(), _context);
 
         // Default font is set by css in line 1 of generated html

File: app/src/main/java/net/gsantner/markor/model/DocumentLoader.java
Patch:
@@ -27,6 +27,7 @@ public class DocumentLoader {
     public static final String EXTRA_DOCUMENT = "EXTRA_DOCUMENT"; // Document
     public static final String EXTRA_PATH = "EXTRA_PATH"; // java.io.File
     public static final String EXTRA_PATH_IS_FOLDER = "EXTRA_PATH_IS_FOLDER"; // boolean
+    public static final String EXTRA_ALLOW_RENAME = "EXTRA_ALLOW_RENAME";
 
 
     public static Document loadDocument(Context context, Intent arguments, @Nullable Document existingDocument) {
@@ -38,6 +39,7 @@ public static Document loadDocument(Context context, Intent arguments, @Nullable
         if (arguments.hasExtra(EXTRA_DOCUMENT)) {
             bundle.putSerializable(EXTRA_DOCUMENT, arguments.getSerializableExtra(EXTRA_DOCUMENT));
         } else {
+            bundle.putBoolean(EXTRA_ALLOW_RENAME, arguments.getBooleanExtra(EXTRA_ALLOW_RENAME, true));
             bundle.putSerializable(EXTRA_PATH, arguments.getSerializableExtra(EXTRA_PATH));
             bundle.putBoolean(EXTRA_PATH_IS_FOLDER, arguments.getBooleanExtra(EXTRA_PATH_IS_FOLDER, false));
         }

File: app/src/main/java/net/gsantner/markor/util/PermissionChecker.java
Patch:
@@ -34,7 +34,7 @@ public static boolean doIfPermissionGranted(final Activity activity) {
 
     public static boolean checkPermissionResult(final Activity activity, int requestCode, String[] permissions, int[] grantResults) {
         if (requestCode == 314) {
-            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                 return true;
             }
         }

File: app/src/main/java/net/gsantner/markor/dialog/CreateFolderDialog.java
Patch:
@@ -42,7 +42,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         AlertDialog.Builder dialogBuilder;
 
         boolean darkTheme = AppSettings.get().isDarkThemeEnabled();
-        root = inflater.inflate(R.layout.ui__create_folder__dialog, (ViewGroup)null);
+        root = inflater.inflate(R.layout.ui__create_folder__dialog, (ViewGroup) null);
         dialogBuilder = new AlertDialog.Builder(getActivity(), darkTheme ?
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
 

File: app/src/main/java/net/gsantner/markor/dialog/RenameDialog.java
Patch:
@@ -60,7 +60,7 @@ private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater
         boolean darkTheme = AppSettings.get().isDarkThemeEnabled();
         dialogBuilder = new AlertDialog.Builder(getActivity(), darkTheme ?
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
-        root = inflater.inflate(R.layout.ui__rename__dialog, (ViewGroup)null);
+        root = inflater.inflate(R.layout.ui__rename__dialog, (ViewGroup) null);
 
         dialogBuilder.setTitle(getResources().getString(R.string.rename));
         dialogBuilder.setView(root);

File: app/src/main/java/net/gsantner/markor/editor/HighlightingEditor.java
Patch:
@@ -9,7 +9,6 @@
 
 import android.content.Context;
 import android.os.Handler;
-import android.os.Parcelable;
 import android.support.v7.widget.AppCompatEditText;
 import android.text.Editable;
 import android.text.InputFilter;

File: app/src/main/java/net/gsantner/markor/model/DocumentLoader.java
Patch:
@@ -15,7 +15,6 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
-import android.text.TextUtils;
 
 import net.gsantner.markor.R;
 import net.gsantner.opoc.util.FileUtils;

File: app/src/main/java/net/gsantner/markor/editor/HighlightingEditor.java
Patch:
@@ -9,6 +9,7 @@
 
 import android.content.Context;
 import android.os.Handler;
+import android.os.Parcelable;
 import android.support.v7.widget.AppCompatEditText;
 import android.text.Editable;
 import android.text.InputFilter;

File: app/src/main/java/net/gsantner/markor/model/Constants.java
Patch:
@@ -36,7 +36,7 @@ public class Constants {
             Constants.MD_EXT4, Constants.MD_EXT5, Constants.MD_EXT6};
 
 
-    public static final int MAX_TITLE_LENGTH = 20;
+    public static final int MAX_TITLE_EXTRACTION_LENGTH = 25;
     public static final String EXTRA_FOLDERPATH = "filesystem_folderpath";
     public static final String EXTRA_FILEPATH = "filesystem_filepath";
 
@@ -48,7 +48,7 @@ public class Constants {
 
     // ----- KEYS -----
     public static final String CURRENT_DIRECTORY_DIALOG_KEY = "current_dir_folder_key";
-    public static final String NOTE_KEY = "note_key";
+    public static final String EXTRA_PATH = "note_key";
     public static final String MD_PREVIEW_BASE = "md_preview_base";
     public static final String MD_PREVIEW_KEY = "md_preview_key";
 
@@ -59,7 +59,6 @@ public class Constants {
     public static final String MD_HTML_PREFIX_END = "</head><body>";
     public static final String MD_HTML_RTL_CSS = "<style>body{text-align:right; direction:rtl;}</style>";
     public static final String MD_HTML_SUFFIX = "</body></html>";
-    public static final String TARGET_DIR = "note_source_dir";
 
     // ----- INTENT EXTRAS -----
     public static Pattern MD_EXTENSION = Pattern.compile("((?i)\\.((md)|(markdown)|(mkd)|(mdown)|(mkdn)|(txt))$)");

File: app/src/main/java/net/gsantner/markor/widget/FilesWidgetFactory.java
Patch:
@@ -15,6 +15,7 @@
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;
+import net.gsantner.markor.model.DocumentLoader;
 
 import java.io.File;
 import java.io.FileFilter;
@@ -29,7 +30,7 @@ public class FilesWidgetFactory implements RemoteViewsService.RemoteViewsFactory
     public FilesWidgetFactory(Context context, Intent intent) {
         _context = context;
         _appWidgetId = intent.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, AppWidgetManager.INVALID_APPWIDGET_ID);
-        _dir = new File(intent.getStringExtra(Constants.EXTRA_FOLDERPATH));
+        _dir = (File) intent.getSerializableExtra(DocumentLoader.EXTRA_PATH);
     }
 
     @Override
@@ -64,7 +65,7 @@ public int getCount() {
     @Override
     public RemoteViews getViewAt(int position) {
         File file = _widgetFilesList[position];
-        Intent fillInIntent = new Intent().putExtra(Constants.NOTE_KEY, file);
+        Intent fillInIntent = new Intent().putExtra(DocumentLoader.EXTRA_PATH, file);
         RemoteViews rowView = new RemoteViews(_context.getPackageName(), R.layout.widget_file_item);
         rowView.setTextViewText(R.id.widget_note_title, Constants.MD_EXTENSION.matcher(file.getName()).replaceAll(""));
         rowView.setOnClickFillInIntent(R.id.widget_note_title, fillInIntent);

File: app/src/main/java/net/gsantner/markor/activity/NoteActivity.java
Patch:
@@ -324,7 +324,8 @@ private void saveNote() {
 
         try {
 
-            String parent = _targetDirectory != null ? _targetDirectory : _note.getParent();
+            String parent = _targetDirectory != null ? _targetDirectory
+                    : (_note != null ? _note.getParent() : AppSettings.get().getSaveDirectory());
 
             if (_note == null || !_note.exists()) {
                 _note = new File(parent, filename);

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -9,10 +9,8 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.net.Uri;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 import android.view.ActionMode;

File: app/src/main/java/net/gsantner/markor/dialog/ConfirmDialog.java
Patch:
@@ -60,7 +60,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
 
         dialogBuilder.setTitle(title);
-        if (!TextUtils.isEmpty(message)){
+        if (!TextUtils.isEmpty(message)) {
             dialogBuilder.setMessage(message);
         }
 

File: app/src/main/java/net/gsantner/markor/dialog/CreateFolderDialog.java
Patch:
@@ -15,6 +15,7 @@
 import android.support.v7.app.AlertDialog;
 import android.view.LayoutInflater;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.EditText;
 import android.widget.TextView;
 
@@ -41,7 +42,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         AlertDialog.Builder dialogBuilder;
 
         boolean darkTheme = AppSettings.get().isDarkThemeEnabled();
-        root = inflater.inflate(R.layout.ui__create_folder__dialog, null);
+        root = inflater.inflate(R.layout.ui__create_folder__dialog, (ViewGroup)null);
         dialogBuilder = new AlertDialog.Builder(getActivity(), darkTheme ?
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
 

File: app/src/main/java/net/gsantner/markor/dialog/RenameDialog.java
Patch:
@@ -15,6 +15,7 @@
 import android.support.v7.app.AlertDialog;
 import android.view.LayoutInflater;
 import android.view.View;
+import android.view.ViewGroup;
 import android.view.WindowManager;
 import android.widget.EditText;
 
@@ -59,7 +60,7 @@ private AlertDialog.Builder setUpDialog(final File file, LayoutInflater inflater
         boolean darkTheme = AppSettings.get().isDarkThemeEnabled();
         dialogBuilder = new AlertDialog.Builder(getActivity(), darkTheme ?
                 R.style.Theme_AppCompat_Dialog : R.style.Theme_AppCompat_Light_Dialog);
-        root = inflater.inflate(R.layout.ui__rename__dialog, null);
+        root = inflater.inflate(R.layout.ui__rename__dialog, (ViewGroup)null);
 
         dialogBuilder.setTitle(getResources().getString(R.string.rename));
         dialogBuilder.setView(root);

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -14,6 +14,7 @@
 import net.gsantner.opoc.util.AppSettingsBase;
 
 import java.io.File;
+import java.util.Locale;
 
 @SuppressWarnings("SameParameterValue")
 public class AppSettings extends AppSettingsBase {
@@ -49,7 +50,7 @@ public String getSaveDirectory() {
         String dir = getString(R.string.pref_key__save_directory, "");
         if (dir.isEmpty()) {
             dir = new File(new File(Environment.getExternalStorageDirectory(), "/Documents")
-                    , rstr(R.string.app_name).toLowerCase())
+                    , rstr(R.string.app_name).toLowerCase(Locale.ROOT))
                     .getAbsolutePath();
             setSaveDirectory(dir);
         }

File: app/src/main/java/net/gsantner/markor/util/ContextUtils.java
Patch:
@@ -12,6 +12,7 @@
 import net.gsantner.markor.model.Constants;
 
 import java.io.File;
+import java.util.Locale;
 
 public class ContextUtils extends net.gsantner.opoc.util.ContextUtils {
     public ContextUtils(Context context) {
@@ -32,7 +33,7 @@ public static String getMimeType(String url) {
     public boolean isMaybeMarkdownFile(File file, String... absolutePath) {
         String path = (absolutePath != null && absolutePath.length > 0)
                 ? absolutePath[0] : file.getAbsolutePath();
-        path = path.toLowerCase();
+        path = path.toLowerCase(Locale.ROOT);
         for (String ext : Constants.EXTENSIONS) {
             if (path.endsWith(ext)) {
                 return true;

File: app/src/main/java/net/gsantner/opoc/util/ContextUtils.java
Patch:
@@ -445,7 +445,7 @@ public File writeImageToFileJpeg(File imageFile, Bitmap image) {
 
     public File writeImageToFileDetectFormat(File imageFile, Bitmap image, int quality) {
         CompressFormat format = CompressFormat.JPEG;
-        String lc = imageFile.getAbsolutePath().toLowerCase();
+        String lc = imageFile.getAbsolutePath().toLowerCase(Locale.ROOT);
         if (lc.endsWith(".png")) {
             format = CompressFormat.PNG;
         }

File: app/src/main/java/net/gsantner/markor/model/Constants.java
Patch:
@@ -26,13 +26,13 @@ public class Constants {
 
     public static final String UTF_CHARSET = "utf-8";
 
-    public static final String MD_EXT1 = ".md";
+    public static final String MD_EXT1_MD = ".md";
     public static final String MD_EXT2 = ".markdown";
     public static final String MD_EXT3 = ".mkd";
     public static final String MD_EXT4 = ".mdown";
     public static final String MD_EXT5 = ".mkdn";
     public static final String MD_EXT6 = ".txt";
-    public static final String[] EXTENSIONS = new String[]{ Constants.MD_EXT1, Constants.MD_EXT2, Constants.MD_EXT3,
+    public static final String[] EXTENSIONS = new String[]{ Constants.MD_EXT1_MD, Constants.MD_EXT2, Constants.MD_EXT3,
                                                             Constants.MD_EXT4, Constants.MD_EXT5, Constants.MD_EXT6};
 
 

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -51,7 +51,6 @@
 import butterknife.OnClick;
 import butterknife.OnLongClick;
 
-
 public class MainActivity extends AppCompatActivity {
 
     @BindView(R.id.toolbar)

File: app/src/main/java/net/gsantner/markor/editor/HighlighterPattern.java
Patch:
@@ -10,11 +10,11 @@
 import java.util.regex.Pattern;
 
 enum HighlighterPattern {
-    LIST(Pattern.compile("(\\n|^)\\s*(\\*|\\d+\\.|\\+|-)[^\\S\\n]")),
+    LIST(Pattern.compile("(\\n|^)\\s*(\\*|\\d+\\.|\\+|-)( \\[[ xX]\\])?")),
     QUOTATION(Pattern.compile("(\\n|^)>")),
-    HEADER(Pattern.compile("(?m)((^#{1,6}[^\\S\\n][^\\n]+)|((\\n|^)[^\\s]+.*?\\n(-+|=+)[^\\S\\n]*$))")),
+    HEADER(Pattern.compile("(?m)((^#{1,6}[^\\S\\n][^\\n]+)|((\\n|^)[^\\s]+.*?\\n(-{2,}|={2,})[^\\S\\n]*$))")),
     LINK(Pattern.compile("\\[([^\\[]+)\\]\\(([^\\)]+)\\)")),
-    STRIKETHROUGH(Pattern.compile("\\~\\~(.*?)\\~\\~")),
+    STRIKETHROUGH(Pattern.compile("~{2}(.*?)~{2}")),
     MONOSPACED(Pattern.compile("(?m)(`(.*?)`)|(^[^\\S\\n]{4}.*$)")),
     BOLD(Pattern.compile("(\\*\\*|__)[^\\s](.*?)\\1")),
     ITALICS(Pattern.compile("(\\*|_)[^\\s](.*?)\\1"));

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -78,6 +78,9 @@ protected void onCreate(Bundle savedInstanceState) {
         if (AppSettings.get().isOverviewStatusBarHidden()) {
             getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         }
+        if(!AppSettings.get().isRememberLastDirectory()){
+            AppSettings.get().setLastOpenedDirectory(null);
+        }
         setContentView(R.layout.main__activity);
         ButterKnife.bind(this);
         setSupportActionBar(_toolbar);

File: app/src/main/java/net/gsantner/markor/activity/PreviewActivity.java
Patch:
@@ -142,6 +142,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
             case R.id.action_share_text:
                 shareText(_markdownRaw, "text/plain");
                 return true;
+            case R.id.action_share_file:
+                shareStream(Uri.fromFile(_note), "text/plain");
+                return true;
             case R.id.action_share_html:
                 shareText(_markdownHtml, "text/html");
                 return true;

File: app/src/main/java/net/gsantner/markor/editor/Highlighter.java
Patch:
@@ -47,8 +47,7 @@ public Editable run(Editable e) {
             createStyleSpanForMatches(e, HighlighterPattern.BOLD.getPattern(), Typeface.BOLD);
             createStyleSpanForMatches(e, HighlighterPattern.ITALICS.getPattern(), Typeface.ITALIC);
             createColorSpanForMatches(e, HighlighterPattern.QUOTATION.getPattern(), colors.getListColor());
-            //FIXME: This is commented out because AndDown/HoeDown don't render this.
-            //createSpanWithStrikeThroughForMatches(e, HighlighterPattern.STRIKETHROUGH.getPattern());
+            createSpanWithStrikeThroughForMatches(e, HighlighterPattern.STRIKETHROUGH.getPattern());
             createMonospaceSpanForMatches(e, HighlighterPattern.MONOSPACED.getPattern());
 
         } catch (Exception ex) {

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -369,7 +369,6 @@ public void onNotesItemClickListener(AdapterView<?> adapterView, View view, int
             if (AppSettings.get().isPreviewFirst()) {
                 intent = new Intent(context, PreviewActivity.class);
 
-                // .replace is a workaround for Markdown lists requiring two \n characters
                 if (note != null) {
                     Uri uriBase = null;
                     if (note.getParentFile() != null) {
@@ -381,7 +380,7 @@ public void onNotesItemClickListener(AdapterView<?> adapterView, View view, int
 
                 Uri noteUri = Uri.parse(note.toURI().toString());
                 String content = MarkorSingleton.getInstance().readFileUri(noteUri, context);
-                intent.putExtra(Constants.MD_PREVIEW_KEY, content.replace("\n-", "\n\n-"));
+                intent.putExtra(Constants.MD_PREVIEW_KEY, content);
             } else {
                 intent = new Intent(context, NoteActivity.class);
             }

File: app/src/main/java/net/gsantner/markor/activity/NoteActivity.java
Patch:
@@ -270,15 +270,14 @@ private void setupAppearancePreferences() {
     private void previewNote() {
         saveNote();
         Intent intent = new Intent(this, PreviewActivity.class);
-
-        // .replace is a workaround for Markdown lists requiring two \n characters
+        
         if (_note != null) {
             Uri uriBase = MarkorSingleton.getInstance().getUriFromFile(_note.getParentFile());
             intent.putExtra(Constants.MD_PREVIEW_BASE, uriBase.toString());
         }
 
         intent.putExtra(Constants.NOTE_KEY, _note);
-        intent.putExtra(Constants.MD_PREVIEW_KEY, _contentEditor.getText().toString().replace("\n-", "\n\n-"));
+        intent.putExtra(Constants.MD_PREVIEW_KEY, _contentEditor.getText().toString());
 
         _isPreviewIncoming = true;
         startActivity(intent);

File: app/src/main/java/net/gsantner/markor/editor/Highlighter.java
Patch:
@@ -47,7 +47,8 @@ public Editable run(Editable e) {
             createStyleSpanForMatches(e, HighlighterPattern.BOLD.getPattern(), Typeface.BOLD);
             createStyleSpanForMatches(e, HighlighterPattern.ITALICS.getPattern(), Typeface.ITALIC);
             createColorSpanForMatches(e, HighlighterPattern.QUOTATION.getPattern(), colors.getListColor());
-            createSpanWithStrikeThroughForMatches(e, HighlighterPattern.STRIKETHROUGH.getPattern());
+            //FIXME: This is commented out because AndDown/HoeDown don't render this.
+            //createSpanWithStrikeThroughForMatches(e, HighlighterPattern.STRIKETHROUGH.getPattern());
             createMonospaceSpanForMatches(e, HighlighterPattern.MONOSPACED.getPattern());
 
         } catch (Exception ex) {

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -174,7 +174,7 @@ public void onFsSelected(String request, File file) {
 
             @Override
             public void onFsDialogConfig(FilesystemDialogData.Options opt) {
-                opt.titleText = R.string.select_folder_move;
+                opt.titleText = R.string.select_folder;
                 opt.rootFolder = new File(AppSettings.get().getSaveDirectory());
             }
         }, getActivity().getSupportFragmentManager(), getActivity());

File: app/src/main/java/net/gsantner/markor/util/PermissionChecker.java
Patch:
@@ -34,11 +34,11 @@ public static boolean doIfPermissionGranted(final Activity activity) {
 
     public static boolean checkPermissionResult(final Activity activity, int requestCode, String[] permissions, int[] grantResults) {
         if (requestCode == 314) {
-            if (grantResults[0] != PackageManager.PERMISSION_GRANTED) {
-                new ActivityUtils(activity).showSnackBar(R.string.error_storage_permission, true);
+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                 return true;
             }
         }
+        new ActivityUtils(activity).showSnackBar(R.string.error_storage_permission, true);
         return false;
     }
 

File: app/src/main/java/net/gsantner/markor/model/Constants.java
Patch:
@@ -3,10 +3,10 @@
 import java.util.regex.Pattern;
 
 public class Constants {
-    public static final String[] KEYBOARD_SHORTCUTS = {"*", "-", "_", "#"};
+    public static final String[] KEYBOARD_SHORTCUTS = {"*", "-", "_", "#", "´"};
     public static final String[] KEYBOARD_SHORTCUTS_BRACKETS = {"(", ")", "[", "]"};
     public static final String[] KEYBOARD_SMART_SHORTCUTS = {"()", "[]"};
-    public static final String[] KEYBOARD_SHORTCUTS_MORE = {"!", ":", ">"};
+    public static final String[] KEYBOARD_SHORTCUTS_MORE = {"!", "+", "~", ":", "<", ">"};
     public static final String UTF_CHARSET = "utf-8";
 
     public static final String MD_EXT = ".md";

File: app/src/main/java/net/gsantner/markor/editor/HighlighterPattern.java
Patch:
@@ -3,9 +3,9 @@
 import java.util.regex.Pattern;
 
 enum HighlighterPattern {
-    LIST(Pattern.compile("(\\n|^)\\s*(\\*|\\d+\\.)")),
+    LIST(Pattern.compile("(\\n|^)\\s*(\\*|\\d+\\.|\\+|-)[^\\S\\n]")),
     QUOTATION(Pattern.compile("(\\n|^)>")),
-    HEADER(Pattern.compile("(((\\n|^)#+.*?\\n)|((\\n|^).*?\\n(-|=)+))")),
+    HEADER(Pattern.compile("(((\\n|^)#{1,6}[^\\S\\n][^\\n]+)|((\\n|^).*?\\n(---+|===+)+))")),
     LINK(Pattern.compile("\\[([^\\[]+)\\]\\(([^\\)]+)\\)")),
     STRIKETHROUGH(Pattern.compile("\\~\\~(.*?)\\~\\~")),
     MONOSPACED(Pattern.compile("`(.*?)`")),

File: app/src/main/java/net/gsantner/markor/activity/NoteActivity.java
Patch:
@@ -63,7 +63,7 @@ public class NoteActivity extends AppCompatActivity {
     private String _targetDirectory;
     private boolean _isPreviewIncoming = false;
     private AppSettings _appSettings;
-    private String _initalContent = "";
+    private String _initialContent = "";
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -120,7 +120,7 @@ public void onFocusChange(View v, boolean hasFocus) {
     private String readNote() {
         java.net.URI oldUri = _note.toURI();
         String noteContent = MarkorSingleton.getInstance().readFileUri(Uri.parse(oldUri.toString()), this);
-        _initalContent = _note.getName() + noteContent;
+        _initialContent = _note.getName() + noteContent;
         return noteContent;
     }
 
@@ -288,7 +288,7 @@ private void shareNote() {
      * Save the file to its directory
      */
     private void saveNote() {
-        if (_note != null && _initalContent.equals(_note.getName() + _contentEditor.getText().toString())) {
+        if (_note != null && _initialContent.equals(_note.getName() + _contentEditor.getText().toString())) {
             return;
         }
         try {

File: app/src/main/java/net/gsantner/markor/activity/SettingsActivity.java
Patch:
@@ -59,7 +59,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         if (!showAbout) {
             getFragmentManager().beginTransaction()
-                    .replace(R.id.frame, settingsFragment)
+                    .replace(R.id.main__activity__fragment_placeholder, settingsFragment)
                     .commit();
         }
     }

File: app/src/main/java/net/gsantner/markor/dialog/FilesystemDialog.java
Patch:
@@ -121,7 +121,7 @@ public void onClick(DialogInterface dialog, int which) {
                 });
 
         AlertDialog dialog = dialogBuilder.show();
-        emptyFolderTextView = (TextView) dialog.findViewById(R.id.empty_hint);
+        emptyFolderTextView = (TextView) dialog.findViewById(R.id.background_hint_text);
 
         if (files == null) {
             files = new ArrayList<File>();

File: app/src/main/java/net/gsantner/markor/util/AndroidBug5497Workaround.java
Patch:
@@ -11,7 +11,7 @@
 public class AndroidBug5497Workaround {
 
     // For more information, see https://code.google.com/p/android/issues/detail?id=5497
-    // To use this class, simply invoke assistActivity() on an Activity that already has its content view set.
+    // To use this class, simply invoke assistActivity() on an Activity that already has its _contentRoot view set.
 
     public static void assistActivity(Activity activity) {
         new AndroidBug5497Workaround(activity);

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -25,7 +25,7 @@ public boolean isDarkThemeEnabled() {
     }
 
     public int getBackgroundColor() {
-        return isDarkThemeEnabled() ? rcolor(R.color.dark__background) : rcolor(R.color.light__background);
+        return isDarkThemeEnabled() ? rcolor(R.color.dark__background_2) : rcolor(R.color.light__background_2);
     }
 
     public void setLockType(String value) {

File: app/src/main/java/net/gsantner/markor/util/CurrentFolderChangedReceiver.java
Patch:
@@ -35,7 +35,7 @@ public void onReceive(Context context, Intent intent) {
     }
 
     private void toggleBreadcrumbsVisibility(File currentDir, File rootDir) {
-        TextView breadcrumbs = context.findViewById(R.id.breadcrumbs);
+        TextView breadcrumbs = context.findViewById(R.id.main__activity__breadcrumbs);
         if (currentDir.equals(rootDir)) {
             breadcrumbs.setVisibility(View.GONE);
         } else {

File: app/src/main/java/net/gsantner/markor/activity/FilesystemListFragment.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class NotesFragment extends Fragment {
+public class FilesystemListFragment extends Fragment {
 
     public static final int RENAME_CONTEXT_BUTTON_ID = 103;
 
@@ -67,7 +67,7 @@ public String getSectionTitleForItem(File instance) {
     private ActionMode actionMode;
     private List<File> selectedItems = new ArrayList<File>();
 
-    public NotesFragment() {
+    public FilesystemListFragment() {
         super();
     }
 

File: app/src/main/java/net/gsantner/markor/activity/NotesFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
+import android.support.v7.app.AppCompatActivity;
 import android.view.ActionMode;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -177,7 +178,7 @@ private void confirmDelete() {
     }
 
     private void promptForDirectory() {
-        FragmentManager fragManager = getFragmentManager();
+        android.support.v4.app.FragmentManager fragManager = ((AppCompatActivity)getActivity()).getSupportFragmentManager();
 
         Bundle args = new Bundle();
         args.putString(Constants.FILESYSTEM_ACTIVITY_ACCESS_TYPE_KEY, Constants.FILESYSTEM_FOLDER_ACCESS_TYPE);

File: app/src/main/java/net/gsantner/markor/util/AppSettings.java
Patch:
@@ -10,6 +10,7 @@
 
 import net.gsantner.opoc.util.AppSettingsBase;
 
+@SuppressWarnings("SameParameterValue")
 public class AppSettings extends AppSettingsBase {
     private AppSettings(Context _context) {
         super(_context);

File: app/src/main/java/net/gsantner/markor/widget/WidgetConfigure.java
Patch:
@@ -10,11 +10,12 @@
 import android.content.IntentFilter;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
 
 import net.gsantner.markor.dialog.FilesystemDialog;
 import net.gsantner.markor.model.Constants;
 
-public class WidgetConfigure extends Activity {
+public class WidgetConfigure extends AppCompatActivity {
 
     int mAppWidgetId;
 
@@ -38,7 +39,7 @@ protected void onCreate(Bundle savedInstanceState) {
                     AppWidgetManager.EXTRA_APPWIDGET_ID,
                     AppWidgetManager.INVALID_APPWIDGET_ID);
         }
-        FragmentManager fragManager = getFragmentManager();
+        android.support.v4.app.FragmentManager fragManager = getSupportFragmentManager();
 
         IntentFilter ifilterSwitchedFolderFilder = new IntentFilter();
         ifilterSwitchedFolderFilder.addAction(Constants.FILESYSTEM_SELECT_FOLDER_TAG);

File: app/src/main/java/net/gsantner/markor/activity/MainActivity.java
Patch:
@@ -28,9 +28,6 @@
 import com.getbase.floatingactionbutton.FloatingActionButton;
 import com.getbase.floatingactionbutton.FloatingActionsMenu;
 
-import java.io.File;
-import java.io.Serializable;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.dialog.ConfirmDialog;
 import net.gsantner.markor.dialog.CreateFolderDialog;
@@ -45,6 +42,9 @@
 import net.gsantner.markor.util.RenameBroadcastReceiver;
 import net.gsantner.markor.util.Utils;
 
+import java.io.File;
+import java.io.Serializable;
+
 
 public class MainActivity extends AppCompatActivity {
 

File: app/src/main/java/net/gsantner/markor/activity/PreviewActivity.java
Patch:
@@ -12,13 +12,13 @@
 import android.view.MenuItem;
 import android.webkit.WebView;
 
-import java.io.File;
-import java.io.FileOutputStream;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;
 import net.gsantner.markor.renderer.MarkDownRenderer;
 
+import java.io.File;
+import java.io.FileOutputStream;
+
 public class PreviewActivity extends AppCompatActivity {
 
     private WebView previewWebView;

File: app/src/main/java/net/gsantner/markor/activity/PromptPinActivity.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 

File: app/src/main/java/net/gsantner/markor/adapter/FileAdapter.java
Patch:
@@ -11,12 +11,12 @@
 import android.widget.ImageView;
 import android.widget.TextView;
 
-import java.io.File;
-import java.util.ArrayList;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.util.AppSettings;
 
+import java.io.File;
+import java.util.ArrayList;
+
 public class FileAdapter extends BaseAdapter implements Filterable {
 
     private Context context;

File: app/src/main/java/net/gsantner/markor/dialog/ConfirmDialog.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 
 import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;

File: app/src/main/java/net/gsantner/markor/dialog/CreateFolderDialog.java
Patch:
@@ -6,7 +6,6 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.EditText;

File: app/src/main/java/net/gsantner/markor/dialog/RenameDialog.java
Patch:
@@ -6,18 +6,17 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.WindowManager;
 import android.widget.EditText;
 
-import java.io.File;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;
 import net.gsantner.markor.util.AppSettings;
 
+import java.io.File;
+
 public class RenameDialog extends DialogFragment {
 
     private EditText newNameField;

File: app/src/main/java/net/gsantner/markor/model/Constants.java
Patch:
@@ -1,7 +1,5 @@
 package net.gsantner.markor.model;
 
-import android.os.Environment;
-
 import java.util.regex.Pattern;
 
 public class Constants {

File: app/src/main/java/net/gsantner/markor/renderer/MarkDownRenderer.java
Patch:
@@ -1,11 +1,9 @@
 package net.gsantner.markor.renderer;
 
 import android.content.Context;
-import android.preference.PreferenceManager;
 
 import com.commonsware.cwac.anddown.AndDown;
 
-import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;
 import net.gsantner.markor.util.AppSettings;
 

File: app/src/main/java/net/gsantner/markor/util/CurrentFolderChangedReceiver.java
Patch:
@@ -11,12 +11,12 @@
 import android.view.ViewAnimationUtils;
 import android.widget.TextView;
 
-import java.io.File;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.activity.MainActivity;
 import net.gsantner.markor.model.Constants;
 
+import java.io.File;
+
 public class CurrentFolderChangedReceiver extends BroadcastReceiver {
 
     private MainActivity context;

File: app/src/main/java/net/gsantner/markor/util/RenameBroadcastReceiver.java
Patch:
@@ -5,12 +5,12 @@
 import android.content.Intent;
 import android.widget.Toast;
 
-import java.io.File;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.activity.NotesFragment;
 import net.gsantner.markor.model.Constants;
 
+import java.io.File;
+
 public class RenameBroadcastReceiver extends BroadcastReceiver {
 
     private NotesFragment notesFragment;

File: app/src/main/java/net/gsantner/markor/widget/FilesWidgetFactory.java
Patch:
@@ -6,12 +6,12 @@
 import android.widget.RemoteViews;
 import android.widget.RemoteViewsService;
 
-import java.io.File;
-import java.io.FileFilter;
-
 import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;
 
+import java.io.File;
+import java.io.FileFilter;
+
 public class FilesWidgetFactory implements RemoteViewsService.RemoteViewsFactory {
 
     private Context context;

File: app/src/main/java/net/gsantner/markor/widget/MarkorWidgetProvider.java
Patch:
@@ -7,12 +7,11 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.net.Uri;
-import android.preference.PreferenceManager;
 import android.widget.RemoteViews;
 
+import net.gsantner.markor.R;
 import net.gsantner.markor.activity.MainActivity;
 import net.gsantner.markor.activity.NoteActivity;
-import net.gsantner.markor.R;
 import net.gsantner.markor.model.Constants;
 import net.gsantner.markor.util.AppSettings;
 

File: app/src/main/java/me/writeily/AlphanumericPinActivity.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.KeyEvent;
 import android.widget.EditText;
@@ -17,7 +17,7 @@
 /**
  * Created by jeff on 2014-08-20.
  */
-public class AlphanumericPinActivity extends ActionBarActivity {
+public class AlphanumericPinActivity extends AppCompatActivity {
 
     private Context context;
     private String pin;

File: app/src/main/java/me/writeily/NoteActivity.java
Patch:
@@ -11,7 +11,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.util.TypedValue;
 import android.view.Menu;
@@ -37,7 +37,7 @@
 /**
  * Created by jeff on 2014-04-11.
  */
-public class NoteActivity extends ActionBarActivity {
+public class NoteActivity extends AppCompatActivity {
 
     public static final String EMPTY_STRING = "";
     private File note;
@@ -73,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         if (toolbar != null) {
             setSupportActionBar(toolbar);
-            final Drawable upArrow = getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha);
+            final Drawable upArrow = getResources().getDrawable(R.drawable.abc_ic_ab_back_material);
             upArrow.setColorFilter(getResources().getColor(android.R.color.white), PorterDuff.Mode.SRC_ATOP);
             getSupportActionBar().setHomeAsUpIndicator(upArrow);
             getSupportActionBar().setDisplayHomeAsUpEnabled(true);

File: app/src/main/java/me/writeily/PinActivity.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.text.Editable;
 import android.text.TextWatcher;
@@ -18,7 +18,7 @@
 /**
  * Created by jeff on 2014-08-20.
  */
-public class PinActivity extends ActionBarActivity {
+public class PinActivity extends AppCompatActivity {
 
     private Context context;
     private String pin;

File: app/src/main/java/me/writeily/PreviewActivity.java
Patch:
@@ -6,7 +6,7 @@
 import android.graphics.Picture;
 import android.net.Uri;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -21,7 +21,7 @@
 /**
  * Created by jeff on 2014-04-13.
  */
-public class PreviewActivity extends ActionBarActivity {
+public class PreviewActivity extends AppCompatActivity {
 
     private WebView previewWebView;
     private String markdownRaw;

File: app/src/main/java/me/writeily/PromptPinActivity.java
Patch:
@@ -3,13 +3,13 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 
 /**
  * Created by jeff on 2014-08-20.
  */
-public class PromptPinActivity extends ActionBarActivity {
+public class PromptPinActivity extends AppCompatActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/me/writeily/settings/SettingsActivity.java
Patch:
@@ -7,7 +7,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.view.MenuItem;
 
@@ -17,7 +17,7 @@
 /**
  * Created by jeff on 2014-04-11.
  */
-public class SettingsActivity extends ActionBarActivity implements SettingsFragment.WriteilySettingsListener {
+public class SettingsActivity extends AppCompatActivity implements SettingsFragment.WriteilySettingsListener {
 
     SettingsFragment settingsFragment;
 

File: app/src/main/java/me/writeily/settings/SettingsFragment.java
Patch:
@@ -10,7 +10,7 @@
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import me.writeily.AlphanumericPinActivity;
 import me.writeily.PinActivity;
@@ -123,7 +123,7 @@ private void updateLockSummary() {
 
     @Override
     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {
-        ActionBarActivity activity = (ActionBarActivity) mCallback;
+        AppCompatActivity activity = (AppCompatActivity) mCallback;
 
         if (activity.getString(R.string.pref_theme_key).equals(key)) {
             mCallback.onThemeChanged();

File: app/src/main/java/me/writeily/MainActivity.java
Patch:
@@ -46,7 +46,7 @@ public class MainActivity extends AppCompatActivity {
 
     private Toolbar toolbar;
 
-    private FloatingActionsMenu fabMenu;
+    public static FloatingActionsMenu fabMenu;
     private FloatingActionButton fabCreateNote;
     private FloatingActionButton fabCreateFolder;
 
@@ -433,5 +433,4 @@ public void onAnimationEnd(Animator animation) {
                 })
                 .start();
     }
-
 }

File: app/src/main/java/me/writeily/settings/SettingsActivity.java
Patch:
@@ -44,6 +44,7 @@ protected void onCreate(Bundle savedInstanceState) {
             setTheme(R.style.AppTheme);
         } else {
             // uses light theme
+            setTheme(R.style.AppTheme_Light);
         }
 
         super.onCreate(savedInstanceState);

File: app/src/main/java/me/writeily/dialog/FilesystemDialog.java
Patch:
@@ -57,7 +57,7 @@ public void sendBroadcast(String name) {
         if (isMovingFile) {
             broadcast.setAction(Constants.FILESYSTEM_MOVE_DIALOG_TAG);
             broadcast.putExtra(Constants.FILESYSTEM_FILE_NAME, name);
-        } else if (isSelectingFolder) {
+        } else if (isSelectingFolder || isSelectingForWidget) {
             broadcast.setAction(Constants.FILESYSTEM_SELECT_FOLDER_TAG);
             broadcast.putExtra(Constants.FILESYSTEM_FILE_NAME, name);
         } else {

File: app/src/main/java/me/writeily/model/Constants.java
Patch:
@@ -36,7 +36,7 @@ public class Constants {
     public static final String FILESYSTEM_ACTIVITY_ACCESS_TYPE_KEY = "FILESYSTEM_ACTIVITY_ACCESS_TYPE_KEY";
     public static final String FILESYSTEM_FOLDER_ACCESS_TYPE = "FILESYSTEM_FOLDER_ACCESS_TYPE";
     public static final String FILESYSTEM_SELECT_FOLDER_ACCESS_TYPE = "FILESYSTEM_SELECT_FOLDER_ACCESS_TYPE";
-    public static final String FILESYSTEM_SELECT_FOLDER_FOR_WIDGET_ACCESS_TYPE = "FILESYSTEM_SELECT_FOLDER_ACCESS_TYPE";
+    public static final String FILESYSTEM_SELECT_FOLDER_FOR_WIDGET_ACCESS_TYPE = "FILESYSTEM_SELECT_FOLDER_FOR_WIDGET_ACCESS_TYPE";
     public static final String FILESYSTEM_FILE_ACCESS_TYPE = "FILESYSTEM_FILE_ACCESS_TYPE";
     public static final String NOTE_KEY = "note_key";
     public static final String MD_PREVIEW_BASE = "md_preview_base";

File: app/src/main/java/me/writeily/NoteActivity.java
Patch:
@@ -16,7 +16,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ScrollView;
 import android.widget.TextView;
@@ -353,7 +352,7 @@ public void onClick(View v) {
     private class KeyboardBarSmartShortCutListener implements View.OnClickListener {
         @Override
         public void onClick(View v) {
-            CharSequence shortcut = ((Button) v).getText();
+            CharSequence shortcut = ((TextView) v).getText();
             if(content.hasSelection()) {
                 CharSequence selected = content.getText().subSequence(content.getSelectionStart(),
                         content.getSelectionEnd());

File: app/src/main/java/me/writeily/NotesFragment.java
Patch:
@@ -277,7 +277,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     promptForDirectory();
                     return true;
                 case RENAME_CONTEXT_BUTTON_ID:
-                    promptForNewName((File) simpleSectionAdapter.getItem(0));
+                    promptForNewName(selectedItems.get(0));
                     return true;
                 default:
                     return false;

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -168,6 +168,7 @@ private void broadcastDirectoryChange(File directory, File rootDir) {
         broadcast.putExtra(Constants.CURRENT_FOLDER, directory);
         broadcast.putExtra(Constants.ROOT_DIR, rootDir);
         getActivity().sendBroadcast(broadcast);
+        clearSearchFilter();
     }
 
     private void reloadFiles(File directory) {
@@ -231,12 +232,13 @@ public void finishActionMode() {
     public void search(CharSequence query) {
         if (query.length() > 0) {
             filesAdapter.getFilter().filter(query);
+            simpleSectionAdapter.notifyDataSetChanged();
         }
     }
 
     public void clearSearchFilter() {
         filesAdapter.getFilter().filter("");
-
+        simpleSectionAdapter.notifyDataSetChanged();
         reloadAdapter();
     }
 

File: app/src/main/java/me/writeily/pro/dialog/FilesystemDialog.java
Patch:
@@ -278,7 +278,9 @@ public void onClick(View v) {
 
     @Override
     public void onDismiss(DialogInterface dialog) {
-        onDismissListener.onDismiss(dialog);
+        if (onDismissListener != null){
+            onDismissListener.onDismiss(dialog);
+        }
         super.onDismiss(dialog);
     }
 }

File: app/src/main/java/me/writeily/pro/NoteActivity.java
Patch:
@@ -308,7 +308,7 @@ private void saveNote() {
             writer.close();
             fos.close();
             // If we have created a new note due to renaming, delete the old copy
-            if (note != null && !note.equals(newNote) && newNote.exists()) {
+            if (note != null && !newNote.getName().equals(note.getName()) && newNote.exists()) {
                 note.delete();
             }
             Intent brIntent = new Intent(AppWidgetManager.ACTION_APPWIDGET_UPDATE);

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -11,6 +11,8 @@ public class Constants {
     public static final String[] KEYBOARD_SMART_SHORTCUTS = {"()", "[]"};
     public static final String UTF_CHARSET = "utf-8";
 
+    public static final String MD_EXT = ".md";
+
     public static final int MAX_TITLE_LENGTH = 20;
     public static final String SET_PIN_ACTION = "set_pin";
     public static final String CREATE_FOLDER_DIALOG_TAG = "create_folder_dialog_tag";

File: app/src/main/java/me/writeily/pro/dialog/ConfirmDialog.java
Patch:
@@ -23,7 +23,9 @@ public ConfirmDialog() {
     public void sendBroadcast() {
         Intent broadcast = new Intent();
         broadcast.setAction(getTag());
-        broadcast.putExtras(getArguments());
+        if (getArguments() != null) {
+            broadcast.putExtras(getArguments());
+        }
         getActivity().sendBroadcast(broadcast);
     }
 

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -89,6 +89,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
     @Override
     public void onResume() {
+        writeilySingleton = WriteilySingleton.getInstance();
         File possiblyNewRootDir = getRootFolderFromPrefsOrDefault();
         if (possiblyNewRootDir != rootDir) {
             rootDir = possiblyNewRootDir;

File: app/src/main/java/me/writeily/pro/dialog/CreateFolderDialog.java
Patch:
@@ -17,17 +17,17 @@
 /**
  * Created by jeff on 2014-04-11.
  */
-public class FolderDialog extends DialogFragment {
+public class CreateFolderDialog extends DialogFragment {
 
     private EditText folderNameEditText;
     private String currentDir;
 
-    public FolderDialog() {
+    public CreateFolderDialog() {
     }
 
     public void sendBroadcast(String name) {
         Intent broadcast = new Intent();
-        broadcast.setAction(Constants.FOLDER_DIALOG_TAG);
+        broadcast.setAction(Constants.CREATE_FOLDER_DIALOG_TAG);
         broadcast.putExtra(Constants.FOLDER_NAME, currentDir + "/" + name);
         getActivity().sendBroadcast(broadcast);
     }

File: app/src/main/java/me/writeily/pro/dialog/FilesystemDialog.java
Patch:
@@ -232,7 +232,6 @@ private void checkDirectoryStatus() {
 
         if (writeilySingleton.isRootDir(currentDir, rootDir)) {
             previousDirButton.setVisibility(View.GONE);
-            currentDir = null;
         } else {
             previousDirButton.setVisibility(View.VISIBLE);
         }

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -13,7 +13,7 @@ public class Constants {
 
     public static final int MAX_TITLE_LENGTH = 20;
     public static final String SET_PIN_ACTION = "set_pin";
-    public static final String FOLDER_DIALOG_TAG = "folder_dialog_tag";
+    public static final String CREATE_FOLDER_DIALOG_TAG = "create_folder_dialog_tag";
     public static final String CURRENT_FOLDER_CHANGED = "current_folder_changed";
     public static final String FOLDER_NAME = "folder_name";
     public static final String FILESYSTEM_FILE_NAME = "filesystem_file_name";

File: app/src/main/java/me/writeily/pro/settings/SettingsActivity.java
Patch:
@@ -21,7 +21,7 @@ public class SettingsActivity extends ActionBarActivity implements SettingsFragm
 
     SettingsFragment settingsFragment;
 
-    private final BroadcastReceiver fsBroadcastReceiver = new BroadcastReceiver() {
+    private final BroadcastReceiver fsSelectFolderBroadcastReceiver = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
             if (intent.getAction().equals(Constants.FILESYSTEM_SELECT_FOLDER_TAG)) {
@@ -105,13 +105,13 @@ public void onAboutClicked() {
     public void onResume() {
         IntentFilter ifilterFsDialog = new IntentFilter();
         ifilterFsDialog.addAction(Constants.FILESYSTEM_SELECT_FOLDER_TAG);
-        registerReceiver(fsBroadcastReceiver, ifilterFsDialog);
+        registerReceiver(fsSelectFolderBroadcastReceiver, ifilterFsDialog);
         super.onResume();
     }
 
     @Override
     public void onPause() {
-        unregisterReceiver(fsBroadcastReceiver);
+        unregisterReceiver(fsSelectFolderBroadcastReceiver);
         super.onPause();
     }
 }

File: app/src/main/java/me/writeily/pro/editor/HighlightingEditor.java
Patch:
@@ -58,8 +58,6 @@ public HighlightingEditor(Context context, AttributeSet attrs) {
 
     private void init() {
 
-        setHorizontallyScrolling(true);
-
         setFilters(new InputFilter[]{new IndentationFilter()});
 
         final int highlightingDelay = getHighlightingDelayFromPrefs();

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -136,7 +136,7 @@ private void saveCurrentFolder() {
     private void confirmDelete() {
         FragmentManager fragManager = getFragmentManager();
         ConfirmDialog confirmDialog = new ConfirmDialog();
-        confirmDialog.show(fragManager, Constants.CONFIRM_DIALOG_TAG);
+        confirmDialog.show(fragManager, Constants.CONFIRM_DELETE_DIALOG_TAG);
     }
 
     private void promptForDirectory() {
@@ -281,7 +281,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
         private void promptForNewName(File renameable) {
             FragmentManager fragManager = getFragmentManager();
             Bundle args = new Bundle();
-            args.putString(Constants.RENAME_SOURCE_FILE, renameable.getAbsolutePath());
+            args.putString(Constants.SOURCE_FILE, renameable.getAbsolutePath());
             RenameDialog renameDialog = new RenameDialog();
             renameDialog.setArguments(args);
             renameDialog.show(fragManager, Constants.RENAME_DIALOG_TAG);

File: app/src/main/java/me/writeily/pro/RenameBroadcastReceiver.java
Patch:
@@ -22,7 +22,7 @@ public RenameBroadcastReceiver(NotesFragment notesFragment) {
     public void onReceive(Context context, Intent intent) {
         if (intent.getAction().equals(Constants.RENAME_DIALOG_TAG)) {
             String newName = intent.getStringExtra(Constants.RENAME_NEW_NAME);
-            File sourceFile = new File(intent.getStringExtra(Constants.RENAME_SOURCE_FILE));
+            File sourceFile = new File(intent.getStringExtra(Constants.SOURCE_FILE));
             File targetFile = new File(sourceFile.getParent(), newName);
 
             if (targetFile.exists()) {

File: app/src/main/java/me/writeily/pro/dialog/RenameDialog.java
Patch:
@@ -7,7 +7,6 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.WindowManager;
@@ -24,7 +23,7 @@ public class RenameDialog extends DialogFragment {
 
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
-        final File file = new File(getArguments().getString(Constants.RENAME_SOURCE_FILE));
+        final File file = new File(getArguments().getString(Constants.SOURCE_FILE));
 
         LayoutInflater inflater = LayoutInflater.from(getActivity());
         String theme = PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(getString(R.string.pref_theme_key), "");
@@ -74,7 +73,7 @@ private void sendBroadcast(String name, File file) {
         Intent broadcast = new Intent();
         broadcast.setAction(Constants.RENAME_DIALOG_TAG);
         broadcast.putExtra(Constants.RENAME_NEW_NAME, name);
-        broadcast.putExtra(Constants.RENAME_SOURCE_FILE, file.getAbsolutePath());
+        broadcast.putExtra(Constants.SOURCE_FILE, file.getAbsolutePath());
         getActivity().sendBroadcast(broadcast);
     }
 }

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -23,7 +23,8 @@ public class Constants {
     public static final String FILESYSTEM_IMPORT_DIALOG_TAG = "filesystem_import_dialog_tag";
     public static final String FILESYSTEM_MOVE_DIALOG_TAG = "filesystem_move_dialog_tag";
     public static final String FILESYSTEM_SELECT_FOLDER_TAG = "filesystem_select_folder_dialog_tag";
-    public static final String CONFIRM_DIALOG_TAG = "confirm_dialog_tag";
+    public static final String CONFIRM_DELETE_DIALOG_TAG = "confirm_delete_dialog_tag";
+    public static final String CONFIRM_OVERWRITE_DIALOG_TAG = "confirm_overwrite_dialog_tag";
     public static final String RENAME_DIALOG_TAG = "RENAME_DIALOG_TAG";
 
     // ----- KEYS -----
@@ -37,7 +38,7 @@ public class Constants {
     public static final String MD_PREVIEW_KEY = "md_preview_key";
     public static final String USER_PIN_KEY = "user_pin";
     public static final String RENAME_NEW_NAME = "RENAME_NEW_NAME";
-    public static final String RENAME_SOURCE_FILE = "RENAME_SOURCE_FILE";
+    public static final String SOURCE_FILE = "SOURCE_FILE";
     public static final String CURRENT_FOLDER = "filesystem_current_folder";
     public static final String ROOT_DIR = "filesystem_root_dir";
 

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -65,6 +65,7 @@ public String getSectionTitleForItem(File instance) {
     };
     private ActionMode actionMode;
     private List<File> selectedItems = new ArrayList<File>();
+    private int sectionHeadersTextLayout;
 
     public NotesFragment() {
         super();

File: app/src/main/java/me/writeily/pro/renderer/MarkDownRenderer.java
Patch:
@@ -12,8 +12,7 @@ public class MarkDownRenderer {
     AndDown andDown = new AndDown();
 
     public String renderMarkdown(String markdownRaw, Context context) {
-        return Constants.MD_HTML_PREFIX +
-                themeStringFromContext(context) +
+        return  themeStringFromContext(context) +
                 andDown.markdownToHtml(markdownRaw) +
                 Constants.MD_HTML_SUFFIX;
     }

File: app/src/main/java/me/writeily/pro/NoteActivity.java
Patch:
@@ -60,6 +60,7 @@ public NoteActivity(Context context, File note) {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_note);
 
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
@@ -92,8 +93,6 @@ protected void onCreate(Bundle savedInstanceState) {
             content.setText(readNote());
             noteTitle.setText(note.getName());
         }
-
-        super.onCreate(savedInstanceState);
     }
 
     private String readNote() {

File: app/src/main/java/me/writeily/pro/PinActivity.java
Patch:
@@ -35,6 +35,7 @@ public class PinActivity extends ActionBarActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
         // Get the Intent (to check if coming from Settings)
         String action = getIntent().getAction();
 
@@ -63,8 +64,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         attachPinListeners();
         attachPinKeyListeners();
-
-        super.onCreate(savedInstanceState);
     }
 
     @Override

File: app/src/main/java/me/writeily/pro/NoteActivity.java
Patch:
@@ -60,6 +60,7 @@ public NoteActivity(Context context, File note) {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_note);
 
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
@@ -92,8 +93,6 @@ protected void onCreate(Bundle savedInstanceState) {
             content.setText(readNote());
             noteTitle.setText(note.getName());
         }
-
-        super.onCreate(savedInstanceState);
     }
 
     private String readNote() {

File: app/src/main/java/me/writeily/pro/PinActivity.java
Patch:
@@ -35,6 +35,7 @@ public class PinActivity extends ActionBarActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
         // Get the Intent (to check if coming from Settings)
         String action = getIntent().getAction();
 
@@ -63,8 +64,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         attachPinListeners();
         attachPinKeyListeners();
-
-        super.onCreate(savedInstanceState);
     }
 
     @Override

File: app/src/main/java/me/writeily/pro/PreviewActivity.java
Patch:
@@ -35,6 +35,7 @@ public class PreviewActivity extends ActionBarActivity {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_preview);
 
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
@@ -57,7 +58,6 @@ protected void onCreate(Bundle savedInstanceState) {
         }
 
         renderMarkdown();
-        super.onCreate(savedInstanceState);
     }
 
     @Override

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -80,7 +80,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         filesListView.setMultiChoiceModeListener(new ActionModeCallback());
         filesListView.setAdapter(filesAdapter);
 
-        previousDirButton = (Button) layoutView.findViewById(R.id.import_header_btn);
+        previousDirButton = (Button) layoutView.findViewById(R.id.previous_dir_button);
         previousDirButton.setOnClickListener(new PreviousDirClickListener());
 
         rootDir = getRootFolderFromPrefsOrDefault();
@@ -196,7 +196,7 @@ private void listFilesInDirectory(File directory) {
         checkDirectoryStatus();
     }
 
-    private void goToPreviousDir() {
+    public void goToPreviousDir() {
         if (currentDir != null) {
             currentDir = currentDir.getParentFile();
         }

File: app/src/main/java/me/writeily/pro/MainActivity.java
Patch:
@@ -100,6 +100,8 @@ public void onReceive(Context context, Intent intent) {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
         toolbar = (Toolbar) findViewById(R.id.toolbar);
@@ -171,8 +173,6 @@ public void onClick(View v) {
 
         setToolbarTitle(getString(R.string.notes));
         initFolders();
-
-        super.onCreate(savedInstanceState);
     }
 
     @Override

File: app/src/main/java/me/writeily/pro/MainActivity.java
Patch:
@@ -100,6 +100,8 @@ public void onReceive(Context context, Intent intent) {
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
         toolbar = (Toolbar) findViewById(R.id.toolbar);
@@ -171,8 +173,6 @@ public void onClick(View v) {
 
         setToolbarTitle(getString(R.string.notes));
         initFolders();
-
-        super.onCreate(savedInstanceState);
     }
 
     @Override

File: app/src/main/java/me/writeily/pro/editor/SpanCreator.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.text.ParcelableSpan;
 
+import java.util.regex.Matcher;
+
 public interface SpanCreator {
-    ParcelableSpan create();
+    ParcelableSpan create(Matcher m);
 }

File: app/libs/anddown/src/com/commonsware/cwac/anddown/AndDown.java
Patch:
@@ -32,7 +32,7 @@ public class AndDown {
   public static final int FLAG_DISABLE_INDENTED_CODE = 1 << 14;
 
   // default flag for markdown rendering
-  public static final int FLAG_DEFAULT = FLAG_EXTENSIONS_NONE;
+  public static final int FLAG_DEFAULT = FLAG_EXTENSIONS_ADVANCE;
 
   public native String markdownToHtml(String raw, int flag);
 

File: app/src/main/java/me/writeily/pro/PreviewActivity.java
Patch:
@@ -97,7 +97,6 @@ private void renderMarkdown() {
         String markdownHtml = Constants.MD_HTML_PREFIX;
 
         String theme = PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.pref_theme_key), "");
-        String extension = PreferenceManager.getDefaultSharedPreferences(this).getString(getString(R.string.pref_markdown_extension_key), "0");
 
         if (!theme.equals("")) {
             if (theme.equals(getString(R.string.theme_dark))) {
@@ -108,7 +107,7 @@ private void renderMarkdown() {
         }
 
         AndDown andDown = new AndDown();
-        markdownHtml += andDown.markdownToHtml(markdownRaw, 0, Integer.parseInt(extension)) + Constants.MD_HTML_SUFFIX;
+        markdownHtml += andDown.markdownToHtml(markdownRaw, 0, 3) + Constants.MD_HTML_SUFFIX;
 
         previewWebView.loadDataWithBaseURL(baseFolder, markdownHtml, "text/html", Constants.UTF_CHARSET, null);
     }

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -41,4 +41,7 @@ public class Constants {
     public static final String DARK_MD_HTML_PREFIX = "<html><head><style type=\"text/css\">html,body{padding:4px 8px 4px 8px;font-family:'sans-serif-light';color:#ffffff;background-color:#303030}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color:#ffffff;text-decoration:underline;}a:visited{color:#dddddd}}</style></head><body>";
     public static final String MD_HTML_SUFFIX = "</body></html>";
     public static final String NOTE_SOURCE_DIR = "note_source_dir";
+
+    // ----- INTENT EXTRAS -----
+    public static final String INTENT_EXTRA_SHOW_ABOUT = "writeily.intent.settings.ABOUT";
 }

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -41,4 +41,7 @@ public class Constants {
     public static final String DARK_MD_HTML_PREFIX = "<html><head><style type=\"text/css\">html,body{padding:4px 8px 4px 8px;font-family:'sans-serif-light';color:#ffffff;background-color:#303030}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color:#ffffff;text-decoration:underline;}a:visited{color:#dddddd}}</style></head><body>";
     public static final String MD_HTML_SUFFIX = "</body></html>";
     public static final String NOTE_SOURCE_DIR = "note_source_dir";
+
+    // ----- INTENT EXTRAS -----
+    public static final String INTENT_EXTRA_SHOW_ABOUT = "writeily.intent.settings.ABOUT";
 }

File: app/src/main/java/me/writeily/pro/NoteActivity.java
Patch:
@@ -148,6 +148,7 @@ private String readFileUri(Uri fileUri) {
 
                 while (br.ready()) {
                     uriContent.append(br.readLine());
+                    uriContent.append("\n");
                 }
             } catch (FileNotFoundException e) {
                 e.printStackTrace();

File: app/src/main/java/me/writeily/pro/settings/SettingsFragment.java
Patch:
@@ -30,6 +30,7 @@ public void onCreate(Bundle savedInstanceState) {
         context = getActivity().getApplicationContext();
         pinPreference = (CheckBoxPreference) findPreference(getString(R.string.pref_pin_key));
 
+
         // Listen for Pin Preference change
         pinPreference.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
             @Override

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -263,7 +263,7 @@ private class ActionModeCallback implements ListView.MultiChoiceModeListener {
         public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             MenuInflater inflater = mode.getMenuInflater();
             inflater.inflate(R.menu.notes_context_menu, menu);
-            mode.setTitle("Select files");
+            mode.setTitle(getResources().getString(R.string.select_elements));
             return true;
         }
 
@@ -300,10 +300,10 @@ public void onItemCheckedStateChanged(ActionMode actionMode, int i, long l, bool
                     actionMode.setSubtitle(null);
                     break;
                 case 1:
-                    actionMode.setSubtitle("One item selected");
+                    actionMode.setSubtitle(getResources().getString(R.string.one_item_selected));
                     break;
                 default:
-                    actionMode.setSubtitle(numSelected + " items selected");
+                    actionMode.setSubtitle(String.format(getResources().getString(R.string.more_items_selected), numSelected));
                     break;
             }
         }

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -263,7 +263,7 @@ private class ActionModeCallback implements ListView.MultiChoiceModeListener {
         public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             MenuInflater inflater = mode.getMenuInflater();
             inflater.inflate(R.menu.notes_context_menu, menu);
-            mode.setTitle("Select files");
+            mode.setTitle(getResources().getString(R.string.select_elements));
             return true;
         }
 
@@ -300,10 +300,10 @@ public void onItemCheckedStateChanged(ActionMode actionMode, int i, long l, bool
                     actionMode.setSubtitle(null);
                     break;
                 case 1:
-                    actionMode.setSubtitle("One item selected");
+                    actionMode.setSubtitle(getResources().getString(R.string.one_item_selected));
                     break;
                 default:
-                    actionMode.setSubtitle(numSelected + " items selected");
+                    actionMode.setSubtitle(String.format(getResources().getString(R.string.more_items_selected), numSelected));
                     break;
             }
         }

File: app/src/main/java/me/writeily/pro/dialog/ConfirmDialog.java
Patch:
@@ -7,7 +7,6 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.view.View;
 
 import me.writeily.pro.R;
 import me.writeily.pro.model.Constants;
@@ -40,14 +39,14 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         dialogBuilder.setTitle(getResources().getString(R.string.confirm_delete));
 
-        dialogBuilder.setPositiveButton("Confirm", new
+        dialogBuilder.setPositiveButton(getString(android.R.string.ok), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         sendBroadcast();
                     }
                 });
 
-        dialogBuilder.setNegativeButton("Cancel", new
+        dialogBuilder.setNegativeButton(getString(android.R.string.cancel), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         dialog.dismiss();

File: app/src/main/java/me/writeily/pro/dialog/FolderDialog.java
Patch:
@@ -53,15 +53,15 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         dialogBuilder.setTitle(getResources().getString(R.string.create_folder));
         dialogBuilder.setView(dialogView);
 
-        dialogBuilder.setPositiveButton("Create", new
+        dialogBuilder.setPositiveButton(getResources().getString(R.string.create), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         // TODO Broadcast result to MainActivity
                         sendBroadcast(folderNameEditText.getText().toString());
                     }
                 });
 
-        dialogBuilder.setNegativeButton("Cancel", new
+        dialogBuilder.setNegativeButton(getResources().getString(android.R.string.cancel), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         dialog.dismiss();

File: app/src/main/java/me/writeily/pro/dialog/ConfirmDialog.java
Patch:
@@ -7,7 +7,6 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
-import android.view.View;
 
 import me.writeily.pro.R;
 import me.writeily.pro.model.Constants;
@@ -40,14 +39,14 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
         dialogBuilder.setTitle(getResources().getString(R.string.confirm_delete));
 
-        dialogBuilder.setPositiveButton("Confirm", new
+        dialogBuilder.setPositiveButton(getString(android.R.string.ok), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         sendBroadcast();
                     }
                 });
 
-        dialogBuilder.setNegativeButton("Cancel", new
+        dialogBuilder.setNegativeButton(getString(android.R.string.cancel), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         dialog.dismiss();

File: app/src/main/java/me/writeily/pro/dialog/FolderDialog.java
Patch:
@@ -53,15 +53,15 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         dialogBuilder.setTitle(getResources().getString(R.string.create_folder));
         dialogBuilder.setView(dialogView);
 
-        dialogBuilder.setPositiveButton("Create", new
+        dialogBuilder.setPositiveButton(getResources().getString(R.string.create), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         // TODO Broadcast result to MainActivity
                         sendBroadcast(folderNameEditText.getText().toString());
                     }
                 });
 
-        dialogBuilder.setNegativeButton("Cancel", new
+        dialogBuilder.setNegativeButton(getResources().getString(android.R.string.cancel), new
                 DialogInterface.OnClickListener() {
                     public void onClick(DialogInterface dialog, int which) {
                         dialog.dismiss();

File: app/src/main/java/me/writeily/pro/NoteActivity.java
Patch:
@@ -291,7 +291,7 @@ private void saveNote() {
                         } else {
                             snippet = content.getText().toString().substring(0, Constants.MAX_TITLE_LENGTH).replace("[^\\w\\s]+", " ");
                         }
-                        noteTitle.setText(snippet);
+                        noteTitle.setText(snippet.replaceAll("\\n", " ").trim());
                     }
                 }
 
@@ -301,7 +301,7 @@ private void saveNote() {
             // If we have to rename the file, do a delete and create
             if (!noteTitle.getText().toString().equals(note.getName())) {
                 note.delete();
-                note = new File(sourceDir + File.separator + noteTitle.getText().toString());
+                note = new File(sourceDir + File.separator + noteTitle.getText().toString().trim());
             }
 
             FileOutputStream fos = new FileOutputStream(note);

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -110,6 +110,7 @@ private void setupAppearancePreferences() {
             previousDirButton.setTextColor(getResources().getColor(R.color.lighter_grey));
         } else {
             previousDirButton.setBackgroundColor(getResources().getColor(R.color.lighter_grey));
+            previousDirButton.setTextColor(getResources().getColor(R.color.dark_grey));
         }
 
     }

File: app/src/main/java/me/writeily/pro/dialog/FilesystemDialog.java
Patch:
@@ -137,6 +137,7 @@ public void onResume() {
             workingDirectoryText.setVisibility(View.VISIBLE);
             rootDir = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + Constants.WRITEILY_FOLDER);
             listDirectories(rootDir);
+            currentDir = rootDir;
         } else {
             workingDirectoryText.setVisibility(View.GONE);
             rootDir = new File(Environment.getExternalStorageDirectory().getPath());

File: app/src/main/java/me/writeily/pro/dialog/FilesystemDialog.java
Patch:
@@ -196,10 +196,10 @@ private void goToPreviousDir() {
         }
 
         if (isMovingFile) {
+            showCurrentDirectory(currentDir.getAbsolutePath());
             listDirectories(currentDir);
         } else {
             listFilesInDirectory(currentDir);
-            showCurrentDirectory(currentDir.getAbsolutePath());
         }
     }
 

File: app/src/main/java/me/writeily/pro/NoteActivity.java
Patch:
@@ -303,7 +303,7 @@ private class KeyboardBarListener implements View.OnClickListener {
         @Override
         public void onClick(View v) {
             CharSequence shortcut = ((Button) v).getText();
-            content.append(shortcut);
+            content.getText().insert(content.getSelectionStart(), shortcut);
         }
     }
 }

File: app/src/main/java/me/writeily/pro/NotesFragment.java
Patch:
@@ -307,6 +307,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                 File note = filesAdapter.getItem(i);
 
                 Intent intent = new Intent(context, NoteActivity.class);
+                intent.putExtra(Constants.NOTE_SOURCE_DIR, getCurrentDir());
                 intent.putExtra(Constants.NOTE_KEY, note);
 
                 startActivity(intent);

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -5,7 +5,6 @@
  */
 public class Constants {
     // ----- FILE EXTENSIONS -----
-    public static final String WRITEILY_EXT = ".writeily";
     public static final String TXT_EXT = ".txt";
     public static final String MD_EXT = ".md";
     public static final String MARKDOWN_EXT = ".markdown";

File: app/src/main/java/me/writeily/pro/model/Constants.java
Patch:
@@ -13,7 +13,7 @@ public class Constants {
 
     public static final String UTF_CHARSET = "utf-8";
 
-    public static final int MAX_TITLE_LENGTH = 25;
+    public static final int MAX_TITLE_LENGTH = 20;
     public static final String USER_PIN_KEY = "user_pin";
     public static final String SET_PIN_ACTION = "set_pin";
     public static final String FOLDER_DIALOG_TAG = "folder_dialog_tag";

File: app/src/main/java/me/writeily/writeilypro/model/Constants.java
Patch:
@@ -28,6 +28,7 @@ public class Constants {
     public static final String SHARE_TYPE_TAG = "share_type_tag";
     public static final String FILESYSTEM_IMPORT_DIALOG_TAG = "filesystem_import_dialog_tag";
     public static final String FILESYSTEM_MOVE_DIALOG_TAG = "filesystem_move_dialog_tag";
+    public static final String CONFIRM_DIALOG_TAG = "confirm_dialog_tag";
 
     // ----- KEYS -----
     public static final String CURRENT_DIRECTORY_DIALOG_KEY = "current_dir_folder_key";
@@ -54,4 +55,5 @@ public class Constants {
     public static final String DARK_MD_HTML_PREFIX = "<html><head><style type=\"text/css\">html,body{padding:4px 8px 4px 8px;font-family:'sans-serif-light';color:#ffffff;background-color:#303030}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color:#ffffff;text-decoration:underline;}a:visited{color:#dddddd}}</style></head><body>";
     public static final String MD_HTML_SUFFIX = "</body></html>";
     public static final String NOTE_SOURCE_DIR = "note_source_dir";
+    public static final String CONFIRM_RESPONSE = "confirm_response";
 }

File: app/src/main/java/me/writeily/writeilypro/NoteActivity.java
Patch:
@@ -276,7 +276,7 @@ private void saveNote() {
                     noteTitle.setText(noteTitle.getText().toString() + Constants.TXT_EXT);
                 }
 
-                note = new File(sourceDir + "File.separator" + noteTitle.getText());
+                note = new File(sourceDir + File.separator + noteTitle.getText());
             }
 
             // If we have to rename the file, do a delete and create

File: app/src/main/java/me/writeily/writeilypro/NotesFragment.java
Patch:
@@ -211,8 +211,8 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
         @Override
         public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
             switch (item.getItemId()) {
-                case R.id.context_menu_archive:
-                    WriteilySingleton.getInstance().moveSelectedNotes(filesListView, filesAdapter, Constants.ARCHIVED_FOLDER);
+                case R.id.context_menu_delete:
+                    WriteilySingleton.getInstance().deleteSelectedNotes(filesListView, filesAdapter);
                     listFilesInDirectory(rootDir);
                     mode.finish();
                     return true;

File: app/src/main/java/me/writeily/writeilypro/model/Constants.java
Patch:
@@ -39,8 +39,6 @@ public class Constants {
 
     // ----- DEFAULT FOLDERS -----
     public static final String WRITEILY_FOLDER = "/writeily/";
-    public static final String NOTES_FOLDER = "/writeily/notes/";
-    public static final String ARCHIVED_FOLDER = "/writeily/archived/";
 
     // ----- REQUEST CODES -----
     public static final int SET_PIN_REQUEST_CODE = 3;
@@ -55,4 +53,5 @@ public class Constants {
     public static final String MD_HTML_PREFIX = "<html><head><style type=\"text/css\">html,body{padding:4px 8px 4px 8px;font-family:'sans-serif-light';color:#303030}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color:#0099ff;text-decoration:underline;}}</style></head><body>";
     public static final String DARK_MD_HTML_PREFIX = "<html><head><style type=\"text/css\">html,body{padding:4px 8px 4px 8px;font-family:'sans-serif-light';color:#ffffff;background-color:#303030}h1,h2,h3,h4,h5,h6{font-family:'sans-serif-condensed';}a{color:#ffffff;text-decoration:underline;}a:visited{color:#dddddd}}</style></head><body>";
     public static final String MD_HTML_SUFFIX = "</body></html>";
+    public static final String NOTE_SOURCE_DIR = "note_source_dir";
 }

File: app/src/main/java/me/writeily/writeilypro/dialog/FolderDialog.java
Patch:
@@ -8,9 +8,7 @@
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
-import android.view.ViewGroup;
 import android.widget.EditText;
-import android.widget.Toast;
 
 import me.writeily.writeilypro.R;
 import me.writeily.writeilypro.model.Constants;

