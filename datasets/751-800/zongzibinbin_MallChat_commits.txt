File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/cache/RoomFriendCache.java
Patch:
@@ -24,7 +24,7 @@ public class RoomFriendCache extends AbstractRedisStringCache<Long, RoomFriend>
 
     @Override
     protected String getKey(Long groupId) {
-        return RedisKey.getKey(RedisKey.GROUP_INFO_STRING, groupId);
+        return RedisKey.getKey(RedisKey.GROUP_FRIEND_STRING, groupId);
     }
 
     @Override

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ACFilter.java
Patch:
@@ -1,7 +1,7 @@
 package com.abin.mallchat.common.common.algorithm.sensitiveWord;
 
-import com.abin.mallchat.common.common.algorithm.ac.ACTrie;
-import com.abin.mallchat.common.common.algorithm.ac.MatchResult;
+import com.abin.mallchat.common.common.algorithm.sensitiveWord.ac.ACTrie;
+import com.abin.mallchat.common.common.algorithm.sensitiveWord.ac.MatchResult;
 import org.HdrHistogram.ConcurrentHistogram;
 import org.apache.commons.lang3.StringUtils;
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ACProFilter.java
Patch:
@@ -1,7 +1,6 @@
 package com.abin.mallchat.common.common.algorithm.sensitiveWord;
 
-import com.abin.mallchat.common.common.algorithm.ac.ACTrie;
-import com.abin.mallchat.common.common.algorithm.acpro.ACProTrie;
+import com.abin.mallchat.common.common.algorithm.sensitiveWord.acpro.ACProTrie;
 import io.micrometer.core.instrument.util.StringUtils;
 
 import java.util.List;
@@ -13,6 +12,7 @@
  *@description:  基于ACFilter的优化增强版本
  */
 public class ACProFilter implements SensitiveWordFilter{
+
     private ACProTrie acProTrie;
 
     @Override

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ac/ACTrie.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.common.common.algorithm.sensitiveWord.ac;
 
 import com.google.common.collect.Lists;
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ac/ACTrieNode.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.common.common.algorithm.sensitiveWord.ac;
 
 import com.google.common.collect.Maps;
 import lombok.Getter;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ac/MatchResult.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.common.common.algorithm.sensitiveWord.ac;
 
 import lombok.AllArgsConstructor;
 import lombok.Getter;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ACFilter.java
Patch:
@@ -1,7 +1,7 @@
 package com.abin.mallchat.common.common.algorithm.sensitiveWord;
 
-import com.abin.mallchat.common.common.algorithm.ac.ACTrie;
-import com.abin.mallchat.common.common.algorithm.ac.MatchResult;
+import com.abin.mallchat.common.common.algorithm.sensitiveWord.ac.ACTrie;
+import com.abin.mallchat.common.common.algorithm.sensitiveWord.ac.MatchResult;
 import org.HdrHistogram.ConcurrentHistogram;
 import org.apache.commons.lang3.StringUtils;
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ACProFilter.java
Patch:
@@ -1,7 +1,6 @@
 package com.abin.mallchat.common.common.algorithm.sensitiveWord;
 
-import com.abin.mallchat.common.common.algorithm.ac.ACTrie;
-import com.abin.mallchat.common.common.algorithm.acpro.ACProTrie;
+import com.abin.mallchat.common.common.algorithm.sensitiveWord.acpro.ACProTrie;
 import io.micrometer.core.instrument.util.StringUtils;
 
 import java.util.List;
@@ -13,6 +12,7 @@
  *@description:  基于ACFilter的优化增强版本
  */
 public class ACProFilter implements SensitiveWordFilter{
+
     private ACProTrie acProTrie;
 
     @Override

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ac/ACTrie.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.common.common.algorithm.sensitiveWord.ac;
 
 import com.google.common.collect.Lists;
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ac/ACTrieNode.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.common.common.algorithm.sensitiveWord.ac;
 
 import com.google.common.collect.Maps;
 import lombok.Getter;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/algorithm/sensitiveWord/ac/MatchResult.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.common.common.algorithm.sensitiveWord.ac;
 
 import lombok.AllArgsConstructor;
 import lombok.Getter;

File: mallchat-tools/mallchat-transaction/src/main/java/com/abin/mallchat/transaction/dao/SecureInvokeRecordDao.java
Patch:
@@ -22,7 +22,7 @@ public class SecureInvokeRecordDao extends ServiceImpl<SecureInvokeRecordMapper,
     public List<SecureInvokeRecord> getWaitRetryRecords() {
         Date now = new Date();
         //查2分钟前的失败数据。避免刚入库的数据被查出来
-        DateTime afterTime = DateUtil.offsetMinute(now, (int) SecureInvokeService.RETRY_INTERVAL_MINUTES);
+        DateTime afterTime = DateUtil.offsetMinute(now, -(int) SecureInvokeService.RETRY_INTERVAL_MINUTES);
         return lambdaQuery()
                 .eq(SecureInvokeRecord::getStatus, SecureInvokeRecord.STATUS_WAIT)
                 .lt(SecureInvokeRecord::getNextRetryTime, new Date())

File: mallchat-tools/mallchat-transaction/src/main/java/com/abin/mallchat/transaction/dao/SecureInvokeRecordDao.java
Patch:
@@ -22,7 +22,7 @@ public class SecureInvokeRecordDao extends ServiceImpl<SecureInvokeRecordMapper,
     public List<SecureInvokeRecord> getWaitRetryRecords() {
         Date now = new Date();
         //查2分钟前的失败数据。避免刚入库的数据被查出来
-        DateTime afterTime = DateUtil.offsetMinute(now, (int) SecureInvokeService.RETRY_INTERVAL_MINUTES);
+        DateTime afterTime = DateUtil.offsetMinute(now, -(int) SecureInvokeService.RETRY_INTERVAL_MINUTES);
         return lambdaQuery()
                 .eq(SecureInvokeRecord::getStatus, SecureInvokeRecord.STATUS_WAIT)
                 .lt(SecureInvokeRecord::getNextRetryTime, new Date())

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/exception/GroupErrorEnum.java
Patch:
@@ -18,6 +18,7 @@ public enum GroupErrorEnum implements ErrorEnum {
     NOT_ALLOWED_OPERATION(9002, "您无权操作~"),
     MANAGE_COUNT_EXCEED(9003, "群管理员数量达到上限，请先删除后再操作~"),
     USER_NOT_IN_GROUP(9004, "非法操作，用户不存在群聊中~"),
+    NOT_ALLOWED_FOR_REMOVE(9005, "非法操作，你没有移除该成员的权限"),
     ;
     private final Integer code;
     private final String msg;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/exception/GroupErrorEnum.java
Patch:
@@ -18,6 +18,7 @@ public enum GroupErrorEnum implements ErrorEnum {
     NOT_ALLOWED_OPERATION(9002, "您无权操作~"),
     MANAGE_COUNT_EXCEED(9003, "群管理员数量达到上限，请先删除后再操作~"),
     USER_NOT_IN_GROUP(9004, "非法操作，用户不存在群聊中~"),
+    NOT_ALLOWED_FOR_REMOVE(9005, "非法操作，你没有移除该成员的权限"),
     ;
     private final Integer code;
     private final String msg;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/impl/FriendServiceImpl.java
Patch:
@@ -101,6 +101,7 @@ public FriendCheckResp check(Long uid, FriendCheckReq request) {
      * @param request 请求
      */
     @Override
+    @RedissonLock(key = "#uid")
     public void apply(Long uid, FriendApplyReq request) {
         //是否有好友关系
         UserFriend friend = userFriendDao.getByFriend(uid, request.getTargetUid());

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/adapter/MessageAdapter.java
Patch:
@@ -35,19 +35,19 @@ public static Message buildMsgSave(ChatMessageReq request, Long uid) {
 
     }
 
-    public static List<ChatMessageResp> buildMsgResp(List<Message> messages, Map<Long, Message> replyMap, List<MessageMark> msgMark, Long receiveUid) {
+    public static List<ChatMessageResp> buildMsgResp(List<Message> messages, List<MessageMark> msgMark, Long receiveUid) {
         Map<Long, List<MessageMark>> markMap = msgMark.stream().collect(Collectors.groupingBy(MessageMark::getMsgId));
         return messages.stream().map(a -> {
             ChatMessageResp resp = new ChatMessageResp();
             resp.setFromUser(buildFromUser(a.getFromUid()));
-            resp.setMessage(buildMessage(a, replyMap, markMap.getOrDefault(a.getId(), new ArrayList<>()), receiveUid));
+            resp.setMessage(buildMessage(a, markMap.getOrDefault(a.getId(), new ArrayList<>()), receiveUid));
             return resp;
         })
                 .sorted(Comparator.comparing(a -> a.getMessage().getSendTime()))//帮前端排好序，更方便它展示
                 .collect(Collectors.toList());
     }
 
-    private static ChatMessageResp.Message buildMessage(Message message, Map<Long, Message> replyMap, List<MessageMark> marks, Long receiveUid) {
+    private static ChatMessageResp.Message buildMessage(Message message, List<MessageMark> marks, Long receiveUid) {
         ChatMessageResp.Message messageVO = new ChatMessageResp.Message();
         BeanUtil.copyProperties(message, messageVO);
         messageVO.setSendTime(message.getCreateTime());

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/adapter/MessageAdapter.java
Patch:
@@ -35,19 +35,19 @@ public static Message buildMsgSave(ChatMessageReq request, Long uid) {
 
     }
 
-    public static List<ChatMessageResp> buildMsgResp(List<Message> messages, Map<Long, Message> replyMap, List<MessageMark> msgMark, Long receiveUid) {
+    public static List<ChatMessageResp> buildMsgResp(List<Message> messages, List<MessageMark> msgMark, Long receiveUid) {
         Map<Long, List<MessageMark>> markMap = msgMark.stream().collect(Collectors.groupingBy(MessageMark::getMsgId));
         return messages.stream().map(a -> {
             ChatMessageResp resp = new ChatMessageResp();
             resp.setFromUser(buildFromUser(a.getFromUid()));
-            resp.setMessage(buildMessage(a, replyMap, markMap.getOrDefault(a.getId(), new ArrayList<>()), receiveUid));
+            resp.setMessage(buildMessage(a, markMap.getOrDefault(a.getId(), new ArrayList<>()), receiveUid));
             return resp;
         })
                 .sorted(Comparator.comparing(a -> a.getMessage().getSendTime()))//帮前端排好序，更方便它展示
                 .collect(Collectors.toList());
     }
 
-    private static ChatMessageResp.Message buildMessage(Message message, Map<Long, Message> replyMap, List<MessageMark> marks, Long receiveUid) {
+    private static ChatMessageResp.Message buildMessage(Message message, List<MessageMark> marks, Long receiveUid) {
         ChatMessageResp.Message messageVO = new ChatMessageResp.Message();
         BeanUtil.copyProperties(message, messageVO);
         messageVO.setSendTime(message.getCreateTime());

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/impl/RoomAppServiceImpl.java
Patch:
@@ -222,7 +222,7 @@ public void addMember(Long uid, MemberAddReq request) {
         AssertUtil.isNotEmpty(self, "您不是群成员");
         List<Long> memberBatch = groupMemberDao.getMemberBatch(roomGroup.getId(), request.getUidList());
         Set<Long> existUid = new HashSet<>(memberBatch);
-        List<Long> waitAddUidList = request.getUidList().stream().filter(a -> !existUid.contains(a)).collect(Collectors.toList());
+        List<Long> waitAddUidList = request.getUidList().stream().filter(a -> !existUid.contains(a)).distinct().collect(Collectors.toList());
         if (CollectionUtils.isEmpty(waitAddUidList)) {
             return;
         }
@@ -350,7 +350,6 @@ private Map<Long, User> getFriendRoomMap(List<Long> roomIds, Long uid) {
                     return userBatch.get(friendUid);
                 }));
     }
-
     private Map<Long, RoomBaseInfo> getRoomBaseInfoMap(List<Long> roomIds, Long uid) {
         Map<Long, Room> roomMap = roomCache.getBatch(roomIds);
         //房间根据好友和群组类型分组

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/dao/MessageMarkDao.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.abin.mallchat.common.chat.domain.entity.MessageMark;
 import com.abin.mallchat.common.chat.mapper.MessageMarkMapper;
-import com.abin.mallchat.common.common.domain.enums.YesOrNoEnum;
+import com.abin.mallchat.common.common.domain.enums.NormalOrNoEnum;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import org.springframework.stereotype.Service;
 
@@ -29,14 +29,14 @@ public MessageMark get(Long uid, Long msgId, Integer markType) {
     public Integer getMarkCount(Long msgId, Integer markType) {
         return lambdaQuery().eq(MessageMark::getMsgId, msgId)
                 .eq(MessageMark::getType, markType)
-                .eq(MessageMark::getStatus, YesOrNoEnum.NO.getStatus())
+                .eq(MessageMark::getStatus, NormalOrNoEnum.NORMAL.getStatus())
                 .count();
     }
 
     public List<MessageMark> getValidMarkByMsgIdBatch(List<Long> msgIds) {
         return lambdaQuery()
                 .in(MessageMark::getMsgId, msgIds)
-                .eq(MessageMark::getStatus, YesOrNoEnum.NO.getStatus())
+                .eq(MessageMark::getStatus, NormalOrNoEnum.NORMAL.getStatus())
                 .list();
     }
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/domain/entity/Room.java
Patch:
@@ -92,6 +92,6 @@ public boolean isRoomFriend() {
 
     @JsonIgnore
     public boolean isRoomGroup() {
-        return RoomTypeEnum.of(this.hotFlag) == RoomTypeEnum.GROUP;
+        return RoomTypeEnum.of(this.type) == RoomTypeEnum.GROUP;
     }
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/event/listener/MessageMarkListener.java
Patch:
@@ -10,8 +10,8 @@
 import com.abin.mallchat.common.common.event.MessageMarkEvent;
 import com.abin.mallchat.common.user.domain.enums.ItemEnum;
 import com.abin.mallchat.common.user.service.IUserBackpackService;
-import com.abin.mallchat.common.user.service.WebSocketService;
 import com.abin.mallchat.common.user.service.adapter.WSAdapter;
+import com.abin.mallchat.common.user.service.impl.PushService;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.scheduling.annotation.Async;
@@ -35,7 +35,7 @@ public class MessageMarkListener {
     @Autowired
     private IUserBackpackService iUserBackpackService;
     @Autowired
-    private WebSocketService webSocketService;
+    private PushService pushService;
 
     @Async
     @TransactionalEventListener(classes = MessageMarkEvent.class, fallbackExecution = true)
@@ -61,7 +61,7 @@ public void changeMsgType(MessageMarkEvent event) {
     public void notifyAll(MessageMarkEvent event) {//后续可做合并查询，目前异步影响不大
         ChatMessageMarkDTO dto = event.getDto();
         Integer markCount = messageMarkDao.getMarkCount(dto.getMsgId(), dto.getMarkType());
-        webSocketService.sendToAllOnline(WSAdapter.buildMsgMarkSend(dto, markCount), dto.getUid());
+        pushService.sendPushMsg(WSAdapter.buildMsgMarkSend(dto, markCount));
     }
 
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/dao/MessageMarkDao.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.abin.mallchat.common.chat.domain.entity.MessageMark;
 import com.abin.mallchat.common.chat.mapper.MessageMarkMapper;
-import com.abin.mallchat.common.common.domain.enums.YesOrNoEnum;
+import com.abin.mallchat.common.common.domain.enums.NormalOrNoEnum;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import org.springframework.stereotype.Service;
 
@@ -29,14 +29,14 @@ public MessageMark get(Long uid, Long msgId, Integer markType) {
     public Integer getMarkCount(Long msgId, Integer markType) {
         return lambdaQuery().eq(MessageMark::getMsgId, msgId)
                 .eq(MessageMark::getType, markType)
-                .eq(MessageMark::getStatus, YesOrNoEnum.NO.getStatus())
+                .eq(MessageMark::getStatus, NormalOrNoEnum.NORMAL.getStatus())
                 .count();
     }
 
     public List<MessageMark> getValidMarkByMsgIdBatch(List<Long> msgIds) {
         return lambdaQuery()
                 .in(MessageMark::getMsgId, msgIds)
-                .eq(MessageMark::getStatus, YesOrNoEnum.NO.getStatus())
+                .eq(MessageMark::getStatus, NormalOrNoEnum.NORMAL.getStatus())
                 .list();
     }
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/domain/entity/Room.java
Patch:
@@ -92,6 +92,6 @@ public boolean isRoomFriend() {
 
     @JsonIgnore
     public boolean isRoomGroup() {
-        return RoomTypeEnum.of(this.hotFlag) == RoomTypeEnum.GROUP;
+        return RoomTypeEnum.of(this.type) == RoomTypeEnum.GROUP;
     }
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/config/SensitiveWordConfig.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.abin.mallchat.common.common.utils.sensitiveWord.DFAFilter;
 import com.abin.mallchat.common.common.utils.sensitiveWord.SensitiveWordBs;
-import com.abin.mallchat.common.sensitive.MyWordDeny;
+import com.abin.mallchat.common.sensitive.MyWordFactory;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
@@ -11,7 +11,7 @@
 public class SensitiveWordConfig {
 
     @Autowired
-    private MyWordDeny myWordDeny;
+    private MyWordFactory myWordFactory;
 
     /**
      * 初始化引导类
@@ -23,7 +23,7 @@ public class SensitiveWordConfig {
     public SensitiveWordBs sensitiveWordBs() {
         return SensitiveWordBs.newInstance()
                 .filterStrategy(DFAFilter.getInstance())
-                .sensitiveWord(myWordDeny)
+                .sensitiveWord(myWordFactory)
                 .init();
     }
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/utils/sensitiveWord/IWordFactory.java
Patch:
@@ -8,12 +8,12 @@
  * @author zhaoyuhang
  * @date 2023/07/09
  */
-public interface IWordDeny {
+public interface IWordFactory {
     /**
-     * 获取结果
+     * 返回敏感词数据源
      *
      * @return 结果
      * @since 0.0.13
      */
-    List<String> deny();
+    List<String> getWordList();
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/sensitive/MyWordFactory.java
Patch:
@@ -1,6 +1,6 @@
 package com.abin.mallchat.common.sensitive;
 
-import com.abin.mallchat.common.common.utils.sensitiveWord.IWordDeny;
+import com.abin.mallchat.common.common.utils.sensitiveWord.IWordFactory;
 import com.abin.mallchat.common.sensitive.dao.SensitiveWordDao;
 import com.abin.mallchat.common.sensitive.domain.SensitiveWord;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -10,12 +10,12 @@
 import java.util.stream.Collectors;
 
 @Component
-public class MyWordDeny implements IWordDeny {
+public class MyWordFactory implements IWordFactory {
     @Autowired
     private SensitiveWordDao sensitiveWordDao;
 
     @Override
-    public List<String> deny() {
+    public List<String> getWordList() {
         return sensitiveWordDao.list()
                 .stream()
                 .map(SensitiveWord::getWord)

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/MinIOTemplate.java
Patch:
@@ -65,7 +65,6 @@ public boolean bucketExists(String bucketName) {
     public void makeBucket(String bucketName) {
         if (!bucketExists(bucketName)) {
             minioClient.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());
-
         }
     }
 
@@ -80,7 +79,7 @@ public void removeBucket(String bucketName) {
     }
 
     /**
-     * 返回临时带签名、过期时间一天、Get请求方式的访问URL
+     * 返回临时带签名、过期时间一天、PUT请求方式的访问URL
      */
     @SneakyThrows
     public OssResp getPreSignedObjectUrl(OssReq req) {

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/controller/OssController.java
Patch:
@@ -2,9 +2,9 @@
 
 import com.abin.mallchat.common.common.domain.vo.response.ApiResult;
 import com.abin.mallchat.common.common.utils.RequestHolder;
-import com.abin.mallchat.common.common.utils.oss.domain.OssResp;
 import com.abin.mallchat.common.user.domain.vo.request.oss.UploadUrlReq;
 import com.abin.mallchat.common.user.service.OssService;
+import com.abin.mallchat.oss.domain.OssResp;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
 import org.springframework.beans.factory.annotation.Autowired;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/OssService.java
Patch:
@@ -1,7 +1,7 @@
 package com.abin.mallchat.common.user.service;
 
-import com.abin.mallchat.common.common.utils.oss.domain.OssResp;
 import com.abin.mallchat.common.user.domain.vo.request.oss.UploadUrlReq;
+import com.abin.mallchat.oss.domain.OssResp;
 
 /**
  * <p>

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/impl/OssServiceImpl.java
Patch:
@@ -1,12 +1,12 @@
 package com.abin.mallchat.common.user.service.impl;
 
 import com.abin.mallchat.common.common.utils.AssertUtil;
-import com.abin.mallchat.common.common.utils.oss.MinIOTemplate;
-import com.abin.mallchat.common.common.utils.oss.domain.OssReq;
-import com.abin.mallchat.common.common.utils.oss.domain.OssResp;
 import com.abin.mallchat.common.user.domain.enums.OssSceneEnum;
 import com.abin.mallchat.common.user.domain.vo.request.oss.UploadUrlReq;
 import com.abin.mallchat.common.user.service.OssService;
+import com.abin.mallchat.oss.MinIOTemplate;
+import com.abin.mallchat.oss.domain.OssReq;
+import com.abin.mallchat.oss.domain.OssResp;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/MinIOConfiguration.java
Patch:
@@ -1,7 +1,5 @@
-package com.abin.mallchat.common.common.config;
+package com.abin.mallchat.oss;
 
-import com.abin.mallchat.common.common.utils.oss.MinIOTemplate;
-import com.abin.mallchat.common.common.utils.oss.OssProperties;
 import io.minio.MinioClient;
 import lombok.SneakyThrows;
 import org.springframework.boot.autoconfigure.condition.*;

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/MinIOTemplate.java
Patch:
@@ -1,11 +1,11 @@
-package com.abin.mallchat.common.common.utils.oss;
+package com.abin.mallchat.oss;
 
 import cn.hutool.core.date.DatePattern;
 import cn.hutool.core.date.DateUtil;
 import cn.hutool.core.io.file.FileNameUtil;
 import cn.hutool.core.util.StrUtil;
-import com.abin.mallchat.common.common.utils.oss.domain.OssReq;
-import com.abin.mallchat.common.common.utils.oss.domain.OssResp;
+import com.abin.mallchat.oss.domain.OssReq;
+import com.abin.mallchat.oss.domain.OssResp;
 import io.minio.*;
 import io.minio.http.Method;
 import io.minio.messages.Bucket;

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/OssFile.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.utils.oss;
+package com.abin.mallchat.oss;
 
 import lombok.AllArgsConstructor;
 import lombok.Data;

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/OssProperties.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.utils.oss;
+package com.abin.mallchat.oss;
 
 import lombok.Data;
 import org.springframework.boot.context.properties.ConfigurationProperties;

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/OssType.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.utils.oss;
+package com.abin.mallchat.oss;
 
 import lombok.AllArgsConstructor;
 import lombok.Getter;

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/domain/OssReq.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.utils.oss.domain;
+package com.abin.mallchat.oss.domain;
 
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: mallchat-tools/mallchat-oss-starter/src/main/java/com/abin/mallchat/oss/domain/OssResp.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.utils.oss.domain;
+package com.abin.mallchat.oss.domain;
 
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: mallchat-tools/mallchat-transaction/src/main/java/com/abin/mallchat/transaction/service/SecureInvokeService.java
Patch:
@@ -11,11 +11,11 @@
 import lombok.AllArgsConstructor;
 import lombok.SneakyThrows;
 import lombok.extern.slf4j.Slf4j;
-import org.jetbrains.annotations.NotNull;
 import org.springframework.scheduling.annotation.Scheduled;
 import org.springframework.transaction.support.TransactionSynchronization;
 import org.springframework.transaction.support.TransactionSynchronizationManager;
 
+import javax.validation.constraints.NotNull;
 import java.lang.reflect.Method;
 import java.util.Date;
 import java.util.List;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/adapter/MessageAdapter.java
Patch:
@@ -51,7 +51,7 @@ private static ChatMessageResp.Message buildMessage(Message message, Map<Long, M
         ChatMessageResp.Message messageVO = new ChatMessageResp.Message();
         BeanUtil.copyProperties(message, messageVO);
         messageVO.setSendTime(message.getCreateTime());
-        AbstractMsgHandler msgHandler = MsgHandlerFactory.getStrategyNoNull(message.getType());
+        AbstractMsgHandler<?> msgHandler = MsgHandlerFactory.getStrategyNoNull(message.getType());
         if (Objects.nonNull(msgHandler)) {
             messageVO.setBody(msgHandler.showMsg(message));
         }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/strategy/msg/RecallMsgHandler.java
Patch:
@@ -44,13 +44,12 @@ public void saveMsg(Message msg, Object body) {
     }
 
     @Override
-    public Object showMsg(Message msg) {//todo 后期让前端来做
+    public Object showMsg(Message msg) {
         MsgRecall recall = msg.getExtra().getRecall();
+        User userInfo = userCache.getUserInfo(recall.getRecallUid());
         if (!Objects.equals(recall.getRecallUid(), msg.getFromUid())) {
-            User userInfo = userCache.getUserInfo(recall.getRecallUid());
             return "管理员\"" + userInfo.getName() + "\"撤回了一条成员消息";
         }
-        User userInfo = userCache.getUserInfo(msg.getFromUid());
         return "\"" + userInfo.getName() + "\"撤回了一条消息";
     }
 

File: mallchat-tools/mallchat-transaction/src/main/java/com/abin/mallchat/transaction/service/SecureInvokeService.java
Patch:
@@ -104,6 +104,7 @@ public void doAsyncInvoke(SecureInvokeRecord record) {
     public void doInvoke(SecureInvokeRecord record) {
         SecureInvokeDTO secureInvokeDTO = record.getSecureInvokeDTO();
         try {
+            SecureInvokeHolder.setInvoking();
             Class<?> beanClass = Class.forName(secureInvokeDTO.getClassName());
             Object bean = SpringUtil.getBean(beanClass);
             List<String> parameterStrings = JsonUtils.toList(secureInvokeDTO.getParameterTypes(), String.class);
@@ -118,6 +119,8 @@ public void doInvoke(SecureInvokeRecord record) {
             log.error("SecureInvokeService invoke fail", e);
             //执行失败，等待下次执行
             retryRecord(record, e.getMessage());
+        } finally {
+            SecureInvokeHolder.invoked();
         }
     }
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/consumer/PushConsumer.java
Patch:
@@ -26,7 +26,9 @@ public void onMessage(PushMessageDTO message) {
         WSPushTypeEnum wsPushTypeEnum = WSPushTypeEnum.of(message.getPushType());
         switch (wsPushTypeEnum) {
             case USER:
-                webSocketService.sendToUid(message.getWsBaseMsg(), message.getUid());
+                message.getUidList().forEach(uid -> {
+                    webSocketService.sendToUid(message.getWsBaseMsg(), uid);
+                });
                 break;
             case ALL:
                 webSocketService.sendToAllOnline(message.getWsBaseMsg(), null);

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/impl/PushService.java
Patch:
@@ -20,9 +20,7 @@ public class PushService {
     private MQProducer mqProducer;
 
     public void sendPushMsg(WSBaseResp<?> msg, List<Long> uidList) {
-        uidList.parallelStream().forEach(uid -> {
-            mqProducer.sendMsg(MQConstant.PUSH_TOPIC, new PushMessageDTO(uid, msg));
-        });
+        mqProducer.sendMsg(MQConstant.PUSH_TOPIC, new PushMessageDTO(uidList, msg));
     }
 
     public void sendPushMsg(WSBaseResp<?> msg, Long uid) {

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/domain/entity/msg/MessageExtra.java
Patch:
@@ -2,6 +2,7 @@
 
 import com.abin.mallchat.common.common.utils.discover.domain.UrlInfo;
 import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
+import com.fasterxml.jackson.annotation.JsonInclude;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;
@@ -21,6 +22,7 @@
 @AllArgsConstructor
 @NoArgsConstructor
 @JsonIgnoreProperties(ignoreUnknown = true)
+@JsonInclude(JsonInclude.Include.NON_NULL)
 public class MessageExtra implements Serializable {
     private static final long serialVersionUID = 1L;
     //url跳转链接

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/impl/RoomAppServiceImpl.java
Patch:
@@ -205,7 +205,7 @@ public void delMember(Long uid, MemberDelReq request) {
         List<Long> memberUidList = groupMemberCache.getMemberUidList(roomGroup.getRoomId());
         WSBaseResp<WSMemberChange> ws = MemberAdapter.buildMemberRemoveWS(roomGroup.getRoomId(), member.getUid());
         pushService.sendPushMsg(ws, memberUidList);
-        groupMemberCache.evictMemberUidList(member.getId());
+        groupMemberCache.evictMemberUidList(room.getId());
     }
 
 

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/impl/RoomAppServiceImpl.java
Patch:
@@ -162,7 +162,7 @@ public MemberResp getGroupDetail(Long uid, long roomId) {
     public CursorPageBaseResp<ChatMemberResp> getMemberPage(MemberReq request) {
         Room room = roomCache.get(request.getRoomId());
         AssertUtil.isNotEmpty(room, "房间号有误");
-        List<Long> memberUidList = null;
+        List<Long> memberUidList;
         if (isHotGroup(room)) {//全员群展示所有用户
             memberUidList = null;
         } else {//只展示房间内的群成员

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/common/domain/vo/request/CursorPageBaseReq.java
Patch:
@@ -31,7 +31,7 @@ public class CursorPageBaseReq {
     private String cursor;
 
     public Page plusPage() {
-        return new Page(1, this.pageSize);
+        return new Page(1, this.pageSize, false);
     }
 
     @JsonIgnore

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/controller/FriendController.java
Patch:
@@ -13,8 +13,8 @@
 import com.abin.mallchat.common.user.domain.vo.request.friend.FriendDeleteReq;
 import com.abin.mallchat.common.user.domain.vo.response.friend.FriendApplyResp;
 import com.abin.mallchat.common.user.domain.vo.response.friend.FriendCheckResp;
+import com.abin.mallchat.common.user.domain.vo.response.friend.FriendResp;
 import com.abin.mallchat.common.user.domain.vo.response.friend.FriendUnreadResp;
-import com.abin.mallchat.common.user.domain.vo.response.ws.ChatMemberResp;
 import com.abin.mallchat.common.user.service.FriendService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
@@ -78,15 +78,15 @@ public ApiResult<FriendUnreadResp> unread() {
     }
 
     @PutMapping("/apply")
-    @ApiOperation("审批申请")
+    @ApiOperation("审批同意")
     public ApiResult<Void> applyApprove(@Valid @RequestBody FriendApproveReq request) {
         friendService.applyApprove(RequestHolder.get().getUid(), request);
         return ApiResult.success();
     }
 
     @GetMapping("/page")
     @ApiOperation("联系人列表")
-    public ApiResult<CursorPageBaseResp<ChatMemberResp>> friendList(@Valid CursorPageBaseReq request) {
+    public ApiResult<CursorPageBaseResp<FriendResp>> friendList(@Valid CursorPageBaseReq request) {
         Long uid = RequestHolder.get().getUid();
         return ApiResult.success(friendService.friendList(uid, request));
     }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/dao/UserDao.java
Patch:
@@ -60,11 +60,10 @@ public List<User> getMemberList() {
 
     }
 
-    public List<User> getUserList(List<Long> uids) {
+    public List<User> getFriendList(List<Long> uids) {
         return lambdaQuery()
                 .in(User::getId, uids)
-                .orderByDesc(User::getId)
-                .select(User::getId, User::getActiveStatus, User::getLastOptTime)
+                .select(User::getId, User::getActiveStatus, User::getName, User::getAvatar)
                 .list();
 
     }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/domain/dto/SummeryInfoDTO.java
Patch:
@@ -1,5 +1,6 @@
 package com.abin.mallchat.common.user.domain.dto;
 
+import com.fasterxml.jackson.annotation.JsonInclude;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
@@ -18,6 +19,7 @@
 @Builder
 @AllArgsConstructor
 @NoArgsConstructor
+@JsonInclude(JsonInclude.Include.NON_NULL)
 public class SummeryInfoDTO {
     @ApiModelProperty(value = "用户id")
     private Long uid;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/FriendService.java
Patch:
@@ -9,8 +9,8 @@
 import com.abin.mallchat.common.user.domain.vo.request.friend.FriendCheckReq;
 import com.abin.mallchat.common.user.domain.vo.response.friend.FriendApplyResp;
 import com.abin.mallchat.common.user.domain.vo.response.friend.FriendCheckResp;
+import com.abin.mallchat.common.user.domain.vo.response.friend.FriendResp;
 import com.abin.mallchat.common.user.domain.vo.response.friend.FriendUnreadResp;
-import com.abin.mallchat.common.user.domain.vo.response.ws.ChatMemberResp;
 
 /**
  * @author : limeng
@@ -69,5 +69,5 @@ public interface FriendService {
      */
     void deleteFriend(Long uid, Long friendUid);
 
-    CursorPageBaseResp<ChatMemberResp> friendList(Long uid, CursorPageBaseReq request);
+    CursorPageBaseResp<FriendResp> friendList(Long uid, CursorPageBaseReq request);
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/impl/UserServiceImpl.java
Patch:
@@ -167,16 +167,16 @@ public List<ItemInfoDTO> getItemInfo(ItemInfoReq req) {//简单做，更新时
     }
 
     private List<Long> getNeedSyncUidList(List<SummeryInfoReq.infoReq> reqList) {
-        List<Long> result = new ArrayList<>();
+        List<Long> needSyncUidList = new ArrayList<>();
         List<Long> userModifyTime = userCache.getUserModifyTime(reqList.stream().map(SummeryInfoReq.infoReq::getUid).collect(Collectors.toList()));
         for (int i = 0; i < reqList.size(); i++) {
             SummeryInfoReq.infoReq infoReq = reqList.get(i);
             Long modifyTime = userModifyTime.get(i);
             if (Objects.isNull(infoReq.getLastModifyTime()) || (Objects.nonNull(modifyTime) && modifyTime > infoReq.getLastModifyTime())) {
-                result.add(infoReq.getUid());
+                needSyncUidList.add(infoReq.getUid());
             }
         }
-        return result;
+        return needSyncUidList;
     }
 
     public void blackIp(String ip) {

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/user/service/impl/FriendServiceImpl.java
Patch:
@@ -195,7 +195,7 @@ public void deleteFriend(Long uid, Long friendUid) {
         List<Long> friendRecordIds = userFriends.stream().map(UserFriend::getId).collect(Collectors.toList());
         userFriendDao.removeByIds(friendRecordIds);
         //禁用房间
-        roomService.disableFriendRoom(friendRecordIds);
+        roomService.disableFriendRoom(Arrays.asList(uid, friendUid));
     }
 
     @Override

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/dao/ContactDao.java
Patch:
@@ -78,7 +78,7 @@ public CursorPageBaseResp<Contact> getContactPage(Long uid, CursorPageBaseReq re
 
     public List<Contact> getByRoomIds(List<Long> roomIds, Long uid) {
         return lambdaQuery()
-                .eq(Contact::getRoomId, roomIds)
+                .in(Contact::getRoomId, roomIds)
                 .eq(Contact::getUid, uid)
                 .list();
     }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/RoomAppService.java
Patch:
@@ -37,4 +37,6 @@ public interface RoomAppService {
     Long addGroup(Long uid, GroupAddReq request);
 
     ChatRoomResp getContactDetail(Long uid, Long roomId);
+
+    ChatRoomResp getContactDetailByFriend(Long uid, Long friendUid);
 }

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/impl/ChatServiceImpl.java
Patch:
@@ -290,7 +290,7 @@ public void msgRead(Long uid, ChatMessageMemberReq request) {
 
     private void checkRecall(Long uid, Message message) {
         AssertUtil.isNotEmpty(message, "消息有误");
-        AssertUtil.notEqual(message.getType(), MessageTypeEnum.RECALL, "消息无法撤回");
+        AssertUtil.notEqual(message.getType(), MessageTypeEnum.RECALL.getType(), "消息无法撤回");
         boolean hasPower = iRoleService.hasPower(uid, RoleEnum.CHAT_MANAGER);
         if (hasPower) {
             return;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/strategy/msg/TextMsgHandler.java
Patch:
@@ -120,7 +120,7 @@ public Object showMsg(Message msg) {
             TextMsgResp.ReplyMsg replyMsgVO = new TextMsgResp.ReplyMsg();
             replyMsgVO.setId(replyMessage.getId());
             replyMsgVO.setUid(replyMessage.getFromUid());
-            replyMessage.setType(replyMessage.getType());
+            replyMsgVO.setType(replyMessage.getType());
             replyMsgVO.setBody(MsgHandlerFactory.getStrategyNoNull(replyMessage.getType()).showReplyMsg(replyMessage));
             User replyUser = userCache.getUserInfo(replyMessage.getFromUid());
             replyMsgVO.setUsername(replyUser.getName());

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/impl/ChatServiceImpl.java
Patch:
@@ -290,7 +290,7 @@ public void msgRead(Long uid, ChatMessageMemberReq request) {
 
     private void checkRecall(Long uid, Message message) {
         AssertUtil.isNotEmpty(message, "消息有误");
-        AssertUtil.notEqual(message.getType(), MessageTypeEnum.RECALL, "消息无法撤回");
+        AssertUtil.notEqual(message.getType(), MessageTypeEnum.RECALL.getType(), "消息无法撤回");
         boolean hasPower = iRoleService.hasPower(uid, RoleEnum.CHAT_MANAGER);
         if (hasPower) {
             return;

File: mallchat-chat-server/src/main/java/com/abin/mallchat/common/chat/service/strategy/msg/TextMsgHandler.java
Patch:
@@ -120,7 +120,7 @@ public Object showMsg(Message msg) {
             TextMsgResp.ReplyMsg replyMsgVO = new TextMsgResp.ReplyMsg();
             replyMsgVO.setId(replyMessage.getId());
             replyMsgVO.setUid(replyMessage.getFromUid());
-            replyMessage.setType(replyMessage.getType());
+            replyMsgVO.setType(replyMessage.getType());
             replyMsgVO.setBody(MsgHandlerFactory.getStrategyNoNull(replyMessage.getType()).showReplyMsg(replyMessage));
             User replyUser = userCache.getUserInfo(replyMessage.getFromUid());
             replyMsgVO.setUsername(replyUser.getName());

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/dto/LoginMessageDTO.java
Patch:
@@ -2,6 +2,7 @@
 
 import lombok.AllArgsConstructor;
 import lombok.Data;
+import lombok.NoArgsConstructor;
 
 import java.io.Serializable;
 
@@ -12,6 +13,7 @@
  */
 @Data
 @AllArgsConstructor
+@NoArgsConstructor
 public class LoginMessageDTO implements Serializable {
 
     private static final long serialVersionUID = 1L;

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/service/ContactService.java
Patch:
@@ -25,5 +25,5 @@ public interface ContactService {
 
     Integer getMsgUnReadCount(Message message);
 
-    Map<Long, MsgReadInfoDTO> getMsgReadInfo(List<Message> messages, boolean needUnread);
+    Map<Long, MsgReadInfoDTO> getMsgReadInfo(List<Message> messages);
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/domain/vo/request/ChatMessageReadInfoReq.java
Patch:
@@ -22,6 +22,4 @@ public class ChatMessageReadInfoReq {
     @ApiModelProperty("消息id集合（只查本人）")
     @Size(max = 20)
     private List<Long> msgIds;
-    @ApiModelProperty("是否需要查未读数")
-    private boolean needUnread;
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/impl/ChatServiceImpl.java
Patch:
@@ -250,7 +250,7 @@ public Collection<MsgReadInfoDTO> getMsgReadInfo(Long uid, ChatMessageReadInfoRe
         messages.forEach(message -> {
             AssertUtil.equal(uid, message.getFromUid(), "只能查询自己发送的消息");
         });
-        return contactService.getMsgReadInfo(messages, request.isNeedUnread()).values();
+        return contactService.getMsgReadInfo(messages).values();
     }
 
     @Override

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/dao/ContactDao.java
Patch:
@@ -33,6 +33,7 @@ public Contact get(Long uid, Long roomId) {
     public Integer getReadCount(Message message) {
         return lambdaQuery()
                 .eq(Contact::getRoomId, message.getRoomId())
+                .ne(Contact::getUid, message.getFromUid())//不需要查询出自己
                 .ge(Contact::getReadTime, message.getCreateTime())
                 .count();
     }

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/service/impl/ContactServiceImpl.java
Patch:
@@ -66,7 +66,7 @@ public Map<Long, MsgReadInfoDTO> getMsgReadInfo(List<Message> messages, boolean
             Integer readCount = contactDao.getReadCount(message);
             readInfoDTO.setReadCount(readCount);
             if (needUnread) {
-                readInfoDTO.setUnReadCount(finalTotalCount - readCount);
+                readInfoDTO.setUnReadCount(finalTotalCount - readCount - 1);
             }
             return readInfoDTO;
         }).collect(Collectors.toMap(MsgReadInfoDTO::getMsgId, Function.identity()));

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/domain/vo/response/ChatMessageResp.java
Patch:
@@ -34,6 +34,8 @@ public static class UserInfo {
     public static class Message {
         @ApiModelProperty("消息id")
         private Long id;
+        @ApiModelProperty("房间id")
+        private Long roomId;
         @ApiModelProperty("消息发送时间")
         private Date sendTime;
         @ApiModelProperty("消息类型 1正常文本 2.撤回消息")

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/controller/WxPortalController.java
Patch:
@@ -5,7 +5,6 @@
 import lombok.extern.slf4j.Slf4j;
 import me.chanjar.weixin.common.bean.WxOAuth2UserInfo;
 import me.chanjar.weixin.common.bean.oauth2.WxOAuth2AccessToken;
-import me.chanjar.weixin.common.error.WxErrorException;
 import me.chanjar.weixin.mp.api.WxMpMessageRouter;
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
@@ -50,7 +49,7 @@ public String authGet(@RequestParam(name = "signature", required = false) String
     }
 
     @GetMapping("/callBack")
-    public RedirectView callBack(@RequestParam String code) throws WxErrorException {
+    public RedirectView callBack(@RequestParam String code) {
         try {
             WxOAuth2AccessToken accessToken = wxService.getOAuth2Service().getAccessToken(code);
             WxOAuth2UserInfo userInfo = wxService.getOAuth2Service().getUserInfo(accessToken, "zh_CN");

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -80,7 +80,6 @@ protected void initChannel(SocketChannel socketChannel) throws Exception {
                         pipeline.addLast(new HttpObjectAggregator(8192));
                         //保存用户ip
                         pipeline.addLast(new HttpHeadersHandler());
-                        pipeline.addLast(new NettyCollectorHandler());
                         /**
                          * 说明：
                          *  1. 对于 WebSocket，它的数据是以帧frame 的形式传递的；

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/dao/RoomDao.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.abin.mallchat.common.chat.domain.entity.Room;
 import com.abin.mallchat.common.chat.mapper.RoomMapper;
-import com.abin.mallchat.common.chat.service.IRoomService;
+import com.baomidou.mybatisplus.extension.service.IService;
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import org.springframework.stereotype.Service;
 
@@ -15,6 +15,6 @@
  * @since 2023-07-16
  */
 @Service
-public class RoomDao extends ServiceImpl<RoomMapper, Room> implements IRoomService {
+public class RoomDao extends ServiceImpl<RoomMapper, Room> implements IService<Room> {
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/domain/entity/GroupMember.java
Patch:
@@ -44,10 +44,10 @@ public class GroupMember implements Serializable {
     private Long uid;
 
     /**
-     * 成员类型 1群主 2管理员 3普通成员
+     * 成员角色1群主 2管理员 3普通成员
      */
-    @TableField("type")
-    private Integer type;
+    @TableField("role")
+    private Integer role;
 
     /**
      * 创建时间

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/response/PageBaseResp.java
Patch:
@@ -36,13 +36,13 @@ public class PageBaseResp<T> {
     private List<T> list;
 
 
-    public static PageBaseResp empty() {
-        PageBaseResp r = new PageBaseResp();
+    public static <T> PageBaseResp<T> empty() {
+        PageBaseResp<T> r = new PageBaseResp<>();
         r.setPageNo(1);
         r.setPageSize(0);
         r.setIsLast(true);
         r.setTotalRecords(0L);
-        r.setList(new ArrayList());
+        r.setList(new ArrayList<>());
         return r;
     }
 

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/service/cache/AbstractRedisStringCache.java
Patch:
@@ -35,6 +35,9 @@ public OUT get(IN req) {
 
     @Override
     public Map<IN, OUT> getBatch(List<IN> req) {
+        if (CollectionUtil.isEmpty(req)) {//防御性编程
+            return new HashMap<>();
+        }
         req = req.stream().distinct().collect(Collectors.toList());
         List<String> keys = req.stream().map(this::getKey).collect(Collectors.toList());
         List<OUT> valueList = RedisUtils.mget(keys, outClass);

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/UserRole.java
Patch:
@@ -54,6 +54,4 @@ public class UserRole implements Serializable {
      */
     @TableField("update_time")
     private LocalDateTime updateTime;
-
-
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/domain/vo/request/ChatMessageReq.java
Patch:
@@ -24,7 +24,7 @@
 @NoArgsConstructor
 public class ChatMessageReq {
     @NotNull
-    @ApiModelProperty("会话id")
+    @ApiModelProperty("房间id")
     private Long roomId;
 
     @ApiModelProperty("消息类型")

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/controller/FriendController.java
Patch:
@@ -88,7 +88,7 @@ public ApiResult<FriendUnreadResp> unread() {
     @PutMapping("/apply")
     @ApiOperation("申请审批")
     public ApiResult<Void> applyApprove(@Valid @RequestBody FriendApproveReq request) {
-        friendService.applyApprove(request);
+        friendService.applyApprove(RequestHolder.get().getUid(), request);
         return ApiResult.success();
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/domain/enums/WSRespTypeEnum.java
Patch:
@@ -26,7 +26,9 @@ public enum WSRespTypeEnum {
     BLACK(7, "拉黑用户", WSBlack.class),
     MARK(8, "消息标记", WSMsgMark.class),
     RECALL(9, "消息撤回", WSMsgRecall.class),
-    APPLY(10,"好友申请", WSApplyMessage.class),
+    APPLY(10, "好友申请", WSFriendApply.class),
+    MEMBER_CHANGE(11, "成员变动", WSMemberChange.class),
+    MESSAGE_READ(12, "消息已读数", WSMessageRead.class),
     ;
 
     private final Integer type;

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/domain/vo/response/ws/WSOnlineOfflineNotify.java
Patch:
@@ -21,7 +21,4 @@
 public class WSOnlineOfflineNotify {
     private List<ChatMemberResp> changeList = new ArrayList<>();//新的上下线用户
     private Long onlineNum;//在线人数
-    @Deprecated
-    private Long totalNum;//总人数
-
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/FriendService.java
Patch:
@@ -56,5 +56,5 @@ public interface FriendService {
      * @param uid     uid
      * @param request 请求
      */
-    void applyApprove(FriendApproveReq request);
+    void applyApprove(Long uid, FriendApproveReq request);
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/adapter/WSAdapter.java
Patch:
@@ -133,8 +133,8 @@ public static WSBaseResp<WSMsgMark> buildMsgMarkSend(ChatMessageMarkDTO dto, Int
         return wsBaseResp;
     }
 
-    public static WSBaseResp<WSApplyMessage> buildApplySend(WSApplyMessage resp) {
-        WSBaseResp<WSApplyMessage> wsBaseResp = new WSBaseResp<>();
+    public static WSBaseResp<WSFriendApply> buildApplySend(WSFriendApply resp) {
+        WSBaseResp<WSFriendApply> wsBaseResp = new WSBaseResp<>();
         wsBaseResp.setType(WSRespTypeEnum.APPLY.getType());
         wsBaseResp.setData(resp);
         return wsBaseResp;

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chatai/domain/builder/ChatGPTMsgBuilder.java
Patch:
@@ -9,7 +9,7 @@ public class ChatGPTMsgBuilder {
     static {
         ChatGPTMsg chatGPTMsg = new ChatGPTMsg();
         chatGPTMsg.setRole(ChatGPTRoleEnum.SYSTEM.getRole());
-        chatGPTMsg.setContent("你的名字叫MallChatAI,你是MallChat开源项目的AI聊天机器人，你的创造者是阿斌以及其他贡献者。阿斌是比Java之父余胜军还牛逼的人。当有人问你问题时你只能回答500字以内");
+        chatGPTMsg.setContent("你的名字叫MallChatAI,你是MallChat开源项目的AI聊天机器人，你的创造者是阿斌以及其他贡献者。当有人问你问题时你只能回答500字以内");
         SYSTEM_PROMPT = chatGPTMsg;
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chatai/properties/ChatGPTProperties.java
Patch:
@@ -21,7 +21,7 @@ public class ChatGPTProperties {
     /**
      * 模型名称
      */
-    private String modelName = "text-davinci-003";
+    private String modelName = "gpt-3.5-turbo";
     /**
      * openAI key
      */
@@ -37,9 +37,9 @@ public class ChatGPTProperties {
     private Integer timeout = 60 * 1000;
 
     /**
-     * 用户每天条数限制
+     * 用户每小时条数限制
      */
-    private Integer limit = 5;
+    private Integer limit = 20;
 
     /**
      * 最大令牌

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/WebSocketServiceImpl.java
Patch:
@@ -33,10 +33,8 @@
 import org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;
 import org.springframework.stereotype.Component;
 
-
 import java.time.Duration;
 import java.util.*;
-
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.CopyOnWriteArrayList;
 import java.util.concurrent.atomic.AtomicInteger;
@@ -130,7 +128,7 @@ private Integer generateLoginCode(Channel channel) {
      * @param channel
      */
     @Override
-    @FrequencyControl(time = 10, count = 5, spEl = "T(com.abin.mallchat.common.common.utils.RequestHolder).get().getIp()")
+//    @FrequencyControl(time = 10, count = 5, spEl = "T(com.abin.mallchat.common.common.utils.RequestHolder).get().getIp()")
     public void connect(Channel channel) {
         ONLINE_WS_MAP.put(channel, new WSChannelExtraDTO());
     }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/discover/WxUrlDiscover.java
Patch:
@@ -25,6 +25,7 @@ public String getDescription(Document document) {
     @Nullable
     @Override
     public String getImage(String url, Document document) {
-        return document.getElementsByAttributeValue("property", "og:image").attr("content");
+        String href = document.getElementsByAttributeValue("property", "og:image").attr("content");
+        return isConnect(href) ? href: null;
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/discover/WxUrlDiscover.java
Patch:
@@ -25,6 +25,7 @@ public String getDescription(Document document) {
     @Nullable
     @Override
     public String getImage(String url, Document document) {
-        return document.getElementsByAttributeValue("property", "og:image").attr("content");
+        String href = document.getElementsByAttributeValue("property", "og:image").attr("content");
+        return isConnect(href) ? href: null;
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/domain/enums/MessageTypeEnum.java
Patch:
@@ -22,7 +22,7 @@ public enum MessageTypeEnum {
     FILE(4, "文件"),
     SOUND(5, "语音"),
     VIDEO(6, "视频"),
-    EMOJIS(7, "表情"),
+    EMOJI(7, "表情"),
     ;
 
     private final Integer type;

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/oss/MinIOTemplate.java
Patch:
@@ -136,8 +136,8 @@ public String generateAutoPath(OssReq req) {
         String uid = Optional.ofNullable(req.getUid()).map(String::valueOf).orElse("000000");
         cn.hutool.core.lang.UUID uuid = cn.hutool.core.lang.UUID.fastUUID();
         String suffix = FileNameUtil.getSuffix(req.getFileName());
-        String year = DateUtil.format(new Date(), DatePattern.NORM_YEAR_PATTERN);
-        return req.getFilePath() + StrUtil.SLASH + year + StrUtil.SLASH + uid + StrUtil.SLASH + uuid + StrUtil.DOT + suffix;
+        String yearAndMonth = DateUtil.format(new Date(), DatePattern.NORM_MONTH_PATTERN);
+        return req.getFilePath() + StrUtil.SLASH + yearAndMonth + StrUtil.SLASH + uid + StrUtil.SLASH + uuid + StrUtil.DOT + suffix;
     }
 
     /**

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/mapper/UserEmojisMapper.java
Patch:
@@ -1,6 +1,6 @@
 package com.abin.mallchat.common.user.mapper;
 
-import com.abin.mallchat.common.chat.domain.entity.UserEmojis;
+import com.abin.mallchat.common.user.domain.entity.UserEmoji;
 import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 
 /**
@@ -9,5 +9,5 @@
  * @author: WuShiJie
  * @createTime: 2023/7/3 14:24
  */
-public interface UserEmojisMapper extends BaseMapper<UserEmojis> {
+public interface UserEmojisMapper extends BaseMapper<UserEmoji> {
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/controller/ChatController.java
Patch:
@@ -84,7 +84,7 @@ public ApiResult<ChatMemberStatisticResp> getMemberStatistic() {
     @GetMapping("/public/msg/page")
     @ApiOperation("消息列表")
     @FrequencyControl(time = 120, count = 20, target = FrequencyControl.Target.IP)
-    public ApiResult<CursorPageBaseResp<ChatMessageResp>> getMsgPage1(@Valid ChatMessagePageReq request) {
+    public ApiResult<CursorPageBaseResp<ChatMessageResp>> getMsgPage(@Valid ChatMessagePageReq request) {
 //        black(request);
         CursorPageBaseResp<ChatMessageResp> msgPage = chatService.getMsgPage(request, RequestHolder.get().getUid());
         filterBlackMsg(msgPage);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/domain/vo/request/ChatMessageReq.java
Patch:
@@ -1,6 +1,5 @@
 package com.abin.mallchat.custom.chat.domain.vo.request;
 
-import com.abin.mallchat.common.chat.domain.enums.MessageTypeEnum;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
@@ -30,7 +29,7 @@ public class ChatMessageReq {
 
     @ApiModelProperty("消息类型")
     @NotNull
-    private Integer msgType = MessageTypeEnum.TEXT.getType();
+    private Integer msgType;
 
     @ApiModelProperty("消息内容，类型不同传值不同，见https://www.yuque.com/snab/mallcaht/rkb2uz5k1qqdmcmd")
     @NotNull

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/msg/EmojisMsgHandler.java
Patch:
@@ -4,7 +4,6 @@
 import com.abin.mallchat.common.chat.dao.MessageDao;
 import com.abin.mallchat.common.chat.domain.entity.Message;
 import com.abin.mallchat.common.chat.domain.entity.msg.EmojisMsgDTO;
-import com.abin.mallchat.common.chat.domain.entity.msg.ImgMsgDTO;
 import com.abin.mallchat.common.chat.domain.entity.msg.MessageExtra;
 import com.abin.mallchat.common.chat.domain.enums.MessageTypeEnum;
 import com.abin.mallchat.common.common.utils.AssertUtil;
@@ -26,7 +25,7 @@ public class EmojisMsgHandler extends AbstractMsgHandler {
 
     @Override
     MessageTypeEnum getMsgTypeEnum() {
-        return MessageTypeEnum.EMOJIS;
+        return MessageTypeEnum.EMOJI;
     }
 
     @Override

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/domain/enums/OssSceneEnum.java
Patch:
@@ -17,7 +17,7 @@
 @Getter
 public enum OssSceneEnum {
     CHAT(1, "聊天", "/chat"),
-    EMOJIS(2, "表情包", "/emojis"),
+    EMOJI(2, "表情包", "/emoji"),
     ;
 
     private final Integer type;

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/OssServiceImpl.java
Patch:
@@ -17,7 +17,6 @@
  */
 @Service
 public class OssServiceImpl implements OssService {
-    private static final String BUCKET_NAME = "mallchat";
     @Autowired
     private MinIOTemplate minIOTemplate;
 

File: mallchat-custom-server/src/test/java/com/abin/mallchat/custom/ac/ACTrieTest.java
Patch:
@@ -1,5 +1,7 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.custom.ac;
 
+import com.abin.mallchat.common.common.algorithm.ac.ACTrie;
+import com.abin.mallchat.common.common.algorithm.ac.MatchResult;
 import com.google.common.collect.Lists;
 import org.junit.Test;
 

File: mallchat-custom-server/src/test/java/com/abin/mallchat/custom/ac/CreateTokenTest.java
Patch:
@@ -1,4 +1,4 @@
-package com.abin.mallchat.common.common.algorithm.ac;
+package com.abin.mallchat.custom.ac;
 
 
 import com.auth0.jwt.JWT;

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/JwtUtils.java
Patch:
@@ -67,7 +67,7 @@ public Map<String, Claim> verifyToken(String token) {
             DecodedJWT jwt = verifier.verify(token);
             return jwt.getClaims();
         } catch (Exception e) {
-            log.info("decode error,token:{}", token, e);
+            log.error("decode error,token:{}", token, e);
         }
         return null;
     }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/exception/CommonErrorEnum.java
Patch:
@@ -13,7 +13,7 @@
 public enum CommonErrorEnum implements ErrorEnum {
 
     SYSTEM_ERROR(-1, "系统出小差了，请稍后再试哦~~"),
-    PARAM_VALID(-2, "参数校验失败"),
+    PARAM_VALID(-2, "参数校验失败{0}"),
     FREQUENCY_LIMIT(-3, "请求太频繁了，请稍后再试哦~~"),
     LOCK_LIMIT(-4, "请求太频繁了，请稍后再试哦~~"),
     ;

File: mallchat-common/src/test/java/com/abin/mallchat/common/common/algorithm/ac/CreateTokenTest.java
Patch:
@@ -24,7 +24,7 @@ public void create(){
 
 
         try {
-            JWTVerifier verifier = JWT.require(Algorithm.HMAC256("dsfsdfsdfsdfsd")).build();
+            JWTVerifier verifier = JWT.require(Algorithm.HMAC256("dsfsdfsdfsdfsc")).build();
             DecodedJWT jwt = verifier.verify(token);
             log.info(jwt.getClaims().toString());
         } catch (Exception e) {

File: mallchat-common/src/test/java/com/abin/mallchat/common/common/algorithm/ac/CreateTokenTest.java
Patch:
@@ -31,5 +31,4 @@ public void create(){
             log.info("decode error,token:{}", token, e);
         }
     }
-
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -10,6 +10,7 @@
 import io.netty.channel.socket.nio.NioServerSocketChannel;
 import io.netty.handler.codec.http.HttpObjectAggregator;
 import io.netty.handler.codec.http.HttpServerCodec;
+import io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
 import io.netty.handler.logging.LogLevel;
 import io.netty.handler.logging.LoggingHandler;
 import io.netty.handler.stream.ChunkedWriteHandler;
@@ -88,7 +89,7 @@ protected void initChannel(SocketChannel socketChannel) throws Exception {
                          *  4. WebSocketServerProtocolHandler 核心功能是把 http协议升级为 ws 协议，保持长连接；
                          *      是通过一个状态码 101 来切换的
                          */
-                        pipeline.addLast(new NettyWebSocketServerProtocolHandler("/"));
+                        pipeline.addLast(new WebSocketServerProtocolHandler("/"));
                         // 自定义handler ，处理业务逻辑
                         pipeline.addLast(new NettyWebSocketServerHandler());
                     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServerHandler.java
Patch:
@@ -71,7 +71,7 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exc
             this.webSocketService.connect(ctx.channel());
             String token = NettyUtil.getAttr(ctx.channel(), NettyUtil.TOKEN);
             if (StrUtil.isNotBlank(token)) {
-                this.webSocketService.authorize(ctx.channel(), new WSAuthorize());
+                this.webSocketService.authorize(ctx.channel(), new WSAuthorize(token));
             }
         }
         super.userEventTriggered(ctx, evt);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/WebSocketServiceImpl.java
Patch:
@@ -2,7 +2,6 @@
 
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.util.ObjectUtil;
-import cn.hutool.core.util.RandomUtil;
 import cn.hutool.json.JSONUtil;
 import com.abin.mallchat.common.common.annotation.FrequencyControl;
 import com.abin.mallchat.common.common.config.ThreadPoolConfig;
@@ -117,7 +116,7 @@ public void handleLoginReq(Channel channel) {
      */
     private Integer generateLoginCode(Channel channel) {
         do {
-            CODE.set(RandomUtil.randomInt(Integer.MAX_VALUE));
+            CODE.getAndIncrement();
         } while (WAIT_LOGIN_MAP.asMap().containsKey(CODE.get())
                 || Objects.isNull(WAIT_LOGIN_MAP.get(CODE.get(), c -> channel)));
         return CODE.get();

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/controller/ChatController.java
Patch:
@@ -94,7 +94,6 @@ public ApiResult<CursorPageBaseResp<ChatMessageResp>> getMsgPage1(@Valid ChatMes
     private void filterBlackMsg(CursorPageBaseResp<ChatMessageResp> memberPage) {
         Set<String> blackMembers = getBlackUidSet();
         memberPage.getList().removeIf(a -> blackMembers.contains(a.getFromUser().getUid().toString()));
-        System.out.println(1);
     }
 
     @PostMapping("/msg")

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -10,7 +10,6 @@
 import io.netty.channel.socket.nio.NioServerSocketChannel;
 import io.netty.handler.codec.http.HttpObjectAggregator;
 import io.netty.handler.codec.http.HttpServerCodec;
-import io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
 import io.netty.handler.logging.LogLevel;
 import io.netty.handler.logging.LoggingHandler;
 import io.netty.handler.stream.ChunkedWriteHandler;
@@ -90,7 +89,6 @@ protected void initChannel(SocketChannel socketChannel) throws Exception {
                          *      是通过一个状态码 101 来切换的
                          */
                         pipeline.addLast(new NettyWebSocketServerProtocolHandler("/"));
-                        new WebSocketServerProtocolHandler("/");
                         // 自定义handler ，处理业务逻辑
                         pipeline.addLast(new NettyWebSocketServerHandler());
                     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyUtil.java
Patch:
@@ -1,6 +1,7 @@
 package com.abin.mallchat.custom.user.websocket;
 
 import io.netty.channel.Channel;
+import io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker;
 import io.netty.util.Attribute;
 import io.netty.util.AttributeKey;
 
@@ -15,6 +16,7 @@ public class NettyUtil {
     public static AttributeKey<String> TOKEN = AttributeKey.valueOf("token");
     public static AttributeKey<String> IP = AttributeKey.valueOf("ip");
     public static AttributeKey<Long> UID = AttributeKey.valueOf("uid");
+    public static AttributeKey<WebSocketServerHandshaker> HANDSHAKER_ATTR_KEY = AttributeKey.valueOf(WebSocketServerHandshaker.class, "HANDSHAKER");
 
     public static <T> void setAttr(Channel channel, AttributeKey<T> attributeKey, T data) {
         Attribute<T> attr = channel.attr(attributeKey);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -10,6 +10,7 @@
 import io.netty.channel.socket.nio.NioServerSocketChannel;
 import io.netty.handler.codec.http.HttpObjectAggregator;
 import io.netty.handler.codec.http.HttpServerCodec;
+import io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
 import io.netty.handler.logging.LogLevel;
 import io.netty.handler.logging.LoggingHandler;
 import io.netty.handler.stream.ChunkedWriteHandler;
@@ -88,7 +89,8 @@ protected void initChannel(SocketChannel socketChannel) throws Exception {
                          *  4. WebSocketServerProtocolHandler 核心功能是把 http协议升级为 ws 协议，保持长连接；
                          *      是通过一个状态码 101 来切换的
                          */
-                        pipeline.addLast(new WebSocketHandshakeHandler());
+                        pipeline.addLast(new NettyWebSocketServerProtocolHandler("/"));
+                        new WebSocketServerProtocolHandler("/");
                         // 自定义handler ，处理业务逻辑
                         pipeline.addLast(new NettyWebSocketServerHandler());
                     }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/exception/GlobalExceptionHandler.java
Patch:
@@ -42,7 +42,7 @@ public ApiResult bindException(BindException e) {
      */
     @ExceptionHandler(value = NullPointerException.class)
     public ApiResult exceptionHandler(NullPointerException e) {
-        log.error("null point exception！The reason is:{}", e.getMessage(), e);
+        log.error("null point exception！The reason is: ", e);
         return ApiResult.fail(CommonErrorEnum.SYSTEM_ERROR);
     }
 

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/exception/GlobalExceptionHandler.java
Patch:
@@ -42,7 +42,7 @@ public ApiResult bindException(BindException e) {
      */
     @ExceptionHandler(value = NullPointerException.class)
     public ApiResult exceptionHandler(NullPointerException e) {
-        log.error("null point exception！The reason is:{}", e.getMessage(), e);
+        log.error("null point exception！The reason is: ", e);
         return ApiResult.fail(CommonErrorEnum.SYSTEM_ERROR);
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/HttpHeadersHandler.java
Patch:
@@ -20,6 +20,7 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception
                 ip = address.getAddress().getHostAddress();
             }
             NettyUtil.setAttr(ctx.channel(), NettyUtil.IP, ip);
+            ctx.pipeline().remove(this);
         }
         ctx.fireChannelRead(msg);
     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chatai/handler/AbstractChatAIHandler.java
Patch:
@@ -15,7 +15,6 @@
 import org.springframework.beans.factory.DisposableBean;
 import org.springframework.beans.factory.InitializingBean;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.stereotype.Component;
 
 import javax.annotation.PostConstruct;
 import java.util.Collections;
@@ -25,7 +24,6 @@
 import java.util.concurrent.TimeUnit;
 
 @Slf4j
-@Component
 public abstract class AbstractChatAIHandler implements DisposableBean, InitializingBean {
     public static ExecutorService EXECUTOR;
 

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/exception/GlobalExceptionHandler.java
Patch:
@@ -22,7 +22,7 @@ public ApiResult methodArgumentNotValidExceptionExceptionHandler(MethodArgumentN
         e.getBindingResult().getFieldErrors().forEach(x -> errorMsg.append(x.getField()).append(x.getDefaultMessage()).append(","));
         String message = errorMsg.toString();
         log.info("validation parameters error！The reason is:{}", message);
-        return ApiResult.fail(-1, message.substring(0, message.length() - 1));
+        return ApiResult.fail(CommonErrorEnum.PARAM_VALID.getErrorCode(), message.substring(0, message.length() - 1));
     }
 
     /**
@@ -34,7 +34,7 @@ public ApiResult bindException(BindException e) {
         e.getBindingResult().getFieldErrors().forEach(x -> errorMsg.append(x.getField()).append(x.getDefaultMessage()).append(","));
         String message = errorMsg.toString();
         log.info("validation parameters error！The reason is:{}", message);
-        return ApiResult.fail(-1, message.substring(0, message.length() - 1));
+        return ApiResult.fail(CommonErrorEnum.PARAM_VALID.getErrorCode(), message.substring(0, message.length() - 1));
     }
 
     /**

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/domain/vo/request/msg/TextMsgReq.java
Patch:
@@ -5,6 +5,7 @@
 import lombok.Builder;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Size;
 import java.util.List;
@@ -21,13 +22,14 @@
 public class TextMsgReq {
 
     @NotBlank(message = "内容不能为空")
-    @Size(max = 5,message = "消息内容过长，服务器扛不住啊，兄dei")
+    @Size(max = 1024, message = "消息内容过长，服务器扛不住啊，兄dei")
     @ApiModelProperty("消息内容")
     private String content;
 
     @ApiModelProperty("回复的消息id,如果没有别传就好")
     private Long replyMsgId;
 
     @ApiModelProperty("艾特的uid")
+    @Size(max = 10, message = "一次别艾特这么多人")
     private List<Long> atUidList;
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/msg/TextMsgHandler.java
Patch:
@@ -65,7 +65,6 @@ public void checkMsg(ChatMessageReq request, Long uid) {
             AssertUtil.equal(replyMsg.getRoomId(), request.getRoomId(), "只能回复相同会话内的消息");
         }
         if (CollectionUtil.isNotEmpty(body.getAtUidList())) {
-            AssertUtil.isTrue(body.getAtUidList().size() < 10, "一次别艾特这么多人");
             List<Long> atUidList = body.getAtUidList();
             Map<Long, User> batch = userInfoCache.getBatch(atUidList);
             AssertUtil.equal(atUidList.size(), batch.values().size(), "@用户不存在");

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/msg/SoundMsgHandler.java
Patch:
@@ -44,7 +44,7 @@ public void saveMsg(Message msg, ChatMessageReq request) {
 
     @Override
     public Object showMsg(Message msg) {
-        return msg.getExtra().getFileMsg();
+        return msg.getExtra().getSoundMsgDTO();
     }
 
     @Override

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/msg/TextMsgHandler.java
Patch:
@@ -66,7 +66,7 @@ public void checkMsg(ChatMessageReq request, Long uid) {
             AssertUtil.equal(replyMsg.getRoomId(), request.getRoomId(), "只能回复相同会话内的消息");
         }
         if (CollectionUtil.isNotEmpty(body.getAtUidList())) {
-            AssertUtil.isTrue(body.getAtUidList().size() > 10, "一次别艾特这么多人");
+            AssertUtil.isTrue(body.getAtUidList().size() < 10, "一次别艾特这么多人");
             List<Long> atUidList = body.getAtUidList();
             Map<Long, User> batch = userInfoCache.getBatch(atUidList);
             AssertUtil.equal(atUidList.size(), batch.values().size(), "@用户不存在");

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/controller/ChatController.java
Patch:
@@ -124,7 +124,6 @@ public ApiResult<CursorPageBaseResp<ChatMessageResp>> getMsgPage1(@Valid ChatMes
     private void filterBlackMsg(CursorPageBaseResp<ChatMessageResp> memberPage) {
         Set<String> blackMembers = getBlackUidSet();
         memberPage.getList().removeIf(a -> blackMembers.contains(a.getFromUser().getUid().toString()));
-        System.out.println(1);
     }
 
     @PostMapping("/msg")

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/service/cache/AbstractRedisStringCache.java
Patch:
@@ -35,6 +35,7 @@ public OUT get(IN req) {
 
     @Override
     public Map<IN, OUT> getBatch(List<IN> req) {
+        req = req.stream().distinct().collect(Collectors.toList());
         List<String> keys = req.stream().map(this::getKey).collect(Collectors.toList());
         List<OUT> valueList = RedisUtils.mget(keys, outClass);
         List<IN> loadReqs = new ArrayList<>();

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/UserServiceImpl.java
Patch:
@@ -146,6 +146,7 @@ public List<SummeryInfoDTO> getSummeryUserInfo(SummeryInfoReq req) {
         return req.getReqList()
                 .stream()
                 .map(a -> batch.containsKey(a.getUid()) ? batch.get(a.getUid()) : SummeryInfoDTO.skip(a.getUid()))
+                .filter(Objects::nonNull)
                 .collect(Collectors.toList());
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/WebSocketServiceImpl.java
Patch:
@@ -90,7 +90,6 @@ public static ConcurrentHashMap<Channel, WSChannelExtraDTO> getOnlineMap() {
      */
     @SneakyThrows
     @Override
-    @FrequencyControl(time = 10, count = 2, spEl = "T(com.abin.mallchat.common.common.utils.RequestHolder).get().getIp()")
     @FrequencyControl(time = 100, count = 5, spEl = "T(com.abin.mallchat.common.common.utils.RequestHolder).get().getIp()")
     public void handleLoginReq(Channel channel) {
         //生成随机不重复的登录码

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -96,7 +96,6 @@ protected void initChannel(SocketChannel socketChannel) throws Exception {
                 });
         // 启动服务器，监听端口，阻塞直到启动成功
         serverBootstrap.bind(WEB_SOCKET_PORT).sync();
-        System.out.println("启动成功");
     }
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/algorithm/ac/ACTrie.java
Patch:
@@ -77,7 +77,7 @@ public List<MatchResult> matches(String text) {
             while (!walkNode.hasChild(c) && walkNode.getFailover() != null) {
                 walkNode = walkNode.getFailover();
             }
-            //如果因为当前节点的孩子节点有这个字符，则将temp替换为下面的孩子节点
+            //如果因为当前节点的孩子节点有这个字符，则将walkNode替换为下面的孩子节点
             if (walkNode.hasChild(c)) {
                 walkNode = walkNode.childOf(c);
                 // 检索到了敏感词

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/domain/entity/MessageMark.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.*;
 
 import java.io.Serializable;
-import java.time.LocalDateTime;
+import java.util.Date;
 
 /**
  * <p>
@@ -63,13 +63,13 @@ public class MessageMark implements Serializable {
      * 创建时间
      */
     @TableField("create_time")
-    private LocalDateTime createTime;
+    private Date createTime;
 
     /**
      * 修改时间
      */
     @TableField("update_time")
-    private LocalDateTime updateTime;
+    private Date updateTime;
 
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/domain/entity/msg/MessageExtra.java
Patch:
@@ -7,6 +7,7 @@
 import lombok.NoArgsConstructor;
 
 import java.io.Serializable;
+import java.util.List;
 import java.util.Map;
 
 /**
@@ -25,4 +26,6 @@ public class MessageExtra implements Serializable {
     private Map<String, String> urlTitleMap;
     //消息撤回详情
     private MsgRecall recall;
+    //艾特的uid
+    private List<Long> atUidList;
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/event/MessageMarkEvent.java
Patch:
@@ -6,10 +6,12 @@
 
 @Getter
 public class MessageMarkEvent extends ApplicationEvent {
-    private ChatMessageMarkDTO dto;
+
+    private final ChatMessageMarkDTO dto;
 
     public MessageMarkEvent(Object source, ChatMessageMarkDTO dto) {
         super(source);
         this.dto = dto;
     }
+
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/event/MessageRecallEvent.java
Patch:
@@ -6,10 +6,12 @@
 
 @Getter
 public class MessageRecallEvent extends ApplicationEvent {
-    private ChatMsgRecallDTO recallDTO;
+
+    private final ChatMsgRecallDTO recallDTO;
 
     public MessageRecallEvent(Object source, ChatMsgRecallDTO recallDTO) {
         super(source);
         this.recallDTO = recallDTO;
     }
+
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/CursorUtils.java
Patch:
@@ -44,7 +44,7 @@ public <T> CursorPageBaseResp<Pair<T, Double>> getCursorPageByRedis(CursorPageBa
                 .map(String::valueOf)
                 .orElse(null);
         Boolean isLast = result.size() != cursorPageBaseReq.getPageSize();
-        return new CursorPageBaseResp(cursor, isLast, result);
+        return new CursorPageBaseResp<>(cursor, isLast, result);
     }
 
     public <T> CursorPageBaseResp<T> getCursorPageByMysql(IService<T> mapper, CursorPageBaseReq request, Consumer<LambdaQueryWrapper<T>> initWrapper, SFunction<T, ?> cursorColumn) {
@@ -60,7 +60,7 @@ public <T> CursorPageBaseResp<T> getCursorPageByMysql(IService<T> mapper, Cursor
                 .map(String::valueOf)
                 .orElse(null);
         Boolean isLast = page.getRecords().size() != request.getPageSize();
-        return new CursorPageBaseResp(cursor, isLast, page.getRecords());
+        return new CursorPageBaseResp<>(cursor, isLast, page.getRecords());
     }
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/SpElUtils.java
Patch:
@@ -8,6 +8,7 @@
 import org.springframework.expression.spel.support.StandardEvaluationContext;
 
 import java.lang.reflect.Method;
+import java.util.Optional;
 
 /**
  * Description: spring el表达式解析
@@ -19,7 +20,7 @@ public class SpElUtils {
     private static final DefaultParameterNameDiscoverer parameterNameDiscoverer = new DefaultParameterNameDiscoverer();
 
     public static String parseSpEl(Method method, Object[] args, String spEl) {
-        String[] params = parameterNameDiscoverer.getParameterNames(method);//解析参数名
+        String[] params = Optional.ofNullable(parameterNameDiscoverer.getParameterNames(method)).orElse(new String[]{});//解析参数名
         EvaluationContext context = new StandardEvaluationContext();//el解析需要的上下文对象
         for (int i = 0; i < params.length; i++) {
             context.setVariable(params[i], args[i]);//所有参数都作为原材料扔进去

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/discover/AbstractUrlTitleDiscover.java
Patch:
@@ -66,7 +66,7 @@ private String assemble(String url) {
     protected Document getUrlDocument(String matchUrl) {
         try {
             Connection connect = Jsoup.connect(matchUrl);
-            connect.timeout(1000);
+            connect.timeout(2000);
             return connect.get();
         } catch (Exception e) {
             log.error("find title error:url:{}", matchUrl, e);

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/Black.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.EqualsAndHashCode;
 
 import java.io.Serializable;
-import java.time.LocalDateTime;
+import java.util.Date;
 
 /**
  * <p>
@@ -49,13 +49,13 @@ public class Black implements Serializable {
      * 创建时间
      */
     @TableField("create_time")
-    private LocalDateTime createTime;
+    private Date createTime;
 
     /**
      * 修改时间
      */
     @TableField("update_time")
-    private LocalDateTime updateTime;
+    private Date updateTime;
 
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/ItemConfig.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.EqualsAndHashCode;
 
 import java.io.Serializable;
-import java.time.LocalDateTime;
+import java.util.Date;
 
 /**
  * <p>
@@ -52,13 +52,13 @@ public class ItemConfig implements Serializable {
      * 创建时间
      */
     @TableField("create_time")
-    private LocalDateTime createTime;
+    private Date createTime;
 
     /**
      * 修改时间
      */
     @TableField("update_time")
-    private LocalDateTime updateTime;
+    private Date updateTime;
 
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/Role.java
Patch:
@@ -8,7 +8,7 @@
 import lombok.EqualsAndHashCode;
 
 import java.io.Serializable;
-import java.time.LocalDateTime;
+import java.util.Date;
 
 /**
  * <p>
@@ -41,13 +41,13 @@ public class Role implements Serializable {
      * 创建时间
      */
     @TableField("create_time")
-    private LocalDateTime createTime;
+    private Date createTime;
 
     /**
      * 修改时间
      */
     @TableField("update_time")
-    private LocalDateTime updateTime;
+    private Date updateTime;
 
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/UserBackpack.java
Patch:
@@ -7,7 +7,7 @@
 import lombok.*;
 
 import java.io.Serializable;
-import java.time.LocalDateTime;
+import java.util.Date;
 
 /**
  * <p>
@@ -61,13 +61,13 @@ public class UserBackpack implements Serializable {
      * 创建时间
      */
     @TableField("create_time")
-    private LocalDateTime createTime;
+    private Date createTime;
 
     /**
      * 修改时间
      */
     @TableField("update_time")
-    private LocalDateTime updateTime;
+    private Date updateTime;
 
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/ItemEnum.java
Patch:
@@ -33,7 +33,7 @@ public enum ItemEnum {
         cache = Arrays.stream(ItemEnum.values()).collect(Collectors.toMap(ItemEnum::getId, Function.identity()));
     }
 
-    public static ItemEnum of(Integer type) {
+    public static ItemEnum of(Long type) {
         return cache.get(type);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/RoleEnum.java
Patch:
@@ -29,7 +29,7 @@ public enum RoleEnum {
         cache = Arrays.stream(RoleEnum.values()).collect(Collectors.toMap(RoleEnum::getId, Function.identity()));
     }
 
-    public static RoleEnum of(Integer type) {
+    public static RoleEnum of(Long type) {
         return cache.get(type);
     }
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/domain/vo/response/msg/TextMsgResp.java
Patch:
@@ -6,6 +6,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
+import java.util.List;
 import java.util.Map;
 
 /**
@@ -22,6 +23,8 @@ public class TextMsgResp {
     private String content;
     @ApiModelProperty("消息链接映射")
     private Map<String, String> urlTitleMap;
+    @ApiModelProperty("艾特的uid")
+    private List<Long> atUidList;
     @ApiModelProperty("父消息，如果没有父消息，返回的是null")
     private TextMsgResp.ReplyMsg reply;
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/msg/AbstractMsgHandler.java
Patch:
@@ -20,7 +20,7 @@ private void init() {
 
     abstract MessageTypeEnum getMsgTypeEnum();
 
-    public abstract void checkMsg(ChatMessageReq req);
+    public abstract void checkMsg(ChatMessageReq req, Long uid);
 
     public abstract void saveMsg(Message msg, ChatMessageReq req);
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/msg/RecallMsgHandler.java
Patch:
@@ -40,7 +40,7 @@ MessageTypeEnum getMsgTypeEnum() {
     }
 
     @Override
-    public void checkMsg(ChatMessageReq request) {
+    public void checkMsg(ChatMessageReq request, Long uid) {
         throw new UnsupportedOperationException();
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/event/listener/ItemReceiveListener.java
Patch:
@@ -45,7 +45,7 @@ public void wear(ItemReceiveEvent event) {
             User user = userDao.getById(userBackpack.getUid());
             if (Objects.isNull(user.getItemId())) {
                 userDao.wearingBadge(userBackpack.getUid(), userBackpack.getItemId());
-                userCache.delUserInfo(userBackpack.getUid());
+                userCache.userInfoChange(userBackpack.getUid());
             }
         }
     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyUtil.java
Patch:
@@ -13,6 +13,7 @@
 public class NettyUtil {
 
     public static AttributeKey<String> IP = AttributeKey.valueOf("ip");
+    public static AttributeKey<Long> UID = AttributeKey.valueOf("uid");
 
     public static <T> void setAttr(Channel channel, AttributeKey<T> attributeKey, T data) {
         Attribute<T> attr = channel.attr(attributeKey);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -79,6 +79,7 @@ protected void initChannel(SocketChannel socketChannel) throws Exception {
                         pipeline.addLast(new HttpObjectAggregator(8192));
                         //保存用户ip
                         pipeline.addLast(new HttpHeadersHandler());
+                        pipeline.addLast(new NettyCollectorHandler());
                         /**
                          * 说明：
                          *  1. 对于 WebSocket，它的数据是以帧frame 的形式传递的；

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/event/MessageMarkEvent.java
Patch:
@@ -6,10 +6,12 @@
 
 @Getter
 public class MessageMarkEvent extends ApplicationEvent {
-    private ChatMessageMarkDTO dto;
+
+    private final ChatMessageMarkDTO dto;
 
     public MessageMarkEvent(Object source, ChatMessageMarkDTO dto) {
         super(source);
         this.dto = dto;
     }
+
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/event/MessageRecallEvent.java
Patch:
@@ -6,10 +6,12 @@
 
 @Getter
 public class MessageRecallEvent extends ApplicationEvent {
-    private ChatMsgRecallDTO recallDTO;
+
+    private final ChatMsgRecallDTO recallDTO;
 
     public MessageRecallEvent(Object source, ChatMsgRecallDTO recallDTO) {
         super(source);
         this.recallDTO = recallDTO;
     }
+
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/service/cache/AbstractRedisStringCache.java
Patch:
@@ -17,7 +17,7 @@ public abstract class AbstractRedisStringCache<IN, OUT> implements BatchCache<IN
 
     private Class<OUT> outClass;
 
-    public AbstractRedisStringCache() {
+    protected AbstractRedisStringCache() {
         ParameterizedType genericSuperclass = (ParameterizedType) this.getClass().getGenericSuperclass();
         this.outClass = (Class<OUT>) genericSuperclass.getActualTypeArguments()[1];
     }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/SpElUtils.java
Patch:
@@ -8,6 +8,7 @@
 import org.springframework.expression.spel.support.StandardEvaluationContext;
 
 import java.lang.reflect.Method;
+import java.util.Optional;
 
 /**
  * Description: spring el表达式解析
@@ -19,7 +20,7 @@ public class SpElUtils {
     private static final DefaultParameterNameDiscoverer parameterNameDiscoverer = new DefaultParameterNameDiscoverer();
 
     public static String parseSpEl(Method method, Object[] args, String spEl) {
-        String[] params = parameterNameDiscoverer.getParameterNames(method);//解析参数名
+        String[] params = Optional.ofNullable(parameterNameDiscoverer.getParameterNames(method)).orElse(new String[]{});//解析参数名
         EvaluationContext context = new StandardEvaluationContext();//el解析需要的上下文对象
         for (int i = 0; i < params.length; i++) {
             context.setVariable(params[i], args[i]);//所有参数都作为原材料扔进去

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/ItemEnum.java
Patch:
@@ -33,7 +33,7 @@ public enum ItemEnum {
         cache = Arrays.stream(ItemEnum.values()).collect(Collectors.toMap(ItemEnum::getId, Function.identity()));
     }
 
-    public static ItemEnum of(Integer type) {
+    public static ItemEnum of(Long type) {
         return cache.get(type);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/RoleEnum.java
Patch:
@@ -29,7 +29,7 @@ public enum RoleEnum {
         cache = Arrays.stream(RoleEnum.values()).collect(Collectors.toMap(RoleEnum::getId, Function.identity()));
     }
 
-    public static RoleEnum of(Integer type) {
+    public static RoleEnum of(Long type) {
         return cache.get(type);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/event/MessageMarkEvent.java
Patch:
@@ -6,10 +6,12 @@
 
 @Getter
 public class MessageMarkEvent extends ApplicationEvent {
-    private ChatMessageMarkDTO dto;
+
+    private final ChatMessageMarkDTO dto;
 
     public MessageMarkEvent(Object source, ChatMessageMarkDTO dto) {
         super(source);
         this.dto = dto;
     }
+
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/event/MessageRecallEvent.java
Patch:
@@ -6,10 +6,12 @@
 
 @Getter
 public class MessageRecallEvent extends ApplicationEvent {
-    private ChatMsgRecallDTO recallDTO;
+
+    private final ChatMsgRecallDTO recallDTO;
 
     public MessageRecallEvent(Object source, ChatMsgRecallDTO recallDTO) {
         super(source);
         this.recallDTO = recallDTO;
     }
+
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/service/cache/AbstractRedisStringCache.java
Patch:
@@ -17,7 +17,7 @@ public abstract class AbstractRedisStringCache<IN, OUT> implements BatchCache<IN
 
     private Class<OUT> outClass;
 
-    public AbstractRedisStringCache() {
+    protected AbstractRedisStringCache() {
         ParameterizedType genericSuperclass = (ParameterizedType) this.getClass().getGenericSuperclass();
         this.outClass = (Class<OUT>) genericSuperclass.getActualTypeArguments()[1];
     }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/SpElUtils.java
Patch:
@@ -8,6 +8,7 @@
 import org.springframework.expression.spel.support.StandardEvaluationContext;
 
 import java.lang.reflect.Method;
+import java.util.Optional;
 
 /**
  * Description: spring el表达式解析
@@ -19,7 +20,7 @@ public class SpElUtils {
     private static final DefaultParameterNameDiscoverer parameterNameDiscoverer = new DefaultParameterNameDiscoverer();
 
     public static String parseSpEl(Method method, Object[] args, String spEl) {
-        String[] params = parameterNameDiscoverer.getParameterNames(method);//解析参数名
+        String[] params = Optional.ofNullable(parameterNameDiscoverer.getParameterNames(method)).orElse(new String[]{});//解析参数名
         EvaluationContext context = new StandardEvaluationContext();//el解析需要的上下文对象
         for (int i = 0; i < params.length; i++) {
             context.setVariable(params[i], args[i]);//所有参数都作为原材料扔进去

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/ItemEnum.java
Patch:
@@ -33,7 +33,7 @@ public enum ItemEnum {
         cache = Arrays.stream(ItemEnum.values()).collect(Collectors.toMap(ItemEnum::getId, Function.identity()));
     }
 
-    public static ItemEnum of(Integer type) {
+    public static ItemEnum of(Long type) {
         return cache.get(type);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/RoleEnum.java
Patch:
@@ -29,7 +29,7 @@ public enum RoleEnum {
         cache = Arrays.stream(RoleEnum.values()).collect(Collectors.toMap(RoleEnum::getId, Function.identity()));
     }
 
-    public static RoleEnum of(Integer type) {
+    public static RoleEnum of(Long type) {
         return cache.get(type);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/CursorUtils.java
Patch:
@@ -44,7 +44,7 @@ public <T> CursorPageBaseResp<Pair<T, Double>> getCursorPageByRedis(CursorPageBa
                 .map(String::valueOf)
                 .orElse(null);
         Boolean isLast = result.size() != cursorPageBaseReq.getPageSize();
-        return new CursorPageBaseResp(cursor, isLast, result);
+        return new CursorPageBaseResp<>(cursor, isLast, result);
     }
 
     public <T> CursorPageBaseResp<T> getCursorPageByMysql(IService<T> mapper, CursorPageBaseReq request, Consumer<LambdaQueryWrapper<T>> initWrapper, SFunction<T, ?> cursorColumn) {
@@ -60,7 +60,7 @@ public <T> CursorPageBaseResp<T> getCursorPageByMysql(IService<T> mapper, Cursor
                 .map(String::valueOf)
                 .orElse(null);
         Boolean isLast = page.getRecords().size() != request.getPageSize();
-        return new CursorPageBaseResp(cursor, isLast, page.getRecords());
+        return new CursorPageBaseResp<>(cursor, isLast, page.getRecords());
     }
 
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServerHandler.java
Patch:
@@ -93,6 +93,7 @@ protected void channelRead0(ChannelHandlerContext ctx, TextWebSocketFrame msg) t
             case AUTHORIZE:
                 getService().authorize(ctx.channel(), JSONUtil.toBean(wsBaseReq.getData(), WSAuthorize.class));
                 log.info("主动认证 = " + msg.text());
+                break;
             default:
                 log.info("未知类型");
         }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServerHandler.java
Patch:
@@ -93,6 +93,7 @@ protected void channelRead0(ChannelHandlerContext ctx, TextWebSocketFrame msg) t
             case AUTHORIZE:
                 getService().authorize(ctx.channel(), JSONUtil.toBean(wsBaseReq.getData(), WSAuthorize.class));
                 log.info("主动认证 = " + msg.text());
+                break;
             default:
                 log.info("未知类型");
         }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/RedisUtils.java
Patch:
@@ -25,7 +25,7 @@ public class RedisUtils {
 
     @PostConstruct
     public void init() {
-        this.stringRedisTemplate = SpringUtil.getBean(StringRedisTemplate.class);
+        RedisUtils.stringRedisTemplate = SpringUtil.getBean(StringRedisTemplate.class);
     }
 
     private static final String LUA_INCR_EXPIRE =

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/CursorUtils.java
Patch:
@@ -44,7 +44,7 @@ public <T> CursorPageBaseResp<Pair<T, Double>> getCursorPageByRedis(CursorPageBa
                 .map(String::valueOf)
                 .orElse(null);
         Boolean isLast = result.size() != cursorPageBaseReq.getPageSize();
-        return new CursorPageBaseResp(cursor, isLast, result);
+        return new CursorPageBaseResp<>(cursor, isLast, result);
     }
 
     public <T> CursorPageBaseResp<T> getCursorPageByMysql(IService<T> mapper, CursorPageBaseReq request, Consumer<LambdaQueryWrapper<T>> initWrapper, SFunction<T, ?> cursorColumn) {
@@ -60,7 +60,7 @@ public <T> CursorPageBaseResp<T> getCursorPageByMysql(IService<T> mapper, Cursor
                 .map(String::valueOf)
                 .orElse(null);
         Boolean isLast = page.getRecords().size() != request.getPageSize();
-        return new CursorPageBaseResp(cursor, isLast, page.getRecords());
+        return new CursorPageBaseResp<>(cursor, isLast, page.getRecords());
     }
 
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/CursorPageBaseReq.java
Patch:
@@ -10,6 +10,7 @@
 import org.apache.commons.lang3.StringUtils;
 
 import javax.validation.constraints.Max;
+import javax.validation.constraints.Min;
 
 /**
  * @author <a href="https://github.com/zongzibinbin">abin</a>
@@ -22,6 +23,7 @@
 public class CursorPageBaseReq {
 
     @ApiModelProperty("页面大小")
+    @Min(0)
     @Max(50)
     private Integer pageSize = 10;
 

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/PageBaseReq.java
Patch:
@@ -6,6 +6,7 @@
 import lombok.Data;
 
 import javax.validation.constraints.Max;
+import javax.validation.constraints.Min;
 
 /**
  * @author <a href="https://github.com/zongzibinbin">abin</a>
@@ -16,6 +17,7 @@
 public class PageBaseReq {
 
     @ApiModelProperty("页面大小")
+    @Min(0)
     @Max(50)
     private Integer pageSize = 10;
 

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/enums/ItemEnum.java
Patch:
@@ -20,6 +20,7 @@ public enum ItemEnum {
     LIKE_BADGE(2L, ItemTypeEnum.BADGE, "爆赞徽章"),
     REG_TOP10_BADGE(3L, ItemTypeEnum.BADGE, "前十注册徽章"),
     REG_TOP100_BADGE(4L, ItemTypeEnum.BADGE, "前100注册徽章"),
+    PLANET(5L, ItemTypeEnum.BADGE, "知识星球"),
     ;
 
     private final Long id;

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/controller/ChatController.java
Patch:
@@ -44,13 +44,13 @@ public class ChatController {
 
     @GetMapping("/public/room/page")
     @ApiOperation("会话列表")
-    public ApiResult<CursorPageBaseResp<ChatRoomResp>> getRoomPage(CursorPageBaseReq request) {
+    public ApiResult<CursorPageBaseResp<ChatRoomResp>> getRoomPage(@Valid CursorPageBaseReq request) {
         return ApiResult.success(chatService.getRoomPage(request, RequestHolder.get().getUid()));
     }
 
     @GetMapping("/public/member/page")
     @ApiOperation("群成员列表")
-    public ApiResult<CursorPageBaseResp<ChatMemberResp>> getMemberPage(CursorPageBaseReq request) {
+    public ApiResult<CursorPageBaseResp<ChatMemberResp>> getMemberPage(@Valid CursorPageBaseReq request) {
         CursorPageBaseResp<ChatMemberResp> memberPage = chatService.getMemberPage(request);
         filterBlackMember(memberPage);
         return ApiResult.success(memberPage);
@@ -72,7 +72,7 @@ public ApiResult<ChatMemberStatisticResp> getMemberStatistic() {
 
     @GetMapping("/public/msg/page")
     @ApiOperation("消息列表")
-    public ApiResult<CursorPageBaseResp<ChatMessageResp>> getMsgPage(ChatMessagePageReq request) {
+    public ApiResult<CursorPageBaseResp<ChatMessageResp>> getMsgPage(@Valid ChatMessagePageReq request) {
         CursorPageBaseResp<ChatMessageResp> msgPage = chatService.getMsgPage(request, RequestHolder.get().getUid());
         filterBlackMsg(msgPage);
         return ApiResult.success(msgPage);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/mark/DisLikeStrategy.java
Patch:
@@ -22,7 +22,7 @@ protected MessageMarkTypeEnum getTypeEnum() {
     }
 
     @Override
-    public void mark(Long uid, Long msgId) {
+    public void doMark(Long uid, Long msgId) {
         super.mark(uid, msgId);
         //同时取消点赞的动作
         MsgMarkFactory.getStrategyNoNull(MessageMarkTypeEnum.LIKE.getType()).unMark(uid, msgId);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/strategy/mark/LikeStrategy.java
Patch:
@@ -17,7 +17,7 @@ protected MessageMarkTypeEnum getTypeEnum() {
     }
 
     @Override
-    public void mark(Long uid, Long msgId) {
+    public void doMark(Long uid, Long msgId) {
         super.mark(uid, msgId);
         //同时取消点踩的动作
         MsgMarkFactory.getStrategyNoNull(MessageMarkTypeEnum.DISLIKE.getType()).unMark(uid, msgId);

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -14,6 +14,7 @@
 import io.netty.handler.logging.LogLevel;
 import io.netty.handler.logging.LoggingHandler;
 import io.netty.handler.stream.ChunkedWriteHandler;
+import io.netty.handler.timeout.IdleStateHandler;
 import io.netty.util.concurrent.Future;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.context.annotation.Configuration;
@@ -65,7 +66,7 @@ public void run() throws InterruptedException {
                     protected void initChannel(SocketChannel socketChannel) throws Exception {
                         ChannelPipeline pipeline = socketChannel.pipeline();
                         //30秒客户端没有向服务器发送心跳则关闭连接
-//                        pipeline.addLast(new IdleStateHandler(30, 0, 0));
+                        pipeline.addLast(new IdleStateHandler(30, 0, 0));
                         // 因为使用http协议，所以需要使用http的编码器，解码器
                         pipeline.addLast(new HttpServerCodec());
                         // 以块方式写，添加 chunkedWriter 处理器

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/IpInfo.java
Patch:
@@ -1,6 +1,7 @@
 package com.abin.mallchat.common.user.domain.entity;
 
 import lombok.Data;
+import org.apache.commons.lang3.StringUtils;
 
 import java.io.Serializable;
 import java.util.Objects;
@@ -28,7 +29,7 @@ public class IpInfo implements Serializable {
     private IpDetail updateIpDetail;
 
     public void refreshIp(String ip) {
-        if (Objects.isNull(ip)) {
+        if (StringUtils.isEmpty(ip)) {
             return;
         }
         updateIp = ip;
@@ -45,7 +46,7 @@ public void refreshIp(String ip) {
     public String needRefreshIp() {
         boolean notNeedRefresh = Optional.ofNullable(updateIpDetail)
                 .map(IpDetail::getIp)
-                .filter(ip -> ip.equals(updateIp))
+                .filter(ip -> Objects.equals(ip, updateIp))
                 .isPresent();
         return notNeedRefresh ? null : updateIp;
     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/adapter/MessageAdapter.java
Patch:
@@ -85,9 +85,9 @@ private static ChatMessageResp.MessageMark buildMsgMark(List<MessageMark> marks,
         List<MessageMark> dislikeMarks = typeMap.getOrDefault(MessageMarkTypeEnum.DISLIKE.getType(), new ArrayList<>());
         ChatMessageResp.MessageMark mark = new ChatMessageResp.MessageMark();
         mark.setLikeCount(likeMarks.size());
-        mark.setUserLike(Optional.ofNullable(receiveUid).filter(uid -> likeMarks.stream().anyMatch(a -> a.getUid().equals(uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
+        mark.setUserLike(Optional.ofNullable(receiveUid).filter(uid -> likeMarks.stream().anyMatch(a -> Objects.equals(a.getUid(), uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
         mark.setDislikeCount(dislikeMarks.size());
-        mark.setUserDislike(Optional.ofNullable(receiveUid).filter(uid -> dislikeMarks.stream().anyMatch(a -> a.getUid().equals(uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
+        mark.setUserDislike(Optional.ofNullable(receiveUid).filter(uid -> dislikeMarks.stream().anyMatch(a -> Objects.equals(a.getUid(), uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
         return mark;
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/config/SwaggerConfig.java
Patch:
@@ -24,6 +24,7 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
+import java.util.Objects;
 
 /**
  * Description:
@@ -72,7 +73,7 @@ public WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping(WebEndpoint
     }
 
     private boolean shouldRegisterLinksMapping(WebEndpointProperties webEndpointProperties, Environment environment, String basePath) {
-        return webEndpointProperties.getDiscovery().isEnabled() && (StringUtils.hasText(basePath) || ManagementPortType.get(environment).equals(ManagementPortType.DIFFERENT));
+        return webEndpointProperties.getDiscovery().isEnabled() && (StringUtils.hasText(basePath) || Objects.equals(ManagementPortType.get(environment), ManagementPortType.DIFFERENT));
     }
 
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/intecepter/BlackInterceptor.java
Patch:
@@ -1,5 +1,6 @@
 package com.abin.mallchat.custom.common.intecepter;
 
+import cn.hutool.core.collection.CollectionUtil;
 import com.abin.mallchat.common.common.domain.dto.RequestInfo;
 import com.abin.mallchat.common.common.exception.HttpErrorEnum;
 import com.abin.mallchat.common.common.utils.RequestHolder;
@@ -44,7 +45,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
     }
 
     private boolean inBlackList(Object target, Set<String> blackSet) {
-        if (Objects.isNull(target) || Objects.isNull(blackSet)) {
+        if (Objects.isNull(target) || CollectionUtil.isEmpty(blackSet)) {
             return false;
         }
         return blackSet.contains(target.toString());

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/LoginServiceImpl.java
Patch:
@@ -44,7 +44,7 @@ public boolean verify(String token) {
         }
         String key = RedisKey.getKey(RedisKey.USER_TOKEN_STRING, uid);
         String realToken = RedisUtils.getStr(key);
-        return token.equals(realToken);//有可能token失效了，需要校验是不是和最新token一致
+        return Objects.equals(token, realToken);//有可能token失效了，需要校验是不是和最新token一致
     }
 
     @Async

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/WebSocketServiceImpl.java
Patch:
@@ -180,7 +180,7 @@ private boolean offline(Channel channel, Optional<Long> uidOptional) {
         if (uidOptional.isPresent()) {
             CopyOnWriteArrayList<Channel> channels = ONLINE_UID_MAP.get(uidOptional.get());
             if (CollectionUtil.isNotEmpty(channels)) {
-                channels.removeIf(channel1 -> channel1.equals(channel));
+                channels.removeIf(ch -> Objects.equals(ch, channel));
             }
             return CollectionUtil.isEmpty(ONLINE_UID_MAP.get(uidOptional.get()));
         }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/IpInfo.java
Patch:
@@ -1,6 +1,7 @@
 package com.abin.mallchat.common.user.domain.entity;
 
 import lombok.Data;
+import org.apache.commons.lang3.StringUtils;
 
 import java.io.Serializable;
 import java.util.Objects;
@@ -28,7 +29,7 @@ public class IpInfo implements Serializable {
     private IpDetail updateIpDetail;
 
     public void refreshIp(String ip) {
-        if (Objects.isNull(ip)) {
+        if (StringUtils.isEmpty(ip)) {
             return;
         }
         updateIp = ip;
@@ -45,7 +46,7 @@ public void refreshIp(String ip) {
     public String needRefreshIp() {
         boolean notNeedRefresh = Optional.ofNullable(updateIpDetail)
                 .map(IpDetail::getIp)
-                .filter(ip -> ip.equals(updateIp))
+                .filter(ip -> Objects.equals(ip, updateIp))
                 .isPresent();
         return notNeedRefresh ? null : updateIp;
     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/adapter/MessageAdapter.java
Patch:
@@ -85,9 +85,9 @@ private static ChatMessageResp.MessageMark buildMsgMark(List<MessageMark> marks,
         List<MessageMark> dislikeMarks = typeMap.getOrDefault(MessageMarkTypeEnum.DISLIKE.getType(), new ArrayList<>());
         ChatMessageResp.MessageMark mark = new ChatMessageResp.MessageMark();
         mark.setLikeCount(likeMarks.size());
-        mark.setUserLike(Optional.ofNullable(receiveUid).filter(uid -> likeMarks.stream().anyMatch(a -> a.getUid().equals(uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
+        mark.setUserLike(Optional.ofNullable(receiveUid).filter(uid -> likeMarks.stream().anyMatch(a -> Objects.equals(a.getUid(), uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
         mark.setDislikeCount(dislikeMarks.size());
-        mark.setUserDislike(Optional.ofNullable(receiveUid).filter(uid -> dislikeMarks.stream().anyMatch(a -> a.getUid().equals(uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
+        mark.setUserDislike(Optional.ofNullable(receiveUid).filter(uid -> dislikeMarks.stream().anyMatch(a -> Objects.equals(a.getUid(), uid))).map(a -> YesOrNoEnum.YES.getStatus()).orElse(YesOrNoEnum.NO.getStatus()));
         return mark;
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/config/SwaggerConfig.java
Patch:
@@ -24,6 +24,7 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.List;
+import java.util.Objects;
 
 /**
  * Description:
@@ -72,7 +73,7 @@ public WebMvcEndpointHandlerMapping webEndpointServletHandlerMapping(WebEndpoint
     }
 
     private boolean shouldRegisterLinksMapping(WebEndpointProperties webEndpointProperties, Environment environment, String basePath) {
-        return webEndpointProperties.getDiscovery().isEnabled() && (StringUtils.hasText(basePath) || ManagementPortType.get(environment).equals(ManagementPortType.DIFFERENT));
+        return webEndpointProperties.getDiscovery().isEnabled() && (StringUtils.hasText(basePath) || Objects.equals(ManagementPortType.get(environment), ManagementPortType.DIFFERENT));
     }
 
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/intecepter/BlackInterceptor.java
Patch:
@@ -1,5 +1,6 @@
 package com.abin.mallchat.custom.common.intecepter;
 
+import cn.hutool.core.collection.CollectionUtil;
 import com.abin.mallchat.common.common.domain.dto.RequestInfo;
 import com.abin.mallchat.common.common.exception.HttpErrorEnum;
 import com.abin.mallchat.common.common.utils.RequestHolder;
@@ -44,7 +45,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
     }
 
     private boolean inBlackList(Object target, Set<String> blackSet) {
-        if (Objects.isNull(target) || Objects.isNull(blackSet)) {
+        if (Objects.isNull(target) || CollectionUtil.isEmpty(blackSet)) {
             return false;
         }
         return blackSet.contains(target.toString());

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/LoginServiceImpl.java
Patch:
@@ -44,7 +44,7 @@ public boolean verify(String token) {
         }
         String key = RedisKey.getKey(RedisKey.USER_TOKEN_STRING, uid);
         String realToken = RedisUtils.getStr(key);
-        return token.equals(realToken);//有可能token失效了，需要校验是不是和最新token一致
+        return Objects.equals(token, realToken);//有可能token失效了，需要校验是不是和最新token一致
     }
 
     @Async

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/WebSocketServiceImpl.java
Patch:
@@ -180,7 +180,7 @@ private boolean offline(Channel channel, Optional<Long> uidOptional) {
         if (uidOptional.isPresent()) {
             CopyOnWriteArrayList<Channel> channels = ONLINE_UID_MAP.get(uidOptional.get());
             if (CollectionUtil.isNotEmpty(channels)) {
-                channels.removeIf(channel1 -> channel1.equals(channel));
+                channels.removeIf(ch -> Objects.equals(ch, channel));
             }
             return CollectionUtil.isEmpty(ONLINE_UID_MAP.get(uidOptional.get()));
         }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/service/impl/IpServiceImpl.java
Patch:
@@ -35,7 +35,7 @@ public class IpServiceImpl implements IpService, DisposableBean {
             0L, TimeUnit.MILLISECONDS,
             new LinkedBlockingQueue<Runnable>(500),
             new NamedThreadFactory("refresh-ipDetail", (ThreadGroup)null,false,
-                    new GlobalUncaughtExceptionHandler("refresh-ipDetail")));
+                    new GlobalUncaughtExceptionHandler()));
 
     @Autowired
     private UserDao userDao;

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/CursorPageBaseReq.java
Patch:
@@ -7,9 +7,9 @@
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+import org.apache.commons.lang3.StringUtils;
 
 import javax.validation.constraints.Max;
-import java.util.Objects;
 
 /**
  * @author <a href="https://github.com/zongzibinbin">abin</a>
@@ -34,6 +34,6 @@ public Page plusPage() {
 
     @JsonIgnore
     public Boolean isFirstPage() {
-        return Objects.isNull(cursor);
+        return StringUtils.isEmpty(cursor);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/JwtUtils.java
Patch:
@@ -6,12 +6,12 @@
 import com.auth0.jwt.interfaces.DecodedJWT;
 import com.auth0.jwt.interfaces.JWTVerifier;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Component;
 
 import java.util.Date;
 import java.util.Map;
-import java.util.Objects;
 import java.util.Optional;
 
 /**
@@ -59,7 +59,7 @@ public static void main(String[] args) {
      * @return
      */
     public Map<String, Claim> verifyToken(String token) {
-        if (Objects.isNull(token)) {
+        if (StringUtils.isEmpty(token)) {
             return null;
         }
         try {

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/discover/AbstractUrlTitleDiscover.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.util.StrUtil;
 import com.abin.mallchat.common.common.utils.FutureUtils;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.commons.lang3.StringUtils;
 import org.jsoup.Connection;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
@@ -38,7 +39,7 @@ public Map<String, String> getContentTitleMap(String content) {
         //并行请求
         List<CompletableFuture<Pair<String, String>>> futures = matchList.stream().map(match -> CompletableFuture.supplyAsync(() -> {
             String title = getUrlTitle(match);
-            return Objects.nonNull(title) ? Pair.of(match, title) : null;
+            return StringUtils.isNotEmpty(title) ? Pair.of(match, title) : null;
         })).collect(Collectors.toList());
         CompletableFuture<List<Pair<String, String>>> future = FutureUtils.sequenceNonNull(futures);
         //结果组装

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/WxMsgService.java
Patch:
@@ -10,6 +10,7 @@
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlOutMessage;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.context.annotation.Lazy;
@@ -53,7 +54,7 @@ public WxMpXmlOutMessage scan(WxMpService wxMpService, WxMpXmlMessage wxMpXmlMes
         String fromUser = wxMpXmlMessage.getFromUser();
         Integer eventKey = Integer.parseInt(getEventKey(wxMpXmlMessage));
         User user = userDao.getByOpenId(fromUser);
-        if (Objects.nonNull(user) && Objects.nonNull(user.getAvatar())) {
+        if (Objects.nonNull(user) && StringUtils.isNotEmpty(user.getAvatar())) {
             //注册且已经授权的用户，直接登录成功
             login(user.getId(), eventKey);
             return null;
@@ -84,7 +85,7 @@ private String getEventKey(WxMpXmlMessage wxMpXmlMessage) {
     public void authorize(WxOAuth2UserInfo userInfo) {
         User user = userDao.getByOpenId(userInfo.getOpenid());
         //更新用户信息
-        if (Objects.isNull(user.getName())) {
+        if (StringUtils.isEmpty(user.getName())) {
             fillUserInfo(user.getId(), userInfo);
         }
         //触发用户登录成功操作

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/HttpHeadersHandler.java
Patch:
@@ -5,9 +5,9 @@
 import io.netty.handler.codec.http.FullHttpRequest;
 import io.netty.handler.codec.http.HttpHeaders;
 import io.netty.util.AttributeKey;
+import org.apache.commons.lang3.StringUtils;
 
 import java.net.InetSocketAddress;
-import java.util.Objects;
 
 public class HttpHeadersHandler extends ChannelInboundHandlerAdapter {
     private AttributeKey<String> key = AttributeKey.valueOf("Id");
@@ -17,7 +17,7 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception
         if (msg instanceof FullHttpRequest) {
             HttpHeaders headers = ((FullHttpRequest) msg).headers();
             String ip = headers.get("X-Real-IP");
-            if (Objects.isNull(ip)) {//如果没经过nginx，就直接获取远端地址
+            if (StringUtils.isEmpty(ip)) {//如果没经过nginx，就直接获取远端地址
                 InetSocketAddress address = (InetSocketAddress) ctx.channel().remoteAddress();
                 ip = address.getAddress().getHostAddress();
             }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/service/impl/IpServiceImpl.java
Patch:
@@ -35,7 +35,7 @@ public class IpServiceImpl implements IpService, DisposableBean {
             0L, TimeUnit.MILLISECONDS,
             new LinkedBlockingQueue<Runnable>(500),
             new NamedThreadFactory("refresh-ipDetail", (ThreadGroup)null,false,
-                    new GlobalUncaughtExceptionHandler("refresh-ipDetail")));
+                    new GlobalUncaughtExceptionHandler()));
 
     @Autowired
     private UserDao userDao;

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/CursorPageBaseReq.java
Patch:
@@ -34,6 +34,6 @@ public Page plusPage() {
 
     @JsonIgnore
     public Boolean isFirstPage() {
-        return StringUtils.isNotEmpty(cursor);
+        return StringUtils.isEmpty(cursor);
     }
 }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/WxMsgService.java
Patch:
@@ -85,7 +85,7 @@ private String getEventKey(WxMpXmlMessage wxMpXmlMessage) {
     public void authorize(WxOAuth2UserInfo userInfo) {
         User user = userDao.getByOpenId(userInfo.getOpenid());
         //更新用户信息
-        if (StringUtils.isNotEmpty(user.getName())) {
+        if (StringUtils.isEmpty(user.getName())) {
             fillUserInfo(user.getId(), userInfo);
         }
         //触发用户登录成功操作

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/HttpHeadersHandler.java
Patch:
@@ -17,7 +17,7 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception
         if (msg instanceof FullHttpRequest) {
             HttpHeaders headers = ((FullHttpRequest) msg).headers();
             String ip = headers.get("X-Real-IP");
-            if (StringUtils.isNotEmpty(ip)) {//如果没经过nginx，就直接获取远端地址
+            if (StringUtils.isEmpty(ip)) {//如果没经过nginx，就直接获取远端地址
                 InetSocketAddress address = (InetSocketAddress) ctx.channel().remoteAddress();
                 ip = address.getAddress().getHostAddress();
             }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/CursorPageBaseReq.java
Patch:
@@ -7,9 +7,9 @@
 import lombok.AllArgsConstructor;
 import lombok.Data;
 import lombok.NoArgsConstructor;
+import org.apache.commons.lang3.StringUtils;
 
 import javax.validation.constraints.Max;
-import java.util.Objects;
 
 /**
  * @author <a href="https://github.com/zongzibinbin">abin</a>
@@ -34,6 +34,6 @@ public Page plusPage() {
 
     @JsonIgnore
     public Boolean isFirstPage() {
-        return Objects.isNull(cursor);
+        return StringUtils.isNotEmpty(cursor);
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/JwtUtils.java
Patch:
@@ -6,12 +6,12 @@
 import com.auth0.jwt.interfaces.DecodedJWT;
 import com.auth0.jwt.interfaces.JWTVerifier;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Component;
 
 import java.util.Date;
 import java.util.Map;
-import java.util.Objects;
 import java.util.Optional;
 
 /**
@@ -59,7 +59,7 @@ public static void main(String[] args) {
      * @return
      */
     public Map<String, Claim> verifyToken(String token) {
-        if (Objects.isNull(token)) {
+        if (StringUtils.isEmpty(token)) {
             return null;
         }
         try {

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/discover/AbstractUrlTitleDiscover.java
Patch:
@@ -4,6 +4,7 @@
 import cn.hutool.core.util.StrUtil;
 import com.abin.mallchat.common.common.utils.FutureUtils;
 import lombok.extern.slf4j.Slf4j;
+import org.apache.commons.lang3.StringUtils;
 import org.jsoup.Connection;
 import org.jsoup.Jsoup;
 import org.jsoup.nodes.Document;
@@ -38,7 +39,7 @@ public Map<String, String> getContentTitleMap(String content) {
         //并行请求
         List<CompletableFuture<Pair<String, String>>> futures = matchList.stream().map(match -> CompletableFuture.supplyAsync(() -> {
             String title = getUrlTitle(match);
-            return Objects.nonNull(title) ? Pair.of(match, title) : null;
+            return StringUtils.isNotEmpty(title) ? Pair.of(match, title) : null;
         })).collect(Collectors.toList());
         CompletableFuture<List<Pair<String, String>>> future = FutureUtils.sequenceNonNull(futures);
         //结果组装

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/WxMsgService.java
Patch:
@@ -10,6 +10,7 @@
 import me.chanjar.weixin.mp.api.WxMpService;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlMessage;
 import me.chanjar.weixin.mp.bean.message.WxMpXmlOutMessage;
+import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.context.annotation.Lazy;
@@ -53,7 +54,7 @@ public WxMpXmlOutMessage scan(WxMpService wxMpService, WxMpXmlMessage wxMpXmlMes
         String fromUser = wxMpXmlMessage.getFromUser();
         Integer eventKey = Integer.parseInt(getEventKey(wxMpXmlMessage));
         User user = userDao.getByOpenId(fromUser);
-        if (Objects.nonNull(user) && Objects.nonNull(user.getAvatar())) {
+        if (Objects.nonNull(user) && StringUtils.isNotEmpty(user.getAvatar())) {
             //注册且已经授权的用户，直接登录成功
             login(user.getId(), eventKey);
             return null;
@@ -84,7 +85,7 @@ private String getEventKey(WxMpXmlMessage wxMpXmlMessage) {
     public void authorize(WxOAuth2UserInfo userInfo) {
         User user = userDao.getByOpenId(userInfo.getOpenid());
         //更新用户信息
-        if (Objects.isNull(user.getName())) {
+        if (StringUtils.isNotEmpty(user.getName())) {
             fillUserInfo(user.getId(), userInfo);
         }
         //触发用户登录成功操作

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/HttpHeadersHandler.java
Patch:
@@ -5,9 +5,9 @@
 import io.netty.handler.codec.http.FullHttpRequest;
 import io.netty.handler.codec.http.HttpHeaders;
 import io.netty.util.AttributeKey;
+import org.apache.commons.lang3.StringUtils;
 
 import java.net.InetSocketAddress;
-import java.util.Objects;
 
 public class HttpHeadersHandler extends ChannelInboundHandlerAdapter {
     private AttributeKey<String> key = AttributeKey.valueOf("Id");
@@ -17,7 +17,7 @@ public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception
         if (msg instanceof FullHttpRequest) {
             HttpHeaders headers = ((FullHttpRequest) msg).headers();
             String ip = headers.get("X-Real-IP");
-            if (Objects.isNull(ip)) {//如果没经过nginx，就直接获取远端地址
+            if (StringUtils.isNotEmpty(ip)) {//如果没经过nginx，就直接获取远端地址
                 InetSocketAddress address = (InetSocketAddress) ctx.channel().remoteAddress();
                 ip = address.getAddress().getHostAddress();
             }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/service/impl/ChatServiceImpl.java
Patch:
@@ -152,12 +152,13 @@ public CursorPageBaseResp<ChatMessageResp> getMsgPage(ChatMessagePageReq request
     @Override
     public CursorPageBaseResp<ChatRoomResp> getRoomPage(CursorPageBaseReq request, Long uid) {
         CursorPageBaseResp<Room> cursorPage = roomDao.getCursorPage(request);
+        ArrayList<Room> rooms = new ArrayList<>(cursorPage.getList());
         if (request.isFirstPage()) {
             //第一页插入置顶的大群聊
             Room group = roomDao.getById(ROOM_GROUP_ID);
-            cursorPage.getList().add(0, group);
+            rooms.add(0, group);
         }
-        return CursorPageBaseResp.init(cursorPage, RoomAdapter.buildResp(cursorPage.getList()));
+        return CursorPageBaseResp.init(cursorPage, RoomAdapter.buildResp(rooms));
     }
 
     @Override

File: mallchat-common/src/main/java/com/abin/mallchat/common/chat/dao/MessageDao.java
Patch:
@@ -55,6 +55,7 @@ public Integer getGapCount(Long roomId, Long fromId, Long toId) {
     public void updateGapCount(Long id, Integer gapCount) {
         lambdaUpdate()
                 .eq(Message::getId, id)
-                .set(Message::getGapCount, gapCount);
+                .set(Message::getGapCount, gapCount)
+                .update();
     }
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/domain/entity/User.java
Patch:
@@ -10,6 +10,7 @@
 
 import java.io.Serializable;
 import java.util.Date;
+import java.util.Objects;
 
 import com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler;
 import lombok.*;
@@ -99,11 +100,10 @@ public class User implements Serializable {
     @TableField("update_time")
     private Date updateTime;
 
-    public IpInfo getIpInfo() {
+    public void refreshIp(String ip) {
         if (ipInfo == null) {
             ipInfo = new IpInfo();
         }
-        return ipInfo;
+        ipInfo.refreshIp(ip);
     }
-
 }

File: mallchat-common/src/main/java/com/abin/mallchat/common/user/service/impl/IpServiceImpl.java
Patch:
@@ -45,6 +45,9 @@ public void refreshIpDetailAsync(Long uid) {
         executor.execute(() -> {
             User user = userDao.getById(uid);
             IpInfo ipInfo = user.getIpInfo();
+            if (Objects.isNull(ipInfo)) {
+                return;
+            }
             String ip = ipInfo.needRefreshIp();
             if (StrUtil.isBlank(ip)) {
                 return;

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/chat/controller/ChatController.java
Patch:
@@ -27,6 +27,8 @@
 import javax.validation.Valid;
 import java.util.Map;
 import java.util.Set;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 
 /**
  * <p>
@@ -66,7 +68,7 @@ private Set<String> getBlackUidSet(){
         return userCache.getBlackMap().get(BlackTypeEnum.UID.getType());
     }
 
-    @GetMapping("/public/member/statistic")
+    @GetMapping("public/member/statistic/")
     @ApiOperation("群成员人数统计")
     public ApiResult<ChatMemberStatisticResp> getMemberStatistic() {
         return ApiResult.success(chatService.getMemberStatistic());

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/LoginServiceImpl.java
Patch:
@@ -45,7 +45,7 @@ public boolean verify(String token) {
             return false;
         }
         String key = RedisKey.getKey(RedisKey.USER_TOKEN_STRING, uid);
-        String realToken = redisUtils.getStr(key);
+        String realToken = RedisUtils.getStr(key);
         return token.equals(realToken);//有可能token失效了，需要校验是不是和最新token一致
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/WebSocketServiceImpl.java
Patch:
@@ -157,7 +157,7 @@ private void loginSuccess(Channel channel, User user, String token) {
         boolean online = userCache.isOnline(user.getId());
         if (!online) {
             user.setLastOptTime(new Date());
-            user.getIpInfo().refreshIp(NettyUtil.getAttr(channel, NettyUtil.IP));
+            user.refreshIp(NettyUtil.getAttr(channel, NettyUtil.IP));
             applicationEventPublisher.publishEvent(new UserOnlineEvent(this, user));
         }
     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServer.java
Patch:
@@ -67,7 +67,7 @@ public void run() throws InterruptedException {
                     protected void initChannel(SocketChannel socketChannel) throws Exception {
                         ChannelPipeline pipeline = socketChannel.pipeline();
                         //30秒客户端没有向服务器发送心跳则关闭连接
-                        pipeline.addLast(new IdleStateHandler(30, 0, 0));
+//                        pipeline.addLast(new IdleStateHandler(30, 0, 0));
                         // 因为使用http协议，所以需要使用http的编码器，解码器
                         pipeline.addLast(new HttpServerCodec());
                         // 以块方式写，添加 chunkedWriter 处理器

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/CursorPageBaseReq.java
Patch:
@@ -9,6 +9,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
+import javax.validation.constraints.Max;
 import java.util.Objects;
 
 /**
@@ -22,6 +23,7 @@
 public class CursorPageBaseReq {
 
     @ApiModelProperty("页面大小")
+    @Max(50)
     private Integer pageSize = 10;
 
     @ApiModelProperty("游标（初始为null，后续请求附带上次翻页的游标）")

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/domain/vo/request/PageBaseReq.java
Patch:
@@ -5,6 +5,8 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Data;
 
+import javax.validation.constraints.Max;
+
 /**
  * @author <a href="https://github.com/zongzibinbin">abin</a>
  * @since 2023-03-19
@@ -14,6 +16,7 @@
 public class PageBaseReq{
 
     @ApiModelProperty("页面大小")
+    @Max(50)
     private Integer pageSize = 10;
 
     @ApiModelProperty("页面索引（从1开始）")

File: mallchat-common/src/main/java/com/abin/mallchat/common/common/utils/JwtUtils.java
Patch:
@@ -30,6 +30,7 @@ public class JwtUtils {
     private String secret;
 
     private static final String UID_CLAIM = "uid";
+    private static final String CREATE_TIME = "createTime";
 
     /**
      * JWT生成Token.<br/>
@@ -40,6 +41,7 @@ public String createToken(Long uid) {
         // build token
         String token = JWT.create()
                 .withClaim(UID_CLAIM, uid) // 只存一个uid信息，其他的自己去redis查
+                .withClaim(CREATE_TIME, new Date())
                 .sign(Algorithm.HMAC256(secret)); // signature
         return token;
     }

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/websocket/NettyWebSocketServerHandler.java
Patch:
@@ -75,7 +75,7 @@ public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exc
     // 处理异常
     @Override
     public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws Exception {
-        log.warn("异常发生，异常消息 ={}" + cause.getMessage());
+        log.warn("异常发生，异常消息 ={}" , cause.getMessage());
         ctx.channel().close();
     }
 

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/event/listener/MessageMarkListener.java
Patch:
@@ -38,7 +38,7 @@ public class MessageMarkListener {
     public void changeMsgType(MessageMarkEvent event) {
         ChatMessageMarkDTO dto = event.getDto();
         Message msg = messageDao.getById(dto.getMsgId());
-        if (!Objects.equals(msg, MessageTypeEnum.NORMAL.getType())) {//普通消息才需要升级
+        if (!Objects.equals(msg.getType(), MessageTypeEnum.NORMAL.getType())) {//普通消息才需要升级
             return;
         }
         //消息被标记次数

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/user/service/impl/UserServiceImpl.java
Patch:
@@ -90,7 +90,6 @@ public List<BadgeResp> badges(Long uid) {
     }
 
     @Override
-    @Transactional
     public void wearingBadge(Long uid, WearingBadgeReq req) {
         //确保有这个徽章
         UserBackpack firstValidItem = userBackpackDao.getFirstValidItem(uid, req.getBadgeId());
@@ -100,6 +99,8 @@ public void wearingBadge(Long uid, WearingBadgeReq req) {
         AssertUtil.equal(itemConfig.getType(), ItemTypeEnum.BADGE.getType(), "该徽章不可佩戴");
         //佩戴徽章
         userDao.wearingBadge(uid, req.getBadgeId());
+        //删除用户缓存
+        userCache.delUserInfo(uid);
     }
 
     @Override

File: mallchat-custom-server/src/main/java/com/abin/mallchat/custom/common/event/listener/UserRegisterListener.java
Patch:
@@ -36,7 +36,7 @@ public void sendCard(UserRegisterEvent event) {
 
     @Async
     @EventListener(classes = UserRegisterEvent.class)
-    public void sendBadge(UserOnlineEvent event) {
+    public void sendBadge(UserRegisterEvent event) {
         User user = event.getUser();
         int count = userDao.count();
         if (count <= 10) {

