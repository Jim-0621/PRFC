File: BigImageViewer/src/main/java/com/github/piasy/biv/view/BigImageView.java
Patch:
@@ -327,8 +327,9 @@ public void saveImageIntoGallery() {
                 ContentValues contentValues = new ContentValues();
                 contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME,
                     mCurrentImageFile.getName());
-                // this mime type doesn't really matter, so we just use jpg.
-                contentValues.put(MediaStore.MediaColumns.MIME_TYPE, "image/jpg");
+                // http://androidxref.com/4.4.4_r1/xref/libcore/luni/src/main/java/libcore/net/MimeUtils.java
+                // Please select the appropriate MIME_TYPE in the webpage
+                contentValues.put(MediaStore.MediaColumns.MIME_TYPE, "image/jpeg");
                 contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH,
                     Environment.DIRECTORY_PICTURES);
                 imageUri =

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/BigImageView.java
Patch:
@@ -125,8 +125,7 @@ public void onClick(final View v) {
             // Retry loading when failure image is clicked
             if (mTapToRetry) {
                 showImage(mThumbnail, mUri);
-            }
-            if (mOnClickListener != null) {
+            } else if (mOnClickListener != null) {
                 mOnClickListener.onClick(v);
             }
         }

File: BigImageViewer/src/main/java/com/github/piasy/biv/metadata/ImageInfoExtractor.java
Patch:
@@ -71,6 +71,7 @@ public static int getImageType(File file) {
 
             inputStream.close();
         } catch (IOException e) {
+            e.printStackTrace();
         }
 
         return type;

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/BigImageView.java
Patch:
@@ -106,7 +106,7 @@ public class BigImageView extends FrameLayout implements ImageLoader.Callback {
 
     private OnClickListener mOnClickListener;
     private OnLongClickListener mOnLongClickListener;
-    private OnClickListener mFailureImageClickListener = new OnClickListener() {
+    private final OnClickListener mFailureImageClickListener = new OnClickListener() {
         @Override
         public void onClick(final View v) {
             // Retry loading when failure image is clicked

File: FrescoImageLoader/src/main/java/com/github/piasy/biv/loader/fresco/FrescoImageLoader.java
Patch:
@@ -24,6 +24,7 @@
 
 package com.github.piasy.biv.loader.fresco;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.net.Uri;
 import com.facebook.binaryresource.FileBinaryResource;
@@ -77,6 +78,7 @@ public static FrescoImageLoader with(Context appContext,
         return new FrescoImageLoader(appContext);
     }
 
+    @SuppressLint("WrongThread")
     @Override
     public void loadImage(int requestId, Uri uri, final Callback callback) {
         ImageRequest request = ImageRequest.fromUri(uri);

File: app/src/main/java/com/github/piasy/biv/example/GlideLoaderActivity.java
Patch:
@@ -51,7 +51,7 @@ public void onClick(View v) {
                 bigImageView.setProgressIndicator(new ProgressPieIndicator());
                 bigImageView.showImage(
                         Uri.parse("http://img1.imgtn.bdimg.com/it/u=1520386803,778399414&fm=21&gp=0.jpg"),
-                        Uri.parse("http://youimg1.c-ctrip.com/target/tg/773/732/734/7ca19416b8cd423f8f6ef2d08366b7dc.jpg")
+                        Uri.parse("https://youimg1.c-ctrip.com/target/tg/773/732/734/7ca19416b8cd423f8f6ef2d08366b7dc.jpg")
                 );
             }
         });
@@ -62,9 +62,9 @@ protected void onDestroy() {
         super.onDestroy();
 
         long start = System.nanoTime();
-        App.fixLeakCanary696(getApplicationContext());
+        Utils.fixLeakCanary696(getApplicationContext());
         long end = System.nanoTime();
-        Log.w(App.TAG, "fixLeakCanary696: " + (end - start));
+        Log.w(Utils.TAG, "fixLeakCanary696: " + (end - start));
 
         BigImageViewer.imageLoader().cancelAll();
     }

File: BigImageViewer/src/main/java/com/github/piasy/biv/loader/ImageLoader.java
Patch:
@@ -40,6 +40,8 @@ public interface ImageLoader {
 
     void cancel(int requestId);
 
+    void cancelAll();
+
     @UiThread
     interface Callback {
         void onCacheHit(int imageType, File image);

File: FrescoImageViewFactory/src/main/java/com/github/piasy/biv/view/FrescoImageViewFactory.java
Patch:
@@ -58,7 +58,9 @@ public View createThumbnailView(final Context context, final Uri thumbnail,
         DraweeController controller = Fresco.newDraweeControllerBuilder()
                 .setUri(thumbnail)
                 .build();
-        thumbnailView.getHierarchy().setActualImageScaleType(scaleType(scaleType));
+        if (scaleType != null) {
+            thumbnailView.getHierarchy().setActualImageScaleType(scaleType(scaleType));
+        }
         thumbnailView.setController(controller);
         return thumbnailView;
     }

File: GlideImageViewFactory/src/main/java/com/github/piasy/biv/view/GlideImageViewFactory.java
Patch:
@@ -62,7 +62,9 @@ protected View createAnimatedImageView(final Context context, final int imageTyp
     public View createThumbnailView(final Context context, final Uri thumbnail,
             final ImageView.ScaleType scaleType) {
         ImageView thumbnailView = new ImageView(context);
-        thumbnailView.setScaleType(scaleType);
+        if (scaleType != null) {
+            thumbnailView.setScaleType(scaleType);
+        }
         Glide.with(context)
                 .load(thumbnail)
                 .into(thumbnailView);

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/ImageViewFactory.java
Patch:
@@ -27,6 +27,7 @@
 import android.content.Context;
 import android.net.Uri;
 import android.view.View;
+import android.widget.ImageView;
 import com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView;
 import com.github.piasy.biv.metadata.ImageInfoExtractor;
 import java.io.File;
@@ -58,7 +59,7 @@ protected View createAnimatedImageView(Context context, int imageType, File imag
         return null;
     }
 
-    public View createThumbnailView(Context context, Uri thumbnail, int scaleType) {
+    public View createThumbnailView(Context context, Uri thumbnail, ImageView.ScaleType scaleType) {
         return null;
     }
 }

File: GlideImageViewFactory/src/main/java/com/github/piasy/biv/view/GlideImageViewFactory.java
Patch:
@@ -60,9 +60,9 @@ protected View createAnimatedImageView(final Context context, final int imageTyp
 
     @Override
     public View createThumbnailView(final Context context, final Uri thumbnail,
-            final int scaleType) {
+            final ImageView.ScaleType scaleType) {
         ImageView thumbnailView = new ImageView(context);
-        thumbnailView.setScaleType(BigImageView.scaleType(scaleType));
+        thumbnailView.setScaleType(scaleType);
         Glide.with(context)
                 .load(thumbnail)
                 .into(thumbnailView);

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/DisplayOptimizeListener.java
Patch:
@@ -77,7 +77,7 @@ public void onReady() {
             result += 0.2f;
         }
 
-        if (mInitScaleType == BigImageView.INIT_SCALE_TYPE_AUTO) {
+        if (mInitScaleType == BigImageView.INIT_SCALE_TYPE_CUSTOM) {
             float maxScale = Math.max((float) viewWidth / imageWidth,
                     (float) viewHeight / imageHeight);
             if (maxScale > 1) {

File: app/src/main/java/com/github/piasy/biv/example/ScaleTypeActivity.java
Patch:
@@ -74,8 +74,8 @@ private void setScaleType() {
             mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_CENTER_CROP);
         } else if (TextUtils.equals(scaleType, getString(R.string.scale_center_inside))) {
             mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_CENTER_INSIDE);
-        } else if (TextUtils.equals(scaleType, getString(R.string.scale_auto))) {
-            mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_AUTO);
+        } else if (TextUtils.equals(scaleType, getString(R.string.scale_custom))) {
+            mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_CUSTOM);
         } else if (TextUtils.equals(scaleType, getString(R.string.scale_start))) {
             mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_START);
         }

File: app/src/main/java/com/github/piasy/biv/example/ScaleTypeActivity.java
Patch:
@@ -76,6 +76,8 @@ private void setScaleType() {
             mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_CENTER_INSIDE);
         } else if (TextUtils.equals(scaleType, getString(R.string.scale_auto))) {
             mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_AUTO);
+        } else if (TextUtils.equals(scaleType, getString(R.string.scale_start))) {
+            mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_START);
         }
     }
 

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/BigImageView.java
Patch:
@@ -128,7 +128,7 @@ public BigImageView(Context context, AttributeSet attrs, int defStyleAttr) {
         array.recycle();
 
         if (mCustomSsivId == 0) {
-            mImageView = new SubsamplingScaleImageView(context, attrs);
+            mImageView = new SubsamplingScaleImageView(context);
             addView(mImageView);
         }
 

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/BigImageView.java
Patch:
@@ -128,7 +128,7 @@ public BigImageView(Context context, AttributeSet attrs, int defStyleAttr) {
         array.recycle();
 
         if (mCustomSsivId == 0) {
-            mImageView = new SubsamplingScaleImageView(context, attrs);
+            mImageView = new SubsamplingScaleImageView(context);
             addView(mImageView);
         }
 

File: BigImageViewer/src/main/java/com/github/piasy/biv/view/BigImageView.java
Patch:
@@ -421,7 +421,9 @@ public void onAnimationRepeat(Animation animation) {
     @UiThread
     private void doShowImage(File image) {
         mImageView.setImage(ImageSource.uri(Uri.fromFile(image)));
-        mFailureImageView.setVisibility(GONE);
+        if (mFailureImageView != null) {
+            mFailureImageView.setVisibility(GONE);
+        }
         mImageView.setVisibility(VISIBLE);
     }
 

File: app/src/main/java/com/github/piasy/biv/example/FrescoLoaderActivity.java
Patch:
@@ -44,8 +44,8 @@ public void onClick(View v) {
                 BigImageView bigImageView = (BigImageView) findViewById(R.id.mBigImage);
                 bigImageView.setProgressIndicator(new ProgressPieIndicator());
                 bigImageView.showImage(
-                        Uri.parse("http://img3.imgtn.bdimg.com/it/u=3284462501,858280594&fm=21&gp=0.jpg"),
-                        Uri.parse("http://a.hiphotos.baidu.com/zhidao/pic/item/adaf2edda3cc7cd90df3f2953f01213fb90e91a4.jpg")
+                        Uri.parse("https://images.unsplash.com/photo-1497240299146-17ff4089466a?dpr=2&auto=compress,format&fit=crop&w=376"),
+                        Uri.parse("https://images.unsplash.com/photo-1497240299146-17ff4089466a")
                 );
             }
         });

File: FrescoImageLoader/src/main/java/com/github/piasy/biv/loader/fresco/ImageDownloadSubscriber.java
Patch:
@@ -26,11 +26,11 @@
 
 import android.content.Context;
 import android.support.annotation.WorkerThread;
+import com.facebook.common.memory.PooledByteBuffer;
+import com.facebook.common.memory.PooledByteBufferInputStream;
 import com.facebook.common.references.CloseableReference;
 import com.facebook.datasource.BaseDataSubscriber;
 import com.facebook.datasource.DataSource;
-import com.facebook.imagepipeline.memory.PooledByteBuffer;
-import com.facebook.imagepipeline.memory.PooledByteBufferInputStream;
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;

File: ProgressPieIndicator/src/main/java/com/github/piasy/biv/indicator/progresspie/ProgressPieIndicator.java
Patch:
@@ -52,7 +52,7 @@ public void onStart() {
 
     @Override
     public void onProgress(int progress) {
-        if (progress < 0 || progress > 100) {
+        if (progress < 0 || progress > 100 || mProgressPieView == null) {
             return;
         }
         mProgressPieView.setProgress(progress);

File: BigImageViewer/src/main/java/com/github/piasy/biv/loader/ImageLoader.java
Patch:
@@ -39,7 +39,7 @@ public interface ImageLoader {
 
     void loadImage(Uri uri, Callback callback);
 
-    View showThumbnail(BigImageView parent, Uri thumbnail);
+    View showThumbnail(BigImageView parent, Uri thumbnail, int scaleType);
 
     void prefetch(Uri uri);
 

File: app/src/main/java/com/github/piasy/biv/example/FrescoLoaderActivity.java
Patch:
@@ -44,8 +44,8 @@ public void onClick(View v) {
                 BigImageView bigImageView = (BigImageView) findViewById(R.id.mBigImage);
                 bigImageView.setProgressIndicator(new ProgressPieIndicator());
                 bigImageView.showImage(
-                        Uri.parse("http://img1.imgtn.bdimg.com/it/u=1520386803,778399414&fm=21&gp=0.jpg"),
-                        Uri.parse("http://youimg1.c-ctrip.com/target/tg/773/732/734/7ca19416b8cd423f8f6ef2d08366b7dc.jpg")
+                        Uri.parse("http://img3.imgtn.bdimg.com/it/u=3284462501,858280594&fm=21&gp=0.jpg"),
+                        Uri.parse("http://a.hiphotos.baidu.com/zhidao/pic/item/adaf2edda3cc7cd90df3f2953f01213fb90e91a4.jpg")
                 );
             }
         });

