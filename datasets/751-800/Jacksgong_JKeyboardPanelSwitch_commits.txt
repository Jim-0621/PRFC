File: library/src/main/java/cn/dreamtobe/kpswitch/IFSPanelConflictLayout.java
Patch:
@@ -37,5 +37,5 @@ public interface IFSPanelConflictLayout {
      *
      * @param window The current window of the current visual activity.
      */
-    void recordKeyboardStatus(final Window window);
+    void recordKeyboardStatus(Window window);
 }

File: library/src/main/java/cn/dreamtobe/kpswitch/IPanelHeightTarget.java
Patch:
@@ -28,7 +28,7 @@ public interface IPanelHeightTarget {
      * for handle the panel's height, will be equal to the keyboard height which had saved last
      * time.
      */
-    void refreshHeight(final int panelHeight);
+    void refreshHeight(int panelHeight);
 
     /**
      * @return get the height of target-view.

File: library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchPanelLayoutHandler.java
Patch:
@@ -123,7 +123,6 @@ public boolean filterSetVisibility(final int visibility) {
         return false;
     }
 
-    private final int[] processedMeasureWHSpec = new int[2];
 
     /**
      * Handle Panel -> Keyboard.
@@ -136,13 +135,14 @@ public boolean filterSetVisibility(final int visibility) {
     public int[] processOnMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         if (mIsHide) {
             panelLayout.setVisibility(View.GONE);
-            /**
+            /*
              * The current frame will be visible nil.
              */
             widthMeasureSpec = View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.EXACTLY);
             heightMeasureSpec = View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.EXACTLY);
         }
 
+        final int[] processedMeasureWHSpec = new int[2];
         processedMeasureWHSpec[0] = widthMeasureSpec;
         processedMeasureWHSpec[1] = heightMeasureSpec;
 

File: library/src/main/java/cn/dreamtobe/kpswitch/IPanelHeightTarget.java
Patch:
@@ -25,7 +25,8 @@
 public interface IPanelHeightTarget {
 
     /**
-     * for handle the panel's height, will be equal to the keyboard height which had saved last time.
+     * for handle the panel's height, will be equal to the keyboard height which had saved last
+     * time.
      */
     void refreshHeight(final int panelHeight);
 

File: library/src/main/java/cn/dreamtobe/kpswitch/util/KeyBoardSharedPreferences.java
Patch:
@@ -26,11 +26,11 @@
  */
 class KeyBoardSharedPreferences {
 
-    private final static String FILE_NAME = "keyboard.common";
+    private static final String FILE_NAME = "keyboard.common";
 
-    private final static String KEY_KEYBOARD_HEIGHT = "sp.key.keyboard.height";
+    private static final String KEY_KEYBOARD_HEIGHT = "sp.key.keyboard.height";
 
-    private volatile static SharedPreferences SP;
+    private static volatile SharedPreferences SP;
 
     public static boolean save(final Context context, final int keyboardHeight) {
         return with(context).edit()

File: library/src/main/java/cn/dreamtobe/kpswitch/util/StatusBarHeightUtil.java
Patch:
@@ -28,9 +28,9 @@ public class StatusBarHeightUtil {
     private static boolean INIT = false;
     private static int STATUS_BAR_HEIGHT = 50;
 
-    private final static String STATUS_BAR_DEF_PACKAGE = "android";
-    private final static String STATUS_BAR_DEF_TYPE = "dimen";
-    private final static String STATUS_BAR_NAME = "status_bar_height";
+    private static final String STATUS_BAR_DEF_PACKAGE = "android";
+    private static final String STATUS_BAR_DEF_TYPE = "dimen";
+    private static final String STATUS_BAR_NAME = "status_bar_height";
 
     public static synchronized int getStatusBarHeight(final Context context) {
         if (!INIT) {

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelFrameLayout.java
Patch:
@@ -16,7 +16,6 @@
 package cn.dreamtobe.kpswitch.widget;
 
 import android.annotation.TargetApi;
-import android.app.Activity;
 import android.content.Context;
 import android.os.Build;
 import android.util.AttributeSet;
@@ -37,7 +36,7 @@
  * <p/>
  * For non-full-screen theme window, please use {@link KPSwitchPanelFrameLayout} instead.
  *
- * @see KeyboardUtil#attach(Activity, IPanelHeightTarget)
+ * @see KeyboardUtil#attach(android.app.Activity, IPanelHeightTarget)
  * @see #recordKeyboardStatus(Window)
  * @see KPSwitchFSPanelLinearLayout
  * @see KPSwitchFSPanelRelativeLayout
@@ -63,7 +62,8 @@ public KPSwitchFSPanelFrameLayout(Context context, AttributeSet attrs, int defSt
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchFSPanelFrameLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchFSPanelFrameLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                      int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
     }
 

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelLinearLayout.java
Patch:
@@ -16,7 +16,6 @@
 package cn.dreamtobe.kpswitch.widget;
 
 import android.annotation.TargetApi;
-import android.app.Activity;
 import android.content.Context;
 import android.os.Build;
 import android.util.AttributeSet;
@@ -37,7 +36,7 @@
  * <p/>
  * For non-full-screen theme window, please use {@link KPSwitchPanelLinearLayout} instead.
  *
- * @see KeyboardUtil#attach(Activity, IPanelHeightTarget)
+ * @see KeyboardUtil#attach(android.app.Activity, IPanelHeightTarget)
  * @see #recordKeyboardStatus(Window)
  * @see KPSwitchFSPanelFrameLayout
  * @see KPSwitchFSPanelRelativeLayout
@@ -64,7 +63,8 @@ public KPSwitchFSPanelLinearLayout(Context context, AttributeSet attrs, int defS
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchFSPanelLinearLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchFSPanelLinearLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                       int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init();
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelRelativeLayout.java
Patch:
@@ -16,7 +16,6 @@
 package cn.dreamtobe.kpswitch.widget;
 
 import android.annotation.TargetApi;
-import android.app.Activity;
 import android.content.Context;
 import android.os.Build;
 import android.util.AttributeSet;
@@ -37,7 +36,7 @@
  * <p/>
  * For non-full-screen theme window, please use {@link KPSwitchPanelRelativeLayout} instead.
  *
- * @see KeyboardUtil#attach(Activity, IPanelHeightTarget)
+ * @see KeyboardUtil#attach(android.app.Activity, IPanelHeightTarget)
  * @see #recordKeyboardStatus(Window)
  * @see KPSwitchFSPanelFrameLayout
  * @see KPSwitchFSPanelLinearLayout
@@ -63,7 +62,8 @@ public KPSwitchFSPanelRelativeLayout(Context context, AttributeSet attrs, int de
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchFSPanelRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchFSPanelRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                         int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init();
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelFrameLayout.java
Patch:
@@ -59,7 +59,8 @@ public KPSwitchPanelFrameLayout(Context context, AttributeSet attrs, int defStyl
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchPanelFrameLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchPanelFrameLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                    int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init(attrs);
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelRelativeLayout.java
Patch:
@@ -59,7 +59,8 @@ public KPSwitchPanelRelativeLayout(Context context, AttributeSet attrs, int defS
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchPanelRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchPanelRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                       int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init(attrs);
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootFrameLayout.java
Patch:
@@ -57,7 +57,8 @@ public KPSwitchRootFrameLayout(Context context, AttributeSet attrs, int defStyle
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchRootFrameLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchRootFrameLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                   int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init();
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootLinearLayout.java
Patch:
@@ -59,7 +59,8 @@ public KPSwitchRootLinearLayout(Context context, AttributeSet attrs, int defStyl
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchRootLinearLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchRootLinearLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                    int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init();
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootRelativeLayout.java
Patch:
@@ -57,7 +57,8 @@ public KPSwitchRootRelativeLayout(Context context, AttributeSet attrs, int defSt
     }
 
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public KPSwitchRootRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
+    public KPSwitchRootRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr,
+                                      int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
         init();
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/IFSPanelConflictLayout.java
Patch:
@@ -20,6 +20,9 @@
 
 /**
  * Created by Jacksgong on 3/31/16.
+ * <p>
+ * The interface used for the panel's container layout and it used in the case of full-screen theme
+ * window.
  */
 public interface IFSPanelConflictLayout {
 

File: library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchPanelLayoutHandler.java
Patch:
@@ -68,6 +68,7 @@ public class KPSwitchPanelLayoutHandler implements IPanelConflictLayout {
      * Default is false.
      * @attr ref cn.dreamtobe.kpswitch.R.styleable#KPSwitchPanelLayout_ignore_recommend_height
      */
+    @SuppressWarnings("JavaDoc")
     private boolean mIgnoreRecommendHeight = false;
 
     public KPSwitchPanelLayoutHandler(final View panelLayout, final AttributeSet attrs) {
@@ -111,6 +112,7 @@ public boolean filterSetVisibility(final int visibility) {
          * the size is changed by keyboard-show. And will show, on the next frame of the above
          * change discovery.
          */
+        //noinspection RedundantIfStatement
         if (isKeyboardShowing() && visibility == View.VISIBLE) {
             return true;
         }
@@ -196,6 +198,7 @@ public void resetToRecommendPanelHeight(int recommendPanelHeight) {
      * @see #resetToRecommendPanelHeight(int)
      * @attr ref cn.dreamtobe.kpswitch.R.styleable#KPSwitchPanelLayout_ignore_recommend_height
      */
+    @SuppressWarnings("JavaDoc")
     public void setIgnoreRecommendHeight(boolean ignoreRecommendHeight) {
         this.mIgnoreRecommendHeight = ignoreRecommendHeight;
     }

File: library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchRootLayoutHandler.java
Patch:
@@ -99,7 +99,7 @@ public void handleBeforeMeasure(final int width, int height) {
 
         // 检测到布局变化非键盘引起
         if (Math.abs(offset) < KeyboardUtil.getMinKeyboardHeight(mTargetRootView.getContext())) {
-            Log.w(TAG, "system menubar cause layout changed");
+            Log.w(TAG, "system bottom-menu-bar(such as HuaWei Mate7) causes layout changed");
             return;
         }
 

File: library/src/main/java/cn/dreamtobe/kpswitch/util/ViewUtil.java
Patch:
@@ -68,6 +68,7 @@ public static boolean isFullScreen(final Activity activity) {
 
     @TargetApi(Build.VERSION_CODES.KITKAT)
     public static boolean isTranslucentStatus(final Activity activity) {
+        //noinspection SimplifiableIfStatement
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
             return (activity.getWindow().getAttributes().flags &
                     WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS) != 0;
@@ -77,6 +78,7 @@ public static boolean isTranslucentStatus(final Activity activity) {
 
     @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
     static boolean isFitsSystemWindows(final Activity activity){
+        //noinspection SimplifiableIfStatement
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             return ((ViewGroup)activity.findViewById(android.R.id.content)).getChildAt(0).
                     getFitsSystemWindows();

File: app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedActivity.java
Patch:
@@ -30,7 +30,7 @@
  * For resolving the conflict by delay the visible or gone of panel.
  * <p/>
  * In case of Normal(not fullscreen) Theme.
- * In case of Translucent Status Theme with the {@code getFitSystemWindow()} is false in root view.
+ * In case of Translucent Status Theme with the {@code getFitSystemWindow()} is true in root view.
  */
 public class ChattingResolvedActivity extends AppCompatActivity {
 

File: app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedFragmentActivity.java
Patch:
@@ -30,7 +30,7 @@
  * For resolving the conflict by delay the visible or gone of panel.
  * <p/>
  * In case of Normal(not fullscreen) Theme.
- * In case of Translucent Status Theme with the {@code getFitSystemWindow()} is false in root view.
+ * In case of Translucent Status Theme with the {@code getFitSystemWindow()} is true in root view.
  */
 public class ChattingResolvedFragmentActivity extends FragmentActivity {
 

File: app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedHandleByPlaceholderActivity.java
Patch:
@@ -23,7 +23,7 @@
  * For resolving the conflict by showing the panel placeholder.
  * <p/>
  * In case of FullScreen Theme.
- * In case of Translucent Status Theme with the {@code getFitSystemWindow()} is true in root view.
+ * In case of Translucent Status Theme with the {@code getFitSystemWindow()} is false in root view.
  */
 public class ChattingResolvedHandleByPlaceholderActivity extends AppCompatActivity {
 

File: library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchRootLayoutHandler.java
Patch:
@@ -15,6 +15,7 @@
  */
 package cn.dreamtobe.kpswitch.handler;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.graphics.Rect;
 import android.os.Build;
@@ -49,6 +50,7 @@ public KPSwitchRootLayoutHandler(final View rootView) {
         this.mIsTranslucentStatus = ViewUtil.isTranslucentStatus(activity);
     }
 
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
     public void handleBeforeMeasure(final int width, int height) {
         // 由当前布局被键盘挤压，获知，由于键盘的活动，导致布局将要发生变化。
 

File: library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java
Patch:
@@ -263,7 +263,8 @@ private void calculateKeyboardShowing(final int displayHeight) {
             } else {
 
                 final int phoneDisplayHeight = contentView.getResources().getDisplayMetrics().heightPixels;
-                if (phoneDisplayHeight == actionBarOverlayLayoutHeight) {
+                if (phoneDisplayHeight == actionBarOverlayLayoutHeight &&
+                        actionBarOverlayLayout.getPaddingTop() == 0) {
                     // no space to settle down the status bar, switch to fullscreen,
                     // only in the case of paused and opened the fullscreen page.
                     Log.w(TAG, String.format("skip the keyboard status calculate, the current" +

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelRelativeLayout.java
Patch:
@@ -62,6 +62,7 @@ public KPSwitchPanelRelativeLayout(Context context, AttributeSet attrs, int defS
     @TargetApi(Build.VERSION_CODES.LOLLIPOP)
     public KPSwitchPanelRelativeLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {
         super(context, attrs, defStyleAttr, defStyleRes);
+        init();
     }
 
     private void init() {

File: app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedFullScreenActivity.java
Patch:
@@ -67,9 +67,7 @@ public boolean onTouch(View v, MotionEvent event) {
     @Override
     protected void onPause() {
         super.onPause();
-        if (!panelRoot.isKeyboardShowing()) {
-            sendEdt.clearFocus();
-        }
+        panelRoot.recordKeyboardStatus(getWindow());
     }
 
     private FullScreenPanelLayout panelRoot;

File: app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedFullScreenActivity.java
Patch:
@@ -67,7 +67,9 @@ public boolean onTouch(View v, MotionEvent event) {
     @Override
     protected void onPause() {
         super.onPause();
-        sendEdt.clearFocus();
+        if (!panelRoot.isKeyboardShowing()) {
+            sendEdt.clearFocus();
+        }
     }
 
     private FullScreenPanelLayout panelRoot;

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/CustomRootLayout.java
Patch:
@@ -109,9 +109,11 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 break;
             }
 
-            if (offset == -mStatusBarHeight) {
+            if (Math.abs(offset) == mStatusBarHeight) {
                 Log.w(TAG, String.format("offset just equal statusBar height %d", offset));
                 // 极有可能是 相对本页面的二级页面的主题是全屏&是透明，但是本页面不是全屏，因此会有status bar的布局变化差异，进行调过
+                // 极有可能是 该布局采用了透明的背景(windowIsTranslucent=true)，而背后的布局`full screen`为false，
+                // 因此有可能第一次绘制时没有attach上status bar，而第二次status bar attach上去，导致了这个变化。
                 break;
             }
 

File: app/src/main/java/cn/dreamtobe/jkpswitch/activity/JChattingActivity.java
Patch:
@@ -35,9 +35,9 @@ private void assignViews() {
 
     public void onClickPlusIv(final View view) {
         if (mPanelRoot.getVisibility() == View.VISIBLE) {
-            KeyboardUtil.showKeybord(mSendEdt);
+            KeyboardUtil.showKeyboard(mSendEdt);
         } else {
-            KeyboardUtil.hideKeybord(mSendEdt);
+            KeyboardUtil.hideKeyboard(mSendEdt);
             mPanelRoot.setVisibility(View.VISIBLE);
         }
     }
@@ -56,7 +56,7 @@ protected void onCreate(Bundle savedInstanceState) {
             @Override
             public boolean onTouch(View view, MotionEvent motionEvent) {
                 if (motionEvent.getAction() == MotionEvent.ACTION_UP) {
-                    KeyboardUtil.hideKeybord(mSendEdt);
+                    KeyboardUtil.hideKeyboard(mSendEdt);
                     mPanelRoot.setVisibility(View.GONE);
                 }
 

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/CustomRootLayout.java
Patch:
@@ -30,7 +30,7 @@
  * <p/>
  * Created by Jacksgong on 15/6/29.
  * <p/>
- * Detail: http://blog.dreamtobe.cn/2015/06/29/keybord-panel-switch/
+ * Detail: http://blog.dreamtobe.cn/2015/09/01/keyboard-panel-switch/
  *
  * @see PanelLayout
  */
@@ -209,10 +209,10 @@ public void onGlobalLayout() {
             return;
         }
 
-        final int keybordHeight = Math.abs(mLastHeight - height);
+        final int keyboardHeight = Math.abs(mLastHeight - height);
         mLastHeight = height;
 
-        final boolean change = KeyboardUtil.saveKeybordHeight(getContext(), keybordHeight);
+        final boolean change = KeyboardUtil.saveKeyboardHeight(getContext(), keyboardHeight);
         if (change) {
             final int panelHeight = getPanelLayout(this).getHeight();
             final int validPanelHeight = KeyboardUtil.getValidPanelHeight(getContext());

File: library/src/main/java/cn/dreamtobe/kpswitch/widget/PanelLayout.java
Patch:
@@ -26,7 +26,7 @@
  * <p/>
  * Created by Jacksgong on 15/6/29.
  * <p/>
- * Detail: http://blog.dreamtobe.cn/2015/06/29/keybord-panel-switch/
+ * Detail: http://blog.dreamtobe.cn/2015/09/01/keyboard-panel-switch/
  *
  * @see CustomRootLayout
  */

