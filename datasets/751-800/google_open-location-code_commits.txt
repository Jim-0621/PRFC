File: java/src/test/java/com/google/openlocationcode/PrecisionTest.java
Patch:
@@ -5,7 +5,7 @@
 import org.junit.runner.RunWith;
 import org.junit.runners.JUnit4;
 
-/** Tests size of rectangles defined by open location codes of various size. */
+/** Tests size of rectangles defined by Plus Codes of various size. */
 @RunWith(JUnit4.class)
 public class PrecisionTest {
 

File: java/src/test/java/com/google/openlocationcode/BenchmarkTest.java
Patch:
@@ -3,6 +3,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
+
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: java/com/google/openlocationcode/OpenLocationCode.java
Patch:
@@ -92,7 +92,7 @@ public final class OpenLocationCode {
    * <p>The coordinates include the latitude and longitude of the lower left and upper right corners
    * and the center of the bounding box for the area the code represents.
    */
- public class CodeArea {
+ public static class CodeArea {
 
     private final BigDecimal southLatitude;
     private final BigDecimal westLongitude;
@@ -171,7 +171,7 @@ public OpenLocationCode(String code) throws IllegalArgumentException {
   public OpenLocationCode(double latitude, double longitude, int codeLength)
       throws IllegalArgumentException {
     // Check that the code length requested is valid.
-    if (codeLength < 4 || (codeLength < PAIR_CODE_LENGTH & codeLength % 2 == 1)) {
+    if (codeLength < 4 || (codeLength < PAIR_CODE_LENGTH && codeLength % 2 == 1)) {
       throw new IllegalArgumentException("Illegal code length " + codeLength);
     }
     // Ensure that latitude and longitude are valid.

File: java/codes/plus/tests/PrecisionTest.java
Patch:
@@ -1,7 +1,7 @@
 package codes.plus.tests;
 
 import codes.plus.OpenLocationCode;
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.junit.Test;
 
 /**

