File: src/test/java/com/github/pedrovgs/androidwifiadb/window/AndroidDevicesTableModelTest.java
Patch:
@@ -125,7 +125,8 @@ public void shouldReturnEditableCellForActionColumn() throws Exception {
 
     androidDevicesTableModel.add(givenAnyDevice());
 
-    assertFalse(androidDevicesTableModel.isCellEditable(0, COLUMN_STATE) || androidDevicesTableModel.isCellEditable(0, COLUMN_DEVICE));
+    assertFalse(androidDevicesTableModel.isCellEditable(0, COLUMN_STATE)
+        || androidDevicesTableModel.isCellEditable(0, COLUMN_DEVICE));
     assertTrue(androidDevicesTableModel.isCellEditable(0, COLUMN_ACTION));
   }
 

File: src/test/java/com/github/pedrovgs/androidwifiadb/window/AndroidDevicesTableModelTest.java
Patch:
@@ -41,8 +41,8 @@ public class AndroidDevicesTableModelTest extends UnitTest {
   private static final int COLUMN_WITH_NOT_VALID_INDEX = -1;
   private static final String ANY_DEVICE_ID = "abcdef";
   private static final String ANY_DEVICE_NAME = "test_name";
-  private static final String CONNECTED = "connected";
-  private static final String DISCONNECTED = "disconnected";
+  private static final String CONNECTED = "Connected";
+  private static final String DISCONNECTED = "Disconnected";
 
   @Mock
   TableModelListener tableModelListener;

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/CardLayoutDevices.java
Patch:
@@ -102,8 +102,8 @@ private void createTableDevices() {
     private void configureTableAppearance() {
         tableDevices.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
         tableDevices.getColumnModel().getColumn(0).setPreferredWidth(100);
-        tableDevices.getColumnModel().getColumn(1).setMinWidth(80);
-        tableDevices.getColumnModel().getColumn(1).setMaxWidth(80);
+        tableDevices.getColumnModel().getColumn(1).setMinWidth(85);
+        tableDevices.getColumnModel().getColumn(1).setMaxWidth(85);
         tableDevices.getColumnModel().getColumn(2).setMinWidth(215);
         tableDevices.getColumnModel().getColumn(2).setMaxWidth(215);
         tableDevices.getColumnModel().getColumn(2).setCellRenderer(new ConnectDisconnectRenderer());

File: src/main/java/com/github/pedrovgs/androidwifiadb/adb/ADB.java
Patch:
@@ -101,7 +101,7 @@ public List<Device> disconnectDevices(List<Device> devices) {
    * Restarts adb in tcpip mode. Uses 5555 port.
    */
   private void enableTCPCommand() {
-    if(!isTCPEnabled) {
+    if (!isTCPEnabled) {
       String enableTCPCommand = getCommand("tcpip 5555");
       commandLine.executeCommand(enableTCPCommand);
       isTCPEnabled = true;

File: src/main/java/com/github/pedrovgs/androidwifiadb/model/Device.java
Patch:
@@ -59,7 +59,7 @@ public void setConnected(boolean connected) {
   @Override
   public String toString() {
     StringBuilder builder = new StringBuilder(getName());
-    if(ip.length() > 0) {
+    if (ip.length() > 0) {
       builder.append(" (").append(ip).append(")");
     }
     return builder.toString();

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/ConnectDisconnectEditor.java
Patch:
@@ -44,9 +44,9 @@ public Component getTableCellEditorComponent(JTable table, Object value, boolean
     @Override
     public Object getCellEditorValue() {
         if (clicked && listener != null) {
-            if(ACTION_CONNECT.equals(clickedButtonAction)) {
+            if (ACTION_CONNECT.equals(clickedButtonAction)) {
                 listener.onConnectClick(row);
-            }else if(ACTION_DISCONNECT.equals(clickedButtonAction)) {
+            } else if (ACTION_DISCONNECT.equals(clickedButtonAction)) {
                 listener.onDisconnectClick(row);
             }
         }

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/ConnectDisconnectRenderer.java
Patch:
@@ -14,7 +14,9 @@ public ConnectDisconnectRenderer() {
     }
 
     @Override
-    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
+    public Component getTableCellRendererComponent(JTable table, Object value,
+                                                   boolean isSelected, boolean hasFocus,
+                                                   int row, int column) {
         if (isSelected) {
             connectDisconnectPane.setBackground(table.getSelectionBackground());
         } else {

File: src/main/java/com/github/pedrovgs/androidwifiadb/adb/AndroidWiFiADB.java
Patch:
@@ -32,7 +32,7 @@ public class AndroidWiFiADB {
   public AndroidWiFiADB(ADB adb, View view) {
     this.adb = adb;
     this.view = view;
-    this.devices = new ArrayList<>();
+    this.devices = new ArrayList<Device>();
   }
 
   public void connectDevices() {
@@ -115,7 +115,7 @@ public void connectDevice(Device device) {
       return;
     }
 
-    List<Device> connectedDevices = new ArrayList<>();
+    List<Device> connectedDevices = new ArrayList<Device>();
     connectedDevices.add(device);
     connectedDevices = adb.connectDevices(connectedDevices);
     for(Device connected : connectedDevices) {
@@ -130,7 +130,7 @@ public void disconnectDevice(Device device) {
       return;
     }
 
-    List<Device> disconnected = new ArrayList<>();
+    List<Device> disconnected = new ArrayList<Device>();
     disconnected.add(device);
     disconnected = adb.disconnectDevices(disconnected);
     for(Device d : disconnected) {

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/AndroidDevicesTableModel.java
Patch:
@@ -15,7 +15,7 @@ public class AndroidDevicesTableModel extends AbstractTableModel {
     private List<Device> devices;
 
     public AndroidDevicesTableModel() {
-        devices = new ArrayList<>();
+        devices = new ArrayList<Device>();
     }
 
     @Override

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/CardLayoutDevices.java
Patch:
@@ -34,7 +34,7 @@ public class CardLayoutDevices implements ActionButtonListener {
     public CardLayoutDevices(Container parentContainer, DeviceAction action) {
         this.deviceAction = action;
         this.parentContainer = parentContainer;
-        this.devices = new ArrayList<>();
+        this.devices = new ArrayList<Device>();
     }
 
     public void setDevices(List<Device> devices) {

File: src/main/java/com/github/pedrovgs/androidwifiadb/action/AndroidWiFiADBAction.java
Patch:
@@ -16,9 +16,9 @@
 
 package com.github.pedrovgs.androidwifiadb.action;
 
-import com.github.pedrovgs.androidwifiadb.AndroidWiFiADB;
+import com.github.pedrovgs.androidwifiadb.adb.AndroidWiFiADB;
 import com.github.pedrovgs.androidwifiadb.model.Device;
-import com.github.pedrovgs.androidwifiadb.View;
+import com.github.pedrovgs.androidwifiadb.view.View;
 import com.github.pedrovgs.androidwifiadb.adb.ADB;
 import com.github.pedrovgs.androidwifiadb.adb.ADBParser;
 import com.github.pedrovgs.androidwifiadb.adb.CommandLine;

File: src/main/java/com/github/pedrovgs/androidwifiadb/adb/AndroidWiFiADB.java
Patch:
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.github.pedrovgs.androidwifiadb;
+package com.github.pedrovgs.androidwifiadb.adb;
 
-import com.github.pedrovgs.androidwifiadb.adb.ADB;
 import com.intellij.openapi.project.Project;
+import com.github.pedrovgs.androidwifiadb.view.View;
 import com.github.pedrovgs.androidwifiadb.model.Device;
 
 import java.util.List;

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/AndroidDevices.java
Patch:
@@ -1,7 +1,6 @@
-package com.github.pedrovgs.androidwifiadb.window;
+package com.github.pedrovgs.androidwifiadb.view;
 
-import com.github.pedrovgs.androidwifiadb.AndroidWiFiADB;
-import com.github.pedrovgs.androidwifiadb.View;
+import com.github.pedrovgs.androidwifiadb.adb.AndroidWiFiADB;
 import com.github.pedrovgs.androidwifiadb.adb.ADB;
 import com.github.pedrovgs.androidwifiadb.adb.ADBParser;
 import com.github.pedrovgs.androidwifiadb.adb.CommandLine;

File: src/main/java/com/github/pedrovgs/androidwifiadb/view/View.java
Patch:
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.github.pedrovgs.androidwifiadb;
+package com.github.pedrovgs.androidwifiadb.view;
 
 import com.github.pedrovgs.androidwifiadb.model.Device;
 

File: src/test/java/com/github/pedrovgs/androidwifiadb/AndroidWiFiADBTest.java
Patch:
@@ -17,7 +17,9 @@
 package com.github.pedrovgs.androidwifiadb;
 
 import com.github.pedrovgs.androidwifiadb.adb.ADB;
+import com.github.pedrovgs.androidwifiadb.adb.AndroidWiFiADB;
 import com.github.pedrovgs.androidwifiadb.model.Device;
+import com.github.pedrovgs.androidwifiadb.view.View;
 
 import java.util.LinkedList;
 import java.util.List;

File: src/main/java/com/github/pedrovgs/androidwifiadb/action/AndroidWiFiADBAction.java
Patch:
@@ -73,7 +73,8 @@ public void run() {
 
   @Override public void showADBNotInstalledNotification() {
     showNotification(ANDROID_WIFI_ADB_TITLE,
-        "Android SDK not found. Please, review your project configuration and be sure that you are working on an Android project.", NotificationType.ERROR);
+        "Android SDK not found. Please, review your project configuration and be sure that you are working on an "
+                + "Android project.", NotificationType.ERROR);
   }
 
   private void showNotification(final String title, final String message,

File: src/main/java/com/github/pedrovgs/androidwifiadb/action/AndroidWiFiADBAction.java
Patch:
@@ -73,7 +73,7 @@ public void run() {
 
   @Override public void showADBNotInstalledNotification() {
     showNotification(ANDROID_WIFI_ADB_TITLE,
-        "'adb' command not found. Review your Android SDK installation.", NotificationType.ERROR);
+        "Android SDK not found. Please, review your project configuration and be sure that you are working on an Android project.", NotificationType.ERROR);
   }
 
   private void showNotification(final String title, final String message,

File: src/main/java/com/github/pedrovgs/androidwifiadb/AndroidWiFiADB.java
Patch:
@@ -26,7 +26,7 @@ public class AndroidWiFiADB {
   private final ADB adb;
   private final View view;
 
-    public AndroidWiFiADB(ADB adb, View view) {
+  public AndroidWiFiADB(ADB adb, View view) {
     this.adb = adb;
     this.view = view;
   }

File: src/main/java/com/github/pedrovgs/androidwifiadb/AndroidWiFiADB.java
Patch:
@@ -56,7 +56,7 @@ private boolean isADBInstalled() {
     return adb.isInstalled();
   }
 
-    public void updateProject(Project project) {
-        this.adb.updateProject(project);
-    }
+  public void updateProject(Project project) {
+    this.adb.updateProject(project);
+  }
 }

File: src/main/java/com/github/pedrovgs/androidwifiadb/adb/ADB.java
Patch:
@@ -77,7 +77,7 @@ private boolean connectDevice(String deviceIp) {
   }
 
 
-  private String getAdbPath(Project project) {
+  private String getAdbPath() {
     String adbPath = "";
     File adbFile = AndroidSdkUtils.getAdb(project);
     if (adbFile != null) {
@@ -87,7 +87,7 @@ private String getAdbPath(Project project) {
   }
 
   private String getCommand(String command) {
-    return getAdbPath(project) + " " + command;
+    return getAdbPath() + " " + command;
   }
 
   public void updateProject(Project project) {

File: src/main/java/com/github/pedrovgs/androidwifiadb/action/AndroidWiFiADBAction.java
Patch:
@@ -54,7 +54,8 @@ public void run() {
   }
 
   @Override public void showNoConnectedDevicesNotification() {
-    showNotification(ANDROID_WIFI_ADB_TITLE, "There are no devices connected with a USB cable.",
+    showNotification(ANDROID_WIFI_ADB_TITLE,
+        "There are no devices connected. Review your USB connection and try again. ",
         NotificationType.INFORMATION);
   }
 

File: src/main/java/com/github/pedrovgs/androidwifiadb/action/AndroidWiFiADBAction.java
Patch:
@@ -54,7 +54,8 @@ public void run() {
   }
 
   @Override public void showNoConnectedDevicesNotification() {
-    showNotification(ANDROID_WIFI_ADB_TITLE, "There are no devices connected with a USB cable.",
+    showNotification(ANDROID_WIFI_ADB_TITLE,
+        "There are no devices connected. Review your USB connection and try again. ",
         NotificationType.INFORMATION);
   }
 

File: src/main/java/com/github/pedrovgs/androidwifiadb/adb/ADB.java
Patch:
@@ -65,7 +65,8 @@ private String getDeviceIp(Device device) {
     String getDeviceIpCommand =
         getCommand("-s " + device.getId() + " shell ip -f inet addr show wlan0");
     String ipInfoOutput = commandLine.executeCommand(getDeviceIpCommand);
-    return adbParser.parseGetDeviceIp(ipInfoOutput);
+    String deviceIp = adbParser.parseGetDeviceIp(ipInfoOutput);
+    return deviceIp;
   }
 
   private boolean connectDevice(String deviceIp) {

File: src/main/java/com/github/pedrovgs/androidwifiadb/action/AndroidWiFiADBAction.java
Patch:
@@ -65,7 +65,7 @@ public void run() {
 
   @Override public void showErrorConnectingDeviceNotification(Device device) {
     showNotification(ANDROID_WIFI_ADB_TITLE,
-        "Unable to connect device '" + device.getName() + "'. Review your device WiFi connection.",
+        "Unable to connect device '" + device.getName() + "'. Review your WiFi connection.",
         NotificationType.INFORMATION);
   }
 

File: src/main/java/com/github/pedrovgs/androidwifiadb/adb/ADBParser.java
Patch:
@@ -18,7 +18,8 @@ public List<Device> parseGetDevicesOutput(String adbDevicesOutput) {
     if (splittedOutput.length == 1) {
       return devices;
     }
-    for (String line : splittedOutput) {
+    for (int i = 1; i < splittedOutput.length; i++) {
+      String line = splittedOutput[i];
       String[] deviceLine = line.split("\\t");
       String id = deviceLine[0].substring(0, deviceLine[0].indexOf(" "));
       if (id.contains(IP_SEPARATOR)) {

File: test/com/github/pedrovgs/androidwifiadb/AndroidWiFiADBTest.java
Patch:
@@ -47,7 +47,7 @@ public class AndroidWiFiADBTest extends UnitTest {
     }
   }
 
-  @Test public void shouldShowDeviceConnectionErrorWhenConnectionIsNotExtablished() {
+  @Test public void shouldShowDeviceConnectionErrorWhenConnectionIsNotEstablished() {
     AndroidWiFiADB sut = givenAnAndroidWiFiADB();
     List<Device> devices = givenThereAreSomeDevicesConnectedByUSB();
     givenDevicesAreNotConnectedSuccessfully(devices);

File: src/com/github/pedrovgs/androidwifiadb/View.java
Patch:
@@ -1,10 +1,10 @@
 package com.github.pedrovgs.androidwifiadb;
 
-import java.util.List;
-
 public interface View {
 
   void showNoConnectedDevicesNotification();
 
-  void showConnectedDevicesNotification(List<Device> devices);
+  void showConnectedDeviceNotification(Device device);
+
+  void showErrorConnectingDeviceNotification(Device device);
 }

File: src/com/github/pedrovgs/androidwifiadb/adb/ADBParser.java
Patch:
@@ -25,10 +25,9 @@ public List<Device> parseGetDevicesOutput(String adbDevicesOutput) {
   }
 
   public String parseGetDeviceIp(String ipInfoOutput) {
-    String ip = "";
     String[] splittedOutput = ipInfoOutput.split("\\n");
     int end = splittedOutput[1].indexOf("/");
     int start = splittedOutput[1].indexOf("t");
-    return splittedOutput[1].substring(start + 1, end - 1);
+    return splittedOutput[1].substring(start + 2, end);
   }
 }

