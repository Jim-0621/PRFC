File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/FoodActivity.java
Patch:
@@ -45,7 +45,7 @@ private void setupRecyclerView(RecyclerView rv) {
         BezierLayout headerView = new BezierLayout(this);
         refreshLayout.setHeaderView(headerView);
 //        refreshLayout.setFloatRefresh(false);
-        refreshLayout.setPureScrollModeOn(true);
+        refreshLayout.setPureScrollModeOn();
 //        refreshLayout.setEnableOverlayRefreshView(false);
 //        refreshLayout.setAutoLoadMore(true);
 

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/TkApplication.java
Patch:
@@ -39,8 +39,8 @@ public void onCreate() {
 
         BlockCanary.install(this,new AppBlockCanaryContext()).start();
 
-        TwinklingRefreshLayout.setDefaultHeader(SinaRefreshView.class.getName());
-        TwinklingRefreshLayout.setDefaultFooter(BallPulseView.class.getName());
+//        TwinklingRefreshLayout.setDefaultHeader(SinaRefreshView.class.getName());
+//        TwinklingRefreshLayout.setDefaultFooter(BallPulseView.class.getName());
     }
 
     private class AppBlockCanaryContext extends BlockCanaryContext{}

File: library/src/main/java/com/lcodecore/tkrefreshlayout/processor/IAnimRefresh.java
Patch:
@@ -8,9 +8,9 @@ public interface IAnimRefresh {
     void scrollHeadByMove(float moveY);
     void scrollBottomByMove(float moveY);
     void animHeadToRefresh();
-    void animHeadBack();
+    void animHeadBack(boolean isFinishRefresh);
     void animHeadHideByVy(int vy);
     void animBottomToLoad();
-    void animBottomBack();
+    void animBottomBack(boolean isFinishRefresh);
     void animBottomHideByVy(int vy);
 }

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/CoordinateActivity.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 import android.os.Handler;
+import android.support.v4.widget.SwipeRefreshLayout;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.StaggeredGridLayoutManager;

File: library/src/main/java/com/lcodecore/tkrefreshlayout/processor/RefreshProcessor.java
Patch:
@@ -30,11 +30,11 @@ public boolean interceptTouchEvent(MotionEvent ev) {
             case MotionEvent.ACTION_MOVE:
                 float dx = ev.getX() - mTouchX;
                 float dy = ev.getY() - mTouchY;
-                if (Math.abs(dx) <= Math.abs(dy)) {//滑动允许最大角度为45度
-                    if (dy > 0 && ScrollingUtil.isViewToTop(cp.getTargetView(),cp.getTouchSlop()) && cp.allowPullDown()) {
+                if (Math.abs(dx) <= Math.abs(dy) && Math.abs(dy) > cp.getTouchSlop()) {//滑动允许最大角度为45度
+                    if (dy > 0 && ScrollingUtil.isViewToTop(cp.getTargetView(), cp.getTouchSlop()) && cp.allowPullDown()) {
                         cp.setStatePTD();
                         return true;
-                    } else if (dy < 0 && ScrollingUtil.isViewToBottom(cp.getTargetView(),cp.getTouchSlop()) && cp.allowPullUp()) {
+                    } else if (dy < 0 && ScrollingUtil.isViewToBottom(cp.getTargetView(), cp.getTouchSlop()) && cp.allowPullUp()) {
                         cp.setStatePBU();
                         return true;
                     }

File: library/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java
Patch:
@@ -144,7 +144,7 @@ public void animBottomBack() {
         animLayoutByTime(getVisibleFootHeight(), 0, new AnimatorUpdateListener() {
             @Override
             public void onAnimationUpdate(ValueAnimator animation) {
-                if (!ScrollingUtil.isViewTopBottom(cp.getTargetView(),cp.getTouchSlop())){
+                if (!ScrollingUtil.isViewToBottom(cp.getTargetView(),cp.getTouchSlop())){
                     int dy = getVisibleFootHeight() - (int) animation.getAnimatedValue();
                     //可以让TargetView滚动dy高度，但这样两个方向上滚动感觉画面闪烁，改为dy/2是为了消除闪烁
                     if (dy > 0) {

File: library/src/main/java/com/lcodecore/tkrefreshlayout/utils/ScrollingUtil.java
Patch:
@@ -89,11 +89,10 @@ public static boolean isScrollViewOrWebViewToTop(View view) {
     public static boolean isViewToTop(View view,int mTouchSlop){
         if (view instanceof AbsListView) return isAbsListViewToTop((AbsListView) view);
         if (view instanceof RecyclerView) return isRecyclerViewToTop((RecyclerView) view);
-        System.out.println("View的scrollY:"+view.getScrollY());
         return  (view != null && Math.abs(view.getScrollY()) <= 2 * mTouchSlop);
     }
 
-    public static boolean isViewTopBottom(View view,int mTouchSlop){
+    public static boolean isViewToBottom(View view,int mTouchSlop){
         if (view instanceof AbsListView) return isAbsListViewToBottom((AbsListView) view);
         if (view instanceof RecyclerView) return isRecyclerViewToBottom((RecyclerView) view);
         if (view instanceof WebView) return isWebViewToBottom((WebView) view,mTouchSlop);

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/CoordinateActivity.java
Patch:
@@ -44,7 +44,7 @@ private void setupRecyclerView(RecyclerView rv) {
         refreshLayout.setFloatRefresh(true);
         refreshLayout.setEnableOverScroll(false);
         refreshLayout.setHeaderHeight(140);
-        refreshLayout.setWaveHeight(240);
+        refreshLayout.setMaxHeadHeight(240);
         refreshLayout.setTargetView(rv);
 
         refreshCard();

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/NestedLayoutActivity.java
Patch:
@@ -50,7 +50,7 @@ private void setupRecyclerView(RecyclerView rv) {
 //        ProgressLayout headerView = new ProgressLayout(this);
         BezierLayout headerView = new BezierLayout(this);
         refreshLayout.setHeaderView(headerView);
-        refreshLayout.setWaveHeight(140);
+        refreshLayout.setMaxHeadHeight(140);
 //        refreshLayout.setFloatRefresh(true);
 //        refreshLayout.setPureScrollModeOn(true);
         refreshLayout.setOverScrollBottomShow(false);

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/PhotoActivity.java
Patch:
@@ -46,7 +46,7 @@ private void setupRecyclerView(RecyclerView rv) {
 //        ProgressLayout headerView = new ProgressLayout(this);
         BezierLayout headerView = new BezierLayout(this);
         refreshLayout.setHeaderView(headerView);
-        refreshLayout.setWaveHeight(140);
+        refreshLayout.setMaxHeadHeight(140);
 //        refreshLayout.setFloatRefresh(true);
 //        refreshLayout.setPureScrollModeOn(true);
         refreshLayout.setOverScrollBottomShow(false);

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/WebActivity.java
Patch:
@@ -28,7 +28,7 @@ protected void onCreate(Bundle savedInstanceState) {
         refreshLayout.setFloatRefresh(true);
         refreshLayout.setOverScrollRefreshShow(false);
         refreshLayout.setHeaderHeight(140);
-        refreshLayout.setWaveHeight(240);
+        refreshLayout.setMaxHeadHeight(240);
         refreshLayout.setOverScrollHeight(200);
         refreshLayout.setEnableLoadmore(false);
         header.setColorSchemeResources(R.color.Blue, R.color.Orange, R.color.Yellow, R.color.Green);

File: library/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java
Patch:
@@ -46,7 +46,7 @@ public void scrollHeadByMove(float moveY) {
     }
 
     public void scrollBottomByMove(float moveY) {
-        float offsetY = decelerateInterpolator.getInterpolation(moveY / cp.getBottomHeight() / 2) * moveY / 2;
+        float offsetY = decelerateInterpolator.getInterpolation(moveY / cp.getMaxBottomHeight() / 2) * moveY / 2;
 
         if (cp.getFooter().getVisibility() != VISIBLE) cp.getFooter().setVisibility(VISIBLE);
 

File: library/src/main/java/com/lcodecore/tkrefreshlayout/processor/RefreshProcessor.java
Patch:
@@ -57,7 +57,7 @@ public boolean dealTouchEvent(MotionEvent e) {
                     cp.getAnimProcessor().scrollHeadByMove(dy);
                 } else if (cp.isStatePBU()) {
                     //加载更多的动作
-                    dy = Math.min(cp.getBottomHeight() * 2, Math.abs(dy));
+                    dy = Math.min(cp.getMaxBottomHeight() * 2, Math.abs(dy));
                     dy = Math.max(0, dy);
                     cp.getAnimProcessor().scrollBottomByMove(dy);
                 }

File: library/src/main/java/com/lcodecore/tkrefreshlayout/TwinklingRefreshLayout.java
Patch:
@@ -127,7 +127,6 @@ private void addHeader() {
         FrameLayout headViewLayout = new FrameLayout(getContext());
         LayoutParams layoutParams = new LayoutParams(LayoutParams.MATCH_PARENT, 0);
         layoutParams.addRule(ALIGN_PARENT_TOP);
-        layoutParams.addRule(CENTER_VERTICAL);
 
         FrameLayout extraHeadLayout = new FrameLayout(getContext());
         extraHeadLayout.setId(R.id.ex_header);
@@ -146,7 +145,6 @@ private void addFooter() {
         FrameLayout bottomViewLayout = new FrameLayout(getContext());
         LayoutParams layoutParams2 = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 0);
         layoutParams2.addRule(ALIGN_PARENT_BOTTOM);
-        layoutParams2.addRule(CENTER_VERTICAL);
         bottomViewLayout.setLayoutParams(layoutParams2);
 
         mBottomLayout = bottomViewLayout;

File: library/src/main/java/com/lcodecore/tkrefreshlayout/RefreshProcessor.java
Patch:
@@ -45,7 +45,6 @@ public boolean consumeTouchEvent(MotionEvent e) {
         switch (e.getAction()) {
             case MotionEvent.ACTION_MOVE:
                 float dy = e.getY() - mTouchY;
-
                 if (cp.isStatePTD()) {
                     dy = Math.min(cp.getMaxHeadHeight() * 2, dy);
                     dy = Math.max(0, dy);

File: library/src/main/java/com/lcodecore/tkrefreshlayout/TwinklingRefreshLayout.java
Patch:
@@ -177,11 +177,10 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
 
     @Override
     public boolean onTouchEvent(MotionEvent e) {
-        boolean resume = cp.consumeTouchEvent(e);
-        return resume || super.onTouchEvent(e);
+        boolean consume = cp.consumeTouchEvent(e);
+        return consume || super.onTouchEvent(e);
     }
 
-
     /*************************************
      * 开放api区
      *****************************************/

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/adapter/base/BaseRecyclerAdapter.java
Patch:
@@ -38,7 +38,7 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int position
     }
     @Override
     public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
-        runEnterAnimation(holder.itemView, position);
+//        runEnterAnimation(holder.itemView, position);
         //数据绑定
         if (enableHead) {
             if (position == 0) {

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/WebActivity.java
Patch:
@@ -27,6 +27,8 @@ protected void onCreate(Bundle savedInstanceState) {
         refreshLayout.setWaveHeight(240);
         refreshLayout.setOverScrollHeight(200);
         refreshLayout.setEnableLoadmore(false);
+        header.setColorSchemeResources(R.color.Blue,R.color.Orange,R.color.Yellow,R.color.Green);
+//        header.setColorSchemeColors(0xff4674e7,0xff0ba62c);
 
         mWebView = (WebView) findViewById(R.id.webView);
         mWebView.loadUrl("https://dribbble.com/shots");
@@ -40,7 +42,7 @@ public void onRefresh(final TwinklingRefreshLayout refreshLayout) {
                     public void run() {
                         refreshLayout.finishRefreshing();
                     }
-                }, 2000);
+                }, 4000);
             }
         });
     }

File: library/src/main/java/com/lcodecore/tkrefreshlayout/header/progresslayout/CircleImageView.java
Patch:
@@ -17,7 +17,6 @@
  * called before the animation is actually complete and support shadows on older
  * platforms.
  *
- * @hide
  */
 public class CircleImageView extends ImageView {
 

File: library/src/main/java/com/lcodecore/tkrefreshlayout/header/progresslayout/MaterialProgressDrawable.java
Patch:
@@ -31,7 +31,6 @@
 /**
  * Fancy progress indicator for Material theme.
  *
- * @hide
  */
 public class MaterialProgressDrawable extends Drawable implements Animatable {
     private static final Interpolator LINEAR_INTERPOLATOR = new LinearInterpolator();
@@ -130,8 +129,8 @@ private void setSizeParameters(double progressCircleWidth, double progressCircle
      * Set the overall size for the progress spinner. This updates the radius
      * and stroke width of the ring.
      *
-     * @param size One of {@link MaterialProgressDrawable.LARGE} or
-     *            {@link MaterialProgressDrawable.DEFAULT}
+     * @param size One of { MaterialProgressDrawable.LARGE} or
+     *            {MaterialProgressDrawable.DEFAULT}
      */
     public void updateSizes(@ProgressDrawableSize int size) {
         if (size == LARGE) {

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/FoodActivity.java
Patch:
@@ -48,8 +48,8 @@ private void setupRecyclerView(RecyclerView rv) {
         BezierLayout headerView = new BezierLayout(this);
         refreshLayout.setHeaderView(headerView);
 //        refreshLayout.setFloatRefresh(false);
-//        refreshLayout.setPureScrollModeOn(true);
-        refreshLayout.setEnableOverlayRefreshView(false);
+        refreshLayout.setPureScrollModeOn(true);
+//        refreshLayout.setEnableOverlayRefreshView(false);
 //        refreshLayout.setAutoLoadMore(true);
 
 //        addHeader();

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/GridViewFragment.java
Patch:
@@ -11,8 +11,8 @@
 
 import com.lcodecore.tkrefreshlayout.Footer.LoadingView;
 import com.lcodecore.tkrefreshlayout.header.SinaRefreshView;
-import com.lcodecore.tkrefreshlayout.v2.RefreshListenerAdapter;
-import com.lcodecore.tkrefreshlayout.v2.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.v3.RefreshListenerAdapter;
+import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
 import com.lcodecore.twinklingrefreshlayout.adapter.SimpleAdapter;
 
 /**
@@ -49,6 +49,7 @@ private void setupGridView(GridView gridView) {
         refreshLayout.setOnRefreshListener(new RefreshListenerAdapter(){
             @Override
             public void onRefresh(final TwinklingRefreshLayout refreshLayout) {
+                System.out.println("阿西吧，据说正在刷新...");
                 new Handler().postDelayed(new Runnable() {
                     @Override
                     public void run() {

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/PhotoActivity.java
Patch:
@@ -46,9 +46,10 @@ private void setupRecyclerView(RecyclerView rv) {
 //        ProgressLayout headerView = new ProgressLayout(this);
         BezierLayout headerView = new BezierLayout(this);
         refreshLayout.setHeaderView(headerView);
+        refreshLayout.setWaveHeight(140);
 //        refreshLayout.setFloatRefresh(true);
 //        refreshLayout.setPureScrollModeOn(true);
-        refreshLayout.setEnableOverlayRefreshView(false);
+//        refreshLayout.setEnableOverlayRefreshView(false);
 //        refreshLayout.setAutoLoadMore(true);
 
 //        addHeader();

File: library/src/main/java/com/lcodecore/tkrefreshlayout/header/GoogleDotView.java
Patch:
@@ -180,7 +180,7 @@ public void onPullingDown(float fraction, float maxHeadHeight, float headHeight)
             animator1.cancel();
             invalidate();
         }
-        if (animator2.isRunning()) animator1.cancel();
+        if (animator2.isRunning()) animator2.cancel();
     }
 
     @Override
@@ -193,7 +193,7 @@ public void onPullReleasing(float fraction, float maxHeadHeight, float headHeigh
                 animator1.cancel();
                 invalidate();
             }
-            if (animator2.isRunning()) animator1.cancel();
+            if (animator2.isRunning()) animator2.cancel();
         }
     }
 

File: library/src/main/java/com/lcodecore/tkrefreshlayout/v2/OverScrollProcessor.java
Patch:
@@ -47,11 +47,11 @@ public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float d
                 //TODO 此处不应走finishRefreshing/finishLoadmore，而应该走隐藏head/bottom
                 if (cp.isRefreshing() && distanceY >= mTouchSlop && !cp.isOpenFloatRefresh()) {
                     cp.setRefreshing(false);
-                    cp.getAnimProcessor().animHeadByVy((int) vy);
+                    cp.getAnimProcessor().animHeadHideByVy((int) vy);
                 }
                 if (cp.isLoadingmore() && distanceY <= -mTouchSlop) {
                     cp.setLoadingMore(false);
-                    cp.getAnimProcessor().animBottomByVy((int) vy);
+                    cp.getAnimProcessor().animBottomHideByVy((int) vy);
                 }
 
                 return super.onScroll(e1, e2, distanceX, distanceY);
@@ -60,7 +60,6 @@ public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float d
             @Override
             public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
                 mVelocityY = velocityY;
-                System.out.println("fling速度："+mVelocityY);
 //            if (!(mChildView instanceof AbsListView || mChildView instanceof RecyclerView)) {
                 //既不是AbsListView也不是RecyclerView,由于这些没有实现OnScrollListener接口,无法回调状态,只能采用延时策略
                 if (Math.abs(mVelocityY) >= OVER_SCROLL_MIN_VX) {

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/RecyclerFragment.java
Patch:
@@ -49,9 +49,10 @@ private void setupRecyclerView(RecyclerView rv) {
         rv.setAdapter(cardAdapter);
 
         final TwinklingRefreshLayout refreshLayout = (TwinklingRefreshLayout) rootView.findViewById(R.id.refresh);
-        ProgressLayout headerView = new ProgressLayout(getContext());
-        //BezierLayout headerView = new BezierLayout(getContext());
+//        ProgressLayout headerView = new ProgressLayout(getContext());
+        BezierLayout headerView = new BezierLayout(getContext());
         refreshLayout.setHeaderView(headerView);
+        refreshLayout.setEnableOverlayRefreshView(false);
 
         addHeader();
         refreshCard();

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/GridViewFragment.java
Patch:
@@ -11,7 +11,8 @@
 
 import com.lcodecore.tkrefreshlayout.Footer.LoadingView;
 import com.lcodecore.tkrefreshlayout.header.SinaRefreshView;
-import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.v2.RefreshListenerAdapter;
+import com.lcodecore.tkrefreshlayout.v2.TwinklingRefreshLayout;
 import com.lcodecore.twinklingrefreshlayout.adapter.SimpleAdapter;
 
 /**
@@ -45,7 +46,7 @@ private void setupGridView(GridView gridView) {
         gridView.setAdapter(adapter);
         adapter.refreshCard();
 
-        refreshLayout.setOnRefreshListener(new TwinklingRefreshLayout.OnRefreshListener(){
+        refreshLayout.setOnRefreshListener(new RefreshListenerAdapter(){
             @Override
             public void onRefresh(final TwinklingRefreshLayout refreshLayout) {
                 new Handler().postDelayed(new Runnable() {

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/MainActivity.java
Patch:
@@ -29,8 +29,9 @@ public void init() {
         fragments.add(new GridViewFragment());
         fragments.add(new ScrollViewFragment());
         fragments.add(new WebViewFragment());
+        fragments.add(new BounceFragment());
 
-        String tabTitles[] = new String[]{"RecyclerView", "ListView", "GridView","ScrollView","WebView"};
+        String tabTitles[] = new String[]{"RecyclerView", "ListView", "GridView","ScrollView","WebView","Bounce"};
         List<String> titles = Arrays.asList(tabTitles);
 
         TKFragmentPagerAdapter pagerAdapter = new TKFragmentPagerAdapter(getSupportFragmentManager(),fragments,titles);

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/ScrollViewFragment.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.v2.TwinklingRefreshLayout;
 
 /**
  * Created by lcodecore on 2016/10/1.

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/WebViewFragment.java
Patch:
@@ -8,7 +8,7 @@
 import android.view.ViewGroup;
 import android.webkit.WebView;
 
-import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.v2.TwinklingRefreshLayout;
 
 /**
  * Created by lcodecore on 2016/10/2.

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/GridViewFragment.java
Patch:
@@ -11,7 +11,7 @@
 
 import com.lcodecore.tkrefreshlayout.Footer.LoadingView;
 import com.lcodecore.tkrefreshlayout.header.SinaRefreshView;
-import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
 import com.lcodecore.twinklingrefreshlayout.adapter.SimpleAdapter;
 
 /**

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/ListViewFragment.java
Patch:
@@ -9,7 +9,7 @@
 import android.view.ViewGroup;
 import android.widget.ListView;
 
-import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
 import com.lcodecore.twinklingrefreshlayout.adapter.SimpleAdapter;
 
 /**

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/RecyclerFragment.java
Patch:
@@ -11,7 +11,7 @@
 import android.view.ViewGroup;
 
 import com.lcodecore.tkrefreshlayout.header.bezierlayout.BezierLayout;
-import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
 import com.lcodecore.twinklingrefreshlayout.adapter.CardAdapter;
 import com.lcodecore.twinklingrefreshlayout.adapter.ViewPagerHolder;
 import com.lcodecore.twinklingrefreshlayout.beans.Card;

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/ScrollViewFragment.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
 
 /**
  * Created by lcodecore on 2016/10/1.

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/WebViewFragment.java
Patch:
@@ -8,7 +8,7 @@
 import android.view.ViewGroup;
 import android.webkit.WebView;
 
-import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
 
 /**
  * Created by lcodecore on 2016/10/2.

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/ScrollViewFragment.java
Patch:
@@ -7,7 +7,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
 
 /**
  * Created by lcodecore on 2016/10/1.

File: app/src/main/java/com/lcodecore/twinklingrefreshlayout/WebViewFragment.java
Patch:
@@ -8,7 +8,7 @@
 import android.view.ViewGroup;
 import android.webkit.WebView;
 
-import com.lcodecore.tkrefreshlayout.TwinklingRefreshLayout;
+import com.lcodecore.tkrefreshlayout.v3.TwinklingRefreshLayout;
 
 /**
  * Created by lcodecore on 2016/10/2.

File: library/src/main/java/com/lcodecore/tkrefreshlayout/header/bezierlayout/BezierLayout.java
Patch:
@@ -90,8 +90,9 @@ public void onPullingDown(float fraction,float maxHeadHeight,float headHeight) {
 
                 /*处理圈圈**/
         r1.setCir_x((int) (30 * limitValue(1, fraction)));
-        r1.invalidate();
         r1.setVisibility(View.VISIBLE);
+        r1.invalidate();
+
         r2.setVisibility(View.GONE);
         r2.animate().scaleX((float) 0.1);
         r2.animate().scaleY((float) 0.1);

