File: library/src/main/java/app/dinus/com/loadingdrawable/LoadingView.java
Patch:
@@ -54,7 +54,9 @@ protected void onDetachedFromWindow() {
     @Override
     protected void onVisibilityChanged(View changedView, int visibility) {
         super.onVisibilityChanged(changedView, visibility);
-        if (visibility == View.VISIBLE) {
+
+        final boolean visible = visibility == VISIBLE && getVisibility() == VISIBLE;
+        if (visible) {
             startAnimation();
         } else {
             stopAnimation();

File: library/src/main/java/app/dinus/com/loadingdrawable/render/goods/BalloonLoadingRenderer.java
Patch:
@@ -108,6 +108,8 @@ private void init(Context context) {
         mCannulaColor = DEFAULT_CANNULA_COLOR;
         mPipeBodyColor = DEFAULT_PIPE_BODY_COLOR;
 
+        mProgressText = 10 + PERCENT_SIGN;
+
         setDuration(ANIMATION_DURATION);
     }
 

File: library/src/main/java/app/dinus/com/loadingdrawable/render/circle/jump/SwapLoadingRenderer.java
Patch:
@@ -80,7 +80,7 @@ public void draw(Canvas canvas, Rect bounds) {
         float intervalWidth = circleRadius;
 
         float circleDiameter = mSwapIndex == CIRCLE_COUNT - 1
-                ? circleRadius * 2 * (CIRCLE_COUNT + 1)
+                ? circleRadius * (CIRCLE_COUNT - 1) * 3
                 : circleRadius * 3;
 
         //x^2 + y^2 = (3 * circleRadius / 2) ^ 2

File: library/src/main/java/app/dinus/com/loadingdrawable/render/circle/jump/SwapLoadingRenderer.java
Patch:
@@ -80,7 +80,7 @@ public void draw(Canvas canvas, Rect bounds) {
         float intervalWidth = circleRadius;
 
         float circleDiameter = mSwapIndex == CIRCLE_COUNT - 1
-                ? circleRadius * 2 * (CIRCLE_COUNT + 1)
+                ? circleRadius * (CIRCLE_COUNT - 1) * 3
                 : circleRadius * 3;
 
         //x^2 + y^2 = (3 * circleRadius / 2) ^ 2

