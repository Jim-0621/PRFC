File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -134,8 +134,8 @@ private Drawable createDrawable(int color) {
         shapeDrawable.getPaint().setColor(color);
 
         if (mShadow && !hasLollipopApi()) {
-            Drawable shadowDrawable = getResources().getDrawable(mType == TYPE_NORMAL ? R.drawable.shadow
-                : R.drawable.shadow_mini);
+            Drawable shadowDrawable = getResources().getDrawable(mType == TYPE_NORMAL ? R.drawable.fab_shadow
+                : R.drawable.fab_shadow_mini);
             LayerDrawable layerDrawable = new LayerDrawable(new Drawable[]{shadowDrawable, shapeDrawable});
             layerDrawable.setLayerInset(1, mShadowSize, mShadowSize, mShadowSize, mShadowSize);
             return layerDrawable;

File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -94,7 +94,7 @@ private void init(Context context, AttributeSet attributeSet) {
         mColorNormal = getColor(R.color.material_blue_500);
         mColorPressed = getColor(R.color.material_blue_600);
         mColorRipple = getColor(android.R.color.white);
-        mColorDisabled = getColor(android.R.color.white);
+        mColorDisabled = getColor(android.R.color.darker_gray);
         mType = TYPE_NORMAL;
         mShadow = true;
         mScrollThreshold = getResources().getDimensionPixelOffset(R.dimen.fab_scroll_threshold);

File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -154,7 +154,7 @@ private int getDimension(int id) {
     @SuppressWarnings("deprecation")
     @SuppressLint("NewApi")
     private void setBackgroundCompat(Drawable drawable) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
+        if (Build.VERSION.SDK_INT >= 16) {
             setBackground(drawable);
         } else {
             setBackgroundDrawable(drawable);

File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -21,8 +21,6 @@
 import android.widget.AbsListView;
 import android.widget.ImageButton;
 
-import com.melnykov.floatingactionbutton.R;
-
 /**
  * Android Google+ like floating action button which reacts on the attached list view scrolling events.
  *

File: sample/src/main/java/com/melnykov/fab/sample/MainActivity.java
Patch:
@@ -6,7 +6,7 @@
 import android.widget.ListAdapter;
 import android.widget.ListView;
 import com.melnykov.fab.FloatingActionButton;
-import com.melnykov.floatingactionbutton.sample.R;
+import com.melnykov.fab.sample.R;
 
 
 public class MainActivity extends Activity {

File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -115,7 +115,7 @@ private void initAttributes(Context context, AttributeSet attributeSet) {
                 mColorPressed = attr.getColor(R.styleable.FloatingActionButton_fab_colorPressed,
                         getColor(android.R.color.holo_blue_light));
                 mShadow = attr.getBoolean(R.styleable.FloatingActionButton_fab_shadow, true);
-                mType = attr.getInt(R.styleable.FloatingActionButton_type, TYPE_NORMAL);
+                mType = attr.getInt(R.styleable.FloatingActionButton_fab_type, TYPE_NORMAL);
             } finally {
                 attr.recycle();
             }

File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -85,7 +85,7 @@ public void onRestoreInstanceState(Parcelable state) {
     private void init(Context context, AttributeSet attributeSet) {
         mColorNormal = getColor(android.R.color.holo_blue_dark);
         mColorPressed = getColor(android.R.color.holo_blue_light);
-        mShadow = false;
+        mShadow = true;
         if (attributeSet != null) {
             initAttributes(context, attributeSet);
         }
@@ -98,7 +98,7 @@ private void initAttributes(Context context, AttributeSet attributeSet) {
             try {
                 mColorNormal = attr.getColor(R.styleable.FloatingActionButton_fab_colorNormal, getColor(android.R.color.holo_blue_dark));
                 mColorPressed = attr.getColor(R.styleable.FloatingActionButton_fab_colorPressed, getColor(android.R.color.holo_blue_light));
-                mShadow = attr.getBoolean(R.styleable.FloatingActionButton_fab_shadow, false);
+                mShadow = attr.getBoolean(R.styleable.FloatingActionButton_fab_shadow, true);
             } finally {
                 attr.recycle();
             }

File: library/src/main/java/com/melnykov/fab/FloatingActionButton.java
Patch:
@@ -96,9 +96,9 @@ private void initAttributes(Context context, AttributeSet attributeSet) {
         TypedArray attr = getTypedArray(context, attributeSet, R.styleable.FloatingActionButton);
         if (attr != null) {
             try {
-                mColorNormal = attr.getColor(R.styleable.FloatingActionButton_colorNormal, getColor(android.R.color.holo_blue_dark));
-                mColorPressed = attr.getColor(R.styleable.FloatingActionButton_colorPressed, getColor(android.R.color.holo_blue_light));
-                mShadow = attr.getBoolean(R.styleable.FloatingActionButton_shadow, false);
+                mColorNormal = attr.getColor(R.styleable.FloatingActionButton_fab_colorNormal, getColor(android.R.color.holo_blue_dark));
+                mColorPressed = attr.getColor(R.styleable.FloatingActionButton_fab_colorPressed, getColor(android.R.color.holo_blue_light));
+                mShadow = attr.getBoolean(R.styleable.FloatingActionButton_fab_shadow, false);
             } finally {
                 attr.recycle();
             }

