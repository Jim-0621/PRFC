File: campus-admin/src/main/java/com/oddfar/campus/admin/controller/system/SysUserController.java
Patch:
@@ -18,6 +18,7 @@
 import org.springframework.web.bind.annotation.*;
 
 import java.util.List;
+import java.util.Objects;
 import java.util.stream.Collectors;
 
 /**
@@ -59,7 +60,7 @@ public R getInfo(@PathVariable(value = "userId", required = false) Long userId)
         if (StringUtils.isNotNull(userId)) {
             SysUserEntity sysUser = userService.selectUserById(userId);
             res.put("data", sysUser);
-            res.put("roleIds", sysUser.getRoles().stream().map(SysRoleEntity::getRoleId).collect(Collectors.toList()));
+            res.put("roleIds", sysUser.getRoles().stream().map(SysRoleEntity::getRoleId).filter(Objects::nonNull).collect(Collectors.toList()));
         }
 
         return res;

File: campus-common/src/main/java/com/oddfar/campus/common/utils/http/HttpUtils.java
Patch:
@@ -66,7 +66,7 @@ public static String sendGet(String url, String param, String contentType)
             URLConnection connection = realUrl.openConnection();
             connection.setRequestProperty("accept", "*/*");
             connection.setRequestProperty("connection", "Keep-Alive");
-            connection.setRequestProperty("user-agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            connection.setRequestProperty("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64)");
             connection.connect();
             in = new BufferedReader(new InputStreamReader(connection.getInputStream(), contentType));
             String line;
@@ -128,7 +128,7 @@ public static String sendPost(String url, String param)
             URLConnection conn = realUrl.openConnection();
             conn.setRequestProperty("accept", "*/*");
             conn.setRequestProperty("connection", "Keep-Alive");
-            conn.setRequestProperty("user-agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            conn.setRequestProperty("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64)");
             conn.setRequestProperty("Accept-Charset", "utf-8");
             conn.setRequestProperty("contentType", "utf-8");
             conn.setDoOutput(true);
@@ -194,7 +194,7 @@ public static String sendSSLPost(String url, String param)
             HttpsURLConnection conn = (HttpsURLConnection) console.openConnection();
             conn.setRequestProperty("accept", "*/*");
             conn.setRequestProperty("connection", "Keep-Alive");
-            conn.setRequestProperty("user-agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            conn.setRequestProperty("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64)");
             conn.setRequestProperty("Accept-Charset", "utf-8");
             conn.setRequestProperty("contentType", "utf-8");
             conn.setDoOutput(true);

File: campus-modular/src/main/java/com/oddfar/campus/business/entity/IUser.java
Patch:
@@ -138,9 +138,9 @@ public IUser(Long mobile, JSONObject jsonObject) {
         this.cookie = data.getString("cookie");
         this.jsonResult = StringUtils.substring(jsonObject.toJSONString(), 0, 2000);
 
-        if (StringUtils.isEmpty(this.remark)) {
-            this.remark = data.getString("userName");
-        }
+//        if (StringUtils.isEmpty(this.remark)) {
+//            this.remark = data.getString("userName");
+//        }
 
         Calendar calendar = Calendar.getInstance();
         calendar.add(Calendar.DAY_OF_MONTH, 30);

File: campus-modular/src/main/java/com/oddfar/campus/business/service/impl/IUserServiceImpl.java
Patch:
@@ -40,7 +40,7 @@ public int insertIUser(Long mobile, String deviceId, JSONObject jsonObject) {
             //存在则更新
             IUser iUser = new IUser(mobile, jsonObject);
             iUser.setCreateUser(SecurityUtils.getUserId());
-            BeanUtil.copyProperties(iUser, user);
+            BeanUtil.copyProperties(iUser, user, "shopType", "minute");
             return iUserMapper.updateById(user);
         } else {
             if (StringUtils.isEmpty(deviceId)) {

File: campus-admin/src/main/java/com/oddfar/campus/admin/controller/system/SysProfileController.java
Patch:
@@ -46,7 +46,7 @@ public R profile() {
     /**
      * 修改用户
      */
-    @PutMapping("个人信息管理-修改")
+    @PutMapping(name = "个人信息管理-修改")
     public R updateProfile(@RequestBody SysUserEntity user) {
         LoginUser loginUser = getLoginUser();
         SysUserEntity sysUser = loginUser.getUser();

File: campus-modular/src/main/java/com/oddfar/campus/business/service/IShopService.java
Patch:
@@ -1,11 +1,12 @@
 package com.oddfar.campus.business.service;
 
+import com.baomidou.mybatisplus.extension.service.IService;
 import com.oddfar.campus.business.domain.IMTItemInfo;
 import com.oddfar.campus.business.entity.IShop;
 
 import java.util.List;
 
-public interface IShopService {
+public interface IShopService extends IService<IShop> {
 
     List<IShop> selectShopList();
 

File: campus-modular/src/main/java/com/oddfar/campus/business/controller/IUserController.java
Patch:
@@ -15,8 +15,6 @@
 import org.springframework.security.access.prepost.PreAuthorize;
 import org.springframework.web.bind.annotation.*;
 
-import java.util.Arrays;
-
 /**
  * I茅台用户Controller
  *
@@ -151,6 +149,6 @@ public R edit(@RequestBody IUser iUser) {
     @PreAuthorize("@ss.resourceAuth()")
     @DeleteMapping(value = "/{mobiles}", name = "删除I茅台用户")
     public R remove(@PathVariable Long[] mobiles) {
-        return R.ok(iUserMapper.deleteBatchIds(Arrays.asList(mobiles)));
+        return R.ok(iUserMapper.deleteIUser(mobiles));
     }
 }

File: campus-modular/src/main/java/com/oddfar/campus/business/entity/IUser.java
Patch:
@@ -136,7 +136,7 @@ public IUser(Long mobile, String deviceId, JSONObject jsonObject) {
         this.mobile = mobile;
         this.token = data.getString("token");
         this.cookie = data.getString("cookie");
-        this.deviceId = deviceId.toUpperCase();
+        this.deviceId = deviceId.toLowerCase();
         this.jsonResult = StringUtils.substring(jsonObject.toJSONString(), 0, 2000);
 
         if (StringUtils.isEmpty(this.remark)) {

File: campus-modular/src/main/java/com/oddfar/campus/business/mapper/IUserMapper.java
Patch:
@@ -70,4 +70,5 @@ default List<IUser> selectReservationUserByMinute(int minute) {
     @Select("UPDATE i_user SET `minute` = (SELECT FLOOR(RAND() * 59 + 1)) WHERE random_minute = \"0\"")
     void updateUserMinuteBatch();
 
+    int deleteIUser(Long[] iUserId);
 }

File: campus-modular/src/main/java/com/oddfar/campus/business/service/IUserService.java
Patch:
@@ -62,5 +62,5 @@ public interface IUserService {
      * @param iUserId id
      * @return
      */
-    int deleteIUser(Long iUserId);
+    int deleteIUser(Long[] iUserId);
 }

File: campus-modular/src/main/java/com/oddfar/campus/business/service/impl/IShopServiceImpl.java
Patch:
@@ -144,11 +144,13 @@ public List<IMTItemInfo> getShopsByProvince(String province, String itemId) {
         try {
             res = JSONObject.parseObject(urlRes);
         } catch (JSONException jsonException) {
+            logger.info(url);
             throw new ServiceException("查询所在省市的投放产品和数量error，" + province + "-" + itemId);
         }
 
 //        JSONObject res = JSONObject.parseObject(HttpUtil.get(url));
         if (!res.containsKey("code") || !res.getString("code").equals("2000")) {
+            logger.info(url);
             logger.error("查询所在省市的投放产品和数量error，" + province + "-" + itemId);
             throw new ServiceException("查询所在省市的投放产品和数量error，" + province + "-" + itemId);
         }

File: campus-modular/src/main/java/com/oddfar/campus/business/service/IMTService.java
Patch:
@@ -20,7 +20,7 @@ public interface IMTService {
      *
      * @param mobile 手机号
      */
-    boolean sendCode(String mobile);
+    Boolean sendCode(String mobile);
 
     /**
      * 登录i茅台

File: campus-modular/src/main/java/com/oddfar/campus/business/service/impl/IMTServiceImpl.java
Patch:
@@ -99,7 +99,7 @@ public void refreshMTVersion() {
 
     @Async
     @Override
-    public boolean sendCode(String mobile) {
+    public Boolean sendCode(String mobile) {
         Map<String, Object> data = new HashMap<>();
         data.put("mobile", mobile);
         data.put("md5", signature(mobile));
@@ -138,7 +138,7 @@ public boolean sendCode(String mobile) {
         //成功返回 {"code":2000}
         logger.info("「发送验证码返回」：" + jsonObject.toJSONString());
         if (jsonObject.getString("code").equals("2000")) {
-            return true;
+            return Boolean.TRUE;
         } else {
             logger.error("「发送验证码-失败」：" + jsonObject.toJSONString());
             throw new ServiceException("发送验证码错误");

File: campus-modular/src/main/java/com/oddfar/campus/business/service/IMTLogFactory.java
Patch:
@@ -26,6 +26,7 @@ public static void reservation(IUser iUser, String shopId, JSONObject json) {
 
         if (json.getString("code").equals("2000")) {
             operLog.setLogName("预约成功");
+            operLog.setStatus(0);
         } else {
             operLog.setLogName("预约失败");
             operLog.setStatus(1);

File: campus-modular/src/main/java/com/oddfar/campus/business/service/impl/IMTServiceImpl.java
Patch:
@@ -23,6 +23,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.scheduling.annotation.Async;
 import org.springframework.stereotype.Service;
 
 import javax.annotation.PostConstruct;
@@ -96,6 +97,7 @@ public void refreshMTVersion() {
         getMTVersion();
     }
 
+    @Async
     @Override
     public boolean sendCode(String mobile) {
         Map<String, Object> data = new HashMap<>();

