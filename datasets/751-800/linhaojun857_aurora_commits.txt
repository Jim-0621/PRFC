File: aurora-springboot/src/main/java/com/aurora/constant/AuthConstant.java
Patch:
@@ -10,6 +10,4 @@ public interface AuthConstant {
 
     String TOKEN_PREFIX = "Bearer ";
 
-    String SECRET = "huaweimian";
-
 }

File: aurora-springboot/src/main/java/com/aurora/constant/AuthConstant.java
Patch:
@@ -10,6 +10,4 @@ public interface AuthConstant {
 
     String TOKEN_PREFIX = "Bearer ";
 
-    String SECRET = "huaweimian";
-
 }

File: aurora-springboot/src/main/java/com/aurora/service/impl/UserInfoServiceImpl.java
Patch:
@@ -132,6 +132,7 @@ public void updateUserRole(UserRoleVO userRoleVO) {
     @Transactional(rollbackFor = Exception.class)
     @Override
     public void updateUserDisable(UserDisableVO userDisableVO) {
+        removeOnlineUser(userDisableVO.getId());
         UserInfo userInfo = UserInfo.builder()
                 .id(userDisableVO.getId())
                 .isDisable(userDisableVO.getIsDisable())

File: aurora-springboot/src/main/java/com/aurora/service/impl/UserInfoServiceImpl.java
Patch:
@@ -132,6 +132,7 @@ public void updateUserRole(UserRoleVO userRoleVO) {
     @Transactional(rollbackFor = Exception.class)
     @Override
     public void updateUserDisable(UserDisableVO userDisableVO) {
+        removeOnlineUser(userDisableVO.getId());
         UserInfo userInfo = UserInfo.builder()
                 .id(userDisableVO.getId())
                 .isDisable(userDisableVO.getIsDisable())

File: aurora-springboot/src/main/java/com/aurora/service/impl/ArticleServiceImpl.java
Patch:
@@ -99,7 +99,7 @@ public TopAndFeaturedArticlesDTO listTopAndFeaturedArticles() {
     public PageResultDTO<ArticleCardDTO> listArticles() {
         LambdaQueryWrapper<Article> queryWrapper = new LambdaQueryWrapper<Article>()
                 .eq(Article::getIsDelete, 0)
-                .eq(Article::getStatus, 1);
+                .in(Article::getStatus, 1, 2);
         CompletableFuture<Integer> asyncCount = CompletableFuture.supplyAsync(() -> articleMapper.selectCount(queryWrapper));
         List<ArticleCardDTO> articles = articleMapper.listArticles(PageUtil.getLimitCurrent(), PageUtil.getSize());
         return new PageResultDTO<>(articles, asyncCount.get());

File: aurora-springboot/src/main/java/com/aurora/service/impl/AuroraInfoServiceImpl.java
Patch:
@@ -20,6 +20,7 @@
 import lombok.SneakyThrows;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 import org.springframework.util.DigestUtils;
 
 import javax.servlet.http.HttpServletRequest;
@@ -141,6 +142,7 @@ public AuroraAdminInfoDTO getAuroraAdminInfo() {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public void updateWebsiteConfig(WebsiteConfigVO websiteConfigVO) {
         WebsiteConfig websiteConfig = WebsiteConfig.builder()
                 .id(DEFAULT_CONFIG_ID)
@@ -165,6 +167,7 @@ public WebsiteConfigDTO getWebsiteConfig() {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public void updateAbout(AboutVO aboutVO) {
         About about = About.builder()
                 .id(DEFAULT_ABOUT_ID)

File: aurora-springboot/src/main/java/com/aurora/service/impl/FriendLinkServiceImpl.java
Patch:
@@ -41,6 +41,7 @@ public PageResultDTO<FriendLinkAdminDTO> listFriendLinksAdmin(ConditionVO condit
         return new PageResultDTO<>(friendLinkBackDTOs, (int) friendLinkPage.getTotal());
     }
 
+    //todo 这里事务其实可以不用加，单条失败数据库会自己回滚
     @Transactional(rollbackFor = Exception.class)
     @Override
     public void saveOrUpdateFriendLink(FriendLinkVO friendLinkVO) {

File: aurora-springboot/src/main/java/com/aurora/service/impl/JobServiceImpl.java
Patch:
@@ -100,6 +100,7 @@ public PageResultDTO<JobDTO> listJobs(JobSearchVO jobSearchVO) {
         return new PageResultDTO<>(jobDTOs, asyncCount.get());
     }
 
+    //todo 同理可不加事务
     @SneakyThrows
     @Override
     @Transactional(rollbackFor = Exception.class)

File: aurora-springboot/src/main/java/com/aurora/service/impl/PhotoAlbumServiceImpl.java
Patch:
@@ -81,6 +81,7 @@ public PhotoAlbumAdminDTO getPhotoAlbumByIdAdmin(Integer albumId) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public void deletePhotoAlbumById(Integer albumId) {
         Integer count = photoMapper.selectCount(new LambdaQueryWrapper<Photo>()
                 .eq(Photo::getAlbumId, albumId));

File: aurora-springboot/src/main/java/com/aurora/service/impl/UserAuthServiceImpl.java
Patch:
@@ -116,6 +116,7 @@ public List<UserAreaDTO> listUserAreas(ConditionVO conditionVO) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public void register(UserVO userVO) {
         if (!checkEmail(userVO.getUsername())) {
             throw new BizException("邮箱格式不对!");

File: aurora-springboot/src/main/java/com/aurora/constant/CommonConstant.java
Patch:
@@ -40,4 +40,6 @@ public interface CommonConstant {
 
     String COMMENT_REMIND = "评论提醒";
 
+    String MENTION_REMIND = "@提醒";
+
 }

File: aurora-springboot/src/main/java/com/aurora/controller/CommentController.java
Patch:
@@ -25,7 +25,7 @@ public class CommentController {
     @Autowired
     private CommentService commentService;
 
-    @AccessLimit(seconds = 60,maxCount = 3)
+    @AccessLimit(seconds = 60, maxCount = 3)
     @OptLog(optType = SAVE)
     @ApiOperation("添加评论")
     @PostMapping("/comments/save")

File: aurora-springboot/src/main/java/com/aurora/model/dto/EmailDTO.java
Patch:
@@ -17,8 +17,6 @@ public class EmailDTO {
 
     private String subject;
 
-    private String content;
-
     private Map<String, Object> commentMap;
 
     private String template;

File: aurora-springboot/src/main/java/com/aurora/dto/ArticleAdminViewDTO.java
Patch:
@@ -28,4 +28,5 @@ public class ArticleAdminViewDTO {
     private Integer status;
     private Integer type;
     private String originalUrl;
+    private String password;
 }

File: aurora-springboot/src/main/java/com/aurora/aspect/OperationLogAspect.java
Patch:
@@ -38,7 +38,7 @@ public class OperationLogAspect {
      * 设置操作日志切入点 记录操作日志 在注解的位置切入代码
      */
     @Pointcut("@annotation(com.aurora.annotation.OptLog)")
-    public void OperationLogPointCut() {
+    public void operationLogPointCut() {
     }
 
 
@@ -48,9 +48,9 @@ public void OperationLogPointCut() {
      * @param joinPoint 切入点
      * @param keys      返回结果
      */
-    @AfterReturning(value = "OperationLogPointCut()", returning = "keys")
+    @AfterReturning(value = "operationLogPointCut()", returning = "keys")
     @SuppressWarnings("unchecked")
-    public void saveOptLog(JoinPoint joinPoint, Object keys) {
+    public void saveOperationLog(JoinPoint joinPoint, Object keys) {
         // 获取RequestAttributes
         RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();
         // 从获取RequestAttributes中获取HttpServletRequest的信息

File: aurora-springboot/src/main/java/com/aurora/mapper/ArticleMapper.java
Patch:
@@ -15,9 +15,7 @@
 
 @Repository
 public interface ArticleMapper extends BaseMapper<Article> {
-    ArticleCardDTO getTopArticle();
-
-    List<ArticleCardDTO> listFeaturedArticles();
+    List<ArticleCardDTO> listTopAndFeaturedArticles();
 
     List<ArticleCardDTO> listArticles(@Param("current") Long current, @Param("size") Long size);
 

