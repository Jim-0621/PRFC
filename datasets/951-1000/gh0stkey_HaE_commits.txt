File: src/main/java/burp/action/ExtractContent.java
Patch:
@@ -28,7 +28,7 @@ public Map<String, Map<String, Object>> matchRegex(byte[] content, String header
             String matchContent = "";
             for (Object[] objects : rules.get(i)) {
                 // 遍历获取规则
-                List<String> result = new ArrayList<String>();
+                List<String> result = new ArrayList<>();
                 Map<String, Object> tmpMap = new HashMap<>();
 
                 String name = objects[1].toString();

File: src/main/java/burp/BurpExtender.java
Patch:
@@ -33,7 +33,7 @@ public void registerExtenderCallbacks(final IBurpExtenderCallbacks callbacks)
         this.callbacks = callbacks;
         BurpExtender.helpers = callbacks.getHelpers();
 
-        String version = "2.0.3";
+        String version = "2.0.4";
         callbacks.setExtensionName(String.format("HaE (%s) - Highlighter and Extractor", version));
         // 定义输出
         stdout = new PrintWriter(callbacks.getStdout(), true);

File: src/main/java/burp/yaml/LoadRule.java
Patch:
@@ -18,8 +18,8 @@
 public class LoadRule {
     private static String filePath = "Config.yml";
     public LoadRule(String configfile){
-        init();
         filePath = configfile;
+        init();
     }
 
     // 初始化配置

File: src/main/java/burp/BurpExtender.java
Patch:
@@ -33,7 +33,7 @@ public void registerExtenderCallbacks(final IBurpExtenderCallbacks callbacks)
         this.callbacks = callbacks;
         BurpExtender.helpers = callbacks.getHelpers();
 
-        String version = "2.0.2";
+        String version = "2.0.3";
         callbacks.setExtensionName(String.format("HaE (%s) - Highlighter and Extractor", version));
         // 定义输出
         stdout = new PrintWriter(callbacks.getStdout(), true);

File: src/main/java/burp/action/ExtractContent.java
Patch:
@@ -38,7 +38,7 @@ public Map<String, Map<String, Object>> matchRegex(byte[] content, String header
                 String scope = objects[4].toString();
                 String engine = objects[5].toString();
                 // 判断规则是否开启与作用域
-                if (loaded && (scopeString.contains(scope) || scope.equals("any"))) {
+                if (loaded && (scope.contains(scopeString) || scope.equals("any"))) {
                     switch (scope) {
                         case "any":
                         case "request":

File: src/main/java/burp/BurpExtender.java
Patch:
@@ -33,7 +33,7 @@ public void registerExtenderCallbacks(final IBurpExtenderCallbacks callbacks)
         this.callbacks = callbacks;
         BurpExtender.helpers = callbacks.getHelpers();
 
-        String version = "2.0.1";
+        String version = "2.0.2";
         callbacks.setExtensionName(String.format("HaE (%s) - Highlighter and Extractor", version));
         // 定义输出
         stdout = new PrintWriter(callbacks.getStdout(), true);

File: src/main/java/burp/ui/MainUI.java
Patch:
@@ -221,7 +221,7 @@ class TabTitleEditListener extends MouseAdapter implements ChangeListener, Docum
     protected Boolean isRenamesucc = false;
     protected LoadConfigFile loadfile = new LoadConfigFile();
     protected LoadRule lr = new LoadRule(loadfile.getConfigPath());
-    protected SetRuleConfig setruleconfig = new SetRuleConfig();
+    protected SetRuleConfig setRuleConfig = new SetRuleConfig();
     protected final Action startEditing = new AbstractAction() {
         @Override public void actionPerformed(ActionEvent e) {
             editingIdx = tabbedPane.getSelectedIndex();
@@ -243,7 +243,7 @@ class TabTitleEditListener extends MouseAdapter implements ChangeListener, Docum
             if (editingIdx >= 0 && !title.isEmpty()) {
                 String oldname = tabbedPane.getTitleAt(editingIdx);
                 tabbedPane.setTitleAt(editingIdx, title);
-                setruleconfig.rename(oldname,title);
+                setRuleConfig.rename(oldname,title);
             }
             cancelEditing.actionPerformed(null);
         }
@@ -298,7 +298,7 @@ protected TabTitleEditListener(JTabbedPane tabbedPane) {
     }
     public void newTab(){
         Object[][] data = new Object[][]{{false, "New Name", "(New Regex)", "gray", "any", "nfa"}};
-        insertTab(tabbedPane,setruleconfig.newRules(),data);
+        insertTab(tabbedPane,setRuleConfig.newRules(),data);
     }
     public void insertTab(@NotNull JTabbedPane pane,String title,Object[][] data){
         pane.addTab(title,new RulePane(data,pane));

File: src/main/java/burp/yaml/SetRuleConfig.java
Patch:
@@ -98,7 +98,7 @@ public String newRules(){
         lr = new LoadRule(loadfile.getConfigPath());
         config = lr.getConfig();
         String name = "New ";
-        Object[][] data = new Object[][]{{false,"newName","newRegex","gray","any","nfa"}};
+        Object[][] data = new Object[][]{{false, "New Name", "(New Regex)", "gray", "any", "nfa"}};
         while (config.containsKey(name+i)){
             i++;
         }

