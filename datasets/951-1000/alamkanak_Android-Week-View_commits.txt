File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -1130,16 +1130,18 @@ private void computePositionOfEvents(List<EventRect> eventRects) {
         List<List<EventRect>> collisionGroups = new ArrayList<List<EventRect>>();
         for (EventRect eventRect : eventRects) {
             boolean isPlaced = false;
+
             outerLoop:
             for (List<EventRect> collisionGroup : collisionGroups) {
                 for (EventRect groupEvent : collisionGroup) {
-                    if (isEventsCollide(groupEvent.event, eventRect.event)) {
+                    if (isEventsCollide(groupEvent.event, eventRect.event) && groupEvent.event.isAllDay() == eventRect.event.isAllDay()) {
                         collisionGroup.add(eventRect);
                         isPlaced = true;
                         break outerLoop;
                     }
                 }
             }
+
             if (!isPlaced) {
                 List<EventRect> newGroup = new ArrayList<EventRect>();
                 newGroup.add(eventRect);

File: sample/src/main/java/com/alamkanak/weekview/sample/BasicActivity.java
Patch:
@@ -118,7 +118,6 @@ public List<? extends WeekViewEvent> onMonthChange(int newYear, int newMonth) {
 
         //AllDay event
         startTime = Calendar.getInstance();
-        startTime.set(Calendar.DAY_OF_MONTH, 4);
         startTime.set(Calendar.HOUR_OF_DAY, 0);
         startTime.set(Calendar.MINUTE, 0);
         startTime.set(Calendar.MONTH, newMonth-1);

File: sample/src/main/java/com/alamkanak/weekview/sample/BasicActivity.java
Patch:
@@ -118,7 +118,7 @@ public List<? extends WeekViewEvent> onMonthChange(int newYear, int newMonth) {
 
         //AllDay event
         startTime = Calendar.getInstance();
-        startTime.set(Calendar.DAY_OF_MONTH, 6);
+        startTime.set(Calendar.DAY_OF_MONTH, 4);
         startTime.set(Calendar.HOUR_OF_DAY, 0);
         startTime.set(Calendar.MINUTE, 0);
         startTime.set(Calendar.MONTH, newMonth-1);

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -364,7 +364,7 @@ private void init() {
 
         // Measure settings for time column.
         mTimeTextPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-        mTimeTextPaint.setTextAlign(Paint.Align.CENTER);
+        mTimeTextPaint.setTextAlign(Paint.Align.RIGHT);
         mTimeTextPaint.setTextSize(mTextSize);
         mTimeTextPaint.setColor(mHeaderColumnTextColor);
         Rect rect = new Rect();

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -534,7 +534,7 @@ private void drawHeaderRowAndEvents(Canvas canvas) {
                 maxAmountOfAllDayEventsInOneDay = Math.max(maxAmountOfAllDayEventsInOneDay, amountOfAllDayEvents);
             }
         }
-        mHeaderHeight = mHeaderTextHeight + mAllDayEventHeight*maxAmountOfAllDayEventsInOneDay;
+        mHeaderHeight = mHeaderTextHeight + (mAllDayEventHeight + mHeaderMarginBottom) * Math.min(1, maxAmountOfAllDayEventsInOneDay);
         Calendar today = today();
 
         if (mAreDimensionsInvalid) {

File: sample/src/main/java/com/alamkanak/weekview/sample/AsynchronousActivity.java
Patch:
@@ -71,6 +71,7 @@ public void success(List<Event> events, Response response) {
 
     @Override
     public void failure(RetrofitError error) {
+        error.printStackTrace();
         Toast.makeText(this, R.string.async_error, Toast.LENGTH_SHORT).show();
     }
 }

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -324,7 +324,7 @@ public WeekView(Context context, AttributeSet attrs, int defStyleAttr) {
             mTodayHeaderTextColor = a.getColor(R.styleable.WeekView_todayHeaderTextColor, mTodayHeaderTextColor);
             mEventTextSize = a.getDimensionPixelSize(R.styleable.WeekView_eventTextSize, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, mEventTextSize, context.getResources().getDisplayMetrics()));
             mEventTextColor = a.getColor(R.styleable.WeekView_eventTextColor, mEventTextColor);
-            mEventPadding = a.getDimensionPixelSize(R.styleable.WeekView_hourSeparatorHeight, mEventPadding);
+            mEventPadding = a.getDimensionPixelSize(R.styleable.WeekView_eventPadding, mEventPadding);
             mHeaderColumnBackgroundColor = a.getColor(R.styleable.WeekView_headerColumnBackground, mHeaderColumnBackgroundColor);
             mDayNameLength = a.getInteger(R.styleable.WeekView_dayNameLength, mDayNameLength);
             mOverlappingEventGap = a.getDimensionPixelSize(R.styleable.WeekView_overlappingEventGap, mOverlappingEventGap);

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -324,7 +324,7 @@ public WeekView(Context context, AttributeSet attrs, int defStyleAttr) {
             mTodayHeaderTextColor = a.getColor(R.styleable.WeekView_todayHeaderTextColor, mTodayHeaderTextColor);
             mEventTextSize = a.getDimensionPixelSize(R.styleable.WeekView_eventTextSize, (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, mEventTextSize, context.getResources().getDisplayMetrics()));
             mEventTextColor = a.getColor(R.styleable.WeekView_eventTextColor, mEventTextColor);
-            mEventPadding = a.getDimensionPixelSize(R.styleable.WeekView_hourSeparatorHeight, mEventPadding);
+            mEventPadding = a.getDimensionPixelSize(R.styleable.WeekView_eventPadding, mEventPadding);
             mHeaderColumnBackgroundColor = a.getColor(R.styleable.WeekView_headerColumnBackground, mHeaderColumnBackgroundColor);
             mDayNameLength = a.getInteger(R.styleable.WeekView_dayNameLength, mDayNameLength);
             mOverlappingEventGap = a.getDimensionPixelSize(R.styleable.WeekView_overlappingEventGap, mOverlappingEventGap);

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -925,6 +925,8 @@ else if (periodToFetch == mFetchedPeriod+1){
      * @param event The event to cache.
      */
     private void cacheEvent(WeekViewEvent event) {
+        if(event.getStartTime().compareTo(event.getEndTime()) >= 0)
+            return;
         if (!isSameDay(event.getStartTime(), event.getEndTime())) {
             // Add first day.
             Calendar endTime = (Calendar) event.getStartTime().clone();

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -175,7 +175,7 @@ public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float ve
                 mScroller.fling((int) mCurrentOrigin.x, 0, (int) (velocityX * mXScrollingSpeed), 0, Integer.MIN_VALUE, Integer.MAX_VALUE, 0, 0);
             }
             else if (mCurrentFlingDirection == Direction.VERTICAL){
-                mScroller.fling(0, (int) mCurrentOrigin.y, 0, (int) velocityY, 0, 0, (int) -(mHourHeight * 24 + mHeaderTextHeight + mHeaderRowPadding * 2 - getHeight()), 0);
+                mScroller.fling(0, (int) mCurrentOrigin.y, 0, (int) velocityY, 0, 0, (int) -(mHourHeight * 24 + mHeaderTextHeight + mHeaderRowPadding * 2 + mHeaderMarginBottom + mTimeTextHeight/2 - getHeight()), 0);
             }
 
             ViewCompat.postInvalidateOnAnimation(WeekView.this);
@@ -500,8 +500,8 @@ else if(mNewHourHeight > mMaxHourHeight)
         }
 
         //if the new mCurrentOrigin.y is invalid, make it valid.
-        if (mCurrentOrigin.y < getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom)
-            mCurrentOrigin.y = getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom;
+        if (mCurrentOrigin.y < getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom - mTimeTextHeight/2)
+            mCurrentOrigin.y = getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom - mTimeTextHeight/2;
         //Don't put an else if because it will trigger a glitch when completly zoomed out and scrolling vertically.
         if(mCurrentOrigin.y > 0)
             mCurrentOrigin.y = 0;

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -175,7 +175,7 @@ public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float ve
                 mScroller.fling((int) mCurrentOrigin.x, 0, (int) (velocityX * mXScrollingSpeed), 0, Integer.MIN_VALUE, Integer.MAX_VALUE, 0, 0);
             }
             else if (mCurrentFlingDirection == Direction.VERTICAL){
-                mScroller.fling(0, (int) mCurrentOrigin.y, 0, (int) velocityY, 0, 0, (int) -(mHourHeight * 24 + mHeaderTextHeight + mHeaderRowPadding * 2 - getHeight()), 0);
+                mScroller.fling(0, (int) mCurrentOrigin.y, 0, (int) velocityY, 0, 0, (int) -(mHourHeight * 24 + mHeaderTextHeight + mHeaderRowPadding * 2 + mHeaderMarginBottom + mTimeTextHeight/2 - getHeight()), 0);
             }
 
             ViewCompat.postInvalidateOnAnimation(WeekView.this);
@@ -500,8 +500,8 @@ else if(mNewHourHeight > mMaxHourHeight)
         }
 
         //if the new mCurrentOrigin.y is invalid, make it valid.
-        if (mCurrentOrigin.y < getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom)
-            mCurrentOrigin.y = getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom;
+        if (mCurrentOrigin.y < getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom - mTimeTextHeight/2)
+            mCurrentOrigin.y = getHeight() - mHourHeight * 24 - mHeaderTextHeight - mHeaderRowPadding * 2 - mHeaderMarginBottom - mTimeTextHeight/2;
         //Don't put an else if because it will trigger a glitch when completly zoomed out and scrolling vertically.
         if(mCurrentOrigin.y > 0)
             mCurrentOrigin.y = 0;

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -895,9 +895,9 @@ private void cacheEvent(WeekViewEvent event) {
             Calendar startTime = (Calendar) event.getEndTime().clone();
             startTime.set(Calendar.HOUR_OF_DAY, 0);
             startTime.set(Calendar.MINUTE, 0);
-            WeekViewEvent event1 = new WeekViewEvent(event.getId(), event.getName(), event.getStartTime(), endTime);
+            WeekViewEvent event1 = new WeekViewEvent(event.getId(), event.getName(), event.getLocation(), event.getStartTime(), endTime);
             event1.setColor(event.getColor());
-            WeekViewEvent event2 = new WeekViewEvent(event.getId(), event.getName(), startTime, event.getEndTime());
+            WeekViewEvent event2 = new WeekViewEvent(event.getId(), event.getName(), event.getLocation(), startTime, event.getEndTime());
             event2.setColor(event.getColor());
             mEventRects.add(new EventRect(event1, event, null));
             mEventRects.add(new EventRect(event2, event, null));

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -524,8 +524,8 @@ else if(mNewHourHeight > mMaxHourHeight)
         Calendar oldFirstVisibleDay = mFirstVisibleDay;
         mFirstVisibleDay = (Calendar) today.clone();
         mFirstVisibleDay.add(Calendar.DATE, -(Math.round(mCurrentOrigin.x / (mWidthPerDay + mColumnGap))));
-        if(!mFirstVisibleDay.equals(oldFirstVisibleDay) && mScrolledListener != null){
-            mScrolledListener.onFirstVisibleDayChanged(mFirstVisibleDay, oldFirstVisibleDay);
+        if(!mFirstVisibleDay.equals(oldFirstVisibleDay) && mScrollListener != null){
+            mScrollListener.onFirstVisibleDayChanged(mFirstVisibleDay, oldFirstVisibleDay);
         }
         for (int dayNumber = leftDaysWithGaps + 1;
              dayNumber <= leftDaysWithGaps + mNumberOfVisibleDays + 1;

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -887,9 +887,9 @@ private void cacheEvent(WeekViewEvent event) {
             Calendar startTime = (Calendar) event.getEndTime().clone();
             startTime.set(Calendar.HOUR_OF_DAY, 0);
             startTime.set(Calendar.MINUTE, 0);
-            WeekViewEvent event1 = new WeekViewEvent(event.getId(), event.getName(), event.getStartTime(), endTime);
+            WeekViewEvent event1 = new WeekViewEvent(event.getId(), event.getName(), event.getLocation(), event.getStartTime(), endTime);
             event1.setColor(event.getColor());
-            WeekViewEvent event2 = new WeekViewEvent(event.getId(), event.getName(), startTime, event.getEndTime());
+            WeekViewEvent event2 = new WeekViewEvent(event.getId(), event.getName(), event.getLocation(), startTime, event.getEndTime());
             event2.setColor(event.getColor());
             mEventRects.add(new EventRect(event1, event, null));
             mEventRects.add(new EventRect(event2, event, null));

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -524,8 +524,8 @@ else if(mNewHourHeight > mMaxHourHeight)
         Calendar oldFirstVisibleDay = mFirstVisibleDay;
         mFirstVisibleDay = (Calendar) today.clone();
         mFirstVisibleDay.add(Calendar.DATE, -(Math.round(mCurrentOrigin.x / (mWidthPerDay + mColumnGap))));
-        if(!mFirstVisibleDay.equals(oldFirstVisibleDay) && mScrolledListener != null){
-            mScrolledListener.onFirstVisibleDayChanged(mFirstVisibleDay, oldFirstVisibleDay);
+        if(!mFirstVisibleDay.equals(oldFirstVisibleDay) && mScrollListener != null){
+            mScrollListener.onFirstVisibleDayChanged(mFirstVisibleDay, oldFirstVisibleDay);
         }
         for (int dayNumber = leftDaysWithGaps + 1;
              dayNumber <= leftDaysWithGaps + mNumberOfVisibleDays + 1;

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -400,7 +400,7 @@ private void drawHeaderRowAndEvents(Canvas canvas) {
 
             // If the week view is being drawn for the first time, then consider the first day of the week.
             if(mNumberOfVisibleDays >= 7 && mToday.get(Calendar.DAY_OF_WEEK) != mFirstDayOfWeek) {
-                int difference = 7 + (mToday.get(Calendar.DAY_OF_WEEK) - mFirstDayOfWeek);
+                int difference = (7 + (mToday.get(Calendar.DAY_OF_WEEK) - mFirstDayOfWeek)) % 7;
                 mCurrentOrigin.x += (mWidthPerDay + mColumnGap) * difference;
             }
         }

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -400,7 +400,7 @@ private void drawHeaderRowAndEvents(Canvas canvas) {
 
             // If the week view is being drawn for the first time, then consider the first day of the week.
             if(mNumberOfVisibleDays >= 7 && mToday.get(Calendar.DAY_OF_WEEK) != mFirstDayOfWeek) {
-                int difference = 7 + (mToday.get(Calendar.DAY_OF_WEEK) - mFirstDayOfWeek);
+                int difference = (7 + (mToday.get(Calendar.DAY_OF_WEEK) - mFirstDayOfWeek)) % 7;
                 mCurrentOrigin.x += (mWidthPerDay + mColumnGap) * difference;
             }
         }

File: sample/src/main/java/com/alamkanak/weekview/sample/MainActivity.java
Patch:
@@ -1,8 +1,8 @@
 package com.alamkanak.weekview.sample;
 
-import android.app.Activity;
 import android.graphics.RectF;
 import android.os.Bundle;
+import android.support.v7.app.ActionBarActivity;
 import android.util.TypedValue;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -18,9 +18,9 @@
 
 /**
  * Created by Raquib-ul-Alam Kanak on 7/21/2014.
- * Website: http://april-shower.com
+ * Website: http://alamkanak.github.io
  */
-public class MainActivity extends Activity implements WeekView.MonthChangeListener,
+public class MainActivity extends ActionBarActivity implements WeekView.MonthChangeListener,
         WeekView.EventClickListener, WeekView.EventLongPressListener {
 
     private static final int TYPE_DAY_VIEW = 1;

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -1387,7 +1387,8 @@ public void goToDate(Calendar date) {
         today.set(Calendar.MILLISECOND, 0);
 
         int dateDifference = (int) ((date.getTimeInMillis() - today.getTimeInMillis()) / (1000 * 60 * 60 * 24));
-        mStickyScroller.startScroll((int) mCurrentOrigin.x, 0, (int) (-dateDifference*(mWidthPerDay + mColumnGap)-mCurrentOrigin.x), 0);
+        mCurrentOrigin.x = - dateDifference * (mWidthPerDay + mColumnGap);
+        // mStickyScroller.startScroll((int) mCurrentOrigin.x, 0, (int) (-dateDifference*(mWidthPerDay + mColumnGap)-mCurrentOrigin.x), 0);
         invalidate();
     }
 

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -413,7 +413,7 @@ private void drawHeaderRowAndEvents(Canvas canvas) {
 
         // Iterate through each day.
         mFirstVisibleDay = (Calendar) mToday.clone();
-        mFirstVisibleDay.add(Calendar.DATE, leftDaysWithGaps);
+        mFirstVisibleDay.add(Calendar.DATE, -(Math.round(mCurrentOrigin.x / (mWidthPerDay + mColumnGap))));
         for (int dayNumber = leftDaysWithGaps + 1;
              dayNumber <= leftDaysWithGaps + mNumberOfVisibleDays + 1;
              dayNumber++) {

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -158,7 +158,7 @@ public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float d
                     mCurrentScrollDirection = Direction.VERTICAL;
                 }
             }
-            mDistanceX = distanceX;
+            mDistanceX = distanceX * mXScrollingSpeed;
             mDistanceY = distanceY;
             invalidate();
             return true;

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -1359,7 +1359,8 @@ public void goToDate(Calendar date) {
         today.set(Calendar.SECOND, 0);
         today.set(Calendar.MILLISECOND, 0);
 
-        int dateDifference = (int) ((date.getTimeInMillis() - today.getTimeInMillis()) / (1000 * 60 * 60 * 24));
+        long day = 1000L * 60L * 60L * 24L;
+        long dateDifference = (date.getTimeInMillis()/day) - (today.getTimeInMillis()/day);
         mCurrentOrigin.x = - dateDifference * (mWidthPerDay + mColumnGap);
 
         invalidate();

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -1197,15 +1197,17 @@ public void goToDate(Calendar date) {
         date.set(Calendar.HOUR_OF_DAY, 0);
         date.set(Calendar.MINUTE, 0);
         date.set(Calendar.SECOND, 0);
+        date.set(Calendar.MILLISECOND, 0);
 
         mRefreshEvents = true;
 
         Calendar today = Calendar.getInstance();
         today.set(Calendar.HOUR_OF_DAY, 0);
         today.set(Calendar.MINUTE, 0);
         today.set(Calendar.SECOND, 0);
+        today.set(Calendar.MILLISECOND, 0);
 
-        int dateDifference = (int) (date.getTimeInMillis() - today.getTimeInMillis()) / (1000 * 60 * 60 * 24);
+        int dateDifference = (int) ((date.getTimeInMillis() - today.getTimeInMillis()) / (1000 * 60 * 60 * 24));
         mCurrentOrigin.x = - dateDifference * (mWidthPerDay + mColumnGap);
 
         invalidate();

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -1193,15 +1193,17 @@ public void goToDate(Calendar date) {
         date.set(Calendar.HOUR_OF_DAY, 0);
         date.set(Calendar.MINUTE, 0);
         date.set(Calendar.SECOND, 0);
+        date.set(Calendar.MILLISECOND, 0);
 
         mRefreshEvents = true;
 
         Calendar today = Calendar.getInstance();
         today.set(Calendar.HOUR_OF_DAY, 0);
         today.set(Calendar.MINUTE, 0);
         today.set(Calendar.SECOND, 0);
+        today.set(Calendar.MILLISECOND, 0);
 
-        int dateDifference = (int) (date.getTimeInMillis() - today.getTimeInMillis()) / (1000 * 60 * 60 * 24);
+        int dateDifference = (int) ((date.getTimeInMillis() - today.getTimeInMillis()) / (1000 * 60 * 60 * 24));
         mCurrentOrigin.x = - dateDifference * (mWidthPerDay + mColumnGap);
 
         invalidate();

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -465,11 +465,11 @@ private void drawEvents(Calendar date, float startFromPixel, Canvas canvas) {
 
                     // Calculate left and right.
                     float left = startFromPixel + mEventRects.get(i).left * mWidthPerDay;
-                    if (left != startFromPixel)
+                    if (left < startFromPixel)
                         left += mOverlappingEventGap;
                     float originalLeft = left;
                     float right = left + mEventRects.get(i).width * mWidthPerDay;
-                    if (right != startFromPixel + mWidthPerDay)
+                    if (right < startFromPixel + mWidthPerDay)
                         right -= mOverlappingEventGap;
                     if (left < mHeaderColumnWidth) left = mHeaderColumnWidth;
 

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -619,6 +619,7 @@ private void getMoreEvents(Calendar day) {
                 if (isSameDay(eventRect.event.getStartTime(), dayCounter))
                     eventRects.add(eventRect);
             }
+
             computePositionOfEvents(eventRects);
             dayCounter.add(Calendar.DATE, 1);
         }
@@ -739,7 +740,7 @@ private boolean isEventsCollide(WeekViewEvent event1, WeekViewEvent event2) {
         long end1 = event1.getEndTime().getTimeInMillis();
         long start2 = event2.getStartTime().getTimeInMillis();
         long end2 = event2.getEndTime().getTimeInMillis();
-        return (start1 > start2 && start1 < end2) || (end1 > start2 && end1 < end2);
+        return (start1 >= start2 && start1 <= end2) || (end1 >= start2 && end1 <= end2);
     }
 
 

File: library/src/main/java/com/alamkanak/weekview/WeekView.java
Patch:
@@ -214,7 +214,7 @@ public WeekView(Context context, AttributeSet attrs, int defStyleAttr) {
             mEventTextColor = a.getColor(R.styleable.WeekView_eventTextColor, mEventTextColor);
             mEventPadding = a.getDimensionPixelSize(R.styleable.WeekView_hourSeparatorHeight, mEventPadding);
             mHeaderColumnBackgroundColor = a.getColor(R.styleable.WeekView_headerColumnBackground, mHeaderColumnBackgroundColor);
-            mDayNameLength = a.getColor(R.styleable.WeekView_dayNameLength, mDayNameLength);
+            mDayNameLength = a.getInteger(R.styleable.WeekView_dayNameLength, mDayNameLength);
         } finally {
             a.recycle();
         }

