File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java
Patch:
@@ -484,7 +484,9 @@ private static DiagnosticProperties doJFR(String diagnosticCommand) {
 						Timer timer = new Timer();
 						TimerTask jfrDumpTask = new TimerTask() {
 							public void run() {
-								VM.stopJFR();
+								if (VM.isJFRRecordingStarted()) {
+									VM.stopJFR();
+								}
 							}
 						};
 						timer.schedule(jfrDumpTask, duration);

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/HeapArrayTests1.java
Patch:
@@ -44,7 +44,7 @@
 
 /**
  * Test cases for JEP 454: Foreign Linker API for argument/return struct in the
- * case of contiguous/discontigous heap array in downcall.
+ * case of contiguous/discontiguous heap array in downcall.
  *
  * Note:
  * The test suite is mainly intended for the following Clinker API:

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/HeapArrayTests2.java
Patch:
@@ -44,7 +44,7 @@
 
 /**
  * Test cases for JEP 454: Foreign Linker API for argument/return struct in the
- * case of contiguous/discontigous heap array in downcall.
+ * case of contiguous/discontiguous heap array in downcall.
  *
  * Note:
  * The test suite is mainly intended for the following Clinker API:

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/HeapArrayTests1.java
Patch:
@@ -44,7 +44,7 @@
 
 /**
  * Test cases for JEP 454: Foreign Linker API for argument/return struct in the
- * case of contiguous/discontigous heap array in downcall.
+ * case of contiguous/discontiguous heap array in downcall.
  *
  * Note:
  * The test suite is mainly intended for the following Clinker API:

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/HeapArrayTests2.java
Patch:
@@ -44,7 +44,7 @@
 
 /**
  * Test cases for JEP 454: Foreign Linker API for argument/return struct in the
- * case of contiguous/discontigous heap array in downcall.
+ * case of contiguous/discontiguous heap array in downcall.
  *
  * Note:
  * The test suite is mainly intended for the following Clinker API:

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/PointerGenerator.java
Patch:
@@ -511,7 +511,7 @@ private static void writerUserData(String beginTag, String endTag, List<String>
 	}
 
 	private void writeGeneratedWarning(PrintWriter writer) {
-		writer.println("/**");
+		writer.println("/*");
 		writer.println(" * WARNING!!! GENERATED FILE");
 		writer.println(" *");
 		writer.println(" * This class is generated.");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/PointerGenerator.java
Patch:
@@ -511,7 +511,7 @@ private static void writerUserData(String beginTag, String endTag, List<String>
 	}
 
 	private void writeGeneratedWarning(PrintWriter writer) {
-		writer.println("/**");
+		writer.println("/*");
 		writer.println(" * WARNING!!! GENERATED FILE");
 		writer.println(" *");
 		writer.println(" * This class is generated.");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/J9DDRClassLoader.java
Patch:
@@ -175,14 +175,16 @@ private byte[] loadClassBytes(String binaryName) throws ClassNotFoundException {
 		return baos.toByteArray();
 	}
 
+	@SuppressWarnings("deprecation")
 	private void definePackage(String name) {
 		// Split off the class name
 		int finalSeparator = name.lastIndexOf('.');
 
 		if (finalSeparator != -1) {
 			String packageName = name.substring(0, finalSeparator);
 
-			if (getDefinedPackage(packageName) == null) {
+			// getDefinedPackage() is only available in Java 9+
+			if (getPackage(packageName) == null) {
 				// TODO think about the correct values here
 				definePackage(packageName, "J9DDR", "0.1", "IBM", "J9DDR", "0.1", "IBM", null);
 			}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/plugins/DDRInteractiveClassLoader.java
Patch:
@@ -124,14 +124,16 @@ private void examineClass(URL url, Class<?> clazz) {
 		}
 	}
 
+	@SuppressWarnings("deprecation")
 	private void definePackage(String name) {
 		// split off the class name
 		int finalSeparator = name.lastIndexOf('/');
 
 		if (finalSeparator != -1) {
 			String packageName = name.substring(0, finalSeparator);
 
-			if (getDefinedPackage(packageName) == null) {
+			// getDefinedPackage() is only available in Java 9+
+			if (getPackage(packageName) == null) {
 				definePackage(packageName, "J9DDR", "0.1", "IBM", "J9DDR", "0.1", "IBM", null);
 			}
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/J9DDRClassLoader.java
Patch:
@@ -175,14 +175,16 @@ private byte[] loadClassBytes(String binaryName) throws ClassNotFoundException {
 		return baos.toByteArray();
 	}
 
+	@SuppressWarnings("deprecation")
 	private void definePackage(String name) {
 		// Split off the class name
 		int finalSeparator = name.lastIndexOf('.');
 
 		if (finalSeparator != -1) {
 			String packageName = name.substring(0, finalSeparator);
 
-			if (getDefinedPackage(packageName) == null) {
+			// getDefinedPackage() is only available in Java 9+
+			if (getPackage(packageName) == null) {
 				// TODO think about the correct values here
 				definePackage(packageName, "J9DDR", "0.1", "IBM", "J9DDR", "0.1", "IBM", null);
 			}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/plugins/DDRInteractiveClassLoader.java
Patch:
@@ -124,14 +124,16 @@ private void examineClass(URL url, Class<?> clazz) {
 		}
 	}
 
+	@SuppressWarnings("deprecation")
 	private void definePackage(String name) {
 		// split off the class name
 		int finalSeparator = name.lastIndexOf('/');
 
 		if (finalSeparator != -1) {
 			String packageName = name.substring(0, finalSeparator);
 
-			if (getDefinedPackage(packageName) == null) {
+			// getDefinedPackage() is only available in Java 9+
+			if (getPackage(packageName) == null) {
 				definePackage(packageName, "J9DDR", "0.1", "IBM", "J9DDR", "0.1", "IBM", null);
 			}
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -49,7 +49,7 @@
 import com.ibm.j9ddr.logging.LoggerNames;
 
 // TODO: Lazy initializing has been removed.  Need to decide if it stays out.
-public class StructureReader {
+public final class StructureReader {
 	public static final int VERSION = 1;
 	public static final int J9_STRUCTURES_EYECATCHER = 0xFACEDEB8; // eyecatcher / magic identifier for a J9 structure file
 	private Map<String, StructureDescriptor> structures = null;
@@ -63,8 +63,7 @@ public class StructureReader {
 	private static final Logger logger = Logger.getLogger(LoggerNames.LOGGER_STRUCTURE_READER);
 	private StructureHeader header;
 
-	@SuppressWarnings("rawtypes")
-	public static final Class<?>[] STRUCTURE_CONSTRUCTOR_SIGNATURE = new Class[] { Long.TYPE };
+	public static final Class<?>[] STRUCTURE_CONSTRUCTOR_SIGNATURE = new Class<?>[] { Long.TYPE };
 	public static final byte BIT_FIELD_FORMAT_LITTLE_ENDIAN = 1;
 	public static final byte BIT_FIELD_FORMAT_BIG_ENDIAN = 2;
 	public static final int BIT_FIELD_CELL_SIZE = 32;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/VMDataFactory.java
Patch:
@@ -221,7 +221,7 @@ public J9DDRClassLoader run() {
 			// Load an instantiate a VM specific J9RASPointer via a call to J9RASPointer.cast(long);
 			String basePackageName = structureReader.getPackageName(PackageNameType.POINTER_PACKAGE_DOT_NAME);
 			Class<?> rasClazz = ddrClassLoader.loadClass(basePackageName + ".J9RASPointer");
-			Method getStructureMethod = rasClazz.getDeclaredMethod("cast", new Class[] { Long.TYPE });
+			Method getStructureMethod = rasClazz.getDeclaredMethod("cast", Long.TYPE);
 			Object pointer = getStructureMethod.invoke(null, new Object[] { j9RASAddress });
 
 			// Set the J9RASPointer on DataType.

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java
Patch:
@@ -639,6 +639,9 @@ public static Properties internalGetProperties() {
 }
 
 /*[IF JFR_SUPPORT]*/
+
+public static native boolean isJFREnabled();
+
 /**
  * Check if a JFR recording has been started.
  *

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckEngine.java
Patch:
@@ -228,11 +228,11 @@ public int checkObjectHeap(J9ObjectPointer object, GCHeapRegionDescriptor region
 			CheckError error = new CheckError(object, _cycle, _currentCheck, elementName, result, _cycle.nextErrorCount());
 			_reporter.report(error);
 			/* There are some error cases would not prevent further iteration */
-			if (!(J9MODRON_GCCHK_RC_CLASS_IS_UNLOADED == result)) {
+			if ((J9MODRON_GCCHK_RC_CLASS_IS_UNLOADED == result) || (J9MODRON_GCCHK_RC_INVALID_INDEXABLE_DATA_ADDRESS == result)) {
+				return J9MODRON_SLOT_ITERATOR_OK;
+			} else {
 				_reporter.reportHeapWalkError(error, _lastHeapObject1, _lastHeapObject2, _lastHeapObject3);
 				return J9MODRON_SLOT_ITERATOR_UNRECOVERABLE_ERROR;
-			} else {
-				return J9MODRON_SLOT_ITERATOR_OK;
 			}
 		}
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -1089,9 +1089,9 @@ private void doEnumEAMethod(FieldDescriptor field) {
 
 	/* Sample generated code:
 	 *
-	 * @com.ibm.j9ddr.GeneratedFieldAccessor(offsetFieldName="_physicalProcessorOffset_", declaredType="J9ProcessorArchitecture")
-	 * public long physicalProcessor() throws CorruptDataException {
-	 *     return getIntAtOffset(J9ProcessorDesc._physicalProcessorOffset_);
+	 * @com.ibm.j9ddr.GeneratedFieldAccessor(offsetFieldName="__allocationContextTypeOffset_", declaredType="const MM_AllocationContextTarok$AllocationContextType")
+	 * public long _allocationContextType() throws CorruptDataException {
+	 *     return getIntAtOffset(J9ProcessorDesc.__allocationContextTypeOffset_);
 	 * }
 	 *
 	 * If the size of the field type is not 4, getByteAtOffset, getShortAtOffset

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -1089,9 +1089,9 @@ private void doEnumEAMethod(FieldDescriptor field) {
 
 	/* Sample generated code:
 	 *
-	 * @com.ibm.j9ddr.GeneratedFieldAccessor(offsetFieldName="_physicalProcessorOffset_", declaredType="J9ProcessorArchitecture")
-	 * public long physicalProcessor() throws CorruptDataException {
-	 *     return getIntAtOffset(J9ProcessorDesc._physicalProcessorOffset_);
+	 * @com.ibm.j9ddr.GeneratedFieldAccessor(offsetFieldName="__allocationContextTypeOffset_", declaredType="const MM_AllocationContextTarok$AllocationContextType")
+	 * public long _allocationContextType() throws CorruptDataException {
+	 *     return getIntAtOffset(J9ProcessorDesc.__allocationContextTypeOffset_);
 	 * }
 	 *
 	 * If the size of the field type is not 4, getByteAtOffset, getShortAtOffset

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -1301,11 +1301,11 @@ static void initSecurityManager(ClassLoader applicationClassLoader) {
 }
 /*[ENDIF] JAVA_SPEC_VERSION >= 9 */
 
-/*[IF JAVA_SPEC_VERSION == 23]*/
+/*[IF (21 <= JAVA_SPEC_VERSION) & (JAVA_SPEC_VERSION < 24)]*/
 static boolean allowSecurityManager() {
 	return !throwUOEFromSetSM;
 }
-/*[ENDIF] JAVA_SPEC_VERSION == 23 */
+/*[ENDIF] (21 <= JAVA_SPEC_VERSION) & (JAVA_SPEC_VERSION < 24) */
 
 /**
  * Sets the active security manager. Note that once

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -736,7 +736,10 @@ private static void ensureProperties(boolean isInitialization) {
 	/*[ENDIF] CRIU_SUPPORT */
 
 	/*[IF JFR_SUPPORT]*/
+	/* Enables openj9 JFR tests. */
 	initializedProperties.put("org.eclipse.openj9.jfr.isJFREnabled", "true"); //$NON-NLS-1$ //$NON-NLS-2$
+	/* TODO disable JFR JCL APIs until JFR natives are implemented. */
+	initializedProperties.put("jfr.unsupported.vm", "true"); //$NON-NLS-1$ //$NON-NLS-2$
 	/*[ENDIF] JFR_SUPPORT */
 
 	String[] list = getPropertyList();

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ManagementUtils.java
Patch:
@@ -775,7 +775,7 @@ static void registerAll() {
 				.validateAndRegister();
 
 /*[IF CRAC_SUPPORT]*/
-			create(jdk.crac.management.CRaCMXBean.CRAC_MXBEAN_NAME, jdk.crac.management.CRaCMXBeanImpl.getInstance())
+			create(jdk.crac.management.CRaCMXBean.CRAC_MXBEAN_NAME, jdk.crac.management.internal.CRaCMXBeanImpl.getInstance())
 				.addInterface(jdk.crac.management.CRaCMXBean.class)
 				.validateAndRegister();
 /*[ENDIF] CRAC_SUPPORT */

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/PlatformMBeanProvider.java
Patch:
@@ -112,7 +112,7 @@ public final class PlatformMBeanProvider extends sun.management.spi.PlatformMBea
 		}
 
 /*[IF CRAC_SUPPORT]*/
-		ComponentBuilder.create(jdk.crac.management.CRaCMXBean.CRAC_MXBEAN_NAME, jdk.crac.management.CRaCMXBeanImpl.getInstance()) // $NON-NLS-1$
+		ComponentBuilder.create(jdk.crac.management.CRaCMXBean.CRAC_MXBEAN_NAME, jdk.crac.management.internal.CRaCMXBeanImpl.getInstance()) // $NON-NLS-1$
 			.addInterface(jdk.crac.management.CRaCMXBean.class)
 			.register(allComponents);
 /*[ENDIF] CRAC_SUPPORT */

File: jcl/src/jdk.management/share/classes/jdk/crac/management/CRaCMXBean.java
Patch:
@@ -23,6 +23,7 @@
 package jdk.crac.management;
 
 import java.lang.management.PlatformManagedObject;
+import jdk.crac.management.internal.CRaCMXBeanImpl;
 
 /**
  * A management interface of the CRaC functionality in the Java virtual machine.

File: jcl/src/jdk.management/share/classes/jdk/crac/management/internal/CRaCMXBeanImpl.java
Patch:
@@ -20,11 +20,12 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-package jdk.crac.management;
+package jdk.crac.management.internal;
 
 import java.util.concurrent.TimeUnit;
 import javax.management.MalformedObjectNameException;
 import javax.management.ObjectName;
+import jdk.crac.management.CRaCMXBean;
 import openj9.internal.criu.InternalCRIUSupport;
 
 /**

File: test/functional/Java16andUp/src/org/openj9/test/java/lang/Test_SubClass.java
Patch:
@@ -35,7 +35,7 @@
  * 
  * Verify whether IncompatibleClassChangeError is thrown out when
  * the specified non-public subclass is in a different package from
- * the sealed super class/interface within the same unamed module.
+ * the sealed super class/interface within the same unnamed module.
  */
 @Test(groups = { "level.sanity" })
 public class Test_SubClass {

File: test/functional/Java16andUp/src/org/openj9/test/java/lang/Test_SubClass.java
Patch:
@@ -35,7 +35,7 @@
  * 
  * Verify whether IncompatibleClassChangeError is thrown out when
  * the specified non-public subclass is in a different package from
- * the sealed super class/interface within the same unamed module.
+ * the sealed super class/interface within the same unnamed module.
  */
 @Test(groups = { "level.sanity" })
 public class Test_SubClass {

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -5976,7 +5976,7 @@ private final byte compareAndExchange8bits(Object obj, long offset, int compareV
 	 * memory blocks
 	 */
 	private void compareAndExchange16BitsOffsetChecks(long offset) {
-		if ((IS_BIG_ENDIAN) && (BYTE_OFFSET_MASK == (BYTE_OFFSET_MASK & offset))) {
+		if (BYTE_OFFSET_MASK == (BYTE_OFFSET_MASK & offset)) {
 			/*[MSG "K0700", "Update spans the word, not supported"]*/
 			throw new IllegalArgumentException(com.ibm.oti.util.Msg.getString("K0700")); //$NON-NLS-1$
 		}

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2256,6 +2256,9 @@ static public void testDefaultValueInAssortedRefWithLongAlignmentArray() throws
 	}
 
 	/*
+	 * Re-enable when CheckedType support is available.
+	 * https://github.com/eclipse-openj9/openj9/issues/19764
+	 *
 	 * Ensure that casting null to a value type class will throw a null pointer exception
 	 * This test is disabled since the latest spec from
 	 * https://cr.openjdk.org/~dlsmith/jep401/jep401-20230519/specs/types-cleanup-jvms.html

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -5976,7 +5976,7 @@ private final byte compareAndExchange8bits(Object obj, long offset, int compareV
 	 * memory blocks
 	 */
 	private void compareAndExchange16BitsOffsetChecks(long offset) {
-		if ((IS_BIG_ENDIAN) && (BYTE_OFFSET_MASK == (BYTE_OFFSET_MASK & offset))) {
+		if (BYTE_OFFSET_MASK == (BYTE_OFFSET_MASK & offset)) {
 			/*[MSG "K0700", "Update spans the word, not supported"]*/
 			throw new IllegalArgumentException(com.ibm.oti.util.Msg.getString("K0700")); //$NON-NLS-1$
 		}

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2904,7 +2904,7 @@ static public void testAccStrictFieldMustHaveAccFinal() {
 	}
 
 	/* Each field of a value class must have exactly one of its ACC_STATIC or ACC_STRICT flags set */
-	@Test(expectedExceptions = java.lang.ClassFormatError.class, expectedExceptionsMessageRegExp = ".*Fields of value classes must have either ACC_STATIC or ACC_FINAL flags set.*")
+	@Test(expectedExceptions = java.lang.ClassFormatError.class, expectedExceptionsMessageRegExp = ".*Value class fields must have either ACC_STATIC or ACC_STRICT set.*")
 	static public void testValueClassFieldMustHaveAccStaticOrAccStrict() {
 		ValueTypeGenerator.generateTestValueClassFieldMustHaveAccStaticOrAccStrict();
 	}

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2904,7 +2904,7 @@ static public void testAccStrictFieldMustHaveAccFinal() {
 	}
 
 	/* Each field of a value class must have exactly one of its ACC_STATIC or ACC_STRICT flags set */
-	@Test(expectedExceptions = java.lang.ClassFormatError.class, expectedExceptionsMessageRegExp = ".*Fields of value classes must have either ACC_STATIC or ACC_FINAL flags set.*")
+	@Test(expectedExceptions = java.lang.ClassFormatError.class, expectedExceptionsMessageRegExp = ".*Value class fields must have either ACC_STATIC or ACC_STRICT set.*")
 	static public void testValueClassFieldMustHaveAccStaticOrAccStrict() {
 		ValueTypeGenerator.generateTestValueClassFieldMustHaveAccStaticOrAccStrict();
 	}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ROMClassHelper.java
Patch:
@@ -23,7 +23,7 @@
 
 import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.*;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_IMPLICITCREATION_ATTRIBUTE;
-import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PRELOAD_ATTRIBUTE;
+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_LOADABLEDESCRIPTORS_ATTRIBUTE;
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.pointer.U32Pointer;
@@ -135,8 +135,8 @@ public static boolean isSealed(J9ROMClassPointer romclass) throws CorruptDataExc
 		return romclass.extraModifiers().allBitsIn(J9AccSealed);
 	}
 
-	public static boolean hasPreloadAttribute(J9ROMClassPointer romclass) throws CorruptDataException {
-		return romclass.optionalFlags().allBitsIn(J9_ROMCLASS_OPTINFO_PRELOAD_ATTRIBUTE);
+	public static boolean hasLoadableDescriptorsAttribute(J9ROMClassPointer romclass) throws CorruptDataException {
+		return romclass.optionalFlags().allBitsIn(J9_ROMCLASS_OPTINFO_LOADABLEDESCRIPTORS_ATTRIBUTE);
 	}
 
 	public static boolean hasImplicitCreationAttribute(J9ROMClassPointer romclass) throws CorruptDataException {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ArgBits.java
Patch:
@@ -50,7 +50,7 @@ public class ArgBits
 		/* Parse the signature inside the ()'s */
 		char thisChar;
 		while ((thisChar = signature.charAt(++stringPtr)) != ')') {
-			if ((thisChar == '[') || J9ClassHelper.isRefOrValSignature(thisChar)) {
+			if ((thisChar == '[') || J9ClassHelper.isClassSignature(thisChar)) {
 				/* Mark a bit for objects or arrays */
 				resultArray[writePtr] |= argBit;
 				
@@ -59,7 +59,7 @@ public class ArgBits
 					stringPtr++;
 				}
 
-				if (J9ClassHelper.isRefOrValSignature(thisChar)) {
+				if (J9ClassHelper.isClassSignature(thisChar)) {
 					/* Walk past the name of the object class */
 					while ((thisChar = signature.charAt(stringPtr)) != ';') {
 						stringPtr++;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/SendSlot.java
Patch:
@@ -48,7 +48,7 @@ public static UDATA getSendSlotsFromSignature(J9UTF8Pointer signature) throws Co
 				/* skip all '['s */
 				for (i++; J9UTF8Helper.stringValue(signature).charAt(i) == '['; i++);
 				char charAti = J9UTF8Helper.stringValue(signature).charAt(i);
-				if (J9ClassHelper.isRefOrValSignature(charAti)) {
+				if (J9ClassHelper.isClassSignature(charAti)) {
 					/* FALL THRU */
 				} else {
 					sendArgs = sendArgs.add(1);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ClassHelper.java
Patch:
@@ -528,12 +528,12 @@ public static boolean isAnonymousClass(J9ClassPointer clazz) throws CorruptDataE
 
 	/**
 	 * Queries if a given char is the first character of a reference or value type signature.
-	 * Equivalent to J9's IS_REF_OR_VAL_SIGNATURE macro.
+	 * Equivalent to J9's IS_CLASS_SIGNATURE macro.
 	 *
 	 * @param firstChar the first character of the signature being checked
 	 * @return true if the character indicates the beginning of a reference or value signature, false otherwise
 	 */
-	public static boolean isRefOrValSignature(char firstChar) {
+	public static boolean isClassSignature(char firstChar) {
 		return firstChar == 'L';
 	}
 }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ClassLoaderHelper.java
Patch:
@@ -70,7 +70,7 @@ public static J9ClassPointer findClass(J9ClassLoaderPointer classLoader, String
 		
 		int arity = calculateClassArity(signature);
 
-		if ((arity > 0) && !J9ClassHelper.isRefOrValSignature(signature.charAt(arity))) {
+		if ((arity > 0) && !J9ClassHelper.isClassSignature(signature.charAt(arity))) {
 			return PRIMITIVE_TO_CLASS.get(signature.charAt(arity));			
 		} else {		
 			while (classIterator.hasNext()) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -327,7 +327,7 @@ boolean isObjectArray() throws CorruptDataException, com.ibm.j9ddr.CorruptDataEx
 					J9ArrayClassPointer arrayClass = J9ArrayClassPointer.cast(j9class);
 					
 					// Any multi-dimensional array is an object array, as is any single dimensional array with an object type (i.e. [Lwhatever; or [Qwhatever;).
-					if (arrayClass.arity().gt(1) || J9ClassHelper.isRefOrValSignature(getName().charAt(1))) {
+					if (arrayClass.arity().gt(1) || J9ClassHelper.isClassSignature(getName().charAt(1))) {
 						isObjectArray = true;
 					} else {
 						isObjectArray = false;

File: jcl/src/java.base/share/classes/com/ibm/jit/JITHelpers.java
Patch:
@@ -162,7 +162,6 @@ public int getJ9ClassFromObject32(Object obj) {
 		return getJ9ClassFromClass32(clazz);
 	}
 
-
 	/*
 	 * To be recognized by the JIT and returns true if the hardware supports SIMD case conversion.
 	 */

File: jcl/src/java.base/share/classes/com/ibm/oti/util/RuntimePermissions.java
Patch:
@@ -35,15 +35,15 @@ public class RuntimePermissions {
 	/**
 	 * RuntimePermission "setContextClassLoader"
 	 */
-	public static final RuntimePermission permissionSetContextClassLoader = new RuntimePermission("setContextClassLoader");	//$NON-NLS-1$ 
+	public static final RuntimePermission permissionSetContextClassLoader = new RuntimePermission("setContextClassLoader");	//$NON-NLS-1$
 	/**
 	 * RuntimePermission "setDefaultUncaughtExceptionHandler"
 	 */
-	public static final RuntimePermission permissionSetDefaultUncaughtExceptionHandler = new RuntimePermission("setDefaultUncaughtExceptionHandler");	//$NON-NLS-1$ 
+	public static final RuntimePermission permissionSetDefaultUncaughtExceptionHandler = new RuntimePermission("setDefaultUncaughtExceptionHandler");	//$NON-NLS-1$
 	/**
 	 * RuntimePermission "setIO"
 	 */
-	public static final RuntimePermission permissionSetIO = new RuntimePermission("setIO");	//$NON-NLS-1$ 
+	public static final RuntimePermission permissionSetIO = new RuntimePermission("setIO");	//$NON-NLS-1$
 	/**
 	 * RuntimePermission "setSecurityManager"
 	 */

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/BootstrapClassLoader.java
Patch:
@@ -87,11 +87,11 @@ public Class<?> loadClass(String className) throws ClassNotFoundException {
 
 public static ClassLoader singleton() {
 	if (singleton == null)
-	 	singleton = new BootstrapClassLoader();
+		singleton = new BootstrapClassLoader();
 	 else
 /*[MSG "K0084", "can only instantiate one BootstrapClassLoader"]*/
-	 	throw new SecurityException(com.ibm.oti.util.Msg.getString("K0084")); //$NON-NLS-1$
- 	return singleton;
+		throw new SecurityException(com.ibm.oti.util.Msg.getString("K0084")); //$NON-NLS-1$
+	return singleton;
 }
 
 protected Package getPackage(String name) {

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/J9UnmodifiableClass.java
Patch:
@@ -38,4 +38,3 @@
 
 public @interface J9UnmodifiableClass {
 }
-

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/VMLangAccess.java
Patch:
@@ -186,7 +186,6 @@ public interface VMLangAccess {
 	 */
 	public Thread createThread(Runnable runnable, String threadName, boolean isSystemThreadGroup, boolean inheritThreadLocals, boolean isDaemon, ClassLoader contextClassLoader);
 
-
 	/**
 	 * Prepare the passed in class
 	 *

File: jcl/src/java.base/share/classes/java/lang/InternalAnonymousClassLoader.java
Patch:
@@ -26,7 +26,7 @@
 /*
  * InternalAnonymousClassLoader cannot directly load classes.
  * This ClassLoader "owns" the native memory for classes that
- * have been loaded using sun.misc.Unsafe.defineAnonymousClass.   
+ * have been loaded using sun.misc.Unsafe.defineAnonymousClass.
  */
 final class InternalAnonymousClassLoader extends ClassLoader {
 
@@ -36,11 +36,11 @@ final class InternalAnonymousClassLoader extends ClassLoader {
 
 	 @Override
 	 protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {
-	 		 throw new ClassNotFoundException();
+			 throw new ClassNotFoundException();
 	 }
 
 	 @Override
 	 protected Class<?> findClass(String name) throws ClassNotFoundException {
-	 		 throw new ClassNotFoundException();
+			 throw new ClassNotFoundException();
 	 }
 }

File: jcl/src/java.base/share/classes/java/lang/J9VMInternals.java
Patch:
@@ -602,7 +602,6 @@ static final class ClassInitializationLock {
 	 */
 	public static native void dumpString(String str);
 
-
 	private static String[] getClassInfoStrings(final Class<?> clazz, String classPath){
 		String classLoaderStr = "<Bootstrap Loader>"; //$NON-NLS-1$
 		String cpResult = "<Unknown>"; //$NON-NLS-1$

File: jcl/src/java.base/share/classes/java/lang/RuntimePermission.java
Patch:
@@ -22,7 +22,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
- 
+
 /**
  * RuntimePermission objects represent access to runtime
  * support.
@@ -32,7 +32,7 @@
  */
 public final class RuntimePermission extends java.security.BasicPermission {
 	private static final long serialVersionUID = 7399184964622342223L;
-	
+
 /**
  * Creates an instance of this class with the given name.
  *

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -8689,7 +8689,6 @@ public String stripIndent() {
 			builder.append("\n");
 		}
 
-
 		if (!trailingNewLine) {
 			builder.setLength(builder.length() - 1);
 		}

File: jcl/src/java.base/share/classes/java/lang/ThreadGroup.java
Patch:
@@ -704,7 +704,7 @@ final void remove(java.lang.Thread thread) {
 	}
 
 	/*[PR CMVC 114880] ThreadGroup is not notified when all threads complete */
-    if (isThreadGroupEmpty) {
+	if (isThreadGroupEmpty) {
 		synchronized (this) {
 			notifyAll();
 		}
@@ -939,7 +939,6 @@ public String toString() {
 	return getClass().getName() + "[name=" + this.getName() + ",maxpri=" + this.getMaxPriority() + "]" ;  //$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-3$
 }
 
-
 /**
  * Any uncaught exception in any Thread has to be forwarded (by the VM) to the Thread's ThreadGroup
  * by sending this message (uncaughtException). This allows users to define custom ThreadGroup classes

File: jcl/src/java.base/share/classes/java/lang/Throwable.java
Patch:
@@ -457,7 +457,6 @@ private void readObject(ObjectInputStream s)
 		}
 	}
 
-
 	if (suppressedExceptions != null) {
 		List<Throwable> newList = Collections.EMPTY_LIST;
 		try {

File: jcl/src/java.base/share/classes/java/lang/VMAccess.java
Patch:
@@ -61,7 +61,6 @@ public Class<?> findClassOrNullHelper(String className, ClassLoader classLoader)
 		return VMAccess.findClassOrNull(className, classLoader);
 	}
 
-
 /*[IF JAVA_SPEC_VERSION >= 9]*/
 	/**
 	 * Answer the platform class loader.

File: jcl/src/java.base/share/classes/java/lang/invoke/ArgumentConversionHandle.java
Patch:
@@ -43,4 +43,3 @@ protected final ThunkTuple computeThunks(Object nextHandleType) {
 	}
 	// }}} JIT support
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/AsTypeHandle.java
Patch:
@@ -22,9 +22,9 @@
  */
 package java.lang.invoke;
 
-/* AsTypeHandle is a MethodHandle subclass used to convert the 
+/* AsTypeHandle is a MethodHandle subclass used to convert the
  * arguments and return type.
- * 
+ *
  */
 final class AsTypeHandle extends ArgumentConversionHandle {
 
@@ -69,4 +69,3 @@ final void compareWithAsType(AsTypeHandle left, Comparator c) {
 		compareWithConvert(left, c);
 	}
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/CacheKey.java
Patch:
@@ -25,17 +25,17 @@
 
 /**
  * Base class for CacheKeys used in the HandleCache.  There are two subclasses
- * FieldCacheKey and MethodCacheKey used by the HandleCache.  
+ * FieldCacheKey and MethodCacheKey used by the HandleCache.
  */
 abstract class CacheKey {
 	final String name;
 	private final int hashcode;
-	
+
 	public CacheKey(String name, int hashcode){
 		this.name = name;
 		this.hashcode = hashcode;
 	}
-	
+
 	@Override
 	public int hashCode() {
 		return hashcode;

File: jcl/src/java.base/share/classes/java/lang/invoke/CatchHandle.java
Patch:
@@ -45,7 +45,7 @@ MethodHandle cloneWithNewType(MethodType newType) {
 		return new CatchHandle(this, newType);
 	}
 
-	public static CatchHandle get(MethodHandle tryTarget, Class<? extends Throwable> exceptionClass, MethodHandle catchTarget, MethodHandle equivalent) { 
+	public static CatchHandle get(MethodHandle tryTarget, Class<? extends Throwable> exceptionClass, MethodHandle catchTarget, MethodHandle equivalent) {
 		return new CatchHandle(tryTarget, exceptionClass, catchTarget, equivalent);
 	}
 
@@ -100,4 +100,3 @@ final void compareWithCatch(CatchHandle left, Comparator c) {
 		c.compareChildHandle(left.catchTarget, this.catchTarget);
 	}
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/DefaultMethodConflictException.java
Patch:
@@ -23,7 +23,7 @@
 package java.lang.invoke;
 
 /**
- * DefaultMethodConflictException is thrown when method resolution 
+ * DefaultMethodConflictException is thrown when method resolution
  * found conflicting definitions of interface default methods.
  */
 @VMCONSTANTPOOL_CLASS
@@ -32,7 +32,7 @@ final class DefaultMethodConflictException extends RuntimeException {
 	 * Serialized version ID
 	 */
 	private static final long serialVersionUID = 292L;
-	
+
 	/**
 	 * Construct a DefaultMethodConflictException with the supplied message.
 	 * @param message Describes the method conflicts
@@ -41,4 +41,3 @@ final class DefaultMethodConflictException extends RuntimeException {
 		super(message);
 	}
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/DynamicInvokerHandle.java
Patch:
@@ -30,7 +30,7 @@
 class DynamicInvokerHandle extends MethodHandle {
 	@VMCONSTANTPOOL_FIELD
 	final CallSite site;
-	
+
 	DynamicInvokerHandle(CallSite site) {
 		super(site.type(), MethodHandle.KIND_DYNAMICINVOKER, null); //$NON-NLS-1$
 		this.site = site;

File: jcl/src/java.base/share/classes/java/lang/invoke/ExplicitCastHandle.java
Patch:
@@ -26,7 +26,7 @@
 
 /* ExplicitCastHandle is a MethodHandle subclass used to implement
  * MethodHandles.explicitCastArgument()
- * 
+ *
  */
 final class ExplicitCastHandle extends ArgumentConversionHandle {
 
@@ -71,4 +71,3 @@ final void compareWithExplicitCast(ExplicitCastHandle left, Comparator c) {
 		compareWithConvert(left, c);
 	}
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/FilterReturnHandle.java
Patch:
@@ -31,7 +31,7 @@
 final class FilterReturnHandle extends ConvertHandle {
 	@VMCONSTANTPOOL_FIELD
 	final MethodHandle filter;
-	
+
 	FilterReturnHandle(MethodHandle next, MethodHandle filter) {
 		super(next, next.type.changeReturnType(filter.type.returnType()), KIND_FILTERRETURN, filter.type()); //$NON-NLS-1$
 		this.filter = filter;

File: jcl/src/java.base/share/classes/java/lang/invoke/InsertHandle.java
Patch:
@@ -31,7 +31,7 @@ class InsertHandle extends MethodHandle {
 	final int           insertionIndex;
 	private final Object[]      values;
 
-	/* 
+	/*
 	 * next must be an appropriately typed handle to ensure that the bound parameters are typechecked
 	 * correctly.
 	 */

File: jcl/src/java.base/share/classes/java/lang/invoke/InvokeExactHandle.java
Patch:
@@ -34,7 +34,7 @@
 final class InvokeExactHandle extends PrimitiveHandle {
 	/* MethodType that the first argument MethodHandle must match */
 	final MethodType nextType;
-	
+
 	InvokeExactHandle(MethodType type) {
 		super(invokeExactMethodType(type), MethodHandle.class, "invokeExact", KIND_INVOKEEXACT, PUBLIC_FINAL_NATIVE, null); //$NON-NLS-1$
 		nextType = type;
@@ -63,7 +63,7 @@ boolean canRevealDirect() {
 		/* This is invokevirtual of MethodHandle.invokeExact() */
 		return true;
 	}
-	
+
 	// {{{ JIT support
 
 	private static final ThunkTable _thunkTable = new ThunkTable();
@@ -107,4 +107,3 @@ final void compareWithInvokeExact(InvokeExactHandle left, Comparator c) {
 		// Nothing distinguishes InvokeExactHandles except their type, which Comparator already deals with
 	}
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/LambdaFormEditor.java
Patch:
@@ -36,11 +36,11 @@ LambdaForm filterRepeatedArgumentForm(LambdaForm.BasicType bt, int[] args) {
 	LambdaForm filterArgumentForm(int num, LambdaForm.BasicType by) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
-	
+
 	LambdaForm filterReturnForm(LambdaForm.BasicType bt, boolean flag) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
-	
+
 	LambdaForm noteLoopLocalTypesForm(int num, LambdaForm.BasicType[] bts) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}

File: jcl/src/java.base/share/classes/java/lang/invoke/LoopHandle.java
Patch:
@@ -49,7 +49,6 @@ public static LoopHandle get(MethodHandle equivalent, MethodHandle[][] handleCla
 	@Override
 	protected final ThunkTable thunkTable(){ return _thunkTable; }
 
-
 	@SuppressWarnings("boxing")
 	private static Object infoAffectingThunks(int numLoopTargetArgs) {
 		// The number of arguments passed to the loop target affects the code generated in the thunks

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleResolver.java
Patch:
@@ -88,7 +88,6 @@ final class MethodHandleResolver {
 	 */
 	private static final native MethodHandle getCPMethodHandleAt(Object internalConstantPool, int index);
 
-
 	/**
 	 * Get the class name from a constant pool class element, which is located
 	 * at the specified <i>index</i> in <i>internalConstantPool</i>.
@@ -564,7 +563,6 @@ private static final Class<?> resolveFieldHandleHelper(String typeDescriptor, Lo
 	}
 /*[ENDIF] !OPENJDK_METHODHANDLES*/
 
-
 	/**
 	 * Gets class object from RAM class address
 	 * @param j9class RAM class address

File: jcl/src/java.base/share/classes/java/lang/invoke/SimpleMethodHandle.java
Patch:
@@ -30,7 +30,7 @@
  * Stub class to compile OpenJDK j.l.i.MethodHandleImpl
  */
 final class SimpleMethodHandle extends BoundMethodHandle {
-	
+
 	private SimpleMethodHandle(MethodType type, LambdaForm form) {
 		super(type, form);
 		OpenJDKCompileStub.OpenJDKCompileStubThrowError();
@@ -39,11 +39,11 @@ private SimpleMethodHandle(MethodType type, LambdaForm form) {
 	BoundMethodHandle copyWith(MethodType mt, LambdaForm lf) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
-	
+
 	static BoundMethodHandle make(MethodType mt, LambdaForm lf) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
-	
+
 	BoundMethodHandle copyWithExtendL(MethodType mt, LambdaForm lf, Object obj) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}

File: jcl/src/java.base/share/classes/java/lang/invoke/SpreadHandle.java
Patch:
@@ -30,14 +30,14 @@
 
 final class SpreadHandle extends MethodHandle {
 	@VMCONSTANTPOOL_FIELD
- 	private final MethodHandle next;
+	private final MethodHandle next;
 	@VMCONSTANTPOOL_FIELD
 	private final Class<?> arrayClass;
 	@VMCONSTANTPOOL_FIELD
 	private final int spreadCount;
 	@VMCONSTANTPOOL_FIELD
 	private final int spreadPosition;  /* The starting position of spread arguments */
-	
+
 	protected SpreadHandle(MethodHandle next, MethodType collectType, Class<?> arrayClass, int spreadCount, int spreadPosition) {
 		super(collectType, KIND_SPREAD, infoAffectingThunks(arrayClass, spreadCount, spreadPosition));
 		this.arrayClass = arrayClass;

File: jcl/src/java.base/share/classes/java/lang/invoke/VMCONSTANTPOOL_CLASS.java
Patch:
@@ -31,4 +31,3 @@
 @Target({ElementType.TYPE})
 @interface VMCONSTANTPOOL_CLASS {
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/VMCONSTANTPOOL_FIELD.java
Patch:
@@ -32,4 +32,3 @@
 @interface VMCONSTANTPOOL_FIELD {
 
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/VMCONSTANTPOOL_METHOD.java
Patch:
@@ -32,4 +32,3 @@
 @interface VMCONSTANTPOOL_METHOD {
 
 }
-

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeGenericHandle.java
Patch:
@@ -77,4 +77,3 @@ private final int invokeExact_thunkArchetype_X(VarHandle varHandle, int argPlace
 	}
 	// }}} JIT support
 }
-

File: jcl/src/java.base/share/classes/java/lang/ref/FinalReference.java
Patch:
@@ -22,7 +22,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
- 
+
 final class FinalReference<T> extends Reference<T> {
 
 	public FinalReference(T referent, ReferenceQueue<? super T> q) {

File: jcl/src/java.base/share/classes/java/lang/ref/WeakReference.java
Patch:
@@ -29,7 +29,7 @@
  * @author		OTI
  * @version		initial
  * @since		1.2
- */	
+ */
 public
 /*[IF JAVA_SPEC_VERSION >= 19]*/
 non-sealed

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -1683,7 +1683,6 @@ public Object allocateUninitializedArray(Class<?> c, int length) {
 		return allocateUninitializedArray0(c, length);
 	}
 
-
 	/**
 	 * Atomically sets the parameter value at offset in obj if the compare value
 	 * matches the existing value in the object.

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/AttachHandler.java
Patch:
@@ -302,7 +302,6 @@ private boolean initialize() throws IOException {
 			}
 		}
 
-
 		synchronized (stateSync) {
 			if (isAttachApiTerminated()) {
 				IPC.logMessage("cancel initialize before prepareCommonDirectory"); //$NON-NLS-1$

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java
Patch:
@@ -510,7 +510,7 @@ private static DiagnosticProperties doCheckpointJVM(String diagnosticCommand) {
 
 		commandTable.put(DIAGNOSTICS_DUMP_SYSTEM, DiagnosticUtils::doDump);
 		helpTable.put(DIAGNOSTICS_DUMP_SYSTEM, DIAGNOSTICS_DUMP_SYSTEM_HELP);
-		
+
 		commandTable.put(DIAGNOSTICS_STAT_CLASS, DiagnosticUtils::getJstatClass);
 		helpTable.put(DIAGNOSTICS_STAT_CLASS, DIAGNOSTICS_JSTAT_CLASS_HELP);
 

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/FilelockTimer.java
Patch:
@@ -28,7 +28,6 @@
 import java.security.PrivilegedAction;
 import java.util.Timer;
 
-
 /**
  * Allows us to ensure the timer thread is dead,
  *
@@ -68,12 +67,11 @@ public void cancel() {
 			try {
 				Thread timerThread = (Thread) timerThreadField.get(this);
 				if (null != timerThread) {
-					timerThread.join(10000);	/* timeout in ms*/	
+					timerThread.join(10000);	/* timeout in ms*/
 				}
 			} catch (Exception e) {
 				IPC.logMessage("Exception in FilelockTimer.cancel: ", e.getClass().getName()+":"+e.getMessage()); //$NON-NLS-1$ //$NON-NLS-2$
 			}
 		}
 	}
 }
-

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/Reply.java
Patch:
@@ -62,7 +62,7 @@ public Reply(Integer thePort, String theKey, String targetDirectory, long theUid
 	 */
 	Reply(String notificationDirectory) {
 		targetUid = 0;
-		replyFile = new File(notificationDirectory, REPLY_FILENAME);	
+		replyFile = new File(notificationDirectory, REPLY_FILENAME);
 	}
 
 	/**
@@ -121,7 +121,7 @@ static Reply readReply(String path) throws IOException {
 		}
 		return rply;
 	}
-	
+
 	private boolean fileDoesNotExist() {
 		return !replyFile.exists();
 	}
@@ -137,7 +137,7 @@ synchronized int getPortNumber() {
 	 */
 	synchronized String getKey() {
 		return key;
-	}	
+	}
 	/**
 	 * Delete the reply file
 	 */

File: jcl/src/java.base/share/classes/openj9/management/internal/InvalidDumpOptionExceptionBase.java
Patch:
@@ -36,5 +36,5 @@ public class InvalidDumpOptionExceptionBase extends Exception {
 	public InvalidDumpOptionExceptionBase(String message) {
 		super(message);
 	}
-	
+
 }

File: jcl/src/java.desktop/share/classes/java/beans/ConstructorProperties.java
Patch:
@@ -37,6 +37,6 @@
 @Retention(value = RUNTIME)
 public @interface ConstructorProperties {
 
-    public String[] value();
+	public String[] value();
 
 }

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ManagementPermissionHelper.java
Patch:
@@ -26,7 +26,7 @@
 
 /*
  * (non-Javadoc)
- * 
+ *
  * Helper class only loaded when the security manager is enabled via following code snippet
  * 	SecurityManager security = System.getSecurityManager();
  * 	if (security != null) {

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ThreadInfoUtil.java
Patch:
@@ -163,7 +163,6 @@ public static CompositeData toCompositeData(ThreadInfo info) {
 		return result;
 	}
 
-
 	private ThreadInfoUtil() {
 		super();
 	}

File: jcl/src/java.management/share/classes/java/lang/management/ThreadInfo.java
Patch:
@@ -58,7 +58,6 @@ public class ThreadInfo {
 	private final ThreadInfoBase baseInfo;
 	private static final LockInfo[] EMPTY_LOCKINFO_ARRAY = new LockInfo[0];
 
-
 	/**
 	 * Used by from().
 	 * @param threadIdVal

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jcmd.java
Patch:
@@ -43,15 +43,15 @@ public class Jcmd {
 	@SuppressWarnings("nls")
 	private static final String HELPTEXT = "Usage : jcmd <vmid | display name | 0> <arguments>%n"
 			+ "%n"
-			+ "   -J : supply arguments to the Java VM running jcmd%n" 
+			+ "   -J : supply arguments to the Java VM running jcmd%n"
 			+ "   -l : list JVM processes on the local machine%n"
 			+ "   -h : print this help message%n"
 			+ "%n"
 			+ "   <vmid> : Attach API VM ID as shown in jcmd or other Attach API-based tools%n"
 			+ "   <display name> : this argument is used to match (either fully or partially) the display name as shown in jcmd or other Attach API-based tools%n"
 			+ "   <0> : the jcmd command will be sent to all Java processes detected by this utility%n"
 			+ "%n"
-			+ "   arguments:%n" 
+			+ "   arguments:%n"
 			+ "      help : print the list of diagnostic commands%n"
 			+ "      help <command> : print help for the specific command%n"
 			+ "      <command> [command arguments] : command from the list returned by \"help\"%n"

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jmap.java
Patch:
@@ -56,7 +56,7 @@ public class Jmap {
 
 	/**
 	 * Print a list of Java processes and information about them.
-	 * 
+	 *
 	 * @param args Arguments to the application
 	 */
 	public static void main(String[] args) {
@@ -143,7 +143,7 @@ private static boolean parseArguments(String[] args) {
 				} else {
 					invalidArg = true;
 				}
-				
+
 				if (invalidArg) {
 					errorMessage = "unrecognized option " + arg;
 					break;

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java
Patch:
@@ -66,7 +66,7 @@ public static void main(String[] args) {
 		AttachProvider theProvider = null;
 		if (0 != providers.size()) {
 			theProvider = providers.get(0);
-		} 
+		}
 		if (null == theProvider) {
 			System.err.println("no attach providers available"); //$NON-NLS-1$
 			rc = 1;
@@ -75,15 +75,15 @@ public static void main(String[] args) {
 			for (VirtualMachineDescriptor vmd : vmds) {
 				StringBuilder outputBuffer = new StringBuilder(vmd.id());
 				if (!vmidOnly) {
-					Util.getTargetInformation(theProvider, vmd, 
+					Util.getTargetInformation(theProvider, vmd,
 							printJvmArguments, noPackageName, printApplicationArguments, outputBuffer);
 				}
 				System.out.println(outputBuffer.toString());
 			}
 		}
 		System.exit(rc);
 	}
-	
+
 	private static void parseArguments(String[] args) {
 		printApplicationArguments = false;
 		printJvmArguments = false;

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jstack.java
Patch:
@@ -132,4 +132,3 @@ private static boolean parseArguments(String[] args) {
 		return okay;
 	}
 }
-

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jstat.java
Patch:
@@ -66,7 +66,7 @@ public class Jstat {
 
 	/**
 	 * Print a list of Java processes and information about them.
-	 * 
+	 *
 	 * @param args
 	 *            Arguments to the application
 	 */

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Util.java
Patch:
@@ -162,7 +162,7 @@ static void printProperties(PrintStream out, Properties props) {
 	 * Print an error message if it is not null or empty.
 	 * Print the help content.
 	 * Terminates JVM.
-	 * 
+	 *
 	 * @param error
 	 *            an error message to indicate the cause of the error
 	 * @param help
@@ -175,13 +175,13 @@ static void exitJVMWithReasonAndHelp(String error, String help) {
 		System.out.printf(help);
 		System.exit(1);
 	}
-	
+
 	@SuppressWarnings("nls")
 	private static final String[] HELP_OPTIONS = { "-h", "help", "-help", "--help" };
 
 	/**
 	 * Check if the option matches one of HELP_OPTIONS
-	 * 
+	 *
 	 * @param option
 	 *            the option to be checked
 	 * @return true if found a match, otherwise false

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/CpuLoadCalculationConstants.java
Patch:
@@ -25,7 +25,7 @@
 /**
  * Constants used by {@link com.ibm.lang.management.OperatingSystemMXBean#getProcessCpuLoad()} and
  * {@link com.ibm.lang.management.OperatingSystemMXBean#getSystemCpuLoad()} methods.
- * 
+ *
  * @author Sridevi
  *
  * @since 1.7.1
@@ -55,7 +55,7 @@ public interface CpuLoadCalculationConstants {
 	/**
 	 *  The minimum time between successive calls required
 	 *  to obtain a valid CPU load measurement.
-	 *  
+	 *
 	 *  10 ms in nanoseconds.
 	 */
 	long MINIMUM_INTERVAL = 10000000;

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/ExtendedThreadInfo.java
Patch:
@@ -25,7 +25,7 @@
 import java.lang.management.ThreadInfo;
 
 /**
- * Class encapsulates a ThreadInfo instance along with the corresponding native thread identification 
+ * Class encapsulates a ThreadInfo instance along with the corresponding native thread identification
  * information as assigned by the operating system.
  */
 public interface ExtendedThreadInfo {

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/ProcessorUsageRetrievalException.java
Patch:
@@ -27,7 +27,7 @@
  * Exception class whose instance is thrown when Processor usage sampling fails. For exact
  * cause one needs to inspect the exception string message capturing the details by calling
  * the toString() method.
- * 
+ *
  * @author sonchakr
  * @since 1.7.1
  */

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedRuntimeMXBeanImpl.java
Patch:
@@ -39,7 +39,7 @@ public final class ExtendedRuntimeMXBeanImpl extends RuntimeMXBeanImpl implement
 
 	/**
 	 * Singleton accessor method.
-	 * 
+	 *
 	 * @return the <code>RuntimeMXBeanImpl</code> singleton.
 	 */
 	public static RuntimeMXBean getInstance() {

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/JvmCpuMonitorInfoUtil.java
Patch:
@@ -34,7 +34,7 @@
 import com.ibm.lang.management.JvmCpuMonitorInfo;
 
 /**
- * Support for the {@link JvmCpuMonitorInfo} class. 
+ * Support for the {@link JvmCpuMonitorInfo} class.
  */
 public final class JvmCpuMonitorInfoUtil {
 

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/OperatingSystemNotificationThread.java
Patch:
@@ -76,7 +76,7 @@ public Void run() {
 
 	/**
 	 * Registers a signal handler for SIGRECONFIG, then processes notifications
-	 * on an internal VM queue until a shutdown request is received. 
+	 * on an internal VM queue until a shutdown request is received.
 	 */
 	private native void processNotificationLoop();
 

File: jcl/src/jdk.management/share/classes/com/ibm/virtualization/management/GuestOSInfoRetrievalException.java
Patch:
@@ -25,7 +25,7 @@
  */
 
 /**
- * This exception class is thrown when retrieving 
+ * This exception class is thrown when retrieving
  * Guest (Virtual Machine(VM)/Logical Partition(LPAR)) usage statistics fails.
  * It could be trying to retrieve either {@link GuestOSProcessorUsage} or
  * {@link GuestOSMemoryUsage}.  For exact cause one needs to inspect the exception

File: jcl/src/jdk.management/share/classes/com/ibm/virtualization/management/HypervisorMXBean.java
Patch:
@@ -67,7 +67,7 @@
  *	if (true != mbeanServer.isRegistered(mxbeanName)) {
  *	   // HypervisorMXBean not registered
  *	}
- *	HypervisorMXBean hypBean = JMX.newMXBeanProxy(mbeanServer, mxbeanName, HypervisorMXBean.class); 
+ *	HypervisorMXBean hypBean = JMX.newMXBeanProxy(mbeanServer, mxbeanName, HypervisorMXBean.class);
  *   } catch (Exception e) {
  *	// Exception Handling
  *   }
@@ -80,7 +80,7 @@ public interface HypervisorMXBean extends PlatformManagedObject {
 
 	/**
 	 * Indicates if the Operating System is running on a Hypervisor or not.
-	 * 
+	 *
 	 * @return true if running on a Hypervisor, false otherwise.
 
 	 * @throws UnsupportedOperationException if the underlying Hypervisor is unsupported.
@@ -90,7 +90,7 @@ public interface HypervisorMXBean extends PlatformManagedObject {
 
 	/**
 	 * Returns the vendor of the Hypervisor if running in a virtualized environment.
-	 * 
+	 *
 	 * @return string identifying the vendor of the Hypervisor if running under
 	 *         Hypervisor, null otherwise.
 	 */

File: jcl/src/jdk.management/share/classes/com/sun/management/internal/GarbageCollectionNotificationInfoUtil.java
Patch:
@@ -33,7 +33,7 @@
 import com.sun.management.GarbageCollectionNotificationInfo;
 
 /**
- * Support for the {@link GarbageCollectionNotificationInfo} class. 
+ * Support for the {@link GarbageCollectionNotificationInfo} class.
  */
 public final class GarbageCollectionNotificationInfoUtil {
 

File: jcl/src/jdk.management/share/classes/openj9/lang/management/ConfigurationUnavailableException.java
Patch:
@@ -37,5 +37,5 @@ public class ConfigurationUnavailableException extends Exception {
 
 	public ConfigurationUnavailableException(String message, Throwable cause) {
 		super(message, cause);
-	}	
+	}
 }

File: jcl/src/jdk.management/share/classes/openj9/lang/management/InvalidOptionException.java
Patch:
@@ -33,5 +33,5 @@ public class InvalidOptionException extends Exception {
 
 	public InvalidOptionException(String message, Throwable cause) {
 		super(message, cause);
-	}	
+	}
 }

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/NewWinDump.java
Patch:
@@ -651,9 +651,9 @@ public void readFrom(MiniDump dump, Builder builder, Object addressSpace, IAbstr
 					long stackEnd = stackStart + stackSize;
 					Object section = builder.buildStackSection(addressSpace, stackStart, stackEnd);
 					List frames = readStackFrames(dump, builder, addressSpace, stackStart, stackEnd, stackRva, registers, memory, is64Bit);
-				    //TODO: find the signal number!
-				    int signalNumber = 0;
-				    Object thread = builder.buildThread(String.valueOf(threadId), registers.iterator(),
+					//TODO: find the signal number!
+					int signalNumber = 0;
+					Object thread = builder.buildThread(String.valueOf(threadId), registers.iterator(),
 														Collections.singletonList(section).iterator(),
 														frames.iterator(), properties, signalNumber);
 					threads.add(thread);

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/NewZosDump.java
Patch:
@@ -77,8 +77,8 @@ public class NewZosDump implements ICoreFileReader {
 	/** Maintains the list of Java address spaces */
 	private HashMap _javaAddressSpaces = new LinkedHashMap();
 
-    /** Logger */
-    private static Logger log = Logger.getLogger(NewZosDump.class.getName());
+	/** Logger */
+	private static Logger log = Logger.getLogger(NewZosDump.class.getName());
 
 	// Zebedee variables
 	private com.ibm.dtfj.corereaders.zos.dumpreader.Dump _dump;

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2299,7 +2299,7 @@ static public void testCheckCastNullableTypeOnNull() throws Throwable {
 	static public void testValueWithLongAlignmentGCScanning() throws Throwable {
 		ArrayList<Object> longAlignmentArrayList = new ArrayList<Object>(objectGCScanningIterationCount);
 		for (int i = 0; i < objectGCScanningIterationCount; i++) {
-			Object newLongAlignmentArray = Array.newInstance(assortedValueWithLongAlignmentClass, genericArraySize);
+			Object newLongAlignmentArray = (Object)ValueClass.newNullRestrictedArray(assortedValueWithLongAlignmentClass, genericArraySize);
 			for (int j = 0; j < genericArraySize; j++) {
 				Object assortedValueWithLongAlignment = createAssorted(makeAssortedValueWithLongAlignment, typeWithLongAlignmentFields);
 				Array.set(newLongAlignmentArray, j, assortedValueWithLongAlignment);
@@ -2324,7 +2324,7 @@ static public void testValueWithLongAlignmentGCScanning() throws Throwable {
 	static public void testValueWithObjectAlignmentGCScanning() throws Throwable {
 		ArrayList<Object> objectAlignmentArrayList = new ArrayList<Object>(objectGCScanningIterationCount);
 		for (int i = 0; i < objectGCScanningIterationCount; i++) {
-			Object newObjectAlignmentArray = Array.newInstance(assortedValueWithObjectAlignmentClass, genericArraySize);
+			Object newObjectAlignmentArray = (Object)ValueClass.newNullRestrictedArray(assortedValueWithObjectAlignmentClass, genericArraySize);
 			for (int j = 0; j < genericArraySize; j++) {
 				Object assortedValueWithObjectAlignment = createAssorted(makeAssortedValueWithObjectAlignment, typeWithObjectAlignmentFields);
 				Array.set(newObjectAlignmentArray, j, assortedValueWithObjectAlignment);
@@ -2349,7 +2349,7 @@ static public void testValueWithObjectAlignmentGCScanning() throws Throwable {
 	static public void testValueWithSingleAlignmentGCScanning() throws Throwable {
 		ArrayList<Object> singleAlignmentArrayList = new ArrayList<Object>(objectGCScanningIterationCount);
 		for (int i = 0; i < objectGCScanningIterationCount; i++) {
-			Object newSingleAlignmentArray = Array.newInstance(assortedValueWithSingleAlignmentClass, genericArraySize);
+			Object newSingleAlignmentArray = (Object)ValueClass.newNullRestrictedArray(assortedValueWithSingleAlignmentClass, genericArraySize);
 			for (int j = 0; j < genericArraySize; j++) {
 				Object assortedValueWithSingleAlignment = createAssorted(makeAssortedValueWithSingleAlignment, typeWithSingleAlignmentFields);
 				Array.set(newSingleAlignmentArray, j, assortedValueWithSingleAlignment);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ArgBits.java
Patch:
@@ -50,7 +50,7 @@ public class ArgBits
 		/* Parse the signature inside the ()'s */
 		char thisChar;
 		while ((thisChar = signature.charAt(++stringPtr)) != ')') {
-			if ((thisChar == '[') || J9ClassHelper.isRefOrValSignature(thisChar)) {
+			if ((thisChar == '[') || J9ClassHelper.isClassSignature(thisChar)) {
 				/* Mark a bit for objects or arrays */
 				resultArray[writePtr] |= argBit;
 				
@@ -59,7 +59,7 @@ public class ArgBits
 					stringPtr++;
 				}
 
-				if (J9ClassHelper.isRefOrValSignature(thisChar)) {
+				if (J9ClassHelper.isClassSignature(thisChar)) {
 					/* Walk past the name of the object class */
 					while ((thisChar = signature.charAt(stringPtr)) != ';') {
 						stringPtr++;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/SendSlot.java
Patch:
@@ -48,7 +48,7 @@ public static UDATA getSendSlotsFromSignature(J9UTF8Pointer signature) throws Co
 				/* skip all '['s */
 				for (i++; J9UTF8Helper.stringValue(signature).charAt(i) == '['; i++);
 				char charAti = J9UTF8Helper.stringValue(signature).charAt(i);
-				if (J9ClassHelper.isRefOrValSignature(charAti)) {
+				if (J9ClassHelper.isClassSignature(charAti)) {
 					/* FALL THRU */
 				} else {
 					sendArgs = sendArgs.add(1);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ClassHelper.java
Patch:
@@ -528,12 +528,12 @@ public static boolean isAnonymousClass(J9ClassPointer clazz) throws CorruptDataE
 
 	/**
 	 * Queries if a given char is the first character of a reference or value type signature.
-	 * Equivalent to J9's IS_REF_OR_VAL_SIGNATURE macro.
+	 * Equivalent to J9's IS_CLASS_SIGNATURE macro.
 	 *
 	 * @param firstChar the first character of the signature being checked
 	 * @return true if the character indicates the beginning of a reference or value signature, false otherwise
 	 */
-	public static boolean isRefOrValSignature(char firstChar) {
+	public static boolean isClassSignature(char firstChar) {
 		return firstChar == 'L';
 	}
 }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ClassLoaderHelper.java
Patch:
@@ -70,7 +70,7 @@ public static J9ClassPointer findClass(J9ClassLoaderPointer classLoader, String
 		
 		int arity = calculateClassArity(signature);
 
-		if ((arity > 0) && !J9ClassHelper.isRefOrValSignature(signature.charAt(arity))) {
+		if ((arity > 0) && !J9ClassHelper.isClassSignature(signature.charAt(arity))) {
 			return PRIMITIVE_TO_CLASS.get(signature.charAt(arity));			
 		} else {		
 			while (classIterator.hasNext()) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -327,7 +327,7 @@ boolean isObjectArray() throws CorruptDataException, com.ibm.j9ddr.CorruptDataEx
 					J9ArrayClassPointer arrayClass = J9ArrayClassPointer.cast(j9class);
 					
 					// Any multi-dimensional array is an object array, as is any single dimensional array with an object type (i.e. [Lwhatever; or [Qwhatever;).
-					if (arrayClass.arity().gt(1) || J9ClassHelper.isRefOrValSignature(getName().charAt(1))) {
+					if (arrayClass.arity().gt(1) || J9ClassHelper.isClassSignature(getName().charAt(1))) {
 						isObjectArray = true;
 					} else {
 						isObjectArray = false;

File: test/functional/cmdline_options_testresources/src_90/com/ibm/j9/getcallerclass/ReflectionMHTests.java
Patch:
@@ -62,9 +62,7 @@ public static boolean test_getCallerClass_Helper_Reflection_fromBootExtWithAnnot
 			cls = (Class<?>) method.invoke(null, new Object[0]);
 
 			boolean isClassNameExpected;
-			if ((VersionCheck.major() >= 18)
-					&& (Boolean.getBoolean("jdk.reflect.useDirectMethodHandle") || (VersionCheck.major() != 21))
-			) {
+			if (VersionCheck.major() >= 18) {
 				isClassNameExpected = isSecurityFrameOrInjectedInvoker(cls);
 			} else {
 				isClassNameExpected = (cls == ReflectionMHTests.class);

File: test/functional/cmdline_options_testresources/src_90/com/ibm/j9/getcallerclass/ReflectionMHTests.java
Patch:
@@ -62,7 +62,9 @@ public static boolean test_getCallerClass_Helper_Reflection_fromBootExtWithAnnot
 			cls = (Class<?>) method.invoke(null, new Object[0]);
 
 			boolean isClassNameExpected;
-			if (VersionCheck.major() >= 18) {
+			if ((VersionCheck.major() >= 18)
+					&& (Boolean.getBoolean("jdk.reflect.useDirectMethodHandle") || (VersionCheck.major() != 21))
+			) {
 				isClassNameExpected = isSecurityFrameOrInjectedInvoker(cls);
 			} else {
 				isClassNameExpected = (cls == ReflectionMHTests.class);

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2804,6 +2804,7 @@ static public void testIdentityObjectOnRef() throws Throwable {
 	@Test(priority=1)
 	static public void testIsValueClassOnInterface() throws Throwable {
 		assertFalse(TestInterface.class.isValue());
+		assertFalse(TestInterface.class.isIdentity());
 	}
 
 	private interface TestInterface {

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValhallaUtils.java
Patch:
@@ -25,12 +25,12 @@
 
 public class ValhallaUtils {
 	/**
-	 * Currently value type is built on JDK23, so use java file major version 67 for now.
+	 * Currently value type is built on JDK24, so use java file major version 68 for now.
 	 * If moved this needs to be incremented to the next class file version. The check in j9bcutil_readClassFileBytes()
 	 * against BCT_JavaMajorVersionShifted needs to be updated as well.
 	 * Minor version is in 16 most significant bits for asm.
 	 */
-	static final int VALUE_TYPE_CLASS_FILE_VERSION = (65535 << 16) | 67;
+	static final int VALUE_TYPE_CLASS_FILE_VERSION = (65535 << 16) | 68;
 
 	/* workaround till the new ASM is released */
 	static final int ACC_IDENTITY = 0x20;

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/DuplicateStructTests.java
Patch:
@@ -246,7 +246,7 @@ public void test_addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_du
 		SequenceLayout boolArray = MemoryLayout.sequenceLayout(2, C_CHAR);
 		GroupLayout structLayout2 = MemoryLayout.structLayout(boolArray.withName("array_elem1"), C_CHAR.withName("elem2"));
 		FunctionDescriptor fd = FunctionDescriptor.of(structLayout2, structLayout1, structLayout2);
-		Addressable functionSymbol = nativeLibLookup.lookup("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct1_dupStruct").get();
+		Addressable functionSymbol = nativeLibLookup.lookup("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_dupStruct").get();
 
 		try (ResourceScope scope = ResourceScope.newConfinedScope()) {
 			SegmentAllocator allocator = SegmentAllocator.ofScope(scope);

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/DuplicateStructTests.java
Patch:
@@ -224,7 +224,7 @@ public void test_addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_du
 		SequenceLayout boolArray = MemoryLayout.sequenceLayout(2, JAVA_BOOLEAN);
 		GroupLayout structLayout2 = MemoryLayout.structLayout(boolArray.withName("array_elem1"), JAVA_BOOLEAN.withName("elem2"));
 		FunctionDescriptor fd = FunctionDescriptor.of(structLayout2, structLayout1, structLayout2);
-		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct1_dupStruct").get();
+		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_dupStruct").get();
 		MethodHandle mh = linker.downcallHandle(functionSymbol, fd);
 
 		try (Arena arena = Arena.ofConfined()) {

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/DuplicateStructTests.java
Patch:
@@ -224,7 +224,7 @@ public void test_addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_du
 		SequenceLayout boolArray = MemoryLayout.sequenceLayout(2, JAVA_BOOLEAN);
 		GroupLayout structLayout2 = MemoryLayout.structLayout(boolArray.withName("array_elem1"), JAVA_BOOLEAN.withName("elem2"));
 		FunctionDescriptor fd = FunctionDescriptor.of(structLayout2, structLayout1, structLayout2);
-		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct1_dupStruct").get();
+		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_dupStruct").get();
 		MethodHandle mh = linker.downcallHandle(functionSymbol, fd);
 
 		try (Arena arena = Arena.ofConfined()) {

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/DuplicateStructTests.java
Patch:
@@ -246,7 +246,7 @@ public void test_addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_du
 		SequenceLayout boolArray = MemoryLayout.sequenceLayout(2, C_CHAR);
 		GroupLayout structLayout2 = MemoryLayout.structLayout(boolArray.withName("array_elem1"), C_CHAR.withName("elem2"));
 		FunctionDescriptor fd = FunctionDescriptor.of(structLayout2, structLayout1, structLayout2);
-		Addressable functionSymbol = nativeLibLookup.lookup("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct1_dupStruct").get();
+		Addressable functionSymbol = nativeLibLookup.lookup("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_dupStruct").get();
 
 		try (ResourceScope scope = ResourceScope.newConfinedScope()) {
 			SegmentAllocator allocator = SegmentAllocator.ofScope(scope);

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/DuplicateStructTests.java
Patch:
@@ -224,7 +224,7 @@ public void test_addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_du
 		SequenceLayout boolArray = MemoryLayout.sequenceLayout(2, JAVA_BOOLEAN);
 		GroupLayout structLayout2 = MemoryLayout.structLayout(boolArray.withName("array_elem1"), JAVA_BOOLEAN.withName("elem2"));
 		FunctionDescriptor fd = FunctionDescriptor.of(structLayout2, structLayout1, structLayout2);
-		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct1_dupStruct").get();
+		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_dupStruct").get();
 		MethodHandle mh = linker.downcallHandle(functionSymbol, fd);
 
 		try (Arena arena = Arena.ofConfined()) {

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/DuplicateStructTests.java
Patch:
@@ -224,7 +224,7 @@ public void test_addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_du
 		SequenceLayout boolArray = MemoryLayout.sequenceLayout(2, JAVA_BOOLEAN);
 		GroupLayout structLayout2 = MemoryLayout.structLayout(boolArray.withName("array_elem1"), JAVA_BOOLEAN.withName("elem2"));
 		FunctionDescriptor fd = FunctionDescriptor.of(structLayout2, structLayout1, structLayout2);
-		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct1_dupStruct").get();
+		MemorySegment functionSymbol = nativeLibLookup.find("addBoolStruct1AndNestedBoolArrayStruct2WithXor_returnStruct2_dupStruct").get();
 		MethodHandle mh = linker.downcallHandle(functionSymbol, fd);
 
 		try (Arena arena = Arena.ofConfined()) {

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValhallaAttributeTests.java
Patch:
@@ -161,8 +161,7 @@ static public void testCreateTestPutFieldNullToNullRestrictedField() throws Thro
 	}
 
 	/* Instance field with NullRestricted attribute cannot be set to null. */
-	/* https://github.com/eclipse-openj9/openj9/issues/19692 tracks excluded tests */
-	@Test(priority=2, invocationCount=2, expectedExceptions = java.lang.NullPointerException.class, enabled = false)
+	@Test(priority=2, invocationCount=2, expectedExceptions = java.lang.NullPointerException.class)
 	static public void testPutFieldNullToNullRestrictedField() throws Throwable {
 		testPutFieldNullToNullRestrictedFieldClass.newInstance();
 	}

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValhallaAttributeTests.java
Patch:
@@ -161,8 +161,7 @@ static public void testCreateTestPutFieldNullToNullRestrictedField() throws Thro
 	}
 
 	/* Instance field with NullRestricted attribute cannot be set to null. */
-	/* https://github.com/eclipse-openj9/openj9/issues/19692 tracks excluded tests */
-	@Test(priority=2, invocationCount=2, expectedExceptions = java.lang.NullPointerException.class, enabled = false)
+	@Test(priority=2, invocationCount=2, expectedExceptions = java.lang.NullPointerException.class)
 	static public void testPutFieldNullToNullRestrictedField() throws Throwable {
 		testPutFieldNullToNullRestrictedFieldClass.newInstance();
 	}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/VrfyTbl.java
Patch:
@@ -495,8 +495,8 @@ public class VrfyTbl
 		0x0E81 /* JBgotow - 200 */,
 		0x1700 /* JBunimplemented - 201 */,
 		0x1700 /* JBbreakpoint - 202 */,
-		0x1200 /* JBaconst_init = 203 */,
-		0x1000 /* JBwithfield = 204 */,
+		0x1700 /* JBunimplemented = 203 */,
+		0x1700 /* JBunimplemented = 204 */,
 		0x1700 /* JBunimplemented - 205 */,
 		0x1700 /* JBunimplemented - 206 */,
 		0x1700 /* JBunimplemented - 207 */,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -491,7 +491,6 @@ private void allSlotsInBytecodesDo(J9ROMMethodPointer method) throws CorruptData
 				|| (bc == JBputstatic)
 				|| (bc == JBgetfield)
 				|| (bc == JBputfield)
-				|| (bc == JBwithfield)
 				|| (bc == JBinvokevirtual)
 				|| (bc == JBinvokespecial)
 				|| (bc == JBinvokestatic)
@@ -500,7 +499,6 @@ private void allSlotsInBytecodesDo(J9ROMMethodPointer method) throws CorruptData
 				|| (bc == JBinvokedynamic)
 				|| (bc == JBinvokeinterface)
 				|| (bc == JBnew)
-				|| (bc == JBaconst_init)
 				|| (bc == JBnewdup)
 				|| (bc == JBanewarray)
 				|| (bc == JBcheckcast)

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -990,7 +990,7 @@ static public void testMonitorEnterAndExitOnValueType() throws Throwable {
 		try {
 			monitorEnterAndExitOnValueType.invoke(valueType);
 			Assert.fail("should throw exception. MonitorExit cannot be used with ValueType");
-		} catch (IllegalMonitorStateException e) {}
+		} catch (IdentityException e) {}
 		
 		try {
 			monitorEnterAndExitOnValueType.invoke(valueTypeArray);

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -990,7 +990,7 @@ static public void testMonitorEnterAndExitOnValueType() throws Throwable {
 		try {
 			monitorEnterAndExitOnValueType.invoke(valueType);
 			Assert.fail("should throw exception. MonitorExit cannot be used with ValueType");
-		} catch (IllegalMonitorStateException e) {}
+		} catch (IdentityException e) {}
 		
 		try {
 			monitorEnterAndExitOnValueType.invoke(valueTypeArray);

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/DDRValueTypeTest.java
Patch:
@@ -47,7 +47,7 @@ private static void createAndCheckValueType() throws Throwable {
 		Class assortedValueWithSingleAlignmentClass = ValueTypeGenerator.generateValueClass("AssortedValueWithSingleAlignment", ValueTypeTests.typeWithSingleAlignmentFields);
 		
 		MethodHandle makeAssortedValueWithSingleAlignment = MethodHandles.lookup().findStatic(assortedValueWithSingleAlignmentClass,
-			"makeValueGeneric", MethodType.methodType(Object.class, Object.class,
+			"makeObjectGeneric", MethodType.methodType(Object.class, Object.class,
 						Object.class, Object.class, Object.class, Object.class, Object.class));
 		
 		Object[] altFields = {

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/DDRValueTypeTest.java
Patch:
@@ -47,7 +47,7 @@ private static void createAndCheckValueType() throws Throwable {
 		Class assortedValueWithSingleAlignmentClass = ValueTypeGenerator.generateValueClass("AssortedValueWithSingleAlignment", ValueTypeTests.typeWithSingleAlignmentFields);
 		
 		MethodHandle makeAssortedValueWithSingleAlignment = MethodHandles.lookup().findStatic(assortedValueWithSingleAlignmentClass,
-			"makeValueGeneric", MethodType.methodType(Object.class, Object.class,
+			"makeObjectGeneric", MethodType.methodType(Object.class, Object.class,
 						Object.class, Object.class, Object.class, Object.class, Object.class));
 		
 		Object[] altFields = {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestManagementFactory.java
Patch:
@@ -47,6 +47,7 @@
 import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 
 import javax.management.ListenerNotFoundException;
@@ -1316,12 +1317,12 @@ public void testThreadMXBeanProxy() {
 				System.out.println("lockOwnerName ti1: " + ti1.getLockOwnerName() + " ti2: " + ti2.getLockOwnerName());
 				LockInfo li1 = ti1.getLockInfo();
 				LockInfo li2 = ti2.getLockInfo();
-				if (!li2.equals(li1)) {
+				if (!Objects.equals(li2, li1)) {
 					System.out.println("lockInfo ti1: " + li1 + " ti2: " + li2);
 				}
 				StackTraceElement[] st1 = ti1.getStackTrace();
 				StackTraceElement[] st2 = ti2.getStackTrace();
-				if (!st2.equals(st1)) {
+				if (!Objects.equals(st2, st1)) {
 					System.out.println("stackTrace length ti1: " + st1.length + " ti2: " + st2.length);
 					if (st1.length == st2.length) {
 						for (int i = 0; i < st1.length; i++) {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestManagementFactory.java
Patch:
@@ -47,6 +47,7 @@
 import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 
 import javax.management.ListenerNotFoundException;
@@ -1316,12 +1317,12 @@ public void testThreadMXBeanProxy() {
 				System.out.println("lockOwnerName ti1: " + ti1.getLockOwnerName() + " ti2: " + ti2.getLockOwnerName());
 				LockInfo li1 = ti1.getLockInfo();
 				LockInfo li2 = ti2.getLockInfo();
-				if (!li2.equals(li1)) {
+				if (!Objects.equals(li2, li1)) {
 					System.out.println("lockInfo ti1: " + li1 + " ti2: " + li2);
 				}
 				StackTraceElement[] st1 = ti1.getStackTrace();
 				StackTraceElement[] st2 = ti2.getStackTrace();
-				if (!st2.equals(st1)) {
+				if (!Objects.equals(st2, st1)) {
 					System.out.println("stackTrace length ti1: " + st1.length + " ti2: " + st2.length);
 					if (st1.length == st2.length) {
 						for (int i = 0; i < st1.length; i++) {

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/PrimitiveTypeTests2.java
Patch:
@@ -263,7 +263,7 @@ public void test_strlenFromDefaultLibWithMemAddr_2() throws Throwable {
 		MemorySegment strlenSymbol = defaultLibLookup.find("strlen").get();
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_LONG, ADDRESS);
 		MethodHandle mh = linker.downcallHandle(fd);
-		MemorySegment funcSegmt = arena.allocateUtf8String("JEP424 DOWNCALL TEST SUITES");
+		MemorySegment funcSegmt = PrimitiveTypeTests1.allocateString("JEP442 DOWNCALL TEST SUITES");
 		long strLength = (long)mh.invoke(strlenSymbol, funcSegmt);
 		Assert.assertEquals(strLength, 27);
 	}
@@ -289,7 +289,7 @@ public void test_printfFromDefaultLibWithMemAddr_2() throws Throwable {
 		MemorySegment functionSymbol = defaultLibLookup.find("printf").get();
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, ADDRESS, JAVA_INT, JAVA_INT, JAVA_INT);
 		MethodHandle mh = linker.downcallHandle(fd);
-		MemorySegment formatSegmt = arena.allocateUtf8String("\n%d + %d = %d\n");
+		MemorySegment formatSegmt = PrimitiveTypeTests1.allocateString("\n%d + %d = %d\n");
 		mh.invoke(functionSymbol, formatSegmt, 15, 27, 42);
 	}
 
@@ -298,7 +298,7 @@ public void test_printfFromDefaultLibWithMemAddr_LinkerOption_2() throws Throwab
 		MemorySegment functionSymbol = defaultLibLookup.find("printf").get();
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, ADDRESS, JAVA_INT, JAVA_INT, JAVA_INT);
 		MethodHandle mh = linker.downcallHandle(fd, Linker.Option.firstVariadicArg(1));
-		MemorySegment formatSegmt = arena.allocateUtf8String("\n%d + %d = %d\n");
+		MemorySegment formatSegmt = PrimitiveTypeTests1.allocateString("\n%d + %d = %d\n");
 		mh.invoke(functionSymbol, formatSegmt, 15, 27, 42);
 	}
 

File: test/functional/Java22andUp/src/org/openj9/test/jep454/downcall/PrimitiveTypeTests2.java
Patch:
@@ -263,7 +263,7 @@ public void test_strlenFromDefaultLibWithMemAddr_2() throws Throwable {
 		MemorySegment strlenSymbol = defaultLibLookup.find("strlen").get();
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_LONG, ADDRESS);
 		MethodHandle mh = linker.downcallHandle(fd);
-		MemorySegment funcSegmt = arena.allocateFrom("JEP454 DOWNCALL TEST SUITES");
+		MemorySegment funcSegmt = PrimitiveTypeTests1.allocateString("JEP454 DOWNCALL TEST SUITES");
 		long strLength = (long)mh.invoke(strlenSymbol, funcSegmt);
 		Assert.assertEquals(strLength, 27);
 	}
@@ -289,7 +289,7 @@ public void test_printfFromDefaultLibWithMemAddr_2() throws Throwable {
 		MemorySegment functionSymbol = defaultLibLookup.find("printf").get();
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, ADDRESS, JAVA_INT, JAVA_INT, JAVA_INT);
 		MethodHandle mh = linker.downcallHandle(fd);
-		MemorySegment formatSegmt = arena.allocateFrom("\n%d + %d = %d\n");
+		MemorySegment formatSegmt = PrimitiveTypeTests1.allocateString("\n%d + %d = %d\n");
 		mh.invoke(functionSymbol, formatSegmt, 15, 27, 42);
 	}
 
@@ -298,7 +298,7 @@ public void test_printfFromDefaultLibWithMemAddr_LinkerOption_2() throws Throwab
 		MemorySegment functionSymbol = defaultLibLookup.find("printf").get();
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, ADDRESS, JAVA_INT, JAVA_INT, JAVA_INT);
 		MethodHandle mh = linker.downcallHandle(fd, Linker.Option.firstVariadicArg(1));
-		MemorySegment formatSegmt = arena.allocateFrom("\n%d + %d = %d\n");
+		MemorySegment formatSegmt = PrimitiveTypeTests1.allocateString("\n%d + %d = %d\n");
 		mh.invoke(functionSymbol, formatSegmt, 15, 27, 42);
 	}
 }

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValhallaAttributeTests.java
Patch:
@@ -161,7 +161,8 @@ static public void testCreateTestPutFieldNullToNullRestrictedField() throws Thro
 	}
 
 	/* Instance field with NullRestricted attribute cannot be set to null. */
-	@Test(priority=2, invocationCount=2, expectedExceptions = java.lang.NullPointerException.class)
+	/* https://github.com/eclipse-openj9/openj9/issues/19692 tracks excluded tests */
+	@Test(priority=2, invocationCount=2, expectedExceptions = java.lang.NullPointerException.class, enabled = false)
 	static public void testPutFieldNullToNullRestrictedField() throws Throwable {
 		testPutFieldNullToNullRestrictedFieldClass.newInstance();
 	}

File: test/functional/Valhalla/src_lw5/org/openj9/test/lworld/ValueTypeGenerator.java
Patch:
@@ -188,8 +188,8 @@ private static byte[] generateClass(ClassConfiguration config) {
 
 		ClassWriter cw = new ClassWriter(0);
 
-		int classFlags = ACC_PUBLIC + ACC_FINAL + (isRef? ValhallaUtils.ACC_IDENTITY : ValhallaUtils.ACC_VALUE_TYPE) + extraClassFlags;
-		cw.visit(ValhallaUtils.CLASS_FILE_MAJOR_VERSION, classFlags,
+		int classFlags = ACC_PUBLIC + ACC_FINAL + (isRef? ValhallaUtils.ACC_IDENTITY : 0) + extraClassFlags;
+		cw.visit(ValhallaUtils.VALUE_TYPE_CLASS_FILE_VERSION, classFlags,
 			className, null, superName, null);
 
 		int makeMaxLocal = 0;

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeGenerator.java
Patch:
@@ -209,9 +209,9 @@ private static byte[] generateClass(ClassConfiguration config) {
 		String classFileName = className + ".class";
 
 		if (isRef) {
-			cw.visit(ValhallaUtils.CLASS_FILE_MAJOR_VERSION, ACC_PUBLIC + ACC_FINAL + extraClassFlags, className, null, superName, null);
+			cw.visit(ValhallaUtils.VALUE_TYPE_CLASS_FILE_VERSION, ACC_PUBLIC + ACC_FINAL + ValhallaUtils.ACC_IDENTITY + extraClassFlags, className, null, superName, null);
 		} else {
-			cw.visit(ValhallaUtils.CLASS_FILE_MAJOR_VERSION, ACC_PUBLIC + ACC_FINAL + ValhallaUtils.ACC_VALUE_TYPE + ValhallaUtils.ACC_PRIMITIVE + extraClassFlags, className, null, superName, null);
+			cw.visit(ValhallaUtils.VALUE_TYPE_CLASS_FILE_VERSION, ACC_PUBLIC + ACC_FINAL + extraClassFlags, className, null, superName, null);
 		}
 
 		cw.visitSource(className + ".java", null);

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeUnsafeTests.java
Patch:
@@ -23,6 +23,7 @@
 
 
 import jdk.internal.misc.Unsafe;
+import jdk.internal.vm.annotation.ImplicitlyConstructible;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.lang.reflect.InvocationTargetException;
@@ -281,7 +282,8 @@ static public void testUninitializedDefaultValueOfArray() throws Throwable {
 
 	@Test
 	static public void testuninitializedVTClassHasNullDefaultValue() {
-		primitive class NeverInitialized {
+		@ImplicitlyConstructible
+		value class NeverInitialized {
 			final ValueTypeInt i;
 			NeverInitialized(ValueTypeInt i) { this.i = i; }
 		}

File: test/functional/Valhalla/src_lw5/org/openj9/test/lworld/ValueTypeGenerator.java
Patch:
@@ -188,8 +188,8 @@ private static byte[] generateClass(ClassConfiguration config) {
 
 		ClassWriter cw = new ClassWriter(0);
 
-		int classFlags = ACC_PUBLIC + ACC_FINAL + (isRef? ValhallaUtils.ACC_IDENTITY : ValhallaUtils.ACC_VALUE_TYPE) + extraClassFlags;
-		cw.visit(ValhallaUtils.CLASS_FILE_MAJOR_VERSION, classFlags,
+		int classFlags = ACC_PUBLIC + ACC_FINAL + (isRef? ValhallaUtils.ACC_IDENTITY : 0) + extraClassFlags;
+		cw.visit(ValhallaUtils.VALUE_TYPE_CLASS_FILE_VERSION, classFlags,
 			className, null, superName, null);
 
 		int makeMaxLocal = 0;

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeGenerator.java
Patch:
@@ -209,9 +209,9 @@ private static byte[] generateClass(ClassConfiguration config) {
 		String classFileName = className + ".class";
 
 		if (isRef) {
-			cw.visit(ValhallaUtils.CLASS_FILE_MAJOR_VERSION, ACC_PUBLIC + ACC_FINAL + extraClassFlags, className, null, superName, null);
+			cw.visit(ValhallaUtils.VALUE_TYPE_CLASS_FILE_VERSION, ACC_PUBLIC + ACC_FINAL + ValhallaUtils.ACC_IDENTITY + extraClassFlags, className, null, superName, null);
 		} else {
-			cw.visit(ValhallaUtils.CLASS_FILE_MAJOR_VERSION, ACC_PUBLIC + ACC_FINAL + ValhallaUtils.ACC_VALUE_TYPE + ValhallaUtils.ACC_PRIMITIVE + extraClassFlags, className, null, superName, null);
+			cw.visit(ValhallaUtils.VALUE_TYPE_CLASS_FILE_VERSION, ACC_PUBLIC + ACC_FINAL + extraClassFlags, className, null, superName, null);
 		}
 
 		cw.visitSource(className + ".java", null);

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeUnsafeTests.java
Patch:
@@ -23,6 +23,7 @@
 
 
 import jdk.internal.misc.Unsafe;
+import jdk.internal.vm.annotation.ImplicitlyConstructible;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.lang.reflect.InvocationTargetException;
@@ -281,7 +282,8 @@ static public void testUninitializedDefaultValueOfArray() throws Throwable {
 
 	@Test
 	static public void testuninitializedVTClassHasNullDefaultValue() {
-		primitive class NeverInitialized {
+		@ImplicitlyConstructible
+		value class NeverInitialized {
 			final ValueTypeInt i;
 			NeverInitialized(ValueTypeInt i) { this.i = i; }
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/BuildVersionCommand.java
Patch:
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
  *

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DSymtabCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DyldInfoCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylibCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylinkerCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EncryptionCommand64.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EntryPointCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkeditDataCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkerOptionCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LoadCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReader.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PrebindChecksumCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PreboundDylibCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RoutinesCommand64.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RpathCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SourceVersionCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SubCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SymtabCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/ThreadCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/TwoLevelHintsCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/UuidCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/PointerGenerator.java
Patch:
@@ -1490,7 +1490,7 @@ private File getOutputDir(String option) {
 	}
 
 	private static void writeCopyright(PrintWriter writer) {
-		writer.println("/*******************************************************************************");
+		writer.println("/*");
 		writer.println(" * Copyright IBM Corp. and others 1991");
 		writer.println(" *");
 		writer.println(" * This program and the accompanying materials are made available under");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/StructureStubGenerator.java
Patch:
@@ -416,7 +416,7 @@ private File getOutputDir() {
 	}
 
 	private static void writeCopyright(PrintWriter writer) {
-		writer.println("/*******************************************************************************");
+		writer.println("/*");
 		writer.println(" * Copyright IBM Corp. and others 1991");
 		writer.println(" *");
 		writer.println(" * This program and the accompanying materials are made available under");

File: jcl/src/java.management/share/classes/java/lang/management/DefaultPlatformMBeanProvider.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION > 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2016
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/LockInfo.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2008
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/MemoryType.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2005
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/MonitorInfo.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2007
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/PlatformManagedObject.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF (JAVA_SPEC_VERSION == 8) & !Sidecar18-SE-OpenJ9]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/ThreadInfo.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2007
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/ThreadInfoAccessImpl.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2017
  *
  * This program and the accompanying materials are made available under

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/BuildVersionCommand.java
Patch:
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
  *

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DSymtabCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DyldInfoCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylibCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylinkerCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EncryptionCommand64.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EntryPointCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkeditDataCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkerOptionCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LoadCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReader.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PrebindChecksumCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PreboundDylibCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RoutinesCommand64.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RpathCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SourceVersionCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SubCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SymtabCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/ThreadCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/TwoLevelHintsCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/UuidCommand.java
Patch:
@@ -19,17 +19,17 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  */
-/*******************************************************************************
+/*
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
- * 
+ *
  * This file contains Original Code and/or Modifications of Original Code
  * as defined in and that are subject to the Apple Public Source License
  * Version 2.0 (the 'License'). You may not use this file except in
  * compliance with the License. Please obtain a copy of the License at
  * http://www.opensource.apple.com/apsl/ and read it before using this
  * file.
- * 
+ *
  * The Original Code and all software distributed under the License are
  * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
  * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,

File: jcl/src/java.management/share/classes/java/lang/management/DefaultPlatformMBeanProvider.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION > 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2016
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/LockInfo.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2008
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/MemoryType.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2005
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/MonitorInfo.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2007
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/PlatformManagedObject.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF (JAVA_SPEC_VERSION == 8) & !Sidecar18-SE-OpenJ9]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/ThreadInfo.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2007
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/ThreadInfoAccessImpl.java
Patch:
@@ -1,6 +1,5 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*
- *******************************************************************************
  * Copyright IBM Corp. and others 2017
  *
  * This program and the accompanying materials are made available under

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/PointerGenerator.java
Patch:
@@ -1490,7 +1490,7 @@ private File getOutputDir(String option) {
 	}
 
 	private static void writeCopyright(PrintWriter writer) {
-		writer.println("/*******************************************************************************");
+		writer.println("/*");
 		writer.println(" * Copyright IBM Corp. and others 1991");
 		writer.println(" *");
 		writer.println(" * This program and the accompanying materials are made available under");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/StructureStubGenerator.java
Patch:
@@ -416,7 +416,7 @@ private File getOutputDir() {
 	}
 
 	private static void writeCopyright(PrintWriter writer) {
-		writer.println("/*******************************************************************************");
+		writer.println("/*");
 		writer.println(" * Copyright IBM Corp. and others 1991");
 		writer.println(" *");
 		writer.println(" * This program and the accompanying materials are made available under");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ValueTypeHelper.java
Patch:
@@ -217,7 +217,8 @@ public J9ClassPointer findJ9ClassInFlattenedClassCacheWithSigName(J9ClassPointer
 
 		@Override
 		public boolean isRomClassAValueType(J9ROMClassPointer romClass) throws CorruptDataException {
-			return !romClass.modifiers().allBitsIn(J9JavaAccessFlags.J9AccClassHasIdentity);
+			long flag = J9JavaAccessFlags.J9AccClassHasIdentity;
+			return (flag != 0) && !romClass.modifiers().anyBitsIn(flag);
 		}
 
 		@Override

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ValueTypeHelper.java
Patch:
@@ -217,7 +217,8 @@ public J9ClassPointer findJ9ClassInFlattenedClassCacheWithSigName(J9ClassPointer
 
 		@Override
 		public boolean isRomClassAValueType(J9ROMClassPointer romClass) throws CorruptDataException {
-			return !romClass.modifiers().allBitsIn(J9JavaAccessFlags.J9AccClassHasIdentity);
+			long flag = J9JavaAccessFlags.J9AccClassHasIdentity;
+			return (flag != 0) && !romClass.modifiers().anyBitsIn(flag);
 		}
 
 		@Override

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ValueTypeHelper.java
Patch:
@@ -217,7 +217,7 @@ public J9ClassPointer findJ9ClassInFlattenedClassCacheWithSigName(J9ClassPointer
 
 		@Override
 		public boolean isRomClassAValueType(J9ROMClassPointer romClass) throws CorruptDataException {
-			return romClass.modifiers().allBitsIn(J9JavaAccessFlags.J9AccValueType);
+			return !romClass.modifiers().allBitsIn(J9JavaAccessFlags.J9AccClassHasIdentity);
 		}
 
 		@Override

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/MultiThreadingTests2.java
Patch:
@@ -44,7 +44,7 @@
  * verifies the downcalls with the shared downcall handlder (cached as soft reference in OpenJDK)
  * in multithreading.
  */
-@Test(groups = { "level.sanity", "disabled.os.zos" })
+@Test(groups = { "level.sanity" })
 public class MultiThreadingTests2 implements Thread.UncaughtExceptionHandler {
 	private volatile Throwable initException;
 

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/StructTests1.java
Patch:
@@ -52,7 +52,7 @@
  * [2] the test suite is mainly intended for the following Clinker API:
  * MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity", "disabled.os.zos" })
+@Test(groups = { "level.sanity" })
 public class StructTests1 {
 	private static boolean isAixOS = System.getProperty("os.name").toLowerCase().contains("aix");
 	private static Linker linker = Linker.nativeLinker();

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/StructTests2.java
Patch:
@@ -52,7 +52,7 @@
  * [2] the test suite is mainly intended for the following Clinker API:
  * MethodHandle downcallHandle(FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity", "disabled.os.zos" })
+@Test(groups = { "level.sanity" })
 public class StructTests2 {
 	private static boolean isAixOS = System.getProperty("os.name").toLowerCase().contains("aix");
 	private static Linker linker = Linker.nativeLinker();

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/MultiThreadingTests2.java
Patch:
@@ -44,7 +44,7 @@
  * verifies the downcalls with the shared downcall handlder (cached as soft reference in OpenJDK)
  * in multithreading.
  */
-@Test(groups = { "level.sanity", "disabled.os.zos" })
+@Test(groups = { "level.sanity" })
 public class MultiThreadingTests2 implements Thread.UncaughtExceptionHandler {
 	private volatile Throwable initException;
 

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/StructTests1.java
Patch:
@@ -52,7 +52,7 @@
  * [2] the test suite is mainly intended for the following Clinker API:
  * MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity", "disabled.os.zos" })
+@Test(groups = { "level.sanity" })
 public class StructTests1 {
 	private static boolean isAixOS = System.getProperty("os.name").toLowerCase().contains("aix");
 	private static Linker linker = Linker.nativeLinker();

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/StructTests2.java
Patch:
@@ -52,7 +52,7 @@
  * [2] the test suite is mainly intended for the following Clinker API:
  * MethodHandle downcallHandle(FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity", "disabled.os.zos" })
+@Test(groups = { "level.sanity" })
 public class StructTests2 {
 	private static boolean isAixOS = System.getProperty("os.name").toLowerCase().contains("aix");
 	private static Linker linker = Linker.nativeLinker();

File: test/functional/Java9andUp/src/org/openj9/test/varhandle/ViewVarHandleTests.java
Patch:
@@ -24,9 +24,12 @@
 import java.lang.invoke.VarHandle;
 import java.nio.*;
 
+import org.openj9.test.util.VersionCheck;
 import org.testng.*;
 
 class ViewVarHandleTests {
+	static int versionMajor = VersionCheck.major();
+
 	ByteOrder _byteOrder;
 	ByteBuffer _buffer;
 	

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSBundleEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSBundleFile.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSHookConfigurator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSHookImpls.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/CTypeParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.util.regex.Matcher;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/ExtractCPPFlags.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateBlobC.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateInputCFile.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateSpecSuperset.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GetNativeDirectory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2007
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/SortHeadersInConfig.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/StripGarbage.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/BlobHeader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.config;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/Configuration.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.config;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/ConstantHandlingStrategy.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.config;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/constants/ConstantParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.constants;
 
 import java.io.BufferedReader;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/constants/ICVisitor.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.constants;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ClassType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import com.ibm.j9ddr.autoblob.linenumbers.SourceLocation;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Constant.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ConstantsType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import com.ibm.j9ddr.autoblob.linenumbers.SourceLocation;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Declaration.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/EnumType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.util.Collection;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/EnumerationConstant.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ITypeCollection.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/PseudoType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.util.ArrayList;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/RecordType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/StructType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Type.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Typedef.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/UnionType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import com.ibm.j9ddr.autoblob.linenumbers.SourceLocation;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/UserDefinedType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/IHeaderResolver.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/ILineNumberConverter.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/PreProcessedSourceParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 import java.io.BufferedReader;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/SourceLocation.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/xmlparser/J9FlagsXMLParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2011
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.xmlparser;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/xmlparser/StructureXMLParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.xmlparser;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/testsrc/TestConstantParser.java
Patch:
@@ -4,7 +4,7 @@
 import com.ibm.j9ddr.autoblob.constants.ConstantParser;
 import com.ibm.j9ddr.autoblob.constants.ICVisitor;
 
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -24,7 +24,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 /**
  * @author andhall

File: debugtools/DDR_Autoblob/testsrc/TestPreProcessedSource.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.ibm.j9ddr.autoblob.linenumbers.PreProcessedSourceParser;
 
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -22,7 +22,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 /**
  * @author andhall

File: debugtools/DDR_VM/src/com/ibm/j9ddr/AddressedCorruptDataException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.Arrays;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/CTypeParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.regex.Matcher;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/CorruptDataException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/DDRSymbolFinder.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/DataUnavailableException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/GeneratedFieldAccessor.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.lang.annotation.Retention;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/GeneratedPointerClass.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.lang.annotation.ElementType;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/IBootstrapRunnable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 public interface IBootstrapRunnable {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/IVMData.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/InvalidDataTypeException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
  
 package com.ibm.j9ddr;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/J9DDRClassLoader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.io.ByteArrayOutputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/NoSuchFieldException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
  
 package com.ibm.j9ddr;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/NullPointerDereference.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import com.ibm.j9ddr.corereaders.memory.MemoryFault;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureHeader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureTypeManager.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/VMDataFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/blobs/BlobFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.blobs;
 
 import java.io.InputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/blobs/IBlobFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.blobs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2011
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.command;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.command;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/ConsoleCommandReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.command;
 
 import java.io.BufferedReader;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/ExitException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.command;
 
 public class ExitException extends Exception {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/AbstractCoreReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.ByteArrayOutputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ClosingFileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/CoreReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import static java.util.logging.Level.WARNING;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/CorruptCoreException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/DumpException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ICore.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ICoreFileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ILibraryDependentCore.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ILibraryResolver.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.FileNotFoundException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/IModuleFile.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/InvalidDumpFormatException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2008
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 public class InvalidDumpFormatException extends Exception

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/LibraryDataSource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/LibraryResolverFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/Platform.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ZipFileResolver.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2011
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIX32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.aix;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIX64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReaderFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/ARReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/BaseAIXOSThread.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.util.Collections;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/XCOFFReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 abstract class Address {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address32.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class Address32 extends Address {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class Address64 extends Address {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/DataEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class DataEntry {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELF32FileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELF64FileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFAArch64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFAMD64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFARM32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2015
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_AMD64;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReaderFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFFileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.ByteArrayOutputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFIA32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFPPC32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFPPC64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFRISCV64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFS39031DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFS39064DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFSymbol.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class ELFSymbol

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/LinuxProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.UnsupportedEncodingException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ProgramHeaderEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/SectionHeaderEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/CIE.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/FDE.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/Unwind.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/UnwindTable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.ByteArrayInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/BuildVersionCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DSymtabCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DyldInfoCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylibCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylinkerCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EncryptionCommand64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EntryPointCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkeditDataCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkerOptionCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LoadCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.EOFException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReaderFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.macho;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/NoteCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/OSXProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.UnsupportedEncodingException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PrebindChecksumCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PreboundDylibCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RoutinesCommand64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RpathCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SegmentCommand64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SourceVersionCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SubCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SymtabCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/ThreadCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/TwoLevelHintsCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/UuidCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/VersionMinCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/AbstractMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.lang.ref.Reference;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Addresses.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BaseMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BaseModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BufferedMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BufferedMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.nio.ByteBuffer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DelegatingMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DetailedDumpMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DumpMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/EnvironmentUtils.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.io.UnsupportedEncodingException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IDetailedMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemoryImageInputStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/INamedMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IProcess.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ISymbol.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemoryFault.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import com.ibm.j9ddr.AddressedCorruptDataException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemorySourceTable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MissingFileModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collections;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Module.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ProtectedMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/SearchableMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Symbol.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/SymbolUtil.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.ArrayList;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/UnbackedMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/BaseWindowsOSThread.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/EarlyInitializedStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/LateInitializedStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/Memory64Stream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MemoryInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MiniDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MiscInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ModuleStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/Stream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 abstract class Stream

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/SystemInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ThreadInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ThreadStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/WindowsProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/RuntimeFunction.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 
 public class RuntimeFunction implements Comparable<RuntimeFunction> {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindCode.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindInfo.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IOSStackFrame.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IOSThread.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IRegister.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/OSStackFrame.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/Register.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/TDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/AddressRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/AddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 
 import java.io.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/AddressSpaceImageInputStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/Dump.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/MVSFileReader.java
Patch:
@@ -1,5 +1,5 @@
 /*[INCLUDE-IF PLATFORM-mz31 | PLATFORM-mz64]*/
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -19,7 +19,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 
 import java.io.FileNotFoundException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/MutableAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/SearchListener.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/SystemTrace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa32_11Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa64_11Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CaaNotFound.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CaaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeedsaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeedsahpTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp_transition32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp_transition64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp_transitionTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeelcaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexcibTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexcibhTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdlcb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdlcb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexdlcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdsaf.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexedb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexedb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexedbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexhcom32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexhcom64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexhcomTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexhepvTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexhp1bTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexlaaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexoepvTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexpp1bTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexqpcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcbpool32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcbpool64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexqpcbpoolTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexrcb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexrcb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexrcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexsancTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexsfxmTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexstkhTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeextvbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeextvbeTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ciet2ExpFuncEntryTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ciet2ExpVarEntryTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ciet2Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CietExpEntryTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CietTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Dll.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllFunction.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllVariable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllcsectTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllexpfuncsTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllexpvarsTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DsaStackFrame.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Edb.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/EnsmTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Function.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/FunctionEmulator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/SmcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/StackNotFound.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/BpxzotcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/BpxzustaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/CeexcvtTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhaascbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhaasxbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhapsaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IharbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Ihartm2aTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhastcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhawebTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2015
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhaxsbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IkjrbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IkjrbprefixTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IkjtcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Lse.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/LsedTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Lses1lsed1Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/LseslsedTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Lsestate1Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/LsestateTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/OtcbcopyonforkTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Rb.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/RegisterSet.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Tcb.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/AbstractHashMap.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/AbstractLruCache.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/BitSetArray.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/BitStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/CharConversion.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/CompressedRecordArray.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/Emulator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/FileFormatException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntEnumeration.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntegerArray.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntegerLruCache.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSBundleEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSBundleFile.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSHookConfigurator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSHookImpls.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.cds;
 

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/CTypeParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.util.regex.Matcher;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/ExtractCPPFlags.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateBlobC.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateInputCFile.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateSpecSuperset.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GetNativeDirectory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2007
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/SortHeadersInConfig.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/StripGarbage.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/BlobHeader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.config;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/Configuration.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.config;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/ConstantHandlingStrategy.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.config;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/constants/ConstantParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.constants;
 
 import java.io.BufferedReader;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/constants/ICVisitor.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.constants;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ClassType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import com.ibm.j9ddr.autoblob.linenumbers.SourceLocation;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Constant.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ConstantsType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import com.ibm.j9ddr.autoblob.linenumbers.SourceLocation;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Declaration.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/EnumType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.util.Collection;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/EnumerationConstant.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ITypeCollection.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/PseudoType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.util.ArrayList;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/RecordType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/StructType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Type.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Typedef.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/UnionType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import com.ibm.j9ddr.autoblob.linenumbers.SourceLocation;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/UserDefinedType.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.datamodel;
 
 import java.io.PrintWriter;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/IHeaderResolver.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/ILineNumberConverter.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/PreProcessedSourceParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 import java.io.BufferedReader;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/SourceLocation.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.linenumbers;
 
 /**

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/xmlparser/J9FlagsXMLParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2011
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.xmlparser;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/xmlparser/StructureXMLParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.autoblob.xmlparser;
 
 import java.io.File;

File: debugtools/DDR_Autoblob/testsrc/TestConstantParser.java
Patch:
@@ -4,7 +4,7 @@
 import com.ibm.j9ddr.autoblob.constants.ConstantParser;
 import com.ibm.j9ddr.autoblob.constants.ICVisitor;
 
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -24,7 +24,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 /**
  * @author andhall

File: debugtools/DDR_Autoblob/testsrc/TestPreProcessedSource.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.ibm.j9ddr.autoblob.linenumbers.PreProcessedSourceParser;
 
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -22,7 +22,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 /**
  * @author andhall

File: debugtools/DDR_VM/src/com/ibm/j9ddr/AddressedCorruptDataException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.Arrays;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/CTypeParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.regex.Matcher;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/CorruptDataException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/DDRSymbolFinder.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/DataUnavailableException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/GeneratedFieldAccessor.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.lang.annotation.Retention;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/GeneratedPointerClass.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.lang.annotation.ElementType;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/IBootstrapRunnable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 public interface IBootstrapRunnable {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/IVMData.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/InvalidDataTypeException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
  
 package com.ibm.j9ddr;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/J9DDRClassLoader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.io.ByteArrayOutputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/NoSuchFieldException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
  
 package com.ibm.j9ddr;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/NullPointerDereference.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import com.ibm.j9ddr.corereaders.memory.MemoryFault;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureHeader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureTypeManager.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/VMDataFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/blobs/BlobFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.blobs;
 
 import java.io.InputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/blobs/IBlobFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.blobs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandParser.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2011
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.command;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.command;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/ConsoleCommandReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.command;
 
 import java.io.BufferedReader;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/ExitException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.command;
 
 public class ExitException extends Exception {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/AbstractCoreReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.ByteArrayOutputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ClosingFileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/CoreReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import static java.util.logging.Level.WARNING;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/CorruptCoreException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/DumpException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ICore.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ICoreFileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ILibraryDependentCore.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ILibraryResolver.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.FileNotFoundException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/IModuleFile.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/InvalidDumpFormatException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2008
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 public class InvalidDumpFormatException extends Exception

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/LibraryDataSource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/LibraryResolverFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/Platform.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ZipFileResolver.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2011
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIX32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.aix;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIX64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReaderFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/ARReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/BaseAIXOSThread.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.util.Collections;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/XCOFFReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.aix;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 abstract class Address {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address32.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class Address32 extends Address {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class Address64 extends Address {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/DataEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class DataEntry {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELF32FileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELF64FileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFAArch64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFAMD64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFARM32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2015
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_AMD64;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReaderFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFFileReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.ByteArrayOutputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFIA32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFPPC32DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFPPC64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFRISCV64DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFS39031DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFS39064DumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 1991
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.elf;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFSymbol.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 class ELFSymbol

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/LinuxProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.io.UnsupportedEncodingException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ProgramHeaderEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/SectionHeaderEntry.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/CIE.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/FDE.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/Unwind.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/UnwindTable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.elf.unwind;
 
 import java.io.ByteArrayInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/BuildVersionCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DSymtabCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DyldInfoCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylibCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylinkerCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EncryptionCommand64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EntryPointCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkeditDataCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkerOptionCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LoadCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.EOFException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReaderFactory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.macho;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/NoteCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/OSXProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.UnsupportedEncodingException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PrebindChecksumCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PreboundDylibCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RoutinesCommand64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RpathCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SegmentCommand64.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SourceVersionCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SubCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SymtabCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/ThreadCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/TwoLevelHintsCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/UuidCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/VersionMinCommand.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 /*******************************************************************************
  * Portions Copyright (c) 1999-2003 Apple Computer, Inc. All Rights
  * Reserved.
@@ -37,7 +37,7 @@
  * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
  * Please see the License for the specific language governing rights and
  * limitations under the License.
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.macho;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/AbstractMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.lang.ref.Reference;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Addresses.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BaseMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BaseModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BufferedMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BufferedMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2019
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.nio.ByteBuffer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DelegatingMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DetailedDumpMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DumpMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/EnvironmentUtils.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.io.UnsupportedEncodingException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IDetailedMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2013
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemoryImageInputStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/INamedMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IProcess.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ISymbol.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemoryFault.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import com.ibm.j9ddr.AddressedCorruptDataException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2010
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemorySourceTable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MissingFileModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collections;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Module.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ProtectedMemoryRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/SearchableMemory.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import static java.util.logging.Level.FINE;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Symbol.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/SymbolUtil.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.ArrayList;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/UnbackedMemorySource.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.memory;
 
 import java.util.Properties;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/BaseWindowsOSThread.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/EarlyInitializedStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/LateInitializedStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/Memory64Stream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MemoryInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MiniDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MiscInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ModuleStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/Stream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 abstract class Stream

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/SystemInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ThreadInfoStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2014
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ThreadStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2004
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/WindowsProcessAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump;
 
 import java.nio.ByteOrder;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/RuntimeFunction.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 
 public class RuntimeFunction implements Comparable<RuntimeFunction> {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindCode.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindInfo.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindModule.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2012
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.minidump.unwind;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IOSStackFrame.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IOSThread.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 import java.util.Collection;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IRegister.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/OSStackFrame.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/Register.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.osthread;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/TDumpReader.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump;
 
 import java.io.File;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/AddressRange.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/AddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 
 import java.io.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/AddressSpaceImageInputStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/Dump.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/MVSFileReader.java
Patch:
@@ -1,5 +1,5 @@
 /*[INCLUDE-IF PLATFORM-mz31 | PLATFORM-mz64]*/
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2009
  *
  * This program and the accompanying materials are made available under
@@ -19,7 +19,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 
 import java.io.FileNotFoundException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/MutableAddressSpace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/SearchListener.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/SystemTrace.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa32_11Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa64_11Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CaaNotFound.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CaaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeedsaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeedsahpTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp_transition32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp_transition64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceedsahp_transitionTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeelcaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexcibTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexcibhTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdlcb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdlcb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexdlcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdsaf.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexedb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexedb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexedbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexhcom32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexhcom64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexhcomTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexhepvTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexhp1bTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexlaaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexoepvTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexpp1bTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexqpcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcbpool32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexqpcbpool64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexqpcbpoolTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexrcb32Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexrcb64Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexrcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2001
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexsancTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexsfxmTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeexstkhTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeextvbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CeextvbeTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ciet2ExpFuncEntryTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ciet2ExpVarEntryTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ciet2Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CietExpEntryTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/CietTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Dll.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllFunction.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllVariable.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllcsectTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllexpfuncsTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DllexpvarsTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DsaStackFrame.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Edb.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/EnsmTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Function.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/FunctionEmulator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/SmcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/StackNotFound.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/BpxzotcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/BpxzustaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/CeexcvtTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhaascbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhaasxbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhapsaTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IharbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Ihartm2aTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhastcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhawebTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2015
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import java.io.IOException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IhaxsbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IkjrbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IkjrbprefixTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/IkjtcbTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Lse.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/LsedTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Lses1lsed1Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/LseslsedTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Lsestate1Template.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/LsestateTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/OtcbcopyonforkTemplate.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 
 import javax.imageio.stream.ImageInputStream;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Rb.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/RegisterSet.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Tcb.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.mvs;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/AbstractHashMap.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/AbstractLruCache.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/BitSetArray.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/BitStream.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/CharConversion.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/CompressedRecordArray.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/Emulator.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/FileFormatException.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntEnumeration.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntegerArray.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntegerLruCache.java
Patch:
@@ -1,4 +1,4 @@
-/*******************************************************************************
+/*
  * Copyright IBM Corp. and others 2006
  *
  * This program and the accompanying materials are made available under
@@ -18,7 +18,7 @@
  * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
- *******************************************************************************/
+ */
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/InvalidDownCallTests.java
Patch:
@@ -114,6 +114,7 @@ public void test_nullValueForStructArgument() throws Throwable {
 		}
 	}
 
+	@Test
 	public void test_nullSegmentForPtrArgument() throws Throwable {
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, JAVA_INT, ADDRESS);
 		MemorySegment functionSymbol = nativeLibLookup.find("validateNullAddrArgument").get();
@@ -154,6 +155,7 @@ public void test_heapSegmentForPtrArgument() throws Throwable {
 		fail("Failed to throw out IllegalArgumentException in the case of the heap segment");
 	}
 
+	@Test
 	public void test_heapSegmentForStructArgument() throws Throwable {
 		GroupLayout structLayout = MemoryLayout.structLayout(JAVA_INT.withName("elem1"), JAVA_INT.withName("elem2"));
 		VarHandle intHandle1 = structLayout.varHandle(PathElement.groupElement("elem1"));

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/MultiThreadingTests2.java
Patch:
@@ -44,7 +44,7 @@
  * verifies the downcalls with the shared downcall handlder (cached as soft reference in OpenJDK)
  * in multithreading.
  */
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity", "disabled.os.zos" })
 public class MultiThreadingTests2 implements Thread.UncaughtExceptionHandler {
 	private volatile Throwable initException;
 

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/StructTests1.java
Patch:
@@ -52,7 +52,7 @@
  * [2] the test suite is mainly intended for the following Clinker API:
  * MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity", "disabled.os.zos" })
 public class StructTests1 {
 	private static boolean isAixOS = System.getProperty("os.name").toLowerCase().contains("aix");
 	private static Linker linker = Linker.nativeLinker();

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/StructTests2.java
Patch:
@@ -52,7 +52,7 @@
  * [2] the test suite is mainly intended for the following Clinker API:
  * MethodHandle downcallHandle(FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity", "disabled.os.zos" })
 public class StructTests2 {
 	private static boolean isAixOS = System.getProperty("os.name").toLowerCase().contains("aix");
 	private static Linker linker = Linker.nativeLinker();

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/UnionStructTests.java
Patch:
@@ -49,7 +49,7 @@
  * The test suite is mainly intended for the following Linker API:
  * MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity", "disabled.os.zos" })
 public class UnionStructTests {
 	private static Linker linker = Linker.nativeLinker();
 

File: test/functional/Java21Only/src/org/openj9/test/jep442/downcall/UnionTests.java
Patch:
@@ -48,7 +48,7 @@
  * The test suite is mainly intended for the following Linker API:
  * MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function)
  */
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity", "disabled.os.zos" })
 public class UnionTests {
 	private static Linker linker = Linker.nativeLinker();
 

File: test/Utils/src/org/openj9/test/util/IncludeExcludeTestAnnotationTransformer.java
Patch:
@@ -131,7 +131,7 @@ public void transform(ITestAnnotation annotation, Class testClass, Constructor t
 					groups.addAll(excludeData.getExcludeGroupNames());
 					annotation.setGroups(groups.toArray(new String[0]));
 					String[] testGroups = annotation.getGroups();
-					logger.info("disable method is " + testMethod.getName() + "diabled annotation " + Arrays.toString(testGroups));
+					logger.info("Disable method: " + testMethod.getName() + ". Disable annotation: " + Arrays.toString(testGroups));
 				}
 			}
 		}

File: test/Utils/src/org/openj9/test/util/IncludeExcludeTestAnnotationTransformer.java
Patch:
@@ -131,7 +131,7 @@ public void transform(ITestAnnotation annotation, Class testClass, Constructor t
 					groups.addAll(excludeData.getExcludeGroupNames());
 					annotation.setGroups(groups.toArray(new String[0]));
 					String[] testGroups = annotation.getGroups();
-					logger.info("disable method is " + testMethod.getName() + "diabled annotation " + Arrays.toString(testGroups));
+					logger.info("Disable method: " + testMethod.getName() + ". Disable annotation: " + Arrays.toString(testGroups));
 				}
 			}
 		}

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Util.java
Patch:
@@ -53,7 +53,7 @@
 public class Util {
 	private static final String SUN_JAVA_COMMAND = "sun.java.command"; //$NON-NLS-1$
 	private static final String SUN_JVM_ARGS = "sun.jvm.args"; //$NON-NLS-1$
-	// rety 3 times by default in case of SocketException
+	// retry 3 times by default in case of SocketException
 	static final int retry = Integer.getInteger("com.ibm.tools.attach.retry", 3).intValue(); //$NON-NLS-1$
 
 	/**

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestJcmd.java
Patch:
@@ -88,9 +88,7 @@ public class TestJcmd extends AttachApiTest {
 	public void testJcmdHelps() throws IOException {
 		String[] HELP_OPTIONS = { "-h", HELP_COMMAND, "-help", "--help" };
 		for (String helpOption : HELP_OPTIONS) {
-			List<String> args = new ArrayList<>();
-			args.add(helpOption);
-			List<String> jcmdOutput = runCommandAndLogOutput(args);
+			List<String> jcmdOutput = runCommandAndLogOutput(Collections.singletonList(helpOption));
 			/* Sample of the text from Jcmd.HELPTEXT */
 			String expectedString = "list JVM processes on the local machine.";
 			Optional<String> searchResult = StringUtilities.searchSubstring(expectedString, jcmdOutput);

File: jcl/src/jdk.attach/share/classes/com/ibm/tools/attach/attacher/OpenJ9VirtualMachine.java
Patch:
@@ -319,7 +319,7 @@ public synchronized void loadAgentPath(String agentPath, String options)
 	 * @throws IOException in case of a communication error
 	 */
 	public Properties executeDiagnosticCommand(String diagnosticCommand) throws IOException {
-		IPC.logMessage("enter executeDiagnosticCommand ", diagnosticCommand); //$NON-NLS-1$
+		IPC.logMessage("OpenJ9VirtualMachine enter executeDiagnosticCommand ", diagnosticCommand); //$NON-NLS-1$
 		AttachmentConnection.streamSend(commandStream, Command.ATTACH_DIAGNOSTICS_PREFIX + diagnosticCommand);
 		return IPC.receiveProperties(responseStream, true);
 	}

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/attacher/AttacherDiagnosticsProvider.java
Patch:
@@ -52,7 +52,7 @@ public class AttacherDiagnosticsProvider {
 	 * @throws IOException in case of a communication error
 	 */
 	public Properties executeDiagnosticCommand(String diagnosticCommand) throws IOException {
-		IPC.logMessage("enter executeDiagnosticCommand ", diagnosticCommand); //$NON-NLS-1$
+		IPC.logMessage("AttacherDiagnosticsProvider enter executeDiagnosticCommand ", diagnosticCommand); //$NON-NLS-1$
 		checkAttached();
 		Properties info = vm.executeDiagnosticCommand(diagnosticCommand);
 		DiagnosticProperties.dumpPropertiesIfDebug("Properties from target:", info); //$NON-NLS-1$

File: test/functional/TestUtilitiesJ9/src/org/openj9/test/attachAPI/AttachApiTest.java
Patch:
@@ -223,6 +223,8 @@ protected List<String> runCommand(List<String> args) throws IOException {
 	}
 
 	protected List<String> runCommandAndLogOutput(List<String> commandLineOptions) throws IOException {
+		// this api is used by jcmd and jps
+		commandLineOptions.add("-J-Dcom.ibm.tools.attach.logging=yes");
 		List<String> jpsOutput = runCommand(commandLineOptions);
 		StringWriter buff = new StringWriter();
 		PrintWriter buffWriter = new PrintWriter(buff);

File: test/functional/TestUtilitiesJ9/src/org/openj9/test/attachAPI/TargetManager.java
Patch:
@@ -71,7 +71,7 @@ public class TargetManager {
 	private String targetVmid;
 	public static final String TARGETVM_START = "targetvm_start";
 	public static final String TARGETVM_STOP = "targetvm_stop";
-	private static boolean doLogging = false;
+	private static boolean doLogging = true; // enable doLogging by default
 	private static final String DEFAULT_IPC_DIR = ".com_ibm_tools_attach";
 	public TargetStatus targetVmStatus;
 	private boolean active = true;

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/CommonDirectory.java
Patch:
@@ -36,11 +36,11 @@
  *
  */
 public abstract class CommonDirectory {
-	private static final String ATTACH_LOCK = "_attachlock"; //$NON-NLS-1$
+	static final String ATTACH_LOCK = "_attachlock"; //$NON-NLS-1$
 	private static final String COM_IBM_TOOLS_ATTACH_DIRECTORY = "com.ibm.tools.attach.directory"; //$NON-NLS-1$
 	private static final int COMMON_DIRECTORY_PERMISSIONS = 01777; /* allow anyone to create directories, but only owner can delete */
 	private static final int COMMON_LOCK_FILE_PERMISSIONS = 0666; /* allow anyone to create and use the file */
-	private static final String CONTROLLER_LOCKFILE = "_controller"; //$NON-NLS-1$
+	static final String CONTROLLER_LOCKFILE = "_controller"; //$NON-NLS-1$
 	static final String CONTROLLER_NOTIFIER = "_notifier"; //$NON-NLS-1$
 	static final int SEMAPHORE_OKAY = 0;
 	private static final String TRASH_PREFIX = ".trash_"; //$NON-NLS-1$

File: jcl/src/java.base/share/classes/openj9/internal/foreign/abi/InternalDowncallHandler.java
Patch:
@@ -94,7 +94,7 @@ public class InternalDowncallHandler {
 	/* The identifier denotes the passed-in argument is a heap segment which helps
 	 * extract the address from the heap argument's base object in native.
 	 */
-	private static final long DOWNCALL_HEAP_ARGUMENT_ID = 0x1;
+	private static final long DOWNCALL_HEAP_ARGUMENT_ID = 0xFFFFFFFFFFFFFFFFL;
 
 	/* The ThreadLocal holds the information of the heap argument which includes
 	 * the base object array, the offset array plus the current heap argument index

File: jcl/src/java.base/share/classes/openj9/internal/foreign/abi/InternalDowncallHandler.java
Patch:
@@ -94,7 +94,7 @@ public class InternalDowncallHandler {
 	/* The identifier denotes the passed-in argument is a heap segment which helps
 	 * extract the address from the heap argument's base object in native.
 	 */
-	private static final long DOWNCALL_HEAP_ARGUMENT_ID = 0x1;
+	private static final long DOWNCALL_HEAP_ARGUMENT_ID = 0xFFFFFFFFFFFFFFFFL;
 
 	/* The ThreadLocal holds the information of the heap argument which includes
 	 * the base object array, the offset array plus the current heap argument index

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -1184,6 +1184,7 @@ static void checkTmpDir() {
 	/*[ENDIF] JAVA_SPEC_VERSION >= 20 */
 }
 
+/*[IF JAVA_SPEC_VERSION >= 9]*/
 static void initSecurityManager(ClassLoader applicationClassLoader) {
 	String javaSecurityManager = internalGetProperties().getProperty("java.security.manager"); //$NON-NLS-1$
 	if (null == javaSecurityManager) {
@@ -1219,6 +1220,7 @@ static void initSecurityManager(ClassLoader applicationClassLoader) {
 		}
 	}
 }
+/*[ENDIF] JAVA_SPEC_VERSION >= 9 */
 
 /**
  * Sets the active security manager. Note that once

File: test/functional/CacheManagement/src/tests/sharedclasses/TestUtils.java
Patch:
@@ -147,7 +147,7 @@ public class TestUtils {
 		    config.put("cmd.runCompileSimpleApp","%java5c_exe% %1%/SimpleApp.java");
 		    config.put("cmd.runCompileSimpleApp2","%java5c_exe% %1%/SimpleApp2.java");
 		    config.put("cmd.runJarClassesInDir","%java5jar_exe% cf MySimpleApp.jar -C %1% .");
-		    config.put("cmd.runProgramSimpleApp","%java_exe% "+(isRealtimeDefined ? "-Xrealtime " : "")+"-Xshareclasses:"+(isRealtimeDefined ? "grow," : "")+"persistent,name=%1%,verbose  -classpath %2% SimpleApp");
+		    config.put("cmd.runProgramSimpleApp","%java_exe% "+(isRealtimeDefined ? "-Xrealtime " : "")+"-Xshareclasses:"+(isRealtimeDefined ? "grow," : "")+"persistent,name=%1%,verbose -Xscmx16m -classpath %2% SimpleApp");
 		    
 		    System.out.println("\n--------- PROGRAM RUN COMMANDLINE INFO ---------");
 		    System.out.println("java_exe =\t" + config.get("java_exe"));

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/BootstrapClassLoader.java
Patch:
@@ -36,7 +36,7 @@
 /**
  * BootstrapClassLoaders load classes out of the file system,
  * from the directories and jars on the system class path.
- * The system class path can be set using the command line 
+ * The system class path can be set using the command line
  * option "-scp <paths>", and can be read from the system
  * property "sun.boot.class.path".
  *
@@ -101,7 +101,7 @@ protected Package getPackage(String name) {
 }
 
 protected Package[] getPackages() {
-	return VM.getVMLangAccess().getSystemPackages();	
+	return VM.getVMLangAccess().getSystemPackages();
 }
 
 /*[PR 123807] Design 450 SE.JVMTI: JVMTI 1.1: New ClassLoaderSearch API */
@@ -117,7 +117,7 @@ private void appendToClassPathForInstrumentation(String jarPath) throws Throwabl
 		// Note: No java-level synchronization is required to call the native.
 		/*[PR CMVC 164017] appendToClassPathForInstrumentation uses UTF8 file path */
 		int newCount = addJar(com.ibm.oti.util.Util.getBytes(jarPath));
-		
+
 		int[] newTypes = new int[newCount];
 		System.arraycopy(types, 0, newTypes, 0, newCount - 1);
 		types = newTypes;

File: jcl/src/java.base/share/classes/java/lang/invoke/LambdaForm.java
Patch:
@@ -121,7 +121,7 @@ MethodHandle resolve() {
 		}
 		/*[ENDIF]*/
 	}
-	
+
 	enum BasicType {
 		L_TYPE,
 		I_TYPE,

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInternal.java
Patch:
@@ -27,7 +27,7 @@
 @J9UnmodifiableClass
 class VarHandleInternal {
 	/*[IF ]*/
-	/* Methods with VarHandle send target 
+	/* Methods with VarHandle send target
 	 * The 'ignored' object parameter is required to work around a javac bug
 	 * which will be fixed in b141.
 	 */

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeExactHandle.java
Patch:
@@ -35,7 +35,7 @@ final class VarHandleInvokeExactHandle extends VarHandleInvokeHandle {
 	VarHandleInvokeExactHandle(VarHandleInvokeExactHandle originalHandle, MethodType newType) {
 		super(originalHandle, newType);
 	}
-	
+
 	@Override
 	boolean canRevealDirect() {
 		/* This is invokevirtual of VarHandle.invokeExact() */

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeGenericHandle.java
Patch:
@@ -35,7 +35,7 @@ final class VarHandleInvokeGenericHandle extends VarHandleInvokeHandle {
 	VarHandleInvokeGenericHandle(VarHandleInvokeGenericHandle originalHandle, MethodType newType) {
 		super(originalHandle, newType);
 	}
-	
+
 	@Override
 	boolean canRevealDirect() {
 		/* This is invokevirtual of VarHandle.invoke() */

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeHandle.java
Patch:
@@ -26,7 +26,7 @@
 
 /**
  * Base class for VarHandleInvokers.
- * 
+ *
  * Invokers are the MethodHandle-subclasses required to implement
  * the invokeExact and invoke MethodHandle combinators.
  */

File: jcl/src/java.base/share/classes/java/lang/invoke/ViewVarHandle.java
Patch:
@@ -26,7 +26,7 @@ abstract class ViewVarHandle extends VarHandle {
 	ViewVarHandle(Class<?> fieldType, Class<?>[] coordinateTypes, MethodHandle[] handleTable, int modifiers) {
 		super(fieldType, coordinateTypes, handleTable, modifiers);
 	}
-	
+
 	@Override
 	final boolean isAccessModeSupportedHelper(AccessMode accessMode) {
 		switch (accessMode) {
@@ -107,14 +107,14 @@ static final long convertEndian(long value) {
 		static final short convertEndian(short value) {
 			return Short.reverseBytes(value);
 		}
-		
+
 		static final void boundsCheck(int capacity, int viewTypeSize, int index) {
 			if ((index < 0) || (index > (capacity - viewTypeSize))) {
 				/*[MSG "K0621", "Index {0} is not within the bounds of the provided array of size {1}."]*/
 				throw new ArrayIndexOutOfBoundsException(com.ibm.oti.util.Msg.getString("K0621", Integer.toString(index), Integer.toString(capacity))); //$NON-NLS-1$
 			}
 		}
-		
+
 		static final void alignmentCheck(long offset, int viewTypeSize, boolean allowUnaligned) {
 			if ((!allowUnaligned) && ((offset % viewTypeSize) != 0)) {
 				/*[MSG "K062A", "The requested access mode does not permit unaligned access."]*/

File: jcl/src/java.base/share/classes/java/security/AccessControlContext.java
Patch:
@@ -88,7 +88,7 @@ public final class AccessControlContext {
 	static final int DEBUG_ACCESS_FAILURE = 8;
 	static final int DEBUG_ACCESS_THREAD = 0x10;
 	static final int DEBUG_ALL = 0xff;
-	
+
 	static final class AccessCache {
 		ProtectionDomain[] pdsImplied;
 		Permission[] permsImplied;
@@ -687,7 +687,7 @@ static boolean checkPermissionWithCache(
 			} else {
 				pdCombined = activeDC.combine((ProtectionDomain[])pdsContext, accNext.context);
 			}
-			checkPermissionWithCache(perm, activeDC, pdCombined, debug, accNext.doPrivilegedAcc, accNext.isLimitedContext, accNext.limitedPerms, accNext.nextStackAcc, cacheChecked);			
+			checkPermissionWithCache(perm, activeDC, pdCombined, debug, accNext.doPrivilegedAcc, accNext.isLimitedContext, accNext.limitedPerms, accNext.nextStackAcc, cacheChecked);
 		}
 		return false; // NOT implied by any limited permission
 	}
@@ -726,7 +726,7 @@ private boolean debugHelper(Permission perm) {
  *                  the permission to check
  * @exception   java.security.AccessControlException
  *                  thrown when perm is not granted.
- * @exception   NullPointerException 
+ * @exception   NullPointerException
  *                  if perm is null
  */
 public void checkPermission(Permission perm) throws AccessControlException {

File: jcl/src/java.base/share/classes/jdk/internal/ref/CleanerShutdown.java
Patch:
@@ -33,7 +33,7 @@
 
 @SuppressWarnings("javadoc")
 public class CleanerShutdown {
-	
+
 	public static void shutdownCleaner() {
 		Cleaner commonCleaner = CleanerFactory.cleaner();
 		CleanerImpl commonCleanerImpl = CleanerImpl.getCleanerImpl(commonCleaner);
@@ -46,7 +46,7 @@ public static void shutdownCleaner() {
 				/* do nothing */
 			}
 		}
-		
+
 		try {
 			Method phantomRemove = PhantomCleanable.class.getDeclaredMethod("remove", (Class<?>[]) null); //$NON-NLS-1$
 			AccessController.doPrivileged((PrivilegedAction<Void>) () -> {

File: jcl/src/java.base/share/classes/openj9/management/internal/ThreadInfoBase.java
Patch:
@@ -289,7 +289,7 @@ public boolean isSuspended() {
 	}
 
 	/**
-	 * @return true if in native code 
+	 * @return true if in native code
 	 */
 	public boolean isInNative() {
 		return inNative;

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ThreadInfoUtil.java
Patch:
@@ -35,7 +35,7 @@
 import javax.management.openmbean.SimpleType;
 
 /**
- * Support for the {@link ThreadInfo} class. 
+ * Support for the {@link ThreadInfo} class.
  */
 public final class ThreadInfoUtil {
 

File: jcl/src/java.management/share/classes/java/lang/management/MonitorInfo.java
Patch:
@@ -74,7 +74,7 @@ public MonitorInfo(String className, int identityHashCode, int stackDepth, Stack
 		/* MonitorInfoBase's constructor validates the arguments. */
 		baseInfo = new MonitorInfoBase(className, identityHashCode, stackDepth, stackFrame);
 	}
-	
+
 	MonitorInfo(MonitorInfoBase base) {
 		super(base);
 		baseInfo = base;

File: jcl/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/plugins/GenerateJLIClassesPlugin.java
Patch:
@@ -33,7 +33,7 @@
  * one because the default relies on Hotspot-specific code.
  * Removing this class entirely causes the build to fail when
  * using the default module-info.java file for the jlink module.
- * So we create the class, but include no code that affects any 
+ * So we create the class, but include no code that affects any
  * change.
  */
 public class GenerateJLIClassesPlugin implements Plugin
@@ -49,7 +49,7 @@ public class GenerateJLIClassesPlugin implements Plugin
    public ResourcePool transform(ResourcePool rp, ResourcePoolBuilder rpb){
       return null;
    }
-   
+
   /**
    * This method tells the caller that this plugin is disabled,
    * and should not be used.

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/utils/file/MVSImageInputStream.java
Patch:
@@ -32,7 +32,7 @@
 /**
  * A wrapper class which converts z/OS record I/O to random access image input
  * stream I/O
- * 
+ *
  * @author ajohnson
  */
 public class MVSImageInputStream extends ImageInputStreamImpl {
@@ -44,7 +44,7 @@ public class MVSImageInputStream extends ImageInputStreamImpl {
 
 	/**
 	 * Open the file
-	 * 
+	 *
 	 * @param filename
 	 * @throws FileNotFoundException
 	 */
@@ -77,7 +77,7 @@ public int read(byte buf[], int off, int len) throws IOException {
 
 		int recordOffset = (int) (streamPos % recordLength); // offset within the record
 		int n = 0;
-		
+
 		if (recordOffset != 0) {
 			// We can only read one record's worth, so limit the length of the temp buffer to that
 			if (recordOffset + len > recordLength) {

File: jcl/src/openj9.dtfjview/share/classes/module-info.java
Patch:
@@ -21,7 +21,7 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0 OR GPL-2.0-only WITH OpenJDK-assembly-exception-1.0
  *******************************************************************************/
 
-/** 
+/**
  * Defines the jdmpview tool for reading system core and java core diagnostic files.
  */
 @SuppressWarnings("module")

File: jcl/src/openj9.jvm/share/classes/module-info.java
Patch:
@@ -23,7 +23,7 @@
 
 /**
  * Defines API for creating diagnostic dump files, querying and controlling OS logging,
- * querying Java heap and OS memory stats, and controlling and logging trace file output. 
+ * querying Java heap and OS memory stats, and controlling and logging trace file output.
  */
 @SuppressWarnings("module")
 module openj9.jvm {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestThreadMXBean.java
Patch:
@@ -93,7 +93,7 @@ public class TestThreadMXBean {
 		attribs.put("ThreadCpuTimeEnabled", new AttributeData(Boolean.TYPE.getName(), true, true, true));
 		attribs.put("ThreadCpuTimeSupported", new AttributeData(Boolean.TYPE.getName(), true, false, true));
 		attribs.put("TotalStartedThreadCount", new AttributeData(Long.TYPE.getName(), true, false, false));
-		if (VersionCheck.major() >= 21) {
+		if (VersionCheck.major() >= 11) {
 			attribs.put("TotalThreadAllocatedBytes", new AttributeData(Long.TYPE.getName(), true, false, false));
 		}
 	} // end static initializer
@@ -1568,7 +1568,7 @@ public final void testGetMBeanInfo() {
 			numAttributes = 17;
 		} else {
 			numOperations = 20;
-			numAttributes = (VersionCheck.major() >= 21) ? 19 : 18;
+			numAttributes = (VersionCheck.major() >= 11) ? 19 : 18;
 		}
 		MBeanOperationInfo[] operations = mbi.getOperations();
 		AssertJUnit.assertNotNull(operations);

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleResolver.java
Patch:
@@ -764,7 +764,7 @@ private static final Object linkCallerMethod(Class<?> callerClass, int refKind,
 
 /*[IF JAVA_SPEC_VERSION >= 16]*/
 	/**
-	 * This method is intended for resolving calls to the MethodHandle methods prior to the upcall,
+	 * This method is intended for resolving calls to the MethodHandle methods prior to the downcall/upcall,
 	 * which yields two values in a two element array. The first array element is a MemberName
 	 * object which specifies the upcall method to be invoked. The second array element is a
 	 * MethodType object given the defining class is a MethodHandle.
@@ -780,7 +780,7 @@ private static final Object linkCallerMethod(Class<?> callerClass, int refKind,
 	 * @throws InternalError if invoked for the OpenJ9 MethodHandles
 	 */
 	@SuppressWarnings("unused")
-	private static final Object upcallLinkCallerMethod(Class<?> callerClass, MethodType calleeType) throws Throwable {
+	private static final Object ffiCallLinkCallerMethod(Class<?> callerClass, MethodType calleeType) throws Throwable {
 /*[IF OPENJDK_METHODHANDLES]*/
 		Object[] result = new Object[2];
 		Object[] appendixResult = new Object[1];

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/commands/TraceFileHeaderWriter.java
Patch:
@@ -47,8 +47,9 @@ public class TraceFileHeaderWriter {
 	private int type = 0;
 	private int generations = 0;
 	
-	private final static String[] Archs = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64" };
-	private final static String[] SubTypes = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron" };
+	private final static String[] Archs = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV", "AArch64" };
+	private final static String[] SubTypes = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley",
+		"PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G", "Armv8-A" };
 	private final static String[] trCounter = { "Sequence Counter", "Special", "RDTSC Timer", "AIX Timer", "MFSPR Timer", "MFTB Timer", "STCK Timer", "J9 timer" };
 	
 	/**

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/ProcessorSection.java
Patch:
@@ -80,9 +80,9 @@ protected void summary(BufferedWriter out) throws IOException
          * These String arrays refer to enum values in entries of the
          * ProcessorInfo structure defined in xhpi.h .
          */
-        String[] Archs      = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV"};
-        String[] SubTypes   = { "i486", "i586", "Pentium II", "Pentium III",
-            "Merced","McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G"};
+        String[] Archs      = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV", "AArch64" };
+        String[] SubTypes   = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley",
+                "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G", "Armv8-A" };
         String[] trCounter  = { "Sequence Counter", "Special", "RDTSC Timer", "AIX Timer",
                 "MFSPR Timer", "MFTB Timer", "STCK Timer", "J9 timer"};
         out.write("Sys Processor Info :");

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/ProcessorSection.java
Patch:
@@ -39,8 +39,9 @@ public class ProcessorSection {
 	protected static final int LONG = 8; // length of a long in bytes
 	protected static final String SUM_TAB = "        ";
 
-	private final static String[] Archs = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV"};
-	private final static String[] SubTypes = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G"};
+	private final static String[] Archs = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV", "AArch64" };
+	private final static String[] SubTypes = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley",
+		"PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G", "Armv8-A" };
 	private final static String[] trCounter = { "Sequence Counter", "Special", "RDTSC Timer", "AIX Timer", "MFSPR Timer", "MFTB Timer", "STCK Timer", "J9 timer" };
 	
 	TraceContext context;

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java
Patch:
@@ -269,9 +269,8 @@ public final synchronized double getProcessCpuLoad() {
 		}
 		latestCpuTime = cpuTime;
 
-		/* First call to this method returns 0 to match the behaviour of the RI.
-		 * If the CpuLoadCompatibility flag is set, the bahaviour is reverted to
-		 * return -1 for compatibility.
+		/* If no previous timestamps is set, the default behaviour is to return -1.
+		 * If the compatibility flag is set, return 0 to match the behaviour of RI.
 		 */
 		if (-1 == oldTime) {
 			/* Save current counters; next invocation onwards, we use these to

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java
Patch:
@@ -269,9 +269,8 @@ public final synchronized double getProcessCpuLoad() {
 		}
 		latestCpuTime = cpuTime;
 
-		/* First call to this method returns 0 to match the behaviour of the RI.
-		 * If the CpuLoadCompatibility flag is set, the bahaviour is reverted to
-		 * return -1 for compatibility.
+		/* If no previous timestamps is set, the default behaviour is to return -1.
+		 * If the compatibility flag is set, return 0 to match the behaviour of RI.
 		 */
 		if (-1 == oldTime) {
 			/* Save current counters; next invocation onwards, we use these to

File: test/functional/Valhalla/src_lw5/org/openj9/test/lworld/DDRValueTypeTest.java
Patch:
@@ -26,7 +26,7 @@
 import java.lang.invoke.MethodType;
 import java.lang.reflect.Array;
 
-import static org.openj9.test.lworld.ValueTypeTests.*;
+import static org.openj9.test.lworld.ValueTypeTestClasses.*;
 
 public class DDRValueTypeTest {
 	public static void main(String[] args) {
@@ -51,7 +51,7 @@ private static void createAndCheckValueType() throws Throwable {
 		array[0] = assortedValueWithSingleAlignment;
 		array[1] = assortedValueWithSingleAlignmentAlt;
 
-		checkObject(assortedValueWithSingleAlignment,
+		ValueTypeTests.checkObject(assortedValueWithSingleAlignment,
 				assortedValueWithSingleAlignmentAlt,
 				array
 				);

File: test/functional/Valhalla/src_lw5/org/openj9/test/lworld/ValueTypeUnsafeTests.java
Patch:
@@ -35,8 +35,6 @@
 import org.testng.annotations.BeforeClass;
 import org.testng.annotations.DataProvider;
 import static org.openj9.test.lworld.ValueTypeTestClasses.*;
-import static org.openj9.test.lworld.ValueTypeTests.*;
-
 
 @Test(groups = { "level.sanity" })
 public class ValueTypeUnsafeTests {

File: test/functional/Valhalla/src_lw5/org/openj9/test/lworld/DDRValueTypeTest.java
Patch:
@@ -26,7 +26,7 @@
 import java.lang.invoke.MethodType;
 import java.lang.reflect.Array;
 
-import static org.openj9.test.lworld.ValueTypeTests.*;
+import static org.openj9.test.lworld.ValueTypeTestClasses.*;
 
 public class DDRValueTypeTest {
 	public static void main(String[] args) {
@@ -51,7 +51,7 @@ private static void createAndCheckValueType() throws Throwable {
 		array[0] = assortedValueWithSingleAlignment;
 		array[1] = assortedValueWithSingleAlignmentAlt;
 
-		checkObject(assortedValueWithSingleAlignment,
+		ValueTypeTests.checkObject(assortedValueWithSingleAlignment,
 				assortedValueWithSingleAlignmentAlt,
 				array
 				);

File: test/functional/Valhalla/src_lw5/org/openj9/test/lworld/ValueTypeUnsafeTests.java
Patch:
@@ -35,8 +35,6 @@
 import org.testng.annotations.BeforeClass;
 import org.testng.annotations.DataProvider;
 import static org.openj9.test.lworld.ValueTypeTestClasses.*;
-import static org.openj9.test.lworld.ValueTypeTests.*;
-
 
 @Test(groups = { "level.sanity" })
 public class ValueTypeUnsafeTests {

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/LookupAPITests_Find.java
Patch:
@@ -2111,6 +2111,9 @@ public void test_FindSpecial_Default_CrossPackage_Interface() throws Throwable {
 			Class<?> cls = CrossPackageDefaultMethodInterface.class;
 			MethodType mt = MethodType.methodType(int.class, int.class, int.class);
 			MethodHandles.lookup().findSpecial(cls, "addDefault", mt, cls);
+			if (VersionCheck.major() <= 8) {
+				Assert.fail("[Java 8-] IllegalAccessException not thrown ");
+			}
 		} catch (IllegalAccessException e) {
 			// JEP 274 is implemented from Java 9 onwards; Java 8 with OpenJDK MethodHandles
 			// expects an IllegalAccessException.

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -819,6 +819,7 @@ public synchronized void checkpointJVM() {
 				SecurityProviders.registerRestoreSecurityProviders();
 
 				J9InternalCheckpointHookAPI.runPreCheckpointHooksConcurrentThread();
+				System.gc();
 				try {
 					checkpointJVMImpl(imageDir, leaveRunning, shellJob, extUnixSupport, logLevel, logFile, fileLocks,
 							workDir, tcpEstablished, autoDedup, trackMemory, unprivileged, optionsFile, envFilePath);

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -819,6 +819,7 @@ public synchronized void checkpointJVM() {
 				SecurityProviders.registerRestoreSecurityProviders();
 
 				J9InternalCheckpointHookAPI.runPreCheckpointHooksConcurrentThread();
+				System.gc();
 				try {
 					checkpointJVMImpl(imageDir, leaveRunning, shellJob, extUnixSupport, logLevel, logFile, fileLocks,
 							workDir, tcpEstablished, autoDedup, trackMemory, unprivileged, optionsFile, envFilePath);

File: test/functional/Valhalla/src_qtypes/org/openj9/test/lworld/ValueTypeSystemArraycopyTests.java
Patch:
@@ -70,7 +70,7 @@ public value static class SomeValueClass implements SomeInterface {
 		}
 	}
 
-	public primitive static class SomeValueClass2 implements SomeInterface {
+	public static class SomeValueClass2 implements SomeInterface {
 		long val1;
 		double val2;
 

File: jcl/src/java.base/share/classes/openj9/internal/foreign/abi/InternalDowncallHandler.java
Patch:
@@ -765,11 +765,11 @@ Object runNativeMethod(Addressable downcallAddr, SegmentAllocator segmtAllocator
 		try (Arena arena = Arena.ofConfined()) {
 			SetDependency(arena.scope());
 			returnVal = invokeNative(
-					/*[IF JAVA_SPEC_VERSION >= 22]*/
+					/*[IF (JAVA_SPEC_VERSION >= 22) & !INLINE-TYPES]*/
 					linkerOpts.isCritical(),
-					/*[ELSE] JAVA_SPEC_VERSION >= 22 */
+					/*[ELSE] (JAVA_SPEC_VERSION >= 22) & !INLINE-TYPES */
 					linkerOpts.isTrivial(),
-					/*[ENDIF] JAVA_SPEC_VERSION >= 22 */
+					/*[ENDIF] (JAVA_SPEC_VERSION >= 22) & !INLINE-TYPES */
 					getValidDowncallMemAddr(stateSegmt),
 					retMemAddr,
 					getValidDowncallMemAddr(downcallAddr),

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOperatingSystemMXBean.java
Patch:
@@ -461,7 +461,7 @@ public final void testGetAttributes() {
 				} else if (name.equals("ProcessCpuLoad")) {
 					AssertJUnit.assertTrue(value instanceof Double);
 				} else if (name.equals("HardwareModel")) {
-					AssertJUnit.assertTrue(value instanceof String);
+					AssertJUnit.assertTrue((value == null) || (value instanceof String));
 				} else if (name.equals("HardwareEmulated")) {
 					AssertJUnit.assertTrue(value instanceof Boolean);
 				} else if (name.equals("OpenFileDescriptorCount")) {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOperatingSystemMXBean.java
Patch:
@@ -461,7 +461,7 @@ public final void testGetAttributes() {
 				} else if (name.equals("ProcessCpuLoad")) {
 					AssertJUnit.assertTrue(value instanceof Double);
 				} else if (name.equals("HardwareModel")) {
-					AssertJUnit.assertTrue(value instanceof String);
+					AssertJUnit.assertTrue((value == null) || (value instanceof String));
 				} else if (name.equals("HardwareEmulated")) {
 					AssertJUnit.assertTrue(value instanceof Boolean);
 				} else if (name.equals("OpenFileDescriptorCount")) {

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -627,7 +627,7 @@ public Object invokeWithArguments(List<?> args) throws Throwable, WrongMethodTyp
 	 * exactly match the underlying MethodType.
 	 * <p>
 	 * <i>invoke</i> acts as normally unless the arities differ.  In that case, the trailing
-	 * arguments are converted as though by a call to {@link #asCollector(Class<?>, int)} before invoking the underlying
+	 * arguments are converted as though by a call to {@link #asCollector(Class, int)} before invoking the underlying
 	 * methodhandle.
 	 * 
 	 * @param arrayParameter - the type of the array to collect the arguments into

File: jcl/src/java.logging/share/classes/java/util/logging/LoggingMXBean.java
Patch:
@@ -38,7 +38,7 @@
  * </li>
  * <li>Using a javax.management.MBeanServerConnection.</li>
  * <li>Obtaining a proxy MXBean from the static
- * {@link ManagementFactory#newPlatformMXBeanProxy}method, passing in
+ * {@link java.lang.management.ManagementFactory#newPlatformMXBeanProxy}method, passing in
  * &quot;java.util.logging:type=Logging&quot; for the value of the second parameter.
  * </li>
  * </ol>

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -627,7 +627,7 @@ public Object invokeWithArguments(List<?> args) throws Throwable, WrongMethodTyp
 	 * exactly match the underlying MethodType.
 	 * <p>
 	 * <i>invoke</i> acts as normally unless the arities differ.  In that case, the trailing
-	 * arguments are converted as though by a call to {@link #asCollector(Class<?>, int)} before invoking the underlying
+	 * arguments are converted as though by a call to {@link #asCollector(Class, int)} before invoking the underlying
 	 * methodhandle.
 	 * 
 	 * @param arrayParameter - the type of the array to collect the arguments into

File: jcl/src/java.logging/share/classes/java/util/logging/LoggingMXBean.java
Patch:
@@ -38,7 +38,7 @@
  * </li>
  * <li>Using a javax.management.MBeanServerConnection.</li>
  * <li>Obtaining a proxy MXBean from the static
- * {@link ManagementFactory#newPlatformMXBeanProxy}method, passing in
+ * {@link java.lang.management.ManagementFactory#newPlatformMXBeanProxy}method, passing in
  * &quot;java.util.logging:type=Logging&quot; for the value of the second parameter.
  * </li>
  * </ol>

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -709,15 +709,15 @@ private static void dumpRomField(PrintStream out, J9ROMFieldShapePointer romFiel
 		out.append("  Name: " + J9UTF8Helper.stringValue(romField.nameAndSignature().name()) + nl);
 		out.append("  Signature: " + J9UTF8Helper.stringValue(romField.nameAndSignature().signature()) + nl);
 		out.append(String.format("  Access Flags (%s): ", Long.toHexString(romField.modifiers().longValue())));
-		dumpModifiers(out, romField.modifiers().longValue(), MODIFIERSOURCE_FIELD, ONLY_SPEC_MODIFIERS);
+		dumpModifiers(out, romField.modifiers().longValue(), MODIFIERSOURCE_FIELD, INCLUDE_INTERNAL_MODIFIERS);
 		out.append(nl);
 	}
 
 	private static void dumpRomStaticField(PrintStream out, J9ROMFieldShapePointer romStatic, long flags) throws CorruptDataException {
 		out.append("  Name: " + J9UTF8Helper.stringValue(romStatic.nameAndSignature().name()) + nl);
 		out.append("  Signature: " + J9UTF8Helper.stringValue(romStatic.nameAndSignature().signature()) + nl);
 		out.append(String.format("  Access Flags (%s): ", Long.toHexString(romStatic.modifiers().longValue())));
-		dumpModifiers(out, romStatic.modifiers().longValue(), MODIFIERSOURCE_FIELD, ONLY_SPEC_MODIFIERS);
+		dumpModifiers(out, romStatic.modifiers().longValue(), MODIFIERSOURCE_FIELD, INCLUDE_INTERNAL_MODIFIERS);
 		out.append(nl);
 	}
 
@@ -1210,7 +1210,7 @@ private static void dumpMethodParameters(PrintStream out, J9ROMClassPointer romc
 				}
 				
 				out.print(String.format("    0x%x ( ", parameterFlags));
-				dumpModifiers(out, parameterFlags, ONLY_SPEC_MODIFIERS, MODIFIERSOURCE_METHODPARAMETER);
+				dumpModifiers(out, parameterFlags, MODIFIERSOURCE_METHODPARAMETER, ONLY_SPEC_MODIFIERS);
 				out.println(" )\n");
 			}
 			out.println("\n");

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java
Patch:
@@ -33,6 +33,7 @@
 import com.ibm.oti.vm.VM;
 
 import openj9.internal.management.ClassLoaderInfoBaseImpl;
+import openj9.management.internal.IDCacheInitializer;
 import openj9.management.internal.InvalidDumpOptionExceptionBase;
 import openj9.management.internal.LockInfoBase;
 import openj9.management.internal.ThreadInfoBase;
@@ -448,6 +449,7 @@ private static DiagnosticProperties doHelp(String diagnosticCommand) {
 
 	/* Initialize the command and help text tables */
 	static {
+		IDCacheInitializer.init();
 		commandTable = new HashMap<>();
 		helpTable = new HashMap<>();
 

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java
Patch:
@@ -33,6 +33,7 @@
 import com.ibm.oti.vm.VM;
 
 import openj9.internal.management.ClassLoaderInfoBaseImpl;
+import openj9.management.internal.IDCacheInitializer;
 import openj9.management.internal.InvalidDumpOptionExceptionBase;
 import openj9.management.internal.LockInfoBase;
 import openj9.management.internal.ThreadInfoBase;
@@ -419,6 +420,7 @@ private static DiagnosticProperties doHelp(String diagnosticCommand) {
 	
 	/* Initialize the command and help text tables */
 	static {
+		IDCacheInitializer.init();
 		commandTable = new HashMap<>();
 		helpTable = new HashMap<>();
 

File: test/functional/VM_Test/src/com/ibm/j9/cfdump/tests/lineardump/LinearDumpTests.java
Patch:
@@ -104,7 +104,6 @@ public void testInvalidClassFile() throws Exception {
 			String[] stringsToFind = new String[] {
 					"Invalid class file:",
 					"Recommended action: throw java.lang.ClassFormatError",
-					"bad magic number"
 			};
 
 			for (String line; (line = in.readLine()) != null && numFound != stringsToFind.length;) {

File: jcl/src/java.base/share/classes/java/lang/ref/Reference.java
Patch:
@@ -196,9 +196,9 @@ public boolean isEnqueued () {
 	 * @return	true if the Reference was successfully
 	 *			enqueued, false otherwise.
 	 */
-	/* [IF CRIU_SUPPORT] */
+	/*[IF CRIU_SUPPORT]*/
 	@NotCheckpointSafe
-	/* [ENDIF] CRIU_SUPPORT */
+	/*[ENDIF] CRIU_SUPPORT */
 	boolean enqueueImpl() {
 		final ReferenceQueue tempQueue;
 		boolean result;

File: jcl/src/java.base/share/classes/java/lang/ref/Reference.java
Patch:
@@ -196,7 +196,7 @@ public boolean isEnqueued () {
 	 * @return	true if the Reference was successfully
 	 *			enqueued, false otherwise.
 	 */
-	/* [IF CRIU_SUPPORT] */
+	/*[IF CRIU_SUPPORT]*/
 	@NotCheckpointSafe
 	/* [ENDIF] CRIU_SUPPORT */
 	boolean enqueueImpl() {

File: test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java
Patch:
@@ -170,7 +170,7 @@ public void test_YieldedVirtualThreadGetStackTrace() {
 		/* The expected frame count is based on test's callstack and OpenJ9's implementation of
 		 * Continuation.yield().
 		 */
-		int expectedFrames = 12;
+		int expectedFrames = 10;
 		String expectedMethodName = "yieldImpl";
 
 		try {
@@ -231,7 +231,7 @@ public void test_RunningVirtualThreadGetStackTrace() {
 			}
 
 			StackTraceElement[] ste = t.getStackTrace();
-			Assert.assertEquals(ste.length, 4);
+			Assert.assertEquals(ste.length, 3);
 			Assert.assertEquals(ste[0].getClassName(), "org.openj9.test.jep425.VirtualThreadTests");
 
 			testThread2_state = false;

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/RuntimeMXBeanImpl.java
Patch:
@@ -24,6 +24,7 @@
 
 import java.lang.management.ManagementFactory;
 import java.lang.management.RuntimeMXBean;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -208,7 +209,7 @@ public final boolean isBootClassPathSupported() {
 	@Override
 	public final List<String> getInputArguments() {
 		checkMonitorPermission();
-		return ManagementUtils.convertStringArrayToList(VM.getVMArgs());
+		return Collections.unmodifiableList(ManagementUtils.convertStringArrayToList(VM.getVMArgs()));
 	}
 
 	/**

File: test/functional/cmdLineTests/criu/src/org/openj9/criu/TestSingleThreadModeCheckpointException.java
Patch:
@@ -58,7 +58,7 @@ public void run() {
 				});
 
 				try {
-					System.out.println("Pre-checkpoint JUC LOCK");
+					System.out.println("Pre-checkpoint");
 					CRIUTestUtils.checkPointJVMNoSetup(criu, CRIUTestUtils.imagePath, false);
 				} catch (JVMCheckpointException jvmce) {
 					result = true;
@@ -111,7 +111,7 @@ public void run() {
 				});
 
 				try {
-					System.out.println("Pre-checkpoint synchronization");
+					System.out.println("Pre-checkpoint");
 					CRIUTestUtils.checkPointJVMNoSetup(criu, CRIUTestUtils.imagePath, false);
 				} catch (JVMCheckpointException jvmce) {
 					result = true;

File: test/functional/cmdLineTests/criu/src/org/openj9/criu/TestSingleThreadModeRestoreException.java
Patch:
@@ -58,7 +58,7 @@ public void run() {
 				});
 
 				try {
-					System.out.println("Pre-checkpoint JUC LOCK");
+					System.out.println("Pre-checkpoint");
 					CRIUTestUtils.checkPointJVMNoSetup(criu, CRIUTestUtils.imagePath, false);
 				} catch (JVMRestoreException jvmre) {
 					result = true;
@@ -115,7 +115,7 @@ public void run() {
 				});
 
 				try {
-					System.out.println("Pre-checkpoint synchronization");
+					System.out.println("Pre-checkpoint");
 					CRIUTestUtils.checkPointJVMNoSetup(criu, CRIUTestUtils.imagePath, false);
 				} catch (JVMRestoreException jvmre) {
 					result = true;

File: test/functional/Java8andUp/src/org/openj9/test/contendedfields/ContendedFieldsTests.java
Patch:
@@ -91,8 +91,7 @@ static void getVMConfig() { /* ideally we should have an mxbean to get this info
 	/**
 	 * Run with both:
 	 * -Xlockword:none,mode=all
-	 * -Xlockword:none,mode=minimizeFootprint
-	 * 
+	 *
 	 */
 
 	@AfterMethod

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -257,7 +257,7 @@ public static String getErrorMessage() {
 	public CRIUSupport setImageDir(Path imageDir) {
 		Objects.requireNonNull(imageDir, "Image directory cannot be null"); //$NON-NLS-1$
 		if (!Files.isDirectory(imageDir)) {
-			throw new IllegalArgumentException("imageDir is not a valid directory"); //$NON-NLS-1$
+			throw new IllegalArgumentException(imageDir.toAbsolutePath() + " is not a valid directory"); //$NON-NLS-1$
 		}
 		String dir = imageDir.toAbsolutePath().toString();
 

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -610,7 +610,7 @@ private static void startRemoteServer() throws IOException {
 		remoteServer = builder.start();
 
 		lock.waitForEvent("child started");
-		logger.info("Staring remote server finished");
+		logger.info("Starting remote server finished");
 	} 
 
 	/**

File: test/functional/JLM_Tests/src/org/openj9/test/management/JvmCpuMonitorMXBeanTest.java
Patch:
@@ -463,7 +463,7 @@ private static void startRemoteMonitor() throws IOException {
 		}
 
 		lock.waitForEvent("child started");
-		logger.debug("staring remoteServet finished");
+		logger.debug("starting remoteServer finished");
 	}
 
 	/**

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -610,7 +610,7 @@ private static void startRemoteServer() throws IOException {
 		remoteServer = builder.start();
 
 		lock.waitForEvent("child started");
-		logger.info("Staring remote server finished");
+		logger.info("Starting remote server finished");
 	} 
 
 	/**

File: test/functional/JLM_Tests/src/org/openj9/test/management/JvmCpuMonitorMXBeanTest.java
Patch:
@@ -463,7 +463,7 @@ private static void startRemoteMonitor() throws IOException {
 		}
 
 		lock.waitForEvent("child started");
-		logger.debug("staring remoteServet finished");
+		logger.debug("starting remoteServer finished");
 	}
 
 	/**

File: test/functional/Java21andUp/src/org/openj9/test/jep425/VirtualThreadTests.java
Patch:
@@ -170,7 +170,7 @@ public void test_YieldedVirtualThreadGetStackTrace() {
 		/* The expected frame count is based on test's callstack and OpenJ9's implementation of
 		 * Continuation.yield().
 		 */
-		int expectedFrames = 12;
+		int expectedFrames = 10;
 		String expectedMethodName = "yieldImpl";
 
 		try {
@@ -231,7 +231,7 @@ public void test_RunningVirtualThreadGetStackTrace() {
 			}
 
 			StackTraceElement[] ste = t.getStackTrace();
-			Assert.assertEquals(ste.length, 4);
+			Assert.assertEquals(ste.length, 3);
 			Assert.assertEquals(ste[0].getClassName(), "org.openj9.test.jep425.VirtualThreadTests");
 
 			testThread2_state = false;

File: jcl/src/jdk.incubator.foreign/share/classes/openj9/internal/foreign/abi/InternalDowncallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF (JAVA_SPEC_VERSION >= 16) & (JAVA_SPEC_VERSION <= 18)]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION == 17]*/
 /*[IF] Final copyright notice is included. */
 /*******************************************************************************
  * Copyright IBM Corp. and others 2022

File: jcl/src/jdk.incubator.foreign/share/classes/openj9/internal/foreign/abi/InternalUpcallHandler.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF (JAVA_SPEC_VERSION >= 16) & (JAVA_SPEC_VERSION <= 18)]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION == 17]*/
 /*[IF] Final copyright notice is included. */
 /*******************************************************************************
  * Copyright IBM Corp. and others 2022

File: jcl/src/jdk.incubator.foreign/share/classes/openj9/internal/foreign/abi/LayoutStrPreprocessor.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF (JAVA_SPEC_VERSION >= 16) & (JAVA_SPEC_VERSION <= 18)]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION == 17]*/
 /*[IF] Final copyright notice is included. */
 /*******************************************************************************
  * Copyright IBM Corp. and others 2022

File: jcl/src/jdk.incubator.foreign/share/classes/openj9/internal/foreign/abi/UpcallMHMetaData.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF (JAVA_SPEC_VERSION >= 16) & (JAVA_SPEC_VERSION <= 18)]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION == 17]*/
 /*[IF] Final copyright notice is included. */
 /*******************************************************************************
  * Copyright IBM Corp. and others 2022

File: jcl/src/java.base/share/classes/openj9/internal/foreign/abi/InternalDowncallHandler.java
Patch:
@@ -703,7 +703,8 @@ private MethodHandle getArgumentFilter(Class<?> argTypeClass, MemoryLayout argLa
 		/*[ENDIF] JAVA_SPEC_VERSION <= 19 */
 		if (argTypeClass == MemorySegment.class) {
 			/*[IF JAVA_SPEC_VERSION >= 20]*/
-			if (argLayout == ADDRESS) {
+			/* The address layout for pointer might come with different representations of ADDRESS. */
+			if (argLayout instanceof OfAddress) {
 				filterMH = memSegmtOfPtrToLongArgFilter;
 			} else
 			/*[ENDIF] JAVA_SPEC_VERSION >= 20 */

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/InvalidDownCallTests.java
Patch:
@@ -436,19 +436,18 @@ public void test_nullValueForStructArgument() throws Throwable {
 		}
 	}
 
-	@Test(expectedExceptions = NullPointerException.class)
 	public void test_nullSegmentForPtrArgument() throws Throwable {
 		GroupLayout structLayout = MemoryLayout.structLayout(C_INT.withName("elem1"), C_INT.withName("elem2"));
 		VarHandle intHandle1 = structLayout.varHandle(int.class, PathElement.groupElement("elem1"));
 		VarHandle intHandle2 = structLayout.varHandle(int.class, PathElement.groupElement("elem2"));
 
 		MethodType mt = MethodType.methodType(int.class, int.class, MemoryAddress.class);
 		FunctionDescriptor fd = FunctionDescriptor.of(C_INT, C_INT, C_POINTER);
-		Addressable functionSymbol = nativeLibLookup.lookup("addIntAndIntsFromStructPointer").get();
+		Addressable functionSymbol = nativeLibLookup.lookup("validateNullAddrArgument").get();
 		MethodHandle mh = clinker.downcallHandle(functionSymbol, mt, fd);
 
 		int result = (int)mh.invoke(19202122, MemoryAddress.NULL);
-		fail("Failed to throw out NullPointerException in the case of the null memory address");
+		Assert.assertEquals(result, 19202122);
 	}
 
 	@Test(expectedExceptions = IllegalArgumentException.class, expectedExceptionsMessageRegExp = "A heap address is not allowed.*")

File: test/functional/Java20andUp/src/org/openj9/test/jep434/downcall/InvalidDownCallTests.java
Patch:
@@ -119,18 +119,17 @@ public void test_nullValueForStructArgument() throws Throwable {
 		}
 	}
 
-	@Test(expectedExceptions = NullPointerException.class)
 	public void test_nullSegmentForPtrArgument() throws Throwable {
 		GroupLayout structLayout = MemoryLayout.structLayout(JAVA_INT.withName("elem1"), JAVA_INT.withName("elem2"));
 		VarHandle intHandle1 = structLayout.varHandle(PathElement.groupElement("elem1"));
 		VarHandle intHandle2 = structLayout.varHandle(PathElement.groupElement("elem2"));
 
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, JAVA_INT, ADDRESS);
-		MemorySegment functionSymbol = nativeLibLookup.find("addIntAndIntsFromStructPointer").get();
+		MemorySegment functionSymbol = nativeLibLookup.find("validateNullAddrArgument").get();
 		MethodHandle mh = linker.downcallHandle(functionSymbol, fd);
 
 		int result = (int)mh.invoke(19202122, MemorySegment.NULL);
-		fail("Failed to throw out NullPointerException in the case of the null segment");
+		Assert.assertEquals(result, 19202122);
 	}
 
 	@Test(expectedExceptions = NullPointerException.class)

File: test/functional/Java21andUp/src/org/openj9/test/jep442/downcall/InvalidDownCallTests.java
Patch:
@@ -119,18 +119,17 @@ public void test_nullValueForStructArgument() throws Throwable {
 		}
 	}
 
-	@Test(expectedExceptions = NullPointerException.class)
 	public void test_nullSegmentForPtrArgument() throws Throwable {
 		GroupLayout structLayout = MemoryLayout.structLayout(JAVA_INT.withName("elem1"), JAVA_INT.withName("elem2"));
 		VarHandle intHandle1 = structLayout.varHandle(PathElement.groupElement("elem1"));
 		VarHandle intHandle2 = structLayout.varHandle(PathElement.groupElement("elem2"));
 
 		FunctionDescriptor fd = FunctionDescriptor.of(JAVA_INT, JAVA_INT, ADDRESS);
-		MemorySegment functionSymbol = nativeLibLookup.find("addIntAndIntsFromStructPointer").get();
+		MemorySegment functionSymbol = nativeLibLookup.find("validateNullAddrArgument").get();
 		MethodHandle mh = linker.downcallHandle(functionSymbol, fd);
 
 		int result = (int)mh.invoke(19202122, MemorySegment.NULL);
-		fail("Failed to throw out NullPointerException in the case of the null segment");
+		Assert.assertEquals(result, 19202122);
 	}
 
 	@Test(expectedExceptions = NullPointerException.class)

File: jcl/src/java.base/share/classes/java/lang/ClassLoader.java
Patch:
@@ -286,6 +286,7 @@ static final void initializeClassLoaders() {
 		}
 		/*[ENDIF] JAVA_SPEC_VERSION >= 10 */
 		jdk.internal.misc.VM.initLevel(2);
+		System.checkTmpDir();
 		System.initSecurityManager(applicationClassLoader);
 		jdk.internal.misc.VM.initLevel(3);
 		/*[ELSE]*/

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/WaitLoop.java
Patch:
@@ -133,8 +133,8 @@ private static Attachment checkReplyAndCreateAttachment() throws IOException {
 		if (LOGGING_DISABLED != loggingStatus) {
 			IPC.logMessage("checkReplyAndCreateAttachment iteration "+ AttachHandler.notificationCount+" waitForNotification obtainLock"); //$NON-NLS-1$ //$NON-NLS-2$
 		}
-		/* the sync file is missing. */
-		if (!AttachHandler.mainHandler.syncFileLock.lockFile(true, "WaitLoop.checkReplyAndCreateAttachment")) { //$NON-NLS-1$ 
+		/* the sync file is missing, use FileLockWatchdogTask for non-CommonControlFile */
+		if (!AttachHandler.mainHandler.syncFileLock.lockFile(true, "WaitLoop.checkReplyAndCreateAttachment", true)) { //$NON-NLS-1$
 			TargetDirectory.createMySyncFile();
 			/* don't bother locking this since the attacher will not have locked it. */
 		} else {

File: jcl/src/jdk.attach/share/classes/com/ibm/tools/attach/attacher/OpenJ9VirtualMachine.java
Patch:
@@ -349,7 +349,8 @@ private void lockAllAttachNotificationSyncFiles(
 					IPC.logMessage("lockAllAttachNotificationSyncFiles locking targetLocks[", vmdIndex, "] ", attachSyncFile); //$NON-NLS-1$ //$NON-NLS-2$
 					targetLocks[vmdIndex] = new FileLock(attachSyncFile, TargetDirectory.SYNC_FILE_PERMISSIONS);
 					try {
-						targetLocks[vmdIndex].lockFile(true, "OpenJ9VirtualMachine.lockAllAttachNotificationSyncFiles"); //$NON-NLS-1$
+						/* use FileLockWatchdogTask for non-CommonControlFile */
+						targetLocks[vmdIndex].lockFile(true, "OpenJ9VirtualMachine.lockAllAttachNotificationSyncFiles", true); //$NON-NLS-1$
 					} catch (IOException e) {
 						targetLocks[vmdIndex] = null;
 						IPC.logMessage("lockAllAttachNotificationSyncFiles locking targetLocks[", vmdIndex, "] ", "already locked"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$

File: test/functional/Java8andUp/src/org/openj9/test/fileLock/NativeFileLock.java
Patch:
@@ -42,7 +42,7 @@ public NativeFileLock(File lockFile, int mode) throws Exception {
 		nflConstructor.setAccessible(true);
 		fileLockObject = nflConstructor.newInstance(lockFile.getAbsolutePath(), Integer.valueOf(mode));
 		lockFileMethod = nativeFileLock.getDeclaredMethod("lockFile",
-				boolean.class, String.class);
+				boolean.class, String.class, boolean.class);
 		lockFileMethod.setAccessible(true);
 		unlockFileMethod = nativeFileLock.getDeclaredMethod("unlockFile", String.class);
 		unlockFileMethod.setAccessible(true);
@@ -53,7 +53,8 @@ public NativeFileLock(File lockFile, int mode) throws Exception {
 	public boolean lockFile(boolean blocking) throws Exception {
 		Boolean result = Boolean.valueOf(true);
 		TestFileLocking.logger.debug("lockfile blocking =" + blocking);
-		result = (Boolean) lockFileMethod.invoke(fileLockObject, Boolean.valueOf(blocking), "NativeFileLock.lockFile()");
+		// The test has no different user involved, always locks file with FileLockWatchdogTask.
+		result = (Boolean) lockFileMethod.invoke(fileLockObject, Boolean.valueOf(blocking), "NativeFileLock.lockFile()", true);
 		return result.booleanValue();
 	}
 

File: jcl/src/openj9.dtfj/share/classes/module-info.java
Patch:
@@ -43,7 +43,7 @@
   exports com.ibm.dtfj.java;
   exports com.ibm.dtfj.runtime;
   exports com.ibm.dtfj.utils.file to openj9.dtfjview;
-  exports com.ibm.java.diagnostics.utils to openj9.dtfjview;
-  exports com.ibm.java.diagnostics.utils.commands to openj9.dtfjview;
-  exports com.ibm.java.diagnostics.utils.plugins to openj9.dtfjview;
+  exports com.ibm.java.diagnostics.utils;
+  exports com.ibm.java.diagnostics.utils.commands;
+  exports com.ibm.java.diagnostics.utils.plugins;
 }

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/JVMCheckpointException.java
Patch:
@@ -23,7 +23,7 @@
 package org.eclipse.openj9.criu;
 
 /**
- * A CRIU exception representing a failure in the JVM before checkpoint.
+ * An exception representing a failure in the JVM before checkpoint.
  */
 public final class JVMCheckpointException extends JVMCRIUException {
 	private static final long serialVersionUID = 4486137934620495516L;

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/JVMRestoreException.java
Patch:
@@ -23,7 +23,7 @@
 package org.eclipse.openj9.criu;
 
 /**
- * A CRIU exception representing a JVM failure after restore.
+ * An exception representing a JVM failure after restore.
  */
 public final class JVMRestoreException extends JVMCRIUException {
 	private static final long serialVersionUID = 1539393473417716292L;

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/SystemCheckpointException.java
Patch:
@@ -23,7 +23,7 @@
 package org.eclipse.openj9.criu;
 
 /**
- * A CRIU exception representing a failed CRIU operation.
+ * An exception representing a failed system operation before checkpoint.
  */
 public final class SystemCheckpointException extends JVMCRIUException {
     private static final long serialVersionUID = 1262214147293662586L;

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/SystemRestoreException.java
Patch:
@@ -23,7 +23,7 @@
 package org.eclipse.openj9.criu;
 
 /**
- * A CRIU exception representing a system failure after restore.
+ * An exception representing a system failure after restore.
  */
 public final class SystemRestoreException extends JVMCRIUException {
 	private static final long serialVersionUID = 1539393473417716292L;

File: jcl/src/java.base/share/classes/java/lang/Access.java
Patch:
@@ -386,7 +386,7 @@ public String newStringUTF8NoRepl(byte[] bytes, int offset, int length) {
 		/*[IF JAVA_SPEC_VERSION < 17]*/
 		return StringCoding.newStringUTF8NoRepl(bytes, offset, length);
 		/*[ELSE] JAVA_SPEC_VERSION < 17 */
-		/*[IF JAVA_SPEC_VERSION < 21]*/
+		/*[IF (JAVA_SPEC_VERSION < 21) | INLINE-TYPES]*/
 		return String.newStringUTF8NoRepl(bytes, offset, length);
 		/*[ELSE] JAVA_SPEC_VERSION < 21 */
 		return String.newStringUTF8NoRepl(bytes, offset, length, true);
@@ -696,7 +696,7 @@ public <T> void setCarrierThreadLocal(CarrierThreadLocal<T> carrierThreadlocal,
 	}
 /*[ENDIF] JAVA_SPEC_VERSION >= 19 */
 
-/*[IF JAVA_SPEC_VERSION >= 21]*/
+/*[IF (JAVA_SPEC_VERSION >= 21) & !INLINE-TYPES]*/
 	@Override
 	public String getLoaderNameID(ClassLoader loader) {
 		StringBuilder buffer = new StringBuilder();
@@ -714,7 +714,7 @@ public String getLoaderNameID(ClassLoader loader) {
 
 		return buffer.toString();
 	}
-/*[ENDIF] JAVA_SPEC_VERSION >= 21 */
+/*[ENDIF] (JAVA_SPEC_VERSION >= 21) & !INLINE-TYPES */
 
 /*[IF INLINE-TYPES]*/
 	@Override

File: jcl/src/java.base/share/classes/java/lang/Access.java
Patch:
@@ -386,7 +386,7 @@ public String newStringUTF8NoRepl(byte[] bytes, int offset, int length) {
 		/*[IF JAVA_SPEC_VERSION < 17]*/
 		return StringCoding.newStringUTF8NoRepl(bytes, offset, length);
 		/*[ELSE] JAVA_SPEC_VERSION < 17 */
-		/*[IF JAVA_SPEC_VERSION < 21]*/
+		/*[IF (JAVA_SPEC_VERSION < 21) | INLINE-TYPES]*/
 		return String.newStringUTF8NoRepl(bytes, offset, length);
 		/*[ELSE] JAVA_SPEC_VERSION < 21 */
 		return String.newStringUTF8NoRepl(bytes, offset, length, true);
@@ -696,7 +696,7 @@ public <T> void setCarrierThreadLocal(CarrierThreadLocal<T> carrierThreadlocal,
 	}
 /*[ENDIF] JAVA_SPEC_VERSION >= 19 */
 
-/*[IF JAVA_SPEC_VERSION >= 21]*/
+/*[IF (JAVA_SPEC_VERSION >= 21) & !INLINE-TYPES]*/
 	@Override
 	public String getLoaderNameID(ClassLoader loader) {
 		StringBuilder buffer = new StringBuilder();
@@ -714,7 +714,7 @@ public String getLoaderNameID(ClassLoader loader) {
 
 		return buffer.toString();
 	}
-/*[ENDIF] JAVA_SPEC_VERSION >= 21 */
+/*[ENDIF] (JAVA_SPEC_VERSION >= 21) & !INLINE-TYPES */
 
 /*[IF INLINE-TYPES]*/
 	@Override

File: test/functional/cmdLineTests/criu/src/org/openj9/criu/OptionsFileTest.java
Patch:
@@ -109,7 +109,7 @@ static void propertiesTest2() {
 	}
 
 	static void propertiesTest3() {
-		String optionsContents = "-Dprop1=val1\n-Dprop2=\\\nval2\n-Dprop3=v \\ \n a \\     \n  l3";
+		String optionsContents = "-Dprop1=val1\n-Dprop2=\\\nval2\n-Dprop3=v \\\n a \\\n  l3";
 		Path optionsFilePath = CRIUTestUtils.createOptionsFile("options", optionsContents);
 
 		Path imagePath = Paths.get("cpData");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2021 IBM Corp. and others
+ * Copyright (c) 1991, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -141,8 +141,8 @@ public StructureHeader getHeader() {
 	 */
 	private void setStream() {
 		StructureDescriptor version = structures.get(DDRALGORITHM_STRUCTURE_NAME);
-		long vmMajorVersion = 2; // default: stream 23
-		long vmMinorVersion = 3;
+		long vmMajorVersion = 2; // default stream: 29
+		long vmMinorVersion = 9;
 
 		/* JAZZ 103906 : A hack was introduced when we split jvm.29 for ARM development.
 		 * The goal was to keep using the same values of VM_MAJOR_VERSION and

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2021 IBM Corp. and others
+ * Copyright (c) 1991, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -141,8 +141,8 @@ public StructureHeader getHeader() {
 	 */
 	private void setStream() {
 		StructureDescriptor version = structures.get(DDRALGORITHM_STRUCTURE_NAME);
-		long vmMajorVersion = 2; // default: stream 23
-		long vmMinorVersion = 3;
+		long vmMajorVersion = 2; // default stream: 29
+		long vmMinorVersion = 9;
 
 		/* JAZZ 103906 : A hack was introduced when we split jvm.29 for ARM development.
 		 * The goal was to keep using the same values of VM_MAJOR_VERSION and

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/ThreadMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2015, 2020 IBM Corp. and others
+ * Copyright (c) 2015, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,7 +28,7 @@
  * APIs specific to {@link com.ibm.lang.management}, exposing additional
  * information than what the standard ThreadMXBean does.
  */
-public interface ThreadMXBean extends java.lang.management.ThreadMXBean 
+public interface ThreadMXBean extends com.sun.management.ThreadMXBean
 {
 	/**
      * Fetches an array of the native (operating system assigned) identifiers 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2021 IBM Corp. and others
+ * Copyright (c) 1991, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -326,8 +326,8 @@ boolean isObjectArray() throws CorruptDataException, com.ibm.j9ddr.CorruptDataEx
 				if (isArray()) {
 					J9ArrayClassPointer arrayClass = J9ArrayClassPointer.cast(j9class);
 					
-					//Any multi-dimensional array is an object array, as is any single dimensional array with an object type (i.e. [Lwhatever;)
-					if(arrayClass.arity().gt(1) || getName().charAt(1) == 'L') {
+					// Any multi-dimensional array is an object array, as is any single dimensional array with an object type (i.e. [Lwhatever; or [Qwhatever;).
+					if (arrayClass.arity().gt(1) || J9ClassHelper.isRefOrValSignature(getName().charAt(1))) {
 						isObjectArray = true;
 					} else {
 						isObjectArray = false;

File: jcl/src/java.base/share/classes/java/lang/J9VMInternals.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2022 IBM Corp. and others
+ * Copyright (c) 1998, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -507,7 +507,7 @@ static int fastIdentityHashCode(Object anObject) {
 	 */
 	static native int identityHashCode(Object anObject);
 
-	/*[IF INLINE-TYPES] */
+	/*[IF INLINE-TYPES]*/
 	/**
 	 * Answers an integer hash code for the parameter.
 	 * The caller must ensure that the parameter is a value type.

File: jcl/src/java.base/share/classes/java/lang/Object.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2022 IBM Corp. and others
+ * Copyright (c) 1998, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -134,7 +134,7 @@ protected void finalize () throws Throwable {
  * @see	#equals
  */
 public int hashCode() {
-	/*[IF INLINE-TYPES] */
+	/*[IF INLINE-TYPES]*/
 	if (this.getClass().isValue()) {
 		return J9VMInternals.valueHashCode(this);
 	}

File: sourcetools/j9constantpool/com/ibm/oti/VMCPTool/FieldRef.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2021 IBM Corp. and others
+ * Copyright (c) 2004, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -124,6 +124,7 @@ protected String fieldType() {
 		switch (((Alias) primary).nas.signature.data.charAt(0)) {
 		case '[':
 		case 'L':
+		case 'Q':
 			return "OBJECT";
 		default:
 			// Do nothing
@@ -153,6 +154,7 @@ protected String fieldType() {
 		switch (((Alias) primary).nas.signature.data.charAt(0)) {
 		case '[':
 		case 'L':
+		case 'Q':
 			return "OBJECT";
 		case 'J':
 			return "I64";

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/Attachment.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2022 IBM Corp. and others
+ * Copyright (c) 2009, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -123,7 +123,7 @@ private static final class MethodRefsHolder {
 	 * @param key           Security key to validate transaction
 	 */
 	Attachment(AttachHandler attachHandler, int portNumber, String key) {
-		setName("Attachment portNumber: " + portNumber); //$NON-NLS-1$
+		super("Attachment portNumber: " + portNumber); //$NON-NLS-1$
 		this.portNumber = portNumber;
 		this.key = key;
 		this.handler = attachHandler;

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/WaitLoop.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2017, 2022 IBM Corp. and others
+ * Copyright (c) 2017, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,8 +29,8 @@
 final class WaitLoop extends Thread {
 
 	WaitLoop() {
+		super("Attach API wait loop"); //$NON-NLS-1$
 		setDaemon(true);
-		setName("Attach API wait loop"); //$NON-NLS-1$
 		/*[PR Jazz 33224 go to max priority to prevent starvation]*/
 		/*
 		 * Give the handler thread increased priority so it responds promptly to

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/MemoryNotificationThreadShutdown.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2020 IBM Corp. and others
+ * Copyright (c) 2005, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@ final class MemoryNotificationThreadShutdown extends Thread {
 	 * @param victim The thread to notify on shutdown
 	 */
 	MemoryNotificationThreadShutdown(Thread victim) {
-		super();
+		super("MemoryNotificationThreadShutdown"); //$NON-NLS-1$
 		myVictim = victim;
 	}
 

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/OperatingSystemNotificationThreadShutdown.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2020 IBM Corp. and others
+ * Copyright (c) 2005, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@ final class OperatingSystemNotificationThreadShutdown extends Thread {
 	 * @param victim The thread to notify on shutdown
 	 */
 	OperatingSystemNotificationThreadShutdown(Thread victim) {
-		super();
+		super("OperatingSystemNotificationThreadShutdown"); //$NON-NLS-1$
 		myVictim = victim;
 	}
 

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/image/j9/BuilderShutdownHook.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,6 +36,7 @@ public class BuilderShutdownHook extends Thread
 	
 	public BuilderShutdownHook()
 	{
+		super("BuilderShutdownHook"); //$NON-NLS-1$
 		_openFiles = new Vector();
 	}
 	

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2021 IBM Corp. and others
+ * Copyright (c) 1991, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -326,8 +326,8 @@ boolean isObjectArray() throws CorruptDataException, com.ibm.j9ddr.CorruptDataEx
 				if (isArray()) {
 					J9ArrayClassPointer arrayClass = J9ArrayClassPointer.cast(j9class);
 					
-					//Any multi-dimensional array is an object array, as is any single dimensional array with an object type (i.e. [Lwhatever;)
-					if(arrayClass.arity().gt(1) || getName().charAt(1) == 'L') {
+					// Any multi-dimensional array is an object array, as is any single dimensional array with an object type (i.e. [Lwhatever; or [Qwhatever;).
+					if (arrayClass.arity().gt(1) || J9ClassHelper.isRefOrValSignature(getName().charAt(1))) {
 						isObjectArray = true;
 					} else {
 						isObjectArray = false;

File: jcl/src/java.base/share/classes/java/lang/J9VMInternals.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2022 IBM Corp. and others
+ * Copyright (c) 1998, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -507,7 +507,7 @@ static int fastIdentityHashCode(Object anObject) {
 	 */
 	static native int identityHashCode(Object anObject);
 
-	/*[IF INLINE-TYPES] */
+	/*[IF INLINE-TYPES]*/
 	/**
 	 * Answers an integer hash code for the parameter.
 	 * The caller must ensure that the parameter is a value type.

File: jcl/src/java.base/share/classes/java/lang/Object.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2022 IBM Corp. and others
+ * Copyright (c) 1998, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -134,7 +134,7 @@ protected void finalize () throws Throwable {
  * @see	#equals
  */
 public int hashCode() {
-	/*[IF INLINE-TYPES] */
+	/*[IF INLINE-TYPES]*/
 	if (this.getClass().isValue()) {
 		return J9VMInternals.valueHashCode(this);
 	}

File: sourcetools/j9constantpool/com/ibm/oti/VMCPTool/FieldRef.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2021 IBM Corp. and others
+ * Copyright (c) 2004, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -124,6 +124,7 @@ protected String fieldType() {
 		switch (((Alias) primary).nas.signature.data.charAt(0)) {
 		case '[':
 		case 'L':
+		case 'Q':
 			return "OBJECT";
 		default:
 			// Do nothing
@@ -153,6 +154,7 @@ protected String fieldType() {
 		switch (((Alias) primary).nas.signature.data.charAt(0)) {
 		case '[':
 		case 'L':
+		case 'Q':
 			return "OBJECT";
 		case 'J':
 			return "I64";

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/upcall/UpcallMethodHandles.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2022 IBM Corp. and others
+ * Copyright (c) 2021, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -2585,11 +2585,11 @@ public static double addDoubleAndFloatDoubleFloatFromStruct(double arg1, MemoryS
 	}
 
 	public static double addDoubleAndIntDoubleLongFromStruct(double arg1, MemorySegment arg2) {
-		/* The size of [int, double, long] on AIX/PPC 64-bit is 16 bytes without padding by default
+		/* The size of [int, double, long] on AIX/PPC 64-bit is 20 bytes without padding by default
 		 * while the same struct is 24 bytes with padding on other platforms.
 		 */
 		GroupLayout structLayout = isAixOS ? MemoryLayout.structLayout(C_INT.withName("elem1"),
-				C_DOUBLE.withName("elem2"), longLayout.withName("elem3"))
+				C_DOUBLE.withName("elem2"), longLayout.withName("elem3").withBitAlignment(32))
 				: MemoryLayout.structLayout(C_INT.withName("elem1"), MemoryLayout.paddingLayout(32),
 						C_DOUBLE.withName("elem2"), longLayout.withName("elem3"));
 		VarHandle elemHandle1 = structLayout.varHandle(int.class, PathElement.groupElement("elem1"));

File: test/functional/Java19andUp/src/org/openj9/test/jep424/upcall/UpcallMHWithMixedSigStruTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2022 IBM Corp. and others
+ * Copyright (c) 2021, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -821,7 +821,7 @@ public void test_addDoubleAndFloatDoubleFloatFromStructByUpcallMH() throws Throw
 
 	@Test
 	public void test_addDoubleAndIntDoubleLongFromStructByUpcallMH() throws Throwable {
-		/* The size of [int, double, long] on AIX/PPC 64-bit is 16 bytes without padding by default
+		/* The size of [int, double, long] on AIX/PPC 64-bit is 20 bytes without padding by default
 		 * while the same struct is 24 bytes with padding on other platforms.
 		 */
 		GroupLayout structLayout = isAixOS ? MemoryLayout.structLayout(JAVA_INT.withName("elem1"),

File: test/functional/Java19andUp/src/org/openj9/test/jep424/upcall/UpcallMethodHandles.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2022 IBM Corp. and others
+ * Copyright (c) 2021, 2023 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1853,7 +1853,7 @@ public static double addDoubleAndFloatDoubleFloatFromStruct(double arg1, MemoryS
 
 	public static double addDoubleAndIntDoubleLongFromStruct(double arg1, MemorySegment arg2) {
 		int structElem1 = arg2.get(JAVA_INT, 0);
-		/* The size of [int, double, long] on AIX/PPC 64-bit is 16 bytes without padding by default
+		/* The size of [int, double, long] on AIX/PPC 64-bit is 20 bytes without padding by default
 		 * while the same struct is 24 bytes with padding on other platforms.
 		 */
 		double structElem2 = (isAixOS) ? arg2.get(JAVA_DOUBLE.withBitAlignment(32), 4) : arg2.get(JAVA_DOUBLE, 8);

File: jcl/src/java.base/share/classes/openj9/internal/foreign/abi/InternalUpcallHandler.java
Patch:
@@ -144,7 +144,7 @@ private long getUpcallThunkAddr(MethodHandle target, ResourceScope sessionOrScop
 		 * is only alive for a MemorySession(JDK19)/ResourceScope(JDK17/18) specified in java, which means the upcall handler
 		 * and its UpcallMHMetaData object will be cleaned up automatically once their session/scope is closed.
 		 */
-		metaData = new UpcallMHMetaData(target, sessionOrScope);
+		metaData = new UpcallMHMetaData(target, argLayoutCount, sessionOrScope);
 		return allocateUpcallStub(metaData, nativeSignatureStrs);
 	}
 

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -5717,8 +5717,8 @@ private static ReflectionFactory getReflectionFactory() {
 	 * present. For a primitive type or void, the PUBLIC and FINAL access flags should always
 	 * be present, and the PROTECTED and PRIVATE access flags should always be absent.
 	 *
-	 * {@return an unmodifiable set of the {@linkplain AccessFlag access flags} for this
-	 * class, possibly empty}
+	 * @return an unmodifiable set of the {@linkplain AccessFlag access flags} for this
+	 * class, possibly empty
 	 *
 	 * @since 20
 	 */

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -5717,8 +5717,8 @@ private static ReflectionFactory getReflectionFactory() {
 	 * present. For a primitive type or void, the PUBLIC and FINAL access flags should always
 	 * be present, and the PROTECTED and PRIVATE access flags should always be absent.
 	 *
-	 * {@return an unmodifiable set of the {@linkplain AccessFlag access flags} for this
-	 * class, possibly empty}
+	 * @return an unmodifiable set of the {@linkplain AccessFlag access flags} for this
+	 * class, possibly empty
 	 *
 	 * @since 20
 	 */

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestAttachErrorHandling.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -409,7 +409,7 @@ private TargetManager connectAndVerifyConnection(boolean detach) {
 			targetManager = new TargetManager(TARGET_VM_CLASS);
 			targetManager.syncWithTarget();
 			String targetId = targetManager.targetId;
-			AssertJUnit.assertNotNull("target did not launch");
+			AssertJUnit.assertNotNull("target did not launch", targetId);
 			VirtualMachine vm = VirtualMachine.attach(targetId);
 			/* verify the connection */
 			Properties vmProps = vm.getSystemProperties();

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestAttachErrorHandling.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -409,7 +409,7 @@ private TargetManager connectAndVerifyConnection(boolean detach) {
 			targetManager = new TargetManager(TARGET_VM_CLASS);
 			targetManager.syncWithTarget();
 			String targetId = targetManager.targetId;
-			AssertJUnit.assertNotNull("target did not launch");
+			AssertJUnit.assertNotNull("target did not launch", targetId);
 			VirtualMachine vm = VirtualMachine.attach(targetId);
 			/* verify the connection */
 			Properties vmProps = vm.getSystemProperties();

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSBundleEntry.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSBundleFile.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSHookConfigurator.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: cdsadapter/com.ibm.cds/src/com/ibm/cds/CDSHookImpls.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/CTypeParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/ExtractCPPFlags.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateBlobC.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateInputCFile.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateSpecSuperset.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GetNativeDirectory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/SortHeadersInConfig.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/StripGarbage.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/BlobHeader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/Configuration.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/config/ConstantHandlingStrategy.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/constants/ConstantParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/constants/ICVisitor.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ClassType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Constant.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ConstantsType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Declaration.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/EnumType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/EnumerationConstant.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/ITypeCollection.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/PseudoType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/RecordType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/StructType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Type.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/Typedef.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/UnionType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/datamodel/UserDefinedType.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/IHeaderResolver.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/ILineNumberConverter.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/PreProcessedSourceParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/linenumbers/SourceLocation.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/xmlparser/J9FlagsXMLParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/xmlparser/StructureXMLParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/testsrc/TestConstantParser.java
Patch:
@@ -21,7 +21,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_Autoblob/testsrc/TestPreProcessedSource.java
Patch:
@@ -19,7 +19,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/AddressedCorruptDataException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/CTypeParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/CorruptDataException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/DDRSymbolFinder.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/DataUnavailableException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/GeneratedFieldAccessor.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/GeneratedPointerClass.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/IBootstrapRunnable.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/IVMData.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/InvalidDataTypeException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/J9DDRClassLoader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/NoSuchFieldException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/NullPointerDereference.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureHeader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureTypeManager.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/VMDataFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/blobs/BlobFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/blobs/IBlobFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandParser.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/ConsoleCommandReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/ExitException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/AbstractCoreReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ClosingFileReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/CoreReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/CorruptCoreException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/DumpException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ICore.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ICoreFileReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ILibraryDependentCore.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ILibraryResolver.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/IModuleFile.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/InvalidDumpFormatException.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/LibraryDataSource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/LibraryResolverFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/Platform.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/ZipFileResolver.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIX32DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIX64DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReaderFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXProcessAddressSpace.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/ARReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/BaseAIXOSThread.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/XCOFFReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address32.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/Address64.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/DataEntry.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELF32FileReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELF64FileReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFAArch64DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFAMD64DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFARM32DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReaderFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFFileReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFIA32DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFPPC32DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFPPC64DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFRISCV64DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFS39031DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFS39064DumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFSymbol.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/LinuxProcessAddressSpace.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ProgramHeaderEntry.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/SectionHeaderEntry.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/CIE.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/FDE.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/Unwind.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/UnwindTable.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/BuildVersionCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DSymtabCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DyldInfoCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylibCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/DylinkerCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EncryptionCommand64.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/EntryPointCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkeditDataCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LinkerOptionCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/LoadCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReader.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/MachoDumpReaderFactory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/NoteCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/OSXProcessAddressSpace.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PrebindChecksumCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/PreboundDylibCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RoutinesCommand64.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/RpathCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SegmentCommand64.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SourceVersionCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SubCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/SymtabCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/ThreadCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/TwoLevelHintsCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/UuidCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/macho/VersionMinCommand.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/AbstractMemory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Addresses.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BaseMemoryRange.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BaseModule.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BufferedMemory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/BufferedMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DelegatingMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DetailedDumpMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/DumpMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/EnvironmentUtils.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IAddressSpace.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IDetailedMemoryRange.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemoryImageInputStream.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemoryRange.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IModule.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/INamedMemoryRange.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/IProcess.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ISymbol.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemoryFault.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemoryRange.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemorySourceTable.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MissingFileModule.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Module.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ProcessAddressSpace.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/ProtectedMemoryRange.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/SearchableMemory.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/Symbol.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/SymbolUtil.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/UnbackedMemorySource.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/BaseWindowsOSThread.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/EarlyInitializedStream.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/LateInitializedStream.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/Memory64Stream.java
Patch:
@@ -15,7 +15,7 @@
  * OpenJDK Assembly Exception [2].
  *
  * [1] https://www.gnu.org/software/classpath/license.html
- * [2] http://openjdk.java.net/legal/assembly-exception.html
+ * [2] https://openjdk.org/legal/assembly-exception.html
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/

File: test/functional/Valhalla/src/org/openj9/test/lworld/DDRBackfillLayouTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2019, 2020 IBM Corp. and others
+ * Copyright (c) 2019, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -59,7 +59,6 @@ private static void createAndCheckValueType() throws Throwable {
 		ValueTypeDoubleLong doubleLongInstance = new ValueTypeDoubleLong(new ValueTypeLong(ValueTypeTests.defaultLong), ValueTypeTests.defaultLongNew);
 		ValueTypeQuadLong quadLongInstance = new ValueTypeQuadLong(doubleLongInstance, new ValueTypeLong(ValueTypeTests.defaultLongNew2), ValueTypeTests.defaultLongNew3);
 		ValueTypeDoubleQuadLong doubleQuadLongInstance = new ValueTypeDoubleQuadLong(quadLongInstance, doubleLongInstance, new ValueTypeLong(ValueTypeTests.defaultLongNew4), ValueTypeTests.defaultLongNew5);
-		
 
 		Object flatUnAlignedSingleBackfill2Array = Array.newInstance(ValueTypeTests.flatUnAlignedSingleBackfillClass2, 3);
 		Array.set(flatUnAlignedSingleBackfill2Array, 1, flatUnAlignedSingleBackfill2Instance);

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTestClasses.java
Patch:
@@ -107,7 +107,7 @@ static primitive class ValueTypeInt2 {
 		ValueTypeInt2(int i) { this.i = i; }
 		final int i;
 	}
-	
+
 	static primitive class ValueTypeFastSubVT {
 		final int x,y,z;
 		final Object[] arr;
@@ -118,7 +118,7 @@ static primitive class ValueTypeFastSubVT {
 			this.arr = arr;
 		}
 	}
-	
+
 	static primitive class ValueTypeDoubleLong {
 		final ValueTypeLong l;
 		final long l2;
@@ -178,5 +178,4 @@ public long getL4() {
 			return l4;
 		}
 	}
-	
 }

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -1682,7 +1682,7 @@ static public void testFlatLayoutsWithRecursiveLongs() throws Throwable {
 		assertEquals(quadLongInstance.getL().getL2(), defaultLongNew);
 		assertEquals(quadLongInstance.getL2().getL(), defaultLongNew2);
 		assertEquals(quadLongInstance.getL3(), defaultLongNew3);
-		
+
 		ValueTypeDoubleQuadLong doubleQuadLongInstance = new ValueTypeDoubleQuadLong(quadLongInstance, doubleLongInstance, new ValueTypeLong(defaultLongNew4), defaultLongNew5);
 
 		assertEquals(doubleQuadLongInstance.getL().getL().getL().getL(), defaultLong);
@@ -1693,7 +1693,6 @@ static public void testFlatLayoutsWithRecursiveLongs() throws Throwable {
 		assertEquals(doubleQuadLongInstance.getL2().getL2(), defaultLongNew);
 		assertEquals(doubleQuadLongInstance.getL3().getL(), defaultLongNew4);
 		assertEquals(doubleQuadLongInstance.getL4(), defaultLongNew5);
-		
 	}
 	
 	/*

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -171,6 +171,7 @@ private void nextField() throws CorruptDataException {
 					offset = new UDATA(hiddenField.fieldOffset().intValue() - J9ObjectHelper.headerSize());
 					/* Hidden fields do not have a valid JVMTI index. */
 					index = new UDATA(-1);
+					break;
 				}
 			}
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -171,6 +171,7 @@ private void nextField() throws CorruptDataException {
 					offset = new UDATA(hiddenField.fieldOffset().intValue() - J9ObjectHelper.headerSize());
 					/* Hidden fields do not have a valid JVMTI index. */
 					index = new UDATA(-1);
+					break;
 				}
 			}
 		}

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTestClasses.java
Patch:
@@ -22,7 +22,7 @@
 package org.openj9.test.lworld;
 
 
-public class ValueTypeUnsafeTestClasses {
+public class ValueTypeTestClasses {
 
 	static primitive class ValueTypeInt {
 		ValueTypeInt(int i) { this.i = i; }
@@ -48,7 +48,7 @@ static primitive class ValueTypePoint2D {
 		}
 	}
 
-	static primitive class ValueClassPoint2D {
+	static value class ValueClassPoint2D {
 		final ValueClassInt x, y;
 
 		ValueClassPoint2D(ValueClassInt x, ValueClassInt y) {

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeUnsafeTests.java
Patch:
@@ -34,7 +34,7 @@
 import org.testng.annotations.BeforeMethod;
 import org.testng.annotations.BeforeClass;
 import org.testng.annotations.DataProvider;
-import static org.openj9.test.lworld.ValueTypeUnsafeTestClasses.*;
+import static org.openj9.test.lworld.ValueTypeTestClasses.*;
 
 
 @Test(groups = { "level.sanity" })

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -2643,7 +2643,7 @@ boolean isPrimaryType() {
 }
 boolean isPrimitiveValueType() {
 	// ToDo: this is a temporary implementation - https://github.com/eclipse-openj9/openj9/issues/13615
-	return false;
+	return isPrimitiveClass();
 }
 /*[ENDIF] INLINE-TYPES */
 

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -2643,7 +2643,7 @@ boolean isPrimaryType() {
 }
 boolean isPrimitiveValueType() {
 	// ToDo: this is a temporary implementation - https://github.com/eclipse-openj9/openj9/issues/13615
-	return false;
+	return isPrimitiveClass();
 }
 /*[ENDIF] INLINE-TYPES */
 

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java
Patch:
@@ -2,7 +2,7 @@
 
 package com.ibm.oti.vm;
 /*******************************************************************************
- * Copyright (c) 1998, 2021 IBM Corp. and others
+ * Copyright (c) 1998, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -42,8 +42,6 @@
 @SuppressWarnings("javadoc")
 public final class VM {
 
-	public static final boolean PACKED_SUPPORT_ENABLED = false;  /* TODO delete this when ARM JCL is updated */
-
 	public static final int J9_JAVA_CLASS_RAM_SHAPE_SHIFT;
 	public static final int OBJECT_HEADER_SHAPE_MASK;
 	public static final int OBJECT_HEADER_SIZE;

File: test/functional/cmdLineTests/criu/src/org/openj9/criu/CRIUTestUtils.java
Patch:
@@ -33,6 +33,8 @@
 import org.eclipse.openj9.criu.RestoreException;
 
 public class CRIUTestUtils {
+	public final static Path imagePath = Paths.get("cpData");
+
 	public static void deleteCheckpointDirectory(Path path) {
 		try {
 			if (path.toFile().exists()) {
@@ -70,6 +72,7 @@ public static void checkPointJVM(CRIUSupport criu, Path path, boolean deleteDir)
 				if (criu == null) {
 					criu = new CRIUSupport(path);
 				}
+				showThreadCurrentTime("Performing CRIUSupport.checkpointJVM()");
 				criu.setLeaveRunning(false).setShellJob(true).setFileLocks(true).checkpointJVM();
 			} catch (RestoreException e) {
 				e.printStackTrace();

File: jcl/src/java.base/share/classes/jdk/internal/vm/Continuation.java
Patch:
@@ -178,7 +178,7 @@ private static void execute(Continuation cont) {
 
 	public final void run() {
 		if (!trylockAccess()) {
-			throw new IllegalStateException("Continuation has already finished.");
+			throw new IllegalStateException("Continuation inaccessible: mounted or being inspected.");
 		}
 		if (finished) {
 			throw new IllegalStateException("Continuation has already finished.");
@@ -199,13 +199,13 @@ public final void run() {
 		try {
 			result = enterImpl();
 		} finally {
-			isAccessible = true;
 			if (result) {
 				/* Continuation completed */
 			} else {
 				/* Continuation yielded */
 			}
 			JLA.setContinuation(carrier, parent);
+			unlockAccess();
 		}
 	}
 

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/builder/javacore/JavaRuntimeBuilder.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corp. and others
+ * Copyright (c) 2007, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -246,7 +246,7 @@ public JavaThread addJavaThread(ImageThread imageThread, String name, long tid,
 			}
 			if( fAddressSpace.isValidAddressID(blockingObject)) {
 				JCJavaClass jClass = generateJavaClass(getJavaRuntime(), blockingObjectClass, IBuilderData.NOT_AVAILABLE);
-				ImagePointer pointerObjectID = fAddressSpace.getPointer(javaObjID);
+				ImagePointer pointerObjectID = fAddressSpace.getPointer(blockingObject);
 				JCJavaObject jobject = new JCJavaObject(pointerObjectID, jClass);
 				javaThread.setBlockingObject(jobject);
 			}

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/builder/javacore/JavaRuntimeBuilder.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2007, 2018 IBM Corp. and others
+ * Copyright (c) 2007, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -246,7 +246,7 @@ public JavaThread addJavaThread(ImageThread imageThread, String name, long tid,
 			}
 			if( fAddressSpace.isValidAddressID(blockingObject)) {
 				JCJavaClass jClass = generateJavaClass(getJavaRuntime(), blockingObjectClass, IBuilderData.NOT_AVAILABLE);
-				ImagePointer pointerObjectID = fAddressSpace.getPointer(javaObjID);
+				ImagePointer pointerObjectID = fAddressSpace.getPointer(blockingObject);
 				JCJavaObject jobject = new JCJavaObject(pointerObjectID, jClass);
 				javaThread.setBlockingObject(jobject);
 			}

File: jcl/src/java.base/share/classes/jdk/internal/vm/Continuation.java
Patch:
@@ -178,7 +178,7 @@ private static void execute(Continuation cont) {
 
 	public final void run() {
 		if (!trylockAccess()) {
-			throw new IllegalStateException("Continuation has already finished.");
+			throw new IllegalStateException("Continuation inaccessible: mounted or being inspected.");
 		}
 		if (finished) {
 			throw new IllegalStateException("Continuation has already finished.");
@@ -199,13 +199,13 @@ public final void run() {
 		try {
 			result = enterImpl();
 		} finally {
-			isAccessible = true;
 			if (result) {
 				/* Continuation completed */
 			} else {
 				/* Continuation yielded */
 			}
 			JLA.setContinuation(carrier, parent);
+			unlockAccess();
 		}
 	}
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/PointerGenerator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2021 IBM Corp. and others
+ * Copyright (c) 1991, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1485,7 +1485,6 @@ private static void printHelp() {
 		System.out.println("    -c <cache properties>     : cache control properties file");
 		System.out.println("    -l <legacy mode>          : true or false indicating if legacy DDR is used");
 		System.out.println("    -r <path>                 : path to superset file for restricting available constants");
-		System.out.println("    -c <path>                 : path to additional compatibility constants");
 		System.out.println("    -a <path>                 : path to auxiliary field information");
 	}
 

File: jcl/src/java.base/share/classes/jdk/internal/foreign/abi/DowncallLinker.java
Patch:
@@ -43,6 +43,6 @@ public class DowncallLinker {
 	 * @return a method handle bound to the native method
 	 */
 	public static MethodHandle getBoundMethodHandle(MethodType functionMethodType, FunctionDescriptor funcDesc) {
-		return InternalDowncallHandler.getBoundMethodHandle(functionMethodType, funcDesc);
+		return new InternalDowncallHandler(functionMethodType, funcDesc).getBoundMethodHandle();
 	}
 }

File: jcl/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/ProgrammableInvoker.java
Patch:
@@ -45,11 +45,11 @@ public class ProgrammableInvoker {
 	 */
 	/*[IF JAVA_SPEC_VERSION >= 17]*/
 	public static MethodHandle getBoundMethodHandle(MethodType functionMethodType, FunctionDescriptor funcDesc) {
-		return InternalDowncallHandler.getBoundMethodHandle(functionMethodType, funcDesc);
+		return new InternalDowncallHandler(functionMethodType, funcDesc).getBoundMethodHandle();
 	}
 	/*[ELSE] JAVA_SPEC_VERSION >= 17 */
 	public static MethodHandle getBoundMethodHandle(Addressable downcallAddr, MethodType functionMethodType, FunctionDescriptor funcDesc) {
-		return InternalDowncallHandler.getBoundMethodHandle(downcallAddr, functionMethodType, funcDesc);
+		return new InternalDowncallHandler(downcallAddr, functionMethodType, funcDesc).getBoundMethodHandle();
 	}
 	/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 }

File: jcl/src/java.base/share/classes/jdk/internal/foreign/abi/DowncallLinker.java
Patch:
@@ -43,6 +43,6 @@ public class DowncallLinker {
 	 * @return a method handle bound to the native method
 	 */
 	public static MethodHandle getBoundMethodHandle(MethodType functionMethodType, FunctionDescriptor funcDesc) {
-		return InternalDowncallHandler.getBoundMethodHandle(functionMethodType, funcDesc);
+		return new InternalDowncallHandler(functionMethodType, funcDesc).getBoundMethodHandle();
 	}
 }

File: jcl/src/jdk.incubator.foreign/share/classes/jdk/internal/foreign/abi/ProgrammableInvoker.java
Patch:
@@ -45,11 +45,11 @@ public class ProgrammableInvoker {
 	 */
 	/*[IF JAVA_SPEC_VERSION >= 17]*/
 	public static MethodHandle getBoundMethodHandle(MethodType functionMethodType, FunctionDescriptor funcDesc) {
-		return InternalDowncallHandler.getBoundMethodHandle(functionMethodType, funcDesc);
+		return new InternalDowncallHandler(functionMethodType, funcDesc).getBoundMethodHandle();
 	}
 	/*[ELSE] JAVA_SPEC_VERSION >= 17 */
 	public static MethodHandle getBoundMethodHandle(Addressable downcallAddr, MethodType functionMethodType, FunctionDescriptor funcDesc) {
-		return InternalDowncallHandler.getBoundMethodHandle(downcallAddr, functionMethodType, funcDesc);
+		return new InternalDowncallHandler(downcallAddr, functionMethodType, funcDesc).getBoundMethodHandle();
 	}
 	/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 }

File: jcl/src/openj9.dataaccess/share/classes/com/ibm/dataaccess/DecimalData.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF DAA]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2021 IBM Corp. and others
+ * Copyright (c) 2013, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -2574,7 +2574,7 @@ private static void slowBigDecimalToSignedPacked(BigDecimal bd,
 
         // take care of the sign nibble and the right most digit
         byteArray[offset + length - 1] = (byte) ((buffer[numDigitsLeft] - '0') << 4);
-        byteArray[offset + length - 1] |= ((value.signum() == -1) ? 0x0D : 0x0C);
+        byteArray[offset + length - 1] |= (byte) ((value.signum() == -1) ? 0x0D : 0x0C);
 
         // compact 2 digits into each byte
         for (int i = numDigitsLeft - 1; i >= endPosition

File: jcl/src/openj9.dataaccess/share/classes/com/ibm/dataaccess/PackedDecimal.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF DAA]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2021 IBM Corp. and others
+ * Copyright (c) 2013, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -842,14 +842,14 @@ private static void putBigInteger(byte[] pd, int offset, int length,
         int charStart = neg ? 1 : 0;
         int charEnd = chars.length - 1;
 
-        pd[end--] = (byte) ((neg ? 0x0D : 0x0C) | (chars[charEnd--] - '0' << 4));
+        pd[end--] = (byte) ((neg ? 0x0D : 0x0C) | ((chars[charEnd--] - '0') << 4));
 
         while (end >= offset) {
             byte b = 0;
             if (charEnd >= charStart) {
                 b = (byte) (chars[charEnd--] - '0');
                 if (charEnd >= charStart) {
-                    b |= chars[charEnd--] - '0' << 4;
+                    b |= (byte) ((chars[charEnd--] - '0') << 4);
                 }
             }
             pd[end--] = b;

File: jcl/src/openj9.dataaccess/share/classes/com/ibm/dataaccess/DecimalData.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF DAA]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2021 IBM Corp. and others
+ * Copyright (c) 2013, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -2574,7 +2574,7 @@ private static void slowBigDecimalToSignedPacked(BigDecimal bd,
 
         // take care of the sign nibble and the right most digit
         byteArray[offset + length - 1] = (byte) ((buffer[numDigitsLeft] - '0') << 4);
-        byteArray[offset + length - 1] |= ((value.signum() == -1) ? 0x0D : 0x0C);
+        byteArray[offset + length - 1] |= (byte) ((value.signum() == -1) ? 0x0D : 0x0C);
 
         // compact 2 digits into each byte
         for (int i = numDigitsLeft - 1; i >= endPosition

File: jcl/src/openj9.dataaccess/share/classes/com/ibm/dataaccess/PackedDecimal.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF DAA]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2021 IBM Corp. and others
+ * Copyright (c) 2013, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -842,14 +842,14 @@ private static void putBigInteger(byte[] pd, int offset, int length,
         int charStart = neg ? 1 : 0;
         int charEnd = chars.length - 1;
 
-        pd[end--] = (byte) ((neg ? 0x0D : 0x0C) | (chars[charEnd--] - '0' << 4));
+        pd[end--] = (byte) ((neg ? 0x0D : 0x0C) | ((chars[charEnd--] - '0') << 4));
 
         while (end >= offset) {
             byte b = 0;
             if (charEnd >= charStart) {
                 b = (byte) (chars[charEnd--] - '0');
                 if (charEnd >= charStart) {
-                    b |= chars[charEnd--] - '0' << 4;
+                    b |= (byte) ((chars[charEnd--] - '0') << 4);
                 }
             }
             pd[end--] = b;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/Context.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -231,7 +231,7 @@ private boolean tryCommand(CommandParser command, ICommand thisCommand, PrintStr
 			} catch (Exception e) {
 				logger.log(Level.FINE, "Problem running command: ", e);
 				defaultOut.println("Problem running command:");
-				defaultOut.println(e.getMessage());
+				e.printStackTrace(defaultOut);
 			}
 
 			defaultOut.flush();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/commands/TraceFileHeaderWriter.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -82,7 +82,7 @@ public TraceFileHeaderWriter(String snapTraceFileName,
         
         // Fix the size on this once we know how big it really will be.
 		try {
-			headerBytes = ByteBuffer.allocate(16*1024);
+			headerBytes = ByteBuffer.allocate(160*1024);
 		} catch (Exception e) {
 			e.printStackTrace();
 			throw new IOException();

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/parser/j9/section/platform/PlatformPatternMatchers.java
Patch:
@@ -48,5 +48,4 @@ public class PlatformPatternMatchers {
 	public static final Matcher Module_base = CommonPatternMatchers.generateMatcher("Module_base_address:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module_offset = CommonPatternMatchers.generateMatcher("Module_offset:", Pattern.CASE_INSENSITIVE);
 
-
 }

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/SecurityProviders.java
Patch:
@@ -60,7 +60,7 @@ public static void registerRestoreSecurityProviders() {
 				CRIUSupport.RESTORE_SECURITY_PROVIDERS_PRIORITY,
 				"Restore the security providers", //$NON-NLS-1$
 				() -> {
-					if (InternalCRIUSupport.isCheckpointAllowed()) {
+					if (!InternalCRIUSupport.isCheckpointAllowed()) {
 						CRIUConfigurator.setCRIURestoreMode();
 					}
 				});

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/SecurityProviders.java
Patch:
@@ -60,7 +60,7 @@ public static void registerRestoreSecurityProviders() {
 				CRIUSupport.RESTORE_SECURITY_PROVIDERS_PRIORITY,
 				"Restore the security providers", //$NON-NLS-1$
 				() -> {
-					if (InternalCRIUSupport.isCheckpointAllowed()) {
+					if (!InternalCRIUSupport.isCheckpointAllowed()) {
 						CRIUConfigurator.setCRIURestoreMode();
 					}
 				});

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/parser/j9/section/platform/PlatformPatternMatchers.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2007, 2017 IBM Corp. and others
+ * Copyright (c) 2007, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -43,8 +43,7 @@ public class PlatformPatternMatchers {
 	public static final Matcher Linux = CommonPatternMatchers.generateMatcher("Linux", Pattern.CASE_INSENSITIVE);
 	public static final Matcher AIX = CommonPatternMatchers.generateMatcher("AIX", Pattern.CASE_INSENSITIVE);
 	public static final Matcher z_OS = CommonPatternMatchers.generateMatcher("z/OS", Pattern.CASE_INSENSITIVE);
-	public static final Matcher J9Signal_1 = CommonPatternMatchers.generateMatcher("J9Generic_Signal:", Pattern.CASE_INSENSITIVE);
-	public static final Matcher J9Signal_2 = CommonPatternMatchers.generateMatcher("J9Generic_Signal_Number:", Pattern.CASE_INSENSITIVE);
+	public static final Matcher Signal = CommonPatternMatchers.generateMatcher("Signal_Number:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module = CommonPatternMatchers.generateMatcher("Module:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module_base = CommonPatternMatchers.generateMatcher("Module_base_address:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module_offset = CommonPatternMatchers.generateMatcher("Module_offset:", Pattern.CASE_INSENSITIVE);

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/parser/j9/section/platform/PlatformPatternMatchers.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2007, 2017 IBM Corp. and others
+ * Copyright (c) 2007, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -43,8 +43,7 @@ public class PlatformPatternMatchers {
 	public static final Matcher Linux = CommonPatternMatchers.generateMatcher("Linux", Pattern.CASE_INSENSITIVE);
 	public static final Matcher AIX = CommonPatternMatchers.generateMatcher("AIX", Pattern.CASE_INSENSITIVE);
 	public static final Matcher z_OS = CommonPatternMatchers.generateMatcher("z/OS", Pattern.CASE_INSENSITIVE);
-	public static final Matcher J9Signal_1 = CommonPatternMatchers.generateMatcher("J9Generic_Signal:", Pattern.CASE_INSENSITIVE);
-	public static final Matcher J9Signal_2 = CommonPatternMatchers.generateMatcher("J9Generic_Signal_Number:", Pattern.CASE_INSENSITIVE);
+	public static final Matcher Signal = CommonPatternMatchers.generateMatcher("Signal_Number:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module = CommonPatternMatchers.generateMatcher("Module:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module_base = CommonPatternMatchers.generateMatcher("Module_base_address:", Pattern.CASE_INSENSITIVE);
 	public static final Matcher Module_offset = CommonPatternMatchers.generateMatcher("Module_offset:", Pattern.CASE_INSENSITIVE);

File: test/functional/cmdLineTests/criu/src/org/openj9/criu/CRIUSimpleTest.java
Patch:
@@ -29,7 +29,7 @@ public class CRIUSimpleTest {
 
 	public static void main(String args[]) {
 		try {
-			int num_checkpoints=Integer.parseInt(args[0]);
+			int num_checkpoints=Integer.parseInt(args[1]);
 			checkpoints(num_checkpoints);
 		} catch (NumberFormatException e) {
 			System.out.println("Input is not a valid integer");

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -3128,7 +3128,7 @@ static public void testValueTypeSubClassInvisibleLightAbstractClass() throws Thr
 		valueTypeIdentityObjectTestHelper("testValueTypeSubClassInvisibleLightAbstractClass", superClassName, 0);
 	}
 
-	@Test(priority=1, expectedExceptions=VerifyError.class)
+	@Test(priority=1, expectedExceptions=ClassFormatError.class)
 	static public void testValueTypeHasSychMethods() throws Throwable {
 		String fields[] = {"longField:J"};
 		Class valueClass = ValueTypeGenerator.generateIllegalValueClassWithSychMethods("testValueTypeHasSychMethods", fields);

File: test/functional/cmdLineTests/criu/src/org/openj9/criu/CRIUSimpleTest.java
Patch:
@@ -29,7 +29,7 @@ public class CRIUSimpleTest {
 
 	public static void main(String args[]) {
 		try {
-			int num_checkpoints=Integer.parseInt(args[0]);
+			int num_checkpoints=Integer.parseInt(args[1]);
 			checkpoints(num_checkpoints);
 		} catch (NumberFormatException e) {
 			System.out.println("Input is not a valid integer");

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -3128,7 +3128,7 @@ static public void testValueTypeSubClassInvisibleLightAbstractClass() throws Thr
 		valueTypeIdentityObjectTestHelper("testValueTypeSubClassInvisibleLightAbstractClass", superClassName, 0);
 	}
 
-	@Test(priority=1, expectedExceptions=VerifyError.class)
+	@Test(priority=1, expectedExceptions=ClassFormatError.class)
 	static public void testValueTypeHasSychMethods() throws Throwable {
 		String fields[] = {"longField:J"};
 		Class valueClass = ValueTypeGenerator.generateIllegalValueClassWithSychMethods("testValueTypeHasSychMethods", fields);

File: test/functional/DDR_Test/src/j9vm/test/ddrext/Constants.java
Patch:
@@ -633,8 +633,7 @@ public class Constants {
 	public static final String DEADLOCK_OWNED_BY = "which is owned by:";
 	public static final String DEADLOCK_FIRST_MON = "First Monitor lock";
 	public static final String DEADLOCK_SECOND_MON = "Second Monitor lock";
-	public static final String DEADLOCK_JAVA_OBJ = "java/lang/Object";
-	public static final String DEADLOCK_JAVA_IDENTITY = "java/lang/Identity";
+	public static final String DEADLOCK_JAVA_OBJ = "j9vm/test/corehelper/DeadlockCoreGenerator\\$LockObject";
 	public static final String DEADLOCK_CMD = "deadlock";
 
 	/* Constants related to testing of runtime type resolution */

File: test/functional/cmdLineTests/SystemPropertiesTest/src/SysPropTest.java
Patch:
@@ -47,10 +47,10 @@ public static void main(String args[])
 				isWindows = true;
 			}
 
-			/* On jdk18+ with JEP 400 UTF-8 by default, the non-ascii characters in the testkey property
+			/* On jdk18 with JEP 400 UTF-8 by default, the non-ascii characters in the testkey property
 			 * are converted to UTF8 by the test (not the JVM).
 			 */
-			final byte[] expectedBytes = ((VersionCheck.major() >= 18) && !isWindows) ? inputBytesUtf8 : inputBytes;
+			final byte[] expectedBytes = ((VersionCheck.major() == 18) && !isWindows) ? inputBytesUtf8 : inputBytes;
 
 			if (argEncoding.equals("DEFAULT")) {
 				osEncoding = System.getProperty("os.encoding");
@@ -60,7 +60,7 @@ public static void main(String args[])
 			 * sets os.encoding to UTF8. To replicate this behavior, on Windows use the default encoding
 			 * and not the os.encoding.
 			 */
-			if (osEncoding != null && osEncoding.length() != 0 && isWindows == false) {
+			if ((osEncoding != null) && (osEncoding.length() != 0) && !isWindows) {
 				strTestProp = new String(expectedBytes, osEncoding);
 			} else {
 				if ((argEncoding.equals("UTF-8") || argEncoding.equals("ISO-8859-1"))) {

File: test/functional/cmdLineTests/SystemPropertiesTest/src/SysPropTest.java
Patch:
@@ -47,10 +47,10 @@ public static void main(String args[])
 				isWindows = true;
 			}
 
-			/* On jdk18+ with JEP 400 UTF-8 by default, the non-ascii characters in the testkey property
+			/* On jdk18 with JEP 400 UTF-8 by default, the non-ascii characters in the testkey property
 			 * are converted to UTF8 by the test (not the JVM).
 			 */
-			final byte[] expectedBytes = ((VersionCheck.major() >= 18) && !isWindows) ? inputBytesUtf8 : inputBytes;
+			final byte[] expectedBytes = ((VersionCheck.major() == 18) && !isWindows) ? inputBytesUtf8 : inputBytes;
 
 			if (argEncoding.equals("DEFAULT")) {
 				osEncoding = System.getProperty("os.encoding");
@@ -60,7 +60,7 @@ public static void main(String args[])
 			 * sets os.encoding to UTF8. To replicate this behavior, on Windows use the default encoding
 			 * and not the os.encoding.
 			 */
-			if (osEncoding != null && osEncoding.length() != 0 && isWindows == false) {
+			if ((osEncoding != null) && (osEncoding.length() != 0) && !isWindows) {
 				strTestProp = new String(expectedBytes, osEncoding);
 			} else {
 				if ((argEncoding.equals("UTF-8") || argEncoding.equals("ISO-8859-1"))) {

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -301,13 +301,11 @@ static void afterClinitInitialization() {
 		if (null == com.ibm.oti.vm.VM.getVMLangAccess()) {
 			com.ibm.oti.vm.VM.setVMLangAccess(new VMAccess());
 		}
+		SharedSecrets.setJavaLangAccess(new Access());
 
 		// Fill in the properties from the VM information.
 		ensureProperties(true);
 
-		/*[PR CMVC 150472] sun.misc.SharedSecrets needs access to java.lang. */
-		SharedSecrets.setJavaLangAccess(new Access());
-
 		/*[IF JAVA_SPEC_VERSION >= 11]*/
 		initJCLPlatformEncoding();
 		/*[ENDIF] JAVA_SPEC_VERSION >= 11 */

File: test/functional/Java15andUp/src/org/openj9/test/hiddenclasses/HiddenClassFinalFieldTests.java
Patch:
@@ -106,7 +106,7 @@ public void test_jdkInternalMiscUnsafe_staticFieldBase() throws Throwable {
         unsafe.staticFieldBase(finalHiddenClassField);
     }
 
-    /* VarHandle.set is not supported for records. */
+    /* VarHandle.set is not supported for hidden classes. */
     @Test(expectedExceptions = java.lang.UnsupportedOperationException.class)
     public void test_javaLangInvokeMethodHandles_unreflectVarHandle_static() throws Throwable {
         Class<?> c = makeHiddenClass();
@@ -115,4 +115,4 @@ public void test_javaLangInvokeMethodHandles_unreflectVarHandle_static() throws
         VarHandle finalHiddenClassFieldHandle = MethodHandles.lookup().unreflectVarHandle(finalHiddenClassField);
         finalHiddenClassFieldHandle.set("new");
     }
-}
\ No newline at end of file
+}

File: test/functional/Java15andUp/src/org/openj9/test/regularclassesandinterfaces/RegularClassAndInterfaceFinalFieldTests.java
Patch:
@@ -39,7 +39,7 @@ private class TestClass {
     }
 
     private interface TestInterface {
-        String finalField = "old";
+        static final String finalField = "old";
     }
 
     /* Final static fields in regular classes are not modifiable through reflection. */
@@ -113,4 +113,4 @@ public void test_javaLangInvokeMethodHandles_unreflectVarHandle_interface_static
         VarHandle finalInterfaceFieldHandle = MethodHandles.lookup().unreflectVarHandle(finalInterfaceField);
         finalInterfaceFieldHandle.set("new");
     }
-}
\ No newline at end of file
+}

File: test/functional/Java15andUp/src/org/openj9/test/records/RecordFinalFieldTests.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.records;
 
 /*******************************************************************************
- * Copyright (c) 2020, 2020 IBM Corp. and others
+ * Copyright (c) 2020, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -129,7 +129,7 @@ public void test_jdkInternalMiscUnsafe_objectFieldOffset() throws Throwable {
         unsafe.objectFieldOffset(finalRecordField);
     }
 
-    /* Check that Unsafe.staticFieldBase supports records. */
+    /* Check that Unsafe.staticFieldOffset supports records. */
     @Test
     public void test_jdkInternalMiscUnsafe_staticFieldOffset() throws Throwable {
         Field finalRecordField = TestRecord.class.getDeclaredField("finalField");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCMemoryPool.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2015 IBM Corp. and others
+ * Copyright (c) 1991, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -121,8 +121,8 @@ protected void freeEntryCheckGeneric(GCHeapLinkedFreeHeader freeListEntry) throw
 			throw new CorruptFreeEntryException("freeEntryCorrupt", freeListEntryAddress);
 		}
 		
-		/* Make sure its a multi-slot dead object */
-		if (!(ObjectModel.isDeadObject(freeListEntry.getObject()) && !ObjectModel.isSingleSlotDeadObject(freeListEntry.getObject()))) {
+		/* Make sure its a multi-slot hole object */
+		if (!(ObjectModel.isHoleObject(freeListEntry.getObject()) && !ObjectModel.isSingleSlotHoleObject(freeListEntry.getObject()))) {
 			throw new CorruptFreeEntryException("freeEntryCorrupt", freeListEntryAddress);
 		}
 		

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckReporterTTY.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -213,7 +213,7 @@ public void reportObjectHeader(CheckError error, J9ObjectPointer object, String
 		boolean isHole = false; 
 		boolean isIndexable = false;
 		try {
-			isHole = ObjectModel.isDeadObject(object);
+			isHole = ObjectModel.isHoleObject(object);
 			if(!isHole) {
 				isIndexable = ObjectModel.isIndexable(object);
 			}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCMemoryPool.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2015 IBM Corp. and others
+ * Copyright (c) 1991, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -121,8 +121,8 @@ protected void freeEntryCheckGeneric(GCHeapLinkedFreeHeader freeListEntry) throw
 			throw new CorruptFreeEntryException("freeEntryCorrupt", freeListEntryAddress);
 		}
 		
-		/* Make sure its a multi-slot dead object */
-		if (!(ObjectModel.isDeadObject(freeListEntry.getObject()) && !ObjectModel.isSingleSlotDeadObject(freeListEntry.getObject()))) {
+		/* Make sure its a multi-slot hole object */
+		if (!(ObjectModel.isHoleObject(freeListEntry.getObject()) && !ObjectModel.isSingleSlotHoleObject(freeListEntry.getObject()))) {
 			throw new CorruptFreeEntryException("freeEntryCorrupt", freeListEntryAddress);
 		}
 		

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckReporterTTY.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -213,7 +213,7 @@ public void reportObjectHeader(CheckError error, J9ObjectPointer object, String
 		boolean isHole = false; 
 		boolean isIndexable = false;
 		try {
-			isHole = ObjectModel.isDeadObject(object);
+			isHole = ObjectModel.isHoleObject(object);
 			if(!isHole) {
 				isIndexable = ObjectModel.isIndexable(object);
 			}

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/BootstrapMethods.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -247,7 +247,7 @@ static String dup(Integer i) {
 	}
 
 	static String dup(Object o) {
-		return "DoesNotUnderStand: " + o.getClass() + " message: double";
+		return "DoesNotUnderstand: " + o.getClass() + " message: double";
 	}
 
 	// (int, int, String)   --> (String, int, int)  --> (String)

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/ComplexIndyTest.java
Patch:
@@ -39,8 +39,8 @@ public void test_gwtTest_Integer() {
 	@Test(groups = { "level.extended" })
 	public void test_gwtTest_Object() {
 		String s = com.ibm.j9.jsr292.indyn.ComplexIndy.gwtTest(new Object());
-		if (!s.equals("DoesNotUnderStand: class java.lang.Object message: double")
-			&& !s.equals("DoesNotUnderStand: class java.lang.Identity message: double")
+		if (!s.equals("DoesNotUnderstand: class java.lang.Object message: double")
+		&&  !s.equals("DoesNotUnderstand: class java.lang.Identity message: double")
 		) {
 			Assert.fail("Wrong string returned'" + s +"'");
 		}

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/BootstrapMethods.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -247,7 +247,7 @@ static String dup(Integer i) {
 	}
 
 	static String dup(Object o) {
-		return "DoesNotUnderStand: " + o.getClass() + " message: double";
+		return "DoesNotUnderstand: " + o.getClass() + " message: double";
 	}
 
 	// (int, int, String)   --> (String, int, int)  --> (String)

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/ComplexIndyTest.java
Patch:
@@ -39,8 +39,8 @@ public void test_gwtTest_Integer() {
 	@Test(groups = { "level.extended" })
 	public void test_gwtTest_Object() {
 		String s = com.ibm.j9.jsr292.indyn.ComplexIndy.gwtTest(new Object());
-		if (!s.equals("DoesNotUnderStand: class java.lang.Object message: double")
-			&& !s.equals("DoesNotUnderStand: class java.lang.Identity message: double")
+		if (!s.equals("DoesNotUnderstand: class java.lang.Object message: double")
+		&&  !s.equals("DoesNotUnderstand: class java.lang.Identity message: double")
 		) {
 			Assert.fail("Wrong string returned'" + s +"'");
 		}

File: jcl/src/java.base/share/classes/java/lang/Throwable.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2021 IBM Corp. and others
+ * Copyright (c) 1998, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -382,11 +382,11 @@ public String toString () {
 public synchronized Throwable initCause(Throwable throwable) {
 	if (cause != this) {
 		/*[MSG "K05c9", "Cause already initialized"]*/
-		throw new IllegalStateException(Msg.getString("K05c9")); //$NON-NLS-1$
+		throw new IllegalStateException(Msg.getString("K05c9"), this); //$NON-NLS-1$
 	}
 	if (throwable == this) {
 		/*[MSG "K05c8", "Cause cannot be the receiver"]*/
-		throw new IllegalArgumentException(Msg.getString("K05c8")); //$NON-NLS-1$
+		throw new IllegalArgumentException(Msg.getString("K05c8"), this); //$NON-NLS-1$
 	}
 	return setCause(throwable);
 }

File: test/functional/DDR_Test/src/j9vm/test/ddrext/Constants.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -634,6 +634,7 @@ public class Constants {
 	public static final String DEADLOCK_FIRST_MON = "First Monitor lock";
 	public static final String DEADLOCK_SECOND_MON = "Second Monitor lock";
 	public static final String DEADLOCK_JAVA_OBJ = "java/lang/Object";
+	public static final String DEADLOCK_JAVA_IDENTITY = "java/lang/Identity";
 	public static final String DEADLOCK_CMD = "deadlock";
 
 	/* Constants related to testing of runtime type resolution */

File: test/functional/DDR_Test/src/j9vm/test/ddrext/junit/deadlock/TestDeadlockCase1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,7 @@ public void testDeadlock1()
 		assertTrue(validate(output, Constants.DEADLOCK_THREAD, 3));
 		assertTrue(validate(output, Constants.DEADLOCK_BLOCKING_ON, 2));
 		assertTrue(validate(output, Constants.DEADLOCK_OWNED_BY, 2));
-		assertTrue(validate(output, Constants.DEADLOCK_JAVA_OBJ, 2));
+		assertTrue(validate(output, Constants.DEADLOCK_JAVA_OBJ, 2) || validate(output, Constants.DEADLOCK_JAVA_IDENTITY, 2));
 	}
 
 }

File: test/functional/DDR_Test/src/j9vm/test/ddrext/junit/deadlock/TestDeadlockCase2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,7 @@ public void testDeadlock2()
 		assertTrue(validate(output, Constants.DEADLOCK_THREAD, 3));
 		assertTrue(validate(output, Constants.DEADLOCK_BLOCKING_ON, 2));
 		assertTrue(validate(output, Constants.DEADLOCK_OWNED_BY, 2));
-		assertTrue(validate(output, Constants.DEADLOCK_JAVA_OBJ, 1));
+		assertTrue(validate(output, Constants.DEADLOCK_JAVA_OBJ, 1) || validate(output, Constants.DEADLOCK_JAVA_IDENTITY, 1));
 		assertTrue(validate(output, Constants.DEADLOCK_FIRST_MON, 1));
 	}
 

File: test/functional/DDR_Test/src/j9vm/test/ddrext/junit/deadlock/TestDeadlockCase6.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -50,7 +50,7 @@ public void testDeadlock6()
 		assertTrue(validate(output, Constants.DEADLOCK_OWNED_BY, 3));
 		assertTrue(validate(output, Constants.DEADLOCK_FIRST_MON, 1));
 		assertTrue(validate(output, Constants.DEADLOCK_SECOND_MON, 1));
-		assertTrue(validate(output, Constants.DEADLOCK_JAVA_OBJ, 1));
+		assertTrue(validate(output, Constants.DEADLOCK_JAVA_OBJ, 1) || validate(output, Constants.DEADLOCK_JAVA_IDENTITY, 1));
 	}
 
 }

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -187,7 +187,8 @@ private Unsafe() {}
 	private static final long BYTE_OFFSET_MASK = 0b11L;
 
 	/*[IF INLINE-TYPES]*/
-	private static final Object inlineTypesLock = new Object() {};
+	private static final class InlineTypesLock { InlineTypesLock() {} }
+	private static final InlineTypesLock inlineTypesLock = new InlineTypesLock();
 	/*[ENDIF] INLINE-TYPES */
 
 	static {

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -187,7 +187,8 @@ private Unsafe() {}
 	private static final long BYTE_OFFSET_MASK = 0b11L;
 
 	/*[IF INLINE-TYPES]*/
-	private static final Object inlineTypesLock = new Object() {};
+	private static final class InlineTypesLock { InlineTypesLock() {} }
+	private static final InlineTypesLock inlineTypesLock = new InlineTypesLock();
 	/*[ENDIF] INLINE-TYPES */
 
 	static {

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -570,7 +570,7 @@ private static RestoreException throwSetEnvException(Throwable cause) {
 	 * @throws RestoreException              if an error occurred during or after
 	 *                                       restore
 	 */
-	public void checkpointJVM() {
+	public synchronized void checkpointJVM() {
 		/* Add env variables restore hook */
 		registerRestoreEnvVariables();
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2021 IBM Corp. and others
+ * Copyright (c) 1991, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2021 IBM Corp. and others
+ * Copyright (c) 2015, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ValueTypeHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2019, 2021 IBM Corp. and others
+ * Copyright (c) 2019, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/Jsr292/bootstrap_src_90/com/ibm/j9/jsr292/bootstrap/CallerSensitiveClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2014, 2018 IBM Corp. and others
+ * Copyright (c) 2014, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,7 @@
  *******************************************************************************/
 package com.ibm.j9.jsr292.bootstrap;
 
-public class CallerSensitiveClass extends SecurityManager {
+public class CallerSensitiveClass {
 	@jdk.internal.reflect.CallerSensitive
 	public void callerSensitiveMethod() {
 		Class<?> c = jdk.internal.reflect.Reflection.getCallerClass();

File: test/functional/cmdLineTests/SystemPropertiesTest/src/SysPropTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,6 +22,7 @@
 
 import java.util.*;
 import java.io.*;
+import java.nio.charset.Charset;
 
 public class SysPropTest 
 {
@@ -57,7 +58,7 @@ public static void main(String args[])
 				if ((argEncoding.equals("UTF-8") || argEncoding.equals("ISO-8859-1"))) {
 					strTestProp = new String(B,argEncoding);
 				} else {
-					strTestProp = new String(B);
+					strTestProp = new String(B, System.getProperty("native.encoding", Charset.defaultCharset().name()));
 				}
 			}
 			

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/VrfyTbl.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corp. and others
+ * Copyright (c) 2009, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -495,8 +495,8 @@ public class VrfyTbl
 		0x0E81 /* JBgotow - 200 */,
 		0x1700 /* JBunimplemented - 201 */,
 		0x1700 /* JBbreakpoint - 202 */,
-		0x1200 /* JBdefaultvalue = 203 */ ,
-		0x1000 /* JBwithfield = 204 */ ,
+		0x1200 /* JBaconst_init = 203 */,
+		0x1000 /* JBwithfield = 204 */,
 		0x1700 /* JBunimplemented - 205 */,
 		0x1700 /* JBunimplemented - 206 */,
 		0x1700 /* JBunimplemented - 207 */,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -497,7 +497,7 @@ private void allSlotsInBytecodesDo(J9ROMMethodPointer method) throws CorruptData
 				|| (bc == JBinvokedynamic)
 				|| (bc == JBinvokeinterface)
 				|| (bc == JBnew)
-				|| (bc == JBdefaultvalue)
+				|| (bc == JBaconst_init)
 				|| (bc == JBnewdup)
 				|| (bc == JBanewarray)
 				|| (bc == JBcheckcast)

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ByteCodeDumper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -84,7 +84,7 @@
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBlstore;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBlstorew;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBmultianewarray;
-import static com.ibm.j9ddr.vm29.j9.BCNames.JBdefaultvalue;
+import static com.ibm.j9ddr.vm29.j9.BCNames.JBaconst_init;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBnew;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBnewdup;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBnewarray;
@@ -481,7 +481,7 @@ private static IDATA j9bcutil_dumpBytecodes(PrintStream out, J9ROMClassPointer r
 				pc = pc.add(2);
 			} else if ((bcIntVal == JBnew)
 				|| (bcIntVal == JBnewdup)
-				|| (bcIntVal == JBdefaultvalue)
+				|| (bcIntVal == JBaconst_init)
 				|| (bcIntVal == JBanewarray)
 				|| (bcIntVal == JBcheckcast)
 				|| (bcIntVal == JBinstanceof)

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/VrfyTbl.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corp. and others
+ * Copyright (c) 2009, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -495,8 +495,8 @@ public class VrfyTbl
 		0x0E81 /* JBgotow - 200 */,
 		0x1700 /* JBunimplemented - 201 */,
 		0x1700 /* JBbreakpoint - 202 */,
-		0x1200 /* JBdefaultvalue = 203 */ ,
-		0x1000 /* JBwithfield = 204 */ ,
+		0x1200 /* JBaconst_init = 203 */,
+		0x1000 /* JBwithfield = 204 */,
 		0x1700 /* JBunimplemented - 205 */,
 		0x1700 /* JBunimplemented - 206 */,
 		0x1700 /* JBunimplemented - 207 */,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -497,7 +497,7 @@ private void allSlotsInBytecodesDo(J9ROMMethodPointer method) throws CorruptData
 				|| (bc == JBinvokedynamic)
 				|| (bc == JBinvokeinterface)
 				|| (bc == JBnew)
-				|| (bc == JBdefaultvalue)
+				|| (bc == JBaconst_init)
 				|| (bc == JBnewdup)
 				|| (bc == JBanewarray)
 				|| (bc == JBcheckcast)

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ByteCodeDumper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2021 IBM Corp. and others
+ * Copyright (c) 2001, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -84,7 +84,7 @@
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBlstore;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBlstorew;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBmultianewarray;
-import static com.ibm.j9ddr.vm29.j9.BCNames.JBdefaultvalue;
+import static com.ibm.j9ddr.vm29.j9.BCNames.JBaconst_init;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBnew;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBnewdup;
 import static com.ibm.j9ddr.vm29.j9.BCNames.JBnewarray;
@@ -481,7 +481,7 @@ private static IDATA j9bcutil_dumpBytecodes(PrintStream out, J9ROMClassPointer r
 				pc = pc.add(2);
 			} else if ((bcIntVal == JBnew)
 				|| (bcIntVal == JBnewdup)
-				|| (bcIntVal == JBdefaultvalue)
+				|| (bcIntVal == JBaconst_init)
 				|| (bcIntVal == JBanewarray)
 				|| (bcIntVal == JBcheckcast)
 				|| (bcIntVal == JBinstanceof)

File: jcl/src/java.management/share/classes/java/lang/management/MemoryMXBean.java
Patch:
@@ -1,5 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
-/*******************************************************************************
+/*
+ *******************************************************************************
  * Copyright (c) 2005, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/RuntimeMXBean.java
Patch:
@@ -1,6 +1,7 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
-/*******************************************************************************
- * Copyright (c) 2005, 2021 IBM Corp. and others
+/*
+ *******************************************************************************
+ * Copyright (c) 2005, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.management/share/classes/java/lang/management/MemoryMXBean.java
Patch:
@@ -1,5 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
-/*******************************************************************************
+/*
+ *******************************************************************************
  * Copyright (c) 2005, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under

File: jcl/src/java.management/share/classes/java/lang/management/RuntimeMXBean.java
Patch:
@@ -1,6 +1,7 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
-/*******************************************************************************
- * Copyright (c) 2005, 2021 IBM Corp. and others
+/*
+ *******************************************************************************
+ * Copyright (c) 2005, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF JAVA_SPEC_VERSION > 8]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2021 IBM Corp. and others
+ * Copyright (c) 2016, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -384,7 +384,7 @@ public boolean isNativeMethod() {
 		public StackTraceElement toStackTraceElement() {
 			String moduleName = null;
 			String moduleVersion = null;
-			if (null != frameModule) {
+			if (null != frameModule && frameModule.isNamed()) {
 				ModuleDescriptor desc = frameModule.getDescriptor();
 				moduleName = desc.name();
 				Optional<Version> versionInfo = desc.version();

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiCallTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies multiple downcalls with the same or different layouts or argument/return types.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies the downcalls with the same layout & argument and return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies the downcalls with the diffrent layouts and arguments/return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies the downcalls with the diffrent return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies multiple downcalls combined with the diffrent layouts/arguments/return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiCallTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies multiple downcalls with the same or different layouts or argument/return types.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies the downcalls with the same layout & argument and return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies the downcalls with the diffrent layouts and arguments/return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies the downcalls with the diffrent return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2021, 2021 IBM Corp. and others
+ * Copyright (c) 2021, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 import jdk.incubator.foreign.SymbolLookup;
 
 /**
- * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,
+ * Test cases for JEP 389: Foreign Linker API (Incubator) for primitive types in downcall,
  * which verifies multiple downcalls combined with the diffrent layouts/arguments/return types in multithreading.
  */
 @Test(groups = { "level.sanity" })

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -422,7 +422,7 @@ public CRIUSupport registerRestoreEnvFile(Path envFile) {
 	}
 
 	/**
-	 * User hook that is run before checkpointing the JVM.
+	 * User hook that is run after restoring a checkpoint image.
 	 *
 	 * Hooks will be run in single threaded mode, no other application threads
 	 * will be active. Users should avoid synchronization of objects that are not owned
@@ -448,7 +448,7 @@ public CRIUSupport registerPostRestoreHook(Runnable hook) {
 	}
 
 	/**
-	 * User hook that is run after restoring a checkpoint image.
+	 * User hook that is run before checkpointing the JVM.
 	 *
 	 * Hooks will be run in single threaded mode, no other application threads
 	 * will be active. Users should avoid synchronization of objects that are not owned

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -422,7 +422,7 @@ public CRIUSupport registerRestoreEnvFile(Path envFile) {
 	}
 
 	/**
-	 * User hook that is run before checkpointing the JVM.
+	 * User hook that is run after restoring a checkpoint image.
 	 *
 	 * Hooks will be run in single threaded mode, no other application threads
 	 * will be active. Users should avoid synchronization of objects that are not owned
@@ -448,7 +448,7 @@ public CRIUSupport registerPostRestoreHook(Runnable hook) {
 	}
 
 	/**
-	 * User hook that is run after restoring a checkpoint image.
+	 * User hook that is run before checkpointing the JVM.
 	 *
 	 * Hooks will be run in single threaded mode, no other application threads
 	 * will be active. Users should avoid synchronization of objects that are not owned

File: jcl/src/java.base/share/classes/java/lang/Thread.java
Patch:
@@ -1206,7 +1206,9 @@ public synchronized void start() {
  *
  * @deprecated
  */
-/*[IF Sidecar19-SE]*/
+/*[IF JAVA_SPEC_VERSION >= 18]*/
+@Deprecated(forRemoval=true, since="1.2")
+/*[ELSEIF JAVA_SPEC_VERSION >= 9]*/
 @Deprecated(forRemoval=false, since="1.2")
 /*[ELSE]*/
 @Deprecated

File: jcl/src/java.base/share/classes/com/ibm/gpu/spi/GPUAssistHolder.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar19-SE]*/
 /*******************************************************************************
- * Copyright (c) 2018, 2019 IBM Corp. and others
+ * Copyright (c) 2018, 2022 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,8 +28,9 @@
 public final class GPUAssistHolder {
 
 	/**
-	 * The value of this field is updated as necessary by System.completeInitialization().
+	 * The instance to be used to sort primitive arrays.
 	 */
+	/* Note: The value of this field is updated as necessary by System.initGPUAssist(). */
 	public static GPUAssist instance = GPUAssist.NONE;
 
 }

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests1.java
Patch:
@@ -26,12 +26,13 @@
 import org.testng.AssertJUnit;
 import java.lang.invoke.MethodHandle;
 import java.lang.invoke.MethodType;
+
+import jdk.incubator.foreign.Addressable;
 import jdk.incubator.foreign.CLinker;
 import static jdk.incubator.foreign.CLinker.*;
 import jdk.incubator.foreign.FunctionDescriptor;
-import jdk.incubator.foreign.Addressable;
-import jdk.incubator.foreign.SymbolLookup;
 import jdk.incubator.foreign.ResourceScope;
+import jdk.incubator.foreign.SymbolLookup;
 
 /**
  * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests2.java
Patch:
@@ -26,12 +26,13 @@
 import org.testng.AssertJUnit;
 import java.lang.invoke.MethodHandle;
 import java.lang.invoke.MethodType;
+
+import jdk.incubator.foreign.Addressable;
 import jdk.incubator.foreign.CLinker;
 import static jdk.incubator.foreign.CLinker.*;
 import jdk.incubator.foreign.FunctionDescriptor;
-import jdk.incubator.foreign.Addressable;
-import jdk.incubator.foreign.SymbolLookup;
 import jdk.incubator.foreign.ResourceScope;
+import jdk.incubator.foreign.SymbolLookup;
 
 /**
  * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,

File: test/functional/Java17andUp/src_170/org/openj9/test/jep389/downcall/MultiThreadingTests3.java
Patch:
@@ -26,12 +26,13 @@
 import org.testng.AssertJUnit;
 import java.lang.invoke.MethodHandle;
 import java.lang.invoke.MethodType;
+
+import jdk.incubator.foreign.Addressable;
 import jdk.incubator.foreign.CLinker;
 import static jdk.incubator.foreign.CLinker.*;
 import jdk.incubator.foreign.FunctionDescriptor;
-import jdk.incubator.foreign.Addressable;
-import jdk.incubator.foreign.SymbolLookup;
 import jdk.incubator.foreign.ResourceScope;
+import jdk.incubator.foreign.SymbolLookup;
 
 /**
  * Test cases for JEP 389: Foreign Linker API (Incubator) DownCall for primitive types,

File: test/functional/cmdLineTests/gcCheck/src/org/openj9/test/nogc/Main.java
Patch:
@@ -41,5 +41,7 @@ public static void main(String args[]) throws Exception {
 				e.printStackTrace();
 			}
 		}
+
+		System.out.println("GCCheck Main class executed successfully");
 	}
 }

File: test/functional/cmdLineTests/gcCheck/src/org/openj9/test/nogc/Main.java
Patch:
@@ -41,5 +41,7 @@ public static void main(String args[]) throws Exception {
 				e.printStackTrace();
 			}
 		}
+
+		System.out.println("GCCheck Main class executed successfully");
 	}
 }

File: jcl/src/java.base/share/classes/com/ibm/oti/reflect/TypeAnnotationParser.java
Patch:
@@ -109,7 +109,7 @@ public  static AnnotatedType[] buildAnnotatedInterfaces(Class clazz) {
 		long ramCPAddr = 0;
 		if (VM.FJ9OBJECT_SIZE == 4) {
 			/* Compressed object refs */
-			ramCPAddr = Unsafe.getUnsafe().getInt(attr, offset);
+			ramCPAddr = Integer.toUnsignedLong(Unsafe.getUnsafe().getInt(attr, offset));
 		} else {
 			ramCPAddr = Unsafe.getUnsafe().getLong(attr, offset);
 		}
@@ -129,7 +129,7 @@ public  static AnnotatedType buildAnnotatedSupertype(Class clazz) {
 		long ramCPAddr = 0;
 		if (VM.FJ9OBJECT_SIZE == 4) {
 			/* Compressed object refs */
-			ramCPAddr = Unsafe.getUnsafe().getInt(attr, offset);
+			ramCPAddr = Integer.toUnsignedLong(Unsafe.getUnsafe().getInt(attr, offset));
 		} else {
 			ramCPAddr = Unsafe.getUnsafe().getLong(attr, offset);
 		}

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -3353,7 +3353,7 @@ private AnnotationCache getAnnotationCache() {
 			long ramCPAddr = 0;
 			if (VM.FJ9OBJECT_SIZE == 4) {
 				/* Compressed object refs */
-				ramCPAddr = unsafe.getInt(annotationsData, offset);
+				ramCPAddr = Integer.toUnsignedLong(unsafe.getInt(annotationsData, offset));
 			} else {
 				ramCPAddr = unsafe.getLong(annotationsData, offset);
 			}

File: test/functional/Java12andUp/src/org/openj9/test/java_lang/Test_Class.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2018, 2020 IBM Corp. and others
+ * Copyright (c) 2018, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -56,12 +56,12 @@ public class Test_Class {
 	};
 
 	/* descriptor strings */
-	String objectResult = "Ljava/lang/Object;";
+	String objectResult = "Ljava/lang/Thread;";
 	String arrayResult = "[D";
 	String arrayResult2 = "[[[D";
 
 	/* test classes */
-	Class<?> objectTest = new Object().getClass();
+	Class<?> objectTest = new Thread().getClass();
 	Class<?> arrayTest = new double[0].getClass();
 	Class<?> arrayTest2 = new double[0][][].getClass();
 	Runnable lambdaExp = () -> System.out.println("test");

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -883,8 +883,8 @@ public static void acquireFence() {
 	}
 	
 	/**
-	 * Inserts a release memory fence, ensuring that no stores before this fence
-	 * are reordered with any loads/stores after the fence. 
+	 * Inserts a release memory fence, ensuring that no loads and stores before
+	 * this fence are reordered with any stores after the fence.
 	 */
 	public static void releaseFence() {
 		// TODO: storeStore + loadStore
@@ -984,7 +984,7 @@ public static void storeStoreFence() {
 		
 	/**
 	 * Sets the value of the field referenced by this {@link VarHandle} using acquire semantics.
-	 * Preceding stores will not be reordered with subsequent loads/stores.
+	 * Preceding loads and stores will not be reordered after this access.
 	 * 
 	 * @param args The arguments for this operation are determined by the field type
 	 * 				(see {@link VarHandle#accessModeType(AccessMode) accessModeType()}) 

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -883,8 +883,8 @@ public static void acquireFence() {
 	}
 	
 	/**
-	 * Inserts a release memory fence, ensuring that no stores before this fence
-	 * are reordered with any loads/stores after the fence. 
+	 * Inserts a release memory fence, ensuring that no loads and stores before
+	 * this fence are reordered with any stores after the fence.
 	 */
 	public static void releaseFence() {
 		// TODO: storeStore + loadStore
@@ -984,7 +984,7 @@ public static void storeStoreFence() {
 		
 	/**
 	 * Sets the value of the field referenced by this {@link VarHandle} using acquire semantics.
-	 * Preceding stores will not be reordered with subsequent loads/stores.
+	 * Preceding loads and stores will not be reordered after this access.
 	 * 
 	 * @param args The arguments for this operation are determined by the field type
 	 * 				(see {@link VarHandle#accessModeType(AccessMode) accessModeType()}) 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/RomClassSummaryCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -52,6 +52,7 @@ public class RomClassSummaryCommand extends Command
 			"fields",
 			"interfacesSRPs",
 			"innerClassesSRPs",
+			"enclosedInnerClassesSRPs",
 			"cpNamesAndSignaturesSRPs",
 			"methods",
 			"cpShapeDescription",

File: jcl/src/java.base/share/classes/java/lang/StringBuffer.java
Patch:
@@ -120,7 +120,7 @@ public StringBuffer(int capacity) {
 	 * NegativeArraySizeException is thrown if capacity argument is less than 0.
 	 */
 	if (capacity < 0) {
-		throw new NegativeArraySizeException();
+		throw new NegativeArraySizeException(String.valueOf(capacity));
 	}
 	int arraySize = capacity;
 	

File: jcl/src/java.base/share/classes/java/lang/StringBuilder.java
Patch:
@@ -120,7 +120,7 @@ public StringBuilder(int capacity) {
 	 * NegativeArraySizeException is thrown if capacity argument is less than 0.
 	 */
 	if (capacity < 0) {
-		throw new NegativeArraySizeException();
+		throw new NegativeArraySizeException(String.valueOf(capacity));
 	}
 	int arraySize = capacity;
 	

File: jcl/src/java.base/share/classes/java/lang/reflect/Array.java
Patch:
@@ -2,7 +2,7 @@
 package java.lang.reflect;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2020 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -345,7 +345,7 @@ public static Object newInstance(Class<?> componentType, int... dimensions) thro
 	
 	for (int i = 0; i < length; i++) {
 		if (dimensions[i] < 0) {
-			throw new NegativeArraySizeException();
+			throw new NegativeArraySizeException(String.valueOf(dimensions[i]));
 		} else {
 			reversed[length - i - 1] = dimensions[i];
 		}
@@ -374,7 +374,7 @@ public static Object newInstance(Class<?> componentType, int size) throws Negati
 		throw new NullPointerException();
 	}
 	if (size < 0) { 
-		throw new NegativeArraySizeException();
+		throw new NegativeArraySizeException(String.valueOf(size));
 	}
 	if (componentType == Void.TYPE) {
 		throw new IllegalArgumentException();

File: jcl/src/java.base/share/classes/java/lang/StringBuffer.java
Patch:
@@ -120,7 +120,7 @@ public StringBuffer(int capacity) {
 	 * NegativeArraySizeException is thrown if capacity argument is less than 0.
 	 */
 	if (capacity < 0) {
-		throw new NegativeArraySizeException();
+		throw new NegativeArraySizeException(String.valueOf(capacity));
 	}
 	int arraySize = capacity;
 	

File: jcl/src/java.base/share/classes/java/lang/StringBuilder.java
Patch:
@@ -120,7 +120,7 @@ public StringBuilder(int capacity) {
 	 * NegativeArraySizeException is thrown if capacity argument is less than 0.
 	 */
 	if (capacity < 0) {
-		throw new NegativeArraySizeException();
+		throw new NegativeArraySizeException(String.valueOf(capacity));
 	}
 	int arraySize = capacity;
 	

File: jcl/src/java.base/share/classes/java/lang/reflect/Array.java
Patch:
@@ -2,7 +2,7 @@
 package java.lang.reflect;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2020 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -345,7 +345,7 @@ public static Object newInstance(Class<?> componentType, int... dimensions) thro
 	
 	for (int i = 0; i < length; i++) {
 		if (dimensions[i] < 0) {
-			throw new NegativeArraySizeException();
+			throw new NegativeArraySizeException(String.valueOf(dimensions[i]));
 		} else {
 			reversed[length - i - 1] = dimensions[i];
 		}
@@ -374,7 +374,7 @@ public static Object newInstance(Class<?> componentType, int size) throws Negati
 		throw new NullPointerException();
 	}
 	if (size < 0) { 
-		throw new NegativeArraySizeException();
+		throw new NegativeArraySizeException(String.valueOf(size));
 	}
 	if (componentType == Void.TYPE) {
 		throw new IllegalArgumentException();

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/SwitchTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,7 +39,7 @@ public void testSwitchTest() {
 			Assert.fail("tstSwitch failed!");	
 	}
 
-	static int tstSwitch() {
+	private static int tstSwitch() {
 		//CASE1: Large Range of int case labels
 		int test1 = 5;
 		int check1 = 0;

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/SwitchTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,7 +39,7 @@ public void testSwitchTest2() {
 			Assert.fail("tstSwitch failed!");
 	}
 
-	public int tstSwitch() {
+	private static int tstSwitch() {
 		int success=1;
 
 		//CASE1: Close Range of int case labels

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/SwitchTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,7 +39,7 @@ public void testSwitchTest() {
 			Assert.fail("tstSwitch failed!");	
 	}
 
-	static int tstSwitch() {
+	private static int tstSwitch() {
 		//CASE1: Large Range of int case labels
 		int test1 = 5;
 		int check1 = 0;

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/SwitchTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,7 +39,7 @@ public void testSwitchTest2() {
 			Assert.fail("tstSwitch failed!");
 	}
 
-	public int tstSwitch() {
+	private static int tstSwitch() {
 		int success=1;
 
 		//CASE1: Close Range of int case labels

File: jcl/src/openj9.cuda/share/classes/com/ibm/cuda/CudaError.java
Patch:
@@ -309,8 +309,8 @@ public interface CudaError {
 	 * either because the Driver context was created using an older version
 	 * of the API, because the Runtime API call expects a primary driver
 	 * context and the Driver context is not primary, or because the Driver
-	 * context has been destroyed. Please see \ref CUDART_DRIVER "Interactions
-	 * with the CUDA Driver API" for more information.
+	 * context has been destroyed. Please see CUDART_DRIVER <q>Interactions
+	 * with the CUDA Driver API</q> for more information.
 	 */
 	int IncompatibleDriverContext = 49;
 

File: jcl/src/openj9.cuda/share/classes/com/ibm/cuda/CudaPermission.java
Patch:
@@ -30,7 +30,7 @@
 import com.ibm.cuda.CudaDevice.SharedMemConfig;
 
 /**
- * This class defines CUDA permissions as described in the table below.
+ * This class defines CUDA permissions as described in the following table.
  *
  * <table border=1 style="padding:5px">
  * <caption>CUDA Permissions</caption>

File: jcl/src/openj9.gpu/share/classes/com/ibm/gpu/GPUPermission.java
Patch:
@@ -26,7 +26,7 @@
 import java.security.Permission;
 
 /**
- * This class defines GPU permissions as described in the table below.
+ * This class defines GPU permissions as described in the following table.
  *
  * <table border=1 style="padding:5px">
  * <caption>GPU Permissions</caption>

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassesNamedPermission.java
Patch:
@@ -26,7 +26,7 @@
 import java.security.BasicPermission;
 
 /**
- * This class defines shared cache permissions as described in the table below.
+ * This class defines shared cache permissions as described in the following table.
  *
  * <table border=1 style="padding=5px">
  * <caption>Shared Cache Permissions</caption>

File: jcl/src/openj9.cuda/share/classes/com/ibm/cuda/CudaError.java
Patch:
@@ -309,8 +309,8 @@ public interface CudaError {
 	 * either because the Driver context was created using an older version
 	 * of the API, because the Runtime API call expects a primary driver
 	 * context and the Driver context is not primary, or because the Driver
-	 * context has been destroyed. Please see \ref CUDART_DRIVER "Interactions
-	 * with the CUDA Driver API" for more information.
+	 * context has been destroyed. Please see CUDART_DRIVER <q>Interactions
+	 * with the CUDA Driver API</q> for more information.
 	 */
 	int IncompatibleDriverContext = 49;
 

File: jcl/src/openj9.cuda/share/classes/com/ibm/cuda/CudaPermission.java
Patch:
@@ -30,7 +30,7 @@
 import com.ibm.cuda.CudaDevice.SharedMemConfig;
 
 /**
- * This class defines CUDA permissions as described in the table below.
+ * This class defines CUDA permissions as described in the following table.
  *
  * <table border=1 style="padding:5px">
  * <caption>CUDA Permissions</caption>

File: jcl/src/openj9.gpu/share/classes/com/ibm/gpu/GPUPermission.java
Patch:
@@ -26,7 +26,7 @@
 import java.security.Permission;
 
 /**
- * This class defines GPU permissions as described in the table below.
+ * This class defines GPU permissions as described in the following table.
  *
  * <table border=1 style="padding:5px">
  * <caption>GPU Permissions</caption>

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassesNamedPermission.java
Patch:
@@ -26,7 +26,7 @@
 import java.security.BasicPermission;
 
 /**
- * This class defines shared cache permissions as described in the table below.
+ * This class defines shared cache permissions as described in the following table.
  *
  * <table border=1 style="padding=5px">
  * <caption>Shared Cache Permissions</caption>

File: test/functional/Java15andUp/src/org/openj9/test/utilities/SealedClassGenerator.java
Patch:
@@ -43,6 +43,9 @@ public class SealedClassGenerator implements Opcodes {
 			case 17:
 				latestPreviewVersion = 61; // does ASM support jdk17 yet?
 				break;
+			case 18:
+				latestPreviewVersion = 62; // does ASM support jdk18 yet?
+				break;
 			default:
 				latestPreviewVersion = V16; // next release
 		}

File: test/functional/Java16andUp/modules/org.openj9test.modularity.moduleX/org/openj9/test/modularity/pkgD/Test_SubClass.java
Patch:
@@ -54,6 +54,9 @@ public class Test_SubClass {
 			case 17:
 				latestPreviewVersion = 61; // does ASM support jdk17 yet?
 				break;
+			case 18:
+				latestPreviewVersion = 62; // does ASM support jdk18 yet?
+				break;
 			default:
 				latestPreviewVersion = V16; // next release
 		}

File: test/functional/Java16andUp/modules/org.openj9test.modularity.moduleY/org/openj9/test/modularity/pkgB/Test_SubClass.java
Patch:
@@ -56,6 +56,9 @@ public class Test_SubClass {
 			case 17:
 				latestPreviewVersion = 61; // does ASM support jdk17 yet?
 				break;
+			case 18:
+				latestPreviewVersion = 62; // does ASM support jdk18 yet?
+				break;
 			default:
 				latestPreviewVersion = V16; // next release
 		}

File: test/functional/Java16andUp/src/org/openj9/test/utilities/SealedClassGenerator.java
Patch:
@@ -40,6 +40,9 @@ public class SealedClassGenerator implements Opcodes {
 			case 17:
 				latestPreviewVersion = 61; // does ASM support jdk17 yet?
 				break;
+			case 18:
+				latestPreviewVersion = 62; // does ASM support jdk18 yet?
+				break;
 			default:
 				latestPreviewVersion = V16; // next release
 		}

File: test/functional/JIT_Test/src/jit/test/loopReduction/idiomTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2018 IBM Corp. and others
+ * Copyright (c) 2000, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,8 @@ public class idiomTests
    public void testTRTOArray(Context c) { new TRTOArray().runTest(c); }
    public void testLongMemCpy(Context c) { new longMemCpy().runTest(c); }
    public void testByteMemCpy(Context c) { new byteMemCpy().runTest(c); }
-   public void testByte2CharMemCpy(Context c) { new byte2CharMemCpy().runTest(c); }
+   public void testBigEndianByte2CharMemCpy(Context c) { new bigEndianByte2CharMemCpy().runTest(c); }
+   public void testLittleEndianByte2CharMemCpy(Context c) { new littleEndianByte2CharMemCpy().runTest(c); }
    public void testChar2ByteMemCpy(Context c) { new char2ByteMemCpy().runTest(c); }
    public void testMEMCPYChar2Byte2(Context c) { new MEMCPYChar2Byte2().runTest(c); }
    public void testByteMemSet(Context c) { new byteMemSet().runTest(c); }

File: test/functional/JIT_Test/src/jit/test/loopReduction/idiomTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2018 IBM Corp. and others
+ * Copyright (c) 2000, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,8 @@ public class idiomTests
    public void testTRTOArray(Context c) { new TRTOArray().runTest(c); }
    public void testLongMemCpy(Context c) { new longMemCpy().runTest(c); }
    public void testByteMemCpy(Context c) { new byteMemCpy().runTest(c); }
-   public void testByte2CharMemCpy(Context c) { new byte2CharMemCpy().runTest(c); }
+   public void testBigEndianByte2CharMemCpy(Context c) { new bigEndianByte2CharMemCpy().runTest(c); }
+   public void testLittleEndianByte2CharMemCpy(Context c) { new littleEndianByte2CharMemCpy().runTest(c); }
    public void testChar2ByteMemCpy(Context c) { new char2ByteMemCpy().runTest(c); }
    public void testMEMCPYChar2Byte2(Context c) { new MEMCPYChar2Byte2().runTest(c); }
    public void testByteMemSet(Context c) { new byteMemSet().runTest(c); }

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestPersistentCacheMoving01.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2020 IBM Corp. and others
+ * Copyright (c) 2010, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -40,7 +40,7 @@ public static void main(String[] args) {
 	  }
 	  String currentCacheDir = getCacheDir();
 
-	  if ( null == currentCacheDir && false == isIbmJava8() ) {
+	  if ( null == currentCacheDir && false == isDefaultDirTmp() ) {
 		  // Persistent cachefile without groupaccess are generated under HOME directory
 		  // Current directory is under /tmp. Move a file from HOME directory to /tmp may not succeed on some platforms. 
 		return;

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestPersistentCacheMoving01.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2020 IBM Corp. and others
+ * Copyright (c) 2010, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -40,7 +40,7 @@ public static void main(String[] args) {
 	  }
 	  String currentCacheDir = getCacheDir();
 
-	  if ( null == currentCacheDir && false == isIbmJava8() ) {
+	  if ( null == currentCacheDir && false == isDefaultDirTmp() ) {
 		  // Persistent cachefile without groupaccess are generated under HOME directory
 		  // Current directory is under /tmp. Move a file from HOME directory to /tmp may not succeed on some platforms. 
 		return;

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/AbstractClassLoader.java
Patch:
@@ -175,7 +175,7 @@ static String getPackageName(Class<?> theClass)
 	int index;
 
 	/*[PR 126182] Do not intern bootstrap class names when loading */
-	name = VM.getClassNameImpl(theClass);
+	name = VM.getClassNameImpl(theClass, false);
 	if((index = name.lastIndexOf('.')) == -1) return null;
 	return name.substring(0, index);
 }

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/VM.java
Patch:
@@ -543,7 +543,7 @@ public static int removeStringDuplicates() {
 }
 
 /*[PR 126182] Do not intern bootstrap class names when loading */
-public static native String getClassNameImpl(Class aClass);
+public static native String getClassNameImpl(Class aClass, boolean internAndAssign);
 
 /*[PR CMVC 189091] Perf: EnumSet.allOf() is slow */
 /*[PR CMVC 191554] Provide access to ClassLoader methods to improve performance */

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -2046,9 +2046,7 @@ public String getName() {
 		return name;
 	}
 	//must have been null to set it
-	name = VM.getClassNameImpl(this).intern();
-	classNameString = name;
-	return name;
+	return VM.getClassNameImpl(this, true);
 }
 
 /**

File: jcl/src/java.base/share/classes/java/lang/Thread.java
Patch:
@@ -572,6 +572,9 @@ public static int activeCount(){
  * @see			java.lang.SecurityException
  * @see			java.lang.SecurityManager
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@Deprecated(since="17", forRemoval=true)
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public final void checkAccess() {
 	@SuppressWarnings("removal")
 	SecurityManager currentManager = System.getSecurityManager();

File: jcl/src/java.base/share/classes/java/lang/ThreadGroup.java
Patch:
@@ -253,6 +253,9 @@ public boolean allowThreadSuspension(boolean b) {
  * If there is a SecurityManager installed, call <code>checkAccess</code>
  * in it passing the receiver as parameter, otherwise do nothing.
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@Deprecated(since="17", forRemoval=true)
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public final void checkAccess() {
 	// Forwards the message to the SecurityManager (if there's one)
 	// passing the receiver as parameter

File: jcl/src/java.base/share/classes/java/security/AccessControlContext.java
Patch:
@@ -41,6 +41,9 @@
  * @author  OTI
  * @version initial
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@Deprecated(since="17", forRemoval=true)
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public final class AccessControlContext {
 
 	static final int STATE_NOT_AUTHORIZED = 0; // It has been confirmed that the ACC is NOT authorized

File: jcl/src/java.base/share/classes/java/security/AccessController.java
Patch:
@@ -39,6 +39,9 @@
  * @author      OTI
  * @version     initial
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@Deprecated(since="17", forRemoval=true)
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public final class AccessController {
 	static {
 		// Initialize vm-internal caches

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ThreadMXBeanImpl.java
Patch:
@@ -41,6 +41,9 @@
  *
  * @since 1.5
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@SuppressWarnings("removal")
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public class ThreadMXBeanImpl implements ThreadMXBean {
 
 	private static final ThreadMXBeanImpl instance = new ThreadMXBeanImpl();

File: jcl/src/jdk.attach/share/classes/com/ibm/tools/attach/attacher/OpenJ9AttachProvider.java
Patch:
@@ -45,6 +45,9 @@
  * Concrete subclass of the class that lists the available target VMs
  * 
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@SuppressWarnings("removal")
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public class OpenJ9AttachProvider extends AttachProvider {
 
 	/**

File: jcl/src/jdk.attach/share/classes/com/ibm/tools/attach/attacher/OpenJ9VirtualMachine.java
Patch:
@@ -65,6 +65,9 @@
  * Handles the initiator end of an attachment to a target VM
  * 
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@SuppressWarnings("removal")
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public final class OpenJ9VirtualMachine extends VirtualMachine implements Response {
 
 	/* 

File: jcl/src/openj9.gpu/share/classes/com/ibm/gpu/CUDAManager.java
Patch:
@@ -48,6 +48,9 @@
 /**
  * This class contains information important to IBM GPU enabled functions.
  */
+/*[IF JAVA_SPEC_VERSION >= 17]*/
+@SuppressWarnings("removal")
+/*[ENDIF] JAVA_SPEC_VERSION >= 17 */
 public final class CUDAManager {
 
 	private static final class Configuration {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -222,7 +222,7 @@ private void fieldOffsetsFindNext() throws CorruptDataException {
 									if (valueTypeHelper.classRequires4BytePrePadding(fieldClass)) {
 										instanceSize = instanceSize.sub(U32.SIZEOF);
 									}
-									forceDoubleAlignment = modifiers.allBitsIn(J9JavaAccessFlags.J9AccVolatile)
+									forceDoubleAlignment = (modifiers.allBitsIn(J9JavaAccessFlags.J9AccVolatile) || valueTypeHelper.isRomClassAtomic(fieldClass.romClass()))
 											&& instanceSize.eq(doubleSize);
 								} else {
 									forceDoubleAlignment = true;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -407,7 +407,7 @@ boolean isInstanceFieldBackfillEligible() {
 								if (valueTypeHelper.classRequires4BytePrePadding(fieldClass)) {
 									instanceSize = instanceSize.sub(U32.SIZEOF);
 								}
-								forceDoubleAlignment = modifiers.allBitsIn(J9JavaAccessFlags.J9AccVolatile)
+								forceDoubleAlignment = (modifiers.allBitsIn(J9JavaAccessFlags.J9AccVolatile) || valueTypeHelper.isRomClassAtomic(fieldClass.romClass()))
 										&& instanceSize.eq(doubleSize);
 							} else {
 								forceDoubleAlignment = true;

File: jcl/src/java.base/share/classes/java/lang/ref/Reference.java
Patch:
@@ -151,9 +151,6 @@ public boolean enqueue() {
  *			or null if object has been cleared.
  */	
 public T get() {
-	if (VM.J9_GC_POLICY != VM.J9_GC_POLICY_METRONOME) {
-		return referent;
-	}
 	return getImpl();
 }
 

File: jcl/src/openj9.criu/share/classes/org/eclipse/openj9/criu/CRIUSupport.java
Patch:
@@ -98,6 +98,8 @@ public Throwable getThrowable() {
 	private static final boolean criuSupportEnabled = isCRIUSupportEnabledImpl();
 
 	private static native boolean isCRIUSupportEnabledImpl();
+	
+	private static native boolean isCheckpointAllowed();
 
 	private static native CRIUResult checkpointJVMImpl(String checkPointDir, boolean keepRunning, boolean shellJob, boolean extUnixSupport, int logLevel, String logFile);
 

File: test/functional/Java8andUp/src/org/openj9/test/vmcheck/TestLoadingClassesFromJarfile.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -143,6 +143,7 @@ private void loadClassesFromJarfile(String jarfilePath) {
 			"javax.imageio.ImageIO",
 			"javax.swing",
 			"org.openj9.test.classRelationshipVerifier.TestClassRelationshipVerifier",
+			"org.openj9.test.annotation.ContainsRuntimeAnnotationTest",
 			"sun.applet",
 			"sun.awt",
 			"sun.font",

File: test/functional/Java8andUp/src/org/openj9/test/vmcheck/TestLoadingClassesFromJarfile.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -143,6 +143,7 @@ private void loadClassesFromJarfile(String jarfilePath) {
 			"javax.imageio.ImageIO",
 			"javax.swing",
 			"org.openj9.test.classRelationshipVerifier.TestClassRelationshipVerifier",
+			"org.openj9.test.annotation.ContainsRuntimeAnnotationTest",
 			"sun.applet",
 			"sun.awt",
 			"sun.font",

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/MVSFileReader.java
Patch:
@@ -1,5 +1,6 @@
+/*[INCLUDE-IF PLATFORM-mz31 | PLATFORM-mz64]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2015 IBM Corp. and others
+ * Copyright (c) 2009, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +20,6 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-
 package com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader;
 
 import java.io.FileNotFoundException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -480,6 +480,8 @@ private void allSlotsInBytecodesDo(J9ROMMethodPointer method) throws CorruptData
 				|| (bc == JBinvokestatic)
 				|| (bc == JBinvokehandle)
 				|| (bc == JBinvokehandlegeneric)
+				|| (bc == JBinvokedynamic)
+				|| (bc == JBinvokeinterface)
 				|| (bc == JBnew)
 				|| (bc == JBdefaultvalue)
 				|| (bc == JBnewdup)

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -480,6 +480,8 @@ private void allSlotsInBytecodesDo(J9ROMMethodPointer method) throws CorruptData
 				|| (bc == JBinvokestatic)
 				|| (bc == JBinvokehandle)
 				|| (bc == JBinvokehandlegeneric)
+				|| (bc == JBinvokedynamic)
+				|| (bc == JBinvokeinterface)
 				|| (bc == JBnew)
 				|| (bc == JBdefaultvalue)
 				|| (bc == JBnewdup)

File: test/functional/Java8andUp/src/org/openj9/test/annotationClassLoader/Test_ClassLoader.java
Patch:
@@ -30,6 +30,7 @@
 import java.sql.SQLException;
 
 import javax.sql.rowset.CachedRowSet;
+import javax.sql.rowset.RowSetProvider;
 import javax.sql.rowset.spi.SyncProvider;
 
 @Test(groups = { "level.sanity" })
@@ -79,7 +80,7 @@ protected Class loadClass(String className, boolean resolve) throws ClassNotFoun
 	@Test
 	public void test_latestUserDefinedLoader() throws Exception {
 		String customSyncProviderClassName = CustomSyncProvider.class.getName();
-		CachedRowSet crs = (CachedRowSet)Class.forName("com.sun.rowset.CachedRowSetImpl").newInstance();
+		CachedRowSet crs = RowSetProvider.newFactory().createCachedRowSet();
 		crs.setSyncProvider(customSyncProviderClassName);
 		SyncProvider syncProvider = crs.getSyncProvider();
 	

File: test/functional/Java8andUp/src/org/openj9/test/annotationClassLoader/Test_ClassLoader.java
Patch:
@@ -30,6 +30,7 @@
 import java.sql.SQLException;
 
 import javax.sql.rowset.CachedRowSet;
+import javax.sql.rowset.RowSetProvider;
 import javax.sql.rowset.spi.SyncProvider;
 
 @Test(groups = { "level.sanity" })
@@ -79,7 +80,7 @@ protected Class loadClass(String className, boolean resolve) throws ClassNotFoun
 	@Test
 	public void test_latestUserDefinedLoader() throws Exception {
 		String customSyncProviderClassName = CustomSyncProvider.class.getName();
-		CachedRowSet crs = (CachedRowSet)Class.forName("com.sun.rowset.CachedRowSetImpl").newInstance();
+		CachedRowSet crs = RowSetProvider.newFactory().createCachedRowSet();
 		crs.setSyncProvider(customSyncProviderClassName);
 		SyncProvider syncProvider = crs.getSyncProvider();
 	

File: jcl/src/java.base/share/classes/java/lang/J9VMInternals.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar16]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
  * Copyright (c) 1998, 2021 IBM Corp. and others
  *
@@ -323,6 +323,7 @@ private static void threadCleanup(Thread thread) {
 
 	/*[PR CVMC 124584] checkPackageAccess(), not defineClassImpl(), should use ProtectionDomain */
 	private static void checkPackageAccess(final Class clazz, ProtectionDomain pd) {
+		@SuppressWarnings("removal")
 		final SecurityManager sm = System.getSecurityManager();
 		if (sm != null) {
 			ProtectionDomain[] pdArray = (pd == null) ? new ProtectionDomain[]{} : new ProtectionDomain[]{pd};

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION > 8]*/
 /*******************************************************************************
  * Copyright (c) 2016, 2021 IBM Corp. and others
  *
@@ -70,6 +70,7 @@ private StackWalker(Set<Option> options, int estimatedDepth) {
 			throw new IllegalArgumentException(com.ibm.oti.util.Msg.getString("K0641")); //$NON-NLS-1$
 		}
 		if (options.contains(Option.RETAIN_CLASS_REFERENCE)) {
+			@SuppressWarnings("removal")
 			SecurityManager securityMgr = System.getSecurityManager();
 			if (null != securityMgr) {
 				securityMgr.checkPermission(PermissionSingleton.perm);

File: jcl/src/java.base/share/classes/java/lang/ThreadGroup.java
Patch:
@@ -256,7 +256,7 @@ public boolean allowThreadSuspension(boolean b) {
 public final void checkAccess() {
 	// Forwards the message to the SecurityManager (if there's one)
 	// passing the receiver as parameter
-
+	@SuppressWarnings("removal")
 	SecurityManager currentManager = System.getSecurityManager();
 	if (currentManager != null) currentManager.checkAccess(this);
 }

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -336,6 +336,7 @@ public static MethodType fromMethodDescriptorString(String methodDescriptor, Cla
 		ClassLoader classLoader = loader; 
 		if (classLoader == null) {
 			/*[IF JAVA_SPEC_VERSION >= 14]*/
+			@SuppressWarnings("removal")
 			SecurityManager security = System.getSecurityManager();
 			if (security != null) {
 				security.checkPermission(sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION);

File: jcl/src/java.base/share/classes/java/security/AccessControlContext.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2019 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -376,6 +376,7 @@ public AccessControlContext(AccessControlContext acc, DomainCombiner combiner) {
  */
 AccessControlContext(AccessControlContext acc, DomainCombiner combiner, boolean preauthorized) {
 	if (!preauthorized) {
+		@SuppressWarnings("removal")
 		SecurityManager security = System.getSecurityManager();
 		if (null != security) {
 			security.checkPermission(SecurityConstants.CREATE_ACC_PERMISSION);
@@ -894,6 +895,7 @@ public int hashCode() {
  *      when the caller doesn't have the  "getDomainCombiner" SecurityPermission
  */
 public DomainCombiner getDomainCombiner() {
+	@SuppressWarnings("removal")
 	SecurityManager security = System.getSecurityManager();
 	if (security != null)
 		security.checkPermission(SecurityConstants.GET_COMBINER_PERMISSION);

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ClassLoadingMXBeanImpl.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2019 IBM Corp. and others
+ * Copyright (c) 2005, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -118,6 +118,7 @@ public boolean isVerbose() {
 	 */
 	@Override
 	public void setVerbose(boolean value) {
+		@SuppressWarnings("removal")
 		SecurityManager security = System.getSecurityManager();
 		if (security != null) {
 			security.checkPermission(ManagementPermissionHelper.MPCONTROL);

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ManagementUtils.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2008, 2019 IBM Corp. and others
+ * Copyright (c) 2008, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -444,6 +444,7 @@ public static Class<?> getClassMaybePrimitive(String name) throws ClassNotFoundE
 		int i = name.lastIndexOf('.');
 
 		if (i != -1) {
+			@SuppressWarnings("removal")
 			SecurityManager sm = System.getSecurityManager();
 			if (sm != null) {
 				sm.checkPackageAccess(name.substring(0, i));

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/RuntimeMXBeanImpl.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2020 IBM Corp. and others
+ * Copyright (c) 2005, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -237,6 +237,7 @@ public final ObjectName getObjectName() {
 	}
 
 	public static void checkMonitorPermission() {
+		@SuppressWarnings("removal")
 		SecurityManager security = System.getSecurityManager();
 
 		if (security != null) {

File: jcl/src/java.management/share/classes/java/lang/management/ManagementFactory.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17 & !Sidecar19-SE]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION == 8]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2019 IBM Corp. and others
+ * Copyright (c) 2005, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -240,6 +240,7 @@ public static OperatingSystemMXBean getOperatingSystemMXBean() {
 	 */
 	public static MBeanServer getPlatformMBeanServer() {
 		/*[PR CMVC 93006]*/
+		@SuppressWarnings("removal")
 		SecurityManager security = System.getSecurityManager();
 
 		if (security != null) {

File: jcl/src/jdk.management/share/classes/openj9/lang/management/internal/OpenJ9DiagnosticsMXBeanImpl.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2018, 2020 IBM Corp. and others
+ * Copyright (c) 2018, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -308,6 +308,7 @@ public String triggerClassicHeapDump() throws InvalidOptionException {
 
 	private static void checkManagementSecurityPermission() {
 		/* Check the caller has Management Permission. */
+		@SuppressWarnings("removal")
 		SecurityManager manager = System.getSecurityManager();
 		if (manager != null) {
 			manager.checkPermission(ManagementPermissionHelper.MPCONTROL);

File: jcl/src/openj9.cuda/share/classes/com/ibm/cuda/CudaModule.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2018 IBM Corp. and others
+ * Copyright (c) 2013, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -169,6 +169,7 @@ public CudaModule(CudaDevice device, byte[] image, CudaJitOptions options)
 			throws CudaException {
 		super();
 
+		@SuppressWarnings("removal")
 		SecurityManager security = System.getSecurityManager();
 
 		if (security != null) {

File: jcl/src/openj9.gpu/share/classes/com/ibm/gpu/CUDAManager.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 2014, 2017 IBM Corp. and others
+ * Copyright (c) 2014, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -270,6 +270,7 @@ public static CUDAManager getInstance()
 	 *          have permission to access the CUDAManager instance.
 	 */
 	public static CUDAManager instance() throws SecurityException {
+		@SuppressWarnings("removal")
 		SecurityManager security = System.getSecurityManager();
 
 		if (security != null) {

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2006, 2020 IBM Corp. and others
+ * Copyright (c) 2006, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -496,6 +496,7 @@ private static void checkForExtraOptions(String fileNamePattern) throws InvalidD
 
 	private static void checkDumpSecurityPermssion() throws SecurityException {
 		/* Check the caller has DumpPermission. */
+		@SuppressWarnings("removal")
 		SecurityManager manager = System.getSecurityManager();
 		if( manager != null ) {
 			manager.checkPermission(DUMP_PERMISSION);
@@ -504,6 +505,7 @@ private static void checkDumpSecurityPermssion() throws SecurityException {
 
 	private static void checkToolSecurityPermssion() throws SecurityException {
 		/* Check the caller has DumpPermission. */
+		@SuppressWarnings("removal")
 		SecurityManager manager = System.getSecurityManager();
 		if( manager != null ) {
 			manager.checkPermission(TOOL_DUMP_PERMISSION);

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Trace.java
Patch:
@@ -1,7 +1,6 @@
-/*[INCLUDE-IF Sidecar16]*/
-
+/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -291,6 +290,7 @@ private static void checkLegacySecurityPermssion() throws SecurityException {
 	
     private static void checkTraceSecurityPermssion() throws SecurityException {
 		/* Check the caller has TracePermission. */
+		@SuppressWarnings("removal")
 		SecurityManager manager = System.getSecurityManager();
 		if (manager != null) {
 			manager.checkPermission(TRACE_PERMISSION);

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedAbstractHelper.java
Patch:
@@ -77,6 +77,7 @@ private static boolean checkPermission(SecurityManager sm, ClassLoader loader, S
 	}
 
 	static boolean checkReadPermission(ClassLoader loader) {
+		@SuppressWarnings("removal")
 		SecurityManager sm = System.getSecurityManager();
 		if (sm!=null) {
 			return checkPermission(sm, loader, "read"); //$NON-NLS-1$
@@ -85,6 +86,7 @@ static boolean checkReadPermission(ClassLoader loader) {
 	}
 	
 	static boolean checkWritePermission(ClassLoader loader) {
+		@SuppressWarnings("removal")
 		SecurityManager sm = System.getSecurityManager();
 		if (sm!=null) {
 			return checkPermission(sm, loader, "write"); //$NON-NLS-1$

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedAbstractHelperFactory.java
Patch:
@@ -45,6 +45,7 @@ private static final class Monitor {
 	
 	static boolean checkPermission(ClassLoader loader, String type) {
 		boolean result = true;
+		@SuppressWarnings("removal")
 		SecurityManager sm = System.getSecurityManager();
 		if (sm!=null) {
 			try {

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassUtilities.java
Patch:
@@ -112,6 +112,7 @@ public class SharedClassUtilities {
 	 * 					have SharedClassesNamedPermission("getSharedCacheInfo")
 	 */
 	static public List<SharedClassCacheInfo> getSharedCacheInfo(String cacheDir, int flags, boolean useCommandLineValues) {
+		@SuppressWarnings("removal")
 		SecurityManager sm = System.getSecurityManager();
 		if (sm != null) {
 			sm.checkPermission(SharedPermissions.getSharedCacheInfo);
@@ -182,6 +183,7 @@ static public List<SharedClassCacheInfo> getSharedCacheInfo(String cacheDir, int
 	 * 					have SharedClassesNamedPermission("destroySharedCache")
 	 */
 	static public int destroySharedCache(String cacheDir, int cacheType, String cacheName, boolean useCommandLineValues) {
+		@SuppressWarnings("removal")
 		SecurityManager sm = System.getSecurityManager();
 		if (sm != null) {
 			sm.checkPermission(SharedPermissions.destroySharedCache);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ClassHelper.java
Patch:
@@ -400,7 +400,6 @@ public static int getJavaLangClassModifiers(J9ClassPointer j9class) throws Corru
 	/**
 	 * Returns "raw" modifiers
 	 * 
-	 * Derived from logic in J9VMJavaLangClassNativesCDLC.getModifiersImpl
 	 * @param j9class
 	 * @return
 	 * @throws CorruptDataException

File: test/functional/VM_Test/src/j9vm/test/xlpcodecache/XlpCodeCacheOptionsTestRunner.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -140,7 +140,7 @@ protected void populateXlpOptionsList() {
 			xlpOptionsList.add(new XlpOption("-Xlp64K -Xlp:codecache:pagesize=16M", 16 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
 			xlpOptionsList.add(new XlpOption("-Xlp:codecache:pagesize=16M -Xlp64K", 64 * ONE_KB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
 			xlpOptionsList.add(new XlpOption("-Xlp16M -Xlp:codecache:pagesize=7M", 7 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
-			xlpOptionsList.add(new XlpOption("-Xlp:codecache:pagesize=7M -Xlp16M", 16 * ONE_KB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
+			xlpOptionsList.add(new XlpOption("-Xlp:codecache:pagesize=7M -Xlp16M", 16 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
 
 			/* Test multiple '-Xlp<size>' options. In such cases rightmost option wins */
 			xlpOptionsList.add(new XlpOption("-Xlp64K -Xlp16M", 16 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));

File: test/functional/VM_Test/src/j9vm/test/xlpcodecache/XlpCodeCacheOptionsTestRunner.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -140,7 +140,7 @@ protected void populateXlpOptionsList() {
 			xlpOptionsList.add(new XlpOption("-Xlp64K -Xlp:codecache:pagesize=16M", 16 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
 			xlpOptionsList.add(new XlpOption("-Xlp:codecache:pagesize=16M -Xlp64K", 64 * ONE_KB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
 			xlpOptionsList.add(new XlpOption("-Xlp16M -Xlp:codecache:pagesize=7M", 7 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
-			xlpOptionsList.add(new XlpOption("-Xlp:codecache:pagesize=7M -Xlp16M", 16 * ONE_KB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
+			xlpOptionsList.add(new XlpOption("-Xlp:codecache:pagesize=7M -Xlp16M", 16 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));
 
 			/* Test multiple '-Xlp<size>' options. In such cases rightmost option wins */
 			xlpOptionsList.add(new XlpOption("-Xlp64K -Xlp16M", 16 * ONE_MB, XlpUtil.XLP_PAGE_TYPE_NOT_USED, true));

File: test/functional/Java9andUp/src/org/openj9/test/defineModuleAsClass/DefineModuleAsClassTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -72,7 +72,7 @@ public boolean loadClass(String name, byte[] classBytes) {
 
 		try {
 			Class<?> testClass = defineClass(name, classBytes, 0, classBytes.length);
-		} catch (ClassFormatError e) {
+		} catch (NoClassDefFoundError e) {
 			String message = e.getMessage();
 			if (message.contains("is not a class because access_flag ACC_MODULE is set")) {
 				result = true;

File: test/functional/Java9andUp/src/org/openj9/test/defineModuleAsClass/DefineModuleAsClassTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -72,7 +72,7 @@ public boolean loadClass(String name, byte[] classBytes) {
 
 		try {
 			Class<?> testClass = defineClass(name, classBytes, 0, classBytes.length);
-		} catch (ClassFormatError e) {
+		} catch (NoClassDefFoundError e) {
 			String message = e.getMessage();
 			if (message.contains("is not a class because access_flag ACC_MODULE is set")) {
 				result = true;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -212,7 +212,7 @@ private void fieldOffsetsFindNext() throws CorruptDataException {
 					if (modifiers.anyBitsIn(J9FieldFlagObject)) {
 						if (valueTypeHelper.isFlattenableFieldSignature(J9ROMFieldShapeHelper.getSignature(localField))) {
 							J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(instanceClass, J9ROMFieldShapeHelper.getName(localField));
-							if (valueTypeHelper.isJ9ClassIsFlattened(fieldClass)) {
+							if (valueTypeHelper.isJ9FieldIsFlattened(fieldClass, localField)) {
 								UDATA size = null;
 								if (valueTypeHelper.isJ9ClassLargestAlignmentConstraintDouble(fieldClass)) {
 									size = fieldClass.totalInstanceSize();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -395,7 +395,7 @@ boolean isInstanceFieldBackfillEligible() {
 					if (valueTypeHelper.isFlattenableFieldSignature(J9ROMFieldShapeHelper.getSignature(f))) {
 						int size = 0;
 						J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(containerClazz, J9ROMFieldShapeHelper.getName(f));
-						if (!valueTypeHelper.isJ9ClassIsFlattened(fieldClass)) {
+						if (!valueTypeHelper.isJ9FieldIsFlattened(fieldClass, f)) {
 							instanceObjectCount += 1;
 							totalObjectCount += 1;
 						} else if (valueTypeHelper.isJ9ClassLargestAlignmentConstraintDouble(fieldClass)) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/PrintObjectFieldsHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2019, 2020 IBM Corp. and others
+ * Copyright (c) 2019, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -234,7 +234,7 @@ private static void printObjectField(PrintStream out, int tabLevel, J9ClassPoint
 		String className = J9ClassHelper.getName(fromClass);
 		String fieldName = J9UTF8Helper.stringValue(fieldShape.nameAndSignature().name());
 		String fieldSignature = J9UTF8Helper.stringValue(fieldShape.nameAndSignature().signature());
-		boolean fieldIsFlattened = valueTypeHelper.isFieldInClassFlattened(localClazz, fieldName);
+		boolean fieldIsFlattened = valueTypeHelper.isFieldInClassFlattened(localClazz, fieldShape);
 
 		if (containerIsFlatObject && valueTypeHelper.classRequires4BytePrePadding(localClazz)) {
 			/* If container has pre-padding the dataStart was adjusted to reflect this. 
@@ -290,7 +290,7 @@ private static void printNestedObjectField(PrintStream out, int tabLevel, J9Clas
 		boolean isHiddenField = objectFieldOffset.isHidden();
 		String fieldName = J9UTF8Helper.stringValue(fieldShape.nameAndSignature().name());
 		String fieldSignature = J9UTF8Helper.stringValue(fieldShape.nameAndSignature().signature());
-		boolean fieldIsFlattened = valueTypeHelper.isFieldInClassFlattened(localClazz, fieldName);
+		boolean fieldIsFlattened = valueTypeHelper.isFieldInClassFlattened(localClazz, fieldShape);
 		
 		padding(out, tabLevel);
 		

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java
Patch:
@@ -204,6 +204,8 @@ private static byte[] generateClass(ClassConfiguration config) {
 			} else {
 				if ((nameAndSigValue.length > 2) && nameAndSigValue[2].equals("static")) {
 					fieldModifiers = ACC_PUBLIC + ACC_STATIC;
+				} else if ((nameAndSigValue.length > 2) && nameAndSigValue[2].equals("volatile")) {
+					fieldModifiers = ACC_PUBLIC + ACC_FINAL + ACC_VOLATILE;
 				} else {
 					fieldModifiers = ACC_PUBLIC + ACC_FINAL;
 				}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java
Patch:
@@ -27,7 +27,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;
-import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SIMPLE_NAME;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_DEBUG_EXTENSION;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_FILE_NAME;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCSegmentIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -60,8 +60,8 @@ public static GCSegmentIterator fromJ9MemorySegmentList(J9MemorySegmentListPoint
 	public boolean hasNext() 
 	{
 		try {
-			while(memorySegment.notNull()) {
-				if(memorySegment.type().allBitsIn(flags)) {
+			while (memorySegment.notNull()) {
+				if ((0 == flags) || memorySegment.type().allBitsIn(flags)) {
 					return true;
 				}
 				memorySegment = memorySegment.nextSegment();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java
Patch:
@@ -27,7 +27,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;
-import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SIMPLE_NAME;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_DEBUG_EXTENSION;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_FILE_NAME;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCSegmentIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -60,8 +60,8 @@ public static GCSegmentIterator fromJ9MemorySegmentList(J9MemorySegmentListPoint
 	public boolean hasNext() 
 	{
 		try {
-			while(memorySegment.notNull()) {
-				if(memorySegment.type().allBitsIn(flags)) {
+			while (memorySegment.notNull()) {
+				if ((0 == flags) || memorySegment.type().allBitsIn(flags)) {
 					return true;
 				}
 				memorySegment = memorySegment.nextSegment();

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -3038,7 +3038,8 @@ static public void testIdentityObjectOnValueType() throws Throwable {
 		assertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));
 	}
 
-	@Test(priority = 1)
+	/* Temporarily disabled due IdentityObject currently not being injected in correct cases */
+	@Test(enabled=false, priority=1)
 	static public void testIdentityObjectOnAbstract() throws Throwable {
 		assertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));
 	}

File: jcl/src/java.base/share/classes/java/lang/IdentityObject.java
Patch:
@@ -22,6 +22,6 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
 
-public interface IdentityInterface {
+public interface IdentityObject {
 
 }

File: test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -446,7 +446,7 @@ public void test_getMethods_subtest6() throws Exception {
 	ClzImpl clzImpl = new ClzImpl();
 	for (Method method : clzImpl.getClass().getMethods()) {
 		for (Class<?> anInterface : method.getDeclaringClass().getInterfaces()) {
-			if (!anInterface.getName().equals("java.lang.IdentityInterface")) {
+			if (anInterface.getName().equals("org.openj9.test.java.lang.Test_Class$InterFaceLayerOne")) {
 				Method intfMethod = anInterface.getMethod(method.getName(), method.getParameterTypes());
 				Assert.assertEquals(intfMethod.toString(), "public abstract org.openj9.test.java.lang.Test_Class$ClzParent org.openj9.test.java.lang.Test_Class$InterfaceLayerThreeB.getType()");	
 			}

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2020 IBM Corp. and others
+ * Copyright (c) 2009, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -627,7 +627,7 @@ public Object invokeWithArguments(List<?> args) throws Throwable, WrongMethodTyp
 	 * exactly match the underlying MethodType.
 	 * <p>
 	 * <i>invoke</i> acts as normally unless the arities differ.  In that case, the trailing
-	 * arguments are converted as though by a call to {@link #asCollector(int)} before invoking the underlying
+	 * arguments are converted as though by a call to {@link #asCollector(Class<?>, int)} before invoking the underlying
 	 * methodhandle.
 	 * 
 	 * @param arrayParameter - the type of the array to collect the arguments into

File: jcl/src/java.management/share/classes/java/lang/management/PlatformLoggingMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,7 @@
  * <p>
  * Accessing this <code>MXBean</code> can be done in one of three ways.
  * <ol>
- * <li>Invoking the static {@link ManagementFactory#getPlatformMXBean()} method.
+ * <li>Invoking the static {@link ManagementFactory#getPlatformMXBean} method.
  * </li>
  * <li>Using a javax.management.MBeanServerConnection.</li>
  * <li>Obtaining a proxy MXBean from the static

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/CpuLoadCalculationConstants.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 package com.ibm.lang.management;
 
 /**
- * Constants used by {@link com.ibm.lang.managementOperatingSystemMXBean#getProcessCpuLoad()} and
+ * Constants used by {@link com.ibm.lang.management.OperatingSystemMXBean#getProcessCpuLoad()} and
  * {@link com.ibm.lang.management.OperatingSystemMXBean#getSystemCpuLoad()} methods.
  * 
  * @author Sridevi

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/image/ImageFactory.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2019 IBM Corp. and others
+ * Copyright (c) 2004, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@
  *
  * e.g.
  *
- * <pre>
+ * <pre>{@code
  * Image image;
  * try {
  *   Class<?> factoryClass = Class.forName(&quot;com.ibm.dtfj.image.j9.ImageFactory&quot;);
@@ -56,7 +56,7 @@
  *   System.err.println(&quot;Could not find file required for bootstrapping:&quot;);
  *   e.printStackTrace(System.err);
  * }
- * </pre>
+ * }</pre>
  */
 public interface ImageFactory {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/CannotSetClasspathException.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 /**
  * Exception thrown if an attempt is made to modify confirmed elements of a
  * classpath in SharedClassURLClasspathHelper.
- * <p>
  */
 public class CannotSetClasspathException extends Exception {
 	private static final long serialVersionUID = 608627979560424852L;

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/HelperAlreadyDefinedException.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 /**
  * Exception thrown if a factory is asked to get multiple helpers for a ClassLoader.
- * <p>
  */
 public class HelperAlreadyDefinedException extends Exception {
 	private static final long serialVersionUID = -356665797623954170L;

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/Shared.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 
 /**
  * Global class that provides SharedClassHelperFactory, SharedDataHelperFactory and sharing status.
- * <p>
+ *
  * @see SharedClassHelperFactory
  * @see SharedDataHelperFactory
  */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedAbstractHelper.java
Patch:
@@ -7,7 +7,7 @@
 import com.ibm.oti.util.Msg;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,7 @@
 
 /**
  * SharedAbstractHelper provides common functions and data to helper subclasses.
- * <p>
+ *
  * @see SharedHelper
  * @see SharedClassAbstractHelper
  */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedAbstractHelperFactory.java
Patch:
@@ -4,7 +4,7 @@
 import java.security.AccessControlException;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -27,7 +27,6 @@
 
 /**
  * SharedAbstractHelperFactory is an abstract superclass for helper factory subclasses.
- * <p>
  */
 public abstract class SharedAbstractHelperFactory {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassAbstractHelper.java
Patch:
@@ -12,7 +12,7 @@
 import java.security.PrivilegedAction;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 
 /**
  * SharedClassAbstractHelper provides common functions and data to class helper subclasses.
- * <p>
+ *
  * @see SharedClassHelper
  * @see SharedAbstractHelper
  */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassCacheInfo.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF SharedClasses]*/
 /*******************************************************************************
- * Copyright (c) 2010, 2020 IBM Corp. and others
+ * Copyright (c) 2010, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 /**
  * SharedClassCacheInfo stores information about a shared class cache and
  * provides methods to retrieve that information.
- * <p>
  */
 public class SharedClassCacheInfo {
 	

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassHelperFactory.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF SharedClasses]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2020 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -121,7 +121,7 @@ public SharedClassTokenHelper getTokenHelper(ClassLoader loader, SharedClassFilt
 	;
 
 	/**
-	 * <p>Returns a SharedClassURLHelper for a given ClassLoader.<p>
+	 * <p>Returns a SharedClassURLHelper for a given ClassLoader.</p>
 	 * <p>Creates a new SharedClassURLHelper if one cannot be found, otherwise returns existing SharedClassURLHelper.</p>
 	 * <p>Throws a HelperAlreadyDefinedException if the ClassLoader already has a different type of helper.</p>
 	 * <p>Returns null if a SecurityManager is installed and there is no 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassPermission.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.StringTokenizer;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,7 +36,6 @@
  * <p>
  * "read" allows a ClassLoader to load classes from the shared cache.<br>
  * "write" allows a ClassLoader to add classes to the shared cache.
- * <p>
  */
 public class SharedClassPermission extends BasicPermission {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassPermissionCollection.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.Hashtable;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,7 @@
 
 /**
  * SharedClassPermissionCollection provides permission collection to support SharedClassPermission
- * <p>
+ *
  * @see SharedClassPermission
  */
 public class SharedClassPermissionCollection extends PermissionCollection {

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassStatistics.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 /**
  * SharedClassStatistics provides static functions that report basic cache statistics.
- * <p>
  */
 public class SharedClassStatistics {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassUtilities.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,6 @@
 /**
  * SharedClassUtilities provides APIs to get information about all shared class caches in a directory and
  * to destroy a particular shared class cache.   
- * <p>
  * 
  * @see SharedClassCacheInfo 
  *
@@ -177,7 +176,7 @@ static public List<SharedClassCacheInfo> getSharedCacheInfo(String cacheDir, int
 	 * @throws		IllegalStateException
 	 * 					If shared classes is disabled for this JVM (that is -Xshareclasses:none is present).
 	 * @throws		IllegalArgumentException
-	 * 					If <code>cacheType<code> is not a valid value.
+	 * 					If <code>cacheType</code> is not a valid value.
 	 * @throws		SecurityException
 	 * 					If a security manager is enabled and the calling thread does not
 	 * 					have SharedClassesNamedPermission("destroySharedCache")

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedDataHelperFactory.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 
 /**
  * SharedDataHelperFactory provides an interface used to create SharedDataHelpers.
- * <p>
+ *
  * @see SharedDataHelper
  */
 public interface SharedDataHelperFactory {

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedHelper.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 /**
  * The SharedHelper superinterface defines functions common to all helpers. 
- * <p>
  */
 public interface SharedHelper {
 	

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/ByteStream.java
Patch:
@@ -524,7 +524,7 @@ synchronized public void truncate(int bytes) {
 	 * 
 	 * @param bytes
 	 *                - the number of bytes to remove
-	 * @returns - the number of bytes truncated
+	 * @return - the number of bytes truncated
 	 */
 	synchronized public int truncate(byte bytes[]) {
 		Slice s;

File: jcl/src/openj9.zosconditionhandling/share/classes/com/ibm/le/conditionhandling/ConditionException.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 
 /*******************************************************************************
- * Copyright (c) 2009, 2020 IBM Corp. and others
+ * Copyright (c) 2009, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,6 +32,7 @@
  * <li>z/OS Language Environment Programming Reference: CEEDCOD-Decompose a condition token
  * <li>z/OS XL C/C++ Run-Time Library Reference: __le_condition_token_build()
  * <li>The AMODE31 header file leawi.h
+ * </ul>
  */
 
 public class ConditionException extends RuntimeException {

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2020 IBM Corp. and others
+ * Copyright (c) 2009, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -627,7 +627,7 @@ public Object invokeWithArguments(List<?> args) throws Throwable, WrongMethodTyp
 	 * exactly match the underlying MethodType.
 	 * <p>
 	 * <i>invoke</i> acts as normally unless the arities differ.  In that case, the trailing
-	 * arguments are converted as though by a call to {@link #asCollector(int)} before invoking the underlying
+	 * arguments are converted as though by a call to {@link #asCollector(Class<?>, int)} before invoking the underlying
 	 * methodhandle.
 	 * 
 	 * @param arrayParameter - the type of the array to collect the arguments into

File: jcl/src/java.management/share/classes/java/lang/management/PlatformLoggingMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,7 @@
  * <p>
  * Accessing this <code>MXBean</code> can be done in one of three ways.
  * <ol>
- * <li>Invoking the static {@link ManagementFactory#getPlatformMXBean()} method.
+ * <li>Invoking the static {@link ManagementFactory#getPlatformMXBean} method.
  * </li>
  * <li>Using a javax.management.MBeanServerConnection.</li>
  * <li>Obtaining a proxy MXBean from the static

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/CpuLoadCalculationConstants.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 package com.ibm.lang.management;
 
 /**
- * Constants used by {@link com.ibm.lang.managementOperatingSystemMXBean#getProcessCpuLoad()} and
+ * Constants used by {@link com.ibm.lang.management.OperatingSystemMXBean#getProcessCpuLoad()} and
  * {@link com.ibm.lang.management.OperatingSystemMXBean#getSystemCpuLoad()} methods.
  * 
  * @author Sridevi

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/image/ImageFactory.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2019 IBM Corp. and others
+ * Copyright (c) 2004, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@
  *
  * e.g.
  *
- * <pre>
+ * <pre>{@code
  * Image image;
  * try {
  *   Class<?> factoryClass = Class.forName(&quot;com.ibm.dtfj.image.j9.ImageFactory&quot;);
@@ -56,7 +56,7 @@
  *   System.err.println(&quot;Could not find file required for bootstrapping:&quot;);
  *   e.printStackTrace(System.err);
  * }
- * </pre>
+ * }</pre>
  */
 public interface ImageFactory {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/CannotSetClasspathException.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 /**
  * Exception thrown if an attempt is made to modify confirmed elements of a
  * classpath in SharedClassURLClasspathHelper.
- * <p>
  */
 public class CannotSetClasspathException extends Exception {
 	private static final long serialVersionUID = 608627979560424852L;

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/HelperAlreadyDefinedException.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 /**
  * Exception thrown if a factory is asked to get multiple helpers for a ClassLoader.
- * <p>
  */
 public class HelperAlreadyDefinedException extends Exception {
 	private static final long serialVersionUID = -356665797623954170L;

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/Shared.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 
 /**
  * Global class that provides SharedClassHelperFactory, SharedDataHelperFactory and sharing status.
- * <p>
+ *
  * @see SharedClassHelperFactory
  * @see SharedDataHelperFactory
  */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedAbstractHelper.java
Patch:
@@ -7,7 +7,7 @@
 import com.ibm.oti.util.Msg;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,7 @@
 
 /**
  * SharedAbstractHelper provides common functions and data to helper subclasses.
- * <p>
+ *
  * @see SharedHelper
  * @see SharedClassAbstractHelper
  */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedAbstractHelperFactory.java
Patch:
@@ -4,7 +4,7 @@
 import java.security.AccessControlException;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -27,7 +27,6 @@
 
 /**
  * SharedAbstractHelperFactory is an abstract superclass for helper factory subclasses.
- * <p>
  */
 public abstract class SharedAbstractHelperFactory {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassAbstractHelper.java
Patch:
@@ -12,7 +12,7 @@
 import java.security.PrivilegedAction;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@
 
 /**
  * SharedClassAbstractHelper provides common functions and data to class helper subclasses.
- * <p>
+ *
  * @see SharedClassHelper
  * @see SharedAbstractHelper
  */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassCacheInfo.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF SharedClasses]*/
 /*******************************************************************************
- * Copyright (c) 2010, 2020 IBM Corp. and others
+ * Copyright (c) 2010, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 /**
  * SharedClassCacheInfo stores information about a shared class cache and
  * provides methods to retrieve that information.
- * <p>
  */
 public class SharedClassCacheInfo {
 	

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassHelperFactory.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF SharedClasses]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2020 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -121,7 +121,7 @@ public SharedClassTokenHelper getTokenHelper(ClassLoader loader, SharedClassFilt
 	;
 
 	/**
-	 * <p>Returns a SharedClassURLHelper for a given ClassLoader.<p>
+	 * <p>Returns a SharedClassURLHelper for a given ClassLoader.</p>
 	 * <p>Creates a new SharedClassURLHelper if one cannot be found, otherwise returns existing SharedClassURLHelper.</p>
 	 * <p>Throws a HelperAlreadyDefinedException if the ClassLoader already has a different type of helper.</p>
 	 * <p>Returns null if a SecurityManager is installed and there is no 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassPermission.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.StringTokenizer;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,7 +36,6 @@
  * <p>
  * "read" allows a ClassLoader to load classes from the shared cache.<br>
  * "write" allows a ClassLoader to add classes to the shared cache.
- * <p>
  */
 public class SharedClassPermission extends BasicPermission {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassPermissionCollection.java
Patch:
@@ -7,7 +7,7 @@
 import java.util.Hashtable;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,7 @@
 
 /**
  * SharedClassPermissionCollection provides permission collection to support SharedClassPermission
- * <p>
+ *
  * @see SharedClassPermission
  */
 public class SharedClassPermissionCollection extends PermissionCollection {

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassStatistics.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 /**
  * SharedClassStatistics provides static functions that report basic cache statistics.
- * <p>
  */
 public class SharedClassStatistics {
 

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassUtilities.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,6 @@
 /**
  * SharedClassUtilities provides APIs to get information about all shared class caches in a directory and
  * to destroy a particular shared class cache.   
- * <p>
  * 
  * @see SharedClassCacheInfo 
  *
@@ -177,7 +176,7 @@ static public List<SharedClassCacheInfo> getSharedCacheInfo(String cacheDir, int
 	 * @throws		IllegalStateException
 	 * 					If shared classes is disabled for this JVM (that is -Xshareclasses:none is present).
 	 * @throws		IllegalArgumentException
-	 * 					If <code>cacheType<code> is not a valid value.
+	 * 					If <code>cacheType</code> is not a valid value.
 	 * @throws		SecurityException
 	 * 					If a security manager is enabled and the calling thread does not
 	 * 					have SharedClassesNamedPermission("destroySharedCache")

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedDataHelperFactory.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 
 /**
  * SharedDataHelperFactory provides an interface used to create SharedDataHelpers.
- * <p>
+ *
  * @see SharedDataHelper
  */
 public interface SharedDataHelperFactory {

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedHelper.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2016 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 /**
  * The SharedHelper superinterface defines functions common to all helpers. 
- * <p>
  */
 public interface SharedHelper {
 	

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/ByteStream.java
Patch:
@@ -524,7 +524,7 @@ synchronized public void truncate(int bytes) {
 	 * 
 	 * @param bytes
 	 *                - the number of bytes to remove
-	 * @returns - the number of bytes truncated
+	 * @return - the number of bytes truncated
 	 */
 	synchronized public int truncate(byte bytes[]) {
 		Slice s;

File: jcl/src/openj9.zosconditionhandling/share/classes/com/ibm/le/conditionhandling/ConditionException.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 
 /*******************************************************************************
- * Copyright (c) 2009, 2020 IBM Corp. and others
+ * Copyright (c) 2009, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,6 +32,7 @@
  * <li>z/OS Language Environment Programming Reference: CEEDCOD-Decompose a condition token
  * <li>z/OS XL C/C++ Run-Time Library Reference: __le_condition_token_build()
  * <li>The AMODE31 header file leawi.h
+ * </ul>
  */
 
 public class ConditionException extends RuntimeException {

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 1998, 2020 IBM Corp. and others
+ * Copyright (c) 1998, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1260,10 +1260,10 @@ private static void multiLeafArrayCopy(Object src, int srcPos, Object dest,
 /**
  * Return platform specific line separator character(s)
  * Unix is \n while Windows is \r\n as per the prop set by the VM 
- * Refer to Jazz 30875
  *  
  * @return platform specific line separator character(s)
  */
+//  Refer to Jazz 30875
 public static String lineSeparator() {
 	 return lineSeparator;
 }

File: test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -446,7 +446,7 @@ public void test_getMethods_subtest6() throws Exception {
 	ClzImpl clzImpl = new ClzImpl();
 	for (Method method : clzImpl.getClass().getMethods()) {
 		for (Class<?> anInterface : method.getDeclaringClass().getInterfaces()) {
-			if (IdentityInterface.class != anInterface) {
+			if (!anInterface.getName().equals("java.lang.IdentityInterface")) {
 				Method intfMethod = anInterface.getMethod(method.getName(), method.getParameterTypes());
 				Assert.assertEquals(intfMethod.toString(), "public abstract org.openj9.test.java.lang.Test_Class$ClzParent org.openj9.test.java.lang.Test_Class$InterfaceLayerThreeB.getType()");	
 			}

File: test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -446,7 +446,7 @@ public void test_getMethods_subtest6() throws Exception {
 	ClzImpl clzImpl = new ClzImpl();
 	for (Method method : clzImpl.getClass().getMethods()) {
 		for (Class<?> anInterface : method.getDeclaringClass().getInterfaces()) {
-			if (IdentityInterface.class != anInterface) {
+			if (!anInterface.getName().equals("java.lang.IdentityInterface")) {
 				Method intfMethod = anInterface.getMethod(method.getName(), method.getParameterTypes());
 				Assert.assertEquals(intfMethod.toString(), "public abstract org.openj9.test.java.lang.Test_Class$ClzParent org.openj9.test.java.lang.Test_Class$InterfaceLayerThreeB.getType()");	
 			}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2020 IBM Corp. and others
+ * Copyright (c) 2009, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -27,6 +27,7 @@
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;
+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SIMPLE_NAME;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_DEBUG_EXTENSION;
 import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_FILE_NAME;

File: test/functional/cmdLineTests/utils/src/org/openj9/test/classtests/AnonClassAndUnsafeClassTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2019, 2019 IBM Corp. and others
+ * Copyright (c) 2019, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/LambdaForm.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF JAVA_SPEC_VERSION >= 8 & !OPENJDK_METHODHANDLES]*/
+/*[INCLUDE-IF Sidecar18-SE-OpenJ9 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
  * Copyright (c) 2017, 2021 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -5528,6 +5528,9 @@ static boolean permuteArgumentChecks(int[] permute, MethodType permuteType, Meth
 	 * @return the classData casted to the appropriate type.
 	 * @throws IllegalAccessException in the absence of full privilege access.
 	 */
+	/*[IF JAVA_SPEC_VERSION >= 16]*/
+	public
+	/*[ENDIF] JAVA_SPEC_VERSION >= 16 */
 	static <T> T classData(Lookup caller, String unused, Class<T> type) throws IllegalAccessException {
 		if (caller.hasFullPrivilegeAccess()) {
 			Object classData = MethodHandleNatives.classData(caller.accessClass);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -660,6 +660,9 @@ private void allSlotsInConstantPoolDo() throws CorruptDataException
 
 			} else if ((shapeDesc == J9CPTYPE_UNUSED) || (shapeDesc == J9CPTYPE_UNUSED8)) {
 				classWalkerCallback.addSlot(clazz, SlotType.J9_I64, I64Pointer.cast(cpEntry), "cpFieldUnused");
+
+			} else {
+				throw new CorruptDataException("Unknown CP entry type: " + shapeDesc);
 			}
 
 			cpEntry = cpEntry.addOffset(J9ROMConstantPoolItem.SIZEOF);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ByteCodeDumper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -434,7 +434,7 @@ private static IDATA j9bcutil_dumpBytecodes(PrintStream out, J9ROMClassPointer r
 				out.append(J9UTF8Helper.stringValue(nameAndSig.signature())); /* dump signature */
 				out.append(nl);
 
-				pc = pc.add(4);
+				pc = pc.add(2);
 			} else if (bcIntVal == JBinvokeinterface2) {
 				incIndex();
 				pc = pc.add(1);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ByteCodeDumper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2020 IBM Corp. and others
+ * Copyright (c) 2001, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -434,7 +434,7 @@ private static IDATA j9bcutil_dumpBytecodes(PrintStream out, J9ROMClassPointer r
 				out.append(J9UTF8Helper.stringValue(nameAndSig.signature())); /* dump signature */
 				out.append(nl);
 
-				pc = pc.add(4);
+				pc = pc.add(2);
 			} else if (bcIntVal == JBinvokeinterface2) {
 				incIndex();
 				pc = pc.add(1);

File: test/functional/cmdline_options_tester/src/MainTester.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2018 IBM Corp. and others
+ * Copyright (c) 2004, 2021 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -54,6 +54,8 @@ public static void main( String[] args ) {
 				verbose = true;
 			} else if (args[i].equalsIgnoreCase("-nonZeroExitWhenError")) {
 				nonZeroExitCodeWhenError = true;
+			} else if (args[i].equalsIgnoreCase("-disableDebugOnTimeout")) {
+				debugCmdOnTimeout = false;
 			} else if (i < args.length - 1) {
 				if (args[i].equalsIgnoreCase("-config")) {
 					configFile = args[++i];
@@ -65,8 +67,6 @@ public static void main( String[] args ) {
 					platforms = args[++i];
 				} else if (args[i].equalsIgnoreCase("-outputLimit")) {
 					outputLimitString = args[++i];
-				} else if (args[i].equalsIgnoreCase("-disableDebugOnTimeout")) {
-					debugCmdOnTimeout = false;
 				}
 			}
 		}

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -132,9 +132,6 @@ public abstract class MethodHandle
 	static final byte KIND_FILTERARGUMENTS = 29;
 	static final byte KIND_VARHANDLEINVOKEEXACT = 30;
 	static final byte KIND_VARHANDLEINVOKEGENERIC = 31;
-	/*[IF Panama]*/
-	static final byte KIND_NATIVE = 32;
-	/*[ENDIF]*/
 	/*[IF JAVA_SPEC_VERSION >= 12]*/
 	static final byte KIND_FILTERARGUMENTS_WITHCOMBINER = 33;
 	/*[ENDIF] JAVA_SPEC_VERSION >= 12 */

File: test/functional/VM_Test/src/j9vm/runner/Runner.java
Patch:
@@ -33,6 +33,7 @@ protected enum OSName {
 		LINUX,
 		WINDOWS,
 		ZOS,
+		MAC,
 		UNKNOWN
 	}
 	
@@ -78,6 +79,8 @@ private void setPlatform() {
 				osName = OSName.WINDOWS;
 			} else if (OSSpec.contains("z/os")) {
 				osName = OSName.ZOS;
+			} else if (OSSpec.contains("mac")) {
+				osName = OSName.MAC;
 			} else {
 				System.out.println("Runner couldn't determine underlying OS. Got OS Name:" + OSSpec);
 				osName = OSName.UNKNOWN;

File: test/functional/VM_Test/src/j9vm/test/xlpcodecache/XlpCodeCacheOptionsTestRunner.java
Patch:
@@ -156,6 +156,7 @@ protected void populateXlpOptionsList() {
 			break;
 
 		case LINUX:
+		case MAC:
 		case WINDOWS:
 			/* No -Xlp option */
 			xlpOptionsList.add(new XlpOption(null, false));

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2777,7 +2777,7 @@ static public void testUnresolvedWithFieldUse() throws Throwable {
 		 * }
 		 */
 		String fields[] = {"x:I", "y:I"};
-		Class valueClass = ValueTypeGenerator.generateValueClass("UnresolvedD", fields, "HostD");
+		Class valueClass = ValueTypeGenerator.generateValueClass("UnresolvedD", fields, "UsingUnresolvedD");
 		String fields2[] = {};
 		Class usingClass = ValueTypeGenerator.generateHostRefClass("UsingUnresolvedD", fields2, "UnresolvedD", fields);
 

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestPersistentCacheMoving01.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -40,7 +40,7 @@ public static void main(String[] args) {
 	  }
 	  String currentCacheDir = getCacheDir();
 
-	  if ( null == currentCacheDir && isOpenJ9() ) {
+	  if ( null == currentCacheDir && false == isIbmJava8() ) {
 		  // Persistent cachefile without groupaccess are generated under HOME directory
 		  // Current directory is under /tmp. Move a file from HOME directory to /tmp may not succeed on some platforms. 
 		return;

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestSharedCacheJvmtiAPI.java
Patch:
@@ -48,7 +48,7 @@ public static void main(String args[]) {
         runDestroyAllCaches();
         if (false == isWindows()) {
         	runDestroyAllSnapshots();
-        	if (isOpenJ9()) {
+        	if (false == isIbmJava8()) {
         		runDestroyAllGroupAccessCaches();
         	}
         }
@@ -63,7 +63,7 @@ public static void main(String args[]) {
 		    	fail("iterateSharedCacheFunction failed with dir " + dir);
 		    }
 	    	
-	    	if (dir == null && false == isWindows() && isOpenJ9()) {
+	    	if (dir == null && false == isWindows() && false == isIbmJava8()) {
 	    		dirGroupAccess = getCacheDir("Foo_groupaccess", false);
 	    		dirRemoveJavaSharedResources = removeJavaSharedResourcesDir(dirGroupAccess);
 	    		oldCacheGroupAccessCount = iterateSharedCache(dirGroupAccess, NO_FLAGS, false) + iterateSharedCache(dirRemoveJavaSharedResources, NO_FLAGS, false);
@@ -156,7 +156,7 @@ public static void main(String args[]) {
 			runDestroyAllCaches();
 			if (false == isWindows()) {
 				runDestroyAllSnapshots();
-				if (isOpenJ9()) {
+				if (false == isIbmJava8()) {
 					runDestroyAllGroupAccessCaches();
 				}
 			}

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestPersistentCacheMoving01.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -40,7 +40,7 @@ public static void main(String[] args) {
 	  }
 	  String currentCacheDir = getCacheDir();
 
-	  if ( null == currentCacheDir && isOpenJ9() ) {
+	  if ( null == currentCacheDir && false == isIbmJava8() ) {
 		  // Persistent cachefile without groupaccess are generated under HOME directory
 		  // Current directory is under /tmp. Move a file from HOME directory to /tmp may not succeed on some platforms. 
 		return;

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestSharedCacheJvmtiAPI.java
Patch:
@@ -48,7 +48,7 @@ public static void main(String args[]) {
         runDestroyAllCaches();
         if (false == isWindows()) {
         	runDestroyAllSnapshots();
-        	if (isOpenJ9()) {
+        	if (false == isIbmJava8()) {
         		runDestroyAllGroupAccessCaches();
         	}
         }
@@ -63,7 +63,7 @@ public static void main(String args[]) {
 		    	fail("iterateSharedCacheFunction failed with dir " + dir);
 		    }
 	    	
-	    	if (dir == null && false == isWindows() && isOpenJ9()) {
+	    	if (dir == null && false == isWindows() && false == isIbmJava8()) {
 	    		dirGroupAccess = getCacheDir("Foo_groupaccess", false);
 	    		dirRemoveJavaSharedResources = removeJavaSharedResourcesDir(dirGroupAccess);
 	    		oldCacheGroupAccessCount = iterateSharedCache(dirGroupAccess, NO_FLAGS, false) + iterateSharedCache(dirRemoveJavaSharedResources, NO_FLAGS, false);
@@ -156,7 +156,7 @@ public static void main(String args[]) {
 			runDestroyAllCaches();
 			if (false == isWindows()) {
 				runDestroyAllSnapshots();
-				if (isOpenJ9()) {
+				if (false == isIbmJava8()) {
 					runDestroyAllGroupAccessCaches();
 				}
 			}

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -2777,7 +2777,7 @@ static public void testUnresolvedWithFieldUse() throws Throwable {
 		 * }
 		 */
 		String fields[] = {"x:I", "y:I"};
-		Class valueClass = ValueTypeGenerator.generateValueClass("UnresolvedD", fields, "HostD");
+		Class valueClass = ValueTypeGenerator.generateValueClass("UnresolvedD", fields, "UsingUnresolvedD");
 		String fields2[] = {};
 		Class usingClass = ValueTypeGenerator.generateHostRefClass("UsingUnresolvedD", fields2, "UnresolvedD", fields);
 

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestJps.java
Patch:
@@ -53,7 +53,8 @@ public class TestJps extends AttachApiTest {
 	public void testJpsSanity() throws IOException {
 		TargetManager tgtMgr = new TargetManager(TARGET_VM_CLASS, null);
 		assertTrue(CHILD_PROCESS_DID_NOT_LAUNCH, tgtMgr.syncWithTarget());
-		List<String> jpsOutput = runCommand();
+		// Allow jps to be attached on z/OS, like other platforms
+		List<String> jpsOutput = runCommand(Collections.singletonList("-J-Dcom.ibm.tools.attach.enable=yes"));
 		assertTrue(TEST_PROCESS_ID_MISSING, StringUtilities.searchSubstring(vmId, jpsOutput).isPresent());
 		assertTrue("jps is missing", StringUtilities.searchSubstring(JPS_Class, jpsOutput).isPresent()); //$NON-NLS-1$
 		assertTrue(CHILD_IS_MISSING, StringUtilities.searchSubstring(tgtMgr.targetId, jpsOutput).isPresent());

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestJps.java
Patch:
@@ -53,7 +53,8 @@ public class TestJps extends AttachApiTest {
 	public void testJpsSanity() throws IOException {
 		TargetManager tgtMgr = new TargetManager(TARGET_VM_CLASS, null);
 		assertTrue(CHILD_PROCESS_DID_NOT_LAUNCH, tgtMgr.syncWithTarget());
-		List<String> jpsOutput = runCommand();
+		// Allow jps to be attached on z/OS, like other platforms
+		List<String> jpsOutput = runCommand(Collections.singletonList("-J-Dcom.ibm.tools.attach.enable=yes"));
 		assertTrue(TEST_PROCESS_ID_MISSING, StringUtilities.searchSubstring(vmId, jpsOutput).isPresent());
 		assertTrue("jps is missing", StringUtilities.searchSubstring(JPS_Class, jpsOutput).isPresent()); //$NON-NLS-1$
 		assertTrue(CHILD_IS_MISSING, StringUtilities.searchSubstring(tgtMgr.targetId, jpsOutput).isPresent());

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
+/*[INCLUDE-IF Sidecar18-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
  * Copyright (c) 2009, 2020 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodTypeForm.java
Patch:
@@ -1,7 +1,7 @@
-/*[INCLUDE-IF Sidecar18-SE-OpenJ9]*/
+/*[INCLUDE-IF Sidecar18-SE-OpenJ9 & !OPENJDK_METHODHANDLES]*/
 
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitserver/JITServerTest.java
Patch:
@@ -56,7 +56,7 @@ public class JITServerTest {
 		final String CLIENT_PROGRAM = System.getProperty("CLIENT_PROGRAM");
 		// -Xjit options may already be on the command line so add extra JIT options via TR_Options instead to avoid one overriding the other.
 		final String JIT_LOG_ENV_OPTION = "verbose={compileEnd|JITServer|heartbeat}";
-		final String JITSERVER_PORT_OPTION_FORMAT_STRING = "-XX:JITServerPort=%0$d";
+		final String JITSERVER_PORT_OPTION_FORMAT_STRING = "-XX:JITServerPort=%d";
 		// Most systems have a specified ephemeral ports range. We're not bothering to find the actual range, just choosing a range that is outside the reserved area, reasonably large, and well-behaved.
 		// The range chosen here is within the actual ephemeral range on recent Linux systems and others (at the time of writing).
 		final int EPHEMERAL_PORTS_START = 33000, EPHEMERAL_PORTS_LAST = 60000;

File: test/functional/JIT_Test/src/jit/test/jitserver/JITServerTest.java
Patch:
@@ -56,7 +56,7 @@ public class JITServerTest {
 		final String CLIENT_PROGRAM = System.getProperty("CLIENT_PROGRAM");
 		// -Xjit options may already be on the command line so add extra JIT options via TR_Options instead to avoid one overriding the other.
 		final String JIT_LOG_ENV_OPTION = "verbose={compileEnd|JITServer|heartbeat}";
-		final String JITSERVER_PORT_OPTION_FORMAT_STRING = "-XX:JITServerPort=%0$d";
+		final String JITSERVER_PORT_OPTION_FORMAT_STRING = "-XX:JITServerPort=%d";
 		// Most systems have a specified ephemeral ports range. We're not bothering to find the actual range, just choosing a range that is outside the reserved area, reasonably large, and well-behaved.
 		// The range chosen here is within the actual ephemeral range on recent Linux systems and others (at the time of writing).
 		final int EPHEMERAL_PORTS_START = 33000, EPHEMERAL_PORTS_LAST = 60000;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -24,7 +24,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9FieldFlags.J9FieldFlagObject;
 import static com.ibm.j9ddr.vm29.structure.J9FieldFlags.J9FieldSizeDouble;
 import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccStatic;
-import static com.ibm.j9ddr.vm29.structure.ObjectFieldInfo.OBJECT_SIZE_INCREMENT_IN_BYTES;
 
 import java.util.ArrayList;
 import java.util.LinkedList;
@@ -33,10 +32,10 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldShapePointer;
+import com.ibm.j9ddr.vm29.pointer.helper.J9ObjectHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9ROMFieldShapeHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.pointer.helper.ValueTypeHelper;
-import com.ibm.j9ddr.vm29.pointer.helper.J9ObjectHelper;
 import com.ibm.j9ddr.vm29.types.Scalar;
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.types.U64;
@@ -74,6 +73,7 @@ public class ObjectFieldInfo {
 	public static final int BACKFILL_SIZE = U32.SIZEOF;
 	public static final int LOCKWORD_SIZE = j9objectmonitor_t_SizeOf;
 	public static final int FINALIZE_LINK_SIZE = fj9object_t_SizeOf;
+	private static final int OBJECT_SIZE_INCREMENT_IN_BYTES = U64.SIZEOF;
 
 	ObjectFieldInfo(J9ROMClassPointer romClass) {
 		instanceObjectCount = 0;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -24,7 +24,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9FieldFlags.J9FieldFlagObject;
 import static com.ibm.j9ddr.vm29.structure.J9FieldFlags.J9FieldSizeDouble;
 import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccStatic;
-import static com.ibm.j9ddr.vm29.structure.ObjectFieldInfo.OBJECT_SIZE_INCREMENT_IN_BYTES;
 
 import java.util.ArrayList;
 import java.util.LinkedList;
@@ -33,10 +32,10 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldShapePointer;
+import com.ibm.j9ddr.vm29.pointer.helper.J9ObjectHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9ROMFieldShapeHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.pointer.helper.ValueTypeHelper;
-import com.ibm.j9ddr.vm29.pointer.helper.J9ObjectHelper;
 import com.ibm.j9ddr.vm29.types.Scalar;
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.types.U64;
@@ -74,6 +73,7 @@ public class ObjectFieldInfo {
 	public static final int BACKFILL_SIZE = U32.SIZEOF;
 	public static final int LOCKWORD_SIZE = j9objectmonitor_t_SizeOf;
 	public static final int FINALIZE_LINK_SIZE = fj9object_t_SizeOf;
+	private static final int OBJECT_SIZE_INCREMENT_IN_BYTES = U64.SIZEOF;
 
 	ObjectFieldInfo(J9ROMClassPointer romClass) {
 		instanceObjectCount = 0;

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -604,6 +604,7 @@ private static void startRemoteServer() throws IOException {
 		ProcessBuilder builder = new ProcessBuilder(processArgs);
 		logger.info(builder.command());
 		lock = new ProcessLocking(tmpFileName);
+		builder.inheritIO();
 		remoteServer = builder.start();
 
 		lock.waitForEvent("child started");

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -604,6 +604,7 @@ private static void startRemoteServer() throws IOException {
 		ProcessBuilder builder = new ProcessBuilder(processArgs);
 		logger.info(builder.command());
 		lock = new ProcessLocking(tmpFileName);
+		builder.inheritIO();
 		remoteServer = builder.start();
 
 		lock.waitForEvent("child started");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/MemoryInfoStream.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2014, 2014 IBM Corp. and others
+ * Copyright (c) 2014, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -144,7 +144,7 @@ public void readFrom(MiniDumpReader dump, boolean is64Bit, Collection<? extends
 				props.setProperty(EXECUTABLE, FALSE);
 			}
 			
-			memoryInfo.put(new Long(baseAddress), props);
+			memoryInfo.put(Long.valueOf(baseAddress), props);
 		}
 		
 		/* Merge the extra properties into the memory info. */

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ThreadInfoStream.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2014, 2014 IBM Corp. and others
+ * Copyright (c) 2014, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -124,7 +124,7 @@ public void readFrom(MiniDumpReader dump, IAddressSpace addressSpace,
 				props.put("ExitTime_Formatted", exitTimeStr);
 			}
 			
-			threadInfo.put(new Long(threadId), props);
+			threadInfo.put(Long.valueOf(threadId), props);
 		}
 		
 		/* Merge the extra properties into the thread info. */

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Tcb.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2019 IBM Corp. and others
+ * Copyright (c) 2006, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -136,7 +136,7 @@ public Tcb(AddressSpace space, long address) {
 
         String s = space.getDump().getProductRelease();
         if (s != null) {
-            release = new Integer(s).intValue();
+            release = Integer.valueOf(s).intValue();
         }
     }
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/AbstractHashMap.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -237,7 +237,7 @@ public boolean hasMoreElements() {
         }
 
         public Object nextElement() {
-            return new Long(nextInt());
+            return Long.valueOf(nextInt());
         }
 
         public long nextInt() {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntegerLruCache.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -108,7 +108,7 @@ private void test() {
             }
             put(key, value);
             if (doCheck) {
-                check.put(new Long(key), new Integer(value));
+                check.put(Long.valueOf(key), Integer.valueOf(value));
                 if (get(key) != value) {
                     throw new Error("found " + get(key) + " expected " + value);
                 }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/IntegerMap.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -104,13 +104,13 @@ private void test() {
             }
             put(key, value);
             if (doCheck) {
-                check.put(new Long(key), new Long(value));
+                check.put(Long.valueOf(key), Long.valueOf(value));
                 if (get(key) != value) {
                     throw new Error("found " + get(key) + " expected " + value);
                 }
                 if (remove) {
                     remove(key);
-                    check.remove(new Long(key));
+                    check.remove(Long.valueOf(key));
                 }
             }
         }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ClassHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -206,7 +206,7 @@ public static J9ClassPointer superclass(J9ClassPointer clazz) throws CorruptData
 	
 	private static HashMap<String, J9ObjectFieldOffset> getFieldOffsetCache(J9ClassPointer clazz)
 	{
-		Long classAddr = new Long(clazz.getAddress());
+		Long classAddr = Long.valueOf(clazz.getAddress());
 		HashMap<String, J9ObjectFieldOffset> fieldOffsetCache = classToFieldOffsetCacheMap.get(classAddr);
 		
 		if(null != fieldOffsetCache) { 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java
Patch:
@@ -159,11 +159,11 @@ public static String stringValue(J9ObjectPointer objPointer) throws CorruptDataE
 			try {
 				getObjectField(objPointer, getFieldOffset(objPointer, "value", "[B"));
 
-				isStringBackedByByteArray = new Boolean(true);
+				isStringBackedByByteArray = Boolean.valueOf(true);
 			} catch (NoSuchElementException e) {
 				getObjectField(objPointer, getFieldOffset(objPointer, "value", "[C"));
 
-				isStringBackedByByteArray = new Boolean(false);
+				isStringBackedByByteArray = Boolean.valueOf(false);
 			}
 		}
 		

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/RuntimeSettingsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -97,7 +97,7 @@ public void run(String command, String[] args, Context context, PrintStream out)
 				initialSoftmx = cmdline.substring(start + length, end);
 				initialSoftmx = initialSoftmx.toUpperCase();
 			}
-			currentSoftmx = new Long(GCExtensions.softMx().longValue());
+			currentSoftmx = Long.valueOf(GCExtensions.softMx().longValue());
 			qualifiedCurrentSoftmx = currentSoftmx.toString();
 			Matcher m = p.matcher(initialSoftmx);
 
@@ -229,7 +229,7 @@ private int getLongestStringLength(String[] values){
 	 * a qualified size such as '4K' 
 	 */
 	private String sizeInBytes(String qSize) {
-		Long number = new Long(qSize.substring(0, qSize.length()-1));
+		Long number = Long.valueOf(qSize.substring(0, qSize.length()-1));
 		if (qSize.endsWith("K")) {
 			number = number * 1024;
 		} else if (qSize.endsWith("M")) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaFieldInstance.java
Patch:
@@ -70,11 +70,11 @@ public Object get(JavaObject object) throws CorruptDataException, MemoryAccessEx
 				case INTEGER_SIGNATURE :
 					return Integer.valueOf(getInt(object));
 				case FLOAT_SIGNATURE :
-					return new Float(getFloat(object));
+					return Float.valueOf(getFloat(object));
 				case LONG_SIGNATURE :
 					return Long.valueOf(getLong(object));
 				case DOUBLE_SIGNATURE :
-					return new Double(getDouble(object));
+					return Double.valueOf(getDouble(object));
 				case ARRAY_PREFIX_SIGNATURE :
 				case OBJECT_PREFIX_SIGNATURE :
 					J9ROMFieldShapePointer fieldShape = fieldOffset.getField();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaFieldStatic.java
Patch:
@@ -65,11 +65,11 @@ public Object get(JavaObject object) throws CorruptDataException, MemoryAccessEx
 				case INTEGER_SIGNATURE :
 					return Integer.valueOf(getInt(object));
 				case FLOAT_SIGNATURE :
-					return new Float(getFloat(object));
+					return Float.valueOf(getFloat(object));
 				case LONG_SIGNATURE :
 					return Long.valueOf(getLong(object));
 				case DOUBLE_SIGNATURE :
-					return new Double(getDouble(object));
+					return Double.valueOf(getDouble(object));
 				case ARRAY_PREFIX_SIGNATURE :
 				case OBJECT_PREFIX_SIGNATURE :
 					J9ObjectPointer data = getObject();

File: debugtools/DDR_VM/testsrc/com/ibm/j9ddr/test/stackwalker/testapp/TestApp1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -432,7 +432,7 @@ private synchronized void manySwitchesMethod(Object two, int i, int j, long k)
 								'a',
 								'b',
 								'c',
-								new Character('Z'),
+								Character.valueOf('Z'),
 								3.141459,
 								43.2,
 								23432.234,

File: debugtools/DDR_VM/testsrc/com/ibm/j9ddr/view/dtfj/test/JavaClassTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -65,7 +65,7 @@ public int compare(Object o1, Object o2) {
 	
 	public static final Comparator<Object> CONSTANCT_POOL_REFERENCES_SORT_ORDER = new Comparator<Object>() {
 		public int compare(Object o1, Object o2) {
-			return new Long(((JavaObject) o1).getID().getAddress()).compareTo(new Long(((JavaObject) o2).getID().getAddress()));
+			return Long.valueOf(((JavaObject) o1).getID().getAddress()).compareTo(Long.valueOf(((JavaObject) o2).getID().getAddress()));
 		}
 	};
 	

File: debugtools/DDR_VM/testsrc/com/ibm/j9ddr/view/dtfj/test/JavaMethodTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -42,7 +42,7 @@ public class JavaMethodTest extends DTFJUnitTest {
 		public int compare(Object o1, Object o2) {
 			ImageSection i1 = (ImageSection) o1;
 			ImageSection i2 = (ImageSection) o2;
-			return new Long(i1.getBaseAddress().getAddress()).compareTo(new Long(i2.getBaseAddress().getAddress()));
+			return Long.valueOf(i1.getBaseAddress().getAddress()).compareTo(Long.valueOf(i2.getBaseAddress().getAddress()));
 		}
 	};
 	

File: jcl/src/java.base/share/classes/java/lang/reflect/Array.java
Patch:
@@ -2,7 +2,7 @@
 package java.lang.reflect;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2010 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -71,7 +71,7 @@ public static Object get(Object array, int index) throws IllegalArgumentExceptio
 		return ((short[])array)[index];
 	} else if (arrayClass == byte[].class) {
 		/* Avoiding Byte cache yields 5x performance improvement. */
-		return new Byte(((byte[])array)[index]);
+		return Byte.valueOf(((byte[])array)[index]);
 	} else {
 		try {
 			return ((Object[])array)[index];

File: sourcetools/com.ibm.admincache/src/com/ibm/admincache/Config.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2008, 2017 IBM Corp. and others
+ * Copyright (c) 2008, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -613,7 +613,7 @@ else if (parseArguments(newArgs) != 0) {
         		addedFileName = _unicityOfFileName.get(fileNameCanonical);
         		if (addedFileName == null) {
         			fileNames().add(fileNameCanonical);
-        			_unicityOfFileName.put(fileNameCanonical, new Integer(0));
+        			_unicityOfFileName.put(fileNameCanonical, Integer.valueOf(0));
         		}
         	} else {
         		if (badFileEncountered())

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestExpireDestroyOnCorruptCache.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -55,7 +55,7 @@ public static void main(String[] args) {
 		}
 
 		/* expire all caches not used for past 1 min */
-		expireAllCachesWithTime(new Integer(1).toString());
+		expireAllCachesWithTime(Integer.valueOf(1).toString());
 		/* expire does not delete caches detected as corrupt during oscache->startup() */
 		checkFileExistsForPersistentCache("Foo");
 		

File: test/functional/DDR_Test/src/j9vm/test/corehelper/StackMapCoreGenerator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -108,7 +108,7 @@ public void stackMapTestMethod_2(Object o, WeekDays monday) {
 	 */
 	public void stackMapTestMethod_3(int i, String s, long l, char[] charArray) {
 		int[] intArray = new int[10];
-		stackMapTestMethod_4('0', false, new Integer("1"), new Exception(), 1,
+		stackMapTestMethod_4('0', false, Integer.valueOf("1"), new Exception(), 1,
 				intArray);
 
 	}

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/XMLParser.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -182,7 +182,7 @@ Integer decode(String string) throws NumberFormatException
 
 		int base = 10;
 		if (firstDigit == '0') {
-			if (i == length) return new Integer(0);
+			if (i == length) return Integer.valueOf(0);
 			if ((firstDigit = string.charAt(i++)) == 'x' || firstDigit == 'X') {
 				if (i == length) throw new NumberFormatException(string);
 				firstDigit = string.charAt(i++);
@@ -210,7 +210,7 @@ Integer decode(String string) throws NumberFormatException
 			result = -result;
 			if (result < 0) throw new NumberFormatException(string);
 		}
-		return new Integer(result);
+		return Integer.valueOf(result);
 	}
 
 	// Primitive: Scan character data

File: test/functional/JIT_Test/src/jit/test/jitt/gc/Scavenge.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -43,7 +43,7 @@ private void interpGC() {
 
 	private void tst_jit1(int recursionDepth, Object z, boolean triggerGC) {
 
-		Integer i = new Integer(recursionDepth - 1); // make a temp
+		Integer i = Integer.valueOf(recursionDepth - 1); // make a temp
 
 		if (recursionDepth == 0) {
 			if (triggerGC)
@@ -63,7 +63,7 @@ private void tst_jit1(int recursionDepth, Object z, boolean triggerGC) {
 	public void testScavenge() {
 		Scavenge x = new Scavenge();
 		for (int j = 0; j < 101; j++) {
-			x.tst_jit1(10, new Integer(j), false);
+			x.tst_jit1(10, Integer.valueOf(j), false);
 		}
 		x.tst_jit1(10, "trigger_gc_now", true);
 	}

File: test/functional/JIT_Test/src/jit/test/tr/VPTypeTests/cTypeTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2019 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -344,7 +344,7 @@ public void test012() {
 
    private void subtest012(String s[]) {
       boolean bool = false;
-      Double d = new Double(1.1);
+      Double d = Double.valueOf(1.1);
       Object o = d;
       o = s;
       try {

File: test/functional/JIT_Test/src/jit/test/tr/chtable/PreexistenceTest3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -51,7 +51,7 @@ public boolean hasNext() {
 	 }
 		
       public Object next() {
-         return new Long(cursor++);
+         return Long.valueOf(cursor++);
 	 }
 
       public void remove() {
@@ -68,7 +68,7 @@ public LongWrapper(long value) {
 		}
 
 		public Long getValue() {
-			return new Long(value);
+			return Long.valueOf(value);
 		}
 	}
 

File: test/functional/JIT_Test/src/jit/test/tr/liveMonitor/monTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2019 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -406,7 +406,7 @@ private void registerExceptions() {
 
 class A {
    public A() {
-      intValue = new Integer(6023);
+      intValue = Integer.valueOf(6023);
       lock = new Object();
    }
 

File: test/functional/JIT_Test/src/jit/test/tr/stringPeephole/BigDecimalToStringTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2018, 2018 IBM Corp. and others
+ * Copyright (c) 2018, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -38,7 +38,7 @@ public class BigDecimalToStringTest{
       @Test
       public void testBigDecimal0ToString() {
          NumberFormat format = new DecimalFormat("###,###,##0");
-         BigDecimal bigDecimalValue = new BigDecimal(new Double(0.000));
+         BigDecimal bigDecimalValue = new BigDecimal(Double.valueOf(0.000));
          String s = bigDecimalToString(format, bigDecimalValue);
          logger.debug("Converting BigDecimal with value 0 to string ...");
          Assert.assertEquals(s, "0");

File: test/functional/JIT_Test/src/jit/test/vich/JNIObjectArray.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2018 IBM Corp. and others
+ * Copyright (c) 2006, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -55,7 +55,7 @@ public void fillArray(Object[] array)
 	{
 		for (int i = 0; i < array.length; i++)
 		{
-			array[i] = new Integer(0);
+			array[i] = Integer.valueOf(0);
 		}
 	}
 	

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestLoggingMXBean.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2019 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -436,7 +436,7 @@ public final void testInvoke() {
 			if (sb != null) {
 				// Call getParentLoggerName(String) again with a bad argument type.
 				try {
-					Object retVal = sb.invoke("getParentLoggerName", new Object[] { new Long(311) },
+					Object retVal = sb.invoke("getParentLoggerName", new Object[] { Long.valueOf(311) },
 							new String[] { Long.TYPE.getName() });
 					Assert.fail("Should have thrown exception !!");
 				} catch (ReflectionException e) {
@@ -464,7 +464,7 @@ public final void testInvoke() {
 		if (sb != null) {
 			// Try invoking a bogus operation ...
 			try {
-				Object retVal = sb.invoke("GetUpStandUp", new Object[] { new Long(7446), new Long(54) },
+				Object retVal = sb.invoke("GetUpStandUp", new Object[] { Long.valueOf(7446), Long.valueOf(54) },
 						new String[] { "java.lang.Long", "java.lang.Long" });
 				Assert.fail("Unreacheable code: should have thrown an exception.");
 			} catch (ReflectionException e) {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestMemoryManagerMXBean.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -349,7 +349,7 @@ public final void testSetAttribute() {
 			logger.debug("Exception occurred, as expected: " + e1.getMessage());
 		}
 
-		attr = new Attribute("Valid", new Boolean(true));
+		attr = new Attribute("Valid", Boolean.valueOf(true));
 		try {
 			mbs.setAttribute(objName, attr);
 			Assert.fail("Unreacheable code: should have thrown an exception.");
@@ -384,7 +384,7 @@ public final void testSetAttribute() {
 	public final void testInvoke() {
 		// No operations to invoke...
 		try {
-			Object retVal = mbs.invoke(objName, "KissTheRoadOfRoratonga", new Object[] { new Long(7446), new Long(54) },
+			Object retVal = mbs.invoke(objName, "KissTheRoadOfRoratonga", new Object[] { Long.valueOf(7446), Long.valueOf(54) },
 					new String[] { "java.lang.Long", "java.lang.Long" });
 			Assert.fail("Unreacheable code: should have thrown an exception.");
 		} catch (Exception e) {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestMemoryUsage.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2019 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -206,7 +206,7 @@ public void testConstructionFailsForBadInputs() {
 	private static CompositeData createBadCompositeDataObject() {
 		CompositeData result = null;
 		String[] names = { "init", "max", "incorrect", "committed" };
-		Object[] values = { new Long(100), new Long(1000), new Long(150), new Long(500) };
+		Object[] values = { Long.valueOf(100), Long.valueOf(1000), Long.valueOf(150), Long.valueOf(500) };
 		CompositeType cType = createBadCompositeTypeObject();
 		try {
 			result = new CompositeDataSupport(cType, names, values);

File: test/functional/Java10andUp/src/org/openj9/test/stackWalker/StackWalkerTestJava10.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -52,7 +52,7 @@ public void testSanity() {
 	}
 
 	void sanityMethod_1(int i) {
-		if (i > 0) sanityMethod_1(i-1); else sanityMethod_2(new Integer(42));
+		if (i > 0) sanityMethod_1(i-1); else sanityMethod_2(Integer.valueOf(42));
 	}
 
 	private void sanityMethod_2(Integer in) {

File: test/functional/Java15andUp/src/org/openj9/test/records/RecordFinalFieldTests.java
Patch:
@@ -150,7 +150,7 @@ public void test_javaLangInvokeMethodHandles_unreflectVarHandle_instance() throw
         Field finalRecordField = TestRecord.class.getDeclaredField("recordComponent");
         finalRecordField.setAccessible(true);
         VarHandle finalRecordFieldHandle = MethodHandles.lookup().unreflectVarHandle(finalRecordField);
-        finalRecordFieldHandle.set(new Integer(5));
+        finalRecordFieldHandle.set(Integer.valueOf(5));
     }
 
     /* VarHandle.set is not supported for records. */

File: test/functional/Java8andUp/src/j9vm/test/hashCode/HashTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -151,7 +151,7 @@ public void runAndGetStats(HashedObjectFactory objectFactory) {
 			if (randomPadding) {
 				int r = rand.nextInt(128);
 				while (r > 0) {
-					Integer foo = new Integer(r);
+					Integer foo = Integer.valueOf(r);
 					r--;
 				}
 			}

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/MemoryExhauster.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@ public class MemoryExhauster {
 	public MemoryExhauster(MemoryExhauster predecessor, long i) {
 		try {
 			link = predecessor;
-			bloat = new Long(i);
+			bloat = Long.valueOf(i);
 		} catch (OutOfMemoryError e) {
 			bloat = null;
 			link = null;

File: test/functional/Java8andUp/src/org/openj9/test/contendedfields/FieldUtilities.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2018 IBM Corp. and others
+ * Copyright (c) 2015, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -98,7 +98,7 @@ public static void checkFieldAccesses(Object testObject, boolean strict) {
 				case "long": f.setLong(testObject, longValue + fieldCount);
 				break;
 				case "Object": {
-					f.set(testObject, new Integer(fieldCount));
+					f.set(testObject, Integer.valueOf(fieldCount));
 				}
 				break;
 				default: if (strict) {

File: test/functional/Java8andUp/src/org/openj9/test/java/lang/ref/Test_PhantomReference.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.lang.ref;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -42,7 +42,7 @@ protected void doneSuite() {
 	@Test
 	public void test_get() {
 		ReferenceQueue rq = new ReferenceQueue();
-		bool = new Boolean(false);
+		bool = Boolean.valueOf(false);
 		PhantomReference pr = new PhantomReference(bool, rq);
 		AssertJUnit.assertTrue("Same object returned.", pr.get() == null);
 	}
@@ -53,7 +53,7 @@ public void test_get() {
 	@Test
 	public void test_Constructor() {
 		ReferenceQueue rq = new ReferenceQueue();
-		bool = new Boolean(true);
+		bool = Boolean.valueOf(true);
 		try {
 			PhantomReference pr = new PhantomReference(bool, rq);
 			// Allow the finalizer to run to potentially enqueue

File: test/functional/Java8andUp/src/org/openj9/test/java/lang/ref/Test_WeakReference.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.lang.ref;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -43,7 +43,7 @@ protected void doneSuite() {
 	public void test_Constructor() {
 		// SM.
 		ReferenceQueue rq = new ReferenceQueue();
-		bool = new Boolean(true);
+		bool = Boolean.valueOf(true);
 		try {
 			// Allow the finalizer to run to potentially enqueue
 			WeakReference wr = new WeakReference(bool, rq);
@@ -70,7 +70,7 @@ public void test_Constructor() {
 	@Test
 	public void test_Constructor2() {
 		// SM.
-		bool = new Boolean(true);
+		bool = Boolean.valueOf(true);
 		try {
 			WeakReference wr = new WeakReference(bool);
 			// Allow the finalizer to run to potentially enqueue

File: test/functional/Java8andUp/src/org/openj9/test/java/lang/reflect/Test_Array.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.lang.reflect;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -499,7 +499,7 @@ public void test_set() {
 		Object ret = null;
 		boolean thrown = false;
 		try {
-			Array.set(x, 0, new Integer(1));
+			Array.set(x, 0, Integer.valueOf(1));
 		} catch (Exception e) {
 			AssertJUnit.assertTrue("Exception during get test: " + e.toString(), false);
 		}
@@ -514,7 +514,7 @@ public void test_set() {
 			AssertJUnit.assertTrue("Passing non-array failed to throw exception", false);
 		thrown = false;
 		try {
-			Array.set(x, 4, new Integer(1));
+			Array.set(x, 4, Integer.valueOf(1));
 		} catch (ArrayIndexOutOfBoundsException e) {
 			// Correct behaviour
 			thrown = true;

File: test/functional/Java8andUp/src/org/openj9/test/java/security/Test_AccessController.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.security;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -93,9 +93,9 @@ public void test_doPrivileged() {
 			public Object run() {
 				try {
 					AccessController.checkPermission(new AllPermission());
-					return new Boolean(false);
+					return Boolean.valueOf(false);
 				} catch (SecurityException ex) {
-					return new Boolean(true);
+					return Boolean.valueOf(true);
 				}
 			}
 		}, null);

File: test/functional/Java8andUp/src/org/openj9/test/vmArguments/VmArgumentTests.java
Patch:
@@ -1689,7 +1689,7 @@ private HashMap<String, Integer> checkArguments(ArrayList<String> actualArgument
 			int p = 0;
 			for (String a: actualArguments) {
 				if (a.startsWith(op)) {
-					argPositions.put(op, new Integer(p));
+					argPositions.put(op, Integer.valueOf(p));
 					break;
 				} else {
 					++p;

File: test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_System.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.lang;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2019 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -97,7 +97,7 @@ public void test_arraycopy() {
 		Integer b[] = new Integer[20];
 		int i = 0;
 		while (i < a.length) {
-			a[i] = new Integer(i);
+			a[i] = Integer.valueOf(i);
 			++i;
 		}
 		System.arraycopy(a, 0, b, 0, a.length);

File: test/functional/Java8andUp/src_80/org/openj9/test/java/lang/Test_System.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.lang;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -95,7 +95,7 @@ public void test_arraycopy() {
 		Integer b[] = new Integer[20];
 		int i = 0;
 		while (i < a.length) {
-			a[i] = new Integer(i);
+			a[i] = Integer.valueOf(i);
 			++i;
 		}
 		System.arraycopy(a, 0, b, 0, a.length);

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_System.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.java.lang;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -97,7 +97,7 @@ public void test_arraycopy() {
 		Integer b[] = new Integer[20];
 		int i = 0;
 		while (i < a.length) {
-			a[i] = new Integer(i);
+			a[i] = Integer.valueOf(i);
 			++i;
 		}
 		System.arraycopy(a, 0, b, 0, a.length);

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/ComplexIndyTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,7 @@ public void test_gwtTest_String() {
 	}
 	@Test(groups = { "level.extended" })
 	public void test_gwtTest_Integer() {
-		String s = com.ibm.j9.jsr292.indyn.ComplexIndy.gwtTest(new Integer(1));
+		String s = com.ibm.j9.jsr292.indyn.ComplexIndy.gwtTest(Integer.valueOf(1));
 		if (!s.equals("2")) Assert.fail("Wrong string returned'" + s +"'");
 	}
 	@Test(groups = { "level.extended" })

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/IndyTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -102,7 +102,7 @@ public void test_indyn_findStatic() {
 	//findSpecial test
 	@Test(groups = { "level.extended" })
 	public void test_indyn_findSpecial() {
-		String s = com.ibm.j9.jsr292.indyn.GenIndyn.call_tostring_of( new Integer( 1 ) );
+		String s = com.ibm.j9.jsr292.indyn.GenIndyn.call_tostring_of( Integer.valueOf( 1 ) );
 		if ( !s.equals( "1" ) ) Assert.fail( "Wrong int returned'" + s +"'" );
 	}
 	

File: test/functional/Jsr335/src/org/openj9/test/jsr335/defineAnonClass/TestUnsafeDefineAnonClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -135,7 +135,7 @@ public void testAnonClassGetOwnClassName() {
 	private void testIntField(String fieldName, Object anonInstance, Class<?> anonClass, boolean illegalAccess) {
 		try {
 			Field f = anonClass.getDeclaredField(fieldName);
-			f.set(anonInstance, new Integer(CORRECT_ANSWER));
+			f.set(anonInstance, Integer.valueOf(CORRECT_ANSWER));
 			AssertJUnit.assertFalse("Expected IllegalAccessExcpetion, but exception did not occur!", illegalAccess);
 			AssertJUnit.assertEquals("Field is not set to the correct value", CORRECT_ANSWER, f.getInt(anonInstance));
 		} catch (NoSuchFieldException | SecurityException | IllegalArgumentException e) {

File: test/functional/SharedCPEntryInvokerTests/src/org/openj9/test/invoker/MutateSplitTableRetransformationTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -96,7 +96,7 @@ protected void setUp() throws Exception {
 
 			characteristics.clear();
 			characteristics.put(ClassGenerator.VERSION, classVersion);
-			characteristics.put(ClassGenerator.IMPLEMENTS_INTERFACE, new Boolean(true));
+			characteristics.put(ClassGenerator.IMPLEMENTS_INTERFACE, Boolean.valueOf(true));
 			/*
 			 * Generate shared invokers based on invokers encoded in class
 			 * version

File: test/functional/UnsafeTest/src_80/org/openj9/test/unsafe/UnsafeTestBase.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -413,7 +413,7 @@ protected void testByte(Object target, String method) throws Exception {
 				myUnsafe.putByteVolatile(base(target, i), offset, modelByte[i]);
 			}
 			if (method.equals(ORDERED)) {
-				myUnsafe.putOrderedObject(base(target, i), offset, new Byte(
+				myUnsafe.putOrderedObject(base(target, i), offset, Byte.valueOf(
 						(byte) -1));
 			} else {
 				myUnsafe.putByte(base(target, i), offset, modelByte[i]);

File: test/functional/VM_Test/src/j9vm/test/classunloading/FinalizationIndicator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2012 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -62,14 +62,14 @@ public class FinalizationIndicator {
 
 public FinalizationIndicator(String name) {
 		//System.out.println("FinalizationIndicator instantiated for " + name);
-		isInstanceFinalized.put(name, new Boolean(false));
+		isInstanceFinalized.put(name, Boolean.valueOf(false));
 		this.name = name;
 }
 public static void setLock(Counter counterLock) {
 	FinalizationIndicator.counterLock = counterLock;
 }
 protected void finalize() {
-	isInstanceFinalized.put(name, new Boolean(true));
+	isInstanceFinalized.put(name, Boolean.valueOf(true));
 	System.out.println(name + " unloaded");
 	counterLock.increment();
 	if(counterLock.atDesiredValue())

File: test/functional/VM_Test/src/j9vm/test/multipleorphans/InvokeDynamicTestGenerator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -78,7 +78,7 @@ public static byte[] generateClassData(int value) {
 			mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, "addIntegers", "(II)I", null, null);
 			mv.visitCode();
 			//mv.visitIntInsn(BIPUSH, value);
-			mv.visitLdcInsn(new Integer(value));
+			mv.visitLdcInsn(Integer.valueOf(value));
 			mv.visitFieldInsn(PUTSTATIC, GENERATED_CLASS_NAME.replace('.', '/'), "random", "I");
 			mv.visitVarInsn(ILOAD, 0);
 			mv.visitVarInsn(ILOAD, 1);

File: test/functional/VM_Test/src/j9vm/test/multipleorphans/InvokeDynamicWithMultipleOrphanComparisonTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -48,7 +48,7 @@ public static void main(String args[]) throws Exception {
 		Class<?> cls = Class.forName(InvokeDynamicTestGenerator.GENERATED_CLASS_NAME, true, classLoader);
 		Method m = cls.getMethod("addIntegers", new Class[] { int.class, int.class });
 		try {
-			int result = ((Integer)m.invoke(null, new Object[] { new Integer(10), new Integer(10) })).intValue();
+			int result = ((Integer)m.invoke(null, new Object[] { Integer.valueOf(10), Integer.valueOf(10) })).intValue();
 			System.err.println("Result = " + result);
 			System.err.println(PASS_STRING);
 		} catch (Exception e) {

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java
Patch:
@@ -191,7 +191,7 @@ private static void testWithFieldOnNonValueType(ClassWriter cw, String className
 		mv.visitTypeInsn(NEW, className);
 		mv.visitInsn(DUP);
 		mv.visitMethodInsn(INVOKESPECIAL, className, "<init>", "()V", false);
-		mv.visitLdcInsn(new Long(123L));
+		mv.visitLdcInsn(Long.valueOf(123L));
 		mv.visitFieldInsn(WITHFIELD, className, "longField", "J");
 		mv.visitInsn(ARETURN);
 		mv.visitMaxs(1, 2);
@@ -206,7 +206,7 @@ private static void testWithFieldOnNull(ClassWriter cw, String className, String
 		MethodVisitor mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, "testWithFieldOnNull", "()Ljava/lang/Object;", null, null);
 		mv.visitCode();
 		mv.visitInsn(ACONST_NULL);
-		mv.visitLdcInsn(new Long(123L));
+		mv.visitLdcInsn(Long.valueOf(123L));
 		mv.visitFieldInsn(WITHFIELD, className, "longField", "J");
 		mv.visitInsn(ARETURN);
 		mv.visitMaxs(1, 2);
@@ -223,7 +223,7 @@ private static void testWithFieldOnNonExistentClass(ClassWriter cw, String class
 		mv.visitTypeInsn(NEW, className);
 		mv.visitInsn(DUP);
 		mv.visitMethodInsn(INVOKESPECIAL, className, "<init>", "()V", false);
-		mv.visitLdcInsn(new Long(123L));
+		mv.visitLdcInsn(Long.valueOf(123L));
 		mv.visitFieldInsn(WITHFIELD, "NonExistentClass", "longField", "J");
 		mv.visitInsn(ARETURN);
 		mv.visitMaxs(1, 2);

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/decompResolveFrame/ResolveFrameMain.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 public class ResolveFrameMain 
 {
-    static Integer i1 = new Integer(1234);
+    static Integer i1 = Integer.valueOf(1234);
     static double  d1 = 2863311530.0;
     static long    l1 = 1234567;
 

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/decompResolveFrame/ResolveFrame_TestInterfaceMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,7 +39,7 @@ public boolean testMethod(double d1, Integer i1, long l1, float f1, float f2, fl
                               float f4, float f5, float f6, float f7, float f8, float f9, float f10, float f11, float f12, float f13) 
     {
      
-        Integer r_i1 = new Integer(1234);
+        Integer r_i1 = Integer.valueOf(1234);
         double  r_d1 = 2863311530.0;
         long    r_l1 = 1234567;
 

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/decompResolveFrame/ResolveFrame_TestMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,7 +28,7 @@ public boolean testMethod(double d1, Integer i1, long l1, float f1, float f2, fl
                               float f4, float f5, float f6, float f7, float f8, float f9, float f10, float f11, float f12, float f13) 
     {
      
-        Integer r_i1 = new Integer(1234);
+        Integer r_i1 = Integer.valueOf(1234);
         double  r_d1 = 2863311530.0;
         long    r_l1 = 1234567;
 

File: test/functional/cmdLineTests/shareClassTests/utils/src/Utilities/Loader.java
Patch:
@@ -67,7 +67,7 @@ public void testWrapper(String testFileName){
 		String classPath = props.getProperty("ClassPath");
 		
 		String nctls = props.getProperty("NumberOfClassesToLoad");
-		Integer i = new Integer(nctls);
+		Integer i = Integer.valueOf(nctls);
 		int classesToLoadCount = i.intValue();
 		
 		String[] classesToLoad = new String[classesToLoadCount];

File: test/functional/cmdLineTests/shareClassTests/utils/src/Utilities/Verifier.java
Patch:
@@ -66,7 +66,7 @@ public void testWrapper(String testFileName){
 		String classPath = props.getProperty("ClassPath");
 		
 		String nctls = props.getProperty("NumberOfClassesToVerify");
-		Integer i = new Integer(nctls);
+		Integer i = Integer.valueOf(nctls);
 		int classesToVerifyCount = i.intValue();
 		
 		String[] classesToVerify = new String[classesToVerifyCount];

File: test/functional/cmdLineTests/vmRuntimeState/src/ActiveIdleTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -152,7 +152,7 @@ public static void doWork() {
 			// create a list of numbers
 			for (int i = 0; i < 1000; i++) {
 				long number = System.nanoTime() % 1000000;
-				list.add(new Long(number));
+				list.add(Long.valueOf(number));
 			}
 
 			// find the prime numbers in the list

File: jcl/src/java.base/share/classes/java/lang/invoke/OpenJDKCompileStub.java
Patch:
@@ -1,7 +1,7 @@
-/*[INCLUDE-IF Sidecar18-SE-OpenJ9]*/
+/*[INCLUDE-IF Sidecar18-SE]*/
 
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/OpenJDKCompileStub.java
Patch:
@@ -1,7 +1,7 @@
-/*[INCLUDE-IF Sidecar18-SE-OpenJ9]*/
+/*[INCLUDE-IF Sidecar18-SE]*/
 
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -608,9 +608,6 @@ static MethodHandle getMH(int len){
 		final static MethodHandle spreader_7 = MethodHandles.spreadInvoker(MethodType.genericMethodType(7), 0);
 		
 	}
-
-	
-	private static native Object invokeWithArgumentsHelper(MethodHandle mh, Object[] args);
 	
 	/**
 	 * Helper method to call {@link #invokeWithArguments(Object[])}.

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -4842,7 +4842,7 @@ public Optional<ClassDesc> describeConstable() {
 	 * @return field descriptor of Class instance
 	 */
 	public String descriptorString() {
-		/* see MethodType.getBytecodeStringName */
+		/* see MethodTypeHelper.getBytecodeStringName */
 
 		if (this.isPrimitive()) {
 			if (this == int.class) {

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldHandle.java
Patch:
@@ -66,7 +66,7 @@ abstract class FieldHandle extends PrimitiveHandle {
 	}
 
 	final Class<?> finishFieldInitialization(Class<?> accessClass) throws IllegalAccessException, NoSuchFieldException {
-		String signature = MethodType.getBytecodeStringName(fieldClass);
+		String signature = MethodTypeHelper.getBytecodeStringName(fieldClass);
 		try {
 			boolean isStaticLookup = ((KIND_GETSTATICFIELD == this.kind) || (KIND_PUTSTATICFIELD == this.kind)); 
 			return lookupField(referenceClass, name, signature, isStaticLookup, accessClass);

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldVarHandle.java
Patch:
@@ -61,7 +61,7 @@ abstract class FieldVarHandle extends VarHandle {
 		int header = (isStatic ? 0 : VM.OBJECT_HEADER_SIZE);
 
 		/* The native lookupField method also modifies the definingClass field. */
-		this.vmslot = lookupField(definingClass, fieldName, MethodType.getBytecodeStringName(fieldType), fieldType, isStatic, accessClass) + header;
+		this.vmslot = lookupField(definingClass, fieldName, MethodTypeHelper.getBytecodeStringName(fieldType), fieldType, isStatic, accessClass) + header;
 
 		checkSetterFieldFinality(handleTable);
 	}
@@ -141,7 +141,7 @@ private static void finalityCheckFailedExceptionThrower() {
 	 * 
 	 * @param lookupClass The class where we start the lookup of the field
 	 * @param name The field name
-	 * @param signature Equivalent of the String returned by MethodType.getBytecodeStringName
+	 * @param signature Equivalent of the String returned by MethodTypeHelper.getBytecodeStringName
 	 * @param type The exact type of the field. This must match the signature.
 	 * @param isStatic A boolean value indicating whether the field is static.
 	 * @param accessClass The class being used to look up the field.

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2952,7 +2952,7 @@ public static MethodHandle constant(Class<?> returnType, Object constantValue) t
 			if (constantValue == null) {
 				throw new IllegalArgumentException();
 			}
-			Class<?> unwrapped = MethodType.unwrapPrimitive(constantValue.getClass());
+			Class<?> unwrapped = MethodTypeHelper.unwrapPrimitive(constantValue.getClass());
 			if ((returnType != unwrapped) && !FilterHelpers.checkIfWideningPrimitiveConversion(unwrapped, returnType)) {
 				throw new ClassCastException();
 			}
@@ -3998,7 +3998,7 @@ public static MethodHandle insertArguments(MethodHandle originalHandle, int loca
 			}
 			if (clazz.isPrimitive()) {
 				Objects.requireNonNull(value);
-				Class<?> unwrapped = MethodType.unwrapPrimitive(valueClazz);
+				Class<?> unwrapped = MethodTypeHelper.unwrapPrimitive(valueClazz);
 				if ((clazz != unwrapped) && !FilterHelpers.checkIfWideningPrimitiveConversion(unwrapped, clazz)) {
 					clazz.cast(value);	// guaranteed to throw ClassCastException
 				}

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -4842,7 +4842,7 @@ public Optional<ClassDesc> describeConstable() {
 	 * @return field descriptor of Class instance
 	 */
 	public String descriptorString() {
-		/* see MethodType.getBytecodeStringName */
+		/* see MethodTypeHelper.getBytecodeStringName */
 
 		if (this.isPrimitive()) {
 			if (this == int.class) {

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldHandle.java
Patch:
@@ -66,7 +66,7 @@ abstract class FieldHandle extends PrimitiveHandle {
 	}
 
 	final Class<?> finishFieldInitialization(Class<?> accessClass) throws IllegalAccessException, NoSuchFieldException {
-		String signature = MethodType.getBytecodeStringName(fieldClass);
+		String signature = MethodTypeHelper.getBytecodeStringName(fieldClass);
 		try {
 			boolean isStaticLookup = ((KIND_GETSTATICFIELD == this.kind) || (KIND_PUTSTATICFIELD == this.kind)); 
 			return lookupField(referenceClass, name, signature, isStaticLookup, accessClass);

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldVarHandle.java
Patch:
@@ -61,7 +61,7 @@ abstract class FieldVarHandle extends VarHandle {
 		int header = (isStatic ? 0 : VM.OBJECT_HEADER_SIZE);
 
 		/* The native lookupField method also modifies the definingClass field. */
-		this.vmslot = lookupField(definingClass, fieldName, MethodType.getBytecodeStringName(fieldType), fieldType, isStatic, accessClass) + header;
+		this.vmslot = lookupField(definingClass, fieldName, MethodTypeHelper.getBytecodeStringName(fieldType), fieldType, isStatic, accessClass) + header;
 
 		checkSetterFieldFinality(handleTable);
 	}
@@ -141,7 +141,7 @@ private static void finalityCheckFailedExceptionThrower() {
 	 * 
 	 * @param lookupClass The class where we start the lookup of the field
 	 * @param name The field name
-	 * @param signature Equivalent of the String returned by MethodType.getBytecodeStringName
+	 * @param signature Equivalent of the String returned by MethodTypeHelper.getBytecodeStringName
 	 * @param type The exact type of the field. This must match the signature.
 	 * @param isStatic A boolean value indicating whether the field is static.
 	 * @param accessClass The class being used to look up the field.

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2952,7 +2952,7 @@ public static MethodHandle constant(Class<?> returnType, Object constantValue) t
 			if (constantValue == null) {
 				throw new IllegalArgumentException();
 			}
-			Class<?> unwrapped = MethodType.unwrapPrimitive(constantValue.getClass());
+			Class<?> unwrapped = MethodTypeHelper.unwrapPrimitive(constantValue.getClass());
 			if ((returnType != unwrapped) && !FilterHelpers.checkIfWideningPrimitiveConversion(unwrapped, returnType)) {
 				throw new ClassCastException();
 			}
@@ -3998,7 +3998,7 @@ public static MethodHandle insertArguments(MethodHandle originalHandle, int loca
 			}
 			if (clazz.isPrimitive()) {
 				Objects.requireNonNull(value);
-				Class<?> unwrapped = MethodType.unwrapPrimitive(valueClazz);
+				Class<?> unwrapped = MethodTypeHelper.unwrapPrimitive(valueClazz);
 				if ((clazz != unwrapped) && !FilterHelpers.checkIfWideningPrimitiveConversion(unwrapped, clazz)) {
 					clazz.cast(value);	// guaranteed to throw ClassCastException
 				}

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/Builder.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1999, 2019 IBM Corp. and others
+ * Copyright (c) 1999, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -347,7 +347,6 @@ public boolean build() {
 						if (!updateAllCopyrights) {
 							cal.setTime(new Date(sourceFile.lastModified()));
 						}
-						jpp.setCopyrightYear(cal.get(Calendar.YEAR));
 						jpp.addValidFlags(registry.getValidFlags());
 						/*[PR 120411] Use a javadoc tag instead of TestBootpath preprocessor tag*/
 						jpp.setTestBootPath(isTestsBootPath);

File: jcl/src/java.base/share/classes/java/lang/invoke/IndirectHandle.java
Patch:
@@ -26,6 +26,9 @@
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
 
+import static java.lang.invoke.MethodHandleHelper.UNSAFE;
+import static java.lang.invoke.MethodHandleHelper.getJ9ClassFromClass;
+
 abstract class IndirectHandle extends PrimitiveHandle {
 	IndirectHandle(MethodType type, Class<?> referenceClass, String name, byte kind, int modifiers) {
 		super(type, referenceClass, name, kind, modifiers, null);

File: jcl/src/java.base/share/classes/java/lang/invoke/InterfaceHandle.java
Patch:
@@ -24,6 +24,8 @@
 
 import java.lang.reflect.Method;
 
+import static java.lang.invoke.MethodHandleHelper.getJ9ClassFromClass;
+
 /*
  * InterfaceHandle is a MethodHandle that does interface dispatch 
  * on the receiver.  

File: jcl/src/java.base/share/classes/java/lang/invoke/PrimitiveHandle.java
Patch:
@@ -34,6 +34,9 @@
 import java.util.List;
 /*[ENDIF] Java15 */
 
+import static java.lang.invoke.MethodHandleHelper.UNSAFE;
+import static java.lang.invoke.MethodHandleHelper.JITHELPERS;
+
 /**
  * PrimitiveHandle is a subclass of MethodHandle used for grouping MethodHandles that directly refer a Java-level method. 
  * 

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticProperties.java
Patch:
@@ -369,10 +369,10 @@ public static DiagnosticProperties makeErrorProperties(String message) {
 	 * Encode information about an exception into properties.
 	 *
 	 * @param e Exception object
-	 * @return Properties object
+	 * @return DiagnosticProperties object
 	 */
-	public static Properties makeExceptionProperties(Exception e) {
-		Properties props = new Properties();
+	public static DiagnosticProperties makeExceptionProperties(Exception e) {
+		DiagnosticProperties props = new DiagnosticProperties();
 		props.put(IPC.PROPERTY_DIAGNOSTICS_ERROR, Boolean.toString(true));
 		props.put(IPC.PROPERTY_DIAGNOSTICS_ERRORTYPE, e.getClass().getName());
 		String msg = e.getMessage();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ProgramHeaderEntry.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2014 IBM Corp. and others
+ * Copyright (c) 2004, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ProgramHeaderEntry.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2014 IBM Corp. and others
+ * Copyright (c) 2004, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/NewElfDump.java
Patch:
@@ -1547,8 +1547,7 @@ private Object readProcess(DataEntry entry, Builder builder, Object addressSpace
 		}
 
 		return buildProcess(builder, addressSpace, pid, commandLine,
-					getEnvironmentVariables(builder), failingThread,
-					threads.iterator(), executable);
+				environment, failingThread, threads.iterator(), executable);
 	}
 
 	private Object buildProcess(Builder builder, Object addressSpace, String pid, String commandLine,

File: test/functional/VM_Test/src/j9vm/test/classunloading/testcases/ClassPathSettingClassLoaderTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2012 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,7 +22,6 @@
 package j9vm.test.classunloading.testcases;
 
 import j9vm.test.classunloading.*;
-import java.lang.ClassPathSettingClassLoader;
 
 /**
  *		Create a ClassPathSettingClassLoader, and let it be unloaded.  This loader attempts to set a vm

File: jcl/src/java.base/share/classes/java/lang/invoke/CallSite.java
Patch:
@@ -96,9 +96,9 @@ static MethodHandle initialTarget(MethodType type) {
 		if (null == initialTargetHandle) {
 			initialTargetHandle = lookupInitialTarget();
 		}
-		initialTargetHandle = initialTargetHandle.asType(methodType(type.returnType));
+		initialTargetHandle = initialTargetHandle.asType(methodType(type.returnType()));
 		/* Adapt the initial target to be compliant with what the caller expects */
-		return MethodHandles.dropArguments(initialTargetHandle, 0, type.arguments);
+		return MethodHandles.dropArguments(initialTargetHandle, 0, type.ptypes());
 	}
 	
 	/* Initialize the cached MethodHandle for initialTarget */

File: jcl/src/java.base/share/classes/java/lang/invoke/CollectHandle.java
Patch:
@@ -53,7 +53,7 @@ final class CollectHandle extends MethodHandle {
 		this.collectArraySize = collectArraySize;
 		this.next = next;
 		if (collectArraySize == 0) {
-			emptyArray = Array.newInstance(next.type.arguments[collectPosition].getComponentType(), 0);
+			emptyArray = Array.newInstance(next.type.parameterType(collectPosition).getComponentType(), 0);
 		} else {
 			emptyArray = null;
 		}
@@ -120,7 +120,7 @@ protected final ThunkTuple computeThunks(Object arg) {
 
 	private static final Object allocateArray(CollectHandle mh) {
 		return Array.newInstance(
-			mh.next.type.arguments[mh.collectPosition].getComponentType(),
+			mh.next.type.parameterType(mh.collectPosition).getComponentType(),
 			mh.collectArraySize);
 	}
 

File: jcl/src/java.base/share/classes/java/lang/invoke/FilterReturnHandle.java
Patch:
@@ -33,7 +33,7 @@ final class FilterReturnHandle extends ConvertHandle {
 	final MethodHandle filter;
 	
 	FilterReturnHandle(MethodHandle next, MethodHandle filter) {
-		super(next, next.type.changeReturnType(filter.type.returnType), KIND_FILTERRETURN, filter.type()); //$NON-NLS-1$
+		super(next, next.type.changeReturnType(filter.type.returnType()), KIND_FILTERRETURN, filter.type()); //$NON-NLS-1$
 		this.filter = filter;
 	}
 

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -902,7 +902,6 @@ public int parameterCount() {
 		return arguments.length;
 	}
 
-/*[IF Sidecar19-SE]*/
 	/**
 	 * Method to return array of arguments
 	 *
@@ -911,7 +910,6 @@ public int parameterCount() {
 	Class<?>[] ptypes() {
 		return arguments;
 	}
-/*[ENDIF] Sidecar19-SE */
 
 	/**
 	 * Helper method to return the parameter types in a List.

File: jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Panama]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -80,7 +80,7 @@ protected final ThunkTuple computeThunks(Object arg) {
 
 	private void checkIfPrimitiveType(MethodType newType) {
 		/* Throw InternalError if the newType contains non-primitives. */
-		Class<?> retType = newType.returnType;
+		Class<?> retType = newType.returnType();
 		if (!retType.isPrimitive()) {
 			throw new InternalError("newType has non-primitive return type, only primtives are supported");  //$NON-NLS-1$
 		}

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -880,8 +880,8 @@ public final MethodHandle toMethodHandle(AccessMode accessMode) {
 			/* The resulting method handle must come with the same signature as the requested access mode method
 			 * so as to throw out UnsupportedOperationException from that method.
 			 */
-			mh = mh.asType(MethodType.methodType(mt.returnType));
-			mh = MethodHandles.dropArguments(mh, 0, mt.arguments);
+			mh = mh.asType(MethodType.methodType(mt.returnType()));
+			mh = MethodHandles.dropArguments(mh, 0, mt.ptypes());
 		}
 		
 		return mh;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/JextractCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,7 +32,7 @@ public class JextractCommand extends Command
 {
 	public JextractCommand()
 	{
-		addCommand("jextract", "<filename>", "ump a JExtract file to filename (or console)");
+		addCommand("jextract", "<filename>", "dump a JExtract file to filename (or console)");
 	}
 
 	public void run(String command, String[] args, Context context, PrintStream out) throws DDRInteractiveCommandException 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/JextractCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,7 +32,7 @@ public class JextractCommand extends Command
 {
 	public JextractCommand()
 	{
-		addCommand("jextract", "<filename>", "ump a JExtract file to filename (or console)");
+		addCommand("jextract", "<filename>", "dump a JExtract file to filename (or console)");
 	}
 
 	public void run(String command, String[] args, Context context, PrintStream out) throws DDRInteractiveCommandException 

File: jcl/src/java.base/share/classes/java/lang/invoke/CallSite.java
Patch:
@@ -96,9 +96,9 @@ static MethodHandle initialTarget(MethodType type) {
 		if (null == initialTargetHandle) {
 			initialTargetHandle = lookupInitialTarget();
 		}
-		initialTargetHandle = initialTargetHandle.asType(methodType(type.returnType));
+		initialTargetHandle = initialTargetHandle.asType(methodType(type.returnType()));
 		/* Adapt the initial target to be compliant with what the caller expects */
-		return MethodHandles.dropArguments(initialTargetHandle, 0, type.arguments);
+		return MethodHandles.dropArguments(initialTargetHandle, 0, type.ptypes());
 	}
 	
 	/* Initialize the cached MethodHandle for initialTarget */

File: jcl/src/java.base/share/classes/java/lang/invoke/CollectHandle.java
Patch:
@@ -53,7 +53,7 @@ final class CollectHandle extends MethodHandle {
 		this.collectArraySize = collectArraySize;
 		this.next = next;
 		if (collectArraySize == 0) {
-			emptyArray = Array.newInstance(next.type.arguments[collectPosition].getComponentType(), 0);
+			emptyArray = Array.newInstance(next.type.parameterType(collectPosition).getComponentType(), 0);
 		} else {
 			emptyArray = null;
 		}
@@ -120,7 +120,7 @@ protected final ThunkTuple computeThunks(Object arg) {
 
 	private static final Object allocateArray(CollectHandle mh) {
 		return Array.newInstance(
-			mh.next.type.arguments[mh.collectPosition].getComponentType(),
+			mh.next.type.parameterType(mh.collectPosition).getComponentType(),
 			mh.collectArraySize);
 	}
 

File: jcl/src/java.base/share/classes/java/lang/invoke/FilterReturnHandle.java
Patch:
@@ -33,7 +33,7 @@ final class FilterReturnHandle extends ConvertHandle {
 	final MethodHandle filter;
 	
 	FilterReturnHandle(MethodHandle next, MethodHandle filter) {
-		super(next, next.type.changeReturnType(filter.type.returnType), KIND_FILTERRETURN, filter.type()); //$NON-NLS-1$
+		super(next, next.type.changeReturnType(filter.type.returnType()), KIND_FILTERRETURN, filter.type()); //$NON-NLS-1$
 		this.filter = filter;
 	}
 

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -902,7 +902,6 @@ public int parameterCount() {
 		return arguments.length;
 	}
 
-/*[IF Sidecar19-SE]*/
 	/**
 	 * Method to return array of arguments
 	 *
@@ -911,7 +910,6 @@ public int parameterCount() {
 	Class<?>[] ptypes() {
 		return arguments;
 	}
-/*[ENDIF] Sidecar19-SE */
 
 	/**
 	 * Helper method to return the parameter types in a List.

File: jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Panama]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -80,7 +80,7 @@ protected final ThunkTuple computeThunks(Object arg) {
 
 	private void checkIfPrimitiveType(MethodType newType) {
 		/* Throw InternalError if the newType contains non-primitives. */
-		Class<?> retType = newType.returnType;
+		Class<?> retType = newType.returnType();
 		if (!retType.isPrimitive()) {
 			throw new InternalError("newType has non-primitive return type, only primtives are supported");  //$NON-NLS-1$
 		}

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -880,8 +880,8 @@ public final MethodHandle toMethodHandle(AccessMode accessMode) {
 			/* The resulting method handle must come with the same signature as the requested access mode method
 			 * so as to throw out UnsupportedOperationException from that method.
 			 */
-			mh = mh.asType(MethodType.methodType(mt.returnType));
-			mh = MethodHandles.dropArguments(mh, 0, mt.arguments);
+			mh = mh.asType(MethodType.methodType(mt.returnType()));
+			mh = MethodHandles.dropArguments(mh, 0, mt.ptypes());
 		}
 		
 		return mh;

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2160,6 +2160,9 @@ public Class<?> defineClass(byte[] classBytes) throws NullPointerException, Ille
 			JavaLangAccess jlAccess = SharedSecrets.getJavaLangAccess();
 			Class<?> targetClass = jlAccess.defineClass(accessClass.getClassLoader(), targetClassName, classBytes, accessClass.getProtectionDomain(), null);
 			
+			/* Class needs to be linked but without having been initialized */
+			getVMLangAccess().prepare(targetClass);
+
 			return targetClass;
 		}
 		/*[ENDIF] Sidecar19-SE-OpenJ9*/

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleNatives.java
Patch:
@@ -86,6 +86,8 @@ static boolean refKindIsConstructor(byte kind) {
 	static Object classData(Class<?> c) {
 		return JLA.classData(c);
 	}
+
+	native static void checkClassBytes(byte[] bytes);
 	/*[ENDIF] Java15 */
 }
 /*[ENDIF] Java11 */

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/LinearDumper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -661,7 +661,7 @@ private static String getRegionValueString(J9ClassRegion region)
 	}
 	private int getUTF8Length(J9UTF8Pointer j9utf8Pointer) throws CorruptDataException {
 
-		UDATA length = new UDATA(j9utf8Pointer.length().longValue() + J9UTF8.SIZEOF - U8.SIZEOF * 2 /*TODO sizeof(utf8->data)*/);
+		UDATA length = new UDATA(j9utf8Pointer.length().longValue() + J9UTF8Helper.J9UTF8_HEADER_SIZE);
 		if (length.anyBitsIn(1)) {
 			length = length.add(1);
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ShrCCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -986,7 +986,7 @@ private void dbgShrcPrintAllStats(PrintStream out, J9JavaVMPointer vm, J9SharedC
 				} else if (itemType.eq(TYPE_SCOPE)) {
 					utf8 = J9UTF8Pointer.cast(ShcItemHelper.ITEMDATA(it));
 					scopeMetaLen += ShcItem.SIZEOF + ShcItemHdr.SIZEOF;
-					scopeDataLen += J9UTF8.SIZEOF + utf8.length().longValue();
+					scopeDataLen += J9UTF8Helper.J9UTF8_HEADER_SIZE + utf8.length().longValue();
 					if ((statTypes & SCOPE_STATS) != 0) {
 						entryFound = true;
 						CommandUtils.dbgPrint(out, "%d: %s SCOPE !j9utf8 %s %s\n", it.jvmID().longValue(), it.getHexAddress(), utf8.getHexAddress(), J9UTF8Helper.stringValue(utf8));
@@ -1080,7 +1080,7 @@ private void dbgShrcPrintAllStats(PrintStream out, J9JavaVMPointer vm, J9SharedC
 				} else if (itemType.eq(TYPE_PREREQ_CACHE)) { 
 					utf8 = J9UTF8Pointer.cast(ShcItemHelper.ITEMDATA(it));
 					scopeMetaLen += ShcItem.SIZEOF + ShcItemHdr.SIZEOF;
-					scopeDataLen += J9UTF8.SIZEOF + utf8.length().longValue();
+					scopeDataLen += J9UTF8Helper.J9UTF8_HEADER_SIZE + utf8.length().longValue();
 					if ((statTypes & PREREQ_CACHE_STATS) != 0) {
 						entryFound = true;
 						CommandUtils.dbgPrint(out, "%d: %s PREREQ CACHE UNIQUE ID !j9utf8 %s %s\n", it.jvmID().longValue(), it.getHexAddress(), utf8.getHexAddress(), J9UTF8Helper.stringValue(utf8));

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureHeader.java
Patch:
@@ -154,7 +154,7 @@ public void readBlobVersion(ImageInputStream ddrStream) throws IOException {
 		switch(configVersion) {
 			case 1 :
 				int id = ddrStream.readInt();
-				if(id >= BlobID.unknown.ordinal()) {
+				if (id < 0 || id >= BlobID.unknown.ordinal()) {
 					blobID = BlobID.unknown;
 				} else {
 					blobID = BlobID.values()[id];
@@ -165,7 +165,7 @@ public void readBlobVersion(ImageInputStream ddrStream) throws IOException {
 				for(int i = 0; i < 32; i++) {
 					char c = (char)ddrStream.readByte();
 					if(c == 0) {
-						terminated |= terminated;
+						terminated = true;
 					} else {
 						if(!terminated) {
 							builder.append(c);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureHeader.java
Patch:
@@ -154,7 +154,7 @@ public void readBlobVersion(ImageInputStream ddrStream) throws IOException {
 		switch(configVersion) {
 			case 1 :
 				int id = ddrStream.readInt();
-				if(id >= BlobID.unknown.ordinal()) {
+				if (id < 0 || id >= BlobID.unknown.ordinal()) {
 					blobID = BlobID.unknown;
 				} else {
 					blobID = BlobID.values()[id];
@@ -165,7 +165,7 @@ public void readBlobVersion(ImageInputStream ddrStream) throws IOException {
 				for(int i = 0; i < 32; i++) {
 					char c = (char)ddrStream.readByte();
 					if(c == 0) {
-						terminated |= terminated;
+						terminated = true;
 					} else {
 						if(!terminated) {
 							builder.append(c);

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -51,7 +51,7 @@
  * 11) make -f run_configure.mk && make compile && make _sanity
  */
 
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity" }, invocationCount = 2)
 public class ValueTypeTests {
 	static Lookup lookup = MethodHandles.lookup();
 	static Unsafe myUnsafe = null;

File: test/functional/Java15andUp/src/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -23,7 +23,6 @@
  *******************************************************************************/
 
 import org.testng.annotations.Test;
-import org.testng.log4testng.Logger;
 
 import org.testng.AssertJUnit;
 

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -51,7 +51,7 @@
  * 11) make -f run_configure.mk && make compile && make _sanity
  */
 
-@Test(groups = { "level.sanity" })
+@Test(groups = { "level.sanity" }, invocationCount = 2)
 public class ValueTypeTests {
 	static Lookup lookup = MethodHandles.lookup();
 	static Unsafe myUnsafe = null;

File: jcl/src/java.base/share/classes/java/lang/invoke/ArgumentConversionHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/AsTypeHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/BootstrapMethodInvoker.java
Patch:
@@ -1,7 +1,7 @@
-/*[INCLUDE-IF Java11]*/
+/*[INCLUDE-IF Java11 & !OPENJDK_METHODHANDLES]*/
 
 /*******************************************************************************
- * Copyright (c) 2018, 2018 IBM Corp. and others
+ * Copyright (c) 2018, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/BruteArgumentMoverHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2019 IBM Corp. and others
+ * Copyright (c) 2013, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/CallSite.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
  * Copyright (c) 2011, 2020 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/CatchHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/CollectHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/ConstantCallSite.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2018 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/ConstantHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/ConstructorHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/ConvertHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/DirectHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/DynamicInvokerHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/ExplicitCastHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldGetterHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldSetterHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FieldVarHandle.java
Patch:
@@ -113,14 +113,14 @@ void checkSetterFieldFinality(MethodHandle[] handleTable) {
 		if (Modifier.isFinal(modifiers)) {
 			MethodHandle exceptionThrower;
 			try {
-				exceptionThrower = MethodHandles.Lookup.internalPrivilegedLookup.findStatic(FieldVarHandle.class, "finalityCheckFailedExceptionThrower", methodType(void.class));
+				exceptionThrower = MethodHandles.Lookup.IMPL_LOOKUP.findStatic(FieldVarHandle.class, "finalityCheckFailedExceptionThrower", methodType(void.class));
 			} catch (IllegalAccessException | NoSuchMethodException e) {
 				throw new InternalError(e);
 			}
 			for (AccessMode mode : AccessMode.values()) {
 				if (mode.isSetter) {
 					MethodHandle mh = handleTable[mode.ordinal()];
-					Class<?>[] args = mh.type.arguments;
+					Class<?>[] args = mh.type().ptypes();
 					handleTable[mode.ordinal()] = MethodHandles.dropArguments(exceptionThrower, 0, args);
 				}
 			}

File: jcl/src/java.base/share/classes/java/lang/invoke/FilterArgumentsHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FilterArgumentsWithCombinerHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Java12]*/
+/*[INCLUDE-IF Java12 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2018, 2019 IBM Corp. and others
+ * Copyright (c) 2018, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FilterReturnHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FinallyHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF Sidecar19-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2016 IBM Corp. and others
+ * Copyright (c) 2016, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/FoldHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2017 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/GuardWithTestHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/HandleCache.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/IndirectHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/InfoFromMemberName.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar18-SE-OpenJ9]*/
+/*[INCLUDE-IF Sidecar18-SE-OpenJ9 & !OPENJDK_METHODHANDLES]*/
 
 /*******************************************************************************
  * Copyright (c) 2017, 2020 IBM Corp. and others

File: jcl/src/java.base/share/classes/java/lang/invoke/Insert1Handle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/Insert1IntHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/Insert2Handle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/Insert3Handle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/InsertHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/InterfaceHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/InvokeExactHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/InvokeGenericHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/LoopHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF Sidecar19-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
  * Copyright (c) 2009, 2020 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleCache.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2014, 2014 IBM Corp. and others
+ * Copyright (c) 2014, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleInfo.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
+/*[INCLUDE-IF Sidecar18-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2014, 2019 IBM Corp. and others
+ * Copyright (c) 2014, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleInfoImpl.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
+/*[INCLUDE-IF Sidecar18-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2014, 2018 IBM Corp. and others
+ * Copyright (c) 2014, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
+/*[INCLUDE-IF Sidecar18-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
  * Copyright (c) 2009, 2020 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -902,7 +902,7 @@ public int parameterCount() {
 		return arguments.length;
 	}
 
-/*[IF Java12]*/
+/*[IF Sidecar19-SE]*/
 	/**
 	 * Method to return array of arguments
 	 *
@@ -911,7 +911,7 @@ public int parameterCount() {
 	Class<?>[] ptypes() {
 		return arguments;
 	}
-/*[ENDIF]*/
+/*[ENDIF] Sidecar19-SE */
 
 	/**
 	 * Helper method to return the parameter types in a List.

File: jcl/src/java.base/share/classes/java/lang/invoke/MutableCallSite.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MutableCallSiteDynamicInvokerHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/PassThroughHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/PermuteHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/PrimitiveHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/ReceiverBoundHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/SecurityFrameInjector.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
+/*[INCLUDE-IF Sidecar18-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
  * Copyright (c) 2012, 2020 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/SpreadHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2019 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/StaticFieldGetterHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/StaticFieldSetterHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleByteArrayBase.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar19-SE & !Java14]*/
+/*[INCLUDE-IF Sidecar19-SE & !Java14 & !OPENJDK_METHODHANDLES]*/
 
 /*******************************************************************************
  * Copyright (c) 2017, 2020 IBM Corp. and others

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeExactHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF Sidecar19-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2018 IBM Corp. and others
+ * Copyright (c) 2016, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeGenericHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF Sidecar19-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2018 IBM Corp. and others
+ * Copyright (c) 2016, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF Sidecar19-SE & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2019 IBM Corp. and others
+ * Copyright (c) 2016, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandles.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Java11 & !Java14]*/
+/*[INCLUDE-IF Java11 & !Java14 & !OPENJDK_METHODHANDLES]*/
 
 /*******************************************************************************
  * Copyright (c) 2017, 2020 IBM Corp. and others

File: jcl/src/java.base/share/classes/java/lang/invoke/VarargsCollectorHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/VirtualHandle.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/VolatileCallSite.java
Patch:
@@ -1,6 +1,6 @@
-/*[INCLUDE-IF Sidecar17]*/
+/*[INCLUDE-IF Sidecar17 & !OPENJDK_METHODHANDLES]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/DDR_Test/src/j9vm/test/ddrext/AutoRun.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -429,6 +429,7 @@ public static Test getTestSuite(String testCaseList, String ignoreTestList) {
 			suite.addTestSuite(TestDDRExtensionGeneral.class);
 			suite.addTestSuite(TestFindExt.class);
 			suite.addTestSuite(TestTypeResolution.class);
+			suite.addTestSuite(TestCollisionResilientHashtable.class);
 		} else {
 			String[] testCases = testCaseList.split(",");
 			for (String aTest : testCases) {
@@ -441,7 +442,7 @@ public static Test getTestSuite(String testCaseList, String ignoreTestList) {
 					suite.addTestSuite(TestSharedClassesExt.class);
 				} else if (aTest.trim().equalsIgnoreCase("TestClassExt")) {
 					suite.addTestSuite(TestClassExt.class);
-				} else if (aTest.trim().equalsIgnoreCase("CollisionResilientHashtable")) {
+				} else if (aTest.trim().equalsIgnoreCase("TestCollisionResilientHashtable")) {
 					suite.addTestSuite(TestCollisionResilientHashtable.class);
 				} else if (aTest.trim().equalsIgnoreCase("TestCallsites")) {
 					suite.addTestSuite(TestCallsites.class);

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -490,7 +490,7 @@ static MethodHandle permuateHandleJEP370(MethodHandle methodHandle) {
 		MethodType permuteMethodType = methodHandle.type;
 		int parameterCount = permuteMethodType.parameterCount();
 		Class<?> firstParameter = permuteMethodType.parameterType(0);
-		permuteMethodType = permuteMethodType.dropFirstParameterType();
+		permuteMethodType = permuteMethodType.dropParameterTypes(0, 1);
 		permuteMethodType = permuteMethodType.appendParameterTypes(firstParameter);
 
 		/* reorder specifies the mapping between PermuteType and HandleType

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCArrayletObjectModelBase.java
Patch:
@@ -44,7 +44,7 @@
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
-public abstract class GCArrayletObjectModelBase_V1 extends GCArrayObjectModel 
+public abstract class GCArrayletObjectModelBase extends GCArrayObjectModel 
 {
 	protected GC_ArrayletObjectModelPointer arrayletObjectModel;
 	protected VoidPointer arrayletRangeBase;
@@ -54,7 +54,7 @@ public abstract class GCArrayletObjectModelBase_V1 extends GCArrayObjectModel
 	protected UDATA arrayletLeafLogSize;
 	protected UDATA arrayletLeafSizeMask;
 
-	public GCArrayletObjectModelBase_V1() throws CorruptDataException 
+	public GCArrayletObjectModelBase() throws CorruptDataException 
 	{
 		arrayletObjectModel = GC_ArrayletObjectModelPointer.cast(GCBase.getExtensions().indexableObjectModel());
 		arrayletRangeBase = arrayletObjectModel._arrayletRangeBase();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCArrayletObjectModel_V1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,7 +28,7 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9IndexableObjectPointer;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
-class GCArrayletObjectModel_V1 extends GCArrayletObjectModelBase_V1 
+class GCArrayletObjectModel_V1 extends GCArrayletObjectModelBase
 {
 	
 	public GCArrayletObjectModel_V1() throws CorruptDataException 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -85,7 +85,7 @@ private static Map<String, String> addFlagAliasesFor(Map<String, String> map, St
 	}
 
 	static Map<String, String> getFlagAliasesFor(String className) {
-		return addFlagAliasesFor(new HashMap<>(), className);
+		return addFlagAliasesFor(new HashMap<String, String>(), className);
 	}
 
 	public static Map<String, String> getConstantsAndAliases(StructureDescriptor structure) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -85,7 +85,7 @@ private static Map<String, String> addFlagAliasesFor(Map<String, String> map, St
 	}
 
 	static Map<String, String> getFlagAliasesFor(String className) {
-		return addFlagAliasesFor(new HashMap<>(), className);
+		return addFlagAliasesFor(new HashMap<String, String>(), className);
 	}
 
 	public static Map<String, String> getConstantsAndAliases(StructureDescriptor structure) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCArrayletObjectModelBase.java
Patch:
@@ -44,7 +44,7 @@
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
-public abstract class GCArrayletObjectModelBase_V1 extends GCArrayObjectModel 
+public abstract class GCArrayletObjectModelBase extends GCArrayObjectModel 
 {
 	protected GC_ArrayletObjectModelPointer arrayletObjectModel;
 	protected VoidPointer arrayletRangeBase;
@@ -54,7 +54,7 @@ public abstract class GCArrayletObjectModelBase_V1 extends GCArrayObjectModel
 	protected UDATA arrayletLeafLogSize;
 	protected UDATA arrayletLeafSizeMask;
 
-	public GCArrayletObjectModelBase_V1() throws CorruptDataException 
+	public GCArrayletObjectModelBase() throws CorruptDataException 
 	{
 		arrayletObjectModel = GC_ArrayletObjectModelPointer.cast(GCBase.getExtensions().indexableObjectModel());
 		arrayletRangeBase = arrayletObjectModel._arrayletRangeBase();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCArrayletObjectModel_V1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,7 +28,7 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9IndexableObjectPointer;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
-class GCArrayletObjectModel_V1 extends GCArrayletObjectModelBase_V1 
+class GCArrayletObjectModel_V1 extends GCArrayletObjectModelBase
 {
 	
 	public GCArrayletObjectModel_V1() throws CorruptDataException 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/JITStackWalker.java
Patch:
@@ -31,7 +31,6 @@
 import com.ibm.j9ddr.vm29.j9.BaseAlgorithm;
 import com.ibm.j9ddr.vm29.j9.ConstantPoolHelpers;
 import com.ibm.j9ddr.vm29.j9.IAlgorithm;
-import com.ibm.j9ddr.vm29.j9.J9ConfigFlags;
 import com.ibm.j9ddr.vm29.j9.gc.GCObjectIterator;
 import com.ibm.j9ddr.vm29.j9.stackwalker.MethodMetaData.JITMaps;
 import com.ibm.j9ddr.vm29.pointer.AbstractPointer;
@@ -159,7 +158,7 @@ protected JITStackWalker_29_V0() {
 		
 		private static U8Pointer MASK_PC(AbstractPointer ptr)
 		{
-			if (J9ConfigFlags.arch_s390 && !J9BuildFlags.env_data64) {
+			if (J9BuildFlags.arch_s390 && !J9BuildFlags.env_data64) {
 				return U8Pointer.cast(UDATA.cast(ptr).bitAnd(0x7FFFFFFF));
 			} else {
 				return U8Pointer.cast(ptr);
@@ -642,7 +641,7 @@ private U64Pointer jitFPRParmAddress(WalkState walkState, UDATA fpParmNumber) th
 		{
 			U64Pointer base = U64Pointer.cast(walkState.walkedEntryLocalStorage.jitFPRegisterStorageBase());
 
-			if (J9ConfigFlags.arch_s390) {
+			if (J9BuildFlags.arch_s390) {
 				/* 390 uses FPR0/2/4/6 for arguments, so double fpParmNumber to get the right register */
 				fpParmNumber = fpParmNumber.add(fpParmNumber);
 				/* On 390, either vector or floating point registers are preserved in the ELS, not both.

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/JITStackWalker.java
Patch:
@@ -31,7 +31,6 @@
 import com.ibm.j9ddr.vm29.j9.BaseAlgorithm;
 import com.ibm.j9ddr.vm29.j9.ConstantPoolHelpers;
 import com.ibm.j9ddr.vm29.j9.IAlgorithm;
-import com.ibm.j9ddr.vm29.j9.J9ConfigFlags;
 import com.ibm.j9ddr.vm29.j9.gc.GCObjectIterator;
 import com.ibm.j9ddr.vm29.j9.stackwalker.MethodMetaData.JITMaps;
 import com.ibm.j9ddr.vm29.pointer.AbstractPointer;
@@ -159,7 +158,7 @@ protected JITStackWalker_29_V0() {
 		
 		private static U8Pointer MASK_PC(AbstractPointer ptr)
 		{
-			if (J9ConfigFlags.arch_s390 && !J9BuildFlags.env_data64) {
+			if (J9BuildFlags.arch_s390 && !J9BuildFlags.env_data64) {
 				return U8Pointer.cast(UDATA.cast(ptr).bitAnd(0x7FFFFFFF));
 			} else {
 				return U8Pointer.cast(ptr);
@@ -642,7 +641,7 @@ private U64Pointer jitFPRParmAddress(WalkState walkState, UDATA fpParmNumber) th
 		{
 			U64Pointer base = U64Pointer.cast(walkState.walkedEntryLocalStorage.jitFPRegisterStorageBase());
 
-			if (J9ConfigFlags.arch_s390) {
+			if (J9BuildFlags.arch_s390) {
 				/* 390 uses FPR0/2/4/6 for arguments, so double fpParmNumber to get the right register */
 				fpParmNumber = fpParmNumber.add(fpParmNumber);
 				/* On 390, either vector or floating point registers are preserved in the ELS, not both.

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1609,7 +1609,7 @@ boolean viewAsTypeChecks(MethodType newType, boolean strict) {
 	}
 	
 	MethodHandle viewAsType(MethodType mt, boolean flag) {
-		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
+		return this.cloneWithNewType(mt);
 	}
 	
 	MemberName internalMemberName() {

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatTests/URLClassPathHelperURLHelperCompatibilityTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,8 +23,8 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLClassLoader;
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLClassLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatTests/URLClassPathHelperURLHelperStaleEntryCompatibilityTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,8 +25,8 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLClassLoader;
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLClassLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatTests/URLHelperURLClassPathHelperCompatibilityTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,8 +24,8 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLClassLoader;
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLClassLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.TestClass;
 import Utilities.URLClassPathCreator;

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatTests/URLHelperURLClassPathHelperStaleEntryCompatibilityTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,8 +26,8 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLClassLoader;
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLClassLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.TestClass;
 import Utilities.URLClassPathCreator;

File: test/functional/cmdLineTests/shareClassTests/StoreFilterTests/APITests/FilterTester_1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 import java.lang.reflect.Method;
 
-import CustomClassloaders.CustomURLClassLoader;
+import CustomCLs.CustomURLClassLoader;
 import Utilities.URLClassPathCreator;
 
 import com.ibm.oti.shared.HelperAlreadyDefinedException;

File: test/functional/cmdLineTests/shareClassTests/StoreFilterTests/APITests/FilterTester_2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 import java.lang.reflect.Method;
 
-import CustomClassloaders.CustomURLClassLoader;
+import CustomCLs.CustomURLClassLoader;
 import Utilities.URLClassPathCreator;
 
 import com.ibm.oti.shared.HelperAlreadyDefinedException;

File: test/functional/cmdLineTests/shareClassTests/StoreFilterTests/APITests/FilterTester_3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,7 @@
 import java.lang.reflect.Method;
 import java.net.URL;
 
-import CustomClassloaders.CustomURLClassLoader;
+import CustomCLs.CustomURLClassLoader;
 import Utilities.URLClassPathCreator;
 
 import com.ibm.oti.shared.CannotSetClasspathException;

File: test/functional/cmdLineTests/shareClassTests/TokenHelperTests/APITests/TokenGetDifferentHelperTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,7 @@
  *******************************************************************************/
 package APITests;
 
-import CustomClassloaders.CustomTokenClassLoader;
+import CustomCLs.CustomTokenClassLoader;
 import Utilities.URLClassPathCreator;
 
 import com.ibm.oti.shared.HelperAlreadyDefinedException;

File: test/functional/cmdLineTests/shareClassTests/TokenHelperTests/APITests/TokenMultipleGetHelperCallTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,7 @@
  *******************************************************************************/
 package APITests;
 
-import CustomClassloaders.CustomTokenClassLoader;
+import CustomCLs.CustomTokenClassLoader;
 import Utilities.URLClassPathCreator;
 
 public class TokenMultipleGetHelperCallTest {

File: test/functional/cmdLineTests/shareClassTests/TokenHelperTests/APITests/TokenStoreFindTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,7 @@
  *******************************************************************************/
 package APITests;
 
-import CustomClassloaders.CustomTokenClassLoader;
+import CustomCLs.CustomTokenClassLoader;
 import Utilities.URLClassPathCreator;
 
 public class TokenStoreFindTest {

File: test/functional/cmdLineTests/shareClassTests/TokenHelperTests/StaleMarkingTests/StaleMarkingTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomTokenClassLoader;
+import CustomCLs.CustomTokenClassLoader;
 import Utilities.StringManipulator;
 import Utilities.TestClass;
 import Utilities.URLClassPathCreator;

File: test/functional/cmdLineTests/shareClassTests/TokenHelperTests/TimeStampingTests/TimeStampingTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -27,7 +27,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomTokenClassLoader;
+import CustomCLs.CustomTokenClassLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/APITests/NullPointerAndEmptyArrayTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2019, 2019 IBM Corp. and others
+ * Copyright (c) 2019, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 import java.net.URL;
 
-import CustomClassloaders.CustomURLClassLoader;
+import CustomCLs.CustomURLClassLoader;
 
 public class NullPointerAndEmptyArrayTest {
 

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/APITests/NullURLFindTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 import java.net.URL;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.URLClassPathCreator;
 
 /**

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/APITests/NullURLStoreTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 import java.net.URL;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.URLClassPathCreator;
 
 public class NullURLStoreTest {

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/APITests/URLGetDifferentHelperTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,7 @@
 
 import com.ibm.oti.shared.HelperAlreadyDefinedException;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.URLClassPathCreator;
 
 public class URLGetDifferentHelperTest {

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/APITests/URLMultipleGetHelperCallTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,7 @@
  *******************************************************************************/
 package APITests;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.URLClassPathCreator;
 
 public class URLMultipleGetHelperCallTest {

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/APITests/URLStoreFindTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,7 @@
 import java.net.URL;
 
 import Utilities.URLClassPathCreator;
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 
 public class URLStoreFindTest {
 

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/ClassPathMatchingTests/MultiLoadURLClassPathMatchingTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/ClassPathMatchingTests/URLClassPathMatchingTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/PartitioningTests/URLPartitioningStoreFindTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -27,7 +27,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomPartitioningURLLoader;
+import CustomCLs.CustomPartitioningURLLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/URLHelperTests/StaleClassPathEntryTests/URLStaleClassPathEntryTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -27,7 +27,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLLoader;
+import CustomCLs.CustomURLLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/ClassLoaderType.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 /**
  * @author Matthew Kilner

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomLoaderMetaDataCache.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.security.CodeSource;
 import java.util.jar.Manifest;

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomPartitioningURLLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomTokenClassLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomURLClassLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomURLClassLoaderNoAPIUse.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomURLClassLoaderNonConfirming.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;

File: test/functional/cmdLineTests/shareClassTests/utils/src/CustomCLs/CustomURLLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -19,7 +19,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
-package CustomClassloaders;
+package CustomCLs;
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;

File: test/functional/cmdLineTests/shareClassTests/utils/src/Utilities/Loader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLClassLoader;
+import CustomCLs.CustomURLClassLoader;
 import Utilities.StringManipulator;
 import Utilities.URLClassPathCreator;
 

File: test/functional/cmdLineTests/shareClassTests/utils/src/Utilities/Verifier.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2018 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 import java.net.URL;
 import java.util.Properties;
 
-import CustomClassloaders.CustomURLClassLoader;
+import CustomCLs.CustomURLClassLoader;
 
 /**
  * @author Matthew Kilner

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemorySourceTable.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2016 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -292,7 +292,7 @@ public boolean isExecutable()
 
 		public boolean isReadOnly()
 		{
-			return lower.isExecutable() && upper.isExecutable();
+			return lower.isReadOnly() && upper.isReadOnly();
 		}
 
 		public boolean isShared()

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/memory/MemorySourceTable.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2016 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -292,7 +292,7 @@ public boolean isExecutable()
 
 		public boolean isReadOnly()
 		{
-			return lower.isExecutable() && upper.isExecutable();
+			return lower.isReadOnly() && upper.isReadOnly();
 		}
 
 		public boolean isShared()

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/CpuLoadCalculationConstants.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2001, 2016 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,8 @@
 package com.ibm.lang.management;
 
 /**
- * Constants used by getProcessCpuLoad() and getSystemCpuLoad() methods.
+ * Constants used by {@link com.ibm.lang.managementOperatingSystemMXBean#getProcessCpuLoad()} and
+ * {@link com.ibm.lang.management.OperatingSystemMXBean#getSystemCpuLoad()} methods.
  * 
  * @author Sridevi
  *

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/GarbageCollectorMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,7 @@
 package com.ibm.lang.management;
 
 /**
- * The IBM-specific interface for managing and monitoring the virtual machine's
+ * The OpenJ9 extension interface for managing and monitoring the virtual machine's
  * garbage collection functionality.
  *
  * @since 1.5

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/MemoryMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2016 IBM Corp. and others
+ * Copyright (c) 2005, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,7 @@
 package com.ibm.lang.management;
 
 /**
- * The IBM-specific interface for monitoring the virtual machine's memory
+ * The OpenJ9 extension interface for monitoring the virtual machine's memory
  * management system.
  * 
  * @since 1.5

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/ThreadMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2015, 2019 IBM Corp. and others
+ * Copyright (c) 2015, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,8 +24,8 @@
 package com.ibm.lang.management;
 
 /**
- * Class represents IBM specific interface to the ThreadMXBean.  It publishes
- * APIs that specific to IBM package com.ibm.lang.management, exposing additional
+ * The OpenJ9 extension interface to {@link java.lang.management.ThreadMXBean}.  It publishes
+ * APIs specific to {@link com.ibm.lang.management}, exposing additional
  * information than what the standard ThreadMXBean does.
  */
 public interface ThreadMXBean extends java.lang.management.ThreadMXBean 

File: jcl/src/jdk.management/share/classes/com/sun/management/HotSpotDiagnosticMXBean.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar19-SE]*/
 
 /*******************************************************************************
- * Copyright (c) 2017, 2019 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,7 @@
 import java.lang.management.PlatformManagedObject;
 
 /**
- * Stub class to compile OpenJDK diagnostic management, see openj9.lang.management and com.ibm.lang.management packages instead.
+ * Stub to compile OpenJDK diagnostic management, see {@link openj9.lang.management} and {@link com.ibm.lang.management} packages instead.
  *
  */
 public interface HotSpotDiagnosticMXBean extends PlatformManagedObject {

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/package-info.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,7 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
 /**
- * This API is used to process trace buffers generated by the IBM JVM. These buffers are analogous to the
+ * This API is used to process trace buffers generated by OpenJ9. These buffers are analogous to the
  * UtTraceRecord's used in the native VM and are referred to as 'records' in the source to differentiate them from
  * the UtTraceBuffer native type which wrap the UtTraceRecord type. However, in messages from the API they are
  * called buffers to keep the naming consistent across the information output of the formatter and the -Xtrace

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/traceformat/TraceFormat.java
Patch:
@@ -51,9 +51,7 @@
 import com.ibm.jvm.trace.format.api.TraceThread;
 
 /**
- * !!! WARNING !!!
- * Adding any new top level classes in this file requires modification to jcl/jcl_build.mk
- * to ensure the new classes are included within traceformat.jar for Java 8.
+ * Support for converting binary trace files to a human readable form.
  */
 public class TraceFormat
 {

File: jcl/src/openj9.zosconditionhandling/share/classes/com/ibm/le/conditionhandling/ConditionException.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 
 /*******************************************************************************
- * Copyright (c) 2009, 2010 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,7 @@
 package com.ibm.le.conditionhandling;
 
 /**
- * A ConditionException is used to represent a z/OS Language Environment condition in Java.
+ * A ConditionException is used to represent a z/OS Language Environment condition.
  * <p>
  * References 
  * <ul>

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/traceformat/TraceFormat.java
Patch:
@@ -162,6 +162,8 @@ public static void main(String[] args) throws Exception {
 			return;
 		}
 
+		context.setRecordThreadNames(true);
+
 		if (verbose.booleanValue() || debugLevel.intValue() > 0) {
 			/* we don't set these in the constructor otherwise we see error messages during the retry logic if the block
 			 * size estimate is too small */

File: test/functional/Valhalla/src/org/openj9/test/lworld/DDRValueTypeTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2019, 2019 IBM Corp. and others
+ * Copyright (c) 2019, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -48,7 +48,7 @@ private static void createAndCheckValueType() throws Throwable {
         Class assortedValueWithSingleAlignmentClass = ValueTypeGenerator.generateValueClass("AssortedValueWithSingleAlignment", ValueTypeTests.typeWithSingleAlignmentFields);
 
         MethodHandle makeAssortedValueWithSingleAlignment = MethodHandles.lookup().findStatic(assortedValueWithSingleAlignmentClass,
-            "makeValueGeneric", MethodType.methodType(assortedValueWithSingleAlignmentClass, Object.class,
+            "makeValueGeneric", MethodType.methodType(Object.class, Object.class,
                         Object.class, Object.class, Object.class, Object.class, Object.class));
 
         Object[] altFields = {

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/traceformat/TraceFormat.java
Patch:
@@ -162,6 +162,8 @@ public static void main(String[] args) throws Exception {
 			return;
 		}
 
+		context.setRecordThreadNames(true);
+
 		if (verbose.booleanValue() || debugLevel.intValue() > 0) {
 			/* we don't set these in the constructor otherwise we see error messages during the retry logic if the block
 			 * size estimate is too small */

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestSharedCacheJvmtiAPI.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -63,7 +63,7 @@ public static void main(String args[]) {
 		    	fail("iterateSharedCacheFunction failed with dir " + dir);
 		    }
 	    	
-	    	if (dir == null && false == isWindows() && false == isMVS() && isOpenJ9()) {
+	    	if (dir == null && false == isWindows() && isOpenJ9()) {
 	    		dirGroupAccess = getCacheDir("Foo_groupaccess", false);
 	    		dirRemoveJavaSharedResources = removeJavaSharedResourcesDir(dirGroupAccess);
 	    		oldCacheGroupAccessCount = iterateSharedCache(dirGroupAccess, NO_FLAGS, false) + iterateSharedCache(dirRemoveJavaSharedResources, NO_FLAGS, false);

File: test/functional/CacheManagement/src/tests/sharedclasses/options/TestSharedCacheJvmtiAPI.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2019 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -63,7 +63,7 @@ public static void main(String args[]) {
 		    	fail("iterateSharedCacheFunction failed with dir " + dir);
 		    }
 	    	
-	    	if (dir == null && false == isWindows() && false == isMVS() && isOpenJ9()) {
+	    	if (dir == null && false == isWindows() && isOpenJ9()) {
 	    		dirGroupAccess = getCacheDir("Foo_groupaccess", false);
 	    		dirRemoveJavaSharedResources = removeJavaSharedResourcesDir(dirGroupAccess);
 	    		oldCacheGroupAccessCount = iterateSharedCache(dirGroupAccess, NO_FLAGS, false) + iterateSharedCache(dirRemoveJavaSharedResources, NO_FLAGS, false);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -159,7 +159,9 @@ public static void j9bcutil_dumpRomMethod(PrintStream out, J9ROMMethodPointer ro
 				SelfRelativePointer currentThrowName = ROMHelp.J9EXCEPTIONINFO_THROWNAMES(exceptionData);
 				for (long i = 0; i < throwCount; i++) {
 					J9UTF8Pointer currentName = J9UTF8Pointer.cast(currentThrowName.get());
+					out.append("    ");
 					out.append(J9UTF8Helper.stringValue(currentName));
+					out.append(nl);
 				}
 			}
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2019 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -159,7 +159,9 @@ public static void j9bcutil_dumpRomMethod(PrintStream out, J9ROMMethodPointer ro
 				SelfRelativePointer currentThrowName = ROMHelp.J9EXCEPTIONINFO_THROWNAMES(exceptionData);
 				for (long i = 0; i < throwCount; i++) {
 					J9UTF8Pointer currentName = J9UTF8Pointer.cast(currentThrowName.get());
+					out.append("    ");
 					out.append(J9UTF8Helper.stringValue(currentName));
+					out.append(nl);
 				}
 			}
 		}

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/ProcessorSection.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -80,9 +80,9 @@ protected void summary(BufferedWriter out) throws IOException
          * These String arrays refer to enum values in entries of the
          * ProcessorInfo structure defined in xhpi.h .
          */
-        String[] Archs      = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64"};
+        String[] Archs      = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV"};
         String[] SubTypes   = { "i486", "i586", "Pentium II", "Pentium III",
-            "Merced","McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron"};
+            "Merced","McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G"};
         String[] trCounter  = { "Sequence Counter", "Special", "RDTSC Timer", "AIX Timer",
                 "MFSPR Timer", "MFTB Timer", "STCK Timer", "J9 timer"};
         out.write("Sys Processor Info :");

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/ProcessorSection.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,8 +39,8 @@ public class ProcessorSection {
 	protected static final int LONG = 8; // length of a long in bytes
 	protected static final String SUM_TAB = "        ";
 
-	private final static String[] Archs = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64" };
-	private final static String[] SubTypes = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron" };
+	private final static String[] Archs = { "Unknown", "x86", "S390", "Power", "IA64", "S390X", "AMD64", "RISCV"};
+	private final static String[] SubTypes = { "i486", "i586", "Pentium II", "Pentium III", "Merced", "McKinley", "PowerRS", "PowerPC", "GigaProcessor", "ESA", "Pentium IV", "T-Rex", "Opteron", "RV64G"};
 	private final static String[] trCounter = { "Sequence Counter", "Special", "RDTSC Timer", "AIX Timer", "MFSPR Timer", "MFTB Timer", "STCK Timer", "J9 timer" };
 	
 	TraceContext context;

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2019 IBM Corp. and others
+ * Copyright (c) 2009, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -1213,6 +1213,8 @@ public Object run() {
 			);
 			fReturnType.set(this, void.class);
 			fArguments.set(this, EMTPY_PARAMS);
+			methodDescriptor = "()V";
+			stackDescriptionBits = stackDescriptionBits(EMTPY_PARAMS, 0);
 			Class<?> serialReturnType = (Class<?>) in.readObject();
 			Class<?>[] serialArguments = (Class<?>[]) in.readObject();
 			deserializedFields = new DeserializedFieldsHolder(serialReturnType, serialArguments);

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/OpenCommand.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2017 IBM Corp. and others
+ * Copyright (c) 2011, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -47,7 +47,6 @@
 import com.ibm.dtfj.java.JavaRuntime;
 import com.ibm.dtfj.utils.file.FileManager;
 import com.ibm.java.diagnostics.utils.IContext;
-import com.ibm.java.diagnostics.utils.IDTFJContext;
 import com.ibm.java.diagnostics.utils.commands.CommandException;
 import com.ibm.jvm.dtfjview.CombinedContext;
 import com.ibm.jvm.dtfjview.JdmpviewContextManager;
@@ -264,4 +263,3 @@ public void printDetailedHelp(PrintStream out) {
 	}
 
 }
-

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/infocommands/InfoThreadCommand.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2019 IBM Corp. and others
+ * Copyright (c) 2004, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,6 @@
 import java.util.Map;
 import java.util.logging.Level;
 import java.util.stream.Collectors;
-import java.util.stream.IntStream;
 
 import com.ibm.dtfj.image.CorruptData;
 import com.ibm.dtfj.image.CorruptDataException;

File: jcl/src/java.base/share/classes/com/ibm/oti/reflect/AnnotationParser.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.reflect;
 
 /*******************************************************************************
- * Copyright (c) 2010, 2017 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -38,7 +38,7 @@
 /*
  * Instructions to run this test:
  * 
- * 1)  recompile the JVM with J9VM_OPT_VALHALLA_VALUE_TYPES flag turned on in j9cfg.h.ftl (or j9cfg.h.in when cmake is turned on)
+ * 1)  Build the JDK with the '--enable-inline-types' configure flag
  * 2)  cd [openj9-openjdk-dir]/openj9/test
  * 3)  git clone https://github.com/AdoptOpenJDK/TKG.git
  * 4)  cd TKG

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -38,7 +38,7 @@
 /*
  * Instructions to run this test:
  * 
- * 1)  recompile the JVM with J9VM_OPT_VALHALLA_VALUE_TYPES flag turned on in j9cfg.h.ftl (or j9cfg.h.in when cmake is turned on)
+ * 1)  Build the JDK with the '--enable-inline-types' configure flag
  * 2)  cd [openj9-openjdk-dir]/openj9/test
  * 3)  git clone https://github.com/AdoptOpenJDK/TKG.git
  * 4)  cd TKG

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2210,7 +2210,9 @@ public MethodHandles.Lookup dropLookupMode(int dropMode) {
 		 * 
 		 * @return a boolean type indicating whether the lookup class has private access
 		 */
+		/*[IF Java14]*/
 		@Deprecated(forRemoval=false, since="14")
+		/*[ENDIF] Java14 */
 		public boolean hasPrivateAccess() {
 			/* Full access for use by MH implementation */
 			if (INTERNAL_PRIVILEGED == accessMode) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corp. and others
+ * Copyright (c) 2010, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -42,7 +42,7 @@ public class AlgorithmVersion {
 	public static final String MONITOR_HASH_FUNCTION_VERSION = "ALG_MONITOR_HASH_FUNCTION_VERSION";
 	public static final String MONITOR_EQUAL_FUNCTION_VERSION = "ALG_MONITOR_EQUAL_FUNCTION_VERSION";
 	public static final String OBJECT_FIELD_OFFSET = "ALG_OBJECT_FIELD_OFFSET_VERSION";
-	public static final String OBJECT_MONITOR_VERSION = "OBJECT_MONITOR_VERSION";
+	public static final String ALG_OBJECT_MONITOR_VERSION = "ALG_OBJECT_MONITOR_VERSION";
 	public static final String OPT_INFO_VERSION = "OPT_INFO_VERSION";
 	public static final String POOL_VERSION = "ALG_POOL_VERSION";
 	public static final String ROM_HELP_VERSION = "ALG_ROM_HELP_VERSION";

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/SystemMonitor.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -34,7 +34,7 @@ public abstract class SystemMonitor implements Comparable<SystemMonitor>
 	
 	public static SystemMonitor fromJ9ThreadMonitor(J9ThreadMonitorPointer monitor) throws CorruptDataException
 	{
-		AlgorithmVersion version = AlgorithmVersion.getVersionOf(AlgorithmVersion.OBJECT_MONITOR_VERSION);
+		AlgorithmVersion version = AlgorithmVersion.getVersionOf(AlgorithmVersion.ALG_OBJECT_MONITOR_VERSION);
 		switch (version.getAlgorithmVersion()) {
 			// Add case statements for new algorithm versions
 			default:

File: test/functional/VM_Test/src/com/ibm/oti/jvmtests/AutoRun.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.jvmtests;
 
 /*******************************************************************************
- * Copyright (c) 2016, 2016 IBM Corp. and others
+ * Copyright (c) 2016, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,6 +35,8 @@ public static void main(String[] args){
 		/*if it fails it prints a detailed message, but if successful it only prints OK */ 
 		if (result.wasSuccessful()) {	
 			System.out.println("All tests were successful");
+		} else {
+			System.exit(-2);
 		}
 	}
 	

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java
Patch:
@@ -170,7 +170,7 @@ public final long getFreePhysicalMemorySize() {
 	 */
 	@Override
 	public final double getCpuLoad() {
-		return cpuUtilizationHelper.getSystemCpuLoad();
+		return this.getSystemCpuLoad();
 	}
 
 	/**

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java
Patch:
@@ -170,7 +170,7 @@ public final long getFreePhysicalMemorySize() {
 	 */
 	@Override
 	public final double getCpuLoad() {
-		return cpuUtilizationHelper.getSystemCpuLoad();
+		return this.getSystemCpuLoad();
 	}
 
 	/**

File: test/functional/cmdLineTests/cmdLineTest_J9tests/src/TestStringBufferAndBuilderGrowth.java
Patch:
@@ -34,8 +34,9 @@ public static void main(String[] args) {
 	long physicalMemory = opBean.getTotalPhysicalMemorySize();
 	System.out.println("Machine has physical memory " + physicalMemory + " bytes or " + (physicalMemory >> 20) + " MB or " + (physicalMemory >> 30) + " GB");
 	// An AIX machine with 7616 MB doesn't work
-	long limit = 8000L << 20; 
+	long limit = 8193L << 20; 
 	if (physicalMemory < limit) {
+		// Machines with less memory may swap and timeout trying to run the test
 		System.out.println("Not enough resource to run test.");
 		return;
 	}

File: test/functional/cmdLineTests/cmdLineTest_J9tests/src/TestStringBufferAndBuilderGrowth.java
Patch:
@@ -34,8 +34,9 @@ public static void main(String[] args) {
 	long physicalMemory = opBean.getTotalPhysicalMemorySize();
 	System.out.println("Machine has physical memory " + physicalMemory + " bytes or " + (physicalMemory >> 20) + " MB or " + (physicalMemory >> 30) + " GB");
 	// An AIX machine with 7616 MB doesn't work
-	long limit = 8000L << 20; 
+	long limit = 8193L << 20; 
 	if (physicalMemory < limit) {
+		// Machines with less memory may swap and timeout trying to run the test
 		System.out.println("Not enough resource to run test.");
 		return;
 	}

File: test/functional/Java8andUp/src/org/openj9/test/com/ibm/jit/Test_JITHelpers.java
Patch:
@@ -736,6 +736,7 @@ public static void test_intrinsicIndexOfStringLatin1() {
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("ab"), 2, 0), 0);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("abc"), 3, 0), 0);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("abcdefghijklmnop"), 16, 0), 0);
+				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnopx"), 16, valueField.get("x"), 1, 0), -1);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("x"), 1, 0), -1);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("x"), 1, 1), -1);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("x"), 1, 7), -1);
@@ -902,6 +903,7 @@ public static void test_intrinsicIndexOfStringLatin1() {
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("ab12345678901234567cdefghijklmnopq"), 34, valueField.get("de"), 2, 5), 20);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("ab12345678901234567cdefghijklmnopq"), 34, valueField.get("def"), 3, 5), 20);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("ab12345678901234567cdefghijklmnopq"), 34, valueField.get("defghijklmn"), 11, 5), 20);
+				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghiklmnopqrstwyzabcdefghikabcdefghiklmnopqlmmnopqrstwyzabcdepoisd"), 71, valueField.get("abcdefghiklmnopqlmmnopqrstwyzabcdepoisd"), 39, 0), 32);
 			}
 		} catch (IllegalAccessException e) {
 			throw new RuntimeException(e);

File: test/functional/Java8andUp/src/org/openj9/test/com/ibm/jit/Test_JITHelpers.java
Patch:
@@ -746,6 +746,7 @@ public static void test_intrinsicIndexOfStringLatin1() {
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("ab"), 2, 0), 0);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("abc"), 3, 0), 0);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("abcdefghijklmnop"), 16, 0), 0);
+				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnopx"), 16, valueField.get("x"), 1, 0), -1);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("x"), 1, 0), -1);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("x"), 1, 1), -1);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghijklmnop"), 16, valueField.get("x"), 1, 7), -1);

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -1275,4 +1275,6 @@ private ClassDesc getArrayTypeClassDesc() {
 		}		
 	}
 /*[ENDIF] Java12 */ 
+
+	abstract MethodType accessModeTypeUncached(AccessMode accessMode);
 }

File: jcl/src/java.base/share/classes/java/lang/invoke/VarForm.java
Patch:
@@ -1,7 +1,7 @@
-/*[INCLUDE-IF Sidecar19-SE]*/
+/*[INCLUDE-IF Sidecar19-SE & !Java14]*/
 
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/StringBuffer.java
Patch:
@@ -1716,8 +1716,9 @@ static void initFromSystemProperties(Properties props) {
 	String prop = props.getProperty("java.lang.string.create.unique"); //$NON-NLS-1$
 	TOSTRING_COPY_BUFFER_ENABLED = "true".equals(prop) || "StringBuffer".equals(prop); //$NON-NLS-1$ //$NON-NLS-2$
 
-	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively"); //$NON-NLS-1$
-	growAggressively = "".equals(growAggressivelyProperty) || "true".equalsIgnoreCase(growAggressivelyProperty); //$NON-NLS-1$ //$NON-NLS-2$
+	// growAggressively by default
+	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively", ""); //$NON-NLS-1$ //$NON-NLS-2$
+	growAggressively = "".equals(growAggressivelyProperty) || Boolean.parseBoolean(growAggressivelyProperty); //$NON-NLS-1$
 }
 
 /**

File: jcl/src/java.base/share/classes/java/lang/StringBuilder.java
Patch:
@@ -1715,8 +1715,9 @@ static void initFromSystemProperties(Properties props) {
 	String prop = props.getProperty("java.lang.string.create.unique"); //$NON-NLS-1$
 	TOSTRING_COPY_BUFFER_ENABLED = "true".equals(prop) || "StringBuilder".equals(prop); //$NON-NLS-1$ //$NON-NLS-2$
 
-	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively"); //$NON-NLS-1$
-	growAggressively = "".equals(growAggressivelyProperty) || "true".equalsIgnoreCase(growAggressivelyProperty); //$NON-NLS-1$ //$NON-NLS-2$
+	// growAggressively by default
+	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively", ""); //$NON-NLS-1$ //$NON-NLS-2$
+	growAggressively = "".equals(growAggressivelyProperty) || Boolean.parseBoolean(growAggressivelyProperty); //$NON-NLS-1$
 }
 
 /**

File: jcl/src/java.base/share/classes/java/lang/StringBuffer.java
Patch:
@@ -1716,8 +1716,9 @@ static void initFromSystemProperties(Properties props) {
 	String prop = props.getProperty("java.lang.string.create.unique"); //$NON-NLS-1$
 	TOSTRING_COPY_BUFFER_ENABLED = "true".equals(prop) || "StringBuffer".equals(prop); //$NON-NLS-1$ //$NON-NLS-2$
 
-	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively"); //$NON-NLS-1$
-	growAggressively = "".equals(growAggressivelyProperty) || "true".equalsIgnoreCase(growAggressivelyProperty); //$NON-NLS-1$ //$NON-NLS-2$
+	// growAggressively by default
+	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively", ""); //$NON-NLS-1$ //$NON-NLS-2$
+	growAggressively = "".equals(growAggressivelyProperty) || Boolean.parseBoolean(growAggressivelyProperty); //$NON-NLS-1$
 }
 
 /**

File: jcl/src/java.base/share/classes/java/lang/StringBuilder.java
Patch:
@@ -1715,8 +1715,9 @@ static void initFromSystemProperties(Properties props) {
 	String prop = props.getProperty("java.lang.string.create.unique"); //$NON-NLS-1$
 	TOSTRING_COPY_BUFFER_ENABLED = "true".equals(prop) || "StringBuilder".equals(prop); //$NON-NLS-1$ //$NON-NLS-2$
 
-	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively"); //$NON-NLS-1$
-	growAggressively = "".equals(growAggressivelyProperty) || "true".equalsIgnoreCase(growAggressivelyProperty); //$NON-NLS-1$ //$NON-NLS-2$
+	// growAggressively by default
+	String growAggressivelyProperty = props.getProperty("java.lang.stringBuffer.growAggressively", ""); //$NON-NLS-1$ //$NON-NLS-2$
+	growAggressively = "".equals(growAggressivelyProperty) || Boolean.parseBoolean(growAggressivelyProperty); //$NON-NLS-1$
 }
 
 /**

File: test/functional/Java8andUp/src/org/openj9/test/com/ibm/jit/Test_JITHelpers.java
Patch:
@@ -1,7 +1,7 @@
 package org.openj9.test.com.ibm.jit;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2019 IBM Corp. and others
+ * Copyright (c) 1998, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -912,6 +912,7 @@ public static void test_intrinsicIndexOfStringLatin1() {
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("ab12345678901234567cdefghijklmnopq"), 34, valueField.get("de"), 2, 5), 20);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("ab12345678901234567cdefghijklmnopq"), 34, valueField.get("def"), 3, 5), 20);
 				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("ab12345678901234567cdefghijklmnopq"), 34, valueField.get("defghijklmn"), 11, 5), 20);
+				Assert.assertEquals(helpers.intrinsicIndexOfStringLatin1(valueField.get("abcdefghiklmnopqrstwyzabcdefghikabcdefghiklmnopqlmmnopqrstwyzabcdepoisd"), 71, valueField.get("abcdefghiklmnopqlmmnopqrstwyzabcdepoisd"), 39, 0), 32);
 			}
 		} catch (IllegalAccessException e) {
 			throw new RuntimeException(e);

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2018, 2019 IBM Corp. and others
+ * Copyright (c) 2018, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1381,7 +1381,7 @@ static public void testStaticFieldsWithObjectAlignment() throws Throwable {
 	 * 	int y;
 	 * }
 	 */
-	@Test(priority=1)
+	@Test(enabled = false, priority=1)
 	static public void testCreateLargeNumberOfPoint2D() throws Throwable {
 		String fields[] = {"x:I", "y:I"};
 		String className = "Point2D";

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2018, 2019 IBM Corp. and others
+ * Copyright (c) 2018, 2020 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1381,7 +1381,7 @@ static public void testStaticFieldsWithObjectAlignment() throws Throwable {
 	 * 	int y;
 	 * }
 	 */
-	@Test(priority=1)
+	@Test(enabled = false, priority=1)
 	static public void testCreateLargeNumberOfPoint2D() throws Throwable {
 		String fields[] = {"x:I", "y:I"};
 		String className = "Point2D";

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -273,7 +273,7 @@ public void test_getMethods_subtest1() {
 		AssertJUnit.assertTrue("Expected method " + expected_IC[i] + " not found.", match);
 	}
 
-	/* as of Java 8 151, IC.method_L() masks IA.method_L() */
+	/* as of Java 9, IC.method_L() masks IA.method_L() */
 	String[]	expected_CD = new String[] {
 			"CD.method_N(java.lang.String)",
 			"IA.method_M(java.lang.String)",
@@ -444,7 +444,7 @@ public void testInterfaceMethodInheritance() {
 	HashMap<Class, String[]> expectedMethods = new HashMap<>();
 	
 	/*
-	 * As of Java 8 151, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
+	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
 	 * This means that the following methods are not inherited by implementers of M3:
 	 * InterfaceTestClasses$I1.m1
 	 * InterfaceTestClasses$I1.m2
@@ -501,7 +501,7 @@ public void testDefaultMethodInheritance() {
 	Class testClasses[] = new Class[] {C_CSuperA_SuperDuper.class, C_I_SupDuperSupA.class, C_SuperA.class, I_SupDuper_SupA.class, SuperA.class, SuperDuper.class};
 	HashMap<Class, String[]> expectedMethods = new HashMap<>();
 	/*
-	 * As of Java 8 151, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
+	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
 	 * This means that the following methods are now hidden in implementers of SuperA:
 	 * SuperDuper.abstractInSuperA_abstractInSuperDuper()
 	 * SuperDuper.abstractInSuperA_defaultInSuperDuper()

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -273,7 +273,7 @@ public void test_getMethods_subtest1() {
 		AssertJUnit.assertTrue("Expected method " + expected_IC[i] + " not found.", match);
 	}
 
-	/* as of Java 9, IC.method_L() masks IA.method_L() */
+	/* as of Java 8 151, IC.method_L() masks IA.method_L() */
 	String[]	expected_CD = new String[] {
 			"CD.method_N(java.lang.String)",
 			"IA.method_M(java.lang.String)",
@@ -444,7 +444,7 @@ public void testInterfaceMethodInheritance() {
 	HashMap<Class, String[]> expectedMethods = new HashMap<>();
 	
 	/*
-	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
+	 * As of Java 8 151, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
 	 * This means that the following methods are not inherited by implementers of M3:
 	 * InterfaceTestClasses$I1.m1
 	 * InterfaceTestClasses$I1.m2
@@ -501,7 +501,7 @@ public void testDefaultMethodInheritance() {
 	Class testClasses[] = new Class[] {C_CSuperA_SuperDuper.class, C_I_SupDuperSupA.class, C_SuperA.class, I_SupDuper_SupA.class, SuperA.class, SuperDuper.class};
 	HashMap<Class, String[]> expectedMethods = new HashMap<>();
 	/*
-	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
+	 * As of Java 8 151, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
 	 * This means that the following methods are now hidden in implementers of SuperA:
 	 * SuperDuper.abstractInSuperA_abstractInSuperDuper()
 	 * SuperDuper.abstractInSuperA_defaultInSuperDuper()

File: test/functional/CacheManagement/src/tests/sharedclasses/TestUtils.java
Patch:
@@ -634,7 +634,6 @@ public static String getCacheDir(String cachename,boolean persistent)
 		RunCommand.execute(cmd,false);
 		String stderr = RunCommand.lastCommandStderr;
 
-		System.out.println("stderr is :"+ stderr);
 		String[] stderrarray = stderr.split("\n");
 
 		for (int j=0; j<stderrarray.length;j+=1)

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar16]*/
+/*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
  * Copyright (c) 1998, 2019 IBM Corp. and others
  *
@@ -1855,7 +1855,7 @@ public ProtectionDomain getProtectionDomain() {
 
 private void allocateAllPermissionsPD() {
 	Permissions collection = new Permissions();
-	collection.add(new AllPermission());
+	collection.add(sun.security.util.SecurityConstants.ALL_PERMISSION);
 	AllPermissionsPD = new ProtectionDomain(null, collection);
 }
 

File: test/functional/CacheManagement/src/tests/sharedclasses/TestUtils.java
Patch:
@@ -634,7 +634,6 @@ public static String getCacheDir(String cachename,boolean persistent)
 		RunCommand.execute(cmd,false);
 		String stderr = RunCommand.lastCommandStderr;
 
-		System.out.println("stderr is :"+ stderr);
 		String[] stderrarray = stderr.split("\n");
 
 		for (int j=0; j<stderrarray.length;j+=1)

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9IndexableObjectHelper.java
Patch:
@@ -85,6 +85,7 @@ public static U32 size(J9ObjectPointer objPointer) throws CorruptDataException
 	}
 	
 	/**
+	 * @param objPointer array object who's elements we are outputting to dst
 	 * @param index the desired index within then array
 	 * @param dataSize size of the data held in the array
 	 * @return the address for the desired element in the array

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReader.java
Patch:
@@ -25,6 +25,7 @@
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_IA32;
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_PPC32;
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_PPC64;
+import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_RISCV64;
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_S390;
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.ARCH_ARM;
 import static com.ibm.j9ddr.corereaders.elf.ELFFileReader.AT_ENTRY;
@@ -233,6 +234,8 @@ public static ELFDumpReader getELFDumpReader(ELFFileReader reader) throws IOExce
 			} else {
 				return new ELFARM32DumpReader(reader);
 			}
+		case (ARCH_RISCV64) :
+			return new ELFRISCV64DumpReader(reader);
 		default:
 			throw new IOException("Unrecognised machine type: " + reader.getMachineType());
 		}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFFileReader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2018 IBM Corp. and others
+ * Copyright (c) 2004, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -73,6 +73,7 @@ public abstract class ELFFileReader
 	public final static int ARCH_ARM = 40;
 	public final static int ARCH_IA64 = 50;
 	public final static int ARCH_AMD64 = 62;
+	public final static int ARCH_RISCV64 = 243;
 
 	public final static int DT_NULL = 0;
 	public final static int DT_DEBUG = 21;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/libraries/LibraryCollector.java
Patch:
@@ -310,7 +310,7 @@ private static boolean isVirtualLibrary(String libraryName) {
 		return libraryName.equals("lib.so") // the SOname that appears in executables
 				// ABI: i386, ia64, sh
 				|| libraryName.startsWith("linux-gate")
-				// ABI: aarch64, arm, mips, x86_64, x86/32
+				// ABI: aarch64, arm, mips, riscv, x86_64, x86/32
 				|| libraryName.startsWith("linux-vdso.so.1")
 				// ABI: ppc/32, s390
 				|| libraryName.startsWith("linux-vdso32.so.1")

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ConfigFlags.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2018, 2018 IBM Corp. and others
+ * Copyright (c) 2018, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -41,6 +41,7 @@ public final class J9ConfigFlags {
 
 	public static final boolean arch_arm;
 	public static final boolean arch_power;
+	public static final boolean arch_riscv;
 	public static final boolean arch_s390;
 	public static final boolean arch_x86;
 
@@ -49,6 +50,7 @@ public final class J9ConfigFlags {
 
 		arch_arm = getFlag(flagsClass, "arch_arm", "J9VM_ARCH_ARM");
 		arch_power = getFlag(flagsClass, "arch_power", "J9VM_ARCH_POWER");
+		arch_riscv = getFlag(flagsClass, "arch_riscv", "J9VM_ARCH_RISCV");
 		arch_s390 = getFlag(flagsClass, "arch_s390", "J9VM_ARCH_S390");
 		arch_x86 = getFlag(flagsClass, "arch_x86", "J9VM_ARCH_X86");
 	}

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/util/SyncThread.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -60,13 +60,13 @@ public void run()
             lock.notify();
         }
         while(!isInterrupted() && work()) {
-        	yield();
+        	Thread.yield();
         }
     }
         
     protected boolean work() 
     {
-        yield();
+        Thread.yield();
         return true;
     }
 }

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/util/SyncThread.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -60,13 +60,13 @@ public void run()
             lock.notify();
         }
         while(!isInterrupted() && work()) {
-        	yield();
+        	Thread.yield();
         }
     }
         
     protected boolean work() 
     {
-        yield();
+        Thread.yield();
         return true;
     }
 }

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java
Patch:
@@ -157,7 +157,7 @@ public static String makeJcmdCommand(String[] options, int skip) {
 	 * @param diagnosticCommand String containing the command and options
 	 * @return command result or diagnostic information in case of error
 	 */
-	public static DiagnosticProperties executeDiagnosticCommand(String diagnosticCommand) {
+	static DiagnosticProperties executeDiagnosticCommand(String diagnosticCommand) {
 		IPC.logMessage("executeDiagnosticCommand: ", diagnosticCommand); //$NON-NLS-1$
 
 		DiagnosticProperties result;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -214,7 +214,7 @@ private void fieldOffsetsFindNext() throws CorruptDataException {
 						} else {
 							if (valueTypeHelper.isFlattenableFieldSignature(J9ROMFieldShapeHelper.getSignature(localField))) {
 								J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(instanceClass, J9ROMFieldShapeHelper.getName(localField));
-								if (null != fieldClass) {
+								if (valueTypeHelper.isJ9ClassIsFlattened(fieldClass)) {
 									IDATA firstFieldOffset = fieldClass.backfillOffset();
 									if (valueTypeHelper.isJ9ClassLargestAlignmentConstraintDouble(fieldClass)) {
 										offset = firstFlatDoubleOffset.add(currentFlatDoubleOffset).sub(firstFieldOffset);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -304,8 +304,8 @@ boolean isInstanceFieldBackfillEligible() {
 			if (!modifiers.anyBitsIn(J9AccStatic) ) {
 				if (modifiers.anyBitsIn(J9FieldFlagObject)) {
 					if (valueTypeHelper.isFlattenableFieldSignature(J9ROMFieldShapeHelper.getSignature(f))) {
-						J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(containerClazz,J9ROMFieldShapeHelper.getName(f));
-						if (null == fieldClass) {
+						J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(containerClazz, J9ROMFieldShapeHelper.getName(f));
+						if (!valueTypeHelper.isJ9ClassIsFlattened(fieldClass)) {
 							instanceObjectCount += 1;
 							totalObjectCount += 1;
 						} else if (valueTypeHelper.isJ9ClassLargestAlignmentConstraintDouble(fieldClass)) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -214,7 +214,7 @@ private void fieldOffsetsFindNext() throws CorruptDataException {
 						} else {
 							if (valueTypeHelper.isFlattenableFieldSignature(J9ROMFieldShapeHelper.getSignature(localField))) {
 								J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(instanceClass, J9ROMFieldShapeHelper.getName(localField));
-								if (null != fieldClass) {
+								if (valueTypeHelper.isJ9ClassIsFlattened(fieldClass)) {
 									IDATA firstFieldOffset = fieldClass.backfillOffset();
 									if (valueTypeHelper.isJ9ClassLargestAlignmentConstraintDouble(fieldClass)) {
 										offset = firstFlatDoubleOffset.add(currentFlatDoubleOffset).sub(firstFieldOffset);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -304,8 +304,8 @@ boolean isInstanceFieldBackfillEligible() {
 			if (!modifiers.anyBitsIn(J9AccStatic) ) {
 				if (modifiers.anyBitsIn(J9FieldFlagObject)) {
 					if (valueTypeHelper.isFlattenableFieldSignature(J9ROMFieldShapeHelper.getSignature(f))) {
-						J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(containerClazz,J9ROMFieldShapeHelper.getName(f));
-						if (null == fieldClass) {
+						J9ClassPointer fieldClass = valueTypeHelper.findJ9ClassInFlattenedClassCacheWithFieldName(containerClazz, J9ROMFieldShapeHelper.getName(f));
+						if (!valueTypeHelper.isJ9ClassIsFlattened(fieldClass)) {
 							instanceObjectCount += 1;
 							totalObjectCount += 1;
 						} else if (valueTypeHelper.isJ9ClassLargestAlignmentConstraintDouble(fieldClass)) {

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/indyn/Helper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,6 +26,8 @@ public class Helper {
 	public int publicInt = 1; 
 	
 	public static int publicStaticInt = 100;
+
+	public static void voidMethod() { }
 	
 	public static void addStaticPublic(int a, String b){ }
 	

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -3925,9 +3925,9 @@ private static final void validateArgumentsOfCountedLoop(MethodHandle startHandl
 			bodyIterationVarLength = 2;
 		}
 
-		/* As a special case, if the body contributes only V and I types, with no
-		 * additional A types, then the internal parameter list is extended by the
-		 * argument types A... of the end handle. Adjust A count to correctly verify
+		/* As a special case, if the body contributes only V and I types, with no
+		 * additional A types, then the internal parameter list is extended by the
+		 * argument types A... of the end handle. Adjust A count to correctly verify
 		 * parameters are effectively identical. Body will be altered outside of
 		 * verification.
 		 */

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/diagnostics/base/DiagnosticProperties.java
Patch:
@@ -52,7 +52,7 @@ public class DiagnosticProperties {
 	private static final String JAVA_LANG_STRING = "java.lang.String"; //$NON-NLS-1$
 
 	/**
-	 * Set this to "true" to enable verbose mode
+	 * Set this to "true" to enable verbose mode
 	 */
 	public static final String DEBUG_PROPERTY = "openj9.tools.attach.diagnostics.debug"; //$NON-NLS-1$
 

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -3925,9 +3925,9 @@ private static final void validateArgumentsOfCountedLoop(MethodHandle startHandl
 			bodyIterationVarLength = 2;
 		}
 
-		/* As a special case, if the body contributes only V and I types, with no
-		 * additional A types, then the internal parameter list is extended by the
-		 * argument types A... of the end handle. Adjust A count to correctly verify
+		/* As a special case, if the body contributes only V and I types, with no
+		 * additional A types, then the internal parameter list is extended by the
+		 * argument types A... of the end handle. Adjust A count to correctly verify
 		 * parameters are effectively identical. Body will be altered outside of
 		 * verification.
 		 */

File: jcl/src/java.base/share/classes/openj9/internal/tools/attach/diagnostics/base/DiagnosticProperties.java
Patch:
@@ -52,7 +52,7 @@ public class DiagnosticProperties {
 	private static final String JAVA_LANG_STRING = "java.lang.String"; //$NON-NLS-1$
 
 	/**
-	 * Set this to "true" to enable verbose mode
+	 * Set this to "true" to enable verbose mode
 	 */
 	public static final String DEBUG_PROPERTY = "openj9.tools.attach.diagnostics.debug"; //$NON-NLS-1$
 

File: jcl/src/openj9.dtfjview/share/classes/module-info.java
Patch:
@@ -23,6 +23,9 @@
 
 /*[REM] This file must not use tabs because the dependency recognition code in openjdk does not support them. */
 
+/** 
+ * Defines the jdmpview tool for reading system core and java core diagnostic files.
+ */
 module openj9.dtfjview {
   requires openj9.dtfj;
   requires java.logging;

File: jcl/src/openj9.traceformat/share/classes/module-info.java
Patch:
@@ -23,6 +23,9 @@
 
 /*[REM] This file must not use tabs because the dependency recognition code in openjdk does not support them. */
 
+/**
+ *  Provides the traceformat utility for formatting binary trace files.
+ */
 module openj9.traceformat {
   exports com.ibm.jvm.trace.format.api;
 }

File: jcl/src/openj9.zosconditionhandling/share/classes/module-info.java
Patch:
@@ -23,6 +23,9 @@
 
 /*[REM] This file must not use tabs because the dependency recognition code in openjdk does not support them. */
 
+/**
+ * Provides the ConditionException class for z/OS Language Environment condition handling.
+ */
 module openj9.zosconditionhandling {
   exports com.ibm.le.conditionhandling;
 }

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -3382,7 +3382,7 @@ public static MethodHandle insertArguments(MethodHandle originalHandle, int loca
 
 		boolean noValuesToInsert = values.length == 0;  // expected NPE.  Must be null checked before location is checked.
 
-		if ((location < 0) || (location >= originalType.parameterCount())) {
+		if ((location < 0) || (location > (originalType.parameterCount() - values.length))) {
 			throw new IllegalArgumentException();
 		}
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -476,7 +476,7 @@ private void doArrayMethod(FieldDescriptor field) {
 	/* Sample generated code:
 	 *
 	 * @com.ibm.j9ddr.GeneratedFieldAccessor(offsetFieldName="_isDirOffset_", declaredType="uint32_t:1")
-	 * public U32 isDir() throws CorruptDataException {
+	 * public UDATA isDir() throws CorruptDataException {
 	 *     return getU32Bitfield(J9FileStat._isDir_s_, J9FileStat._isDir_b_);
 	 * }
 	 */

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -3382,7 +3382,7 @@ public static MethodHandle insertArguments(MethodHandle originalHandle, int loca
 
 		boolean noValuesToInsert = values.length == 0;  // expected NPE.  Must be null checked before location is checked.
 
-		if ((location < 0) || (location >= originalType.parameterCount())) {
+		if ((location < 0) || (location > (originalType.parameterCount() - values.length))) {
 			throw new IllegalArgumentException();
 		}
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -476,7 +476,7 @@ private void doArrayMethod(FieldDescriptor field) {
 	/* Sample generated code:
 	 *
 	 * @com.ibm.j9ddr.GeneratedFieldAccessor(offsetFieldName="_isDirOffset_", declaredType="uint32_t:1")
-	 * public U32 isDir() throws CorruptDataException {
+	 * public UDATA isDir() throws CorruptDataException {
 	 *     return getU32Bitfield(J9FileStat._isDir_s_, J9FileStat._isDir_b_);
 	 * }
 	 */

File: jcl/src/openj9.sharedclasses/share/classes/com/ibm/oti/shared/SharedClassUtilities.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.oti.shared;
 
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corp. and others
+ * Copyright (c) 2010, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -135,7 +135,7 @@ static public List<SharedClassCacheInfo> getSharedCacheInfo(String cacheDir, int
 	}
 	
 	/**
-	 * Destroys a named shared class cache of a given type in a given directory.
+	 * Destroys a named shared class cache of a given type in a given directory. If the shared class cache has multiple layers, this function will destroy the top layer only.
 	 * <p>
 	 * If <code>useCommandLineValues</code> is <code>true</code>, then use the command line value to get the shared class cache name,
 	 * its type and its directory. If any of these is not available, then use the default value.

File: test/functional/NativeTest/jniargtests/JniArgTests.java
Patch:
@@ -58,7 +58,8 @@ public static void main(String[] args) {
 		jniArgTests.testBlock();
 		jniArgTests.testBlock();
 		jniArgTests.testBlock();
-		jniArgTests.summary();
+		int rc = jniArgTests.summary();
+		System.exit(rc);
 	}
 
 	void testBlock() {
@@ -2805,8 +2806,7 @@ void testBlock() {
 
 	native void logRetValError(String arg);
 
- native void summary();
-
+ 	native int summary();
 
 	native byte nativeBBrB(byte arg1, byte arg2 );
 

File: test/functional/NativeTest/jniargtests/JniArgTests.java
Patch:
@@ -53,7 +53,7 @@ public class JniArgTests {
 	final boolean test_jboolean[] = {true, false};
 	
 	public static void main(String[] args) {
-		System.loadLibrary( "jniargtests" );
+		System.loadLibrary(args[0]);
 		JniArgTests jniArgTests = new JniArgTests();
 		jniArgTests.testBlock();
 		jniArgTests.testBlock();

File: jcl/src/java.base/share/classes/java/lang/Throwable.java
Patch:
@@ -438,7 +438,7 @@ private void readObject(ObjectInputStream s)
 	
 	
 	if (suppressedExceptions != null) {
-		List<Throwable> newList = Collections.EMPTY_LIST;;
+		List<Throwable> newList = Collections.EMPTY_LIST;
 		try {
 /*[IF Sidecar19-SE]*/
 			Module classModule = suppressedExceptions.getClass().getModule();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindCode.java
Patch:
@@ -51,7 +51,7 @@ public UnwindCode(IAddressSpace process, UnwindModule module, UnwindInfo info, l
 		this.address = address;
 	}
 	
-	private byte getOffSet() throws MemoryFault {
+	private byte getOffset() throws MemoryFault {
 		byte offset = (byte)(process.getByteAt(OFFSET_CODEOFFSET + module.getLoadAddress() + address));
 		return offset;
 	}
@@ -204,7 +204,7 @@ public long getNewSP(long currentSP) throws CorruptDataException {
 	
 	public String toString() {
 		try {
-			return String.format("Offset 0x%02x : ", getOffSet()) + formatOp();
+			return String.format("Offset 0x%02x : ", getOffset()) + formatOp();
 		} catch (MemoryFault e) {
 			return "MemoryFault: " + e.getMessage();
 		} catch (CorruptDataException e) {

File: test/functional/TestUtilities/src/org/openj9/test/attachAPI/TargetManager.java
Patch:
@@ -232,13 +232,13 @@ public TargetManager(String cmdName, String targetId,
 	}
 
 	public TargetManager(String cmdName, String targetId,
-			List<String> vmArgs, ArrayList<String> appArgs) {
+			List<String> vmArgs, List<String> appArgs) {
 		this.targetId = targetId;
 		this.proc = launchTarget(cmdName, targetId, null, vmArgs, appArgs);
 	}
 
 	public TargetManager(String cmdName, String targetId, String displayName,
-			List<String> vmArgs, ArrayList<String> appArgs) {
+			List<String> vmArgs, List<String> appArgs) {
 		this.targetId = targetId;
 		this.proc = launchTarget(cmdName, targetId, displayName, vmArgs,
 				appArgs);

File: jcl/src/java.base/share/classes/openj9/tools/attach/diagnostics/base/DiagnosticUtils.java
Patch:
@@ -34,6 +34,7 @@
 import com.ibm.oti.vm.VM;
 import com.ibm.tools.attach.target.IPC;
 
+import openj9.management.internal.InvalidDumpOptionExceptionBase;
 import openj9.management.internal.LockInfoBase;
 import openj9.management.internal.ThreadInfoBase;
 
@@ -126,6 +127,7 @@ public static String makeJcmdCommand(String[] options, int skip) {
 	}
 
 	private static native String getHeapClassStatisticsImpl();
+	private static native String triggerDumpsImpl(String dumpOptions, String event) throws InvalidDumpOptionExceptionBase;
 
 	/**
 	 * Run a diagnostic command and return the result in a properties file

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindCode.java
Patch:
@@ -51,7 +51,7 @@ public UnwindCode(IAddressSpace process, UnwindModule module, UnwindInfo info, l
 		this.address = address;
 	}
 	
-	private byte getOffSet() throws MemoryFault {
+	private byte getOffset() throws MemoryFault {
 		byte offset = (byte)(process.getByteAt(OFFSET_CODEOFFSET + module.getLoadAddress() + address));
 		return offset;
 	}
@@ -204,7 +204,7 @@ public long getNewSP(long currentSP) throws CorruptDataException {
 	
 	public String toString() {
 		try {
-			return String.format("Offset 0x%02x : ", getOffSet()) + formatOp();
+			return String.format("Offset 0x%02x : ", getOffset()) + formatOp();
 		} catch (MemoryFault e) {
 			return "MemoryFault: " + e.getMessage();
 		} catch (CorruptDataException e) {

File: test/functional/NativeTest/jniargtests/JniArgTests.java
Patch:
@@ -56,6 +56,8 @@ public static void main(String[] args) {
 		System.loadLibrary( "jniargtests" );
 		JniArgTests jniArgTests = new JniArgTests();
 		jniArgTests.testBlock();
+		jniArgTests.testBlock();
+		jniArgTests.testBlock();
 		jniArgTests.summary();
 	}
 

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -1784,7 +1784,7 @@ public byte[] getBytes() {
 	 */
 	@Deprecated(forRemoval=false, since="1.1")
 	public void getBytes(int start, int end, byte[] data, int index) {
-		if (0 <= start && start <= end && end <= lengthInternal()) {
+		if (0 <= start && start <= end && end <= lengthInternal() && 0 <= index && ((end - start) <= (data.length - index))) {
 			// Check if the String is compressed
 			if (enableCompression && (null == compressionFlag || coder == LATIN1)) {
 				compressedArrayCopy(value, start, data, index, end - start);
@@ -5756,7 +5756,7 @@ public byte[] getBytes() {
 	 */
 	@Deprecated
 	public void getBytes(int start, int end, byte[] data, int index) {
-		if (0 <= start && start <= end && end <= lengthInternal()) {
+		if (0 <= start && start <= end && end <= lengthInternal() && 0 <= index && ((end - start) <= (data.length - index))) {
 			// Check if the String is compressed
 			if (enableCompression && (null == compressionFlag || count >= 0)) {
 				compressedArrayCopy(value, start, data, index, end - start);

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -1784,7 +1784,7 @@ public byte[] getBytes() {
 	 */
 	@Deprecated(forRemoval=false, since="1.1")
 	public void getBytes(int start, int end, byte[] data, int index) {
-		if (0 <= start && start <= end && end <= lengthInternal()) {
+		if (0 <= start && start <= end && end <= lengthInternal() && 0 <= index && ((end - start) <= (data.length - index))) {
 			// Check if the String is compressed
 			if (enableCompression && (null == compressionFlag || coder == LATIN1)) {
 				compressedArrayCopy(value, start, data, index, end - start);
@@ -5756,7 +5756,7 @@ public byte[] getBytes() {
 	 */
 	@Deprecated
 	public void getBytes(int start, int end, byte[] data, int index) {
-		if (0 <= start && start <= end && end <= lengthInternal()) {
+		if (0 <= start && start <= end && end <= lengthInternal() && 0 <= index && ((end - start) <= (data.length - index))) {
 			// Check if the String is compressed
 			if (enableCompression && (null == compressionFlag || count >= 0)) {
 				compressedArrayCopy(value, start, data, index, end - start);

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -6020,7 +6020,7 @@ public int indexOf(String subString, int start) {
 		int s2len = s2.lengthInternal();
 
 		if (s2len > 0) {
-			if (s2len + start > s1len) {
+			if (start > s1len - s2len) {
 				return -1;
 			}
 

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -6020,7 +6020,7 @@ public int indexOf(String subString, int start) {
 		int s2len = s2.lengthInternal();
 
 		if (s2len > 0) {
-			if (s2len + start > s1len) {
+			if (start > s1len - s2len) {
 				return -1;
 			}
 

File: test/functional/VM_Test/src/j9vm/test/invalidclasspath/SetClasspathTestRunner.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -49,7 +49,7 @@ public class SetClasspathTestRunner extends Runner {
 	String invalidURLMsgFromValidateURL = "URL "+ SetClasspathTest.INVALID_URL1 + " does not have required file or jar protocol.";
 	String invalidURLMsgFromFind = "Classpath contains an invalid URL. Returning null.";
 	String invalidURLMsgFromStore = "Classpath contains an invalid URL. Returning false.";
-	String invalidURLMsgFromNative = "j9jcl.423";	/* Trc_JCL_com_ibm_oti_shared_getCpeTypeForProtocol_UnknownProtocol */
+	String invalidURLMsgFromNative = "j9jcl.113";	/* Trc_JCL_com_ibm_oti_shared_SharedClassURLHelperImpl_storeSharedClassImpl_Entry */
 	
 	/* Following classes are loaded by SetClasspathTest and get stored in shared cache as ROMCLASS */ 
 	private static String romClassList[] = { "TestA1", "TestB3", "TestA4" };

File: jcl/src/java.base/share/classes/java/lang/Access.java
Patch:
@@ -43,7 +43,6 @@
 import sun.reflect.annotation.AnnotationType;
 
 /*[IF Sidecar19-SE]
-import java.lang.Module;
 import java.util.Iterator;
 import java.util.List;
 /*[IF Java11]*/

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -21,14 +21,13 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
 package java.lang;
+
 import java.lang.StackWalker.StackFrameImpl;
 /*[IF Java10]*/
 import java.lang.invoke.MethodType;
 /*[ENDIF]*/
 import java.lang.module.ModuleDescriptor;
 import java.lang.module.ModuleDescriptor.Version;
-import java.lang.IllegalCallerException;
-import java.lang.Module;
 import java.security.Permission;
 import java.util.Collections;
 import java.util.HashSet;

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -38,7 +38,6 @@
 /*[ENDIF] Java12 */
 import jdk.internal.misc.VM;
 import java.lang.StackWalker.Option;
-import java.lang.Module;
 import jdk.internal.reflect.Reflection;
 import jdk.internal.reflect.CallerSensitive;
 import java.util.*;

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -57,7 +57,6 @@
 import java.lang.invoke.VarHandle.AccessMode;
 import java.lang.reflect.Array;
 /*[IF Sidecar19-SE-OpenJ9]*/
-import java.lang.Module;
 /*[IF Java12]*/
 import jdk.internal.access.SharedSecrets;
 import jdk.internal.access.JavaLangAccess;

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -25,8 +25,6 @@
 import com.ibm.oti.vm.VM;
 import com.ibm.oti.vm.VMLangAccess;
 
-import java.lang.Class;
-import java.lang.ClassLoader;
 import java.lang.reflect.Field;
 import java.security.ProtectionDomain;
 import java.util.Objects;

File: jcl/src/java.management/share/classes/java/lang/management/DefaultPlatformMBeanProvider.java
Patch:
@@ -22,8 +22,6 @@
  *******************************************************************************/
 package java.lang.management;
 
-import java.lang.ModuleLayer;
-
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/PlatformMBeanProvider.java
Patch:
@@ -22,7 +22,6 @@
  *******************************************************************************/
 package com.ibm.lang.management.internal;
 
-import java.lang.ModuleLayer;
 import java.lang.management.ManagementFactory;
 import java.util.ArrayList;
 import java.util.Collections;

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/Session.java
Patch:
@@ -462,7 +462,7 @@ private void logCommandLineArgs() {
 	
 	//print some help for the user
 	private void printHelp() {
-		String launcher = System.getProperty(SYSPROP_LAUNCHER, "dtfjview");
+		String launcher = System.getProperty(SYSPROP_LAUNCHER, "jdmpview");
 		
 		out.print(
 				"Usage: \"" + launcher + " -core <core_file> [-verbose]\" or \n" +

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/Session.java
Patch:
@@ -462,7 +462,7 @@ private void logCommandLineArgs() {
 	
 	//print some help for the user
 	private void printHelp() {
-		String launcher = System.getProperty(SYSPROP_LAUNCHER, "dtfjview");
+		String launcher = System.getProperty(SYSPROP_LAUNCHER, "jdmpview");
 		
 		out.print(
 				"Usage: \"" + launcher + " -core <core_file> [-verbose]\" or \n" +

File: jcl/src/java.base/share/classes/java/lang/invoke/DirectHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/Command.java
Patch:
@@ -55,5 +55,6 @@ public interface Command {
 	static final String START_MANAGEMENT_AGENT = "ATTACH_START_MANAGEMENT_AGENT"; //$NON-NLS-1$
 	static final String START_LOCAL_MANAGEMENT_AGENT = "ATTACH_START_LOCAL_MANAGEMENT_AGENT"; //$NON-NLS-1$
 	static final String GET_THREAD_GROUP_INFO = "ATTACH_GET_THREAD_INFO"; //$NON-NLS-1$
+	static final String ATTACH_DIAGNOSTICS_PREFIX = "ATTACH_DIAGNOSTICS:"; //$NON-NLS-1$
 
 }

File: test/functional/Java8andUp/src/org/openj9/test/attachAPI/AttachApiTest.java
Patch:
@@ -52,6 +52,7 @@ abstract class AttachApiTest {
 	private ArrayList<String> vmArgs;
 	/* command for runCommand() */
 	protected String commandName;
+	protected static final String CHILD_PROCESS_DID_NOT_LAUNCH = "Child process did not launch"; //$NON-NLS-1$
 
 	protected void logExceptionInfoAndFail(Exception e) {
 		logStackTrace(e);

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/samplingObjectAllocation/soae001.java
Patch:
@@ -43,8 +43,8 @@ public boolean testDefaultInterval() {
 			System.out.println("Allocated a byte array with size " + bytes.length);
 			
 			int samplingResult = check();
-			if (1 != samplingResult) {
-				System.out.println("com.ibm.jvmti.tests.samplingObjectAllocation.soae001.check() failed, expected 1 but got: " + samplingResult);
+			if (samplingResult < 1) {
+				System.out.println("com.ibm.jvmti.tests.samplingObjectAllocation.soae001.check() failed, expected 1+ but got: " + samplingResult);
 			} else {
 				jvmtiResult = disable();
 				if (0 != jvmtiResult) {

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/samplingObjectAllocation/soae001.java
Patch:
@@ -43,8 +43,8 @@ public boolean testDefaultInterval() {
 			System.out.println("Allocated a byte array with size " + bytes.length);
 			
 			int samplingResult = check();
-			if (1 != samplingResult) {
-				System.out.println("com.ibm.jvmti.tests.samplingObjectAllocation.soae001.check() failed, expected 1 but got: " + samplingResult);
+			if (samplingResult < 1) {
+				System.out.println("com.ibm.jvmti.tests.samplingObjectAllocation.soae001.check() failed, expected 1+ but got: " + samplingResult);
 			} else {
 				jvmtiResult = disable();
 				if (0 != jvmtiResult) {

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/samplingObjectAllocation/soae001.java
Patch:
@@ -37,9 +37,6 @@ public boolean testDefaultInterval() {
 		jvmtiResult = enable();
 		if (0 != jvmtiResult) {
 			System.out.println("com.ibm.jvmti.tests.samplingObjectAllocation.soae001.enable() failed with: " + jvmtiResult);
-			// following to be deleted when actual JEP331 implementation is in place
-			System.out.println("This is expected with an empty JEP331 implementation!");
-			result = true;
 		} else {
 			byte[] bytes;
 			bytes = new byte[DEFAULT_SAMPLING_RATE];

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/xml/XMLDOMComparator.java
Patch:
@@ -169,7 +169,7 @@ private boolean areNodeListsEqual(NodeList resultJ9DDR, NodeList resultJExtract)
 							return false;		//attribute names don't match
 						}
 						if(!attrJ9DDR.getNodeValue().equals(attrJExtract.getNodeValue())) {
-							messages.add("The atribute " + attrJ9DDR.getNodeName()+ " for node " + nodeName + " does not match : " + attrJ9DDR.getNodeValue() + " != " + attrJExtract.getNodeValue());
+							messages.add("The attribute " + attrJ9DDR.getNodeName()+ " for node " + nodeName + " does not match : " + attrJ9DDR.getNodeValue() + " != " + attrJExtract.getNodeValue());
 							return false;		//attribute values don't match
 						}
 					}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/AllClassesCommand.java
Patch:
@@ -144,7 +144,7 @@ private boolean parseArgs(PrintStream out, String[] args) throws DDRInteractiveC
 			/* Maximum 3 arguments can be specified as in: 
 			 * 	!allclasses rom ram 0x1000..0x2000 
 			 */
-			out.append("Invalid number of argments" + nl);
+			out.append("Invalid number of arguments" + nl);
 			return false;
 		}
 		switch (args.length) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ObjectSizeInfo.java
Patch:
@@ -94,7 +94,7 @@ private boolean parseArgs(PrintStream out, String[] args) throws DDRInteractiveC
 		className = null;
 		includeArrays = true;
 		if (args.length > 2) {
-			out.append("Invalid number of argments" + nl);
+			out.append("Invalid number of arguments" + nl);
 			return false;
 		}
 		for (String a: args) {
@@ -106,7 +106,7 @@ private boolean parseArgs(PrintStream out, String[] args) throws DDRInteractiveC
 			} else if (!a.startsWith("-")) {
 				className = a;
 			} else {
-				out.append("Invalid argment: " + a);
+				out.append("Invalid argument: " + a);
 			}
 		}
 		return true;

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceFormat.java
Patch:
@@ -539,7 +539,7 @@ private void prime() throws IOException
 			}
 			if (((fileLength - dataStart) % bufferSize) != 0) {
 				outStream
-						.println("*** TraceFile is truncated, or corrupted, will ignore some incomplete data at the end, but process everything that is avaiable");
+						.println("*** TraceFile is truncated, or corrupted, will ignore some incomplete data at the end, but process everything that is available");
 				traceFileIsTruncatedOrCorrupt = true;
 			}
 			if (numberOfBuffers == 0) {

File: test/functional/JLM_Tests/src/j9vm/test/softmx/RemoteTestServer.java
Patch:
@@ -83,7 +83,7 @@ public static void main(String[] args) {
 
 		memoryExhauster.usePercentageOfHeap(0.8);
 
-		log("Now we have used approximal 80% of current max heap size:  " + aBean.getHeapMemoryUsage().getUsed());
+		log("Now we have used approximately 80% of current max heap size:  " + aBean.getHeapMemoryUsage().getUsed());
 		log("Current committed max heap size is " + aBean.getHeapMemoryUsage().getCommitted());
 
 		//decrease max heap size 1024 bytes to notify SoftRemoteTest that allocation is done

File: test/functional/JLM_Tests/src/j9vm/test/softmx/SoftmxAdvanceTest.java
Patch:
@@ -177,7 +177,7 @@ private void runTestDisclaimMemoryEffects() {
 
 		/* add a waiting time between performing GC and checking for free physical memory in the OS*/
 		try {
-			logger.debug("Going to sleep for 5 seconds after Agressive GC..");
+			logger.debug("Going to sleep for 5 seconds after Aggressive GC..");
 			Thread.currentThread().sleep(5000);
 		} catch (InterruptedException e) {
 			e.printStackTrace();
@@ -187,7 +187,7 @@ private void runTestDisclaimMemoryEffects() {
 		long postMemSize = ibmOSMBean.getFreePhysicalMemorySize();
 
 		logger.debug(
-				"	After resetting softmx and performing an aggresive GC to force heap to shrink, the OS free physical memory size is: "
+				"	After resetting softmx and performing an aggressive GC to force heap to shrink, the OS free physical memory size is: "
 						+ postMemSize + " bytes");
 
 		/*if -Xsoftmx is not present on the command line, -XX option will be ignored, use default setting, which are different on different OS's.

File: test/functional/JLM_Tests/src/j9vm/test/softmx/SoftmxLocalTest.java
Patch:
@@ -195,7 +195,7 @@ public void testSoftmxHasEffects(){
 			Assert.fail("Catch OutOfMemoryError before reaching 80% of current max heap size.");
 		}
 
-		logger.debug( "	Now we have used approximal 80% of current max heap size: " +  ibmBean.getHeapMemoryUsage().getUsed() + " bytes");
+		logger.debug( "	Now we have used approximately 80% of current max heap size: " +  ibmBean.getHeapMemoryUsage().getUsed() + " bytes");
 
 		long new_max_size = (long) (current_max_size * 0.5);
 		logger.debug("	Reset maximum heap size to 50% of original size: " + new_max_size);

File: test/functional/JLM_Tests/src/j9vm/test/softmx/SoftmxRemoteTest.java
Patch:
@@ -205,7 +205,7 @@ public void testSoftmxHasEffects(){
 				new OutputStreamWriter(remoteServer.getOutputStream())), true);*/
 
 		logger.debug( "	Current max heap size:  " + ibmBean.getMaxHeapSize() + " bytes");
-		logger.debug(" 	Start Allocating New Object to approximal 80% of current max heap size.");
+		logger.debug(" 	Start Allocating New Object to approximately 80% of current max heap size.");
 
 
 		//RemoteTestServer will decrease max heap size to indicate allocation done, waiting for maximum 2 mins

File: test/functional/Java8andUp/src/org/openj9/test/contendedfields/ContendedFieldsTests.java
Patch:
@@ -75,7 +75,7 @@ static void getVMConfig() { /* ideally we should have an mxbean to get this info
 			}
 		}
 		paddingIncrement = jep142Restricted ? 0 : CACHE_LINE_SIZE;
-		logger.debug("architecture = " + osArch + " reference size = "+REFERENCE_SIZE+" cache line size = " + CACHE_LINE_SIZE+" object aligment="+FieldUtilities.OBJECT_ALIGNMENT+" contended fields "+(jep142Restricted? "": "un")+"restricted");
+		logger.debug("architecture = " + osArch + " reference size = "+REFERENCE_SIZE+" cache line size = " + CACHE_LINE_SIZE+" object alignment="+FieldUtilities.OBJECT_ALIGNMENT+" contended fields "+(jep142Restricted? "": "un")+"restricted");
 		logger.debug("=============================================================================");
 		vmConfigInitialized = true;
 	}

File: test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java
Patch:
@@ -1102,7 +1102,7 @@ public void test_toCharArray() {
 		// assertTrue("Returned array is of different size", buf.length !=
 		// schars.length);
 		for (int i = 0; i < s.length(); i++)
-			AssertJUnit.assertTrue("Returned incorrect char aray", buf[i] == schars[i]);
+			AssertJUnit.assertTrue("Returned incorrect char array", buf[i] == schars[i]);
 	}
 
 	/**

File: test/functional/Java8andUp/src/org/openj9/test/regression/Cmvc191564.java
Patch:
@@ -43,7 +43,7 @@ public void testAnnotation()  {
 		Annotation[] annotations= OtherClass.class.getAnnotations();
 		for (int i =0 ; i < annotations.length; i++){
 			logger.info("Get Annotations:" + annotations[i].toString());
-			AssertJUnit.assertTrue("Wrong Anotation.",annotations[i].toString().contains("ReferencedClass"));
+			AssertJUnit.assertTrue("Wrong Annotation.",annotations[i].toString().contains("ReferencedClass"));
 		}
 				
 	}

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/LookupAPITests_Unreflect.java
Patch:
@@ -1228,7 +1228,7 @@ public void test_Unreflect_Protected_InnerClass_Nested_DifferentHierarchy_CrossP
 		
 		try {
 			level1InnerClassLookup_crossPackage.unreflect( innerclassMethod_Level2 );
-			System.out.println("IllegalAccessException NOT thrown while attempting to acccess " +
+			System.out.println("IllegalAccessException NOT thrown while attempting to access " +
 					"a protected method inside a level 2 protected inner class in a different package");
 		} catch ( IllegalAccessException e ) {
 			illegalAccessExceptionThrown = true;

File: test/functional/Java8andUp/src/j9vm/test/memory/MemoryAllocator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/Java8andUp/src/org/openj9/test/management/AllocationGenerator.java
Patch:
@@ -156,7 +156,7 @@ public void run() {
 
        		if ((i < (long)largeAllocStart[sizeIndex] * keyCount)
        				|| (i > (long)largeAllocStop[sizeIndex] * keyCount)) {
-       			// this i ugly: we are not replacing old Index; reset back tha counter 
+       			// this is ugly: we are not replacing old Index; revert back that counter
      	        if (null != oldRecord) {
      	        	largeAllocCount[sizeIndex] += 1;
      	        }

File: test/functional/Java8andUp/src/org/openj9/test/nogc/Allocator.java
Patch:
@@ -135,7 +135,7 @@ public void run() {
 
 			if ((i < (long) largeAllocStart[sizeIndex] * keyCount)
 					|| (i > (long) largeAllocStop[sizeIndex] * keyCount)) {
-				// this i ugly: we are not replacing old Index; reset back tha counter
+				// this is ugly: we are not replacing old Index; revert back that counter
 				if (null != oldRecord) {
 					largeAllocCount[sizeIndex] += 1;
 				}

File: test/functional/Java8andUp/src/org/openj9/test/management/AllocationGenerator.java
Patch:
@@ -156,7 +156,7 @@ public void run() {
 
        		if ((i < (long)largeAllocStart[sizeIndex] * keyCount)
        				|| (i > (long)largeAllocStop[sizeIndex] * keyCount)) {
-       			// this i ugly: we are not replacing old Index; reset back tha counter 
+       			// this is ugly: we are not replacing old Index; revert back that counter
      	        if (null != oldRecord) {
      	        	largeAllocCount[sizeIndex] += 1;
      	        }

File: test/functional/Java8andUp/src/org/openj9/test/nogc/Allocator.java
Patch:
@@ -135,7 +135,7 @@ public void run() {
 
 			if ((i < (long) largeAllocStart[sizeIndex] * keyCount)
 					|| (i > (long) largeAllocStop[sizeIndex] * keyCount)) {
-				// this i ugly: we are not replacing old Index; reset back tha counter
+				// this is ugly: we are not replacing old Index; revert back that counter
 				if (null != oldRecord) {
 					largeAllocCount[sizeIndex] += 1;
 				}

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -918,7 +918,7 @@ public static Map<String, String> getenv() {
  * @return the Console or null
  */
 public static Console console() {
-	/*[PR CMVC 114090] System.console does not return null in subprocesss */
+	/*[PR CMVC 114090] System.console does not return null in subprocess */
 	/*[PR CMVC 114119] Console exists when stdin, stdout are redirected */
 	if (consoleInitialized) return console;
 	synchronized(System.class) {

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -3003,7 +3003,8 @@ public boolean isAnnotationPresent(Class<? extends Annotation> annotation) {
 
 /**
  * Cast this Class to a subclass of the specified Class. 
- * @param <U> cls the Class to cast to
+ * @param <U> the type for casting to
+ * @param cls the Class to cast to
  * @return this Class, cast to a subclass of the specified Class
  * 
  * @throws ClassCastException if this Class is not the same or a subclass

File: jcl/src/java.base/share/classes/java/lang/StackTraceElement.java
Patch:
@@ -68,6 +68,7 @@ public StackTraceElement(String cls, String method, String file, int line) {
 /**
  * Create a StackTraceElement from the parameters.
  * 
+ * @param classLoaderName The name for the ClassLoader
  * @param module The module name
  * @param version The module version
  * @param cls The class name

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -199,6 +199,7 @@ private native static <T> T walkWrapperImpl(int flags, String walkerMethod,
 	 * Traverse the calling thread's stack at the time this method is called and
 	 * apply {@code function} to each stack frame.
 	 * 
+	 * @param <T> the type of the return value from applying function to the stream 
 	 * @param function operation to apply to the stream
 	 * @param walkState Pointer to a J9StackWalkState struct
 	 * @return the value returned by {@code function}.
@@ -217,6 +218,7 @@ private static <T> T walkImpl(Function<? super Stream<StackFrame>, ? extends T>
 	 * Traverse the calling thread's stack at the time this method is called and
 	 * apply {@code function} to each stack frame.
 	 * 
+	 * @param <T> the type of the return value from applying function to the stream 
 	 * @param function operation to apply to the stream
 	 * @return the value returned by {@code function}.
 	 */

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -3051,7 +3051,7 @@ public boolean matches(String expr) {
 	/**
 	 * Replace any substrings within this String that match the supplied regular expression expr, with the String substitute.
 	 *
-	 * @param expr
+	 * @param regex 
 	 *			  the regular expression to match
 	 * @param substitute
 	 *			  the string to replace the matching substring with

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleInfo.java
Patch:
@@ -131,7 +131,8 @@ default boolean isVarArgs() {
 	 * Public members are reflected as if by <code>getMethod</code>, <code>getField</code> or <code>getConstructor</code>. 
 	 * Non-public members are reflected as if by <code>getDeclaredMethod</code>, <code>getDeclaredField</code> or <code>getDeclaredConstructor</code>.
 	 * 
-	 * @param expected The expected type of the returned Member
+	 * @param <T> The expected type of the returned Member
+	 * @param expected The expected Class of the returned Member
 	 * @param lookup The lookup that was used to create the MethodHandle, or a lookup object with equivalent access
 	 * @return A Method, Field or Constructor representing the underlying member of the MethodHandle
 	 * @throws NullPointerException If either argument is null

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2007,7 +2007,8 @@ public static MethodHandles.Lookup privateLookupIn(Class<?> targetClass, MethodH
 	 * 
 	 * If a SecurityManager is present, this method requires <code>ReflectPermission("suppressAccessChecks")</code>.
 	 * 
-	 * @param expected the expected type of the underlying member
+	 * @param <T> the type of the underlying member
+	 * @param expected the expected Class of the underlying member
 	 * @param target the direct MethodHandle to be cracked
 	 * @return the underlying member of the <code>target</code> MethodHandle
 	 * @throws SecurityException if the caller does not have the required permission (<code>ReflectPermission("suppressAccessChecks")</code>)

File: jcl/src/java.base/share/classes/java/lang/invoke/WrongMethodTypeException.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -47,6 +47,8 @@ public WrongMethodTypeException() {
 	
 	/**
 	 * Construct a WrongMethodTypeException with the supplied message.
+	 *
+	 * @param message The message for the exception
 	 */
 	public WrongMethodTypeException(String message){
 		super(message);

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -3003,7 +3003,8 @@ public boolean isAnnotationPresent(Class<? extends Annotation> annotation) {
 
 /**
  * Cast this Class to a subclass of the specified Class. 
- * @param <U> cls the Class to cast to
+ * @param <U> the type for casting to
+ * @param cls the Class to cast to
  * @return this Class, cast to a subclass of the specified Class
  * 
  * @throws ClassCastException if this Class is not the same or a subclass

File: jcl/src/java.base/share/classes/java/lang/StackTraceElement.java
Patch:
@@ -68,6 +68,7 @@ public StackTraceElement(String cls, String method, String file, int line) {
 /**
  * Create a StackTraceElement from the parameters.
  * 
+ * @param classLoaderName The name for the ClassLoader
  * @param module The module name
  * @param version The module version
  * @param cls The class name

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -199,6 +199,7 @@ private native static <T> T walkWrapperImpl(int flags, String walkerMethod,
 	 * Traverse the calling thread's stack at the time this method is called and
 	 * apply {@code function} to each stack frame.
 	 * 
+	 * @param <T> the type of the return value from applying function to the stream 
 	 * @param function operation to apply to the stream
 	 * @param walkState Pointer to a J9StackWalkState struct
 	 * @return the value returned by {@code function}.
@@ -217,6 +218,7 @@ private static <T> T walkImpl(Function<? super Stream<StackFrame>, ? extends T>
 	 * Traverse the calling thread's stack at the time this method is called and
 	 * apply {@code function} to each stack frame.
 	 * 
+	 * @param <T> the type of the return value from applying function to the stream 
 	 * @param function operation to apply to the stream
 	 * @return the value returned by {@code function}.
 	 */

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -3051,7 +3051,7 @@ public boolean matches(String expr) {
 	/**
 	 * Replace any substrings within this String that match the supplied regular expression expr, with the String substitute.
 	 *
-	 * @param expr
+	 * @param regex 
 	 *			  the regular expression to match
 	 * @param substitute
 	 *			  the string to replace the matching substring with

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleInfo.java
Patch:
@@ -131,7 +131,8 @@ default boolean isVarArgs() {
 	 * Public members are reflected as if by <code>getMethod</code>, <code>getField</code> or <code>getConstructor</code>. 
 	 * Non-public members are reflected as if by <code>getDeclaredMethod</code>, <code>getDeclaredField</code> or <code>getDeclaredConstructor</code>.
 	 * 
-	 * @param expected The expected type of the returned Member
+	 * @param <T> The expected type of the returned Member
+	 * @param expected The expected Class of the returned Member
 	 * @param lookup The lookup that was used to create the MethodHandle, or a lookup object with equivalent access
 	 * @return A Method, Field or Constructor representing the underlying member of the MethodHandle
 	 * @throws NullPointerException If either argument is null

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2007,7 +2007,8 @@ public static MethodHandles.Lookup privateLookupIn(Class<?> targetClass, MethodH
 	 * 
 	 * If a SecurityManager is present, this method requires <code>ReflectPermission("suppressAccessChecks")</code>.
 	 * 
-	 * @param expected the expected type of the underlying member
+	 * @param <T> the type of the underlying member
+	 * @param expected the expected Class of the underlying member
 	 * @param target the direct MethodHandle to be cracked
 	 * @return the underlying member of the <code>target</code> MethodHandle
 	 * @throws SecurityException if the caller does not have the required permission (<code>ReflectPermission("suppressAccessChecks")</code>)

File: jcl/src/java.base/share/classes/java/lang/invoke/WrongMethodTypeException.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2009 IBM Corp. and others
+ * Copyright (c) 2009, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -47,6 +47,8 @@ public WrongMethodTypeException() {
 	
 	/**
 	 * Construct a WrongMethodTypeException with the supplied message.
+	 *
+	 * @param message The message for the exception
 	 */
 	public WrongMethodTypeException(String message){
 		super(message);

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -918,7 +918,7 @@ public static Map<String, String> getenv() {
  * @return the Console or null
  */
 public static Console console() {
-	/*[PR CMVC 114090] System.console does not return null in subprocesss */
+	/*[PR CMVC 114090] System.console does not return null in subprocess */
 	/*[PR CMVC 114119] Console exists when stdin, stdout are redirected */
 	if (consoleInitialized) return console;
 	synchronized(System.class) {

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/AttachHandler.java
Patch:
@@ -481,7 +481,7 @@ static boolean terminateWaitLoop(boolean wakeHandler, int retryNumber) {
 					 * Therefore, notify myself 
 					 */
 					if (wakeHandler) {
-						CommonDirectory.notifyVm(1); 
+						CommonDirectory.notifyVm(1, true); 
 					}
 					destroySemaphore = true;
 				} else if (wakeHandler) {
@@ -493,7 +493,7 @@ static boolean terminateWaitLoop(boolean wakeHandler, int retryNumber) {
 					 * it wakes up.
 					 */
 					setDoCancelNotify(true); /* get the handler thread to close the semaphore */
-					CommonDirectory.notifyVm(numTargets); 
+					CommonDirectory.notifyVm(numTargets, true); 
 					/* CMVC 162086. add an extra notification since the count won't include this VM: the advertisement directory is already deleted */
 				}
 			} finally {

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/WaitLoop.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 package com.ibm.tools.attach.target;
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -81,7 +81,7 @@ private Attachment waitForNotification(boolean retry) throws IOException {
 				if (LOGGING_DISABLED != loggingStatus) {
 					IPC.logMessage("iteration ", AttachHandler.notificationCount, " waitForNotification cancelNotify"); //$NON-NLS-1$ //$NON-NLS-2$
 				}
-				CommonDirectory.cancelNotify(AttachHandler.getNumberOfTargets());
+				CommonDirectory.cancelNotify(AttachHandler.getNumberOfTargets(), true);
 			}
 			return null;
 		} 
@@ -107,7 +107,7 @@ private Attachment waitForNotification(boolean retry) throws IOException {
 						IPC.logMessage("semaphore recovery: send test post"); //$NON-NLS-1$
 						int numTargets = CommonDirectory.countTargetDirectories();
 						AttachHandler.setNumberOfTargets(numTargets);
-						CommonDirectory.notifyVm(numTargets); 
+						CommonDirectory.notifyVm(numTargets, true); 
 						CommonDirectory.releaseMasterLock();
 					}
 					return waitForNotification(false);

File: jcl/src/jdk.attach/share/classes/com/ibm/tools/attach/attacher/OpenJ9VirtualMachine.java
Patch:
@@ -428,7 +428,7 @@ private void tryAttachTarget(int timeout) throws IOException,
 				} else {
 					lockAllAttachNotificationSyncFiles(vmds);
 					numberOfTargets = CommonDirectory.countTargetDirectories();
-					int status = CommonDirectory.notifyVm(numberOfTargets);
+					int status = CommonDirectory.notifyVm(numberOfTargets, descriptor.isGlobalSemaphore());
 					/*[MSG "K0532", "status={0}"]*/
 					if ((IPC.JNI_OK != status)
 							&& (CommonDirectory.J9PORT_INFO_SHSEM_OPENED_STALE != status)) {
@@ -468,7 +468,7 @@ private void tryAttachTarget(int timeout) throws IOException,
 				}
 				if (numberOfTargets > 0) { /*[PR 48044] if number of targets is 0, then the VM is attaching to itself  and the semaphore was not involved */
 					unlockAllAttachNotificationSyncFiles();
-					CommonDirectory.cancelNotify(numberOfTargets);
+					CommonDirectory.cancelNotify(numberOfTargets, descriptor.isGlobalSemaphore());
 
 					if (numberOfTargets > 2) {
 						try {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/command/CommandParser.java
Patch:
@@ -192,7 +192,7 @@ private void parse(List<String> allTokens) throws ParseException {
 		}
 	}
 
-// TokenisinState classes
+// TokenisingState classes
 	
 	/**
 	 * A mini state machine. Each state receives a character and returns the next state.

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/AIXDumpReader.java
Patch:
@@ -462,7 +462,7 @@ String getCommandLine() throws CorruptDataException
 	//
 	// // Get the process environment variables
 	// Properties environment = new Properties();
-	// //on AIX, we should truse the env var pointer found in the core and
+	// //on AIX, we should trust the env var pointer found in the core and
 	// ignore whatever the XML told us it is since this internal value is more
 	// likely correct
 	// environment = getEnvironmentVariables(reg5);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/ELFDumpReader.java
Patch:
@@ -495,7 +495,7 @@ private void createAllModules(ELFFileReader executableELF, String executableName
 			}
 		}
 		
-		// TODO - Sort modules. For the sake of tidyness.
+		// TODO - Sort modules. For the sake of tidiness.
 		_modules.addAll(allModules);
 		ELFFileReader readerForExectuableOnDiskOrAppended = getReaderForModuleOnDiskOrAppended(executableName);
 		_executable = createModuleFromElfReader(executableBaseAddress, executableName, executableELF, readerForExectuableOnDiskOrAppended);
@@ -1280,7 +1280,7 @@ && isValidAddress(stackPointer)
 							ptr += _process.bytesPerPointer() * getOffsetToIPFromBP();
 							instructionPointer = maskInstructionPointer(_process.getPointerAt(ptr));
 							unwindTable = unwinder.getUnwindTableForInstructionAddress(instructionPointer);
-							// TODO - if we do tranistion back to unwinding with DWARF we need to get the registers right.
+							// TODO - if we do transition back to unwinding with DWARF we need to get the registers right.
 						} else {
 							logger.log(Level.FINER, "Base pointer is zero");
 						}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ModuleStream.java
Patch:
@@ -146,7 +146,7 @@ class ModuleData {
 				IModule module;
 				if( runtimeFunctionList != null ) {
 					module = new UnwindModule(as.getProcesses().iterator().next(),moduleName,symbols,sections, thisModule.imageBaseAddress, properties, runtimeFunctionList);
-					// Uncommend to dump unwind info as we find it. This is very verbose.
+					// Uncomment to dump unwind info as we find it. This is very verbose.
 					// ((UnwindModule)module).dumpUndwindInfo(System.err);
 				} else {
 					module = new Module(as.getProcesses().iterator().next(),moduleName,symbols,sections, thisModule.imageBaseAddress, properties);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindCode.java
Patch:
@@ -83,7 +83,7 @@ private short getNode2() throws MemoryFault {
 	 * http://msdn.microsoft.com/en-US/library/ck9asaa9%28v=vs.80%29
 	 * The operations marked as untested haven't yet been found in any stack
 	 * (and are quite rare to find in the unwind info for dll's at all) so
-	 * if have found and corrected one please remove the unteseted label.
+	 * if have found and corrected one please remove the untested label.
 	 */
 	public String formatOp() throws CorruptDataException {
 		byte opCode = getOpCode();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/DsaStackFrame.java
Patch:
@@ -340,7 +340,7 @@ void ceextbck(long dsaptr, boolean isDownStack, Caa caa) throws IOException {
                 } else {
                     /* 
                      * Check whether this module is a wrapped
-                     * trnsfer vector.                      
+                     * transfer vector.                      
                      *   If the module entry-point + 0 = X'47F0Fxxx'
                      *      (a 'BR xxx(15)' instruction)           
                      *     Calculate the address of the signature:

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Tcb.java
Patch:
@@ -266,7 +266,7 @@ public RegisterSet getRegistersFromBPXGMSTA() throws IOException {
             long rbp = tcbrbp();
             long rbsecptr = 0;    /* The last RB read */
             long save2rbptr = 0;  /* The second to last RB read */
-            long save2XsbPtr = 0; /* XSB virutal address */
+            long save2XsbPtr = 0; /* XSB virtual address */
             long saveXsbAddr = 0;
             log.fine("for tcb " + hex(address) + ", rbp = " + hex(rbp));
             int countRbs = 0;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCHeapMapWordIterator.java
Patch:
@@ -66,7 +66,7 @@ private J9ObjectPointer nextObject()
 		J9ObjectPointer nextObject = null;
 		
 		if (!_cache.eq(0)) {
-			/* TODO: lpnguyen, Note that numberOfTrailingZeros in java refers == numberOfLeadingZeros in C verison of this.. */
+			/* TODO: lpnguyen, Note that numberOfTrailingZeros in java refers == numberOfLeadingZeros in C version of this.. */
 			int trailingZeros = _cache.numberOfTrailingZeros();
 			long slotsToSkip = (trailingZeros * MM_HeapMap.J9MODRON_HEAP_SLOTS_PER_HEAPMAP_BIT);
 			_heapSlotCurrent = _heapSlotCurrent.add(slotsToSkip);

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -834,11 +834,11 @@ public static MethodType genericMethodType(int numParameters) throws IllegalArgu
 	/**
 	 * Wrapper on {@link #methodType(Class, Class[])}.
 	 * <br>
-	 * Return a MethodType with an Object return and only Object parameters.  If isVarags is true, the
+	 * Return a MethodType with an Object return and only Object parameters.  If isVarargs is true, the
 	 * final parameter will be an Object[].  This Object[] parameter is NOT included in the numParameters
 	 * count. 
 	 * 
-	 * @param numParameters - number of parameters not including the isVarags parameter (if requested)
+	 * @param numParameters - number of parameters not including the isVarargs parameter (if requested)
 	 * @param isVarargs - if the Object[] parameter should be added
 	 * @return the requested MethodType object
 	 * @throws IllegalArgumentException if numParameters is less than 0 or greater than the allowed number of arguments (255 or 254 if isVarargs)

File: jcl/src/java.base/share/classes/java/lang/invoke/SecurityFrameInjector.java
Patch:
@@ -240,7 +240,7 @@ static MethodHandle penetrateSecurityFrame(MethodHandle potentialInjectFrame, Lo
 		final MethodType originalMT = potentialInjectFrame.type;
 		
 		// SecurityFrames are always represented as:
-		// 1) VaragsCollectHandle -> AsTypeHandle -> RBH with bound value being an instance of SecurityFrame
+		// 1) VarargsCollectHandle -> AsTypeHandle -> RBH with bound value being an instance of SecurityFrame
 		// 2) AsTypeHandle -> RBH with bound value being an instance of SecurityFrame
 		// 3) RBH with bound value being an instance of SecurityFrame if signature is (Object[])Object
 		boolean mustBeVarags = false;

File: jcl/src/openj9.dataaccess/share/classes/com/ibm/dataaccess/DecimalData.java
Patch:
@@ -2329,7 +2329,7 @@ public static void convertBigIntegerToExternalDecimal(
      * @param bigIntegerValue
      *            BigInteger value to be converted
      * @param unicodeDecimal
-     *            char array that will hold the Unicde decimal on a successful return
+     *            char array that will hold the Unicode decimal on a successful return
      * @param offset
      *            offset into <code>unicodeDecimal</code> where the Unicode Decimal is expected to be located
      * @param precision

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/zos/le/DsaStackFrame.java
Patch:
@@ -323,7 +323,7 @@ void ceextbck(long dsaptr, boolean isDownStack, Caa caa) throws IOException {
                 } else {
                     /* 
                      * Check whether this module is a wrapped
-                     * trnsfer vector.                      
+                     * transfer vector.                      
                      *   If the module entry-point + 0 = X'47F0Fxxx'
                      *      (a 'BR xxx(15)' instruction)           
                      *     Calculate the address of the signature:

File: jcl/src/openj9.dtfj/share/classes/com/ibm/java/diagnostics/utils/commands/CommandParser.java
Patch:
@@ -193,7 +193,7 @@ private void parse(List<String> allTokens) throws ParseException {
 		}
 	}
 
-// TokenisinState classes
+// TokenisingState classes
 	
 	/**
 	 * A mini state machine. Each state receives a character and returns the next state.

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceRecord50.java
Patch:
@@ -302,7 +302,7 @@ private byte[] readRecord(TraceFile traceFile) throws IOException {
 	/**
 	 * primeRecord readies this UtTraceRecord to have its tracepoint data read.
 	 * 
-	 * Each tracepoint's length field is at the end of the tracepoint, so the traceoints are
+	 * Each tracepoint's length field is at the end of the tracepoint, so the tracepoints are
 	 * formatted backwards out of the record. To enable forward iteration, the whole record 
 	 * must be formatted into a queue, which is then iterated over in reverse order.
 	 * 

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/Builder.java
Patch:
@@ -168,7 +168,7 @@ public void setIncremental(boolean isIncremental) {
 	}
 
 	/**
-	 * Returns wheter or not this builder will only do an incremental build.
+	 * Returns whether or not this builder will only do an incremental build.
 	 *
 	 * @return		<code>true</code> if the build is incremental, <code>false</code> otherwise
 	 */

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/ClassPathEntry.java
Patch:
@@ -160,7 +160,7 @@ public boolean isLibrary() {
 	}
 
 	/**
-	 * Returns wheter or not this classpath points to a local library
+	 * Returns whether or not this classpath points to a local library
 	 *
 	 * @return      <code>true</code> if this points to a local library, <code>false</code> otherwise
 	 */

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/ConfigObject.java
Patch:
@@ -393,7 +393,7 @@ public Map<String, ConfigObject> getAllDependJobs() {
 	}
 
 	/**
-	 * Returns thsi ConfigObject's immediate configuration dependencies.
+	 * Returns this ConfigObject's immediate configuration dependencies.
 	 *
 	 * @return      the configuration dependencies
 	 */

File: sourcetools/j9constantpool/com/ibm/oti/VMCPTool/CmakeFlagInfo.java
Patch:
@@ -34,7 +34,7 @@ class CmakeFlagInfo implements IFlagInfo {
 	private HashSet<String> seenFlags = new HashSet<String>();
 	private HashSet<String> setFlags = new HashSet<String>();
 
-	// Convert string  to  bool unsing same rules as cmake
+	// Convert string  to  bool using same rules as cmake
 	private static boolean strToBool(String str) {
 		str = str.trim().toUpperCase();
 		if (str.isEmpty() || str.equals("NO") || str.equals("FALSE") || str.equals("OFF") || str.endsWith("-NOTFOUND")) {

File: sourcetools/objectmodel/com/ibm/j9tools/om/FlagDefinitions.java
Patch:
@@ -57,7 +57,7 @@ public void setRuntime(String runtime) {
 	}
 
 	/**
-	 * Returns the runtime to wich this flag definition belongs to, or <code>null</code> if none.
+	 * Returns the runtime to which this flag definition belongs to, or <code>null</code> if none.
 	 * 
 	 * @return the runtime
 	 */

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TestManager.java
Patch:
@@ -322,7 +322,7 @@ public static void startCompilationInBackground( boolean multipleClassLoaderRequ
 		jarTesterMTDriver = new JarTesterMTDriver( multipleClassLoaderRequired, multiThreadedCompilationRequired, jarDir );
 		jarTesterMTDriver.start();
 
-		//TODO: Do we need to give the compilation thiread this time to index the jar?
+		//TODO: Do we need to give the compilation thread this time to index the jar?
 		try {
 			Thread.sleep(2000);
 		} catch (InterruptedException e) {

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TrampolineTest_Basic.java
Patch:
@@ -45,7 +45,7 @@ protected void tearDown() throws Exception {
 	}
 
 	/**
-	 * Basic trampline tests where code caches are sufficiently distant from each other,
+	 * Basic trampoline tests where code caches are sufficiently distant from each other,
 	 * and inter-code cache dispatches are made.
 	 */
 	public void testTrampolineBasic(){

File: test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_ThreadGroup.java
Patch:
@@ -483,7 +483,7 @@ public void test_getParent() {
 		final int TOTAL_DEPTH = 5;
 		ThreadGroup current = testRoot;
 		Vector groups = new Vector();
-		// To maintain teh invariant that a thread in the Vector is parent
+		// To maintain the invariant that a thread in the Vector is parent
 		// of the next one in the collection (and child of the previous one)
 		groups.addElement(testRoot);
 

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/MethodHandleTest.java
Patch:
@@ -901,7 +901,7 @@ public void test_invokeWithArguments_VarArgs_EdgeArityLimit() throws Throwable {
 	 * ****************************/
 	
 	/**
-	 * asFixedArity test to ensure MethodHandles.lookup().find* methods returned varargs handles for methods with the ACC_VARAGS bit
+	 * asFixedArity test to ensure MethodHandles.lookup().find* methods returned varargs handles for methods with the ACC_VARARGS bit
 	 * @throws Throwable
 	 */
 	@Test(groups = { "level.extended" })
@@ -1179,7 +1179,7 @@ public void test_invokeWithArguments_VarargsObj_CrossPackage_Static_ZeroLengthAr
 	 * **************************************/
 	
 	/**
-	 * Test isVarargsCollector using a call to asVaragrsCollector
+	 * Test isVarargsCollector using a call to asVarargsCollector
 	 * @throws Throwable
 	 */
 	@Test(groups = { "level.extended" })

File: test/functional/VM_Test/src/com/ibm/j9/recreateclass/tests/RecreateClassCompareTest.java
Patch:
@@ -130,7 +130,7 @@ public void testStackMapTable() throws Exception {
 	public void testStackMapTableTestWithBooleanArray() throws Exception {
 		System.out.println("Start testStackMapTableTestWithBooleanArray");
 		/* To follow the Java 9 Spec in which boolean arrays are different from byte arrays
-		 * in terms of verfication type, Recreated StackMapTableWithByteBooleanArrayTest is 
+		 * in terms of verification type, recreated StackMapTableWithByteBooleanArrayTest is 
 		 * expected to keep boolean array in verification_type array of StackMapTable.
 		 */
 		runTest(StackMapTableWithByteBooleanArrayTest.class, 0);

File: test/functional/VM_Test/src/j9vm/test/invalidclasspath/SetClasspathTest.java
Patch:
@@ -124,7 +124,7 @@ public static void main(String args[]) throws Exception {
 		loader.setClasspath(urls5);
 		/* TestB3 should be stored as ROMCLASS in cache, as there is no invalid URL in the classpath.
 		 * Do not load any class from InvalidClasspathResource3.jar otherwise it will get marked as 'confirmed' by the VM
-		 * and further tranformations to remove InvalidClasspathResource3.jar won't be allowed.
+		 * and further transformations to remove InvalidClasspathResource3.jar won't be allowed.
 		 */
 		Class.forName("TestB3", true, loader);
 		

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/StripGarbage.java
Patch:
@@ -123,7 +123,7 @@ private static String stripGarbage(String contents)
 	 * Removes multi-line or single sections from the supplied data. It assumes that the data is continued over multiple lines by use of the \ character.
 	 * @param data string to scan matches for
 	 * @param pattern regex describing the start of the match
-	 * @param blockID string describing how a multi-line block is identifed e.g. { or \
+	 * @param blockID string describing how a multi-line block is identified e.g. { or \
 	 * @param terminator string describing the termination of a the multi-line match (note this is currently not a reg-ex)
 	 * @return the altered data or if no matches were found the unchanged data
 	 */

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/UnwindTable.java
Patch:
@@ -130,7 +130,7 @@ private void buildRuleTable(FDE fde, long instructionPointer) throws IOException
 		state.registerRules = new HashMap<Integer, RegisterRule>();
 
 		{
-//			out.printf("CIE has initial instuctions:\n");
+//			out.printf("CIE has initial instructions:\n");
 //			
 //			String s = "";
 //			for( byte b: fde.getCIE().getInitialInstructions() ) {
@@ -157,7 +157,7 @@ private void buildRuleTable(FDE fde, long instructionPointer) throws IOException
 		}
 
 		{
-//			System.err.printf("FDE has instuctions:\n");
+//			System.err.printf("FDE has instructions:\n");
 //			
 //			String s = "";
 //			for( byte b: fde.getCallFrameInstructions()) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/unwind/UnwindInfo.java
Patch:
@@ -48,7 +48,7 @@ public class UnwindInfo {
 	
 	/**
 	 * Constructor for UnwindInfo, takes the address in
-	 * the module where the unwind infomation can be found.
+	 * the module where the unwind information can be found.
 	 * @param address
 	 * @throws CorruptDataException 
 	 * @throws IOException 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/libraries/SlidingFileInputStream.java
Patch:
@@ -78,7 +78,7 @@ public int read() throws IOException {
 	
 	
 	/**
-	 * Actually closes the underlying stream. The close() method does not close the stream so as to allow it's resuse.
+	 * Actually closes the underlying stream. The close() method does not close the stream so as to allow its resuse.
 	 * @throws IOException
 	 */
 	public void disposeStream() throws IOException {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/PointerGenerator.java
Patch:
@@ -685,7 +685,7 @@ private void writeBitFieldMethod(PrintWriter writer, StructureDescriptor structu
 	}
 
 	/**
-	 * Quick hack to remove specific generated field implemenations because
+	 * Quick hack to remove specific generated field implementations because
 	 * they will interfere with changes to the implementation made my the user.
 	 *
 	 * You only have to add methods that would be generated but need to be altered

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java
Patch:
@@ -172,7 +172,7 @@ private void allSlotsInROMHeaderDo() throws CorruptDataException {
 			srpCursor = srpCursor.add(1);
 		}
 
-		/* walk innner classes SRPs block */
+		/* walk inner classes SRPs block */
 		srpCursor = romClass.innerClasses();
 		count = romClass.innerClassCount().intValue();
 		classWalkerCallback.addSection(clazz, srpCursor, count * SelfRelativePointer.SIZEOF, "innerClassesSRPs", true);

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -3704,7 +3704,7 @@ public boolean equals(Object that) {
 	}
 	
 	/**
-	 * Add a method to the list.  newMethod may be discarded if it is masked by an incumnbent method in the list.
+	 * Add a method to the list.  newMethod may be discarded if it is masked by an incumbent method in the list.
 	 * Also, an incumbent method may be removed if newMethod masks it.
 	 * In general, a target class inherits a method from its direct superclass or directly implemented interfaces unless:
 	 * 	- the method is static or private and the declaring class is not the target class 

File: jcl/src/java.base/share/classes/java/lang/InstantiationError.java
Patch:
@@ -30,7 +30,7 @@
  * of a class which has no visible constructors from
  * the location where new is invoked.
  * <p>
- * Note that this can only occur when inconsistant
+ * Note that this can only occur when inconsistent
  * class files are being loaded.
  *
  * @author		OTI

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -1223,7 +1223,7 @@ public Class<?> lookupClass() {
 		
 		/**
 		 * Make a MethodHandle to the Reflect method.  If the method is non-static, the receiver argument
-		 * is treated as the intial argument in the MethodType.  
+		 * is treated as the initial argument in the MethodType.  
 		 * <p>
 		 * If m is a virtual method, normal virtual dispatch is used on each invocation.
 		 * <p>

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -952,7 +952,7 @@ private native void copySwapMemory0(Object srcObj, long srcOffset, Object destOb
 	 * Returns byte offset to start of static class or interface.
 	 * 
 	 * @param field which contains desired class or interface
-	 * @return offset to start of class or iterface
+	 * @return offset to start of class or interface
 	 * 
 	 * @throws NullPointerException if field parameter is null
 	 * @throws IllegalArgumentException if field is not static
@@ -1478,7 +1478,7 @@ public long objectFieldOffset(Class<?> c, String fieldName) {
 	 * Returns byte offset to start of static class or interface.
 	 * 
 	 * @param field which contains desired class or interface
-	 * @return offset to start of class or iterface
+	 * @return offset to start of class or interface
 	 * 
 	 * @throws NullPointerException if field parameter is null
 	 * @throws IllegalArgumentException if field is not static

File: jcl/src/openj9.dataaccess/share/classes/com/ibm/dataaccess/DecimalData.java
Patch:
@@ -1262,7 +1262,7 @@ private static void convertPackedDecimalToUnicodeDecimal_(
      * @param checkOverflow
      *            if true an <code>ArithmeticException</code> will be thrown if the decimal value does not fit in the
      *            specified precision (overflow)
-     * @return BigInteger the resulting BigIntger
+     * @return BigInteger the resulting BigInteger
      * 
      * @throws ArrayIndexOutOfBoundsException
      *             if an invalid array access occurs

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/addressspace/IAbstractAddressSpace.java
Patch:
@@ -29,7 +29,7 @@
 
 /**
  * @author jmdisher
- * The interface for the abstract interface.  Note that there will probably only ever be one implementor of 
+ * The interface for the abstract interface.  Note that there will probably only ever be one implementer of 
  * this interface so it will probably be flattened once it is frozen
  */
 public interface IAbstractAddressSpace 

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/image/ImageFactory.java
Patch:
@@ -30,7 +30,7 @@
 
 /**
  * <p>This interface is used for classes which can produce instances of Image
- * implementors.</p>
+ * implementers.</p>
  *
  * <p>Classes that implement this interface should provide a zero argument, public
  * constructor so that they can be created using {@code Class.newInstance()}.</p>

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/image/j9/IFileLocationResolver.java
Patch:
@@ -29,7 +29,7 @@ public interface IFileLocationResolver
 {
 	/**
 	 * Used to lookup files at runtime.  The fullPath is used as a hint for how to find the file and what
-	 * it is called but implementors are free to use whatever RI are necessary to find and return
+	 * it is called but implementers are free to use whatever RI are necessary to find and return
 	 * the adequate file
 	 * 
 	 * @param fullPath The full path to the file

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/java/JavaReference.java
Patch:
@@ -121,7 +121,7 @@ public interface JavaReference
 
     /**
      * Get a string describing the reference type.
-     * Implementors should not depend on the contents or identity of this string.
+     * Implementers should not depend on the contents or identity of this string.
      * e.g. "JNI Weak global reference", "Instance field 'MyClass.value'", "Constant pool string constant"
      * @return a String describing the reference type
      */

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/java/j9/JavaObject.java
Patch:
@@ -554,7 +554,7 @@ public Iterator getSections()
 					int totalLeafCount = (0 == tailLeafSize) ? fullSizeLeaves : (fullSizeLeaves + 1);
 					//CMVC 153943 : DTFJ fix for zero-length arraylets - remove code to add 1 to the leaf count in the event that it is 0.
 					//by always assuming there is a leaf means that when the image sections are determined it will cause an error as there
-					//is no space allocated in this instace beyond the size of the spine.
+					//is no space allocated in this instance beyond the size of the spine.
 					String nestedType = arrayForm.getLeafClass().getName();
 					//4-byte object alignment in realtime requires the long and double arraylets have padding which may need to be placed before the array data or after, depending on if the alignment succeeded at a natural boundary or not
 					boolean alignmentCandidate = (4 == _objectAlignment) && ("double".equals(nestedType) || "long".equals(nestedType));

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/builder/IImageBuilderFactory.java
Patch:
@@ -32,7 +32,7 @@ public interface IImageBuilderFactory  {
 	/**
 	 * Usually, there is just one image builder factory per javacore
 	 * @param id unique
-	 * @return generated iamge builder factory
+	 * @return generated image builder factory
 	 */
 	public IImageBuilder generateImageBuilder(String id);
 }

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/parser/framework/tag/ILineRule.java
Patch:
@@ -28,7 +28,7 @@
  * Parses a string source pertaining to a tag line from a javacore, and returns
  * a map of tokens, where the token type (java.lang.String) is the key and token value (java.lang.String)is the value.
  * 
- * The Line Rule is generally referenced internally by the framework, so the subtype implementators don't
+ * The Line Rule is generally referenced internally by the framework, so the subtype implementers don't
  * need to worry about where a line rule is being used. All that needs to be done is implementing
  * the logic of how to parse a string, and how to generate the tokens.
  *

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/utils/file/FileSniffer.java
Patch:
@@ -49,7 +49,7 @@ public class FileSniffer {
 	//minidump identifier
 	private static final int MINIDUMP = 0x4D444D50;	//MDMP
 	
-	//userdump identfier
+	//userdump identifier
 	private static final int USERDUMP_1 = 0x55534552;
 	private static final int USERDUMP_2 = 0x44554D50;
 	

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/ExceptionHandler.java
Patch:
@@ -236,7 +236,7 @@ private static DTFJMethod checkInterfaces(Class<?> c, String methodName) {
 			}
 			Class<?> ic;
 			try {
-				//now check any possible super-interaces for this one
+				//now check any possible super-interfaces for this one
 				ic = Class.forName(interfaceName, true, ctx.getAddressSpace()
 						.getClass().getClassLoader());
 				om = checkInterfaces(ic, methodName);

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceRecord.java
Patch:
@@ -176,7 +176,7 @@ protected TraceRecord(TraceFile traceFile, long start)  throws IOException
         this.bufferSize    = traceFile.traceFileHeader.getBufferSize();
         this.traceFile     = traceFile;
         this.start         = start;
-        this.currentTimeStamp = timeStamp; // for intial sort
+        this.currentTimeStamp = timeStamp; // for initial sort
 
         // Validity check the nextEntry field. Note that a value of -1                      ibm@51252
         // indicates that this record does not contain the start of a trace                 ibm@51252

File: sourcetools/objectmodel/com/ibm/j9tools/om/ObjectFactory.java
Patch:
@@ -499,7 +499,7 @@ public FeatureDefinition loadFeatureDefinition(File file) throws InvalidFeatureD
 	 * @param 	inputStream 		the feature definition input stream
 	 * @return 	the newly loaded feature definition
 	 *
-	 * @throws InvalidFeatureDefinitionException 		thrown if errors are found while parsing the feature definition intput stream
+	 * @throws InvalidFeatureDefinitionException 		thrown if errors are found while parsing the feature definition input stream
 	 */
 	public FeatureDefinition loadFeatureDefinition(InputStream inputStream, String objectId) throws InvalidFeatureDefinitionException {
 		FeatureParser parser = new FeatureParser();

File: test/functional/JIT_Test/src/jit/test/jitt/geCasting/clearHighOrderBits.java
Patch:
@@ -130,7 +130,7 @@ static int bu2i( int i )
     return (int)b & 0xFF;
   }
 
-  // su2i - short integer to interger - zero extension NILH
+  // su2i - short integer to integer - zero extension NILH
   static int su2i( int x )
   {
     // cast to short and then back to int to get it go into su2iEvaluator.

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InvokeInterface.java
Patch:
@@ -68,7 +68,7 @@ public void testInvokeInterface() {
 		}
 		
 		/* exercise the PIC by using three different 
-		 * implementors, and invoking each one twice 
+		 * implementers, and invoking each one twice 
 		 * */
 		if(5 != tstSendingInterfaceMethod(true, 5, new X())) {
 			Assert.fail("did not get back what was passed (send #1)");

File: test/functional/JIT_Test/src/jit/test/tr/signExtensionA/SignExtElimTest.java
Patch:
@@ -88,7 +88,7 @@ public void testAddressElim(){
   }
 
   /**
-   * elim should not happen as indicies designed
+   * elim should not happen as indices designed
    * to overflow
    */
   @Test

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -396,7 +396,7 @@ private void triggerDump(OpenJ9DiagnosticsMXBean diagBean) throws FileNotFoundEx
 	 * Function to test if the requested dumps are triggered to the specified file names.
 	 *
 	 * @param diagBean OpenJ9DiagnosticsMXBean instance that has already been initialized.
-	 * @param test indicates if itis a local or remote test
+	 * @param test indicates if it is a local or remote test
 	 */	
 	private void triggerDumpToFile(OpenJ9DiagnosticsMXBean diagBean, String test) throws InvalidOptionException, FileNotFoundException, IOException {
 		boolean found = false;

File: test/functional/Java8andUp/src/j9vm/test/invoker/InvokeSpecialInsideInterface.java
Patch:
@@ -44,15 +44,15 @@ default Boolean identity() {
  *	interface NodeInterface implements Root {
  *		default Boolean callRootIdentity(Object receiver) {
  *			// aload_0 replaced with aload_1
- * 	 		return Root.super.idenity();
+ * 	 		return Root.super.identity();
  *	 	}
  * 	}
  *
  *  Defined in NodeClass.jasm:
  *	class NodeClass implements NodeInterface {
  *		Boolean callRootIdentity(Object receiver) {
  *			// aload_0 replaced with aload_1
- *			return Root.super.idenity();
+ *			return Root.super.identity();
  *		}
  *	}
  */

File: test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -445,7 +445,7 @@ public void testInterfaceMethodInheritance() {
 	
 	/*
 	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
-	 * This means that the following methods are not inherited by implementors of M3:
+	 * This means that the following methods are not inherited by implementers of M3:
 	 * InterfaceTestClasses$I1.m1
 	 * InterfaceTestClasses$I1.m2
 	 * InterfaceTestClasses$I1.m3
@@ -502,7 +502,7 @@ public void testDefaultMethodInheritance() {
 	HashMap<Class, String[]> expectedMethods = new HashMap<>();
 	/*
 	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
-	 * This means that the following methods are now hidden in implementors of SuperA:
+	 * This means that the following methods are now hidden in implementers of SuperA:
 	 * SuperDuper.abstractInSuperA_abstractInSuperDuper()
 	 * SuperDuper.abstractInSuperA_defaultInSuperDuper()
 	 */

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -445,7 +445,7 @@ public void testInterfaceMethodInheritance() {
 	
 	/*
 	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
-	 * This means that the following methods are not inherited by implementors of M3:
+	 * This means that the following methods are not inherited by implementers of M3:
 	 * InterfaceTestClasses$I1.m1
 	 * InterfaceTestClasses$I1.m2
 	 * InterfaceTestClasses$I1.m3
@@ -502,7 +502,7 @@ public void testDefaultMethodInheritance() {
 	HashMap<Class, String[]> expectedMethods = new HashMap<>();
 	/*
 	 * As of Java 9, method declarations in subinterfaces hide declarations of the same method in superinterfaces.
-	 * This means that the following methods are now hidden in implementors of SuperA:
+	 * This means that the following methods are now hidden in implementers of SuperA:
 	 * SuperDuper.abstractInSuperA_abstractInSuperDuper()
 	 * SuperDuper.abstractInSuperA_defaultInSuperDuper()
 	 */

File: test/functional/SharedCPEntryInvokerTests/src/org/openj9/test/invoker/util/DummyClassGenerator.java
Patch:
@@ -67,7 +67,7 @@ protected byte[] modifyInvokerOperand() throws Exception {
 					int bcIndex = ci.next();
 					int bc = ci.byteAt(bcIndex);
 					if (bc == Opcode.INVOKEINTERFACE) {
-						/* found invokeinterfce bytecode */
+						/* found invokeinterface bytecode */
 						cpIndex = ci.s16bitAt(bcIndex + 1);
 						break;
 					}

File: test/functional/VM_Test/src/com/ibm/j9/recreateclass/testclasses/SharedInvokersTestGenerator.java
Patch:
@@ -71,7 +71,7 @@ public static byte[] modifyInvokerOperand(byte[] data) throws Exception {
 			int bcIndex = ci.next();
 			int bc = ci.byteAt(bcIndex);
 			if (bc == Opcode.INVOKEINTERFACE) {
-				/* found invokeinterfce bytecode */
+				/* found invokeinterface bytecode */
 				cpIndex = ci.s16bitAt(bcIndex + 1);
 				break;
 			}

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/redefineClasses/rc011.java
Patch:
@@ -138,7 +138,7 @@ private boolean verify(rc011_testReorderingInterfaceMethods_O1 obj, rc011_testRe
 	}
 
 	public boolean testReorderingInterfaceMethods() throws ClassNotFoundException {
-		// Ensure two implementors of the tested interfaces to prevent the
+		// Ensure two implementers of the tested interfaces to prevent the
 		// JIT from optimizing away the invokeinterface.
 		Class.forName("com.ibm.jvmti.tests.redefineClasses.rc011_testReorderingInterfaceMethods_O2b");
 		Class.forName("com.ibm.jvmti.tests.redefineClasses.rc011_testReorderingInterfaceMethods_O6b");

File: debugtools/DDR_Autoblob/src/com/ibm/j9ddr/autoblob/GenerateBlobC.java
Patch:
@@ -356,7 +356,7 @@ private static Map<String, FileTypes> extractTypes(GenerateBlobCConfig config, S
 				/*
 				 * CMVC 193975 - adam
 				 * 
-				 * When running the build on Windows if a relative path has been used with / delimeters for the name
+				 * When running the build on Windows if a relative path has been used with / delimiters for the name
 				 * e.g. common/thrtypes , then Windows will treat the entire string as the file name rather than a directory
 				 * followed by a file name as Linux does. In order to correctly fallback to match just the name of the 
 				 * header file on Window's systems, only the characters after the last / can be used.

File: debugtools/DDR_VM/src/com/ibm/j9ddr/BytecodeGenerator.java
Patch:
@@ -40,7 +40,7 @@
 
 /**
  * Generates the class bytecodes needed by DDR to represent, as Java classes,
- * the structures and pointers decribed by the blob.
+ * the structures and pointers described by the blob.
  */
 public class BytecodeGenerator {
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/mvs/Tcb.java
Patch:
@@ -246,7 +246,7 @@ public RegisterSet getRegistersFromBPXGMSTA() throws IOException {
          *                                                                 
          * 1) Single RB on the input TCB RB chain                          
          *    a) If current linkage stack is empty, registers are extracted
-         *       from the input TCB and PSW is extraced from the current   
+         *       from the input TCB and PSW is extracted from the current   
          *       RB.                                                       
          *    b) If linkage stack is present, and non-fast path Kernel     
          *       call has been issued, registers and PSW are extracted     

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCArrayletObjectModelBase_V1.java
Patch:
@@ -440,7 +440,7 @@ protected UDATA numArraylets(UDATA unadjustedDataSizeInBytes) throws CorruptData
 
 	/**
 	 * Return the total number of arraylets for an indexable object, not including the arraylet in the spine.
-	 * Note that discontiugous arrays always have an empty leaf contained in the spine.  
+	 * Note that discontiguous arrays always have an empty leaf contained in the spine.  
 	 * @param array pointer to array
 	 * @return the number of leaf arraylets
 	 */	

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckEngine.java
Patch:
@@ -952,7 +952,7 @@ private int checkClassStatics(J9ClassPointer clazz)
 					//		if ((NULL == classToCast) || (0 == instanceOfOrCheckCast(J9GC_J9OBJECT_CLAZZ(*address), classToCast))) {
 					// The issue is that we can't simply call "internalFindClassUTF8" in DDR.
 					// We could guess at the behaviour of the ClassLoader, but that makes 
-					// distingushing a real problem from a weird ClassLoader delegation
+					// distinguishing a real problem from a weird ClassLoader delegation
 					// model difficult.
 				}
 	

File: jcl/src/java.base/share/classes/com/ibm/jit/BigDecimalConverters.java
Patch:
@@ -37,7 +37,7 @@ public static BigDecimal signedPackedDecimalToBigDecimal(byte[] packedDecimal, i
          long longPack = 0;
          if (packedDecimal.length == 8)
          {
-            // explicitely unrolled loop to take advantage of sequential load
+            // explicitly unrolled loop to take advantage of sequential load
             longPack = ((long)(packedDecimal[0] & 0xFF) << 56)
                 + ((long)(packedDecimal[1] & 0xFF) << 48)
                 + ((long)(packedDecimal[2] & 0xFF) << 40)

File: jcl/src/java.base/share/classes/java/lang/Compiler.java
Patch:
@@ -25,7 +25,7 @@
  
 /**
  * This class is a placeholder for environments which
- * explicitely manage the action of a "Just In Time"
+ * explicitly manage the action of a "Just In Time"
  * compiler.
  *
  * @author		OTI

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleInfo.java
Patch:
@@ -129,7 +129,7 @@ default boolean isVarArgs() {
 	/**
 	 * Reflects the underlying member as a Method, Field or Constructor. The member must be accessible to the provided lookup object.
 	 * Public members are reflected as if by <code>getMethod</code>, <code>getField</code> or <code>getConstructor</code>. 
-	 * Non-public members are reflected as if by <code>getDeclearedMethod</code>, <code>getDeclaredField</code> or <code>getDeclaredConstructor</code>.
+	 * Non-public members are reflected as if by <code>getDeclaredMethod</code>, <code>getDeclaredField</code> or <code>getDeclaredConstructor</code>.
 	 * 
 	 * @param expected The expected type of the returned Member
 	 * @param lookup The lookup that was used to create the MethodHandle, or a lookup object with equivalent access

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -1218,7 +1218,7 @@ public ClassDesc varType() {
 		/**
 		 * Helper to retrieve declaring class descriptor from superclass bootstrap arguments.
 		 * 
-		 * @return ClassDesc declaring class desccriptor
+		 * @return ClassDesc declaring class descriptor
 		 * @throws InternalError if VarHandleDesc was created improperly or instance is not a field
 		 */
 		private ClassDesc getFieldDeclaringClassDesc() {
@@ -1234,7 +1234,7 @@ private ClassDesc getFieldDeclaringClassDesc() {
 		/**
 		 * Helper to retrieve field type descriptor from superclass bootstrap arguments.
 		 * 
-		 * @return ClassDesc field type desccriptor
+		 * @return ClassDesc field type descriptor
 		 * @throws InternalError if VarHandleDesc was created improperly or instance is not a field
 		 */
 		private ClassDesc getFieldTypeClassDesc() {

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -5840,7 +5840,7 @@ public final void putCharUnaligned(Object obj, long offset, char value, boolean
 	 * otherwise an IllegalArgumentException is thrown
 	 * 
 	 * @param bbo a ByteBuffer object
-	 * @throws IllegalArgumentException as per decription above
+	 * @throws IllegalArgumentException as per description above
 	 */
 	public void invokeCleaner(ByteBuffer bbo) {
 		if (bbo instanceof DirectBuffer) {

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/parser/j9/JavaCoreReader.java
Patch:
@@ -146,7 +146,7 @@ private Charset attemptCharset(ByteBuffer headByteBuffer, Charset trialCharset)
 		if (head.indexOf(sectionEyeCatcher) >= 0) {
 			int idx = head.indexOf(charsetEyeCatcher);
 			
-			/* The charset eyecather is much newer, so may not be present */
+			/* The charset eyecatcher is much newer, so may not be present */
 			if (idx >= 0) {
 				idx += charsetEyeCatcher.length();
 				String javacoreCharset = head.substring(idx).trim();

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/utils/file/FileSniffer.java
Patch:
@@ -260,7 +260,7 @@ private static Charset attemptCharset(ByteBuffer headByteBuffer, Charset trialCh
 		if (head.indexOf(sectionEyeCatcher) >= 0) {
 			int idx = head.indexOf(charsetEyeCatcher);
 			
-			/* The charset eyecather is much newer, so may not be present */
+			/* The charset eyecatcher is much newer, so may not be present */
 			if (idx >= 0) {
 				idx += charsetEyeCatcher.length();
 				String javacoreCharset = head.substring(idx).trim();

File: jcl/src/openj9.dtfj/share/classes/com/ibm/jvm/j9/dump/indexsupport/NodeField.java
Patch:
@@ -34,7 +34,7 @@ public class NodeField extends NodeAbstract
 {
 	public NodeField(JavaClass theClass, Attributes attributes)
 	{
-		//an instance field which is decendent of JavaClass in the XML
+		//an instance field which is descendant of JavaClass in the XML
 		//<field class="0x17be60" name="path" sig="Ljava/lang/String;" modifiers="0x20082" offset="16"/>
 		long classID = _longFromString(attributes.getValue("class"));	//the ID of the class where the field is declared
 		String name = attributes.getValue("name");

File: jcl/src/openj9.dtfj/share/classes/com/ibm/jvm/j9/dump/indexsupport/XMLInputStream.java
Patch:
@@ -338,7 +338,7 @@ private char readNextChar() throws IOException {
 	/**
 	 * Allows the process to peek ahead in the stream and see what the next closing tag is.
 	 * It handles peeks beyond the end of the current buffer contents.
-	 * @param the delimeter which indicates the end of the tag name
+	 * @param the delimiter which indicates the end of the tag name
 	 * @return the name of the tag found
 	 * @throws IOException re-throw exceptions.
 	 */

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/Format2Tprof.java
Patch:
@@ -67,7 +67,7 @@ public void run(String args[]) {
                  public int compare(Object o1, Object o2) {
                     MethodEntry m1 = (MethodEntry) o1;
                     MethodEntry m2 = (MethodEntry) o2;
-                    return m2.count - m1.count;   // in decending order
+                    return m2.count - m1.count;   // in descending order
                   }
                }
             );

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceArgs.java
Patch:
@@ -140,13 +140,13 @@ public TraceArgs(String[] args) throws UsageException
                         }                        
                     } else if ( args[index].startsWith("-50") ){
 			/* this offers a manual override to enforce 50 behaviour when the trace file has a version number of
-			 * < 5.0. This could be useful if you have a development build that produced a snap but didn;t yet have
+			 * < 5.0. This could be useful if you have a development build that produced a snap but didn't yet have
 			 * the ute.h patch to upgrade the version number in the headers.
 			 */
 			is50orNewer = true;
 		    } else if ( args[index].startsWith("-11") ){
 			/* this offers a manual override to enforce 50 behaviour when the trace file has a version number of
-			 * < 5.0. This could be useful if you have a development build that produced a snap but didn;t yet have
+			 * < 5.0. This could be useful if you have a development build that produced a snap but didn't yet have
 			 * the ute.h patch to upgrade the version number in the headers.
 			 */
 			is50orNewer = false;

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceSection.java
Patch:
@@ -68,7 +68,7 @@ public TraceSection (TraceFile traceFile, int start ) throws IOException
         Util.Debug.println("TraceSection: modification:        " + modification);
         Util.Debug.println("TraceSection: startPlatform:       " + startPlatform);
         Util.Debug.println("TraceSection: startSystem:         " + startSystem);
-        Util.Debug.println("TraceSection: type:                " + type); //  0=internal 1=extrenal
+        Util.Debug.println("TraceSection: type:                " + type); //  0=internal 1=external
         Util.Debug.println("TraceSection: generations:         " + generations);
         Util.Debug.println("TraceSection: pointerSize:         " + pointerSize);
 

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/ConfigurationRegistry.java
Patch:
@@ -254,7 +254,7 @@ public boolean registerConfiguration(ConfigObject config, boolean local) {
 
 	/**
 	 * Used if a configuration is added with the same name as a previous one.
-	 * It is not a recommended practice to override the an exisiting configuration
+	 * It is not a recommended practice to override the an existing configuration
 	 * as it may produce unexpected results.
 	 * <p>
 	 * A configuration can be also defined as local if it was defined in the registry's

File: sourcetools/j9nls/com/ibm/oti/NLSTool/J9NLS.java
Patch:
@@ -153,7 +153,7 @@ private void generatePropertiesFiles(String outFileName, boolean palmMode) throw
 		Vector defaultNLSFiles = (Vector) localeHashtable.get(DEFAULT_LOCALE);
 		StringBuffer buffer = new StringBuffer();
 
-		// Create the output directory if it doesnt exist
+		// Create the output directory if it doesn't exist
 		File outputDir = new File(workingDirectory + fileSeparator + "nls");
 		if (!outputDir.exists()) {
 				dp("Output directory does not exist, creating it");

File: sourcetools/objectmodel/com/ibm/j9tools/om/FeatureDefinition.java
Patch:
@@ -30,7 +30,7 @@
 import java.util.TreeMap;
 
 /**
- * The Feature class defines the elements of a J9 Build Spec Feature.  It encompases flags and sources
+ * The Feature class defines the elements of a J9 Build Spec Feature.  It encompasses flags and sources
  * which are common among multiple build specifications and should be re-used.
  * 
  * @author 	Gabriel Castro

File: sourcetools/objectmodel/com/ibm/j9tools/om/FlagDefinition.java
Patch:
@@ -65,7 +65,7 @@ public class FlagDefinition extends OMObject implements Comparable<FlagDefinitio
 	/**
 	 * A set of requires flags. 
 	 * Represents a depends-on linkage between flags. Indicates that the flag requires
-	 * that another flag be enabled. The flag which is dependended upon is identified 
+	 * that another flag be enabled. The flag which is dependent upon is identified 
 	 * by name using the flag attribute.
 	 */
 	protected Map<String, FlagDefinition> requires = new TreeMap<String, FlagDefinition>();

File: sourcetools/objectmodel/com/ibm/j9tools/om/FlagDefinitions.java
Patch:
@@ -146,7 +146,7 @@ public FlagDefinition getFlagDefinition(String flagDefinitionId) {
 	/**
 	 * Retrieve the HashMap containing all flag definitions contained by this FlagDefinitions object. 
 	 * 
-	 * @return	A HashMap with all the flag defintions that this FlagDefinitions object holds.
+	 * @return	A HashMap with all the flag definitions that this FlagDefinitions object holds.
 	 */
 	public Map<String, FlagDefinition> getFlagDefinitions() {
 		return Collections.unmodifiableMap(_flagDefinitions);

File: sourcetools/objectmodel/com/ibm/j9tools/om/ObjectFactory.java
Patch:
@@ -725,14 +725,14 @@ public Map<String, FeatureDefinition> getFeatureDefinitionsMap() {
 	}
 
 	/**
-	 * Loads a runtime's build-info, flag defintions as well as all the valid build specs and features
+	 * Loads a runtime's build-info, flag definitions as well as all the valid build specs and features
 	 * contained in this <code>ObjectFactory</code>'s config directory.
 	 *
 	 * Errors found when loading the build-info and flag definitions are considered fatal and will result
 	 * on an {@link InvalidFactoryException} being thrown (even if errors are delayed).  Errors found
 	 * when loading features or build specs will result in that element not being loaded into the factory.
 	 *
-	 * @param delayErrors		delay throwing exeptions unless error is critical (build-info or flags invalid)
+	 * @param delayErrors		delay throwing exceptions unless error is critical (build-info or flags invalid)
 	 * 
 	 * @throws InvalidFactoryException		thrown if errors are found when initializing factory elements
 	 */
@@ -801,7 +801,7 @@ public void initialize() throws InvalidFactoryException {
 	}
 
 	/**
-	 * Verifies the flag definitons, features, and build specs for validity.  This is to be used
+	 * Verifies the flag definitions, features, and build specs for validity.  This is to be used
 	 * when modifying elements on a object factory that has already been initialized.
 	 *
 	 * @throws 	InvalidFactoryException		thrown if errors are found when verifying factory elements

File: sourcetools/objectmodel/com/ibm/j9tools/om/SourceVerifier.java
Patch:
@@ -27,7 +27,7 @@
 import java.util.Set;
 
 /**
- * Verifier class to check the existance of the sources in a given {@link ISourceContainer}.
+ * Verifier class to check the existence of the sources in a given {@link ISourceContainer}.
  * 
  * @author	Gabriel Castro
  * @author	Han Xu

File: test/functional/DDR_Test/src/j9vm/test/ddrext/junit/TestDDRExtensionGeneral.java
Patch:
@@ -444,7 +444,7 @@ public void testDclibs() {
 		assertTrue(validate(output, Constants.DCLIBS_SUCCESS_KEYS,
 				Constants.DCLIBS_FAILURE_KEYS, false));
 		
-		//if library is collected to the core, then test "!dclibs extrac" command to extract libs to temp folder
+		//if library is collected to the core, then test "!dclibs extract" command to extract libs to temp folder
 		if (output.contentEquals(Constants.DCLIBS_LIB_COLLENTED)){
 			String output2 = exec(Constants.DCLIBS_CMD, new String[] {"extract" });
 			assertTrue(validate(output2, Constants.DCLIBS_EXTRACT_SUCCESS_KEYS,

File: test/functional/JIT_Test/src/jit/test/jitt/geCasting/signExtendedHighOrderBits.java
Patch:
@@ -121,7 +121,7 @@ static byte i2b( int i )
     return b;
   }
 
-  // b2i evalutor, but not into if case for GE instr because parent is ibload
+  // b2i evaluator, but not into if case for GE instr because parent is ibload
   //   Vijay: The only byte datatype nodes i know we will create are ibload and x2b where
   //          x can be i,l,s,c
   int b2i()

File: test/functional/JIT_Test/src/jit/test/jitt/math/longCompare.java
Patch:
@@ -60,7 +60,7 @@ private static void tstFoo(long i) {
 	}
 
 	/* these tests are designed to tests the lcmp?? 
-	 * evaulators, at least when run at lowOpt
+	 * evaluators, at least when run at lowOpt
 	 */	
 	private static boolean tstCmpLT(long l1, long l2) {
 		boolean result = l1 < l2;

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestThreadMXBean.java
Patch:
@@ -1453,7 +1453,7 @@ public final void testGetMBeanInfo() {
 	//        final Object lock1 = new Object();
 	//        ThreadInfo[] threadinfos = tb.dumpAllThreads(true, true);
 	//        // must be more than 6 thread: ReaderThread,Attach Listener, Signal
-	//        // Disparcher, Finalizer, Reference Harndler, main
+	//        // Dispatcher, Finalizer, Reference Harndler, main
 	//        AssertJUnit.assertTrue(threadinfos.length >= 6);
 	//        int threadsum = threadinfos.length;
 	//        new Thread() {
@@ -1483,7 +1483,7 @@ public final void testGetMBeanInfo() {
 	//        long[] ids = tb.getAllThreadIds();
 	//        ThreadInfo[] threadinfos = tb.getThreadInfo(ids, true, true);
 	//        // must be more than 6 thread: ReaderThread,Attach Listener, Signal
-	//        // Disparcher, Finalizer, Reference Harndler, main
+	//        // Dispatcher, Finalizer, Reference Harndler, main
 	//        int threadsum = threadinfos.length;
 	//        AssertJUnit.assertTrue(threadsum >= 6);
 	//        for (int i = 0; i < threadinfos.length; i++) {

File: test/functional/Java12andUp/src/org/openj9/test/java_lang_invoke/Test_MethodType.java
Patch:
@@ -55,7 +55,7 @@ private void describeConstableTestGeneral(String testName, MethodType type) thro
 
 		MethodTypeDesc desc = descOp.orElseThrow();
 
-		/* verify that descriptor can be resolved. Otherwise a ReflectiveOperationExeption will be thrown */
+		/* verify that descriptor can be resolved. Otherwise a ReflectiveOperationException will be thrown */
 		MethodType resolveType = (MethodType)desc.resolveConstantDesc(MethodHandles.lookup());
 
 		logger.debug(testName + ": Descriptor of original type is: " + type.descriptorString() + " descriptor of descriptor is: " + resolveType.descriptorString());

File: test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_J9VMInternalsImpl.java
Patch:
@@ -70,7 +70,7 @@ public void runTest1() {
 					"try instantiating a Class that cannot be loaded because of LinkageError, then enable loading of the class and still fail to load"); //$NON-NLS-1$
 			/*
 			 * There is magic here. The ClassLoader will:
-			 * - throw OutOfMemoryErorr the first time NCDFEHelper is loaded
+			 * - throw OutOfMemoryError the first time NCDFEHelper is loaded
 			 * - throw LinkageError the second time NCDFEHelper is loaded
 			 * - load NCDFEHelper in all subsequent attempts
 			 */

File: test/functional/Jsr292/src/com/ibm/j9/jsr292/LookupAPITests_Find.java
Patch:
@@ -1072,7 +1072,7 @@ public void test_GetterSetter_Private_CrossPackage_SubclassLookup() throws Throw
 	
 	/**
 	 * Negative test : findSetter, findGetter test using private fields of an inner classes (level 1 deep)
-	 * where the lookup class is the top level outer class belonging to a diffrent package.
+	 * where the lookup class is the top level outer class belonging to a different package.
 	 * @throws Throwable
 	 */
 	@Test(groups = { "level.extended" })

File: test/functional/UnsafeTest/src_90/org/openj9/test/unsafe/TestUnsafeAccess.java
Patch:
@@ -344,7 +344,7 @@ public void testDefineAnonymousClass() throws Exception {
 		Class<?> anon = myUnsafe.defineAnonymousClass(Object.class, bytes, null);
 		
 		/* Anonymous Class = java/lang/DummyClass; Host Class = java/lang/Object 
-		 * No execption should be thrown since anonymous class and host class
+		 * No exception should be thrown since anonymous class and host class
 		 * are in the same package.
 		 */
 		bytes = createDummyClass("java/lang");

File: test/functional/cmdLineTests/gcRegressionTests/src/com/ibm/tests/garbagecollector/TestClassLoaderMain.java
Patch:
@@ -24,7 +24,7 @@
 import java.io.InputStream;
 
 /**
- * This test is to excercise the GC's dynamic class unloading capability.  It tries to load a class and then instantiate thousands
+ * This test is to exercise the GC's dynamic class unloading capability.  It tries to load a class and then instantiate thousands
  * of copies of it in an array which it continues to over-write with new copies of the class or other objects to force the creation
  * of large amounts of garbage.  Note that this test will give most useful results if run with -Xalwaysclassgc
  *

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/forceEarlyReturn/fer001.java
Patch:
@@ -24,7 +24,7 @@
 
 
 /*
- *  Depracated in favour of fer003
+ *  Deprecated in favour of fer003
  * 
  */
 

File: test/functional/cmdLineTests/jvmtitests/src/com/ibm/jvmti/tests/forceEarlyReturn/fer003.java
Patch:
@@ -25,7 +25,7 @@
  * 
  * @author mac
  *
- * Depracates fer001 which has synchronization issues however we still want to 
+ * Deprecates fer001 which has synchronization issues however we still want to 
  * keep it for debug purposes (disabled in testing)
  *
  */

File: test/functional/cmdline_options_tester/src/Test.java
Patch:
@@ -168,7 +168,7 @@ public boolean run(long defaultTimeout) {
 				exeToDebug = cmdArray[0];
 				proc = Runtime.getRuntime().exec(cmdArray, TestSuite.getEnvironmentVariableList(), userDir);
 			} else {
-				// Use a buffer to build the command line from the _commandExcutable and the _commandArgs
+				// Use a buffer to build the command line from the _commandExecutable and the _commandArgs
 				StringBuilder buffer = new StringBuilder(TestSuite.evaluateVariables(_commandExecutable));
 				for (String arg : _commandArgs) {
 					buffer.append(' ');
@@ -709,7 +709,7 @@ private synchronized void killTimedOutProcess() {
 						return;
 					}
 					TestSuite.printErrorMessage("ABRT timed out");
-					/* When ABRT times out, try to kill the process with kill -9 to make sure it doesn's stop the rest */
+					/* When ABRT times out, try to kill the process with kill -9 to make sure it doesn't stop the rest */
 					TestSuite.printErrorMessage("executing kill -9 " + pid);
 					Process procKill9 = Runtime.getRuntime().exec("kill -9 " + pid);
 					procKill9.waitFor();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/CoreInfoCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -52,7 +52,7 @@ public class CoreInfoCommand extends Command
 	
 	public CoreInfoCommand()
 	{
-		addCommand("coreinfo", "", "Prints commandline ,platform and -version info of VM found in the current core file.");
+		addCommand("coreinfo", "", "Prints commandline, platform and -version info of VM found in the current core file.");
 	}
 	
 	/**
@@ -61,7 +61,7 @@ public CoreInfoCommand()
      * @param out PrintStream to print the output to the console.
      */
 	private void printUsage (PrintStream out) {
-		out.println("coreinfo - Prints commandline ,platform and -version info of VM found in the current core file.");
+		out.println("coreinfo - Prints commandline, platform and -version info of VM found in the current core file.");
 	}
 	
 	/**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/CoreInfoCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -52,7 +52,7 @@ public class CoreInfoCommand extends Command
 	
 	public CoreInfoCommand()
 	{
-		addCommand("coreinfo", "", "Prints commandline ,platform and -version info of VM found in the current core file.");
+		addCommand("coreinfo", "", "Prints commandline, platform and -version info of VM found in the current core file.");
 	}
 	
 	/**
@@ -61,7 +61,7 @@ public CoreInfoCommand()
      * @param out PrintStream to print the output to the console.
      */
 	private void printUsage (PrintStream out) {
-		out.println("coreinfo - Prints commandline ,platform and -version info of VM found in the current core file.");
+		out.println("coreinfo - Prints commandline, platform and -version info of VM found in the current core file.");
 	}
 	
 	/**

File: test/functional/Java8andUp/src/org/openj9/test/java/security/OpenSSLInvalidCBCKeySizeTest.java
Patch:
@@ -50,7 +50,7 @@ public static void testCBC() {
         AlgorithmParameterSpec iviv = new IvParameterSpec(iv);
 
         try {
-            Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding", "SunJCE");
+            Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
             cipher.init(Cipher.ENCRYPT_MODE, skey, iviv);
             cipher.doFinal();
             Assert.fail("InvalidKeyException is expected to be thrown");
@@ -59,8 +59,8 @@ public static void testCBC() {
             logger.debug("InvalidKeyException thrown as expected");
             logger.debug(e);
         } catch (Exception e) {
+            logger.error(e);
             Assert.fail("Unexpected exception thrown");
-            logger.debug(e);
         }
     }
 }

File: test/functional/Java8andUp/src/org/openj9/test/java/security/OpenSSLInvalidGCMKeySizeTest.java
Patch:
@@ -51,7 +51,7 @@ public static void testGCM() {
         byte[] iv = new byte[12];
 
         try {
-            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding", "SunJCE");
+            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
             AlgorithmParameterSpec iva = new GCMParameterSpec(tagLen * 8, iv);
             cipher.init(Cipher.ENCRYPT_MODE, skey, iva);
             cipher.doFinal(data, 0, data.length, tagBuffer);
@@ -61,8 +61,8 @@ public static void testGCM() {
             logger.debug("InvalidKeyException thrown as expected");
             logger.debug(e);
         } catch (Exception e) {
+            logger.error(e);
             Assert.fail("Unexpected exception thrown");
-            logger.debug(e);
         }
     }
 }

File: test/functional/Java8andUp/src/org/openj9/test/java/security/OpenSSLInvalidCBCKeySizeTest.java
Patch:
@@ -50,7 +50,7 @@ public static void testCBC() {
         AlgorithmParameterSpec iviv = new IvParameterSpec(iv);
 
         try {
-            Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding", "SunJCE");
+            Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
             cipher.init(Cipher.ENCRYPT_MODE, skey, iviv);
             cipher.doFinal();
             Assert.fail("InvalidKeyException is expected to be thrown");
@@ -59,8 +59,8 @@ public static void testCBC() {
             logger.debug("InvalidKeyException thrown as expected");
             logger.debug(e);
         } catch (Exception e) {
+            logger.error(e);
             Assert.fail("Unexpected exception thrown");
-            logger.debug(e);
         }
     }
 }

File: test/functional/Java8andUp/src/org/openj9/test/java/security/OpenSSLInvalidGCMKeySizeTest.java
Patch:
@@ -51,7 +51,7 @@ public static void testGCM() {
         byte[] iv = new byte[12];
 
         try {
-            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding", "SunJCE");
+            Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
             AlgorithmParameterSpec iva = new GCMParameterSpec(tagLen * 8, iv);
             cipher.init(Cipher.ENCRYPT_MODE, skey, iva);
             cipher.doFinal(data, 0, data.length, tagBuffer);
@@ -61,8 +61,8 @@ public static void testGCM() {
             logger.debug("InvalidKeyException thrown as expected");
             logger.debug(e);
         } catch (Exception e) {
+            logger.error(e);
             Assert.fail("Unexpected exception thrown");
-            logger.debug(e);
         }
     }
 }

File: test/functional/DDR_Test/src/j9vm/test/ddrext/Constants.java
Patch:
@@ -258,17 +258,17 @@ public class Constants {
 
 	public static final String SHRC_FINDJITH = "findjith";
 	public static final String SHRC_FINDJITH_METHODNAME = "<init>";
-	public static final String SHRC_FINDJITH_SUCCESS_KEY = "<init>\\(.*\\),JITHINT data !j9x,.*/Object";
+	public static final String SHRC_FINDJITH_SUCCESS_KEY = "<init>\\(.*\\),JITHINT data !j9x,java/.*";
 	public static final String SHRC_FINDJITH_FAILURE_KEY = "No entry found in the cache";
 
 	public static final String SHRC_FINDJITHP = "findjithp";
 	public static final String SHRC_FINDJITHP_METHODPREFIX = "<init>";
-	public static final String SHRC_FINDJITHP_SUCCESS_KEY = "<init>\\(.*\\),JITHINT data !j9x,.*/Object";
+	public static final String SHRC_FINDJITHP_SUCCESS_KEY = "<init>\\(.*\\),JITHINT data !j9x,java/.*";
 	public static final String SHRC_FINDJITHP_FAILURE_KEY = "No entry found in the cache";
 
 	public static final String SHRC_JITHFOR = "jithfor";
 	public static final String SHRC_JITHFOR_METHODNAME = "<init>";
-	public static final String SHRC_JITHFOR_SUCCESS_KEY = "<init>\\(.*\\),JITHINT data !j9x,.*/Object";
+	public static final String SHRC_JITHFOR_SUCCESS_KEY = "<init>\\(.*\\),JITHINT data !j9x,(java|sun)/.*";
 	public static final String SHRC_JITHFOR_FAILURE_KEY = "No entry found in the cache";
 
 	public static final String SHRC_RTFLAGS = "rtflags";

File: test/functional/DDR_Test/src/j9vm/test/ddrext/junit/TestSharedClassesExt.java
Patch:
@@ -533,7 +533,7 @@ public void testShrcJITHForExt() {
 		}
 
 		for (int i = 0; i < lines.length; i++) {
-			if (lines[i].contains("java/lang/Object") || lines[i].matches("\\s<init>\\(\\).*j9rommethod .*")) {
+			if (lines[i].contains("java/lang/Object") || lines[i].matches("\\s<init>\\(.*\\).*j9rommethod .*")) {
 				// lines[i].matches: For the case that method does not contain java/lang/Object
 				// we can find find j9rommethod address from <init> method in openj9
 				if (lines.length > 1) {

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -170,7 +170,7 @@ public void forEach(Consumer<? super StackFrame> action) {
 	 */
 	public Class<?> getCallerClass() {
 		if (!walkerOptions.contains(Option.RETAIN_CLASS_REFERENCE)) {
-			/* [MSG "K0639", "Stack walker not configured with RETAIN_CLASS_REFERENCE"]*/
+			/*[MSG "K0639", "Stack walker not configured with RETAIN_CLASS_REFERENCE"]*/
 			throw new UnsupportedOperationException(com.ibm.oti.util.Msg.getString("K0639")); //$NON-NLS-1$
 		}
 		/*
@@ -184,7 +184,7 @@ public Class<?> getCallerClass() {
 			throw new IllegalCallerException(com.ibm.oti.util.Msg.getString("K0640")); //$NON-NLS-1$
 		}
 		if (((StackFrameImpl)result.get(0)).callerSensitive) {
-			/* [MSG "K0644", "Caller-sensitive method called StackWalker.getCallerClass()"]*/
+			/*[MSG "K0644", "Caller-sensitive method called StackWalker.getCallerClass()"]*/
 			throw new UnsupportedOperationException(com.ibm.oti.util.Msg.getString("K0644")); //$NON-NLS-1$
 		}
 		StackFrame clientsCaller = result.get(1);
@@ -424,7 +424,6 @@ public java.lang.String getDescriptor() {
 	}
 
 	static class PermissionSingleton {
-		/*[PR 125815 use RuntimePermission in lieu of StackFramePermission]*/
 		static final Permission perm =
 				new RuntimePermission("getStackWalkerWithClassReference"); //$NON-NLS-1$
 	}

File: jcl/src/java.base/share/classes/java/lang/StackWalker.java
Patch:
@@ -170,7 +170,7 @@ public void forEach(Consumer<? super StackFrame> action) {
 	 */
 	public Class<?> getCallerClass() {
 		if (!walkerOptions.contains(Option.RETAIN_CLASS_REFERENCE)) {
-			/* [MSG "K0639", "Stack walker not configured with RETAIN_CLASS_REFERENCE"]*/
+			/*[MSG "K0639", "Stack walker not configured with RETAIN_CLASS_REFERENCE"]*/
 			throw new UnsupportedOperationException(com.ibm.oti.util.Msg.getString("K0639")); //$NON-NLS-1$
 		}
 		/*
@@ -184,7 +184,7 @@ public Class<?> getCallerClass() {
 			throw new IllegalCallerException(com.ibm.oti.util.Msg.getString("K0640")); //$NON-NLS-1$
 		}
 		if (((StackFrameImpl)result.get(0)).callerSensitive) {
-			/* [MSG "K0644", "Caller-sensitive method called StackWalker.getCallerClass()"]*/
+			/*[MSG "K0644", "Caller-sensitive method called StackWalker.getCallerClass()"]*/
 			throw new UnsupportedOperationException(com.ibm.oti.util.Msg.getString("K0644")); //$NON-NLS-1$
 		}
 		StackFrame clientsCaller = result.get(1);
@@ -424,7 +424,6 @@ public java.lang.String getDescriptor() {
 	}
 
 	static class PermissionSingleton {
-		/*[PR 125815 use RuntimePermission in lieu of StackFramePermission]*/
 		static final Permission perm =
 				new RuntimePermission("getStackWalkerWithClassReference"); //$NON-NLS-1$
 	}

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/Command.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.tools.attach.target;
 
 /*******************************************************************************
- * Copyright (c) 2009, 2015 IBM Corp. and others
+ * Copyright (c) 2009, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -54,5 +54,6 @@ public interface Command {
 	static final String GET_AGENT_PROPERTIES = "ATTACH_GETAGENTPROPERTIES"; //$NON-NLS-1$
 	static final String START_MANAGEMENT_AGENT = "ATTACH_START_MANAGEMENT_AGENT"; //$NON-NLS-1$
 	static final String START_LOCAL_MANAGEMENT_AGENT = "ATTACH_START_LOCAL_MANAGEMENT_AGENT"; //$NON-NLS-1$
+	static final String GET_THREAD_GROUP_INFO = "ATTACH_GET_THREAD_INFO"; //$NON-NLS-1$
 
 }

File: jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java
Patch:
@@ -21,7 +21,7 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
 
-package openj9.tools.attach.diagnostics;
+package openj9.tools.attach.diagnostics.tools;
 
 import java.io.IOException;
 import java.util.List;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -716,7 +716,7 @@ public void cleanUpTypes() {
 			declaredType = stripUnderscore(declaredType);
 		}
 
-		private static final Pattern QualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\s+");
+		private static final Pattern QualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\b\\s*");
 
 		private static String stripTypeQualifiers(String type) {
 			return filterOutPattern(type, QualifierPattern).trim();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureTypeManager.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corp. and others
+ * Copyright (c) 2010, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -156,7 +156,7 @@ public StructureTypeManager(Collection<StructureDescriptor> structures)
 		}
 	}
 
-	private static final Pattern CVQualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\s+");
+	private static final Pattern CVQualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\b\\s*");
 
 	public int getType(String rawType)
 	{

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -716,7 +716,7 @@ public void cleanUpTypes() {
 			declaredType = stripUnderscore(declaredType);
 		}
 
-		private static final Pattern QualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\s+");
+		private static final Pattern QualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\b\\s*");
 
 		private static String stripTypeQualifiers(String type) {
 			return filterOutPattern(type, QualifierPattern).trim();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureTypeManager.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2018 IBM Corp. and others
+ * Copyright (c) 2010, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -156,7 +156,7 @@ public StructureTypeManager(Collection<StructureDescriptor> structures)
 		}
 	}
 
-	private static final Pattern CVQualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\s+");
+	private static final Pattern CVQualifierPattern = Pattern.compile("\\s*\\b(const|volatile)\\b\\s*");
 
 	public int getType(String rawType)
 	{

File: test/functional/Java12andUp/src/org/openj9/test/java_lang_invoke/Test_VarHandleDesc.java
Patch:
@@ -217,7 +217,7 @@ public void testVarHandleDescResolveConstantDesc() throws Throwable {
 
 	private void resolveConstantDescTestGeneric(String testName, VarHandle handle) throws Throwable {
 		VarHandleDesc handleDesc = handle.describeConstable().orElseThrow();
-		VarHandle resolvedHandle = resolvedHandle = handleDesc.resolveConstantDesc(MethodHandles.lookup());
+		VarHandle resolvedHandle = handleDesc.resolveConstantDesc(MethodHandles.lookup());
 
 		logger.debug(testName + " is running.");
 		Assert.assertTrue(handle.equals(resolvedHandle));

File: jcl/src/java.base/share/classes/com/ibm/jit/JITHelpers.java
Patch:
@@ -3,7 +3,7 @@
 package com.ibm.jit;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,6 +24,7 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
 
+import com.ibm.oti.vm.J9UnmodifiableClass;
 import java.lang.reflect.Field;
 import java.lang.reflect.Array;
 import com.ibm.oti.vm.VM;
@@ -41,6 +42,7 @@
  * The <code>JITHelpers</code> class contains methods used by the JIT to optimize certain primitive operations.
  */
 @SuppressWarnings("javadoc")
+@J9UnmodifiableClass
 public final class JITHelpers {
 
 	private static final JITHelpers helpers;

File: jcl/src/java.base/share/classes/java/lang/J9VMInternals.java
Patch:
@@ -2,6 +2,7 @@
 
 package java.lang;
 
+import com.ibm.oti.vm.J9UnmodifiableClass;
 import java.lang.ref.SoftReference;
 import java.lang.reflect.*;
 import java.security.AccessController;
@@ -30,7 +31,7 @@
 
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -51,6 +52,7 @@
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception
  *******************************************************************************/
 
+@J9UnmodifiableClass
 final class J9VMInternals {
 	/*[PR VMDESIGN 1891] Move j9Version and j9Config from Class to J9VMInternals */
 	/*[IF]*/

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/DataType.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,7 @@ public abstract class DataType {
 
 	// Static methods
 	
-	// Invoked via reflection from VMDataFacotry.getVMData(IProcess);
+	// Invoked via reflection from VMDataFactory.getVMData(IProcess);
 	public static void init(IProcess process, StructureReader structureReader) {
 		DataType.process = process;
 		SIZEOF_BOOL = structureReader.getSizeOfBool();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/DataType.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,7 @@ public abstract class DataType {
 
 	// Static methods
 	
-	// Invoked via reflection from VMDataFacotry.getVMData(IProcess);
+	// Invoked via reflection from VMDataFactory.getVMData(IProcess);
 	public static void init(IProcess process, StructureReader structureReader) {
 		DataType.process = process;
 		SIZEOF_BOOL = structureReader.getSizeOfBool();

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -41,7 +41,9 @@
  * 5) export JDK_VERSION=Valhalla
  * 6) export SPEC=linux_x86-64_cmprssptrs
  * 7) export BUILD_LIST=functional/Valhalla
- * 8) make -f run_configure.mk && make compile && make _sanity
+ * 8) export AUTO_DETECT=off
+ * 9) export JDK_IMPL=openj9
+ * 10) make -f run_configure.mk && make compile && make _sanity
  */
 
 @Test(groups = { "level.sanity" })

File: test/functional/Java12andUp/src/org/openj9/test/java_lang_invoke/Test_VarHandleDesc.java
Patch:
@@ -217,7 +217,7 @@ public void testVarHandleDescResolveConstantDesc() throws Throwable {
 
 	private void resolveConstantDescTestGeneric(String testName, VarHandle handle) throws Throwable {
 		VarHandleDesc handleDesc = handle.describeConstable().orElseThrow();
-		VarHandle resolvedHandle = resolvedHandle = handleDesc.resolveConstantDesc(MethodHandles.lookup());
+		VarHandle resolvedHandle = handleDesc.resolveConstantDesc(MethodHandles.lookup());
 
 		logger.debug(testName + " is running.");
 		Assert.assertTrue(handle.equals(resolvedHandle));

File: test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java
Patch:
@@ -41,7 +41,9 @@
  * 5) export JDK_VERSION=Valhalla
  * 6) export SPEC=linux_x86-64_cmprssptrs
  * 7) export BUILD_LIST=functional/Valhalla
- * 8) make -f run_configure.mk && make compile && make _sanity
+ * 8) export AUTO_DETECT=off
+ * 9) export JDK_IMPL=openj9
+ * 10) make -f run_configure.mk && make compile && make _sanity
  */
 
 @Test(groups = { "level.sanity" })

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCClassArrayClassSlotIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,7 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ArrayClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 
-import static com.ibm.j9ddr.vm29.structure.J9Consts.*;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccClassArray;
 
 public class GCClassArrayClassSlotIterator extends GCIterator
 {
@@ -47,7 +47,7 @@ protected GCClassArrayClassSlotIterator(J9ClassPointer clazz) throws CorruptData
 			slots.add(slot);
 			addresses.add(VoidPointer.cast(clazz.arrayClassEA()));
 		}
-		if(clazz.romClass().modifiers().allBitsIn(J9_JAVA_CLASS_ARRAY)) {
+		if(clazz.romClass().modifiers().allBitsIn(J9AccClassArray)) {
 			J9ArrayClassPointer arrayClass = J9ArrayClassPointer.cast(clazz);
 			slot = arrayClass.componentType();
 			if(slot.notNull()) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/StackWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corp. and others
+ * Copyright (c) 2009, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -813,7 +813,7 @@ public FrameCallbackResult walkFrame(WalkState walkState)
 				if ((walkState.flags & J9_STACKWALK_HIDE_EXCEPTION_FRAMES) != 0) {
 					J9ROMMethodPointer romMethod = J9_ROM_METHOD_FROM_RAM_METHOD(walkState.method);
 	
-					if (!romMethod.modifiers().anyBitsIn(J9_JAVA_STATIC)) {
+					if (!romMethod.modifiers().anyBitsIn(J9AccStatic)) {
 						if (J9UTF8Helper.stringValue(romMethod.nameAndSignature().name())
 								.charAt(0) == '<') {
 							if (walkState.arg0EA.at(0).eq(

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RamClassWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -99,6 +99,7 @@
 import com.ibm.j9ddr.vm29.structure.J9RAMStringRef;
 import com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState;
 import com.ibm.j9ddr.vm29.structure.J9VTableHeader;
+import com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.IClassWalkCallbacks.SlotType;
 import com.ibm.j9ddr.vm29.types.Scalar;
 import com.ibm.j9ddr.vm29.types.U32;
@@ -224,7 +225,7 @@ private void allSlotsIniTableDo() throws CorruptDataException {
 			 * The iTables for the interface classes do not contain entries for
 			 * methods.
 			 */
-			if (!ramClass.romClass().modifiers().allBitsIn(J9Consts.J9_JAVA_INTERFACE)) {
+			if (!ramClass.romClass().modifiers().allBitsIn(J9JavaAccessFlags.J9AccInterface)) {
 				int methodCount = iTable.interfaceClass().romClass().romMethodCount().intValue();
 				for (int i = 0; i < methodCount; i++) {
 					/*

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ITableSizeCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -38,6 +38,7 @@
 import com.ibm.j9ddr.vm29.types.UDATA;
 import com.ibm.j9ddr.vm29.structure.J9ITable;
 import static com.ibm.j9ddr.vm29.structure.J9Consts.*;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.*;
 
 public class ITableSizeCommand extends Command 
 {
@@ -90,7 +91,7 @@ public void run(String command, String[] args, Context context, PrintStream out)
 			ClassSegmentIterator classSegmentIterator = new ClassSegmentIterator(vm.classMemorySegments());
 			while (classSegmentIterator.hasNext()) {
 				J9ClassPointer clazz = (J9ClassPointer) classSegmentIterator.next();
-				int classDepth = clazz.classDepthAndFlags().bitAnd(J9_JAVA_CLASS_DEPTH_MASK).intValue();
+				int classDepth = clazz.classDepthAndFlags().bitAnd(J9AccClassDepthMask).intValue();
 				J9ITablePointer superITable = J9ITablePointer.NULL;
 				J9ITablePointer startITable = J9ITablePointer.cast(clazz.iTable());
 				if (0 != classDepth) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckEngine.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -79,7 +79,7 @@
 import static com.ibm.j9ddr.vm29.structure.J9Object.*;
 import static com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState.J9VM_FIELD_OFFSET_WALK_INCLUDE_STATIC;
 import static com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState.J9VM_FIELD_OFFSET_WALK_ONLY_OBJECT_SLOTS;
-import static com.ibm.j9ddr.vm29.structure.J9Consts.J9_JAVA_CLASS_DYING;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccClassDying;
 
 class CheckEngine
 {
@@ -1079,7 +1079,7 @@ private int checkJ9ClassHeader(J9ClassPointer clazz) throws CorruptDataException
 	
 	private int checkJ9ClassIsNotUnloaded(J9ClassPointer clazz) throws CorruptDataException
 	{
-		if(!clazz.classDepthAndFlags().bitAnd(J9_JAVA_CLASS_DYING).eq(0)) {
+		if(!clazz.classDepthAndFlags().bitAnd(J9AccClassDying).eq(0)) {
 			return J9MODRON_GCCHK_RC_CLASS_IS_UNLOADED;
 		}
 		return J9MODRON_GCCHK_RC_OK;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckVMThreadStacks.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -38,6 +38,7 @@
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 
 import static com.ibm.j9ddr.vm29.structure.J9Consts.*;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.*;
 import static com.ibm.j9ddr.vm29.tools.ddrinteractive.gccheck.ScanFormatter.formatPointer;
 
 class CheckVMThreadStacks extends Check
@@ -146,7 +147,7 @@ public FrameCallbackResult frameWalkFunction(J9VMThreadPointer walkThread, WalkS
 						
 						try {
 							J9ROMMethodPointer romMethod = J9MethodHelper.romMethod(walkState.method);
-							isNative = romMethod.modifiers().allBitsIn(J9_JAVA_NATIVE);
+							isNative = romMethod.modifiers().allBitsIn(J9AccNative);
 							if(!isNative) {
 								bytecodes = J9ROMMethodHelper.bytecodes(romMethod);
 							}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -61,6 +61,7 @@
 import com.ibm.j9ddr.vm29.pointer.helper.J9ClassHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.structure.J9Consts;
+import com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags;
 import com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState;
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.view.dtfj.DTFJContext;
@@ -541,7 +542,7 @@ public JavaClass getSuperclass() throws CorruptDataException {
 	private boolean isInterface() throws com.ibm.j9ddr.CorruptDataException {
 		if(isInterface == null) {
 			J9ROMClassPointer romclass = j9class.romClass();
-			if(romclass.modifiers().allBitsIn(J9Consts.J9_JAVA_INTERFACE)) {
+			if(romclass.modifiers().allBitsIn(J9JavaAccessFlags.J9AccInterface)) {
 				isInterface = true;
 			} else {
 				isInterface = false;

File: sourcetools/j9constantpool/com/ibm/oti/VMCPTool/ConstantPoolStream.java
Patch:
@@ -329,7 +329,7 @@ private void writeHeader(int size) {
 			out.println("} _jclROMClass = {");
 
 			String shapeDescriptionOffset = "sizeof(J9ROMClass) - offsetof(J9ROMClass, cpShapeDescription) + " + size;
-			out.println("\t{0,0,0,0,0,J9_JAVA_CLASS_UNSAFE, 0,0,0,0,0,0,0,0, " + itemCount + ", " + itemCount + ", 0,0,0, " + shapeDescriptionOffset + ", 0,},");
+			out.println("\t{0,0,0,0,0,J9AccClassUnsafe, 0,0,0,0,0,0,0,0, " + itemCount + ", " + itemCount + ", 0,0,0, " + shapeDescriptionOffset + ", 0,},");
 			out.println("\t{");
 		}
 	}

File: test/functional/Java11andUp/src/org/openj9/test/java_lang/Test_String.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2018, 2018 IBM Corp. and others
+ * Copyright (c) 2018, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/Java12andUp/src/org/openj9/test/java_lang/Test_String.java
Patch:
@@ -82,5 +82,4 @@ private void testStringResolveConstantDesc_sub(String test) {
 		String resolvedTest2 = test.resolveConstantDesc(null);
 		Assert.assertTrue(test.equals(resolvedTest2));
 	}
-	 
 }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCClassArrayClassSlotIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,7 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ArrayClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 
-import static com.ibm.j9ddr.vm29.structure.J9Consts.*;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccClassArray;
 
 public class GCClassArrayClassSlotIterator extends GCIterator
 {
@@ -47,7 +47,7 @@ protected GCClassArrayClassSlotIterator(J9ClassPointer clazz) throws CorruptData
 			slots.add(slot);
 			addresses.add(VoidPointer.cast(clazz.arrayClassEA()));
 		}
-		if(clazz.romClass().modifiers().allBitsIn(J9_JAVA_CLASS_ARRAY)) {
+		if(clazz.romClass().modifiers().allBitsIn(J9AccClassArray)) {
 			J9ArrayClassPointer arrayClass = J9ArrayClassPointer.cast(clazz);
 			slot = arrayClass.componentType();
 			if(slot.notNull()) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/StackWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2018 IBM Corp. and others
+ * Copyright (c) 2009, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -813,7 +813,7 @@ public FrameCallbackResult walkFrame(WalkState walkState)
 				if ((walkState.flags & J9_STACKWALK_HIDE_EXCEPTION_FRAMES) != 0) {
 					J9ROMMethodPointer romMethod = J9_ROM_METHOD_FROM_RAM_METHOD(walkState.method);
 	
-					if (!romMethod.modifiers().anyBitsIn(J9_JAVA_STATIC)) {
+					if (!romMethod.modifiers().anyBitsIn(J9AccStatic)) {
 						if (J9UTF8Helper.stringValue(romMethod.nameAndSignature().name())
 								.charAt(0) == '<') {
 							if (walkState.arg0EA.at(0).eq(

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RamClassWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -99,6 +99,7 @@
 import com.ibm.j9ddr.vm29.structure.J9RAMStringRef;
 import com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState;
 import com.ibm.j9ddr.vm29.structure.J9VTableHeader;
+import com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.IClassWalkCallbacks.SlotType;
 import com.ibm.j9ddr.vm29.types.Scalar;
 import com.ibm.j9ddr.vm29.types.U32;
@@ -224,7 +225,7 @@ private void allSlotsIniTableDo() throws CorruptDataException {
 			 * The iTables for the interface classes do not contain entries for
 			 * methods.
 			 */
-			if (!ramClass.romClass().modifiers().allBitsIn(J9Consts.J9_JAVA_INTERFACE)) {
+			if (!ramClass.romClass().modifiers().allBitsIn(J9JavaAccessFlags.J9AccInterface)) {
 				int methodCount = iTable.interfaceClass().romClass().romMethodCount().intValue();
 				for (int i = 0; i < methodCount; i++) {
 					/*

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ITableSizeCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -38,6 +38,7 @@
 import com.ibm.j9ddr.vm29.types.UDATA;
 import com.ibm.j9ddr.vm29.structure.J9ITable;
 import static com.ibm.j9ddr.vm29.structure.J9Consts.*;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.*;
 
 public class ITableSizeCommand extends Command 
 {
@@ -90,7 +91,7 @@ public void run(String command, String[] args, Context context, PrintStream out)
 			ClassSegmentIterator classSegmentIterator = new ClassSegmentIterator(vm.classMemorySegments());
 			while (classSegmentIterator.hasNext()) {
 				J9ClassPointer clazz = (J9ClassPointer) classSegmentIterator.next();
-				int classDepth = clazz.classDepthAndFlags().bitAnd(J9_JAVA_CLASS_DEPTH_MASK).intValue();
+				int classDepth = clazz.classDepthAndFlags().bitAnd(J9AccClassDepthMask).intValue();
 				J9ITablePointer superITable = J9ITablePointer.NULL;
 				J9ITablePointer startITable = J9ITablePointer.cast(clazz.iTable());
 				if (0 != classDepth) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckEngine.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -79,7 +79,7 @@
 import static com.ibm.j9ddr.vm29.structure.J9Object.*;
 import static com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState.J9VM_FIELD_OFFSET_WALK_INCLUDE_STATIC;
 import static com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState.J9VM_FIELD_OFFSET_WALK_ONLY_OBJECT_SLOTS;
-import static com.ibm.j9ddr.vm29.structure.J9Consts.J9_JAVA_CLASS_DYING;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccClassDying;
 
 class CheckEngine
 {
@@ -1079,7 +1079,7 @@ private int checkJ9ClassHeader(J9ClassPointer clazz) throws CorruptDataException
 	
 	private int checkJ9ClassIsNotUnloaded(J9ClassPointer clazz) throws CorruptDataException
 	{
-		if(!clazz.classDepthAndFlags().bitAnd(J9_JAVA_CLASS_DYING).eq(0)) {
+		if(!clazz.classDepthAndFlags().bitAnd(J9AccClassDying).eq(0)) {
 			return J9MODRON_GCCHK_RC_CLASS_IS_UNLOADED;
 		}
 		return J9MODRON_GCCHK_RC_OK;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/gccheck/CheckVMThreadStacks.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -38,6 +38,7 @@
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 
 import static com.ibm.j9ddr.vm29.structure.J9Consts.*;
+import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.*;
 import static com.ibm.j9ddr.vm29.tools.ddrinteractive.gccheck.ScanFormatter.formatPointer;
 
 class CheckVMThreadStacks extends Check
@@ -146,7 +147,7 @@ public FrameCallbackResult frameWalkFunction(J9VMThreadPointer walkThread, WalkS
 						
 						try {
 							J9ROMMethodPointer romMethod = J9MethodHelper.romMethod(walkState.method);
-							isNative = romMethod.modifiers().allBitsIn(J9_JAVA_NATIVE);
+							isNative = romMethod.modifiers().allBitsIn(J9AccNative);
 							if(!isNative) {
 								bytecodes = J9ROMMethodHelper.bytecodes(romMethod);
 							}

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -61,6 +61,7 @@
 import com.ibm.j9ddr.vm29.pointer.helper.J9ClassHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.structure.J9Consts;
+import com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags;
 import com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState;
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.view.dtfj.DTFJContext;
@@ -541,7 +542,7 @@ public JavaClass getSuperclass() throws CorruptDataException {
 	private boolean isInterface() throws com.ibm.j9ddr.CorruptDataException {
 		if(isInterface == null) {
 			J9ROMClassPointer romclass = j9class.romClass();
-			if(romclass.modifiers().allBitsIn(J9Consts.J9_JAVA_INTERFACE)) {
+			if(romclass.modifiers().allBitsIn(J9JavaAccessFlags.J9AccInterface)) {
 				isInterface = true;
 			} else {
 				isInterface = false;

File: sourcetools/j9constantpool/com/ibm/oti/VMCPTool/ConstantPoolStream.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -336,7 +336,7 @@ private void writeHeader(int size) {
 			out.println("} _jclROMClass = {");
 
 			String shapeDescriptionOffset = "sizeof(J9ROMClass) - offsetof(J9ROMClass, cpShapeDescription) + " + size;
-			out.println("\t{0,0,0,0,0,J9_JAVA_CLASS_UNSAFE, 0,0,0,0,0,0,0,0, " + itemCount + ", " + itemCount + ", 0,0,0, " + shapeDescriptionOffset + ", 0,},");
+			out.println("\t{0,0,0,0,0,J9AccClassUnsafe, 0,0,0,0,0,0,0,0, " + itemCount + ", " + itemCount + ", 0,0,0, " + shapeDescriptionOffset + ", 0,},");
 			out.println("\t{");
 		}
 	}

File: test/functional/JIT_Test/src/jit/test/tr/chtable/InnerPreexistence.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@ public class InnerPreexistence implements Notifiable {
 	public static final int TASK_LOAD_C = 1;
 
 	private Timer timer;
-	private boolean keepOnGoing = true;
+	private volatile boolean keepOnGoing = true;
 	private A someA;
 	private B someB;
 	private B otherB;

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandleInvokeHandle.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar19-SE]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2018 IBM Corp. and others
+ * Copyright (c) 2016, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -41,7 +41,7 @@ abstract class VarHandleInvokeHandle extends PrimitiveHandle {
 		/* Prepend a VarHandle receiver argument to match the how this MethodHandle will be invoked
 		 * Note: the modifiers are specific to the access mode methods in VarHandle.
 		 */
-		super(accessModeType.insertParameterTypes(0, VarHandle.class), null, null, kind, PUBLIC_FINAL_NATIVE, null);
+		super(accessModeType.insertParameterTypes(0, VarHandle.class), null, accessMode.methodName(), kind, PUBLIC_FINAL_NATIVE, null);
 		this.defc = VarHandle.class;
 		this.operation = accessMode.ordinal();
 		// Append a VarHandle argument to match the VarHandle's internal method signature

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ShcItemHdrHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2018 IBM Corp. and others
+ * Copyright (c) 1991, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,7 @@ public static U32 CCITEMLEN(ShcItemHdrPointer ptr) throws CorruptDataException {
 	
 	// #define CCITEM(ih) (((U_8*)(ih)) - (CCITEMLEN(ih) - sizeof(ShcItemHdr)))
 	public static U8Pointer CCITEM(ShcItemHdrPointer ptr) throws CorruptDataException {
-		return U8Pointer.cast(ptr).sub(CCITEMLEN(ptr).sub((int)ShcItemHdr.SIZEOF));
+		return U8Pointer.cast(ptr).sub(CCITEMLEN(ptr).sub(ShcItemHdr.SIZEOF));
 	}
 
 	// #define CCITEMNEXT(ih) ((ShcItemHdr*)(CCITEM(ih) - sizeof(ShcItemHdr)))

File: test/functional/Java9andUp/src/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -10,7 +10,7 @@
 import org.testng.AssertJUnit;
 
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/Java9andUp/src/org/openj9/test/stackWalker/StackWalkerTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2018 IBM Corp. and others
+ * Copyright (c) 2001, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/StringBuffer.java
Patch:
@@ -3,7 +3,7 @@
 package java.lang;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2018 IBM Corp. and others
+ * Copyright (c) 1998, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1384,7 +1384,7 @@ public synchronized StringBuffer replace(int start, int end, String string) {
 					capacity = capacity & ~sharedBit;
 				}
 				
-				string.getChars(0, size, value, start);
+				string.getCharsNoBoundChecks(0, size, value, start);
 				
 				count = currentLength - difference;
 				

File: test/functional/JIT_Test/src/jit/test/tr/chtable/InnerPreexistence.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2018 IBM Corp. and others
+ * Copyright (c) 2017, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,7 @@ public class InnerPreexistence implements Notifiable {
 	public static final int TASK_LOAD_C = 1;
 
 	private Timer timer;
-	private boolean keepOnGoing = true;
+	private volatile boolean keepOnGoing = true;
 	private A someA;
 	private B someB;
 	private B otherB;

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2182,7 +2182,7 @@ public static MethodHandle catchException(MethodHandle tryHandle, Class<? extend
 			}
 		}
 		
-		MethodHandle result = buildTransformHandle(new CatchHelper(tryHandle, catchHandle, throwableClass), tryType);
+		MethodHandle result = buildTransformHandle(new CatchHelper(tryHandle.asFixedArity(), catchHandle.asFixedArity(), throwableClass), tryType);
 		if (true) {
 			MethodHandle thunkable = CatchHandle.get(tryHandle, throwableClass, catchHandle, result);
 			assert(thunkable.type() == result.type());

File: jcl/src/openj9.dtfj/share/classes/module-info.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar19-SE]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2017 IBM Corp. and others
+ * Copyright (c) 2016, 2019 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,6 +32,7 @@
 	requires transitive java.desktop;
 	requires transitive java.logging;
 	requires java.xml;
+	requires openj9.traceformat;
 	/*[IF PLATFORM-mz31 | PLATFORM-mz64]*/
 	requires com.ibm.jzos;
 	/*[ENDIF]*/

File: test/functional/Java8andUp/src/org/openj9/test/gpu/SortTest.java
Patch:
@@ -737,7 +737,7 @@ public void testBasic() {
 
 	@Test(groups = { "level.sanity" })
 	public void testPowersOf2() {
-		main(new String[] { "-geometric=1,8388608,24" });
+		main(new String[] { "-geometric=1,16777216,25" });
 	}
 
 }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/GetCommandsTask.java
Patch:
@@ -49,6 +49,7 @@
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpModuleReadsCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpModuleExportsCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpModuleDirectedExportsCommand;
+import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpPackageCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpRamClassLinearCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpRomClassCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpRomClassLinearCommand;
@@ -193,6 +194,7 @@ public void run(IVMData vmData, Object[] userData)
 		toPassBack.add(new DumpAllClassesInModuleCommand());
 		toPassBack.add(new FindModulesCommand());
 		toPassBack.add(new DumpModuleCommand());
+		toPassBack.add(new DumpPackageCommand());
 
 		loadPlugins(toPassBack, loader);
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/PCStack.java
Patch:
@@ -497,7 +497,7 @@ public class PCStack
 		0x25 /* JBgotow = 200 */,
 		0x00 /* JBunimplemented = 201 */,
 		0x71 /* JBbreakpoint = 202 */,
-		0x01 /* JBdefaultvalue = 203 */,
+		0x03 /* JBdefaultvalue = 203 */,
 		0x03 /* JBwithfield = 204 */,
 		0x00 /* JBunimplemented = 205 */,
 		0x00 /* JBunimplemented = 206 */,

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/PCStack.java
Patch:
@@ -497,7 +497,7 @@ public class PCStack
 		0x25 /* JBgotow = 200 */,
 		0x00 /* JBunimplemented = 201 */,
 		0x71 /* JBbreakpoint = 202 */,
-		0x01 /* JBdefaultvalue = 203 */,
+		0x03 /* JBdefaultvalue = 203 */,
 		0x03 /* JBwithfield = 204 */,
 		0x00 /* JBunimplemented = 205 */,
 		0x00 /* JBunimplemented = 206 */,

File: test/functional/Java8andUp/src/org/openj9/test/nogc/TestNogcDieWithOOM.java
Patch:
@@ -60,9 +60,11 @@ public void testDieWithOOM() {
 		Random random = new Random();
 		String message = "Caught expected java/lang/OutOfMemoryError: Java heap space";
 		byte[] data = null;
+		data = allocateMemory(3 * 1024*1024);
 		try {
 			for (int cnt=0; cnt<1024; cnt++) {
-				data = allocateMemory(random.nextInt(10) * 1024*1024 + 9*1024*1024);
+				int multi = random.nextInt(10);
+				data = allocateMemory(((0 == multi)?1:multi) * 10 * 1024*1024);
 			}
 		} catch (OutOfMemoryError error) {
 			logger.info(message);

File: test/functional/Java8andUp/src/org/openj9/test/nogc/TestNogcDieWithOOM.java
Patch:
@@ -60,9 +60,11 @@ public void testDieWithOOM() {
 		Random random = new Random();
 		String message = "Caught expected java/lang/OutOfMemoryError: Java heap space";
 		byte[] data = null;
+		data = allocateMemory(3 * 1024*1024);
 		try {
 			for (int cnt=0; cnt<1024; cnt++) {
-				data = allocateMemory(random.nextInt(10) * 1024*1024 + 9*1024*1024);
+				int multi = random.nextInt(10);
+				data = allocateMemory(((0 == multi)?1:multi) * 10 * 1024*1024);
 			}
 		} catch (OutOfMemoryError error) {
 			logger.info(message);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/JITStackWalker.java
Patch:
@@ -159,7 +159,7 @@ protected JITStackWalker_29_V0() {
 		
 		private static U8Pointer MASK_PC(AbstractPointer ptr)
 		{
-			if (TRBuildFlags.host_S390 && TRBuildFlags.host_32BIT) {
+			if (J9BuildFlags.arch_s390 && !J9BuildFlags.env_data64) {
 				return U8Pointer.cast(UDATA.cast(ptr).bitAnd(0x7FFFFFFF));
 			} else {
 				return U8Pointer.cast(ptr);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/JITStackWalker.java
Patch:
@@ -159,7 +159,7 @@ protected JITStackWalker_29_V0() {
 		
 		private static U8Pointer MASK_PC(AbstractPointer ptr)
 		{
-			if (TRBuildFlags.host_S390 && TRBuildFlags.host_32BIT) {
+			if (J9BuildFlags.arch_s390 && !J9BuildFlags.env_data64) {
 				return U8Pointer.cast(UDATA.cast(ptr).bitAnd(0x7FFFFFFF));
 			} else {
 				return U8Pointer.cast(ptr);

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -51,6 +51,7 @@ public class AlgorithmVersion {
 	public static final String FOUR_BYTE_OFFSETS_VERSION = "FOUR_BYTE_OFFSETS_VERSION";
 	public static final String VTABLE_VERSION = "ALG_VM_VTABLE_VERSION";
 	public static final String ITABLE_VERSION = "ALG_VM_ITABLE_VERSION";
+	public static final String BYTECODE_VERSION = "ALG_VM_BYTECODE_VERSION";
 	
 	public static final String GC_ARRAYLET_OBJECT_MODEL_VERSION = "ALG_GC_ARRAYLET_OBJECT_MODEL_VERSION";
 	public static final String GC_CLASS_MODEL_VERSION = "ALG_GC_CLASS_MODEL_VERSION";

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -51,6 +51,7 @@ public class AlgorithmVersion {
 	public static final String FOUR_BYTE_OFFSETS_VERSION = "FOUR_BYTE_OFFSETS_VERSION";
 	public static final String VTABLE_VERSION = "ALG_VM_VTABLE_VERSION";
 	public static final String ITABLE_VERSION = "ALG_VM_ITABLE_VERSION";
+	public static final String BYTECODE_VERSION = "ALG_VM_BYTECODE_VERSION";
 	
 	public static final String GC_ARRAYLET_OBJECT_MODEL_VERSION = "ALG_GC_ARRAYLET_OBJECT_MODEL_VERSION";
 	public static final String GC_CLASS_MODEL_VERSION = "ALG_GC_CLASS_MODEL_VERSION";

File: test/functional/Java8andUp/src/org/openj9/test/gpu/SortTest.java
Patch:
@@ -72,7 +72,7 @@ private ElementType(String name, int size) {
 
 	private static final Logger logger = Logger.getLogger(SortTest.class);
 
-	private static final Pattern SeedPattern = makePattern("-srand", 6, "=(\\d+)");
+	private static final Pattern SeedPattern = makePattern("-srand", 6, "=(-?\\d+)");
 
 	private static final Pattern TypesPattern = makePattern("-types", 5, "=(\\S+)");
 

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestManagementFactory.java
Patch:
@@ -833,7 +833,7 @@ public void testMemoryPoolMXBeanProxy() {
 			MemoryUsage directUsage = realBean.getCollectionUsage();
 			validateMemoryUsage(proxyUsage);
 			validateMemoryUsage(directUsage);
-			AssertJUnit.assertEquals(directUsage, proxyUsage);
+			/* directUsage and proxyUsage could be different, if gc happened between getCollectionUsage() calls*/
 
 			if (realBean.isCollectionUsageThresholdSupported()) {
 				AssertJUnit.assertEquals(realBean.getCollectionUsageThreshold(), proxy.getCollectionUsageThreshold());

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestManagementFactory.java
Patch:
@@ -833,7 +833,7 @@ public void testMemoryPoolMXBeanProxy() {
 			MemoryUsage directUsage = realBean.getCollectionUsage();
 			validateMemoryUsage(proxyUsage);
 			validateMemoryUsage(directUsage);
-			AssertJUnit.assertEquals(directUsage, proxyUsage);
+			/* directUsage and proxyUsage could be different, if gc happened between getCollectionUsage() calls*/
 
 			if (realBean.isCollectionUsageThresholdSupported()) {
 				AssertJUnit.assertEquals(realBean.getCollectionUsageThreshold(), proxy.getCollectionUsageThreshold());

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/GetCommandsTask.java
Patch:
@@ -60,6 +60,7 @@
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindAllReadsCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindMethodFromPcCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindModuleByNameCommand;
+import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindModulesCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindOverlappingSegmentsCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindPatternCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.FindStackValueCommand;
@@ -189,6 +190,7 @@ public void run(IVMData vmData, Object[] userData)
 		toPassBack.add(new FindAllReadsCommand());
 		toPassBack.add(new DumpModuleDirectedExportsCommand());
 		toPassBack.add(new DumpAllClassesInModuleCommand());
+		toPassBack.add(new FindModulesCommand());
 
 		loadPlugins(toPassBack, loader);
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectHash.java
Patch:
@@ -36,7 +36,7 @@ public class ObjectHash
 	private static U32 getSalt(J9JavaVMPointer vm, UDATA objectPointer) throws CorruptDataException
 	{
 		/* set up the default salt */
-		U32 salt = (new U32(1421595292)).bitXor(new U32(UDATA.cast(vm)));
+		UDATA salt = new U32(1421595292).bitXor(new U32(UDATA.cast(vm)));
 		J9IdentityHashDataPointer hashData = vm.identityHashData();
 		UDATA saltPolicy = hashData.hashSaltPolicy();
 		
@@ -85,7 +85,7 @@ private static U32 getSalt(J9JavaVMPointer vm, UDATA objectPointer) throws Corru
 			throw new CorruptDataException("Invalid salt policy");
 		}
 		
-		return salt;
+		return new U32(salt);
 	}
 	
 	static U32 rotateLeft(U32 value, int count)

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaRuntime.java
Patch:
@@ -191,7 +191,7 @@ public Properties getJITProperties() throws DataUnavailable, CorruptDataExceptio
 					properties.setProperty("AOT", "disabled");
 				}
 				
-				if (jitConfig.fsdEnabled().eq(new UDATA(0))) {
+				if (!jitConfig.fsdEnabled().eq(new UDATA(0))) {
 					properties.setProperty("FSD", "enabled");
 				} else {
 					properties.setProperty("FSD", "disabled");

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaRuntime.java
Patch:
@@ -191,7 +191,7 @@ public Properties getJITProperties() throws DataUnavailable, CorruptDataExceptio
 					properties.setProperty("AOT", "disabled");
 				}
 				
-				if (jitConfig.fsdEnabled().eq(new UDATA(0))) {
+				if (!jitConfig.fsdEnabled().eq(new UDATA(0))) {
 					properties.setProperty("FSD", "enabled");
 				} else {
 					properties.setProperty("FSD", "disabled");

File: test/functional/Java8andUp/src_110/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1567,7 +1567,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.PublicStrictFPClass", PublicStrictFPClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final class org.openj9.test.java.lang.PublicFinalClass", PublicFinalClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final enum org.openj9.test.java.lang.PublicEnum", PublicEnum.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [Lorg.openj9.test.java.lang.PublicFinalClass;", PublicFinalClass[].class.toGenericString());
+	AssertJUnit.assertEquals("org.openj9.test.java.lang.PublicFinalClass[]", PublicFinalClass[].class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericClass<E>", GenericClass.class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericsClass<first,second>", GenericsClass.class.toGenericString());
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.InnerClasses$InnerClass", InnerClasses.InnerClass.class.toGenericString());
@@ -1576,7 +1576,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("private class org.openj9.test.java.lang.InnerClasses$PrivateClass", InnerClasses.getPrivateClass().toGenericString());
 	AssertJUnit.assertEquals("abstract interface org.openj9.test.java.lang.Interface", Interface.class.toGenericString());
 	AssertJUnit.assertEquals("public abstract @interface org.openj9.test.java.lang.AnnotationType", AnnotationType.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [C", char[].class.toGenericString());
+	AssertJUnit.assertEquals("char[]", char[].class.toGenericString());
 	Class[] classes = getTestClasses();
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.Test_Class", classes[0].toGenericString());
 	AssertJUnit.assertEquals("static class org.openj9.test.java.lang.Test_Class$StaticMember$Class", classes[1].toGenericString());

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1567,7 +1567,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.PublicStrictFPClass", PublicStrictFPClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final class org.openj9.test.java.lang.PublicFinalClass", PublicFinalClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final enum org.openj9.test.java.lang.PublicEnum", PublicEnum.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [Lorg.openj9.test.java.lang.PublicFinalClass;", PublicFinalClass[].class.toGenericString());
+	AssertJUnit.assertEquals("org.openj9.test.java.lang.PublicFinalClass[]", PublicFinalClass[].class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericClass<E>", GenericClass.class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericsClass<first,second>", GenericsClass.class.toGenericString());
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.InnerClasses$InnerClass", InnerClasses.InnerClass.class.toGenericString());
@@ -1576,7 +1576,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("private class org.openj9.test.java.lang.InnerClasses$PrivateClass", InnerClasses.getPrivateClass().toGenericString());
 	AssertJUnit.assertEquals("abstract interface org.openj9.test.java.lang.Interface", Interface.class.toGenericString());
 	AssertJUnit.assertEquals("public abstract @interface org.openj9.test.java.lang.AnnotationType", AnnotationType.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [C", char[].class.toGenericString());
+	AssertJUnit.assertEquals("char[]", char[].class.toGenericString());
 	Class[] classes = getTestClasses();
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.Test_Class", classes[0].toGenericString());
 	AssertJUnit.assertEquals("static class org.openj9.test.java.lang.Test_Class$StaticMember$Class", classes[1].toGenericString());

File: test/functional/Java8andUp/src_110/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1567,7 +1567,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.PublicStrictFPClass", PublicStrictFPClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final class org.openj9.test.java.lang.PublicFinalClass", PublicFinalClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final enum org.openj9.test.java.lang.PublicEnum", PublicEnum.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [Lorg.openj9.test.java.lang.PublicFinalClass;", PublicFinalClass[].class.toGenericString());
+	AssertJUnit.assertEquals("org.openj9.test.java.lang.PublicFinalClass[]", PublicFinalClass[].class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericClass<E>", GenericClass.class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericsClass<first,second>", GenericsClass.class.toGenericString());
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.InnerClasses$InnerClass", InnerClasses.InnerClass.class.toGenericString());
@@ -1576,7 +1576,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("private class org.openj9.test.java.lang.InnerClasses$PrivateClass", InnerClasses.getPrivateClass().toGenericString());
 	AssertJUnit.assertEquals("abstract interface org.openj9.test.java.lang.Interface", Interface.class.toGenericString());
 	AssertJUnit.assertEquals("public abstract @interface org.openj9.test.java.lang.AnnotationType", AnnotationType.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [C", char[].class.toGenericString());
+	AssertJUnit.assertEquals("char[]", char[].class.toGenericString());
 	Class[] classes = getTestClasses();
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.Test_Class", classes[0].toGenericString());
 	AssertJUnit.assertEquals("static class org.openj9.test.java.lang.Test_Class$StaticMember$Class", classes[1].toGenericString());

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1567,7 +1567,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.PublicStrictFPClass", PublicStrictFPClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final class org.openj9.test.java.lang.PublicFinalClass", PublicFinalClass.class.toGenericString());
 	AssertJUnit.assertEquals("public final enum org.openj9.test.java.lang.PublicEnum", PublicEnum.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [Lorg.openj9.test.java.lang.PublicFinalClass;", PublicFinalClass[].class.toGenericString());
+	AssertJUnit.assertEquals("org.openj9.test.java.lang.PublicFinalClass[]", PublicFinalClass[].class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericClass<E>", GenericClass.class.toGenericString());
 	AssertJUnit.assertEquals("class org.openj9.test.java.lang.GenericsClass<first,second>", GenericsClass.class.toGenericString());
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.InnerClasses$InnerClass", InnerClasses.InnerClass.class.toGenericString());
@@ -1576,7 +1576,7 @@ public void test_toGenericString() {
 	AssertJUnit.assertEquals("private class org.openj9.test.java.lang.InnerClasses$PrivateClass", InnerClasses.getPrivateClass().toGenericString());
 	AssertJUnit.assertEquals("abstract interface org.openj9.test.java.lang.Interface", Interface.class.toGenericString());
 	AssertJUnit.assertEquals("public abstract @interface org.openj9.test.java.lang.AnnotationType", AnnotationType.class.toGenericString());
-	AssertJUnit.assertEquals("public abstract final class [C", char[].class.toGenericString());
+	AssertJUnit.assertEquals("char[]", char[].class.toGenericString());
 	Class[] classes = getTestClasses();
 	AssertJUnit.assertEquals("public class org.openj9.test.java.lang.Test_Class", classes[0].toGenericString());
 	AssertJUnit.assertEquals("static class org.openj9.test.java.lang.Test_Class$StaticMember$Class", classes[1].toGenericString());

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -50,6 +50,7 @@ public class AlgorithmVersion {
 	public static final String STACK_WALKER_VERSION = "ALG_STACKWALKER_VERSION";
 	public static final String FOUR_BYTE_OFFSETS_VERSION = "FOUR_BYTE_OFFSETS_VERSION";
 	public static final String VTABLE_VERSION = "ALG_VM_VTABLE_VERSION";
+	public static final String ITABLE_VERSION = "ALG_VM_ITABLE_VERSION";
 	
 	public static final String GC_ARRAYLET_OBJECT_MODEL_VERSION = "ALG_GC_ARRAYLET_OBJECT_MODEL_VERSION";
 	public static final String GC_CLASS_MODEL_VERSION = "ALG_GC_CLASS_MODEL_VERSION";

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -50,6 +50,7 @@ public class AlgorithmVersion {
 	public static final String STACK_WALKER_VERSION = "ALG_STACKWALKER_VERSION";
 	public static final String FOUR_BYTE_OFFSETS_VERSION = "FOUR_BYTE_OFFSETS_VERSION";
 	public static final String VTABLE_VERSION = "ALG_VM_VTABLE_VERSION";
+	public static final String ITABLE_VERSION = "ALG_VM_ITABLE_VERSION";
 	
 	public static final String GC_ARRAYLET_OBJECT_MODEL_VERSION = "ALG_GC_ARRAYLET_OBJECT_MODEL_VERSION";
 	public static final String GC_CLASS_MODEL_VERSION = "ALG_GC_CLASS_MODEL_VERSION";

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/helpers/Utils.java
Patch:
@@ -791,7 +791,7 @@ public static String padWithZeroes(String unpadded, int desiredLength)
 		return output;
 	}
 
-	public static Iterator getAddressSapceSectionInfo(Image loadedImage){
+	public static Iterator getAddressSpaceSectionInfo(Image loadedImage) {
 		Iterator itAddressSpace = loadedImage.getAddressSpaces();
 		Vector vSections = new Vector();
 		while(itAddressSpace.hasNext()){

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectMonitor_V1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2015 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -224,7 +224,7 @@ private void initializeBlockedThreads() throws CorruptDataException
 		blockedThreads = new ArrayList<J9VMThreadPointer>();
 		if(isInflated) {
 			if(OmrBuildFlags.OMR_THR_THREE_TIER_LOCKING) {
-				J9ThreadPointer thread = monitor.blocking();
+				J9ThreadPointer thread = J9ThreadMonitorHelper.getBlockingField(monitor);
 				while(thread.notNull()) {
 					J9VMThreadPointer vmThread = J9ThreadHelper.getVMThread(thread);
 					if(vmThread.notNull()) {

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -879,7 +879,7 @@ static MethodHandle adaptInterfaceLookupsOfObjectMethodsIfRequired(MethodHandle
 		/*
 		 * Check access to the parameter and return classes within incoming MethodType
 		 */
-		private void accessCheckArgRetTypes(MethodType type) throws IllegalAccessException {
+		final void accessCheckArgRetTypes(MethodType type) throws IllegalAccessException {
 			if (INTERNAL_PRIVILEGED != accessMode) {
 				for (Class<?> para : type.arguments) {
 					if (!para.isPrimitive()) {

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/CommonDirectory.java
Patch:
@@ -52,7 +52,7 @@ static final class syncObject { /* empty class for synchronization only. */}
 	/**
 	 * default name of directories where VMs place their advertisements
 	 */
-	private static String systemTmpDir = IPC.getTmpDir();
+	private static final String systemTmpDir = IPC.getTmpDir();
 	/**
 	 * Indicates the control file is newer than the semaphore
 	 */

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/IPC.java
Patch:
@@ -51,6 +51,7 @@
  */
 public class IPC {
 
+	private static final String JAVA_IO_TMPDIR = "java.io.tmpdir";
 	/**
 	 * Successful return code from natives.
 	 */
@@ -261,7 +262,8 @@ static private native int createFileWithPermissionsImpl(String path,
 	static String getTmpDir() {
 		String tmpDir = getTempDirImpl();
 		if (null == tmpDir) {
-			tmpDir = com.ibm.oti.vm.VM.getVMLangAccess().internalGetProperties().getProperty("java.io.tmpdir"); //$NON-NLS-1$
+			IPC.logMessage("Could not get system temporary directory. Trying "+JAVA_IO_TMPDIR); //$NON-NLS-1$
+			tmpDir = com.ibm.oti.vm.VM.getVMLangAccess().internalGetProperties().getProperty(JAVA_IO_TMPDIR); //$NON-NLS-1$
 		}
 		return tmpDir;
 	}

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/CommonDirectory.java
Patch:
@@ -52,7 +52,7 @@ static final class syncObject { /* empty class for synchronization only. */}
 	/**
 	 * default name of directories where VMs place their advertisements
 	 */
-	private static String systemTmpDir = IPC.getTmpDir();
+	private static final String systemTmpDir = IPC.getTmpDir();
 	/**
 	 * Indicates the control file is newer than the semaphore
 	 */

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/IPC.java
Patch:
@@ -51,6 +51,7 @@
  */
 public class IPC {
 
+	private static final String JAVA_IO_TMPDIR = "java.io.tmpdir";
 	/**
 	 * Successful return code from natives.
 	 */
@@ -261,7 +262,8 @@ static private native int createFileWithPermissionsImpl(String path,
 	static String getTmpDir() {
 		String tmpDir = getTempDirImpl();
 		if (null == tmpDir) {
-			tmpDir = com.ibm.oti.vm.VM.getVMLangAccess().internalGetProperties().getProperty("java.io.tmpdir"); //$NON-NLS-1$
+			IPC.logMessage("Could not get system temporary directory. Trying "+JAVA_IO_TMPDIR); //$NON-NLS-1$
+			tmpDir = com.ibm.oti.vm.VM.getVMLangAccess().internalGetProperties().getProperty(JAVA_IO_TMPDIR); //$NON-NLS-1$
 		}
 		return tmpDir;
 	}

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -537,9 +537,9 @@ private void checkClassAccess(Class<?> targetClass) throws IllegalAccessExceptio
 					}
 				}
 			}
-			
-			/*[MSG "K0675", "Class '{0}' no access to: class '{1}'"]*/
-			throw new IllegalAccessException(com.ibm.oti.util.Msg.getString("K0675", accessClass.getName(), targetClass.getName()));  //$NON-NLS-1$
+
+			/*[MSG "K0680", "Class '{0}' no access to: class '{1}'"]*/
+			throw new IllegalAccessException(com.ibm.oti.util.Msg.getString("K0680", accessClass.getName(), targetClass.getName()));  //$NON-NLS-1$
 		}
 		
 		private void checkSpecialAccess(Class<?> callerClass) throws IllegalAccessException {

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/JavaPreprocessor.java
Patch:
@@ -415,7 +415,7 @@ private void doCommand_MSG(String arg) {
 			// First check to see if the key and value exist already
 			if (externalMessages.containsKey(key)) {
 				if (!value.equals(externalMessages.get(key))) {
-					throw new SyntaxException("\"" + key + "\" already has the value \"" + externalMessagesToBeAdded.get(key) + "\"");
+					throw new SyntaxException("\"" + key + "\" already has the value \"" + externalMessages.get(key) + "\"");
 				}
 			} else if (externalMessages.containsValue(value)) {
 				warning("MSG command warning: \"" + value + "\" is given multiple keys");

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -539,7 +539,7 @@ public MethodHandle asType(MethodType newType) throws ClassCastException {
 	/**
 	 * Invoke the MethodHandle using an Object[] of arguments.  The array must contain at exactly type().parameterCount() arguments.
 	 * 
-	 * Each of the arguments in the array with be coerced to the appropriate type, if possible, based on the MethodType.
+	 * Each of the arguments in the array will be coerced to the appropriate type, if possible, based on the MethodType.
 	 * 
 	 * @param args An array of Arguments, with length at exactly type().parameterCount() to be used in the call.
 	 * @return An Object

File: sourcetools/com.ibm.jpp.preprocessor/com/ibm/jpp/om/JavaPreprocessor.java
Patch:
@@ -415,7 +415,7 @@ private void doCommand_MSG(String arg) {
 			// First check to see if the key and value exist already
 			if (externalMessages.containsKey(key)) {
 				if (!value.equals(externalMessages.get(key))) {
-					throw new SyntaxException("\"" + key + "\" already has the value \"" + externalMessagesToBeAdded.get(key) + "\"");
+					throw new SyntaxException("\"" + key + "\" already has the value \"" + externalMessages.get(key) + "\"");
 				}
 			} else if (externalMessages.containsValue(value)) {
 				warning("MSG command warning: \"" + value + "\" is given multiple keys");

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -537,9 +537,9 @@ private void checkClassAccess(Class<?> targetClass) throws IllegalAccessExceptio
 					}
 				}
 			}
-			
-			/*[MSG "K0675", "Class '{0}' no access to: class '{1}'"]*/
-			throw new IllegalAccessException(com.ibm.oti.util.Msg.getString("K0675", accessClass.getName(), targetClass.getName()));  //$NON-NLS-1$
+
+			/*[MSG "K0680", "Class '{0}' no access to: class '{1}'"]*/
+			throw new IllegalAccessException(com.ibm.oti.util.Msg.getString("K0680", accessClass.getName(), targetClass.getName()));  //$NON-NLS-1$
 		}
 		
 		private void checkSpecialAccess(Class<?> callerClass) throws IllegalAccessException {

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -539,7 +539,7 @@ public MethodHandle asType(MethodType newType) throws ClassCastException {
 	/**
 	 * Invoke the MethodHandle using an Object[] of arguments.  The array must contain at exactly type().parameterCount() arguments.
 	 * 
-	 * Each of the arguments in the array with be coerced to the appropriate type, if possible, based on the MethodType.
+	 * Each of the arguments in the array will be coerced to the appropriate type, if possible, based on the MethodType.
 	 * 
 	 * @param args An array of Arguments, with length at exactly type().parameterCount() to be used in the call.
 	 * @return An Object

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -861,7 +861,7 @@ static MethodHandle adaptInterfaceLookupsOfObjectMethodsIfRequired(MethodHandle
 		/*
 		 * Check access to the parameter and return classes within incoming MethodType
 		 */
-		private void accessCheckArgRetTypes(MethodType type) throws IllegalAccessException {
+		final void accessCheckArgRetTypes(MethodType type) throws IllegalAccessException {
 			if (INTERNAL_PRIVILEGED != accessMode) {
 				for (Class<?> para : type.arguments) {
 					if (!para.isPrimitive()) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/ThreadsCommand.java
Patch:
@@ -216,7 +216,7 @@ private void flags(PrintStream out) throws DDRInteractiveCommandException {
 				J9VMThreadPointer threadCursor = vm.mainThread();
 
 				do {
-					out.append(String.format("    !j9vmthread 0x%s publicFlags=%s privateFlags=%s inNative=%d // %s", 
+					out.append(String.format("    !j9vmthread 0x%s publicFlags=%s privateFlags=%s inNative=%s // %s", 
 							Long.toHexString(threadCursor.getAddress()),
 							Long.toHexString(threadCursor.publicFlags().longValue()),
 							Long.toHexString(threadCursor.privateFlags().longValue()),

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/ThreadsCommand.java
Patch:
@@ -216,7 +216,7 @@ private void flags(PrintStream out) throws DDRInteractiveCommandException {
 				J9VMThreadPointer threadCursor = vm.mainThread();
 
 				do {
-					out.append(String.format("    !j9vmthread 0x%s publicFlags=%s privateFlags=%s inNative=%d // %s", 
+					out.append(String.format("    !j9vmthread 0x%s publicFlags=%s privateFlags=%s inNative=%s // %s", 
 							Long.toHexString(threadCursor.getAddress()),
 							Long.toHexString(threadCursor.publicFlags().longValue()),
 							Long.toHexString(threadCursor.privateFlags().longValue()),

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/ThreadsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2015 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -216,10 +216,11 @@ private void flags(PrintStream out) throws DDRInteractiveCommandException {
 				J9VMThreadPointer threadCursor = vm.mainThread();
 
 				do {
-					out.append(String.format("    !j9vmthread 0x%s publicFlags=%s privateFlags=%s // %s", 
+					out.append(String.format("    !j9vmthread 0x%s publicFlags=%s privateFlags=%s inNative=%d // %s", 
 							Long.toHexString(threadCursor.getAddress()),
 							Long.toHexString(threadCursor.publicFlags().longValue()),
 							Long.toHexString(threadCursor.privateFlags().longValue()),
+							Long.toHexString(threadCursor.inNative().longValue()),
 							getThreadName(threadCursor)));
 					out.append(nl);
 					threadCursor = threadCursor.linkNext();

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/JavaVersionHelper.java
Patch:
@@ -28,7 +28,7 @@
 import com.ibm.j9ddr.vm29.types.UDATA;
 
 /**
- * JavaVersionHelper helps check if the JVM version is new enough
+ * JavaVersionHelper helps check if the JVM version is new enough for the modularity DDR commands
  */
 public class JavaVersionHelper 
 {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/StructureCommand.java
Patch:
@@ -61,6 +61,7 @@
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ModuleStructureFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ObjectFieldFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ObjectStructureFormatter;
+import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9PackageStructureFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ROMMethodStructureFormatter;
 
 /**
@@ -91,6 +92,7 @@ private void loadExtensionFormatters()
 		registerStructureFormatter(new J9MethodStructureFormatter());
 		registerStructureFormatter(new J9ROMMethodStructureFormatter());
 		registerStructureFormatter(new J9ModuleStructureFormatter());
+		registerStructureFormatter(new J9PackageStructureFormatter());
 	}
 
 	private void loadDefaultFormatters() 

File: jcl/src/java.base/share/classes/java/lang/ClassLoader.java
Patch:
@@ -268,7 +268,7 @@ static final void initializeClassLoaders() {
 		jdk.internal.misc.VM.initLevel(2);
 		String javaSecurityManager = System.internalGetProperties().getProperty("java.security.manager"); //$NON-NLS-1$
 		if (null != javaSecurityManager) {
-			if (javaSecurityManager.isEmpty()) {
+			if (javaSecurityManager.isEmpty() || "default".equals(javaSecurityManager)) {
 				System.setSecurityManager(new SecurityManager());
 			} else {
 				try {

File: jcl/src/java.base/share/classes/java/lang/ClassLoader.java
Patch:
@@ -268,7 +268,7 @@ static final void initializeClassLoaders() {
 		jdk.internal.misc.VM.initLevel(2);
 		String javaSecurityManager = System.internalGetProperties().getProperty("java.security.manager"); //$NON-NLS-1$
 		if (null != javaSecurityManager) {
-			if (javaSecurityManager.isEmpty()) {
+			if (javaSecurityManager.isEmpty() || "default".equals(javaSecurityManager)) {
 				System.setSecurityManager(new SecurityManager());
 			} else {
 				try {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -49,6 +49,7 @@ public class AlgorithmVersion {
 	public static final String STACK_MAP_VERSION = "ALG_STACK_MAP_VERSION";
 	public static final String STACK_WALKER_VERSION = "ALG_STACKWALKER_VERSION";
 	public static final String FOUR_BYTE_OFFSETS_VERSION = "FOUR_BYTE_OFFSETS_VERSION";
+	public static final String VTABLE_VERSION = "ALG_VM_VTABLE_VERSION";
 	
 	public static final String GC_ARRAYLET_OBJECT_MODEL_VERSION = "ALG_GC_ARRAYLET_OBJECT_MODEL_VERSION";
 	public static final String GC_CLASS_MODEL_VERSION = "ALG_GC_CLASS_MODEL_VERSION";

File: jcl/src/jdk.attach/share/classes/com/ibm/tools/attach/attacher/OpenJ9VirtualMachine.java
Patch:
@@ -56,7 +56,7 @@
  * Handles the initiator end of an attachment to a target VM
  * 
  */
-final class OpenJ9VirtualMachine extends VirtualMachine implements Response {
+public final class OpenJ9VirtualMachine extends VirtualMachine implements Response {
 
 	/* 
 	 * The expected string is "ATTACH_CONNECTED <32 bit hexadecimal key>". 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java
Patch:
@@ -49,6 +49,7 @@ public class AlgorithmVersion {
 	public static final String STACK_MAP_VERSION = "ALG_STACK_MAP_VERSION";
 	public static final String STACK_WALKER_VERSION = "ALG_STACKWALKER_VERSION";
 	public static final String FOUR_BYTE_OFFSETS_VERSION = "FOUR_BYTE_OFFSETS_VERSION";
+	public static final String VTABLE_VERSION = "ALG_VM_VTABLE_VERSION";
 	
 	public static final String GC_ARRAYLET_OBJECT_MODEL_VERSION = "ALG_GC_ARRAYLET_OBJECT_MODEL_VERSION";
 	public static final String GC_CLASS_MODEL_VERSION = "ALG_GC_CLASS_MODEL_VERSION";

File: test/functional/Java11andUp/src/org/openj9/test/java_lang/Test_String.java
Patch:
@@ -221,6 +221,7 @@ public void testIsblank() {
 				"isBlank: failed to return false on non-blank latin1 string with leading white space.");
 		Assert.assertFalse((allWhiteSpace + nonLatin1).isBlank(),
 				"isBlank: failed to return false on non-blank non-latin1 string with leading white space.");
+	}
 	 
 	/*	
 	 * Test Java 11 API String.lines

File: test/functional/Java11andUp/src/org/openj9/test/java_lang/Test_String.java
Patch:
@@ -221,6 +221,7 @@ public void testIsblank() {
 				"isBlank: failed to return false on non-blank latin1 string with leading white space.");
 		Assert.assertFalse((allWhiteSpace + nonLatin1).isBlank(),
 				"isBlank: failed to return false on non-blank non-latin1 string with leading white space.");
+	}
 	 
 	/*	
 	 * Test Java 11 API String.lines

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandleInfoImpl.java
Patch:
@@ -93,7 +93,7 @@ public <T extends Member> T reflectAs(Class<T> expected, MethodHandles.Lookup lo
 			throw new NullPointerException();
 		}
 		try {
-			lookup.checkAccess(mh);
+			lookup.checkAccess(mh, false);
 		} catch (IllegalAccessException e) {
 			/*[MSG "K0583", "The Member is not accessible to the Lookup object"]*/
 			IllegalArgumentException x = new IllegalArgumentException(com.ibm.oti.util.Msg.getString("K0583")); //$NON-NLS-1$

File: jcl/src/java.base/share/classes/java/lang/ref/Reference.java
Patch:
@@ -68,9 +68,10 @@ public abstract class Reference<T> extends Object {
 			public boolean waitForReferenceProcessing() throws InterruptedException {
 				return waitForReferenceProcessingImpl();
 			}
+
 			/*[IF Java11]*/
 			public void runFinalization() {
-				throw new InternalError("Compile stub invoked! Apart from deliberate reflective access, this should not happen. Please report this to the project so it can be addressed");	//$NON-NLS-1$
+				Finalizer.runFinalization();
 			}
 			/*[ENDIF]*/
 		});

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/Platform.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,4 +32,5 @@ public enum Platform
 	LINUX,
 	AIX,
 	ZOS,
+	OSX
 }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/StructureCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2014 IBM Corp. and others
+ * Copyright (c) 2010, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -58,6 +58,7 @@
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ClassStructureFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9MethodFieldFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9MethodStructureFormatter;
+import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ModuleStructureFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ObjectFieldFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ObjectStructureFormatter;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.structureformat.extensions.J9ROMMethodStructureFormatter;
@@ -89,6 +90,7 @@ private void loadExtensionFormatters()
 		registerStructureFormatter(new J9ClassStructureFormatter());
 		registerStructureFormatter(new J9MethodStructureFormatter());
 		registerStructureFormatter(new J9ROMMethodStructureFormatter());
+		registerStructureFormatter(new J9ModuleStructureFormatter());
 	}
 
 	private void loadDefaultFormatters() 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/walkers/LineNumberIterator.java
Patch:
@@ -145,7 +145,7 @@ public LineNumber next() {
 					lineNumber = lineNumber.add(signExtend(new I16(encoded.bitAnd(0x3FFF)), 14));
 					
 					lineNumberTablePtr = lineNumberTablePtr.add(2);
-				} else if (firstByte.bitAnd(0xE0).eq(0xF0)) {
+				} else if (firstByte.bitAnd(0xF0).eq(0xE0)) {
 					// 5 bytes encoded : 1110000Y xxxxxxxx xxxxxxxx YYYYYYYY YYYYYYYY
 					lineNumberTablePtr = lineNumberTablePtr.add(1);
 					location = location.add(U16Pointer.cast(lineNumberTablePtr).at(0));

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * @author Matthew Kilner
  */
-public class PartitioningURLClassPathHelperURLHelperStaleEntryCompatabilityTest {
+public class PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		PartitioningURLClassPathHelperURLHelperStaleEntryCompatabilityTest test = new PartitioningURLClassPathHelperURLHelperStaleEntryCompatabilityTest();
+		PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest test = new PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest.java
Patch:
@@ -35,7 +35,7 @@
 /**
  * @author Matthew Kilner
  */
-public class PartitioningURLHelperURLClassPathHelperStaleEntryCompatabilityTest {
+public class PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -46,7 +46,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		PartitioningURLHelperURLClassPathHelperStaleEntryCompatabilityTest test = new PartitioningURLHelperURLClassPathHelperStaleEntryCompatabilityTest();
+		PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest test = new PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/TokenIncompatibilityTest.java
Patch:
@@ -30,13 +30,13 @@
 /**
  * @author Matthew Kilner
  */
-public class TokenIncompatabilityTest {
+public class TokenIncompatibilityTest {
 	
 	StringManipulator manipulator = new StringManipulator();
 
 	public static void main(String[] args) {
 		
-		TokenIncompatabilityTest test = new TokenIncompatabilityTest();
+		TokenIncompatibilityTest test = new TokenIncompatibilityTest();
 		
 		test.run();
 	}

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLClassPathHelperURLHelperCompatibilityTest.java
Patch:
@@ -31,7 +31,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLClassPathHelperURLHelperCompatabilityTest {
+public class URLClassPathHelperURLHelperCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -42,7 +42,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename>");
 		}
 		
-		URLClassPathHelperURLHelperCompatabilityTest test = new URLClassPathHelperURLHelperCompatabilityTest();
+		URLClassPathHelperURLHelperCompatibilityTest test = new URLClassPathHelperURLHelperCompatibilityTest();
 		
 		String testFile = args[1];
 		

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLClassPathHelperURLHelperStaleEntryCompatibilityTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLClassPathHelperURLHelperStaleEntryCompatabilityTest {
+public class URLClassPathHelperURLHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		URLClassPathHelperURLHelperStaleEntryCompatabilityTest test = new URLClassPathHelperURLHelperStaleEntryCompatabilityTest();
+		URLClassPathHelperURLHelperStaleEntryCompatibilityTest test = new URLClassPathHelperURLHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLHelperURLClassPathHelperCompatibilityTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLHelperURLClassPathHelperCompatabilityTest {
+public class URLHelperURLClassPathHelperCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename>");
 		}
 		
-		URLHelperURLClassPathHelperCompatabilityTest test = new URLHelperURLClassPathHelperCompatabilityTest();
+		URLHelperURLClassPathHelperCompatibilityTest test = new URLHelperURLClassPathHelperCompatibilityTest();
 		
 		String testFile = args[1];
 		

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLHelperURLClassPathHelperStaleEntryCompatibilityTest.java
Patch:
@@ -35,7 +35,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLHelperURLClassPathHelperStaleEntryCompatabilityTest {
+public class URLHelperURLClassPathHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -46,7 +46,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		URLHelperURLClassPathHelperStaleEntryCompatabilityTest test = new URLHelperURLClassPathHelperStaleEntryCompatabilityTest();
+		URLHelperURLClassPathHelperStaleEntryCompatibilityTest test = new URLHelperURLClassPathHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * @author Matthew Kilner
  */
-public class PartitioningURLClassPathHelperURLHelperStaleEntryCompatabilityTest {
+public class PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		PartitioningURLClassPathHelperURLHelperStaleEntryCompatabilityTest test = new PartitioningURLClassPathHelperURLHelperStaleEntryCompatabilityTest();
+		PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest test = new PartitioningURLClassPathHelperURLHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest.java
Patch:
@@ -35,7 +35,7 @@
 /**
  * @author Matthew Kilner
  */
-public class PartitioningURLHelperURLClassPathHelperStaleEntryCompatabilityTest {
+public class PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -46,7 +46,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		PartitioningURLHelperURLClassPathHelperStaleEntryCompatabilityTest test = new PartitioningURLHelperURLClassPathHelperStaleEntryCompatabilityTest();
+		PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest test = new PartitioningURLHelperURLClassPathHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/TokenIncompatibilityTest.java
Patch:
@@ -30,13 +30,13 @@
 /**
  * @author Matthew Kilner
  */
-public class TokenIncompatabilityTest {
+public class TokenIncompatibilityTest {
 	
 	StringManipulator manipulator = new StringManipulator();
 
 	public static void main(String[] args) {
 		
-		TokenIncompatabilityTest test = new TokenIncompatabilityTest();
+		TokenIncompatibilityTest test = new TokenIncompatibilityTest();
 		
 		test.run();
 	}

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLClassPathHelperURLHelperCompatibilityTest.java
Patch:
@@ -31,7 +31,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLClassPathHelperURLHelperCompatabilityTest {
+public class URLClassPathHelperURLHelperCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -42,7 +42,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename>");
 		}
 		
-		URLClassPathHelperURLHelperCompatabilityTest test = new URLClassPathHelperURLHelperCompatabilityTest();
+		URLClassPathHelperURLHelperCompatibilityTest test = new URLClassPathHelperURLHelperCompatibilityTest();
 		
 		String testFile = args[1];
 		

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLClassPathHelperURLHelperStaleEntryCompatibilityTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLClassPathHelperURLHelperStaleEntryCompatabilityTest {
+public class URLClassPathHelperURLHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		URLClassPathHelperURLHelperStaleEntryCompatabilityTest test = new URLClassPathHelperURLHelperStaleEntryCompatabilityTest();
+		URLClassPathHelperURLHelperStaleEntryCompatibilityTest test = new URLClassPathHelperURLHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLHelperURLClassPathHelperCompatibilityTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLHelperURLClassPathHelperCompatabilityTest {
+public class URLHelperURLClassPathHelperCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -44,7 +44,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename>");
 		}
 		
-		URLHelperURLClassPathHelperCompatabilityTest test = new URLHelperURLClassPathHelperCompatabilityTest();
+		URLHelperURLClassPathHelperCompatibilityTest test = new URLHelperURLClassPathHelperCompatibilityTest();
 		
 		String testFile = args[1];
 		

File: test/functional/cmdLineTests/shareClassTests/SCHelperCompatibilityTests/URLHelperURLClassPathHelperStaleEntryCompatibilityTest.java
Patch:
@@ -35,7 +35,7 @@
 /**
  * @author Matthew Kilner
  */
-public class URLHelperURLClassPathHelperStaleEntryCompatabilityTest {
+public class URLHelperURLClassPathHelperStaleEntryCompatibilityTest {
 
 	StringManipulator manipulator = new StringManipulator();
 	
@@ -46,7 +46,7 @@ public static void main(String[] args) {
 			System.out.println("\n Please specifiy -testfile <filename> -javacdir <path to javac>");
 		}
 		
-		URLHelperURLClassPathHelperStaleEntryCompatabilityTest test = new URLHelperURLClassPathHelperStaleEntryCompatabilityTest();
+		URLHelperURLClassPathHelperStaleEntryCompatibilityTest test = new URLHelperURLClassPathHelperStaleEntryCompatibilityTest();
 		
 		String testFile = args[1];
 		String javacdir = args[3];

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -2979,7 +2979,7 @@ public boolean contentEquals(StringBuffer buffer) {
 			byte[] sbValue = buffer.getValue();
 
 			if (coder == buffer.getCoder()) {
-				for (int i = 0; i < s1Length; ++i) {
+				for (int i = 0; i < s1Value.length; ++i) {
 					if (s1Value[i] != sbValue[i]) {
 						return false;
 					}

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestManagementUtils.java
Patch:
@@ -22,6 +22,7 @@
 
 package org.openj9.test.java.lang.management;
 
+import org.openj9.test.util.VersionCheck;
 import org.testng.annotations.AfterClass;
 import org.testng.annotations.Test;
 import org.testng.log4testng.Logger;
@@ -234,7 +235,7 @@ public final void testToStackTraceElementCompositeData() {
 		// Null file name
 		StackTraceElement st = new StackTraceElement("foo.bar.DeclaringClass", "methodName", null, 42);
 		CompositeData cd = TestUtil.toCompositeData(st);
-		int numValues = TestMisc.isJava9 ? 8 : 5;
+		int numValues = (VersionCheck.major() >= 9) ? 8 : 5;
 
 		// Examine the returned CompositeData
 		AssertJUnit.assertEquals(numValues, cd.values().size());

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestMisc.java
Patch:
@@ -39,7 +39,6 @@
 public class TestMisc {
 
 	private static Logger logger = Logger.getLogger(TestMisc.class);
-	public static final boolean isJava9 = "9".equalsIgnoreCase(System.getProperty("java.specification.version"));
 
 	@BeforeClass
 	protected void setUp() throws Exception {

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestMonitorInfo.java
Patch:
@@ -22,6 +22,7 @@
 
 package org.openj9.test.java.lang.management;
 
+import org.openj9.test.util.VersionCheck;
 import org.testng.annotations.Test;
 import org.testng.log4testng.Logger;
 import org.testng.annotations.BeforeClass;
@@ -363,7 +364,7 @@ public static CompositeData createGoodStackTraceElementCompositeData() {
 		CompositeType cType = createStackTraceElementCompositeTypeObject();
 		String[] names;
 		Object[] values;
-		if (TestMisc.isJava9) {
+		if (VersionCheck.major() >= 9) {
 			String[] namesTmp = TestMisc.getJava9STEMethodNames();
 			Object[] valuesTmp = {
 					new String("foo.bar.Blobby"),
@@ -401,7 +402,7 @@ private static CompositeType createStackTraceElementCompositeTypeObject() {
 		String[] typeNames;
 		String[] typeDescs;
 		OpenType[] typeTypes;
-		if (TestMisc.isJava9) {
+		if (VersionCheck.major() >= 9) {
 			String[] typeNamesTmp = TestMisc.getJava9STEMethodNames();
 			String[] typeDescsTmp = TestMisc.getJava9STEMethodNames();
 			OpenType[] typeTypesTmp = {

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -2979,7 +2979,7 @@ public boolean contentEquals(StringBuffer buffer) {
 			byte[] sbValue = buffer.getValue();
 
 			if (coder == buffer.getCoder()) {
-				for (int i = 0; i < s1Length; ++i) {
+				for (int i = 0; i < s1Value.length; ++i) {
 					if (s1Value[i] != sbValue[i]) {
 						return false;
 					}

File: test/functional/TestUtilities/src/org/openj9/test/jdk/internal/agent/Test_FileSystem_Base.java
Patch:
@@ -65,7 +65,6 @@ protected void resetPermissions(File file) {
 	}
 	
 	protected void resolveTest(boolean actualResult, boolean expectedResult) {
-		logger.debug("Test passed: " + (expectedResult == actualResult));
 		Assert.assertEquals(expectedResult, actualResult);
 	}
 }

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/AttachHandler.java
Patch:
@@ -36,7 +36,6 @@
  * public because it is used by java.lang.System
  * 
  */
-@SuppressWarnings("synthetic-access")
 public class AttachHandler extends Thread {
 
 	/*[PR Jazz 3007] remove duplicate definition of SYNC_FILE_PERMISSIONS */
@@ -71,7 +70,7 @@ private enum AttachStateValues {
 	private static AttachStateValues attachState = AttachStateValues.ATTACH_UNINITIALIZED;
 	private static boolean waitingForSemaphore = false;
 
-	private static final class AttachStateSync {
+	static final class AttachStateSync {
 		/**
 		 * Empty class for synchronization objects.
 		 */
@@ -81,7 +80,7 @@ private static final class AttachStateSync {
 
 	static int notificationCount;
 
-	private static final class syncObject {
+	static final class syncObject {
 		/**
 		 * Empty class for synchronization objects.
 		 */

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -266,6 +266,7 @@ private void testLocal_setDumpOptions() {
 		try {
 			dumpFileName = "javacore_unsupported.txt";
 			dumpFilePath = dir + File.separator + dumpFileName;
+			diagBean.resetDumpOptions();
 			diagBean.setDumpOptions("java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=" + dumpFilePath);
 			new String("hello").getBytes("Unsupported");
 		} catch (UnsupportedEncodingException e) {

File: test/functional/Java8andUp/src/org/openj9/test/vmArguments/VmArgumentTests.java
Patch:
@@ -1249,7 +1249,6 @@ public void testWAS80Cmdline() {
 					"-Dibm.websphere.internalClassAccessMode=allow",
 					"-Xms50m",
 					"-Xmx256m",
-					XCOMPRESSEDREFS,
 					"-Xscmaxaot4M",
 					"-Xscmx60M",
 					"-Dws.ext.dirs=/opt/IBM/WebSphere/AppServer80/java/lib:/opt/IBM/WebSphere/AppServer80/profiles/AppSrv01/classes:/opt/IBM/WebSphere/AppServer80/classes:/opt/IBM/WebSphere/AppServer80/lib:/opt/IBM/WebSphere/AppServer80/installedChannels:/opt/IBM/WebSphere/AppServer80/lib/ext:/opt/IBM/WebSphere/AppServer80/web/help:/opt/IBM/WebSphere/AppServer80/deploytool/itp/plugins/com.ibm.etools.ejbdeploy/runtime",
@@ -1278,7 +1277,6 @@ public void testWAS80Cmdline() {
 					"-Dibm.websphere.internalClassAccessMode=allow",
 					"-Xms50m",
 					"-Xmx256m",
-					XCOMPRESSEDREFS,
 					"-Xscmaxaot4M",
 					"-Xscmx60M",
 					"-Dws.ext.dirs=/opt/IBM/WebSphere/AppServer80/java/lib:/opt/IBM/WebSphere/AppServer80/profiles/AppSrv01/classes:/opt/IBM/WebSphere/AppServer80/classes:/opt/IBM/WebSphere/AppServer80/lib:/opt/IBM/WebSphere/AppServer80/installedChannels:/opt/IBM/WebSphere/AppServer80/lib/ext:/opt/IBM/WebSphere/AppServer80/web/help:/opt/IBM/WebSphere/AppServer80/deploytool/itp/plugins/com.ibm.etools.ejbdeploy/runtime",

File: test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java
Patch:
@@ -266,6 +266,7 @@ private void testLocal_setDumpOptions() {
 		try {
 			dumpFileName = "javacore_unsupported.txt";
 			dumpFilePath = dir + File.separator + dumpFileName;
+			diagBean.resetDumpOptions();
 			diagBean.setDumpOptions("java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=" + dumpFilePath);
 			new String("hello").getBytes("Unsupported");
 		} catch (UnsupportedEncodingException e) {

File: test/functional/Java8andUp/src_80/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1258,6 +1258,9 @@ public void test_getResourceAsStream() {
 				clazz.getResourceAsStream(name) == null);
 		AssertJUnit.assertTrue("the file " + name + " can be found in the root directory",
 				clazz.getResourceAsStream("/" + name) != null);
+		// find resource from array of objects
+		AssertJUnit.assertTrue("the file " + name + " can be found in the root directory where the class is an array",
+				Test_Class[].class.getResourceAsStream("/" + name) != null);
 
 		try {
 			clazz = Class.forName("java.lang.Object");

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1222,6 +1222,9 @@ public void test_getResourceAsStream() {
 		clazz.getResourceAsStream(name) == null);
 	AssertJUnit.assertTrue("the file " + name + " can be found in the root directory",
 		clazz.getResourceAsStream("/" + name) != null);
+	// find resource from array of objects
+	AssertJUnit.assertTrue("the file " + name + " can be found in the root directory where the class is an array",
+			Test_Class[].class.getResourceAsStream("/" + name) != null);
 
 	try {
 		clazz = Class.forName("java.lang.Object");

File: test/functional/Java8andUp/src_80/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1258,6 +1258,9 @@ public void test_getResourceAsStream() {
 				clazz.getResourceAsStream(name) == null);
 		AssertJUnit.assertTrue("the file " + name + " can be found in the root directory",
 				clazz.getResourceAsStream("/" + name) != null);
+		// find resource from array of objects
+		AssertJUnit.assertTrue("the file " + name + " can be found in the root directory where the class is an array",
+				Test_Class[].class.getResourceAsStream("/" + name) != null);
 
 		try {
 			clazz = Class.forName("java.lang.Object");

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1222,6 +1222,9 @@ public void test_getResourceAsStream() {
 		clazz.getResourceAsStream(name) == null);
 	AssertJUnit.assertTrue("the file " + name + " can be found in the root directory",
 		clazz.getResourceAsStream("/" + name) != null);
+	// find resource from array of objects
+	AssertJUnit.assertTrue("the file " + name + " can be found in the root directory where the class is an array",
+			Test_Class[].class.getResourceAsStream("/" + name) != null);
 
 	try {
 		clazz = Class.forName("java.lang.Object");

File: jcl/src/java.base/share/classes/com/ibm/tools/attach/target/Reply.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 package com.ibm.tools.attach.target;
 /*******************************************************************************
- * Copyright (c) 2009, 2010 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -112,7 +112,7 @@ static Reply readReply(String path) throws IOException {
 			String line = replyStream.readLine();
 			replyStream.close();
 			try {
-				rply.portNumber= new Integer(line);
+				rply.portNumber = Integer.valueOf(line);
 			} catch (NumberFormatException e) {
 				rply.portNumber = Integer.valueOf(-1);
 				throw new IOException(e.getMessage());

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/AvailableProcessorsNotificationInfoUtil.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2016 IBM Corp. and others
+ * Copyright (c) 2016, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -81,7 +81,7 @@ public static CompositeData toCompositeData(AvailableProcessorsNotificationInfo
 		if (info != null) {
 			CompositeType type = getCompositeType();
 			String[] names = { "newAvailableProcessors" }; //$NON-NLS-1$
-			Object[] values = { new Integer(info.getNewAvailableProcessors()) };
+			Object[] values = { Integer.valueOf(info.getNewAvailableProcessors()) };
 
 			try {
 				result = new CompositeDataSupport(type, names, values);

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ProcessingCapacityNotificationInfoUtil.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2016 IBM Corp. and others
+ * Copyright (c) 2016, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -81,7 +81,7 @@ public static CompositeData toCompositeData(ProcessingCapacityNotificationInfo i
 		if (info != null) {
 			CompositeType type = getCompositeType();
 			String[] names = { "newProcessingCapacity" }; //$NON-NLS-1$
-			Object[] values = { new Integer(info.getNewProcessingCapacity()) };
+			Object[] values = { Integer.valueOf(info.getNewProcessingCapacity()) };
 
 			try {
 				result = new CompositeDataSupport(type, names, values);

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/TotalPhysicalMemoryNotificationInfoUtil.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2016, 2016 IBM Corp. and others
+ * Copyright (c) 2016, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -73,7 +73,7 @@ public static CompositeData toCompositeData(TotalPhysicalMemoryNotificationInfo
 		if (info != null) {
 			CompositeType type = getCompositeType();
 			String[] names = { "newTotalPhysicalMemory" }; //$NON-NLS-1$
-			Object[] values = { new Long(info.getNewTotalPhysicalMemory()) };
+			Object[] values = { Long.valueOf(info.getNewTotalPhysicalMemory()) };
 
 			try {
 				result = new CompositeDataSupport(type, names, values);

File: jcl/src/openj9.cuda/share/classes/com/ibm/cuda/Cuda.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF CUDA4J | Sidecar19-SE]*/
 /*******************************************************************************
- * Copyright (c) 2013, 2017 IBM Corp. and others
+ * Copyright (c) 2013, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -70,7 +70,7 @@ private Cleaner() {
 		}
 
 		ByteBuffer insert(ByteBuffer buffer, long address) {
-			inuse.put(new WeakReference<>(buffer, queue), new Long(address));
+			inuse.put(new WeakReference<>(buffer, queue), Long.valueOf(address));
 
 			return buffer;
 		}

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/addressspace/CommonAddressSpace.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -38,7 +38,7 @@ public abstract class CommonAddressSpace implements IAbstractAddressSpace {
 	private static final int MEMORY_CHECK_THRESHOLD = 0x100000;
 	
 	private MemoryRange[] _translations;
-	private Integer _lastTranslationUsed = new Integer(0);
+	private Integer _lastTranslationUsed = Integer.valueOf(0);
 	private boolean _isLittleEndian;
 	private boolean _is64Bit;
 	private int lastAsid;
@@ -177,7 +177,7 @@ protected static int findWhichMemoryRange(int asid, long addr, MemoryRange[] ran
 			}
 		}
 		if (-1 != retI) {
-			lastRange = new Integer(retI);
+			lastRange = Integer.valueOf(retI);
 		}
 		return retI;
 	}

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/addressspace/LayeredAddressSpace.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -41,7 +41,7 @@ public class LayeredAddressSpace extends CommonAddressSpace
 	private TreeMap _moduleRanges = new TreeMap();
 	private IAbstractAddressSpace _base;
 	private MemoryRange[] _moduleRangesArray = null; 
-	private Integer _lastModuleRange = new Integer(0);
+	private Integer _lastModuleRange = Integer.valueOf(0);
 	
 	public LayeredAddressSpace(IAbstractAddressSpace base, boolean isLittleEndian, boolean is64Bit)
 	{

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/NewAixDump.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -457,7 +457,7 @@ private Properties getEnvironmentVariables(long environmentAddress) throws IOExc
 		}
 		long address = coreReadAddress();
 		while (address != 0) {
-			addresses.add(new Long(address));
+			addresses.add(Long.valueOf(address));
 			address = coreReadAddress();
 		}
 

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/NewElfDump.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -106,7 +106,7 @@ Address add(long offset) {
     		return new Address32((int) result);
     	}
     	Number asNumber() {
-    		return new Integer((int) getValue());
+    		return Integer.valueOf((int) getValue());
     	}
     	long asAddress() {
     		return getValue();
@@ -156,7 +156,7 @@ Address add(long offset) {
     		return new Address64(getValue() + offset);
     	}
     	Number asNumber() {
-    		return new Long(getValue());
+    		return Long.valueOf(getValue());
     	}
     	long asAddress() {
     		return getValue();

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/zos/le/DsaStackFrame.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2006, 2017 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,7 +36,6 @@
  *
  * @has - - - com.ibm.dtfj.corereaders.zos.le.Function
  */
-
 public class DsaStackFrame {
 
     /** The address of this dsa */
@@ -938,7 +937,7 @@ class Ceexppaf {
      */
     public static String getEntryPointName(AddressSpace space, long ep) throws IOException {
         int eyecatcher;
-        Long mapKey = new Long(ep);
+        Long mapKey = Long.valueOf(ep);
         String function = (String)space.getUserMap().get(mapKey);
         if (function != null)
             return function;

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/zos/util/AbstractHashMap.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2006, 2017 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -233,7 +233,7 @@ public boolean hasMoreElements() {
         }
 
         public Object nextElement() {
-            return new Long(nextInt());
+            return Long.valueOf(nextInt());
         }
 
         public long nextInt() {

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/corereaders/zos/util/IntegerMap.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2006, 2017 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -104,13 +104,13 @@ private void test() {
             }
             put(key, value);
             if (doCheck) {
-                check.put(new Long(key), new Long(value));
+                check.put(Long.valueOf(key), Long.valueOf(value));
                 if (get(key) != value) {
                     throw new Error("found " + get(key) + " expected " + value);
                 }
                 if (remove) {
                     remove(key);
-                    check.remove(new Long(key));
+                    check.remove(Long.valueOf(key));
                 }
             }
         }

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/java/j9/JavaClass.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -172,7 +172,7 @@ public void addConstantPoolClassRef(long id)
 	{
 		//TODO:  What does a null class in the constant pool represent?  (It happens frequently)
 		if (0L != id) {
-			_constantPoolClassRefs.add(new Long(id));
+			_constantPoolClassRefs.add(Long.valueOf(id));
 		}
 	}
 
@@ -209,7 +209,7 @@ public JavaMethod createNewMethod(long id, String name, String signature, int mo
 	public void createConstantPoolObjectRef(long id)
 	{
 		// Add the id to the list
-		_constantPoolObjects.add(new Long(id));	
+		_constantPoolObjects.add(Long.valueOf(id));	
 	}
 
 	public void createNewStaticField(String name, String sig, int modifiers, String value)

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/java/j9/JavaClassLoader.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Vector;
 
 import com.ibm.dtfj.image.j9.CorruptData;
 import com.ibm.dtfj.image.CorruptDataException;
@@ -166,7 +165,7 @@ public long getID()
 	
 	public void addClassID(long id)
 	{
-		_classIDs.add(new Long(id));
+		_classIDs.add(Long.valueOf(id));
 	}
 
 	public boolean equals(Object obj)

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/builder/javacore/JavaRuntimeBuilder.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2007, 2017 IBM Corp. and others
+ * Copyright (c) 2007, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -209,7 +209,7 @@ public JavaThread addJavaThread(ImageThread imageThread, String name, long tid,
 			if (j9thread_t != IBuilderData.NOT_AVAILABLE && jniEnv != IBuilderData.NOT_AVAILABLE) {
 				// Save the JNIEnv for later
 				ImagePointer pointer = fAddressSpace.getPointer(jniEnv);
-				j9ThreadToJNIEnv.put(new Long(j9thread_t), pointer);
+				j9ThreadToJNIEnv.put(Long.valueOf(j9thread_t), pointer);
 			}
 			if (!fAddressSpace.isValidAddressID(tid)) {
 				throw new JCInvalidArgumentsException("Must pass a valid thread id");
@@ -225,7 +225,7 @@ public JavaThread addJavaThread(ImageThread imageThread, String name, long tid,
 			javaThread.setImageThread((JCImageThread)imageThread);
 			if (jniEnv == IBuilderData.NOT_AVAILABLE) {
 				// Retrieve the JNIEnv
-				ImagePointer pointer = (ImagePointer)j9ThreadToJNIEnv.get(new Long(j9thread_t));
+				ImagePointer pointer = (ImagePointer)j9ThreadToJNIEnv.get(Long.valueOf(j9thread_t));
 				if (pointer != null) {
 					// Set it for 1.4.2
 					javaThread.setJNIEnv(pointer);

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/javacore/parser/j9/section/monitor/MonitorSovSectionParserPart.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2007, 2017 IBM Corp. and others
+ * Copyright (c) 2007, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -61,7 +61,7 @@ public void computeSovRule(String sovRuleID, ILookAheadBuffer lookAheadBuffer) t
 					long tid = results.getLongValue(MONITOR_THREAD_ID);
 					long ee = results.getLongValue(MONITOR_THREAD_EE);
 					// Remember the flat thread id for later
-					threads.put(new Integer(flatid), new Long(tid));
+					threads.put(Integer.valueOf(flatid), Long.valueOf(tid));
 					try {
 						fRuntimeBuilder.addJavaThread(null, name, IBuilderData.NOT_AVAILABLE, tid, IBuilderData.NOT_AVAILABLE, ee, "", IBuilderData.NOT_AVAILABLE, 0, null);
 					} catch (BuilderFailureException e) {
@@ -81,7 +81,7 @@ public void computeSovRule(String sovRuleID, ILookAheadBuffer lookAheadBuffer) t
 							long monitorID = results.getLongValue(MONITOR_OBJECT_ADDRESS);
 							results = processTagLineRequired(LK_FLAT_DETAILS);
 							int flatid = results.getIntValue(MONITOR_FLAT_ID);
-							Object p = threads.get(new Integer(flatid));
+							Object p = threads.get(Integer.valueOf(flatid));
 							long threadID = p instanceof Long ? ((Long)p).longValue() : IBuilderData.NOT_AVAILABLE; 
 							try {
 								if (monitorID != IBuilderData.NOT_AVAILABLE) {

File: jcl/src/openj9.dtfj/share/classes/com/ibm/dtfj/phd/parser/HeapdumpReader.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2002, 2017 IBM Corp. and others
+ * Copyright (c) 2002, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,6 @@
  *  (see {@link #HeapdumpReader}) passing the file name and then parse it (see {@link #parse})
  *  passing it an object that obeys the {@link com.ibm.dtfj.phd.parser.PortableHeapDumpListener} interface.
  */
-
 public class HeapdumpReader extends Base {
 
 	private static final long MAX_UNSIGNED_INT_AS_LONG = 0xffffffffL;
@@ -655,7 +654,7 @@ public int numberOfElements() {
 		}
 
 		public Object nextElement() {
-			return new Long(nextLong());
+			return Long.valueOf(nextLong());
 		}
 
 		public long nextLong() {

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/FindCommand.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -172,7 +172,7 @@ private boolean scanRegion(long start, long end, ImageSection imageSection){
 				}
 			}
 			if (j >= patternLength){
-				matches.add(new Long(i));
+				matches.add(Long.valueOf(i));
 				if (matches.size() == findAtt.numMatchesToDisplay) 
 					return true;
 			}

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/ScrollCommand.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -55,7 +55,7 @@ public void run(String command, String[] args, IContext context, PrintStream out
 		if(command.equals("-")) {
 			newMemAddrss = currentMemAddress.longValue() - currentNumBytesToPrint.intValue();
 		}
-		ctx.getProperties().put(Utils.CURRENT_MEM_ADDRESS, new Long(newMemAddrss));
+		ctx.getProperties().put(Utils.CURRENT_MEM_ADDRESS, Long.valueOf(newMemAddrss));
 		ctx.execute("hexdump", new String[]{Long.toHexString(newMemAddrss),currentNumBytesToPrint.toString()}, out);
 	}
 

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/infocommands/InfoThreadCommand.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2004, 2017 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -570,7 +570,7 @@ private void printJavaThreadInfo(JavaThread jt, boolean idPrinted)
 
 		out.print("    Priority:      ");
 		try {
-			Integer pri = new Integer(jt.getPriority());
+			Integer pri = Integer.valueOf(jt.getPriority());
 			out.print(pri.toString());
 		} catch (CorruptDataException e) {
 			out.print(Exceptions.getCorruptDataExceptionString());

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/heapdump/LongArrayReferenceIterator.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2008, 2017 IBM Corp. and others
+ * Copyright (c) 2008, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,7 +22,6 @@
  *******************************************************************************/
 package com.ibm.jvm.dtfjview.heapdump;
 
-
 public class LongArrayReferenceIterator implements ReferenceIterator 
 {
 	private final long _fields[];
@@ -43,7 +42,7 @@ public boolean hasNext()
 
 	public Long next()
 	{
-		Long toReturn = new Long(_fields[_index]);
+		Long toReturn = Long.valueOf(_fields[_index]);
 		
 		_index++;
 		

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/heapdump/classic/ClassicHeapDumpFormatter.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2008, 2017 IBM Corp. and others
+ * Copyright (c) 2008, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -191,7 +191,7 @@ public Long next()
 					return original.next();
 				} else {
 					_returnedExtra = true;
-					return new Long(extra);
+					return Long.valueOf(extra);
 				}
 			}
 

File: jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/heapdump/portable/PortableHeapDumpRecord.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2008, 2017 IBM Corp. and others
+ * Copyright (c) 2008, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -138,7 +138,7 @@ public Long next()
 					return null;
 				}
 				else {
-					return new Long(getAddressDifference(toConvert.longValue(),
+					return Long.valueOf(getAddressDifference(toConvert.longValue(),
 							base));
 				}
 			}

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/Merge.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -31,7 +31,6 @@
  *
  * @author Tim Preece
  */
-
 final public class Merge {
 
     private Vector      threads;
@@ -101,7 +100,7 @@ final protected String getNextEntry() throws IOException
             if (numberOfRecordsProcessed%10 == 0 ||
                 numberOfRecordsProcessed == TraceFormat.expectedRecords)
             {
-                StringBuffer tempBuffer=new StringBuffer(new Integer(numberOfRecordsProcessed).toString());
+                StringBuffer tempBuffer = new StringBuffer(Integer.toString(numberOfRecordsProcessed));
                 Util.padBuffer(tempBuffer, 6, ' ', false);    // right justify - field width 6 (at least)
                 TraceFormat.outStream.print(tempBuffer+" ");
             }

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/MessageFile.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -210,7 +210,7 @@ protected void addMessage(String messageLine)
 				MessageFile.messages = new Hashtable();
 			}
 
-			MessageFile.messages.put(new Integer(id), message);
+			MessageFile.messages.put(Integer.valueOf(id), message);
 		}
 
 	}
@@ -236,7 +236,7 @@ static protected Message getMessageFromID(int id)
 			messages = new Hashtable();
 		}
 
-		return (Message) messages.get(new Integer(id));
+		return (Message) messages.get(Integer.valueOf(id));
 	}
 
 	/**

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceFormat.java
Patch:
@@ -555,7 +555,7 @@ private void prime() throws IOException
 				 */
 				traceRecord.processTraceBufferHeader(traceFile, (long)dataStart + (long)j * (long)bufferSize, bufferSize);
 
-				Long threadID = new Long(traceRecord.getThreadIDAsLong());
+				Long threadID = Long.valueOf(traceRecord.getThreadIDAsLong());
 				if (listOfThreadBuffers.containsKey(threadID)) {
 					TraceThread buffersForThread = (TraceThread) listOfThreadBuffers
 							.get(threadID);
@@ -676,7 +676,7 @@ private void readAndFormatNewStyle() throws IOException
 			tracePointsFormatted++;
 
 			threadID = tp.getThreadID();
-			if (Util.findThreadID(new Long(threadID))) {
+			if (Util.findThreadID(Long.valueOf(threadID))) {
 				String formattedTime = tp.getFormattedTime();
 				tempTPString.append(formattedTime);
 

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceRecord.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -221,7 +221,7 @@ protected TraceRecord(TraceFile traceFile, long start)  throws IOException
         Util.Debug.println("Processing Record Header");
         foundThreadID = false;
 
-        if ( Util.findThreadID(new Long(threadID)) == false ) {
+        if ( Util.findThreadID(Long.valueOf(threadID)) == false ) {
             return;
         }
 

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceRecordExternal.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -145,7 +145,7 @@ protected void prime() throws IOException
                      entry = entry - (longEntryLength + longEntryID*256);
 
                      // push the real TraceID and copy in the special trace entry
-                     longEntryTraceIDs.push(new Integer(Util.constructTraceID(buffer, entry + 1)));
+                     longEntryTraceIDs.push(Integer.valueOf(Util.constructTraceID(buffer, entry + 1)));
                      buffer[entry+1]=0;
                      buffer[entry+2]=0;
                      buffer[entry+3]=(byte)longEntryID;
@@ -270,4 +270,3 @@ final protected void copySpannedEntryForNextRecord(byte[] buffer,int start,int e
     }
 
 }
-

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/format/TraceRecordInternal.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -111,7 +111,7 @@ final protected void prime() throws IOException
                       break;
                   }
                   entry = entry - (longEntryLength + longEntryID*256);
-                  longEntryTraceIDs.push(new Integer(Util.constructTraceID(buffer,entry+1)));
+                  longEntryTraceIDs.push(Integer.valueOf(Util.constructTraceID(buffer,entry+1)));
                   buffer[entry+1] = 0;
                   buffer[entry+2] = 0;
                   buffer[entry+3] = (byte)longEntryID;
@@ -219,4 +219,3 @@ final protected int getNextEntry() throws IOException
     }
 
 }
-

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/Message.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,7 +22,6 @@
  *******************************************************************************/
 package com.ibm.jvm.trace.format.api;
 
-import java.io.OutputStream;
 import java.io.UnsupportedEncodingException;
 import java.nio.BufferUnderflowException;
 import java.util.ArrayList;
@@ -571,7 +570,7 @@ public class PointerArg extends Arg {
 		}
 
 		Object getValue(ByteStream msg) {
-			return new Long(ptrSize == 4 ? msg.getUnsignedInt() : msg.getLong());
+			return Long.valueOf(ptrSize == 4 ? msg.getUnsignedInt() : msg.getLong());
 		}
 
 		void format(ByteStream msg, StringBuilder out) {

File: jcl/src/openj9.traceformat/share/classes/com/ibm/jvm/trace/format/api/MessageFile.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar18-SE]*/
 /*******************************************************************************
- * Copyright (c) 2000, 2016 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -266,7 +266,7 @@ private void addMessage_12(String messageLine) {
 
 		Message message = new Message(type, msg, id, level, componentName, symbol, context);
 
-		messages.put(new Integer(id), message);
+		messages.put(Integer.valueOf(id), message);
 	}
 
 	/**
@@ -283,7 +283,7 @@ protected Message getMessageFromID(int id) {
 			return null;
 		}
 
-		return (Message) messages.get(new Integer(id));
+		return (Message) messages.get(Integer.valueOf(id));
 	}
 
 	/**

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1107,7 +1107,7 @@ public void test_getModifiers_classTypes() {
 		0x0009, // public static
 		0x0011, // public final
 		0x0019, // public final static
-		0x0008, // static
+		0x0000, //
 		0x0410, // static
 		0x0400, // abstract
 		0x1001, // public synthetic

File: test/functional/Java8andUp/src_90/org/openj9/test/java/lang/Test_Class.java
Patch:
@@ -1107,7 +1107,7 @@ public void test_getModifiers_classTypes() {
 		0x0009, // public static
 		0x0011, // public final
 		0x0019, // public final static
-		0x0008, // static
+		0x0000, //
 		0x0410, // static
 		0x0400, // abstract
 		0x1001, // public synthetic

File: test/Utils/src/org/openj9/test/util/IncludeExcludeTestAnnotationTransformer.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -42,6 +42,7 @@ public class IncludeExcludeTestAnnotationTransformer implements IAnnotationTrans
 		String line = null;
 		String excludeFile = System.getenv("EXCLUDE_FILE");
 		logger.info("exclude file is " + excludeFile);
+		if (excludeFile != null) {
 		try {
 			FileReader fileReader = new FileReader(excludeFile);
 			BufferedReader bufferedReader = new BufferedReader(fileReader);
@@ -79,6 +80,7 @@ public class IncludeExcludeTestAnnotationTransformer implements IAnnotationTrans
 		} catch(IOException ex) {
 			logger.info("Error reading file " + excludeFile, ex);
 		}
+		}
 	}
 
 	@Override

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java
Patch:
@@ -99,6 +99,7 @@
  * configuration.
  */
 public class Dump {
+	private static final String SystemRequestPrefix = "z/OS".equalsIgnoreCase(System.getProperty("os.name")) ? "system:dsn=" : "system:file=";
   
 	/**
 	 * Trigger a java dump. A java dump is in a human-readable format, and
@@ -372,7 +373,7 @@ public static String systemDumpToFile(String fileNamePattern) throws InvalidDump
     	if( fileNamePattern != null ) {
     		// Check no-one has tried to sneak options onto the end.
     		checkForExtraOptions(fileNamePattern);
-    		request = "system:file=" + fileNamePattern; //$NON-NLS-1$
+    		request = SystemRequestPrefix + fileNamePattern; //$NON-NLS-1$
     	} else {
     		// This is equivalent the to SystemDump() call.
     		request = "system"; //$NON-NLS-1$

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java
Patch:
@@ -99,6 +99,7 @@
  * configuration.
  */
 public class Dump {
+	private static final String SystemRequestPrefix = "z/OS".equalsIgnoreCase(System.getProperty("os.name")) ? "system:dsn=" : "system:file=";
   
 	/**
 	 * Trigger a java dump. A java dump is in a human-readable format, and
@@ -372,7 +373,7 @@ public static String systemDumpToFile(String fileNamePattern) throws InvalidDump
     	if( fileNamePattern != null ) {
     		// Check no-one has tried to sneak options onto the end.
     		checkForExtraOptions(fileNamePattern);
-    		request = "system:file=" + fileNamePattern; //$NON-NLS-1$
+    		request = SystemRequestPrefix + fileNamePattern; //$NON-NLS-1$
     	} else {
     		// This is equivalent the to SystemDump() call.
     		request = "system"; //$NON-NLS-1$

File: jcl/src/java.base/share/classes/com/ibm/oti/vm/BootstrapClassLoader.java
Patch:
@@ -3,7 +3,7 @@
 package com.ibm.oti.vm;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -67,7 +67,7 @@ private BootstrapClassLoader() {
 	types = new int[count];
 	cache = new Object[count];
 	parsedPath = new String[count];
-	VM.initializeClassLoader(this, true, false);
+	VM.initializeClassLoader(this, VM.J9_CLASSLOADER_TYPE_BOOT, false);
 }
 
 /**

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2084,7 +2084,7 @@ public static MethodHandle tryFinally(MethodHandle tryHandle, MethodHandle final
 							tryType.returnType.getSimpleName(),
 							finallyType.returnType.getSimpleName(),}));
 		}
-		if (Throwable.class != finallyType.parameterType(0)) {
+		if (!Throwable.class.isAssignableFrom(finallyType.parameterType(0))) {
 			/*[MSG "K063C", "The 1st parameter type of the finally handle: {0} is not {1}"]*/
 			throw new IllegalArgumentException(Msg.getString("K063C", new Object[] { //$NON-NLS-1$
 							finallyType.parameterType(0).getSimpleName(),

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2084,7 +2084,7 @@ public static MethodHandle tryFinally(MethodHandle tryHandle, MethodHandle final
 							tryType.returnType.getSimpleName(),
 							finallyType.returnType.getSimpleName(),}));
 		}
-		if (Throwable.class != finallyType.parameterType(0)) {
+		if (!Throwable.class.isAssignableFrom(finallyType.parameterType(0))) {
 			/*[MSG "K063C", "The 1st parameter type of the finally handle: {0} is not {1}"]*/
 			throw new IllegalArgumentException(Msg.getString("K063C", new Object[] { //$NON-NLS-1$
 							finallyType.parameterType(0).getSimpleName(),

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/GetCommandsTask.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2017 IBM Corp. and others
+ * Copyright (c) 2010, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,6 +37,7 @@
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.ClassloadersSummaryCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.CompressedRefMappingCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.CoreInfoCommand;
+import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.CPDescriptionCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpAllClassloadersCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpAllRamClassLinearCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpAllRegionsCommand;
@@ -173,6 +174,7 @@ public void run(IVMData vmData, Object[] userData)
 		toPassBack.add(new DumpSegregatedStatsCommand());
 		toPassBack.add(new ObjectSizeInfo());
 		toPassBack.add(new DumpContendedLoadTable());
+		toPassBack.add(new CPDescriptionCommand());
 
 		loadPlugins(toPassBack, loader);
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/GetCommandsTask.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2017 IBM Corp. and others
+ * Copyright (c) 2010, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,6 +37,7 @@
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.ClassloadersSummaryCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.CompressedRefMappingCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.CoreInfoCommand;
+import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.CPDescriptionCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpAllClassloadersCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpAllRamClassLinearCommand;
 import com.ibm.j9ddr.vm29.tools.ddrinteractive.commands.DumpAllRegionsCommand;
@@ -173,6 +174,7 @@ public void run(IVMData vmData, Object[] userData)
 		toPassBack.add(new DumpSegregatedStatsCommand());
 		toPassBack.add(new ObjectSizeInfo());
 		toPassBack.add(new DumpContendedLoadTable());
+		toPassBack.add(new CPDescriptionCommand());
 
 		loadPlugins(toPassBack, loader);
 

File: jcl/src/java.base/share/classes/java/lang/invoke/ConstantCallSite.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,7 @@ public ConstantCallSite(MethodHandle permanentTarget) {
 	
 	/**
 	 * Create a ConstantCallSite and assign the hook MethodHandle's result to its permanent target.
-	 * The hook MethodHandle is invoked as though by {@link MethodHandle#invoke(this)} and must return a MethodHandle that will be installed 
+	 * The hook MethodHandle is invoked as though by (@link MethodHandle#invoke(this)) and must return a MethodHandle that will be installed 
 	 * as the ConstantCallSite's target.
 	 * <p>
 	 * The hook MethodHandle is required if the ConstantCallSite's target needs to have access to the ConstantCallSite instance.  This is an

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -3705,7 +3705,7 @@ private static boolean counterPredicate(int endValue, int counter) {
 	}
 	
 	/**
-	 * Produce a loop handle that iterates over a range of values produced by an Iterator<T>
+	 * Produce a loop handle that iterates over a range of values produced by an {@code Iterator<T>}
 	 * Loop variables are updated by the return values of the corresponding step handles 
 	 * (including the loop body) in each iteration.
 	 * 

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -318,7 +318,7 @@ public MethodType erase() {
 	 * <li>(II)V - method taking two ints and return void</li>
 	 * <li>(I)Ljava/lang/Integer; - method taking an int and returning an Integer</li>
 	 * <li>([I)I - method taking an array of ints and returning an int</li>
-	 * <ul>
+	 * </ul>
 	 * 
 	 * @param methodDescriptor - the method descriptor string 
 	 * @param loader - the ClassLoader to be used or null for System ClassLoader 

File: jcl/src/java.base/share/classes/java/lang/invoke/MutableCallSite.java
Patch:
@@ -71,7 +71,7 @@ private static long initializeTargetFieldOffset(){
 	
 	/**
 	 * Create a MutableCallSite permanently set to the same type as the <i>mutableTarget</i> and using
-	 * the mutableTarget</i> as the initial target value.
+	 * the <i>mutableTarget</i> as the initial target value.
 	 * 
 	 * @param mutableTarget - the initial target of the CallSite
 	 * @throws NullPointerException - if the <i>mutableTarget</i> is null.

File: jcl/src/java.management/share/classes/java/lang/management/MemoryMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2016 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,7 @@
  * clients.
  * </p>
  * <p>
- * Accessing this <code>MXBean</code> can be done in one of three ways. <br/>
+ * Accessing this <code>MXBean</code> can be done in one of three ways.
  * <ol>
  * <li>Invoking the static {@link ManagementFactory#getMemoryMXBean} method.
  * </li>
@@ -40,7 +40,7 @@
  * string &quot;java.lang:type=ClassLoading&quot; for the value of the second
  * parameter.</li>
  * </ol>
- * </p>
+ * 
  */
 public interface MemoryMXBean extends PlatformManagedObject {
 

File: jcl/src/java.management/share/classes/java/lang/management/MemoryManagerMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2016 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,7 +32,7 @@
  * </p>
  * <p>
  * Accessing this kind of <code>MXBean</code> can be done in one of three
- * ways. <br/>
+ * ways.
  * <ol>
  * <li>Invoking the static {@link ManagementFactory#getMemoryManagerMXBeans()}
  * method which returns a {@link java.util.List} of all currently instantiated
@@ -43,7 +43,7 @@
  * string &quot;java.lang:type=MemoryManager,name= <i>unique manager's name
  * </i>&quot; for the value of the second parameter.</li>
  * </ol>
- * </p>
+ * 
  */
 public interface MemoryManagerMXBean extends PlatformManagedObject {
 

File: jcl/src/java.management/share/classes/java/lang/management/ThreadMXBean.java
Patch:
@@ -30,7 +30,7 @@
  * clients.
  * </p>
  * <p>
- * Accessing this <code>MXBean</code> can be done in one of three ways. <br/>
+ * Accessing this <code>MXBean</code> can be done in one of three ways.
  * <ol>
  * <li>Invoking the static {@link ManagementFactory#getThreadMXBean} method.
  * </li>
@@ -40,8 +40,7 @@
  * &quot;java.lang:type=Threading&quot; for the value of the second parameter.
  * </li>
  * </ol>
- * </p>
- * 
+ *  
  * @since 1.5
  */
 public interface ThreadMXBean extends PlatformManagedObject {

File: jcl/src/java.base/share/classes/java/lang/invoke/ConstantCallSite.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,7 @@ public ConstantCallSite(MethodHandle permanentTarget) {
 	
 	/**
 	 * Create a ConstantCallSite and assign the hook MethodHandle's result to its permanent target.
-	 * The hook MethodHandle is invoked as though by {@link MethodHandle#invoke(this)} and must return a MethodHandle that will be installed 
+	 * The hook MethodHandle is invoked as though by (@link MethodHandle#invoke(this)) and must return a MethodHandle that will be installed 
 	 * as the ConstantCallSite's target.
 	 * <p>
 	 * The hook MethodHandle is required if the ConstantCallSite's target needs to have access to the ConstantCallSite instance.  This is an

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -3705,7 +3705,7 @@ private static boolean counterPredicate(int endValue, int counter) {
 	}
 	
 	/**
-	 * Produce a loop handle that iterates over a range of values produced by an Iterator<T>
+	 * Produce a loop handle that iterates over a range of values produced by an {@code Iterator<T>}
 	 * Loop variables are updated by the return values of the corresponding step handles 
 	 * (including the loop body) in each iteration.
 	 * 

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodType.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -318,7 +318,7 @@ public MethodType erase() {
 	 * <li>(II)V - method taking two ints and return void</li>
 	 * <li>(I)Ljava/lang/Integer; - method taking an int and returning an Integer</li>
 	 * <li>([I)I - method taking an array of ints and returning an int</li>
-	 * <ul>
+	 * </ul>
 	 * 
 	 * @param methodDescriptor - the method descriptor string 
 	 * @param loader - the ClassLoader to be used or null for System ClassLoader 

File: jcl/src/java.base/share/classes/java/lang/invoke/MutableCallSite.java
Patch:
@@ -71,7 +71,7 @@ private static long initializeTargetFieldOffset(){
 	
 	/**
 	 * Create a MutableCallSite permanently set to the same type as the <i>mutableTarget</i> and using
-	 * the mutableTarget</i> as the initial target value.
+	 * the <i>mutableTarget</i> as the initial target value.
 	 * 
 	 * @param mutableTarget - the initial target of the CallSite
 	 * @throws NullPointerException - if the <i>mutableTarget</i> is null.

File: jcl/src/java.management/share/classes/java/lang/management/MemoryMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2016 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,7 @@
  * clients.
  * </p>
  * <p>
- * Accessing this <code>MXBean</code> can be done in one of three ways. <br/>
+ * Accessing this <code>MXBean</code> can be done in one of three ways.
  * <ol>
  * <li>Invoking the static {@link ManagementFactory#getMemoryMXBean} method.
  * </li>
@@ -40,7 +40,7 @@
  * string &quot;java.lang:type=ClassLoading&quot; for the value of the second
  * parameter.</li>
  * </ol>
- * </p>
+ * 
  */
 public interface MemoryMXBean extends PlatformManagedObject {
 

File: jcl/src/java.management/share/classes/java/lang/management/MemoryManagerMXBean.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2005, 2016 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,7 +32,7 @@
  * </p>
  * <p>
  * Accessing this kind of <code>MXBean</code> can be done in one of three
- * ways. <br/>
+ * ways.
  * <ol>
  * <li>Invoking the static {@link ManagementFactory#getMemoryManagerMXBeans()}
  * method which returns a {@link java.util.List} of all currently instantiated
@@ -43,7 +43,7 @@
  * string &quot;java.lang:type=MemoryManager,name= <i>unique manager's name
  * </i>&quot; for the value of the second parameter.</li>
  * </ol>
- * </p>
+ * 
  */
 public interface MemoryManagerMXBean extends PlatformManagedObject {
 

File: jcl/src/java.management/share/classes/java/lang/management/ThreadMXBean.java
Patch:
@@ -30,7 +30,7 @@
  * clients.
  * </p>
  * <p>
- * Accessing this <code>MXBean</code> can be done in one of three ways. <br/>
+ * Accessing this <code>MXBean</code> can be done in one of three ways.
  * <ol>
  * <li>Invoking the static {@link ManagementFactory#getThreadMXBean} method.
  * </li>
@@ -40,8 +40,7 @@
  * &quot;java.lang:type=Threading&quot; for the value of the second parameter.
  * </li>
  * </ol>
- * </p>
- * 
+ *  
  * @since 1.5
  */
 public interface ThreadMXBean extends PlatformManagedObject {

File: test/functional/IllegalAccessError_for_protected_method/src/org/openj9/test/Agent.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/IllegalAccessError_for_protected_method/src/org/openj9/test/Testcase.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/InstrumentationAgent/src/org/openj9/test/util/JavaAgent.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2017 IBM Corp. and others
+ * Copyright (c) 2015, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/DateUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/Exclude.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/ExcludeList.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/IXMLDocumentHandler.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/XMLException.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/XMLInterface.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/XMLParser.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/XMLSpec.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/J9 Exclude File Support/src/com/oti/j9/exclude/XMLStringBuffer.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/excludedClasses/sun/tools/util/LoadEnvironment.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/finalizer/TestObject.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/hw/hw.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jar/JarTestClassLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jar/JarTester.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jar/JarTesterMT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jar/ZipTestClassLoader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jar/ZipTestClassLoaderMT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jar/ZipTester.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/array/byteArrayLoadStore.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/array/charArrayLoadStore.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/array/intArrayLoadStore.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/array/intArrayLoadStoreConstIndices.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/array/shortArrayLoadStore.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/LongJavaArithmetic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/LongJavaShifts.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/SwitchTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/assembler/SwitchTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/Cast001.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/CheckCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/I2BCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/I2CCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/I2SCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/InstOf001.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/InstanceOf.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/L2BCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/L2CCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/L2ICast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/casting/L2SCast.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/cfg/nestedExceptions.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/AOTTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/BasicTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/BoundaryTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Caller1_AT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Caller1_AotTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Caller1_BT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Caller2_AT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Caller2_AotTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Caller2_BT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/CodeCacheObj.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/Constants.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/IAdder.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/IAdderCaller.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/IAdderImpl_Int.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/IAdderImpl_String.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/LogParserThread.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/MethodObj.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/SpaceReuseTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TargetClass_AT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TargetClass_AotTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TargetClass_BT.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TestManager.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TrampolineTest_Advanced.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TrampolineTest_Basic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/codecache/TrampolineTest_IPIC.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/BoundsCheck.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/CharacterConverterInt3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/DivideByZero.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/HangOnFloatPrint.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/InvalidArrayStoreNotCaught.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/LongDivideByZero.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/LongRemainderByZero.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/crashes/RemainderByZero.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/ctresolves/ClassInSamePackage.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/ctresolves/SpecialMethodSameClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/ctresolves/StaticFieldSameClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/ctresolves/StaticMethodSameClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/ExceptionLocal.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/ExceptionScoped.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/InterpJitException.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/JitInterpException.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/RaiseBoundsCheck.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/RaiseNullCheck.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE0.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE1_ExceptionCatchOnly.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE2_SimpleTryCatchFinally.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE3_TryCatchFinallyNested1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE4_TryCatchFinallyNested2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE5_TryCatchFinallyNested3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/SanityE6_TryCatchFinallyNested4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/exceptions/readLineBug.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/fields/GetArrayField.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/fields/GetField.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/fields/GetStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/fields/PutStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleAdditionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleArrayLoadTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleArrayLoadTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleArrayStoreTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleArrayStoreTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleDivisionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleSubtractionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleToFloat.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleToIntegerTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleToLongTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleToOthers.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/DoubleToOthersTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatAdditionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatArrayLoadTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatArrayLoadTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatArrayStoreTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatArrayStoreTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatDivisionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatMultiplicationTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatStaticTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatStaticTestHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatStaticTestHelperVolatile.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatSubtractionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToDoubleNotStrict.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToDoubleStrict.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToInteger.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToIntegerTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToLongTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToOthers.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/FloatToOthersTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/OthersToDouble.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/OthersToDoubleTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/OthersToFloat.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/OthersToFloatTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/floats/StaticFloatAndDoubleTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/gc/GCTestClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/gc/RemberedArray.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/gc/RemberedField.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/gc/RemberedStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/gc/Scavenge.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/geCasting/clearHighOrderBits.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/geCasting/signExtendedHighOrderBits.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/immedOp/addImmed.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/immedOp/andImmed.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/immedOp/cmpImmed.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/immedOp/orImmed.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/immedOp/xorImmed.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface5.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface6.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface7.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface7A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface7B.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/Interface7C.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest2A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest2B.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest2C.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest3A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest3B.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest3C.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest3D.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest4A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest4B.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest5.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest5A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest5A_Child.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest5B.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest5B_Child.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest6.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest6A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest7.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest7A.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest7B.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest7C.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InterfaceTest7_First.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InvokeInterface.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InvokeStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/invoke/InvokeVirtual.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div01.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div02.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div03.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div04.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div05.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div06.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div07.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/Div08.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/IntegerAdd.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/IntegerMultiply.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/LongMultiply.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/LongXOR.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/intSpecialCompare.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/longCompare.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math/longVarCompare.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/ByteCompare.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/ByteToLong.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/CharToInt.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntAndLongDivision.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntStaticTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerANDTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerAddition.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerCompare.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerMultiply.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerSubtraction.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerToByte.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerToByteAndShort.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerToFloat.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerToLong.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/IntegerXOR.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongANDTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongAddition.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongCompare.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongCompare2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongDivision.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongDivisionTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongMultiply.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongORTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongRemainderTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongSubtraction.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongToFloat.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongToInteger.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongToOthersConversion.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/LongXOR.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/math2/NegationTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/misc/AsyncCheck.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/misc/Constructor.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/misc/S.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/misc/SanityS1_Strings.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/misc/SanityS2_Strings.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/misc/WriteBarrier.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/FloatArgTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/FloatDoubleArgTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/FloatDoubleArgTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/IntArgTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/LongArgTest1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/LongArgTest2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/LongArgTest3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/os390/linkage/LongArgTest4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/promotion/PromoteStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/promotion/PromoteStatic2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/promotion/PromoteStatic3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/promotion/PromoteStatic4.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/promotion/PromoteVirt.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/StaticString.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedClassRef.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedConstant.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedConstant2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedConstructor.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedFloatConstant.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedGetField.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedGetField1b.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedGetField2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedGetField2b.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedGetField3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedGetStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedJavaMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedJavaStaticMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedLongConstant.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedNewClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedNewClass2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedPutField2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedPutField2b.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedPutField3.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedPutStaticField.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedPutStaticField2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedSpecialMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedStaticField.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedStaticField2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedStaticMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/resolves/UnresolvedVirtualMethod.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/sieve/Sieve01.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/sieve/Sieve02.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/sieve/Sieve03.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/transitions/JitInterpStatic.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/transitions/JitInterpStaticI5I.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/jitt/transitions/JitInterpVirt.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/Context.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/CountDecimalDigitLong.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/CountDecimalDigitLong2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/MEMCMP2CompareTo.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/MEMCPYChar2Byte2.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/Main.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: test/functional/JIT_Test/src/jit/test/loopReduction/TROTArray.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2000, 2017 IBM Corp. and others
+ * Copyright (c) 2000, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -652,7 +652,7 @@ private static void dumpCPShapeDescription(PrintStream out, J9ROMClassPointer ro
 		U32Pointer cpDescription = romClass.cpShapeDescription();
 		long descriptionLong;
 		long i, j, k, numberOfLongs;
-		char symbols[] = new char[] { '.', 'C', 'S', 'I', 'F', 'J', 'D', 'i', 's', 'v', 'x', 'y', 'z', 'T', 'H', 'A', 'x', 'v' };
+		char symbols[] = new char[] { '.', 'C', 'S', 'I', 'F', 'J', 'D', 'i', 's', 'v', 'x', 'y', 'z', 'T', 'H', 'A', '.', 'c', 'x', 'v' };
 		
 		symbols[(int)J9CPTYPE_UNUSED8] = '.';
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -652,7 +652,7 @@ private static void dumpCPShapeDescription(PrintStream out, J9ROMClassPointer ro
 		U32Pointer cpDescription = romClass.cpShapeDescription();
 		long descriptionLong;
 		long i, j, k, numberOfLongs;
-		char symbols[] = new char[] { '.', 'C', 'S', 'I', 'F', 'J', 'D', 'i', 's', 'v', 'x', 'y', 'z', 'T', 'H', 'A' };
+		char symbols[] = new char[] { '.', 'C', 'S', 'I', 'F', 'J', 'D', 'i', 's', 'v', 'x', 'y', 'z', 'T', 'H', 'A', 'x', 'v' };
 		
 		symbols[(int)J9CPTYPE_UNUSED8] = '.';
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -652,7 +652,7 @@ private static void dumpCPShapeDescription(PrintStream out, J9ROMClassPointer ro
 		U32Pointer cpDescription = romClass.cpShapeDescription();
 		long descriptionLong;
 		long i, j, k, numberOfLongs;
-		char symbols[] = new char[] { '.', 'C', 'S', 'I', 'F', 'J', 'D', 'i', 's', 'v', 'x', 'y', 'z', 'T', 'H', 'A' };
+		char symbols[] = new char[] { '.', 'C', 'S', 'I', 'F', 'J', 'D', 'i', 's', 'v', 'x', 'y', 'z', 'T', 'H', 'A', 'x', 'v' };
 		
 		symbols[(int)J9CPTYPE_UNUSED8] = '.';
 

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ThreadMXBeanImpl.java
Patch:
@@ -663,7 +663,7 @@ private ThreadInfo[] dumpAllThreadsCommon(boolean lockedMonitors,
 	@Override
 	public ThreadInfo[] dumpAllThreads(boolean lockedMonitors,
 			boolean lockedSynchronizers, int maxDepth) {
-		/*[MSG "K0662", maxDepth must not be negative.]*/
+		/*[MSG "K0662", "maxDepth must not be negative."]*/
 		if (maxDepth < 0) {
 			throw new IllegalArgumentException(com.ibm.oti.util.Msg.getString("K0662")); //$NON-NLS-1$
 		}

File: jcl/src/java.management/share/classes/com/ibm/java/lang/management/internal/ThreadMXBeanImpl.java
Patch:
@@ -663,7 +663,7 @@ private ThreadInfo[] dumpAllThreadsCommon(boolean lockedMonitors,
 	@Override
 	public ThreadInfo[] dumpAllThreads(boolean lockedMonitors,
 			boolean lockedSynchronizers, int maxDepth) {
-		/*[MSG "K0662", maxDepth must not be negative.]*/
+		/*[MSG "K0662", "maxDepth must not be negative."]*/
 		if (maxDepth < 0) {
 			throw new IllegalArgumentException(com.ibm.oti.util.Msg.getString("K0662")); //$NON-NLS-1$
 		}

File: jcl/src/openj9.cuda/share/classes/module-info.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar19-SE]*/
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,5 +22,5 @@
  *******************************************************************************/
 module openj9.cuda {
 	requires java.base;
-	// TODO exports com.ibm.cuda;
+	exports com.ibm.cuda;
 }

File: jcl/src/openj9.gpu/share/classes/module-info.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar19-SE]*/
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,6 +23,6 @@
 module openj9.gpu {
 	requires java.base;
 	requires openj9.cuda;
-	// TODO exports com.ibm.gpu;
-	// TODO provides com.ibm.gpu.spi.GPUAssist.Provider with com.ibm.gpu.internal.CudaGPUAssistProvider;
+	exports com.ibm.gpu;
+	provides com.ibm.gpu.spi.GPUAssist.Provider with com.ibm.gpu.internal.CudaGPUAssistProvider;
 }

File: test/JLM_Tests/src/org/openj9/test/java/lang/management/TestMemoryPoolMXBean.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -116,7 +116,7 @@ protected void setUp() throws Exception {
 		} catch (Exception me) {
 			Assert.fail("Unexpected exception in setting up MemoryMXBeanImpl test: " + me.getMessage());
 		}
-		logger.info("Starting TestMemoryMXBean tests ..." + "Test MemoryPoolMXBean name = " + testBean.getName());
+		logger.info("Starting TestMemoryPoolMXBean tests ..." + "Test MemoryPoolMXBean name = " + testBean.getName());
 	}
 
 	// IBM extension method

File: test/Java8andUp/src/j9vm/test/jni/PthreadTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2017 IBM Corp. and others
+ * Copyright (c) 2015, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,9 +36,10 @@ public class PthreadTest {
 
 	private static boolean worked = false;
 
-
+	@Test
 	public void test_destructor() {
 		worked = attachAndDetach();
+		AssertJUnit.assertTrue("Thread successfully detached", worked);
 	}
 
 	@BeforeMethod
@@ -50,7 +51,6 @@ protected void setUp() throws Exception {
 
 	@AfterMethod
 	protected void tearDown() throws Exception {
-		AssertJUnit.assertTrue("Thread successfully detached", worked);
 		logger.debug("---------------------------------------------------------");
 	}
 

File: test/Java8andUp/src/org/openj9/test/gpu/SortTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2013, 2017 IBM Corp. and others
+ * Copyright (c) 2013, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -391,12 +391,12 @@ private void test(int deviceId, int size, boolean logResult) {
 		}
 	}
 
-	@Test(groups = { "level.sanity" })
+	@Test(groups = { "level.sanity", "level.extended" })
 	public void testBasic() {
 		main(new String[] { "-geometric=10,10000000,31" });
 	}
 
-	@Test(groups = { "level.sanity" })
+	@Test(groups = { "level.sanity", "level.extended" })
 	public void testPowersOf2() {
 		main(new String[] { "-geometric=1,8388608,24" });
 	}

File: test/JLM_Tests/src/org/openj9/test/java/lang/management/TestMemoryPoolMXBean.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -116,7 +116,7 @@ protected void setUp() throws Exception {
 		} catch (Exception me) {
 			Assert.fail("Unexpected exception in setting up MemoryMXBeanImpl test: " + me.getMessage());
 		}
-		logger.info("Starting TestMemoryMXBean tests ..." + "Test MemoryPoolMXBean name = " + testBean.getName());
+		logger.info("Starting TestMemoryPoolMXBean tests ..." + "Test MemoryPoolMXBean name = " + testBean.getName());
 	}
 
 	// IBM extension method

File: test/Java8andUp/src/j9vm/test/jni/PthreadTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2017 IBM Corp. and others
+ * Copyright (c) 2015, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,9 +36,10 @@ public class PthreadTest {
 
 	private static boolean worked = false;
 
-
+	@Test
 	public void test_destructor() {
 		worked = attachAndDetach();
+		AssertJUnit.assertTrue("Thread successfully detached", worked);
 	}
 
 	@BeforeMethod
@@ -50,7 +51,6 @@ protected void setUp() throws Exception {
 
 	@AfterMethod
 	protected void tearDown() throws Exception {
-		AssertJUnit.assertTrue("Thread successfully detached", worked);
 		logger.debug("---------------------------------------------------------");
 	}
 

File: test/Java8andUp/src/org/openj9/test/gpu/SortTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2013, 2017 IBM Corp. and others
+ * Copyright (c) 2013, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -391,12 +391,12 @@ private void test(int deviceId, int size, boolean logResult) {
 		}
 	}
 
-	@Test(groups = { "level.sanity" })
+	@Test(groups = { "level.sanity", "level.extended" })
 	public void testBasic() {
 		main(new String[] { "-geometric=10,10000000,31" });
 	}
 
-	@Test(groups = { "level.sanity" })
+	@Test(groups = { "level.sanity", "level.extended" })
 	public void testPowersOf2() {
 		main(new String[] { "-geometric=1,8388608,24" });
 	}

File: test/VM_Test/src/j9vm/test/jarfileupdate/JarFileUpdateTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -144,7 +144,6 @@ public CustomClassLoader(String jarFile) throws Exception {
 			factory = Shared.getSharedClassHelperFactory();
 			if (factory != null) {
 				helper = factory.getURLHelper(this);
-				helper.setMinimizeUpdateChecks();
 			} else {
 				System.err.println("Error: Failed to get SharedClassHelperFactory");
 			}

File: test/VM_Test/src/j9vm/test/jarfileupdate/JarFileUpdateTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -144,7 +144,6 @@ public CustomClassLoader(String jarFile) throws Exception {
 			factory = Shared.getSharedClassHelperFactory();
 			if (factory != null) {
 				helper = factory.getURLHelper(this);
-				helper.setMinimizeUpdateChecks();
 			} else {
 				System.err.println("Error: Failed to get SharedClassHelperFactory");
 			}

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar19-SE-B174]*/
+/*[INCLUDE-IF Sidecar19-SE-OpenJ9]*/
 /*******************************************************************************
  * Copyright (c) 2017, 2018 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/jdk/internal/misc/Unsafe.java
Patch:
@@ -1,4 +1,4 @@
-/*[INCLUDE-IF Sidecar19-SE-B174]*/
+/*[INCLUDE-IF Sidecar19-SE-OpenJ9]*/
 /*******************************************************************************
  * Copyright (c) 2017, 2018 IBM Corp. and others
  *

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/JITStackWalker.java
Patch:
@@ -82,6 +82,7 @@
 import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.*;
 import static com.ibm.j9ddr.vm29.structure.J9StackWalkConstants.*;
 import static com.ibm.j9ddr.vm29.structure.J9StackWalkState.*;
+import static com.ibm.j9ddr.vm29.structure.MethodMetaDataConstants.INTERNAL_PTR_REG_MASK;
 
 /**
  * Stack walker for processing JIT frames. Don't call directly - go through

File: jcl/src/java.base/share/classes/java/lang/J9VMInternals.java
Patch:
@@ -30,7 +30,7 @@
 
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -439,7 +439,7 @@ static int fastIdentityHashCode(Object anObject) {
 				}
 			}
 		} else {
-			long ptr = (com.ibm.oti.vm.VM.FJ9OBJECT_SIZE == 4) ?  h.getIntFromObject(anObject, 0L) : h.getLongFromObject(anObject, 0L);
+			long ptr = (com.ibm.oti.vm.VM.FJ9OBJECT_SIZE == 4) ? Integer.toUnsignedLong(h.getIntFromObject(anObject, 0L)) : h.getLongFromObject(anObject, 0L);
 			if ((ptr & com.ibm.oti.vm.VM.OBJECT_HEADER_HAS_BEEN_MOVED_IN_CLASS) != 0) {
 				if (!h.isArray(anObject)) {
 					long j9class = ptr & com.ibm.oti.vm.VM.J9_JAVA_CLASS_MASK;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RamClassWalker.java
Patch:
@@ -418,7 +418,7 @@ private void allSlotsInRAMStaticsDo() throws CorruptDataException {
 		if (ramClass.ramStatics().isNull()) {
 			return;
 		}
-		Iterator ofoIterator = J9ObjectFieldOffsetIterator.J9ObjectFieldOffsetIteratorFor(ramClass, J9ClassHelper.superclass(ramClass), new U32(J9ROMFieldOffsetWalkState.J9VM_FIELD_OFFSET_WALK_INCLUDE_STATIC));
+		Iterator<?> ofoIterator = J9ObjectFieldOffsetIterator.J9ObjectFieldOffsetIteratorFor(ramClass, J9ClassHelper.superclass(ramClass), new U32(J9ROMFieldOffsetWalkState.J9VM_FIELD_OFFSET_WALK_INCLUDE_STATIC));
 		J9ObjectFieldOffset fields = null;
 		while (ofoIterator.hasNext()) {
 			fields = (J9ObjectFieldOffset) ofoIterator.next();

File: test/Java8andUp/src/org/openj9/test/java/lang/management/ThreadMXBean/NoBlock.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2017, 2017 IBM Corp. and others
+ * Copyright (c) 2017, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,7 @@
 import org.testng.annotations.Parameters;
 import org.testng.annotations.Test;
 import org.testng.asserts.SoftAssert;
-import org.openj9.test.java.lang.management.ThreadMXBean.ThreadMXBeanTestCase.TimeoutNotifier;
+import org.openj9.test.java.lang.management.ThreadMXBean.ThreadMXBeanTestCaseCommon.TimeoutNotifier;
 
 public class NoBlock extends ThreadMXBeanTestCase implements TimeoutNotifier {
 	private SoftAssert softAssert = new SoftAssert();

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2012, 2017 IBM Corp. and others
+ * Copyright (c) 2012, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -305,7 +305,7 @@ public final long getProcessCpuTimeByNS() {
 	 * executed so far in both kernel and user modes. Returns -1 if the
 	 * value is unavailable on this platform or in the case of an error.
 	 * 
-	 * @return process cpu ime in 100 ns units
+	 * @return process cpu ime in 1 ns units
 	 * @see #getProcessCpuTime()
 	 */
 	private native long getProcessCpuTimeImpl();

File: jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java
Patch:
@@ -1,6 +1,6 @@
 /*[INCLUDE-IF Sidecar17]*/
 /*******************************************************************************
- * Copyright (c) 2012, 2017 IBM Corp. and others
+ * Copyright (c) 2012, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -305,7 +305,7 @@ public final long getProcessCpuTimeByNS() {
 	 * executed so far in both kernel and user modes. Returns -1 if the
 	 * value is unavailable on this platform or in the case of an error.
 	 * 
-	 * @return process cpu ime in 100 ns units
+	 * @return process cpu ime in 1 ns units
 	 * @see #getProcessCpuTime()
 	 */
 	private native long getProcessCpuTimeImpl();

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -3484,8 +3484,9 @@ public boolean equals(Object that) {
 		if (!that.getClass().equals(this.getClass())) {
 			return false;
 		}
+		@SuppressWarnings("unchecked")
 		MethodInfo otherMethod = (MethodInfo) that;
-		if (!otherMethod.methodName.equals(otherMethod.methodName)) {
+		if (!methodName.equals(otherMethod.methodName)) {
 			return false;
 		}
 		if (null == returnType) {

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -3484,8 +3484,9 @@ public boolean equals(Object that) {
 		if (!that.getClass().equals(this.getClass())) {
 			return false;
 		}
+		@SuppressWarnings("unchecked")
 		MethodInfo otherMethod = (MethodInfo) that;
-		if (!otherMethod.methodName.equals(otherMethod.methodName)) {
+		if (!methodName.equals(otherMethod.methodName)) {
 			return false;
 		}
 		if (null == returnType) {

File: jcl/src/java.base/share/classes/com/ibm/jit/DecimalFormatHelper.java
Patch:
@@ -11,7 +11,7 @@
 import java.lang.String;
 import java.lang.RuntimeException;
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -454,7 +454,7 @@ private static void append(DecimalFormat df, StringBuilder result, String string
 						// Determine whether or not there are any printable fractional
 						// digits.  If we've used up the digits we know there aren't.
 						boolean fractionPresent = (minFraDigits > 0) ||
-								(!isInteger && digitIndex < digitList.count);
+								(!isInteger && digitIndex < digitList.count && !digitList.isZero());
 
 						// If there is no fraction present, and we haven't printed any
 						// integer digits, then print a zero.  Otherwise we won't print
@@ -916,7 +916,7 @@ private static void append(DecimalFormat df, StringBuilder result, String string
 						// Determine whether or not there are any printable fractional
 						// digits.  If we've used up the digits we know there aren't.
 						boolean fractionPresent = (minFraDigits > 0) ||
-								(!isInteger && digitIndex < digitList.count);
+								(!isInteger && digitIndex < digitList.count && !digitList.isZero());
 
 						// If there is no fraction present, and we haven't printed any
 						// integer digits, then print a zero.  Otherwise we won't print

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.jvm;
 
 /*******************************************************************************
- * Copyright (c) 2006, 2016 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -507,8 +507,8 @@ private static void checkToolSecurityPermssion() throws SecurityException {
     }
     
     private static void checkLegacySecurityPermssion() throws SecurityException {
-    	if ("true".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
-    		.internalGetProperties().getProperty(LEGACY_DUMP_PERMISSION_PROPERTY)))	{
+    	if (!("false".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
+    		.internalGetProperties().getProperty(LEGACY_DUMP_PERMISSION_PROPERTY)))) {
     		checkDumpSecurityPermssion();
     	}
     }

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Log.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.jvm;
 
 /*******************************************************************************
- * Copyright (c) 2006, 2016 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -69,8 +69,8 @@ public static int SetOptions(String options) {
 	 * @throws SecurityException
 	 */
     private static void checkLegacySecurityPermssion() throws SecurityException {
-    	if ("true".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
-    		.internalGetProperties().getProperty(LEGACY_LOG_PERMISSION_PROPERTY)))	{	
+    	if (!("false".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
+    		.internalGetProperties().getProperty(LEGACY_LOG_PERMISSION_PROPERTY)))) {
     		checkLogSecurityPermssion();
     	}
     }

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Trace.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -283,8 +283,8 @@ private synchronized static native int registerApplicationImpl(String name,
 	 * @throws SecurityException
 	 */
     private static void checkLegacySecurityPermssion() throws SecurityException {
-    	if ("true".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
-    		.internalGetProperties().getProperty(LEGACY_TRACE_PERMISSION_PROPERTY)))	{	
+    	if (!("false".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
+    		.internalGetProperties().getProperty(LEGACY_TRACE_PERMISSION_PROPERTY)))) {
     		checkTraceSecurityPermssion();
     	}
     }

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.jvm;
 
 /*******************************************************************************
- * Copyright (c) 2006, 2016 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -507,8 +507,8 @@ private static void checkToolSecurityPermssion() throws SecurityException {
     }
     
     private static void checkLegacySecurityPermssion() throws SecurityException {
-    	if ("true".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
-    		.internalGetProperties().getProperty(LEGACY_DUMP_PERMISSION_PROPERTY)))	{
+    	if (!("false".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
+    		.internalGetProperties().getProperty(LEGACY_DUMP_PERMISSION_PROPERTY)))) {
     		checkDumpSecurityPermssion();
     	}
     }

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Log.java
Patch:
@@ -2,7 +2,7 @@
 package com.ibm.jvm;
 
 /*******************************************************************************
- * Copyright (c) 2006, 2016 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -69,8 +69,8 @@ public static int SetOptions(String options) {
 	 * @throws SecurityException
 	 */
     private static void checkLegacySecurityPermssion() throws SecurityException {
-    	if ("true".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
-    		.internalGetProperties().getProperty(LEGACY_LOG_PERMISSION_PROPERTY)))	{	
+    	if (!("false".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
+    		.internalGetProperties().getProperty(LEGACY_LOG_PERMISSION_PROPERTY)))) {
     		checkLogSecurityPermssion();
     	}
     }

File: jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Trace.java
Patch:
@@ -1,7 +1,7 @@
 /*[INCLUDE-IF Sidecar16]*/
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -283,8 +283,8 @@ private synchronized static native int registerApplicationImpl(String name,
 	 * @throws SecurityException
 	 */
     private static void checkLegacySecurityPermssion() throws SecurityException {
-    	if ("true".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
-    		.internalGetProperties().getProperty(LEGACY_TRACE_PERMISSION_PROPERTY)))	{	
+    	if (!("false".equalsIgnoreCase(com.ibm.oti.vm.VM.getVMLangAccess()	//$NON-NLS-1$
+    		.internalGetProperties().getProperty(LEGACY_TRACE_PERMISSION_PROPERTY)))) {
     		checkTraceSecurityPermssion();
     	}
     }

File: debugtools/DDR_VM/src/com/ibm/j9ddr/StructureReader.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2016 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,6 @@
 import java.io.Reader;
 import java.io.StringWriter;
 import java.io.UnsupportedEncodingException;
-import java.nio.ByteOrder;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/aix/BaseAIXOSThread.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,7 +28,6 @@
 import java.util.logging.Logger;
 
 import com.ibm.j9ddr.CorruptDataException;
-import com.ibm.j9ddr.DataUnavailableException;
 import com.ibm.j9ddr.corereaders.memory.IProcess;
 import com.ibm.j9ddr.corereaders.memory.MemoryFault;
 import com.ibm.j9ddr.corereaders.osthread.IOSStackFrame;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/elf/unwind/FDE.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2014, 2014 IBM Corp. and others
+ * Copyright (c) 2014, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,6 @@
 
 import java.io.IOException;
 import java.io.PrintStream;
-import java.nio.ByteBuffer;
 
 import javax.imageio.stream.ImageInputStream;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/minidump/ThreadStream.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2004, 2014 IBM Corp. and others
+ * Copyright (c) 2004, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,7 +29,6 @@
 import java.util.Properties;
 
 import com.ibm.j9ddr.CorruptDataException;
-import com.ibm.j9ddr.DataUnavailableException;
 import com.ibm.j9ddr.corereaders.memory.DumpMemorySource;
 import com.ibm.j9ddr.corereaders.memory.IAddressSpace;
 import com.ibm.j9ddr.corereaders.memory.IMemoryRange;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/osthread/IOSStackFrame.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,8 +21,6 @@
  *******************************************************************************/
 package com.ibm.j9ddr.corereaders.osthread;
 
-import com.ibm.j9ddr.DataUnavailableException;
-
 /**
  * Frame on IOSThread native stack
  * 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/dumpreader/MutableAddressSpace.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 
 import com.ibm.j9ddr.corereaders.tdump.zebedee.util.*;
 
-import java.util.*;
 import java.util.logging.*;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Caa.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2015 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 import com.ibm.j9ddr.corereaders.tdump.zebedee.mvs.*;
 import com.ibm.j9ddr.corereaders.tdump.zebedee.util.*;
 
-import java.util.Properties;
 import java.util.Vector;
 import java.util.logging.*;
 import java.io.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Ceexdsaf.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,8 +23,6 @@
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader.*;
-import com.ibm.j9ddr.corereaders.tdump.zebedee.mvs.*;
-import com.ibm.j9ddr.corereaders.tdump.zebedee.util.*;
 
 import java.io.*;
 import java.util.logging.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Dll.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,10 +23,8 @@
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader.*;
-import com.ibm.j9ddr.corereaders.tdump.zebedee.util.*;
 
 import java.util.logging.*;
-import java.util.*;
 import java.io.IOException;
 
 /**

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/le/Edb.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,6 @@
 package com.ibm.j9ddr.corereaders.tdump.zebedee.le;
 
 import com.ibm.j9ddr.corereaders.tdump.zebedee.dumpreader.*;
-import com.ibm.j9ddr.corereaders.tdump.zebedee.util.*;
 
 import java.util.logging.*;
 import java.util.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/BitSetArray.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,8 +22,6 @@
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 
-import java.util.*;
-
 /**
  * This class provides a compact representation of an array of sparse bit sets. Each individual
  * set is implemented by one of a number of classes which provide optimum memory usage for the

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/Emulator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,9 +22,7 @@
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 
-import javax.imageio.stream.ImageOutputStream;
 import java.io.IOException;
-import java.util.*;
 
 /**
  * This interface represents a zSeries emulator.

File: debugtools/DDR_VM/src/com/ibm/j9ddr/corereaders/tdump/zebedee/util/Template.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2006, 2013 IBM Corp. and others
+ * Copyright (c) 2006, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,7 +22,6 @@
 
 package com.ibm.j9ddr.corereaders.tdump.zebedee.util;
 
-import javax.imageio.stream.ImageInputStream;
 import java.io.*;
 import java.util.*;
 import javax.xml.parsers.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/FindInMemoryCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,8 +25,6 @@
 import java.io.PrintStream;
 import java.io.UnsupportedEncodingException;
 import java.nio.ByteOrder;
-import java.util.Collection;
-import java.util.Collections;
 
 import com.ibm.j9ddr.corereaders.memory.IProcess;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/commands/LookupSymbolCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.DataUnavailableException;
-import com.ibm.j9ddr.corereaders.memory.SymbolUtil;
 import com.ibm.j9ddr.tools.ddrinteractive.Command;
 import com.ibm.j9ddr.tools.ddrinteractive.CommandUtils;
 import com.ibm.j9ddr.tools.ddrinteractive.Context;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/ddrinteractive/plugins/PluginConfig.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,7 +22,6 @@
 
 package com.ibm.j9ddr.tools.ddrinteractive.plugins;
 
-import java.io.File;
 import java.net.URL;
 
 import com.ibm.j9ddr.tools.ddrinteractive.DDRInteractiveCommandException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/tools/xml/DTFJHeapUnitTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -31,7 +31,6 @@
 
 import com.ibm.dtfj.image.CorruptDataException;
 import com.ibm.dtfj.image.ImageFactory;
-import com.ibm.dtfj.image.ImageSection;
 import com.ibm.dtfj.java.JavaClass;
 import com.ibm.dtfj.java.JavaHeap;
 import com.ibm.dtfj.java.JavaObject;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/view/dtfj/image/J9DDRImageSection.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import java.util.Properties;
 
 import com.ibm.dtfj.image.DataUnavailable;
-import com.ibm.dtfj.image.ImagePointer;
 import com.ibm.dtfj.image.ImageSection;
 import com.ibm.j9ddr.corereaders.memory.IProcess;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/BCNames.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,6 @@
 
 import java.lang.reflect.Field;
 import java.lang.reflect.Modifier;
-import java.security.InvalidParameterException;
 
 /**
  * Bytecode name->value mappings from oti/bcnames.h

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ConstantPoolHelpers.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,13 +22,11 @@
 package com.ibm.j9ddr.vm29.j9;
 
 import static com.ibm.j9ddr.vm29.structure.J9Consts.J9_STARTPC_STATUS;
-import static com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags.J9AccClassHotSwappedOut;
 
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9_CP_BITS_PER_DESCRIPTION;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9_CP_DESCRIPTIONS_PER_U32;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9_CP_DESCRIPTION_MASK;
 
-
 import java.util.Iterator;
 
 import com.ibm.j9ddr.CorruptDataException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffset.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldShapePointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9ROMFieldShapeHelper;
-import com.ibm.j9ddr.vm29.structure.J9FieldFlags;
 import com.ibm.j9ddr.vm29.structure.J9JavaAccessFlags;
 import com.ibm.j9ddr.vm29.types.UDATA;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/J9ObjectFieldOffsetIterator_V1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2017 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -53,7 +53,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldShapePointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9ClassHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9ROMClassHelper;
-import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.structure.J9Object;
 import com.ibm.j9ddr.vm29.types.IDATA;
 import com.ibm.j9ddr.vm29.types.U32;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/MonitorTable.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -36,7 +36,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectMonitorPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ThreadAbstractMonitorPointer;
-import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
 public class MonitorTable implements IHashTable<J9ObjectMonitorPointer>

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectAccessBarrier.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,8 +23,6 @@
 
 import static com.ibm.j9ddr.vm29.events.EventManager.raiseCorruptDataEvent;
 
-import java.util.Set;
-
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.j9.gc.MMObjectAccessBarrier;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectMonitorPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectFieldInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2015 IBM Corp. and others
+ * Copyright (c) 2015, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldShapePointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9UTF8Pointer;
 import com.ibm.j9ddr.vm29.structure.J9Object;
 import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.types.U64;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ObjectHash.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2013, 2014 IBM Corp. and others
+ * Copyright (c) 2013, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,7 +22,6 @@
 package com.ibm.j9ddr.vm29.j9;
 
 import com.ibm.j9ddr.CorruptDataException;
-import com.ibm.j9ddr.vm29.structure.J9Consts;
 import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9IdentityHashDataPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9JavaVMPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -50,7 +50,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9SourceDebugExtensionPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9UTF8Pointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9VariableInfoPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9VariableInfoValuesPointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9MethodDebugInfoHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.structure.J9LineNumber;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/ROMHelp.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -28,7 +28,6 @@
 import com.ibm.j9ddr.vm29.pointer.SelfRelativePointer;
 import com.ibm.j9ddr.vm29.pointer.U32Pointer;
 import com.ibm.j9ddr.vm29.pointer.U8Pointer;
-import com.ibm.j9ddr.vm29.pointer.VoidPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ConstantPoolPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ExceptionHandlerPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/RootScanner.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -65,11 +65,9 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.MM_GCExtensionsPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.MM_MemorySpacePointer;
 import com.ibm.j9ddr.vm29.pointer.generated.MM_SublistPuddlePointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9ObjectHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9RASHelper;
-import com.ibm.j9ddr.vm29.structure.J9Consts;
 import com.ibm.j9ddr.vm29.structure.J9MemorySegment;
 import com.ibm.j9ddr.vm29.structure.J9VMThread;
 import com.ibm.j9ddr.vm29.types.UDATA;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/SystemMonitor.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2015 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import java.util.List;
 import com.ibm.j9ddr.CorruptDataException;
 
-import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ThreadMonitorPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ThreadPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.OmrBuildFlags;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCFreeListIteratorAggregatedCellList.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2015 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 import java.util.NoSuchElementException;
 
 import com.ibm.j9ddr.CorruptDataException;
-import com.ibm.j9ddr.vm29.pointer.VoidPointer;
 
 public class GCFreeListIteratorAggregatedCellList extends GCFreeListHeapIterator {
 	protected GCHeapLinkedFreeHeader _currentFreeEntry = null;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCMemoryPoolAggregatedCellList.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import static com.ibm.j9ddr.vm29.events.EventManager.raiseCorruptDataEvent;
 
 import com.ibm.j9ddr.CorruptDataException;
-import com.ibm.j9ddr.vm29.pointer.generated.MM_HeapLinkedFreeHeaderPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.MM_MemoryPoolAggregatedCellListPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.MM_MemoryPoolPointer;
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,13 +22,11 @@
 package com.ibm.j9ddr.vm29.j9.gc;
 
 import com.ibm.j9ddr.CorruptDataException;
-import com.ibm.j9ddr.vm29.pointer.U8Pointer;
 import com.ibm.j9ddr.vm29.pointer.VoidPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.MM_HeapRegionDescriptorPointer;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
-
 public abstract class GCObjectHeapIterator extends GCIterator
 {
 	protected boolean includeLiveObjects;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectModel.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2017 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.j9.AlgorithmVersion;
 import com.ibm.j9ddr.vm29.pointer.VoidPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9IndexableObjectPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCVMClassSlotIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -29,8 +29,6 @@
 import com.ibm.j9ddr.vm29.pointer.PointerPointer;
 import com.ibm.j9ddr.vm29.pointer.VoidPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
-import com.ibm.j9ddr.vm29.structure.J9Consts;
-
 
 public class GCVMClassSlotIterator extends GCIterator
 {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/MMObjectAccessBarrier.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,8 +21,6 @@
  *******************************************************************************/
 package com.ibm.j9ddr.vm29.j9.gc;
 
-import java.util.Set;
-
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.j9.AlgorithmVersion;
 import com.ibm.j9ddr.vm29.j9.ObjectMonitor;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/MMObjectAccessBarrier_V1.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,8 +23,6 @@
 
 import static com.ibm.j9ddr.vm29.events.EventManager.raiseCorruptDataEvent;
 
-import java.util.Set;
-
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.j9.DataType;
 import com.ibm.j9ddr.vm29.j9.ObjectModel;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackmap/StackMap.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -73,7 +73,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldRefPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodRefPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodTypeRefPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9UTF8Pointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.types.I16;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/JITStackWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2017 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -62,7 +62,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9UTF8Pointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.TRBuildFlags;
-import com.ibm.j9ddr.vm29.pointer.helper.J9MethodHelper;
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.structure.J9JITFrame;
 import com.ibm.j9ddr.vm29.structure.J9SFJ2IFrame;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/StackWalkerUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2016 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9Consts.J9_STACKWALK_ITERATE_METHOD_CLASS_SLOTS;
 import static com.ibm.j9ddr.vm29.structure.J9Consts.J9_STACKWALK_ITERATE_O_SLOTS;
 import static com.ibm.j9ddr.vm29.structure.J9Consts.J9_STACKWALK_MAINTAIN_REGISTER_MAP;
-import static com.ibm.j9ddr.vm29.structure.J9StackWalkConstants.J9SW_JIT_STACK_SLOTS_USED_BY_CALL;
 import static com.ibm.j9ddr.vm29.structure.J9StackWalkState.J9_STACKWALK_SLOT_TYPE_INTERNAL;
 import static java.util.logging.Level.FINE;
 import static java.util.logging.Level.FINER;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/WalkState.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -32,7 +32,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9MethodPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9VMEntryLocalStoragePointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;
-import com.ibm.j9ddr.vm29.types.U8;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
 import static com.ibm.j9ddr.vm29.structure.J9StackWalkConstants.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/walkers/ClassIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,7 +33,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassLoaderPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9HashTablePointer;
-import com.ibm.j9ddr.vm29.structure.J9PackageIDTableEntry;
 import com.ibm.j9ddr.vm29.structure.VmInternalConstants;
 
 //iterator for 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/walkers/HeapWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -45,7 +45,6 @@
 import com.ibm.j9ddr.vm29.j9.gc.GCHeapRegionDescriptor;
 import com.ibm.j9ddr.vm29.j9.gc.GCHeapRegionIterator;
 import com.ibm.j9ddr.vm29.j9.gc.GCObjectHeapIterator;
-import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9JavaVMPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.MM_GCExtensionsPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/walkers/LineNumberIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -37,7 +37,6 @@
 import com.ibm.j9ddr.vm29.types.U8;
 import com.ibm.j9ddr.vm29.events.EventManager;
 import com.ibm.j9ddr.vm29.j9.AlgorithmVersion;
-import com.ibm.j9ddr.vm29.j9.OptInfo;
 
 public abstract class LineNumberIterator implements Iterator<LineNumber> {
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/walkers/LocalVariableTableIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -35,7 +35,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9MethodDebugInfoPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9UTF8Pointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9VariableInfoPointer;
-import com.ibm.j9ddr.vm29.structure.J9Consts;
 import com.ibm.j9ddr.vm29.structure.J9UTF8;
 import com.ibm.j9ddr.vm29.types.I32;
 import com.ibm.j9ddr.vm29.types.U16;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/walkers/MonitorIterator.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -33,9 +33,7 @@
 import com.ibm.j9ddr.vm29.j9.ObjectAccessBarrier;
 import com.ibm.j9ddr.vm29.j9.ObjectMonitor;
 import com.ibm.j9ddr.vm29.pointer.generated.J9AbstractThreadPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9JavaVMPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectMonitorPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ObjectPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ThreadAbstractMonitorPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ThreadLibraryPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ROMClassHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,8 +26,6 @@
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMConstantPoolItemPointer;
-import static com.ibm.j9ddr.vm29.structure.J9Object.*;
-
 
 public class J9ROMClassHelper {
 	public static J9ROMConstantPoolItemPointer constantPool(J9ROMClassPointer romclass) {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ROMFieldShapeHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,7 +25,6 @@
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.pointer.U32Pointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldShapePointer;
 import com.ibm.j9ddr.vm29.structure.J9CfrClassFile;
 import com.ibm.j9ddr.vm29.structure.J9ROMFieldShape;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ROMMethodHelper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2017 IBM Corp. and others
+ * Copyright (c) 2010, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.vm29.j9.AlgorithmVersion;
 import com.ibm.j9ddr.vm29.j9.ROMHelp;
-import com.ibm.j9ddr.vm29.pointer.U32Pointer;
 import com.ibm.j9ddr.vm29.pointer.U8Pointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodPointer;
 import com.ibm.j9ddr.vm29.structure.J9CfrClassFile;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/ClassWalker.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2015 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,6 @@
  *******************************************************************************/
 package com.ibm.j9ddr.vm29.tools.ddrinteractive;
 
-import java.lang.reflect.Method;
 import java.util.HashMap;
 
 import com.ibm.j9ddr.CorruptDataException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/WhatIsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2014 IBM Corp. and others
+ * Copyright (c) 2010, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -24,7 +24,6 @@
 import java.io.PrintStream;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
-import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ByteCodeDumper.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -106,14 +106,12 @@
 import com.ibm.j9ddr.vm29.j9.stackmap.LocalMap;
 import com.ibm.j9ddr.vm29.j9.stackmap.StackMap;
 import com.ibm.j9ddr.vm29.pointer.U8Pointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9BuildFlags;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassRefPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMConstantPoolItemPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMFieldRefPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodRefPointer;
-import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodTypeRefPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMNameAndSignaturePointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMSingleSlotConstantRefPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMStringRefPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/BytecodesCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -39,7 +39,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMClassPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ROMMethodPointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9MethodHelper;
-import com.ibm.j9ddr.vm29.types.U32;
 
 public class BytecodesCommand extends Command 
 {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ClassForNameCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,8 +22,6 @@
 package com.ibm.j9ddr.vm29.tools.ddrinteractive.commands;
 
 import java.io.PrintStream;
-import java.util.Collection;
-import java.util.Collections;
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.tools.ddrinteractive.Context;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/DumpAllRegionsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2015 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,8 +22,6 @@
 package com.ibm.j9ddr.vm29.tools.ddrinteractive.commands;
 
 import java.io.PrintStream;
-import java.util.Collection;
-import java.util.Collections;
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.tools.ddrinteractive.Context;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ExtendedMethodFlagInfoCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -22,8 +22,6 @@
 package com.ibm.j9ddr.vm29.tools.ddrinteractive.commands;
 
 import java.io.PrintStream;
-import java.util.Collection;
-import java.util.Collections;
 
 import com.ibm.j9ddr.tools.ddrinteractive.Context;
 import com.ibm.j9ddr.tools.ddrinteractive.DDRInteractiveCommandException;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -33,7 +33,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_LONG;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_METHODHANDLE;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_METHOD_TYPE;
-import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_SHARED_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_STATIC_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_STRING;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_UNUSED8;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9MemTagCommands.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2010, 2015 IBM Corp. and others
+ * Copyright (c) 2010, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,6 @@
 
 import java.io.PrintStream;
 import java.util.ArrayList;
-import java.util.Collection;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.LinkedList;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9StaticsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -50,7 +50,6 @@
 import com.ibm.j9ddr.vm29.pointer.helper.J9UTF8Helper;
 import com.ibm.j9ddr.vm29.structure.J9ROMFieldOffsetWalkState;
 import com.ibm.j9ddr.vm29.types.U32;
-import com.ibm.j9ddr.vm29.types.UDATA;
 
 public class J9StaticsCommand extends Command 
 {

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/MonitorsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -26,7 +26,6 @@
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
-import java.util.Set;
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.tools.ddrinteractive.Command;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ObjectSizeInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2015, 2015 IBM Corp. and others
+ * Copyright (c) 2015, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -49,7 +49,6 @@
 import com.ibm.j9ddr.vm29.types.U16;
 import com.ibm.j9ddr.vm29.types.U64;
 import com.ibm.j9ddr.vm29.types.U8;
-import com.ibm.j9ddr.vm29.types.UDATA;
 import com.ibm.j9ddr.vm29.j9.J9ObjectFieldOffsetIterator;
 import com.ibm.j9ddr.vm29.j9.J9ObjectFieldOffset;
 import com.ibm.j9ddr.vm29.j9.ObjectFieldInfo;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ShowDumpAgentsCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -64,7 +64,6 @@
 import com.ibm.j9ddr.vm29.pointer.generated.J9RASdumpFunctionsPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9RASdumpQueuePointer;
 import com.ibm.j9ddr.vm29.pointer.helper.J9RASHelper;
-import com.ibm.j9ddr.vm29.types.U32;
 import com.ibm.j9ddr.vm29.types.UDATA;
 
 public class ShowDumpAgentsCommand extends Command

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/ShrCCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2015 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -41,7 +41,6 @@
 import com.ibm.j9ddr.tools.ddrinteractive.CommandUtils;
 import com.ibm.j9ddr.tools.ddrinteractive.Context;
 import com.ibm.j9ddr.tools.ddrinteractive.DDRInteractiveCommandException;
-import com.ibm.j9ddr.vm29.j9.AlgorithmVersion;
 import com.ibm.j9ddr.vm29.j9.DataType;
 import com.ibm.j9ddr.vm29.pointer.*;
 import com.ibm.j9ddr.vm29.pointer.generated.*;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/VMConstantPoolCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -30,7 +30,6 @@
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_INT;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_INTERFACE_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_LONG;
-import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_SHARED_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_STATIC_METHOD;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_STRING;
 import static com.ibm.j9ddr.vm29.structure.J9ConstantPool.J9CPTYPE_UNUSED;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/WalkInternTableCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -25,8 +25,6 @@
 import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintStream;
-import java.util.Collection;
-import java.util.Collections;
 
 import com.ibm.j9ddr.CorruptDataException;
 import com.ibm.j9ddr.tools.ddrinteractive.Context;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaClass.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -51,7 +51,6 @@
 import com.ibm.j9ddr.view.dtfj.java.helper.DTFJJavaClassHelper;
 import com.ibm.j9ddr.vm29.j9.J9ObjectFieldOffset;
 import com.ibm.j9ddr.vm29.j9.J9ObjectFieldOffsetIterator;
-import com.ibm.j9ddr.vm29.j9.ObjectModel;
 import com.ibm.j9ddr.vm29.pointer.SelfRelativePointer;
 import com.ibm.j9ddr.vm29.pointer.VoidPointer;
 import com.ibm.j9ddr.vm29.pointer.generated.J9ArrayClassPointer;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/view/dtfj/java/DTFJJavaThread.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2015 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -44,7 +44,6 @@
 import com.ibm.dtfj.java.JavaThread;
 import com.ibm.j9ddr.events.IEventListener;
 import com.ibm.j9ddr.view.dtfj.J9DDRDTFJUtils;
-import com.ibm.j9ddr.view.dtfj.image.J9DDRBaseImageThread;
 import com.ibm.j9ddr.view.dtfj.image.J9DDRCorruptData;
 import com.ibm.j9ddr.view.dtfj.image.J9DDRImageProcess;
 import com.ibm.j9ddr.view.dtfj.image.J9DDRImageSection;

File: debugtools/DDR_VM/testsrc/com/ibm/j9ddr/corereaders/memory/DumpSegments.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2009, 2014 IBM Corp. and others
+ * Copyright (c) 2009, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,7 +21,6 @@
  *******************************************************************************/
 package com.ibm.j9ddr.corereaders.memory;
 
-import java.io.File;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;

File: debugtools/DDR_VM/testsrc/com/ibm/j9ddr/junit/framework/BootstrapJUnitTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -23,7 +23,6 @@
 
 import static org.junit.Assert.fail;
 
-import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;

File: debugtools/DDR_VM/testsrc/com/ibm/j9ddr/view/dtfj/test/JavaHeapTest.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 1991, 2014 IBM Corp. and others
+ * Copyright (c) 1991, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -21,8 +21,6 @@
  *******************************************************************************/
 package com.ibm.j9ddr.view.dtfj.test;
 
-import static org.junit.Assert.fail;
-
 import java.util.List;
 
 import org.junit.Before;

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1189,7 +1189,8 @@ static U8Pointer dumpStackMapSlots(PrintStream out, J9ROMClassPointer classfile,
 				"J",
 				"S",
 				"B",
-				"C" };
+				"C",
+				"Z" };
 
 		out.print("(");
 

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2017 IBM Corp. and others
+ * Copyright (c) 2001, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -1189,7 +1189,8 @@ static U8Pointer dumpStackMapSlots(PrintStream out, J9ROMClassPointer classfile,
 				"J",
 				"S",
 				"B",
-				"C" };
+				"C",
+				"Z" };
 
 		out.print("(");
 

File: jcl/src/java.base/share/classes/com/ibm/jit/DecimalFormatHelper.java
Patch:
@@ -11,7 +11,7 @@
 import java.lang.String;
 import java.lang.RuntimeException;
 /*******************************************************************************
- * Copyright (c) 2011, 2011 IBM Corp. and others
+ * Copyright (c) 2011, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -454,7 +454,7 @@ private static void append(DecimalFormat df, StringBuilder result, String string
 						// Determine whether or not there are any printable fractional
 						// digits.  If we've used up the digits we know there aren't.
 						boolean fractionPresent = (minFraDigits > 0) ||
-								(!isInteger && digitIndex < digitList.count);
+								(!isInteger && digitIndex < digitList.count && !digitList.isZero());
 
 						// If there is no fraction present, and we haven't printed any
 						// integer digits, then print a zero.  Otherwise we won't print
@@ -916,7 +916,7 @@ private static void append(DecimalFormat df, StringBuilder result, String string
 						// Determine whether or not there are any printable fractional
 						// digits.  If we've used up the digits we know there aren't.
 						boolean fractionPresent = (minFraDigits > 0) ||
-								(!isInteger && digitIndex < digitList.count);
+								(!isInteger && digitIndex < digitList.count && !digitList.isZero());
 
 						// If there is no fraction present, and we haven't printed any
 						// integer digits, then print a zero.  Otherwise we won't print

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -3,7 +3,7 @@
 package java.lang;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -4309,10 +4309,10 @@ public String replaceAll(String regex, String substitute) {
 					/*[ELSE]*/
 					char[] newChars = new char[(length + 1) >> 1];
 					/*[ENDIF]*/
-					byte toReplace = helpers.getByteFromArrayByIndex(regex, 0);
+					byte toReplace = helpers.getByteFromArrayByIndex(regex.value, 0);
 					byte replacement = (byte)-1;  // assign dummy value that will never be used
 					if (substituteLength == 1) {
-						replacement = helpers.getByteFromArrayByIndex(substitute, 0);
+						replacement = helpers.getByteFromArrayByIndex(substitute.value, 0);
 					}
 					int newCharIndex = 0;
 					for (int i = 0; i < length; ++i) {

File: jcl/src/java.base/share/classes/java/lang/StringBuffer.java
Patch:
@@ -3,7 +3,7 @@
 package java.lang;
 
 /*******************************************************************************
- * Copyright (c) 1998, 2017 IBM Corp. and others
+ * Copyright (c) 1998, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/StringBuilder.java
Patch:
@@ -3,7 +3,7 @@
 package java.lang;
 
 /*******************************************************************************
- * Copyright (c) 2005, 2017 IBM Corp. and others
+ * Copyright (c) 2005, 2018 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this

File: jcl/src/java.base/share/classes/java/lang/String.java
Patch:
@@ -4817,7 +4817,7 @@ public int offsetByCodePoints(int start, int codePointCount) {
 			if (enableCompression &&  (null == compressionFlag || count >= 0)) {
 				int index = start + codePointCount;
 
-				if (index >= len) {
+				if (index > len) {
 					throw new IndexOutOfBoundsException();
 				} else {
 					return index;

File: jcl/src/java.base/share/classes/java/lang/invoke/MemberName.java
Patch:
@@ -67,5 +67,8 @@ public MethodType getMethodType() {
 	String getMethodDescriptor() {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
+	public Class<?> getDeclaringClass() {
+		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
+	}
 	/*[ENDIF]*/
 }

File: jcl/src/java.base/share/classes/java/lang/invoke/MemberName.java
Patch:
@@ -67,5 +67,8 @@ public MethodType getMethodType() {
 	String getMethodDescriptor() {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
+	public Class<?> getDeclaringClass() {
+		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
+	}
 	/*[ENDIF]*/
 }

File: test/Java9andUp/src/org/openj9/test/attachAPI/TestJava9AttachAPI.java
Patch:
@@ -41,7 +41,6 @@
 @Test(groups = { "level.extended" })
 public class TestJava9AttachAPI  {
 	protected static Logger logger = Logger.getLogger(TestJava9AttachAPI.class);
-	private static boolean verbose = Boolean.getBoolean("org.openj9.test.java9AttachAPI.verbose");
 	/* attach API is disabled by default on z/OS. This enables it in child processes. */
 	static final String ATTACH_ENABLE_PROPERTY = "-Dcom.ibm.tools.attach.enable=yes";
 	static final String ATTACH_SELF_ENABLE_PROPERTY = "-Djdk.attach.allowAttachSelf";
@@ -51,7 +50,6 @@ public class TestJava9AttachAPI  {
 	protected void setUp(Method testMethod) throws Exception {
 		testName = testMethod.getName(); 
 		logger.debug("\n------------------------------------------------------\nstarting " + testName);
-		TargetManager.verbose = verbose;
 	}
 
 	@Test

File: test/Java8andUp/src/org/openj9/test/attachAPI/AttachAPIStress.java
Patch:
@@ -72,7 +72,6 @@ public void testSequentialLaunches() {
 			return;
 		}
 		logger.debug("starting " + testName);
-		TargetManager.setVerbose(false);
 		for (int i = 0; i < SEQ_ITERATIONS; ++i) {
 			launchAndTestTargets(1);
 			logger.debug("waiting");
@@ -87,7 +86,6 @@ public void testMultipleAttaches() {
 			return;
 		}
 		logger.debug("starting " + testName);
-		TargetManager.setVerbose(false);
 		for (int i = 0; i < MULT_ITERATIONS; ++i) {
 			launchAndTestTargets(i, MULT_ATTACHES);
 			logger.debug("waiting");
@@ -103,7 +101,6 @@ public void testParallelLaunches() {
 		}
 
 		logger.debug("starting " + testName);
-		TargetManager.setVerbose(false);
 		setVmOptions("-Xmx16M");
 		setVmOptions("-Xms16M");
 		int instances = PAR_INSTANCES;

File: test/VM_Test/src/j9vm/test/mxbeans/MXBeansGetterSanityTestRunner.java
Patch:
@@ -33,7 +33,7 @@ public MXBeansGetterSanityTestRunner(String className, String exeName, String bo
 	public String getCustomCommandLineOptions() {
 		String customOptions = super.getCustomCommandLineOptions();
 		if (Integer.parseInt(javaVersion) >= 90) {
-			customOptions += " --add-exports=java.management/com.ibm.java.lang.management.internal=ALL-UNNAMED --add-exports=com.ibm.management/com.ibm.lang.management.internal=ALL-UNNAMED ";
+			customOptions += " --add-exports=java.management/com.ibm.java.lang.management.internal=ALL-UNNAMED --add-exports=jdk.management/com.ibm.lang.management.internal=ALL-UNNAMED ";
 		}
 		return customOptions;
 	}

File: jcl/src/openj9.dtfjview/share/classes/module-info.java
Patch:
@@ -20,7 +20,7 @@
  *
  * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
  *******************************************************************************/
-module com.ibm.dtfjview {
+module openj9.dtfjview {
 	requires openj9.dtfj;
 	requires java.logging;
 

File: test/Java9andUp/src/org/openj9/test/attachAPI/TestJava9AttachAPI.java
Patch:
@@ -42,7 +42,8 @@
 public class TestJava9AttachAPI  {
 	protected static Logger logger = Logger.getLogger(TestJava9AttachAPI.class);
 	private static boolean verbose = Boolean.getBoolean("org.openj9.test.java9AttachAPI.verbose");
-	static final String ATTACH_ENABLE_PROPERTY = "-Dcom.ibm.tools.attach.enable=";
+	/* attach API is disabled by default on z/OS. This enables it in child processes. */
+	static final String ATTACH_ENABLE_PROPERTY = "-Dcom.ibm.tools.attach.enable=yes";
 	static final String ATTACH_SELF_ENABLE_PROPERTY = "-Djdk.attach.allowAttachSelf";
 
 	private String testName;

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -2032,7 +2032,7 @@ public boolean isInterface() {
  */
 @CallerSensitive
 /*[IF Sidecar19-SE]*/
-@Deprecated(forRemoval=false, since="1.1")
+@Deprecated(forRemoval=false, since="9")
 /*[ENDIF]*/
 public T newInstance() throws IllegalAccessException, InstantiationException {
 	SecurityManager security = System.getSecurityManager();

File: jcl/src/java.base/share/classes/java/lang/ClassLoader.java
Patch:
@@ -939,7 +939,7 @@ public InputStream getResourceAsStream (String resName) {
  *
  * @throws IOException
  */
-protected InputStream getResourceAsStream(String moduleName, String name) throws IOException
+InputStream getResourceAsStream(String moduleName, String name) throws IOException
 {
 	return null;
 }

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -690,7 +690,7 @@ public static void runFinalization() {
  * @deprecated 	This method is unsafe.
  */
 /*[IF Sidecar19-SE]*/
-@Deprecated(forRemoval=false, since="1.2")
+@Deprecated(forRemoval=true, since="1.2")
 /*[ELSE]
 @Deprecated
 /*[ENDIF]*/

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2938,7 +2938,7 @@ public static MethodHandle dropArguments(MethodHandle originalHandle, int locati
 	 * @param location the (zero-indexed) location of the first argument to be removed
 	 * @return a MethodHandle representing a transformed handle as described above
 	 */
-	public static final  MethodHandle dropArgumentsToMatch(MethodHandle originalHandle, int skippedArgumentCount, List<Class<?>> valueTypes, int location) {
+	public static MethodHandle dropArgumentsToMatch(MethodHandle originalHandle, int skippedArgumentCount, List<Class<?>> valueTypes, int location) {
 		/* implicit null checks */
 		MethodType originalType = originalHandle.type;
 		Class<?>[] valueTypesCopy = valueTypes.toArray(new Class<?>[valueTypes.size()]);

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -301,7 +301,7 @@ public final Class<?> varType() {
 	 * 
 	 * @return The parameters required to access the field.
 	 */
-	public List<Class<?>> coordinateTypes() {
+	public final List<Class<?>> coordinateTypes() {
 		return Collections.unmodifiableList(Arrays.<Class<?>>asList(coordinateTypes));
 	}
 	
@@ -332,7 +332,7 @@ public final MethodType accessModeType(AccessMode accessMode) {
 	 * @param accessMode The {@link AccessMode} to check support for.
 	 * @return A boolean value indicating whether the {@link AccessMode} is supported.
 	 */
-	public boolean isAccessModeSupported(AccessMode accessMode) {
+	public final boolean isAccessModeSupported(AccessMode accessMode) {
 		switch (accessMode) {
 		case GET:
 		case GET_VOLATILE:

File: jcl/src/java.base/share/classes/java/lang/Class.java
Patch:
@@ -2032,7 +2032,7 @@ public boolean isInterface() {
  */
 @CallerSensitive
 /*[IF Sidecar19-SE]*/
-@Deprecated(forRemoval=false, since="1.1")
+@Deprecated(forRemoval=false, since="9")
 /*[ENDIF]*/
 public T newInstance() throws IllegalAccessException, InstantiationException {
 	SecurityManager security = System.getSecurityManager();

File: jcl/src/java.base/share/classes/java/lang/ClassLoader.java
Patch:
@@ -939,7 +939,7 @@ public InputStream getResourceAsStream (String resName) {
  *
  * @throws IOException
  */
-protected InputStream getResourceAsStream(String moduleName, String name) throws IOException
+InputStream getResourceAsStream(String moduleName, String name) throws IOException
 {
 	return null;
 }

File: jcl/src/java.base/share/classes/java/lang/System.java
Patch:
@@ -690,7 +690,7 @@ public static void runFinalization() {
  * @deprecated 	This method is unsafe.
  */
 /*[IF Sidecar19-SE]*/
-@Deprecated(forRemoval=false, since="1.2")
+@Deprecated(forRemoval=true, since="1.2")
 /*[ELSE]
 @Deprecated
 /*[ENDIF]*/

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2938,7 +2938,7 @@ public static MethodHandle dropArguments(MethodHandle originalHandle, int locati
 	 * @param location the (zero-indexed) location of the first argument to be removed
 	 * @return a MethodHandle representing a transformed handle as described above
 	 */
-	public static final  MethodHandle dropArgumentsToMatch(MethodHandle originalHandle, int skippedArgumentCount, List<Class<?>> valueTypes, int location) {
+	public static MethodHandle dropArgumentsToMatch(MethodHandle originalHandle, int skippedArgumentCount, List<Class<?>> valueTypes, int location) {
 		/* implicit null checks */
 		MethodType originalType = originalHandle.type;
 		Class<?>[] valueTypesCopy = valueTypes.toArray(new Class<?>[valueTypes.size()]);

File: jcl/src/java.base/share/classes/java/lang/invoke/VarHandle.java
Patch:
@@ -301,7 +301,7 @@ public final Class<?> varType() {
 	 * 
 	 * @return The parameters required to access the field.
 	 */
-	public List<Class<?>> coordinateTypes() {
+	public final List<Class<?>> coordinateTypes() {
 		return Collections.unmodifiableList(Arrays.<Class<?>>asList(coordinateTypes));
 	}
 	
@@ -332,7 +332,7 @@ public final MethodType accessModeType(AccessMode accessMode) {
 	 * @param accessMode The {@link AccessMode} to check support for.
 	 * @return A boolean value indicating whether the {@link AccessMode} is supported.
 	 */
-	public boolean isAccessModeSupported(AccessMode accessMode) {
+	public final boolean isAccessModeSupported(AccessMode accessMode) {
 		switch (accessMode) {
 		case GET:
 		case GET_VOLATILE:

File: debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/VMConstantPoolCommand.java
Patch:
@@ -1,5 +1,5 @@
 /*******************************************************************************
- * Copyright (c) 2001, 2014 IBM Corp. and others
+ * Copyright (c) 2001, 2017 IBM Corp. and others
  *
  * This program and the accompanying materials are made available under
  * the terms of the Eclipse Public License 2.0 which accompanies this
@@ -149,7 +149,6 @@ public void run(String command, String[] args, Context context, PrintStream out)
 							|| (shapeDesc == J9CPTYPE_STATIC_METHOD) 
 							|| (shapeDesc == J9CPTYPE_INTERFACE_METHOD)
 							|| (shapeDesc == J9CPTYPE_HANDLE_METHOD)
-							|| ((!J9BuildFlags.interp_useSplitSideTables) && (shapeDesc == J9CPTYPE_SHARED_METHOD))
 							|| (shapeDesc == J9CPTYPE_FIELD)) {
 					long classRefCPIndex;
 					

File: test/cmdline_options_testresources/src/com/ibm/j9/getcallerclass/TestGroup.java
Patch:
@@ -1,5 +1,3 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
-
 /*******************************************************************************
  * Copyright (c) 2014, 2017 IBM Corp. and others
  *

File: test/cmdline_options_testresources/src_80/com/ibm/j9/getcallerclass/GetCallerClassTests.java
Patch:
@@ -1,5 +1,3 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
-
 /*******************************************************************************
  * Copyright (c) 2014, 2017 IBM Corp. and others
  *

File: test/cmdline_options_testresources/src_80/com/ibm/j9/getcallerclass/RefectionMHTests.java
Patch:
@@ -1,5 +1,3 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
-
 /*******************************************************************************
  * Copyright (c) 2014, 2017 IBM Corp. and others
  *

File: test/cmdline_options_testresources/src_90/com/ibm/j9/getcallerclass/GetCallerClassTests.java
Patch:
@@ -1,5 +1,3 @@
-/*[INCLUDE-IF Sidecar18-SE]*/
-
 /*******************************************************************************
  * Copyright (c) 2014, 2017 IBM Corp. and others
  *

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -1270,15 +1270,15 @@ String mapKindToBytecode() {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	
-	protected MethodHandle getTarget() {
+	MethodHandle getTarget() {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	
 	MethodHandle setVarargs(MemberName member) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	
-	public MethodHandle asTypeUncached(MethodType newType) {
+	MethodHandle asTypeUncached(MethodType newType) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandle.java
Patch:
@@ -1270,15 +1270,15 @@ String mapKindToBytecode() {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	
-	protected MethodHandle getTarget() {
+	MethodHandle getTarget() {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	
 	MethodHandle setVarargs(MemberName member) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	
-	public MethodHandle asTypeUncached(MethodType newType) {
+	MethodHandle asTypeUncached(MethodType newType) {
 		throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();
 	}
 	

File: jcl/src/java.base/share/classes/java/lang/invoke/ViewVarHandle.java
Patch:
@@ -23,8 +23,8 @@
 package java.lang.invoke;
 
 abstract class ViewVarHandle extends VarHandle {
-	ViewVarHandle(Class<?> fieldType, Class<?>[] coordinateTypes, MethodHandle[] handleTable, MethodType[] typeTable, int modifiers) {
-		super(fieldType, coordinateTypes, handleTable, typeTable, modifiers);
+	ViewVarHandle(Class<?> fieldType, Class<?>[] coordinateTypes, MethodHandle[] handleTable, int modifiers) {
+		super(fieldType, coordinateTypes, handleTable, modifiers);
 	}
 	
 	@Override

File: jcl/src/java.base/share/classes/java/lang/invoke/ViewVarHandle.java
Patch:
@@ -23,8 +23,8 @@
 package java.lang.invoke;
 
 abstract class ViewVarHandle extends VarHandle {
-	ViewVarHandle(Class<?> fieldType, Class<?>[] coordinateTypes, MethodHandle[] handleTable, MethodType[] typeTable, int modifiers) {
-		super(fieldType, coordinateTypes, handleTable, typeTable, modifiers);
+	ViewVarHandle(Class<?> fieldType, Class<?>[] coordinateTypes, MethodHandle[] handleTable, int modifiers) {
+		super(fieldType, coordinateTypes, handleTable, modifiers);
 	}
 	
 	@Override

File: test/cmdLineTests/libpathTest/src/org/openj9/test/libpath/Rtf.java
Patch:
@@ -64,8 +64,7 @@ public static void main(String[] args) throws Exception {
 					+ System.getProperty("com.ibm.oti.vm.bootstrap.library.path"));
 		}
 
-		ProcessBuilder pb = new ProcessBuilder(args[0], "-Xnocompressedrefs",
-				"-Dcom.sun.management.jmxremote", "-cp", args[1], "org.openj9.test.libpath.RtfChild");
+		ProcessBuilder pb = new ProcessBuilder(args[0], "-Dcom.sun.management.jmxremote", "-cp", args[1], "org.openj9.test.libpath.RtfChild");
 
 		System.out.println("launching child");
 		Process p = pb.start();

File: jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java
Patch:
@@ -2936,7 +2936,7 @@ public static final  MethodHandle dropArgumentsToMatch(MethodHandle originalHand
 		MethodType originalType = originalHandle.type;
 		Class<?>[] valueTypesCopy = new Class<?>[valueTypes.size()];
 
-		/* check if indexing is in range*/
+		/* check if indexing is in range */
 		if ((0 > skippedArgumentCount) ||
 			(skippedArgumentCount > originalType.parameterCount())) {
 			throw new IllegalArgumentException("Invalid parameters: skippedArgumentCount"); //$NON-NLS-1$

File: test/Utils/src/org/openj9/test/util/IncludeExcludeTestAnnotationTransformer.java
Patch:
@@ -78,9 +78,9 @@ public class IncludeExcludeTestAnnotationTransformer implements IAnnotationTrans
 			}
 			bufferedReader.close();
 		} catch(FileNotFoundException ex) {
-			logger.info("Unable to open file " + excludeFile);
+			logger.info("Unable to open file " + excludeFile, ex);
 		} catch(IOException ex) {
-			logger.info("Error reading file " + excludeFile);
+			logger.info("Error reading file " + excludeFile, ex);
 		}
 	}
 

File: test/Utils/src/org/openj9/test/util/IncludeExcludeTestAnnotationTransformer.java
Patch:
@@ -78,9 +78,9 @@ public class IncludeExcludeTestAnnotationTransformer implements IAnnotationTrans
 			}
 			bufferedReader.close();
 		} catch(FileNotFoundException ex) {
-			logger.info("Unable to open file " + excludeFile);
+			logger.info("Unable to open file " + excludeFile, ex);
 		} catch(IOException ex) {
-			logger.info("Error reading file " + excludeFile);
+			logger.info("Error reading file " + excludeFile, ex);
 		}
 	}
 

File: test/VM_Test/src/j9vm/test/intermediateclasscreate/IntermediateClassCreateTestRunner.java
Patch:
@@ -104,9 +104,6 @@ public String getCustomCommandLineOptions() {
 			customOptions += "-Xshareclasses:name=intermediateclasscreatetest,destroy ";
 			break;
 		}
-		if (Integer.parseInt(javaVersion) >= 90) {
-			customOptions += " --add-exports=openj9.sharedclasses/com.ibm.oti.shared=ALL-UNNAMED ";
-		}
 		return customOptions;
 	}
 	

File: test/VM_Test/src/j9vm/test/invalidclasspath/SetClasspathTestRunner.java
Patch:
@@ -85,9 +85,6 @@ public String getCustomCommandLineOptions() {
 			customOptions += "-Xshareclasses:name=setclasspathtest,destroy ";
 			break;
 		}
-		if (Integer.parseInt(javaVersion) >= 90) {
-			customOptions += " --add-exports=openj9.sharedclasses/com.ibm.oti.shared=ALL-UNNAMED ";
-		}
 		return customOptions;
 	}
 	

File: test/VM_Test/src/j9vm/test/jarfileupdate/JarFileUpdateTestRunner.java
Patch:
@@ -106,9 +106,6 @@ public String getCustomCommandLineOptions() {
 			customOptions += "-Xshareclasses:name=jarfileupdatetest,destroy ";
 			break;
 		}
-		if (Integer.parseInt(javaVersion) >= 90) {
-			customOptions += " --add-exports=openj9.sharedclasses/com.ibm.oti.shared=ALL-UNNAMED ";
-		}
 		return customOptions;
 	}
 	

File: test/VM_Test/src/j9vm/test/multipleorphans/InvokeDynamicWithMultipleOrphanComparisonTestRunner.java
Patch:
@@ -74,9 +74,6 @@ public String getCustomCommandLineOptions() {
 			/* cleanup the cache */
 			customOptions += " -Xshareclasses:enableBCI,destroy,name=invokedynamictestcache";
 		}
-		if (Integer.parseInt(javaVersion) >= 90) {
-			customOptions += " --add-exports=openj9.sharedclasses/com.ibm.oti.shared=ALL-UNNAMED ";
-		}
 		return customOptions;
 	}
 	

File: jcl/src/com.ibm.dtfj/share/classes/com/ibm/dtfj/image/Image.java
Patch:
@@ -27,13 +27,12 @@
 import java.util.Properties;
 
 /**
- * <p>Represents an entire operating system image (e.g. a core file).</p> 
+ * <p>Represents an entire operating system image (for example, a core file).</p> 
  * 
  * <p>There are methods for accessing information about the architecture 
  * of the machine on which the image was running - hardware and 
  * operating system. The major feature, however, is the ability to 
  * iterate over the Address Spaces contained within the image.</p> 
- *
  */
 public interface Image {
 	

File: jcl/src/java.base/share/classes/java/lang/ClassCastException.java
Patch:
@@ -25,7 +25,7 @@
  *******************************************************************************/
 
 /**
- * This runtime exception is thrown when a program attempts to cast a an object
+ * This runtime exception is thrown when a program attempts to cast an object
  * to a type with which it is not compatible.
  * 
  * @version initial

File: jcl/src/java.base/share/classes/java/lang/ClassCastException.java
Patch:
@@ -25,7 +25,7 @@
  *******************************************************************************/
 
 /**
- * This runtime exception is thrown when a program attempts to cast a an object
+ * This runtime exception is thrown when a program attempts to cast an object
  * to a type with which it is not compatible.
  * 
  * @version initial

File: jcl/src/com.ibm.dtfj/share/classes/com/ibm/dtfj/image/Image.java
Patch:
@@ -27,13 +27,12 @@
 import java.util.Properties;
 
 /**
- * <p>Represents an entire operating system image (e.g. a core file).</p> 
+ * <p>Represents an entire operating system image (for example, a core file).</p> 
  * 
  * <p>There are methods for accessing information about the architecture 
  * of the machine on which the image was running - hardware and 
  * operating system. The major feature, however, is the ability to 
  * iterate over the Address Spaces contained within the image.</p> 
- *
  */
 public interface Image {
 	

